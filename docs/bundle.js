/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/querystring/decode.js":
/*!********************************************!*\
  !*** ./node_modules/querystring/decode.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (Array.isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};


/***/ }),

/***/ "./node_modules/querystring/encode.js":
/*!********************************************!*\
  !*** ./node_modules/querystring/encode.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return Object.keys(obj).map(function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (Array.isArray(obj[k])) {
        return obj[k].map(function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};


/***/ }),

/***/ "./node_modules/querystring/index.js":
/*!*******************************************!*\
  !*** ./node_modules/querystring/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring/encode.js");


/***/ }),

/***/ "./node_modules/querystringify/index.js":
/*!**********************************************!*\
  !*** ./node_modules/querystringify/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var has = Object.prototype.hasOwnProperty
  , undef;

/**
 * Decode a URI encoded string.
 *
 * @param {String} input The URI encoded string.
 * @returns {String|Null} The decoded string.
 * @api private
 */
function decode(input) {
  try {
    return decodeURIComponent(input.replace(/\+/g, ' '));
  } catch (e) {
    return null;
  }
}

/**
 * Attempts to encode a given input.
 *
 * @param {String} input The string that needs to be encoded.
 * @returns {String|Null} The encoded string.
 * @api private
 */
function encode(input) {
  try {
    return encodeURIComponent(input);
  } catch (e) {
    return null;
  }
}

/**
 * Simple query string parser.
 *
 * @param {String} query The query string that needs to be parsed.
 * @returns {Object}
 * @api public
 */
function querystring(query) {
  var parser = /([^=?#&]+)=?([^&]*)/g
    , result = {}
    , part;

  while (part = parser.exec(query)) {
    var key = decode(part[1])
      , value = decode(part[2]);

    //
    // Prevent overriding of existing properties. This ensures that build-in
    // methods like `toString` or __proto__ are not overriden by malicious
    // querystrings.
    //
    // In the case if failed decoding, we want to omit the key/value pairs
    // from the result.
    //
    if (key === null || value === null || key in result) continue;
    result[key] = value;
  }

  return result;
}

/**
 * Transform a query string to an object.
 *
 * @param {Object} obj Object that should be transformed.
 * @param {String} prefix Optional prefix.
 * @returns {String}
 * @api public
 */
function querystringify(obj, prefix) {
  prefix = prefix || '';

  var pairs = []
    , value
    , key;

  //
  // Optionally prefix with a '?' if needed
  //
  if ('string' !== typeof prefix) prefix = '?';

  for (key in obj) {
    if (has.call(obj, key)) {
      value = obj[key];

      //
      // Edge cases where we actually want to encode the value to an empty
      // string instead of the stringified value.
      //
      if (!value && (value === null || value === undef || isNaN(value))) {
        value = '';
      }

      key = encode(key);
      value = encode(value);

      //
      // If we failed to encode the strings, we should bail out as we don't
      // want to add invalid strings to the query.
      //
      if (key === null || value === null) continue;
      pairs.push(key +'='+ value);
    }
  }

  return pairs.length ? prefix + pairs.join('&') : '';
}

//
// Expose the module.
//
exports.stringify = querystringify;
exports.parse = querystring;


/***/ }),

/***/ "./node_modules/react-dev-utils/formatWebpackMessages.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-dev-utils/formatWebpackMessages.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



const friendlySyntaxErrorLabel = 'Syntax error:';

function isLikelyASyntaxError(message) {
  return message.indexOf(friendlySyntaxErrorLabel) !== -1;
}

// Cleans up webpack error messages.
function formatMessage(message) {
  let lines = [];

  if (typeof message === 'string') {
    lines = message.split('\n');
  } else if ('message' in message) {
    lines = message['message'].split('\n');
  } else if (Array.isArray(message)) {
    message.forEach(message => {
      if ('message' in message) {
        lines = message['message'].split('\n');
      }
    });
  }

  // Strip webpack-added headers off errors/warnings
  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js
  lines = lines.filter(line => !/Module [A-z ]+\(from/.test(line));

  // Transform parsing error into syntax error
  // TODO: move this to our ESLint formatter?
  lines = lines.map(line => {
    const parsingError = /Line (\d+):(?:(\d+):)?\s*Parsing error: (.+)$/.exec(
      line
    );
    if (!parsingError) {
      return line;
    }
    const [, errorLine, errorColumn, errorMessage] = parsingError;
    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;
  });

  message = lines.join('\n');
  // Smoosh syntax errors (commonly found in CSS)
  message = message.replace(
    /SyntaxError\s+\((\d+):(\d+)\)\s*(.+?)\n/g,
    `${friendlySyntaxErrorLabel} $3 ($1:$2)\n`
  );
  // Clean up export errors
  message = message.replace(
    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,
    `Attempted import error: '$1' is not exported from '$2'.`
  );
  message = message.replace(
    /^.*export 'default' \(imported as '(.+?)'\) was not found in '(.+?)'.*$/gm,
    `Attempted import error: '$2' does not contain a default export (imported as '$1').`
  );
  message = message.replace(
    /^.*export '(.+?)' \(imported as '(.+?)'\) was not found in '(.+?)'.*$/gm,
    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`
  );
  lines = message.split('\n');

  // Remove leading newline
  if (lines.length > 2 && lines[1].trim() === '') {
    lines.splice(1, 1);
  }
  // Clean up file name
  lines[0] = lines[0].replace(/^(.*) \d+:\d+-\d+$/, '$1');

  // Cleans up verbose "module not found" messages for files and packages.
  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {
    lines = [
      lines[0],
      lines[1]
        .replace('Error: ', '')
        .replace('Module not found: Cannot find file:', 'Cannot find file:'),
    ];
  }

  // Add helpful message for users trying to use Sass for the first time
  if (lines[1] && lines[1].match(/Cannot find module.+sass/)) {
    lines[1] = 'To import Sass files, you first need to install sass.\n';
    lines[1] +=
      'Run `npm install sass` or `yarn add sass` inside your workspace.';
  }

  message = lines.join('\n');
  // Internal stacks are generally useless so we strip them... with the
  // exception of stacks containing `webpack:` because they're normally
  // from user code generated by webpack. For more information see
  // https://github.com/facebook/create-react-app/pull/1050
  message = message.replace(
    /^\s*at\s((?!webpack:).)*:\d+:\d+[\s)]*(\n|$)/gm,
    ''
  ); // at ... ...:x:y
  message = message.replace(/^\s*at\s<anonymous>(\n|$)/gm, ''); // at <anonymous>
  lines = message.split('\n');

  // Remove duplicated newlines
  lines = lines.filter(
    (line, index, arr) =>
      index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()
  );

  // Reassemble the message
  message = lines.join('\n');
  return message.trim();
}

function formatWebpackMessages(json) {
  const formattedErrors = json.errors.map(formatMessage);
  const formattedWarnings = json.warnings.map(formatMessage);
  const result = { errors: formattedErrors, warnings: formattedWarnings };
  if (result.errors.some(isLikelyASyntaxError)) {
    // If there are any syntax errors, show just them.
    result.errors = result.errors.filter(isLikelyASyntaxError);
  }
  return result;
}

module.exports = formatWebpackMessages;


/***/ }),

/***/ "./node_modules/react-dev-utils/launchEditorEndpoint.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-dev-utils/launchEditorEndpoint.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


// TODO: we might want to make this injectable to support DEV-time non-root URLs.
module.exports = '/__open-stack-frame-in-editor';


/***/ }),

/***/ "./node_modules/react-error-overlay/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-error-overlay/lib/index.js ***!
  \*******************************************************/
/***/ ((module) => {

!function(e,t){ true?module.exports=t():0}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=15)}([function(e,t,r){e.exports=r(8)},function(e,t){t.getArg=function(e,t,r){if(t in e)return e[t];if(3===arguments.length)return r;throw new Error('"'+t+'" is a required argument.')};var r=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,n=/^data:.+\,.+$/;function o(e){var t=e.match(r);return t?{scheme:t[1],auth:t[2],host:t[3],port:t[4],path:t[5]}:null}function a(e){var t="";return e.scheme&&(t+=e.scheme+":"),t+="//",e.auth&&(t+=e.auth+"@"),e.host&&(t+=e.host),e.port&&(t+=":"+e.port),e.path&&(t+=e.path),t}function i(e){var r=e,n=o(e);if(n){if(!n.path)return e;r=n.path}for(var i,l=t.isAbsolute(r),u=r.split(/\/+/),c=0,s=u.length-1;s>=0;s--)"."===(i=u[s])?u.splice(s,1):".."===i?c++:c>0&&(""===i?(u.splice(s+1,c),c=0):(u.splice(s,2),c--));return""===(r=u.join("/"))&&(r=l?"/":"."),n?(n.path=r,a(n)):r}t.urlParse=o,t.urlGenerate=a,t.normalize=i,t.join=function(e,t){""===e&&(e="."),""===t&&(t=".");var r=o(t),l=o(e);if(l&&(e=l.path||"/"),r&&!r.scheme)return l&&(r.scheme=l.scheme),a(r);if(r||t.match(n))return t;if(l&&!l.host&&!l.path)return l.host=t,a(l);var u="/"===t.charAt(0)?t:i(e.replace(/\/+$/,"")+"/"+t);return l?(l.path=u,a(l)):u},t.isAbsolute=function(e){return"/"===e.charAt(0)||!!e.match(r)},t.relative=function(e,t){""===e&&(e="."),e=e.replace(/\/$/,"");for(var r=0;0!==t.indexOf(e+"/");){var n=e.lastIndexOf("/");if(n<0)return t;if((e=e.slice(0,n)).match(/^([^\/]+:\/)?\/*$/))return t;++r}return Array(r+1).join("../")+t.substr(e.length+1)};var l=!("__proto__"in Object.create(null));function u(e){return e}function c(e){if(!e)return!1;var t=e.length;if(t<9)return!1;if(95!==e.charCodeAt(t-1)||95!==e.charCodeAt(t-2)||111!==e.charCodeAt(t-3)||116!==e.charCodeAt(t-4)||111!==e.charCodeAt(t-5)||114!==e.charCodeAt(t-6)||112!==e.charCodeAt(t-7)||95!==e.charCodeAt(t-8)||95!==e.charCodeAt(t-9))return!1;for(var r=t-10;r>=0;r--)if(36!==e.charCodeAt(r))return!1;return!0}function s(e,t){return e===t?0:e>t?1:-1}t.toSetString=l?u:function(e){return c(e)?"$"+e:e},t.fromSetString=l?u:function(e){return c(e)?e.slice(1):e},t.compareByOriginalPositions=function(e,t,r){var n=e.source-t.source;return 0!==n?n:0!==(n=e.originalLine-t.originalLine)?n:0!==(n=e.originalColumn-t.originalColumn)||r?n:0!==(n=e.generatedColumn-t.generatedColumn)?n:0!==(n=e.generatedLine-t.generatedLine)?n:e.name-t.name},t.compareByGeneratedPositionsDeflated=function(e,t,r){var n=e.generatedLine-t.generatedLine;return 0!==n?n:0!==(n=e.generatedColumn-t.generatedColumn)||r?n:0!==(n=e.source-t.source)?n:0!==(n=e.originalLine-t.originalLine)?n:0!==(n=e.originalColumn-t.originalColumn)?n:e.name-t.name},t.compareByGeneratedPositionsInflated=function(e,t){var r=e.generatedLine-t.generatedLine;return 0!==r?r:0!==(r=e.generatedColumn-t.generatedColumn)?r:0!==(r=s(e.source,t.source))?r:0!==(r=e.originalLine-t.originalLine)?r:0!==(r=e.originalColumn-t.originalColumn)?r:s(e.name,t.name)}},function(e,t){function r(e,t){for(var r=0,n=e.length-1;n>=0;n--){var o=e[n];"."===o?e.splice(n,1):".."===o?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r--;r)e.unshift("..");return e}function n(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}t.resolve=function(){for(var e="",t=!1,o=arguments.length-1;o>=-1&&!t;o--){var a=o>=0?arguments[o]:process.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(e=a+"/"+e,t="/"===a.charAt(0))}return(t?"/":"")+(e=r(n(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."},t.normalize=function(e){var a=t.isAbsolute(e),i="/"===o(e,-1);return(e=r(n(e.split("/"),(function(e){return!!e})),!a).join("/"))||a||(e="."),e&&i&&(e+="/"),(a?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(n(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,r){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=t.resolve(e).substr(1),r=t.resolve(r).substr(1);for(var o=n(e.split("/")),a=n(r.split("/")),i=Math.min(o.length,a.length),l=i,u=0;u<i;u++)if(o[u]!==a[u]){l=u;break}var c=[];for(u=l;u<o.length;u++)c.push("..");return(c=c.concat(a.slice(l))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),r=47===t,n=-1,o=!0,a=e.length-1;a>=1;--a)if(47===(t=e.charCodeAt(a))){if(!o){n=a;break}}else o=!1;return-1===n?r?"/":".":r&&1===n?"/":e.slice(0,n)},t.basename=function(e,t){var r=function(e){"string"!=typeof e&&(e+="");var t,r=0,n=-1,o=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!o){r=t+1;break}}else-1===n&&(o=!1,n=t+1);return-1===n?"":e.slice(r,n)}(e);return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},t.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,r=0,n=-1,o=!0,a=0,i=e.length-1;i>=0;--i){var l=e.charCodeAt(i);if(47!==l)-1===n&&(o=!1,n=i+1),46===l?-1===t?t=i:1!==a&&(a=1):-1!==t&&(a=-1);else if(!o){r=i+1;break}}return-1===t||-1===n||0===a||1===a&&t===n-1&&t===r+1?"":e.slice(t,n)};var o= true?function(e,t,r){return e.substr(t,r)}:0},function(e,t,r){t.SourceMapGenerator=r(4).SourceMapGenerator,t.SourceMapConsumer=r(11).SourceMapConsumer,t.SourceNode=r(14).SourceNode},function(e,t,r){var n=r(5),o=r(1),a=r(6).ArraySet,i=r(10).MappingList;function l(e){e||(e={}),this._file=o.getArg(e,"file",null),this._sourceRoot=o.getArg(e,"sourceRoot",null),this._skipValidation=o.getArg(e,"skipValidation",!1),this._sources=new a,this._names=new a,this._mappings=new i,this._sourcesContents=null}l.prototype._version=3,l.fromSourceMap=function(e){var t=e.sourceRoot,r=new l({file:e.file,sourceRoot:t});return e.eachMapping((function(e){var n={generated:{line:e.generatedLine,column:e.generatedColumn}};null!=e.source&&(n.source=e.source,null!=t&&(n.source=o.relative(t,n.source)),n.original={line:e.originalLine,column:e.originalColumn},null!=e.name&&(n.name=e.name)),r.addMapping(n)})),e.sources.forEach((function(t){var n=e.sourceContentFor(t);null!=n&&r.setSourceContent(t,n)})),r},l.prototype.addMapping=function(e){var t=o.getArg(e,"generated"),r=o.getArg(e,"original",null),n=o.getArg(e,"source",null),a=o.getArg(e,"name",null);this._skipValidation||this._validateMapping(t,r,n,a),null!=n&&(n=String(n),this._sources.has(n)||this._sources.add(n)),null!=a&&(a=String(a),this._names.has(a)||this._names.add(a)),this._mappings.add({generatedLine:t.line,generatedColumn:t.column,originalLine:null!=r&&r.line,originalColumn:null!=r&&r.column,source:n,name:a})},l.prototype.setSourceContent=function(e,t){var r=e;null!=this._sourceRoot&&(r=o.relative(this._sourceRoot,r)),null!=t?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[o.toSetString(r)]=t):this._sourcesContents&&(delete this._sourcesContents[o.toSetString(r)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},l.prototype.applySourceMap=function(e,t,r){var n=t;if(null==t){if(null==e.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');n=e.file}var i=this._sourceRoot;null!=i&&(n=o.relative(i,n));var l=new a,u=new a;this._mappings.unsortedForEach((function(t){if(t.source===n&&null!=t.originalLine){var a=e.originalPositionFor({line:t.originalLine,column:t.originalColumn});null!=a.source&&(t.source=a.source,null!=r&&(t.source=o.join(r,t.source)),null!=i&&(t.source=o.relative(i,t.source)),t.originalLine=a.line,t.originalColumn=a.column,null!=a.name&&(t.name=a.name))}var c=t.source;null==c||l.has(c)||l.add(c);var s=t.name;null==s||u.has(s)||u.add(s)}),this),this._sources=l,this._names=u,e.sources.forEach((function(t){var n=e.sourceContentFor(t);null!=n&&(null!=r&&(t=o.join(r,t)),null!=i&&(t=o.relative(i,t)),this.setSourceContent(t,n))}),this)},l.prototype._validateMapping=function(e,t,r,n){if(t&&"number"!=typeof t.line&&"number"!=typeof t.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if((!(e&&"line"in e&&"column"in e&&e.line>0&&e.column>=0)||t||r||n)&&!(e&&"line"in e&&"column"in e&&t&&"line"in t&&"column"in t&&e.line>0&&e.column>=0&&t.line>0&&t.column>=0&&r))throw new Error("Invalid mapping: "+JSON.stringify({generated:e,source:r,original:t,name:n}))},l.prototype._serializeMappings=function(){for(var e,t,r,a,i=0,l=1,u=0,c=0,s=0,f=0,d="",p=this._mappings.toArray(),h=0,g=p.length;h<g;h++){if(e="",(t=p[h]).generatedLine!==l)for(i=0;t.generatedLine!==l;)e+=";",l++;else if(h>0){if(!o.compareByGeneratedPositionsInflated(t,p[h-1]))continue;e+=","}e+=n.encode(t.generatedColumn-i),i=t.generatedColumn,null!=t.source&&(a=this._sources.indexOf(t.source),e+=n.encode(a-f),f=a,e+=n.encode(t.originalLine-1-c),c=t.originalLine-1,e+=n.encode(t.originalColumn-u),u=t.originalColumn,null!=t.name&&(r=this._names.indexOf(t.name),e+=n.encode(r-s),s=r)),d+=e}return d},l.prototype._generateSourcesContent=function(e,t){return e.map((function(e){if(!this._sourcesContents)return null;null!=t&&(e=o.relative(t,e));var r=o.toSetString(e);return Object.prototype.hasOwnProperty.call(this._sourcesContents,r)?this._sourcesContents[r]:null}),this)},l.prototype.toJSON=function(){var e={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(e.file=this._file),null!=this._sourceRoot&&(e.sourceRoot=this._sourceRoot),this._sourcesContents&&(e.sourcesContent=this._generateSourcesContent(e.sources,e.sourceRoot)),e},l.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.SourceMapGenerator=l},function(e,t,r){var n=r(9);t.encode=function(e){var t,r="",o=function(e){return e<0?1+(-e<<1):0+(e<<1)}(e);do{t=31&o,(o>>>=5)>0&&(t|=32),r+=n.encode(t)}while(o>0);return r},t.decode=function(e,t,r){var o,a,i,l,u=e.length,c=0,s=0;do{if(t>=u)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(a=n.decode(e.charCodeAt(t++))))throw new Error("Invalid base64 digit: "+e.charAt(t-1));o=!!(32&a),c+=(a&=31)<<s,s+=5}while(o);r.value=(l=(i=c)>>1,1==(1&i)?-l:l),r.rest=t}},function(e,t,r){var n=r(1),o=Object.prototype.hasOwnProperty,a="undefined"!=typeof Map;function i(){this._array=[],this._set=a?new Map:Object.create(null)}i.fromArray=function(e,t){for(var r=new i,n=0,o=e.length;n<o;n++)r.add(e[n],t);return r},i.prototype.size=function(){return a?this._set.size:Object.getOwnPropertyNames(this._set).length},i.prototype.add=function(e,t){var r=a?e:n.toSetString(e),i=a?this.has(e):o.call(this._set,r),l=this._array.length;i&&!t||this._array.push(e),i||(a?this._set.set(e,l):this._set[r]=l)},i.prototype.has=function(e){if(a)return this._set.has(e);var t=n.toSetString(e);return o.call(this._set,t)},i.prototype.indexOf=function(e){if(a){var t=this._set.get(e);if(t>=0)return t}else{var r=n.toSetString(e);if(o.call(this._set,r))return this._set[r]}throw new Error('"'+e+'" is not in the set.')},i.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error("No element indexed by "+e)},i.prototype.toArray=function(){return this._array.slice()},t.ArraySet=i},function(e,t,r){"use strict";function n(e){return Array.isArray(e)||(e=[e]),Promise.all(e.map((function(e){return e.then((function(e){return{isFulfilled:!0,isRejected:!1,value:e}})).catch((function(e){return{isFulfilled:!1,isRejected:!0,reason:e}}))})))}Object.defineProperty(t,"__esModule",{value:!0}),t.settle=n,t.default=n},function(e,t,r){var n=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof m?t:m,a=Object.create(o.prototype),i=new T(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return L()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=s(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function s(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function m(){}function v(){}function y(){}var b={};b[a]=function(){return this};var w=Object.getPrototypeOf,k=w&&w(w(P([])));k&&k!==r&&n.call(k,a)&&(b=k);var E=y.prototype=m.prototype=Object.create(b);function S(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){var r;this._invoke=function(o,a){function i(){return new t((function(r,i){!function r(o,a,i,l){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}(o,a,r,i)}))}return r=r?r.then(i,i):i()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var o=s(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:L}}function L(){return{value:t,done:!0}}return v.prototype=E.constructor=y,y.constructor=v,v.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},S(x.prototype),x.prototype[i]=function(){return this},e.AsyncIterator=x,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new x(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},S(E),u(E,l,"Generator"),E[a]=function(){return this},E.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(O),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),O(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;O(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t){var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");t.encode=function(e){if(0<=e&&e<r.length)return r[e];throw new TypeError("Must be between 0 and 63: "+e)},t.decode=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1}},function(e,t,r){var n=r(1);function o(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}o.prototype.unsortedForEach=function(e,t){this._array.forEach(e,t)},o.prototype.add=function(e){var t,r,o,a,i,l;t=this._last,r=e,o=t.generatedLine,a=r.generatedLine,i=t.generatedColumn,l=r.generatedColumn,a>o||a==o&&l>=i||n.compareByGeneratedPositionsInflated(t,r)<=0?(this._last=e,this._array.push(e)):(this._sorted=!1,this._array.push(e))},o.prototype.toArray=function(){return this._sorted||(this._array.sort(n.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},t.MappingList=o},function(e,t,r){var n=r(1),o=r(12),a=r(6).ArraySet,i=r(5),l=r(13).quickSort;function u(e){var t=e;return"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,""))),null!=t.sections?new f(t):new c(t)}function c(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var r=n.getArg(t,"version"),o=n.getArg(t,"sources"),i=n.getArg(t,"names",[]),l=n.getArg(t,"sourceRoot",null),u=n.getArg(t,"sourcesContent",null),c=n.getArg(t,"mappings"),s=n.getArg(t,"file",null);if(r!=this._version)throw new Error("Unsupported version: "+r);o=o.map(String).map(n.normalize).map((function(e){return l&&n.isAbsolute(l)&&n.isAbsolute(e)?n.relative(l,e):e})),this._names=a.fromArray(i.map(String),!0),this._sources=a.fromArray(o,!0),this.sourceRoot=l,this.sourcesContent=u,this._mappings=c,this.file=s}function s(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}function f(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var r=n.getArg(t,"version"),o=n.getArg(t,"sections");if(r!=this._version)throw new Error("Unsupported version: "+r);this._sources=new a,this._names=new a;var i={line:-1,column:0};this._sections=o.map((function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var t=n.getArg(e,"offset"),r=n.getArg(t,"line"),o=n.getArg(t,"column");if(r<i.line||r===i.line&&o<i.column)throw new Error("Section offsets must be ordered and non-overlapping.");return i=t,{generatedOffset:{generatedLine:r+1,generatedColumn:o+1},consumer:new u(n.getArg(e,"map"))}}))}u.fromSourceMap=function(e){return c.fromSourceMap(e)},u.prototype._version=3,u.prototype.__generatedMappings=null,Object.defineProperty(u.prototype,"_generatedMappings",{get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),u.prototype.__originalMappings=null,Object.defineProperty(u.prototype,"_originalMappings",{get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),u.prototype._charIsMappingSeparator=function(e,t){var r=e.charAt(t);return";"===r||","===r},u.prototype._parseMappings=function(e,t){throw new Error("Subclasses must implement _parseMappings")},u.GENERATED_ORDER=1,u.ORIGINAL_ORDER=2,u.GREATEST_LOWER_BOUND=1,u.LEAST_UPPER_BOUND=2,u.prototype.eachMapping=function(e,t,r){var o,a=t||null;switch(r||u.GENERATED_ORDER){case u.GENERATED_ORDER:o=this._generatedMappings;break;case u.ORIGINAL_ORDER:o=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var i=this.sourceRoot;o.map((function(e){var t=null===e.source?null:this._sources.at(e.source);return null!=t&&null!=i&&(t=n.join(i,t)),{source:t,generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}}),this).forEach(e,a)},u.prototype.allGeneratedPositionsFor=function(e){var t=n.getArg(e,"line"),r={source:n.getArg(e,"source"),originalLine:t,originalColumn:n.getArg(e,"column",0)};if(null!=this.sourceRoot&&(r.source=n.relative(this.sourceRoot,r.source)),!this._sources.has(r.source))return[];r.source=this._sources.indexOf(r.source);var a=[],i=this._findMapping(r,this._originalMappings,"originalLine","originalColumn",n.compareByOriginalPositions,o.LEAST_UPPER_BOUND);if(i>=0){var l=this._originalMappings[i];if(void 0===e.column)for(var u=l.originalLine;l&&l.originalLine===u;)a.push({line:n.getArg(l,"generatedLine",null),column:n.getArg(l,"generatedColumn",null),lastColumn:n.getArg(l,"lastGeneratedColumn",null)}),l=this._originalMappings[++i];else for(var c=l.originalColumn;l&&l.originalLine===t&&l.originalColumn==c;)a.push({line:n.getArg(l,"generatedLine",null),column:n.getArg(l,"generatedColumn",null),lastColumn:n.getArg(l,"lastGeneratedColumn",null)}),l=this._originalMappings[++i]}return a},t.SourceMapConsumer=u,c.prototype=Object.create(u.prototype),c.prototype.consumer=u,c.fromSourceMap=function(e){var t=Object.create(c.prototype),r=t._names=a.fromArray(e._names.toArray(),!0),o=t._sources=a.fromArray(e._sources.toArray(),!0);t.sourceRoot=e._sourceRoot,t.sourcesContent=e._generateSourcesContent(t._sources.toArray(),t.sourceRoot),t.file=e._file;for(var i=e._mappings.toArray().slice(),u=t.__generatedMappings=[],f=t.__originalMappings=[],d=0,p=i.length;d<p;d++){var h=i[d],g=new s;g.generatedLine=h.generatedLine,g.generatedColumn=h.generatedColumn,h.source&&(g.source=o.indexOf(h.source),g.originalLine=h.originalLine,g.originalColumn=h.originalColumn,h.name&&(g.name=r.indexOf(h.name)),f.push(g)),u.push(g)}return l(t.__originalMappings,n.compareByOriginalPositions),t},c.prototype._version=3,Object.defineProperty(c.prototype,"sources",{get:function(){return this._sources.toArray().map((function(e){return null!=this.sourceRoot?n.join(this.sourceRoot,e):e}),this)}}),c.prototype._parseMappings=function(e,t){for(var r,o,a,u,c,f=1,d=0,p=0,h=0,g=0,m=0,v=e.length,y=0,b={},w={},k=[],E=[];y<v;)if(";"===e.charAt(y))f++,y++,d=0;else if(","===e.charAt(y))y++;else{for((r=new s).generatedLine=f,u=y;u<v&&!this._charIsMappingSeparator(e,u);u++);if(a=b[o=e.slice(y,u)])y+=o.length;else{for(a=[];y<u;)i.decode(e,y,w),c=w.value,y=w.rest,a.push(c);if(2===a.length)throw new Error("Found a source, but no line and column");if(3===a.length)throw new Error("Found a source and line, but no column");b[o]=a}r.generatedColumn=d+a[0],d=r.generatedColumn,a.length>1&&(r.source=g+a[1],g+=a[1],r.originalLine=p+a[2],p=r.originalLine,r.originalLine+=1,r.originalColumn=h+a[3],h=r.originalColumn,a.length>4&&(r.name=m+a[4],m+=a[4])),E.push(r),"number"==typeof r.originalLine&&k.push(r)}l(E,n.compareByGeneratedPositionsDeflated),this.__generatedMappings=E,l(k,n.compareByOriginalPositions),this.__originalMappings=k},c.prototype._findMapping=function(e,t,r,n,a,i){if(e[r]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[r]);if(e[n]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[n]);return o.search(e,t,a,i)},c.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var t=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var r=this._generatedMappings[e+1];if(t.generatedLine===r.generatedLine){t.lastGeneratedColumn=r.generatedColumn-1;continue}}t.lastGeneratedColumn=1/0}},c.prototype.originalPositionFor=function(e){var t={generatedLine:n.getArg(e,"line"),generatedColumn:n.getArg(e,"column")},r=this._findMapping(t,this._generatedMappings,"generatedLine","generatedColumn",n.compareByGeneratedPositionsDeflated,n.getArg(e,"bias",u.GREATEST_LOWER_BOUND));if(r>=0){var o=this._generatedMappings[r];if(o.generatedLine===t.generatedLine){var a=n.getArg(o,"source",null);null!==a&&(a=this._sources.at(a),null!=this.sourceRoot&&(a=n.join(this.sourceRoot,a)));var i=n.getArg(o,"name",null);return null!==i&&(i=this._names.at(i)),{source:a,line:n.getArg(o,"originalLine",null),column:n.getArg(o,"originalColumn",null),name:i}}}return{source:null,line:null,column:null,name:null}},c.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(e){return null==e})))},c.prototype.sourceContentFor=function(e,t){if(!this.sourcesContent)return null;if(null!=this.sourceRoot&&(e=n.relative(this.sourceRoot,e)),this._sources.has(e))return this.sourcesContent[this._sources.indexOf(e)];var r;if(null!=this.sourceRoot&&(r=n.urlParse(this.sourceRoot))){var o=e.replace(/^file:\/\//,"");if("file"==r.scheme&&this._sources.has(o))return this.sourcesContent[this._sources.indexOf(o)];if((!r.path||"/"==r.path)&&this._sources.has("/"+e))return this.sourcesContent[this._sources.indexOf("/"+e)]}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},c.prototype.generatedPositionFor=function(e){var t=n.getArg(e,"source");if(null!=this.sourceRoot&&(t=n.relative(this.sourceRoot,t)),!this._sources.has(t))return{line:null,column:null,lastColumn:null};var r={source:t=this._sources.indexOf(t),originalLine:n.getArg(e,"line"),originalColumn:n.getArg(e,"column")},o=this._findMapping(r,this._originalMappings,"originalLine","originalColumn",n.compareByOriginalPositions,n.getArg(e,"bias",u.GREATEST_LOWER_BOUND));if(o>=0){var a=this._originalMappings[o];if(a.source===r.source)return{line:n.getArg(a,"generatedLine",null),column:n.getArg(a,"generatedColumn",null),lastColumn:n.getArg(a,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}},t.BasicSourceMapConsumer=c,f.prototype=Object.create(u.prototype),f.prototype.constructor=u,f.prototype._version=3,Object.defineProperty(f.prototype,"sources",{get:function(){for(var e=[],t=0;t<this._sections.length;t++)for(var r=0;r<this._sections[t].consumer.sources.length;r++)e.push(this._sections[t].consumer.sources[r]);return e}}),f.prototype.originalPositionFor=function(e){var t={generatedLine:n.getArg(e,"line"),generatedColumn:n.getArg(e,"column")},r=o.search(t,this._sections,(function(e,t){var r=e.generatedLine-t.generatedOffset.generatedLine;return r||e.generatedColumn-t.generatedOffset.generatedColumn})),a=this._sections[r];return a?a.consumer.originalPositionFor({line:t.generatedLine-(a.generatedOffset.generatedLine-1),column:t.generatedColumn-(a.generatedOffset.generatedLine===t.generatedLine?a.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},f.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(e){return e.consumer.hasContentsOfAllSources()}))},f.prototype.sourceContentFor=function(e,t){for(var r=0;r<this._sections.length;r++){var n=this._sections[r].consumer.sourceContentFor(e,!0);if(n)return n}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},f.prototype.generatedPositionFor=function(e){for(var t=0;t<this._sections.length;t++){var r=this._sections[t];if(-1!==r.consumer.sources.indexOf(n.getArg(e,"source"))){var o=r.consumer.generatedPositionFor(e);if(o)return{line:o.line+(r.generatedOffset.generatedLine-1),column:o.column+(r.generatedOffset.generatedLine===o.line?r.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},f.prototype._parseMappings=function(e,t){this.__generatedMappings=[],this.__originalMappings=[];for(var r=0;r<this._sections.length;r++)for(var o=this._sections[r],a=o.consumer._generatedMappings,i=0;i<a.length;i++){var u=a[i],c=o.consumer._sources.at(u.source);null!==o.consumer.sourceRoot&&(c=n.join(o.consumer.sourceRoot,c)),this._sources.add(c),c=this._sources.indexOf(c);var s=o.consumer._names.at(u.name);this._names.add(s),s=this._names.indexOf(s);var f={source:c,generatedLine:u.generatedLine+(o.generatedOffset.generatedLine-1),generatedColumn:u.generatedColumn+(o.generatedOffset.generatedLine===u.generatedLine?o.generatedOffset.generatedColumn-1:0),originalLine:u.originalLine,originalColumn:u.originalColumn,name:s};this.__generatedMappings.push(f),"number"==typeof f.originalLine&&this.__originalMappings.push(f)}l(this.__generatedMappings,n.compareByGeneratedPositionsDeflated),l(this.__originalMappings,n.compareByOriginalPositions)},t.IndexedSourceMapConsumer=f},function(e,t){t.GREATEST_LOWER_BOUND=1,t.LEAST_UPPER_BOUND=2,t.search=function(e,r,n,o){if(0===r.length)return-1;var a=function e(r,n,o,a,i,l){var u=Math.floor((n-r)/2)+r,c=i(o,a[u],!0);return 0===c?u:c>0?n-u>1?e(u,n,o,a,i,l):l==t.LEAST_UPPER_BOUND?n<a.length?n:-1:u:u-r>1?e(r,u,o,a,i,l):l==t.LEAST_UPPER_BOUND?u:r<0?-1:r}(-1,r.length,e,r,n,o||t.GREATEST_LOWER_BOUND);if(a<0)return-1;for(;a-1>=0&&0===n(r[a],r[a-1],!0);)--a;return a}},function(e,t){function r(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function n(e,t,o,a){if(o<a){var i=o-1;r(e,(s=o,f=a,Math.round(s+Math.random()*(f-s))),a);for(var l=e[a],u=o;u<a;u++)t(e[u],l)<=0&&r(e,i+=1,u);r(e,i+1,u);var c=i+1;n(e,t,o,c-1),n(e,t,c+1,a)}var s,f}t.quickSort=function(e,t){n(e,t,0,e.length-1)}},function(e,t,r){var n=r(4).SourceMapGenerator,o=r(1),a=/(\r?\n)/,i="$$$isSourceNode$$$";function l(e,t,r,n,o){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==t?null:t,this.source=null==r?null:r,this.name=null==o?null:o,this[i]=!0,null!=n&&this.add(n)}l.fromStringWithSourceMap=function(e,t,r){var n=new l,i=e.split(a),u=0,c=function(){return e()+(e()||"");function e(){return u<i.length?i[u++]:void 0}},s=1,f=0,d=null;return t.eachMapping((function(e){if(null!==d){if(!(s<e.generatedLine)){var t=(r=i[u]).substr(0,e.generatedColumn-f);return i[u]=r.substr(e.generatedColumn-f),f=e.generatedColumn,p(d,t),void(d=e)}p(d,c()),s++,f=0}for(;s<e.generatedLine;)n.add(c()),s++;if(f<e.generatedColumn){var r=i[u];n.add(r.substr(0,e.generatedColumn)),i[u]=r.substr(e.generatedColumn),f=e.generatedColumn}d=e}),this),u<i.length&&(d&&p(d,c()),n.add(i.splice(u).join(""))),t.sources.forEach((function(e){var a=t.sourceContentFor(e);null!=a&&(null!=r&&(e=o.join(r,e)),n.setSourceContent(e,a))})),n;function p(e,t){if(null===e||void 0===e.source)n.add(t);else{var a=r?o.join(r,e.source):e.source;n.add(new l(e.originalLine,e.originalColumn,a,t,e.name))}}},l.prototype.add=function(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this);else{if(!e[i]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this},l.prototype.prepend=function(e){if(Array.isArray(e))for(var t=e.length-1;t>=0;t--)this.prepend(e[t]);else{if(!e[i]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this},l.prototype.walk=function(e){for(var t,r=0,n=this.children.length;r<n;r++)(t=this.children[r])[i]?t.walk(e):""!==t&&e(t,{source:this.source,line:this.line,column:this.column,name:this.name})},l.prototype.join=function(e){var t,r,n=this.children.length;if(n>0){for(t=[],r=0;r<n-1;r++)t.push(this.children[r]),t.push(e);t.push(this.children[r]),this.children=t}return this},l.prototype.replaceRight=function(e,t){var r=this.children[this.children.length-1];return r[i]?r.replaceRight(e,t):"string"==typeof r?this.children[this.children.length-1]=r.replace(e,t):this.children.push("".replace(e,t)),this},l.prototype.setSourceContent=function(e,t){this.sourceContents[o.toSetString(e)]=t},l.prototype.walkSourceContents=function(e){for(var t=0,r=this.children.length;t<r;t++)this.children[t][i]&&this.children[t].walkSourceContents(e);var n=Object.keys(this.sourceContents);for(t=0,r=n.length;t<r;t++)e(o.fromSetString(n[t]),this.sourceContents[n[t]])},l.prototype.toString=function(){var e="";return this.walk((function(t){e+=t})),e},l.prototype.toStringWithSourceMap=function(e){var t={code:"",line:1,column:0},r=new n(e),o=!1,a=null,i=null,l=null,u=null;return this.walk((function(e,n){t.code+=e,null!==n.source&&null!==n.line&&null!==n.column?(a===n.source&&i===n.line&&l===n.column&&u===n.name||r.addMapping({source:n.source,original:{line:n.line,column:n.column},generated:{line:t.line,column:t.column},name:n.name}),a=n.source,i=n.line,l=n.column,u=n.name,o=!0):o&&(r.addMapping({generated:{line:t.line,column:t.column}}),a=null,o=!1);for(var c=0,s=e.length;c<s;c++)10===e.charCodeAt(c)?(t.line++,t.column=0,c+1===s?(a=null,o=!1):o&&r.addMapping({source:n.source,original:{line:n.line,column:n.column},generated:{line:t.line,column:t.column},name:n.name})):t.column++})),this.walkSourceContents((function(e,t){r.setSourceContent(e,t)})),{code:t.code,map:r}},t.SourceNode=l},function(e,t,r){"use strict";r.r(t),r.d(t,"setEditorHandler",(function(){return ue})),r.d(t,"reportBuildError",(function(){return ce})),r.d(t,"reportRuntimeError",(function(){return se})),r.d(t,"dismissBuildError",(function(){return fe})),r.d(t,"startReportingRuntimeErrors",(function(){return de})),r.d(t,"dismissRuntimeErrors",(function(){return he})),r.d(t,"stopReportingRuntimeErrors",(function(){return ge}));var n=null;function o(e,t){if(t.error){var r=t.error;r instanceof Error?e(r):e(new Error(r))}}function a(e,t){null===n&&(n=o.bind(void 0,t),e.addEventListener("error",n))}var i=null;function l(e,t){if(null==t||null==t.reason)return e(new Error("Unknown"));var r=t.reason;return r instanceof Error?e(r):e(new Error(r))}function u(e,t){null===i&&(i=l.bind(void 0,t),e.addEventListener("unhandledrejection",i))}var c=!1,s=10,f=50;var d=[],p=function(){"undefined"!=typeof console&&(console.reactStack=function(e){return d.push(e)},console.reactStackEnd=function(e){return d.pop()})},h=function(){"undefined"!=typeof console&&(console.reactStack=void 0,console.reactStackEnd=void 0)},g=function(e,t){if("undefined"!=typeof console){var r=console[e];"function"==typeof r&&(console[e]=function(){try{var e=arguments[0];"string"==typeof e&&d.length>0&&t(e,d[d.length-1])}catch(e){setTimeout((function(){throw e}))}return r.apply(this,arguments)})}};function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e,t,r){return(v=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&m(o,r.prototype),o}).apply(null,arguments)}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function b(e){return function(e){if(Array.isArray(e))return y(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function k(e,t,r){return t&&w(e.prototype,t),r&&w(e,r),e}function E(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var S=function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];E(this,e),this.lineNumber=t,this.content=r,this.highlight=n},x=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null,s=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null;E(this,e),t&&0===t.indexOf("Object.")&&(t=t.slice("Object.".length)),"friendlySyntaxErrorLabel"!==t&&"exports.__esModule"!==t&&"<anonymous>"!==t&&t||(t=null),this.functionName=t,this.fileName=r,this.lineNumber=n,this.columnNumber=o,this._originalFunctionName=i,this._originalFileName=l,this._originalLineNumber=u,this._originalColumnNumber=c,this._scriptCode=a,this._originalScriptCode=s}return k(e,[{key:"getFunctionName",value:function(){return this.functionName||"(anonymous function)"}},{key:"getSource",value:function(){var e="";return null!=this.fileName&&(e+=this.fileName+":"),null!=this.lineNumber&&(e+=this.lineNumber+":"),null!=this.columnNumber&&(e+=this.columnNumber+":"),e.slice(0,-1)}},{key:"toString",value:function(){var e=this.getFunctionName(),t=this.getSource();return"".concat(e).concat(t?" (".concat(t,")"):"")}}]),e}(),_=/\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;function C(e){return _.exec(e).slice(1).map((function(e){var t=Number(e);return isNaN(t)?e:t}))}var O=/^\s*(at|in)\s.+(:\d+)/,T=/(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;function P(e){return e.filter((function(e){return O.test(e)||T.test(e)})).map((function(e){if(T.test(e)){var t=!1;/ > (eval|Function)/.test(e)&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g,":$1"),t=!0);var r=e.split(/[@]/g),n=r.pop();return v(x,[r.join("@")||(t?"eval":null)].concat(b(C(n))))}-1!==e.indexOf("(eval ")&&(e=e.replace(/(\(eval at [^()]*)|(\),.*$)/g,"")),-1!==e.indexOf("(at ")&&(e=e.replace(/\(at /,"("));var o=e.trim().split(/\s+/g).slice(1),a=o.pop();return v(x,[o.join(" ")||null].concat(b(C(a))))}))}function L(e){if(null==e)throw new Error("You cannot pass a null object.");if("string"==typeof e)return P(e.split("\n"));if(Array.isArray(e))return P(e);if("string"==typeof e.stack)return P(e.stack.split("\n"));throw new Error("The error you provided does not contain a stack trace.")}var R=r(0),A=r.n(R);function N(e,t,r,n,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void r(e)}l.done?t(u):Promise.resolve(u).then(n,o)}function j(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){N(a,n,o,i,l,"next",e)}function l(e){N(a,n,o,i,l,"throw",e)}i(void 0)}))}}var M=r(3),I=function(){function e(t){E(this,e),this.__source_map=t}return k(e,[{key:"getOriginalPosition",value:function(e,t){var r=this.__source_map.originalPositionFor({line:e,column:t});return{line:r.line,column:r.column,source:r.source}}},{key:"getGeneratedPosition",value:function(e,t,r){var n=this.__source_map.generatedPositionFor({source:e,line:t,column:r});return{line:n.line,column:n.column}}},{key:"getSource",value:function(e){return this.__source_map.sourceContentFor(e)}},{key:"getSources",value:function(){return this.__source_map.sources}}]),e}();function D(e,t){for(var r=/\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm,n=null;;){var o=r.exec(t);if(null==o)break;n=o}return n&&n[1]?Promise.resolve(n[1].toString()):Promise.reject("Cannot find a source map directive for ".concat(e,"."))}function z(e,t){return q.apply(this,arguments)}function q(){return(q=j(A.a.mark((function e(t,r){var n,o,a,i,l,u;return A.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D(t,r);case 2:if(0!==(n=e.sent).indexOf("data:")){e.next=14;break}if(o=/^data:application\/json;([\w=:"-]+;)*base64,/,a=n.match(o)){e.next=8;break}throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");case 8:return n=n.substring(a[0].length),n=window.atob(n),n=JSON.parse(n),e.abrupt("return",new I(new M.SourceMapConsumer(n)));case 14:return i=t.lastIndexOf("/"),l=t.substring(0,i+1)+n,e.next=18,fetch(l).then((function(e){return e.json()}));case 18:return u=e.sent,e.abrupt("return",new I(new M.SourceMapConsumer(u)));case 20:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function F(e,t,r){"string"==typeof r&&(r=r.split("\n"));for(var n=[],o=Math.max(0,e-1-t);o<=Math.min(r.length-1,e-1+t);++o)n.push(new S(o+1,r[o],o===e-1));return n}var U=r(7);function B(e){return H.apply(this,arguments)}function H(){return(H=j(A.a.mark((function e(t){var r,n,o,a=arguments;return A.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=a.length>1&&void 0!==a[1]?a[1]:3,n={},o=[],t.forEach((function(e){var t=e.fileName;null!=t&&-1===o.indexOf(t)&&o.push(t)})),e.next=6,Object(U.settle)(o.map(function(){var e=j(A.a.mark((function e(t){var r,o,a;return A.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=0===t.indexOf("webpack-internal:")?"/__get-internal-source?fileName=".concat(encodeURIComponent(t)):t,e.next=3,fetch(r).then((function(e){return e.text()}));case 3:return o=e.sent,e.next=6,z(t,o);case 6:a=e.sent,n[t]={fileSource:o,map:a};case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 6:return e.abrupt("return",t.map((function(e){var t=e.functionName,o=e.fileName,a=e.lineNumber,i=e.columnNumber,l=n[o]||{},u=l.map,c=l.fileSource;if(null==u||null==a)return e;var s=u.getOriginalPosition(a,i),f=s.source,d=s.line,p=s.column,h=null==f?[]:u.getSource(f);return new x(t,o,a,i,F(a,r,c),t,f,d,p,F(d,r,h))})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var $=r(2),V=r.n($);function W(e,t){var r=-1,n=-1;do{++r,n=t.indexOf(e,n+1)}while(-1!==n);return r}function G(e,t){return Q.apply(this,arguments)}function Q(){return(Q=j(A.a.mark((function e(t,r){var n,o,a,i,l=arguments;return A.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=l.length>2&&void 0!==l[2]?l[2]:3,o="object"==typeof t?t.contents:null,a="object"==typeof t?t.uri:t,null!=o){e.next=7;break}return e.next=6,fetch(a).then((function(e){return e.text()}));case 6:o=e.sent;case 7:return e.next=9,z(a,o);case 9:return i=e.sent,e.abrupt("return",r.map((function(e){var t=e.functionName,r=e.lineNumber,l=e.columnNumber;if(null!=e._originalLineNumber)return e;var u=e.fileName;if(u&&(u=V.a.normalize(u.replace(/[\\]+/g,"/"))),null==u)return e;var c=u,s=i.getSources().map((function(e){return e.replace(/[\\]+/g,"/")})).filter((function(e){var t=(e=V.a.normalize(e)).lastIndexOf(c);return-1!==t&&t===e.length-c.length})).map((function(e){return{token:e,seps:W(V.a.sep,V.a.normalize(e)),penalties:W("node_modules",e)+W("~",e)}})).sort((function(e,t){var r=Math.sign(e.seps-t.seps);return 0!==r?r:Math.sign(e.penalties-t.penalties)}));if(s.length<1||null==r)return new x(null,null,null,null,null,t,c,r,l,null);var f=s[0].token,d=i.getGeneratedPosition(f,r,l),p=d.line,h=d.column,g=i.getSource(f);return new x(t,a,p,h||null,F(p,n,o||[]),t,c,r,l,F(r,n,g))})));case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Y=function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,r=L(e);return(e.__unmap_source?G(e.__unmap_source,r,t):B(r,t)).then((function(e){return 0===e.map((function(e){return e._originalFileName})).filter((function(e){return null!=e&&-1===e.indexOf("node_modules")})).length?null:e.filter((function(e){var t=e.functionName;return null==t||-1===t.indexOf("__stack_frame_overlay_proxy_console__")}))}))},X=function(e){return function(t){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Y(t,r,3).then((function(n){null!=n&&e({error:t,unhandledRejection:r,contextSize:3,stackFrames:n})})).catch((function(e){console.log("Could not get the stack frames of error:",e)}))}};function K(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/static/js/bundle.js",r=X(e);return a(window,(function(e){return r(e,!1)})),u(window,(function(e){return r(e,!0)})),function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f;if(!c)try{s=Error.stackTraceLimit,Error.stackTraceLimit=e,c=!0}catch(e){}}(),p(),g("error",(function(e,n){var o=function(e,t){for(var r,n,o=function(e){return e.split("\n").filter((function(e){return!e.match(/^\s*in/)})).join("\n")}(e),a="",i=0;i<t.length;++i){var l=t[i],u=l.fileName,c=l.lineNumber;if(null!=u&&null!=c&&!(u===r&&"number"==typeof c&&"number"==typeof n&&Math.abs(c-n)<3)){r=u,n=c;var s=t[i].name;a+="in ".concat(s=s||"(anonymous function)"," (at ").concat(u,":").concat(c,")\n")}}return{message:o,stack:a}}(e,n);r({message:o.message,stack:o.stack,__unmap_source:t},!1)})),function(){var e;!function(){if(c)try{Error.stackTraceLimit=s,c=!1}catch(e){}}(),e=window,null!==i&&(e.removeEventListener("unhandledrejection",i),i=null),function(e){null!==n&&(e.removeEventListener("error",n),n=null)}(window),h()}}var J={position:"fixed",top:"0",left:"0",width:"100%",height:"100%",border:"none","z-index":2147483647};var Z='/*! For license information please see iframe-bundle.js.LICENSE.txt */\n!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=208)}([function(e,t,r){"use strict";e.exports=r(183)},function(e,t,r){var n=r(8),o=r(35).f,a=r(18),i=r(21),l=r(38),u=r(60),c=r(64);e.exports=function(e,t){var r,s,f,d,p,h=e.target,g=e.global,v=e.stat;if(r=g?n:v?n[h]||l(h,{}):(n[h]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=o(r,s))&&p.value:r[s],!c(g?s:h+(v?".":"#")+s,e.forced)&&void 0!==f){if(typeof d===typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&a(d,"sham",!0),i(r,s,d,e)}}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=!1},function(e,t,r){var n=r(2),o=r(66),a=r(26),i=r(7),l=r(45),u=r(69),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,r){var s,f,d,p,h,g,v,m=r&&r.that,y=!(!r||!r.AS_ENTRIES),b=!(!r||!r.IS_ITERATOR),w=!(!r||!r.INTERRUPTED),k=i(t,m,1+y+w),E=function(e){return s&&u(s),new c(!0,e)},x=function(e){return y?(n(e),w?k(e[0],e[1],E):k(e[0],e[1])):w?k(e,E):k(e)};if(b)s=e;else{if("function"!=typeof(f=l(e)))throw TypeError("Target is not iterable");if(o(f)){for(d=0,p=a(e.length);p>d;d++)if((h=x(e[d]))&&h instanceof c)return h;return new c(!1)}s=f.call(e)}for(g=s.next;!(v=g.call(s)).done;){try{h=x(v.value)}catch(e){throw u(s),e}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){var n=r(8),o=r(40),a=r(11),i=r(31),l=r(44),u=r(67),c=o("wks"),s=n.Symbol,f=u?s:s&&s.withoutSetter||i;e.exports=function(e){return a(c,e)||(l&&a(s,e)?c[e]=s[e]:c[e]=f("Symbol."+e)),c[e]}},function(e,t,r){var n=r(5);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){(function(t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,r(34))},function(e,t,r){var n=r(61),o=r(11),a=r(82),i=r(14).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||i(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(61),o=r(8),a=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?a(n[e])||a(o[e]):n[e]&&n[e][t]||o[e]&&o[e][t]}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t,r){var n=r(16),o=r(57),a=r(2),i=r(29),l=Object.defineProperty;t.f=n?l:function(e,t,r){if(a(e),t=i(t,!0),a(r),o)try{return l(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Map.prototype.entries.call(e)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,r){var n=r(2),o=r(5),a=r(6)("species");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},function(e,t,r){var n=r(16),o=r(14),a=r(23);e.exports=n?function(e,t,r){return o.f(e,t,a(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Set.prototype.values.call(e)}},function(e,t,r){var n=r(56),o=r(37);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(8),o=r(18),a=r(11),i=r(38),l=r(59),u=r(24),c=u.get,s=u.enforce,f=String(String).split("String");(e.exports=function(e,t,r,l){var u,c=!!l&&!!l.unsafe,d=!!l&&!!l.enumerable,p=!!l&&!!l.noTargetGet;"function"==typeof r&&("string"!=typeof t||a(r,"name")||o(r,"name",t),(u=s(r)).source||(u.source=f.join("string"==typeof t?t:""))),e!==n?(c?!p&&e[t]&&(d=!0):delete e[t],d?e[t]=r:o(e,t,r)):d?e[t]=r:i(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||l(this)}))},function(e,t,r){var n=r(14).f,o=r(11),a=r(6)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n,o,a,i=r(92),l=r(8),u=r(13),c=r(18),s=r(11),f=r(39),d=r(30),p=r(25),h=l.WeakMap;if(i){var g=f.state||(f.state=new h),v=g.get,m=g.has,y=g.set;n=function(e,t){return t.facade=e,y.call(g,e,t),t},o=function(e){return v.call(g,e)||{}},a=function(e){return m.call(g,e)}}else{var b=d("state");p[b]=!0,n=function(e,t){return t.facade=e,c(e,b,t),t},o=function(e){return s(e,b)?e[b]:{}},a=function(e){return s(e,b)}}e.exports={set:n,get:o,has:a,enforce:function(e){return a(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t){e.exports={}},function(e,t,r){var n=r(42),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){e.exports={}},function(e,t,r){var n=r(37);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(13);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can\'t convert object to primitive value")}},function(e,t,r){var n=r(40),o=r(31),a=n("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t,r){var n,o=r(2),a=r(99),i=r(43),l=r(25),u=r(100),c=r(58),s=r(30),f=s("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"</"+"script>"},h=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=n?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=c("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var r=i.length;r--;)delete h.prototype[i[r]];return h()};l[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(d.prototype=o(e),r=new d,d.prototype=null,r[f]=e):r=h(),void 0===t?r:a(r,t)}},function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var o=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return n(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,r){return(new e).ansiToHtml(t,r)}},{key:"ansiToJson",value:function(t,r){return(new e).ansiToJson(t,r)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),n(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(o[e][t].color);for(var r=[0,95,135,175,215,255],n=function(e,t,n){return r[e]+", "+r[t]+", "+r[n]},a=0;a<6;++a)for(var i=0;i<6;++i)for(var l=0;l<6;++l)this.PALETTE_COLORS.push(n(a,i,l));for(var u=8,c=0;c<24;++c,u+=10)this.PALETTE_COLORS.push(n(u,u,u))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,(function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""}))}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,(function(e){return\'<a href="\'+e+\'">\'+e+"</a>"}))}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,r){var n=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map((function(e){return n.processChunk(e,t,r)}));if(t&&t.json){var l=this.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter((function(e){return!e.isEmpty()}))),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,r){var n=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,a=t.key=n?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!i.content}},l=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!l)return i;i.content=l[4];var u=l[2].split(";");if(""!==l[1]||"m"!==l[3])return i;if(!r)return i;var c=this;for(c.decoration=null;u.length>0;){var s=u.shift(),f=parseInt(s);if(isNaN(f)||0===f)c.fg=c.bg=c.decoration=null;else if(1===f)c.decoration="bold";else if(2===f)c.decoration="dim";else if(3==f)c.decoration="italic";else if(4==f)c.decoration="underline";else if(5==f)c.decoration="blink";else if(7===f)c.decoration="reverse";else if(8===f)c.decoration="hidden";else if(9===f)c.decoration="strikethrough";else if(39==f)c.fg=null;else if(49==f)c.bg=null;else if(f>=30&&f<38)c.fg=o[0][f%10][a];else if(f>=90&&f<98)c.fg=o[1][f%10][a];else if(f>=40&&f<48)c.bg=o[0][f%10][a];else if(f>=100&&f<108)c.bg=o[1][f%10][a];else if(38===f||48===f){var d=38===f;if(u.length>=1){var p=u.shift();if("5"===p&&u.length>=1){var h=parseInt(u.shift());if(h>=0&&h<=255)if(n){var g=h>=16?"ansi-palette-"+h:o[h>7?1:0][h%8].class;d?c.fg=g:c.bg=g}else this.PALETTE_COLORS||c.setupPalette(),d?c.fg=this.PALETTE_COLORS[h]:c.bg=this.PALETTE_COLORS[h]}else if("2"===p&&u.length>=3){var v=parseInt(u.shift()),m=parseInt(u.shift()),y=parseInt(u.shift());if(v>=0&&v<=255&&m>=0&&m<=255&&y>=0&&y<=255){var b=v+", "+m+", "+y;n?d?(c.fg="ansi-truecolor",c.fg_truecolor=b):(c.bg="ansi-truecolor",c.bg_truecolor=b):d?c.fg=b:c.bg=b}}}}}if(null===c.fg&&null===c.bg&&null===c.decoration)return i;return i.fg=c.fg,i.bg=c.bg,i.fg_truecolor=c.fg_truecolor,i.bg_truecolor=c.bg_truecolor,i.decoration=c.decoration,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,r){var n=this;t=t||{};var o=this.processChunkJson(e,t,r);if(t.json)return o;if(o.isEmpty())return"";if(!o.was_processed)return o.content;var a=t.use_classes,i=[],l=[],u={},c=function(e){var t=[],r=void 0;for(r in e)e.hasOwnProperty(r)&&t.push("data-"+r+\'="\'+n.escapeForHtml(e[r])+\'"\');return t.length>0?" "+t.join(" "):""};return o.fg&&(a?(l.push(o.fg+"-fg"),null!==o.fg_truecolor&&(u["ansi-truecolor-fg"]=o.fg_truecolor,o.fg_truecolor=null)):i.push("color:rgb("+o.fg+")")),o.bg&&(a?(l.push(o.bg+"-bg"),null!==o.bg_truecolor&&(u["ansi-truecolor-bg"]=o.bg_truecolor,o.bg_truecolor=null)):i.push("background-color:rgb("+o.bg+")")),o.decoration&&(a?l.push("ansi-"+o.decoration):"bold"===o.decoration?i.push("font-weight:bold"):"dim"===o.decoration?i.push("opacity:0.5"):"italic"===o.decoration?i.push("font-style:italic"):"reverse"===o.decoration?i.push("filter:invert(100%)"):"hidden"===o.decoration?i.push("visibility:hidden"):"strikethrough"===o.decoration?i.push("text-decoration:line-through"):i.push("text-decoration:"+o.decoration)),a?\'<span class="\'+l.join(" ")+\'"\'+c(u)+">"+o.content+"</span>":\'<span style="\'+i.join(";")+\'"\'+c(u)+">"+o.content+"</span>"}}]),e}();e.exports=a},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(16),o=r(55),a=r(23),i=r(20),l=r(29),u=r(11),c=r(57),s=Object.getOwnPropertyDescriptor;t.f=n?s:function(e,t){if(e=i(e),t=l(t,!0),c)try{return s(e,t)}catch(e){}if(u(e,t))return a(!o.f.call(e,t),e[t])}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can\'t call method on "+e);return e}},function(e,t,r){var n=r(8),o=r(18);e.exports=function(e,t){try{o(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(8),o=r(38),a="__core-js_shared__",i=n[a]||o(a,{});e.exports=i},function(e,t,r){var n=r(3),o=r(39);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:n?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(62),o=r(43).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,r){var n=r(12);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(68),o=r(27),a=r(6)("iterator");e.exports=function(e){if(void 0!=e)return e[a]||e["@@iterator"]||o[n(e)]}},function(e,t,r){var n={};n[r(6)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){"use strict";var n=r(1),o=r(102),a=r(76),i=r(72),l=r(22),u=r(18),c=r(21),s=r(6),f=r(3),d=r(27),p=r(75),h=p.IteratorPrototype,g=p.BUGGY_SAFARI_ITERATORS,v=s("iterator"),m="keys",y="values",b="entries",w=function(){return this};e.exports=function(e,t,r,s,p,k,E){o(r,t,s);var x,S,_,T=function(e){if(e===p&&N)return N;if(!g&&e in P)return P[e];switch(e){case m:case y:case b:return function(){return new r(this,e)}}return function(){return new r(this)}},C=t+" Iterator",O=!1,P=e.prototype,R=P[v]||P["@@iterator"]||p&&P[p],N=!g&&R||T(p),L="Array"==t&&P.entries||R;if(L&&(x=a(L.call(new e)),h!==Object.prototype&&x.next&&(f||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&u(x,v,w)),l(x,C,!0,!0),f&&(d[C]=w))),p==y&&R&&R.name!==y&&(O=!0,N=function(){return R.call(this)}),f&&!E||P[v]===N||u(P,v,N),d[t]=N,p)if(S={values:T(y),keys:k?N:T(m),entries:T(b)},E)for(_ in S)(g||O||!(_ in P))&&c(P,_,S[_]);else n({target:t,proto:!0,forced:g||O},S);return S}},function(e,t,r){var n=r(2),o=r(45);e.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},function(e,t,r){var n=r(36);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){"use strict";var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,u=i(e),c=1;c<arguments.length;c++){for(var s in r=Object(arguments[c]))o.call(r,s)&&(u[s]=r[s]);if(n){l=n(r);for(var f=0;f<l.length;f++)a.call(r,l[f])&&(u[l[f]]=r[l[f]])}}return u}},function(e,t){var r,n,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"===typeof setTimeout?setTimeout:a}catch(e){r=a}try{n="function"===typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){var n=r(191);e.exports=function(e,t){var r;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"===typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}}},function(e,t,r){"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(184)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(64),i=r(21),l=r(65),u=r(4),c=r(70),s=r(13),f=r(12),d=r(71),p=r(22),h=r(97);e.exports=function(e,t,r){var g=-1!==e.indexOf("Map"),v=-1!==e.indexOf("Weak"),m=g?"set":"add",y=o[e],b=y&&y.prototype,w=y,k={},E=function(e){var t=b[e];i(b,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!s(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(a(e,"function"!=typeof y||!(v||b.forEach&&!f((function(){(new y).entries().next()})))))w=r.getConstructor(t,e,g,m),l.REQUIRED=!0;else if(a(e,!0)){var x=new w,S=x[m](v?{}:-0,1)!=x,_=f((function(){x.has(1)})),T=d((function(e){new y(e)})),C=!v&&f((function(){for(var e=new y,t=5;t--;)e[m](t,t);return!e.has(-0)}));T||((w=t((function(t,r){c(t,w,e);var n=h(new y,t,w);return void 0!=r&&u(r,n[m],{that:n,AS_ENTRIES:g}),n}))).prototype=b,b.constructor=w),(_||C)&&(E("delete"),E("has"),g&&E("get")),(C||S)&&E(m),v&&b.clear&&delete b.clear}return k[e]=w,n({global:!0,forced:w!=y},k),p(w,e),v||r.setStrong(w,e,g),w}},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!n.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},function(e,t,r){var n=r(12),o=r(36),a="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?a.call(e,""):Object(e)}:Object},function(e,t,r){var n=r(16),o=r(12),a=r(58);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(8),o=r(13),a=n.document,i=o(a)&&o(a.createElement);e.exports=function(e){return i?a.createElement(e):{}}},function(e,t,r){var n=r(39),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(11),o=r(93),a=r(35),i=r(14);e.exports=function(e,t){for(var r=o(t),l=i.f,u=a.f,c=0;c<r.length;c++){var s=r[c];n(e,s)||l(e,s,u(t,s))}}},function(e,t,r){var n=r(8);e.exports=n},function(e,t,r){var n=r(11),o=r(20),a=r(94).indexOf,i=r(25);e.exports=function(e,t){var r,l=o(e),u=0,c=[];for(r in l)!n(i,r)&&n(l,r)&&c.push(r);for(;t.length>u;)n(l,r=t[u++])&&(~a(c,r)||c.push(r));return c}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(12),o=/#|\\.prototype\\./,a=function(e,t){var r=l[i(e)];return r==c||r!=u&&("function"==typeof t?n(t):!!t)},i=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},function(e,t,r){var n=r(25),o=r(13),a=r(11),i=r(14).f,l=r(31),u=r(96),c=l("meta"),s=0,f=Object.isExtensible||function(){return!0},d=function(e){i(e,c,{value:{objectID:"O"+ ++s,weakData:{}}})},p=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!f(e))return"F";if(!t)return"E";d(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!f(e))return!0;if(!t)return!1;d(e)}return e[c].weakData},onFreeze:function(e){return u&&p.REQUIRED&&f(e)&&!a(e,c)&&d(e),e}};n[c]=!0},function(e,t,r){var n=r(6),o=r(27),a=n("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[a]===e)}},function(e,t,r){var n=r(44);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(46),o=r(36),a=r(6)("toStringTag"),i="Arguments"==o(function(){return arguments}());e.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?r:i?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){var n=r(2);e.exports=function(e){var t=e.return;if(void 0!==t)return n(t.call(e)).value}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){var n=r(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[n]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},e(a)}catch(e){}return r}},function(e,t,r){var n=r(2),o=r(98);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,a){return n(r),o(a),t?e.call(r,a):r.__proto__=a,r}}():void 0)},function(e,t,r){"use strict";var n=r(14).f,o=r(32),a=r(101),i=r(7),l=r(70),u=r(4),c=r(47),s=r(104),f=r(16),d=r(65).fastKey,p=r(24),h=p.set,g=p.getterFor;e.exports={getConstructor:function(e,t,r,c){var s=e((function(e,n){l(e,s,t),h(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=n&&u(n,e[c],{that:e,AS_ENTRIES:r})})),p=g(t),v=function(e,t,r){var n,o,a=p(e),i=m(e,t);return i?i.value=r:(a.last=i={index:o=d(t,!0),key:t,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=i),n&&(n.next=i),f?a.size++:e.size++,"F"!==o&&(a.index[o]=i)),e},m=function(e,t){var r,n=p(e),o=d(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return a(s.prototype,{clear:function(){for(var e=p(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=this,r=p(t),n=m(t,e);if(n){var o=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=o),o&&(o.previous=a),r.first==n&&(r.first=o),r.last==n&&(r.last=a),f?r.size--:t.size--}return!!n},forEach:function(e){for(var t,r=p(this),n=i(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!m(this,e)}}),a(s.prototype,r?{get:function(e){var t=m(this,e);return t&&t.value},set:function(e,t){return v(this,0===e?0:e,t)}}:{add:function(e){return v(this,e=0===e?0:e,e)}}),f&&n(s.prototype,"size",{get:function(){return p(this).size}}),s},setStrong:function(e,t,r){var n=t+" Iterator",o=g(t),a=g(n);c(e,t,(function(e,t){h(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=a(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),s(t)}}},function(e,t,r){var n=r(62),o=r(43);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){"use strict";var n,o,a,i=r(12),l=r(76),u=r(18),c=r(11),s=r(6),f=r(3),d=s("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=l(l(a)))!==Object.prototype&&(n=o):p=!0);var h=void 0==n||i((function(){var e={};return n[d].call(e)!==e}));h&&(n={}),f&&!h||c(n,d)||u(n,d,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},function(e,t,r){var n=r(11),o=r(28),a=r(30),i=r(103),l=a("IE_PROTO"),u=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=o(e),n(e,l)?e[l]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(46),o=r(21),a=r(105);n||o(Object.prototype,"toString",a,{unsafe:!0})},function(e,t,r){"use strict";var n=r(107).charAt,o=r(24),a=r(47),i="String Iterator",l=o.set,u=o.getterFor(i);a(String,"String",(function(e){l(this,{type:i,string:String(e),index:0})}),(function(){var e,t=u(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e,t=n(this),r=o(t.delete),a=!0,i=0,l=arguments.length;i<l;i++)e=r.call(t,arguments[i]),a=a&&e;return!!a}},function(e,t,r){"use strict";var n=r(5),o=r(7),a=r(4);e.exports=function(e){var t,r,i,l,u=arguments.length,c=u>1?arguments[1]:void 0;return n(this),(t=void 0!==c)&&n(c),void 0==e?new this:(r=[],t?(i=0,l=o(c,u>2?arguments[2]:void 0,2),a(e,(function(e){r.push(l(e,i++))}))):a(e,r.push,{that:r}),new this(r))}},function(e,t,r){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}},function(e,t,r){var n=r(6);t.f=n},function(e,t,r){var n=r(13),o=r(49),a=r(6)("species");e.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[a])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){"use strict";var n=r(29),o=r(14),a=r(23);e.exports=function(e,t,r){var i=n(t);i in e?o.f(e,i,a(0,r)):e[i]=r}},function(e,t,r){var n,o,a=r(8),i=r(168),l=a.process,u=l&&l.versions,c=u&&u.v8;c?o=(n=c.split("."))[0]+n[1]:i&&(!(n=i.match(/Edge\\/(\\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\\/(\\d+)/))&&(o=n[1]),e.exports=o&&+o},function(e,t,r){"use strict";var n=r(178);function o(){}var a=null,i={};function l(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._U=0,this._V=0,this._W=null,this._X=null,e!==o&&p(e,this)}function u(e,t){for(;3===e._V;)e=e._W;if(l._Y&&l._Y(e),0===e._V)return 0===e._U?(e._U=1,void(e._X=t)):1===e._U?(e._U=2,void(e._X=[e._X,t])):void e._X.push(t);!function(e,t){n((function(){var r=1===e._V?t.onFulfilled:t.onRejected;if(null!==r){var n=function(e,t){try{return e(t)}catch(e){return a=e,i}}(r,e._W);n===i?s(t.promise,a):c(t.promise,n)}else 1===e._V?c(t.promise,e._W):s(t.promise,e._W)}))}(e,t)}function c(e,t){if(t===e)return s(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var r=function(e){try{return e.then}catch(e){return a=e,i}}(t);if(r===i)return s(e,a);if(r===e.then&&t instanceof l)return e._V=3,e._W=t,void f(e);if("function"===typeof r)return void p(r.bind(t),e)}e._V=1,e._W=t,f(e)}function s(e,t){e._V=2,e._W=t,l._Z&&l._Z(e,t),f(e)}function f(e){if(1===e._U&&(u(e,e._X),e._X=null),2===e._U){for(var t=0;t<e._X.length;t++)u(e,e._X[t]);e._X=null}}function d(e,t,r){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=r}function p(e,t){var r=!1,n=function(e,t,r){try{e(t,r)}catch(e){return a=e,i}}(e,(function(e){r||(r=!0,c(t,e))}),(function(e){r||(r=!0,s(t,e))}));r||n!==i||(r=!0,s(t,a))}e.exports=l,l._Y=null,l._Z=null,l._0=o,l.prototype.then=function(e,t){if(this.constructor!==l)return function(e,t,r){return new e.constructor((function(n,a){var i=new l(o);i.then(n,a),u(e,new d(t,r,i))}))}(this,e,t);var r=new l(o);return u(this,new d(e,t,r)),r}},function(e,t,r){var n=r(204),o={};for(var a in n)n.hasOwnProperty(a)&&(o[n[a]]=a);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in i)if(i.hasOwnProperty(l)){if(!("channels"in i[l]))throw new Error("missing channels property: "+l);if(!("labels"in i[l]))throw new Error("missing channel labels property: "+l);if(i[l].labels.length!==i[l].channels)throw new Error("channel and label counts mismatch: "+l);var u=i[l].channels,c=i[l].labels;delete i[l].channels,delete i[l].labels,Object.defineProperty(i[l],"channels",{value:u}),Object.defineProperty(i[l],"labels",{value:c})}i.rgb.hsl=function(e){var t,r,n=e[0]/255,o=e[1]/255,a=e[2]/255,i=Math.min(n,o,a),l=Math.max(n,o,a),u=l-i;return l===i?t=0:n===l?t=(o-a)/u:o===l?t=2+(a-n)/u:a===l&&(t=4+(n-o)/u),(t=Math.min(60*t,360))<0&&(t+=360),r=(i+l)/2,[t,100*(l===i?0:r<=.5?u/(l+i):u/(2-l-i)),100*r]},i.rgb.hsv=function(e){var t,r,n,o,a,i=e[0]/255,l=e[1]/255,u=e[2]/255,c=Math.max(i,l,u),s=c-Math.min(i,l,u),f=function(e){return(c-e)/6/s+.5};return 0===s?o=a=0:(a=s/c,t=f(i),r=f(l),n=f(u),i===c?o=n-r:l===c?o=1/3+t-n:u===c&&(o=2/3+r-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*c]},i.rgb.hwb=function(e){var t=e[0],r=e[1],n=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(r,n))),100*(n=1-1/255*Math.max(t,Math.max(r,n)))]},i.rgb.cmyk=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255;return[100*((1-r-(t=Math.min(1-r,1-n,1-o)))/(1-t)||0),100*((1-n-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=o[e];if(t)return t;var r,a,i,l=1/0;for(var u in n)if(n.hasOwnProperty(u)){var c=n[u],s=(a=e,i=c,Math.pow(a[0]-i[0],2)+Math.pow(a[1]-i[1],2)+Math.pow(a[2]-i[2],2));s<l&&(l=s,r=u)}return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.1805*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),r=t[0],n=t[1],o=t[2];return n/=100,o/=108.883,r=(r/=95.047)>.008856?Math.pow(r,1/3):7.787*r+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(r-n),200*(n-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},i.hsl.rgb=function(e){var t,r,n,o,a,i=e[0]/360,l=e[1]/100,u=e[2]/100;if(0===l)return[a=255*u,a,a];t=2*u-(r=u<.5?u*(1+l):u+l-u*l),o=[0,0,0];for(var c=0;c<3;c++)(n=i+1/3*-(c-1))<0&&n++,n>1&&n--,a=6*n<1?t+6*(r-t)*n:2*n<1?r:3*n<2?t+(r-t)*(2/3-n)*6:t,o[c]=255*a;return o},i.hsl.hsv=function(e){var t=e[0],r=e[1]/100,n=e[2]/100,o=r,a=Math.max(n,.01);return r*=(n*=2)<=1?n:2-n,o*=a<=1?a:2-a,[t,100*(0===n?2*o/(a+o):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,r=e[1]/100,n=e[2]/100,o=Math.floor(t)%6,a=t-Math.floor(t),i=255*n*(1-r),l=255*n*(1-r*a),u=255*n*(1-r*(1-a));switch(n*=255,o){case 0:return[n,u,i];case 1:return[l,n,i];case 2:return[i,n,u];case 3:return[i,l,n];case 4:return[u,i,n];case 5:return[n,i,l]}},i.hsv.hsl=function(e){var t,r,n,o=e[0],a=e[1]/100,i=e[2]/100,l=Math.max(i,.01);return n=(2-a)*i,r=a*l,[o,100*(r=(r/=(t=(2-a)*l)<=1?t:2-t)||0),100*(n/=2)]},i.hwb.rgb=function(e){var t,r,n,o,a,i,l,u=e[0]/360,c=e[1]/100,s=e[2]/100,f=c+s;switch(f>1&&(c/=f,s/=f),n=6*u-(t=Math.floor(6*u)),0!==(1&t)&&(n=1-n),o=c+n*((r=1-s)-c),t){default:case 6:case 0:a=r,i=o,l=c;break;case 1:a=o,i=r,l=c;break;case 2:a=c,i=r,l=o;break;case 3:a=c,i=o,l=r;break;case 4:a=o,i=c,l=r;break;case 5:a=r,i=c,l=o}return[255*a,255*i,255*l]},i.cmyk.rgb=function(e){var t=e[0]/100,r=e[1]/100,n=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o))]},i.xyz.rgb=function(e){var t,r,n,o=e[0]/100,a=e[1]/100,i=e[2]/100;return r=-.9689*o+1.8758*a+.0415*i,n=.0557*o+-.204*a+1.057*i,t=(t=3.2406*o+-1.5372*a+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,[255*(t=Math.min(Math.max(0,t),1)),255*(r=Math.min(Math.max(0,r),1)),255*(n=Math.min(Math.max(0,n),1))]},i.xyz.lab=function(e){var t=e[0],r=e[1],n=e[2];return r/=100,n/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116))]},i.lab.xyz=function(e){var t,r,n,o=e[0];t=e[1]/500+(r=(o+16)/116),n=r-e[2]/200;var a=Math.pow(r,3),i=Math.pow(t,3),l=Math.pow(n,3);return r=a>.008856?a:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,[t*=95.047,r*=100,n*=108.883]},i.lab.lch=function(e){var t,r=e[0],n=e[1],o=e[2];return(t=360*Math.atan2(o,n)/2/Math.PI)<0&&(t+=360),[r,Math.sqrt(n*n+o*o),t]},i.lch.lab=function(e){var t,r=e[0],n=e[1];return t=e[2]/360*2*Math.PI,[r,n*Math.cos(t),n*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],r=e[1],n=e[2],o=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var a=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===o&&(a+=60),a},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],r=e[1],n=e[2];return t===r&&r===n?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var r;return e-=16,[Math.floor(e/36)/5*255,Math.floor((r=e%36)/6)/5*255,r%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var r=t[0];3===t[0].length&&(r=r.split("").map((function(e){return e+e})).join(""));var n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255,a=Math.max(Math.max(r,n),o),i=Math.min(Math.min(r,n),o),l=a-i;return t=l<=0?0:a===r?(n-o)/l%6:a===n?2+(o-r)/l:4+(r-n)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?i/(1-l):0)]},i.hsl.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=1,o=0;return(n=r<.5?2*t*r:2*t*(1-r))<1&&(o=(r-.5*n)/(1-n)),[e[0],100*n,100*o]},i.hsv.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=t*r,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.hcg.rgb=function(e){var t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];var o,a=[0,0,0],i=t%1*6,l=i%1,u=1-l;switch(Math.floor(i)){case 0:a[0]=1,a[1]=l,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=l;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=l,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return o=(1-r)*n,[255*(r*a[0]+o),255*(r*a[1]+o),255*(r*a[2]+o)]},i.hcg.hsv=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t),n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){var t=e[1]/100,r=e[2]/100*(1-t)+.5*t,n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){var t=e[1]/100,r=1-e[2]/100,n=r-t,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(187);t.XmlEntities=n.XmlEntities;var o=r(188);t.Html4Entities=o.Html4Entities;var a=r(189);t.Html5Entities=a.Html5Entities,t.AllHtmlEntities=a.Html5Entities},function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=c,t.default=function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!a){a=!0;var i="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(e.emitWarning)e.emitWarning(i,"DeprecationWarning");else{var l=new Error(i);l.name="DeprecationWarning",console.warn(new Error(i))}}var u={start:{column:n=Math.max(n,0),line:r}};return c(t,u,o)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=n?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(r(190));function o(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var a=!1;function i(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}var l=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function u(e,t,r){var n=Object.assign({column:0,line:-1},e.start),o=Object.assign({},n,e.end),a=r||{},i=a.linesAbove,l=void 0===i?2:i,u=a.linesBelow,c=void 0===u?3:u,s=n.line,f=n.column,d=o.line,p=o.column,h=Math.max(s-(l+1),0),g=Math.min(t.length,d+c);-1===s&&(h=0),-1===d&&(g=t.length);var v=d-s,m={};if(v)for(var y=0;y<=v;y++){var b=y+s;if(f)if(0===y){var w=t[b-1].length;m[b]=[f,w-f+1]}else if(y===v)m[b]=[0,p];else{var k=t[b-y].length;m[b]=[0,k]}else m[b]=!0}else m[s]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:g,markerLines:m}}function c(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),a=(0,n.getChalk)(r),c=i(a),s=function(e,t){return o?e(t):t},f=e.split(l),d=u(t,f,r),p=d.start,h=d.end,g=d.markerLines,v=t.start&&"number"===typeof t.start.column,m=String(h).length,y=o?(0,n.default)(e,r):e,b=y.split(l).slice(p,h).map((function(e,t){var n=p+1+t,o=" ".concat(n).slice(-m),a=" ".concat(o," | "),i=g[n],l=!g[n+1];if(i){var u="";if(Array.isArray(i)){var f=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),d=i[1]||1;u=["\\n ",s(c.gutter,a.replace(/\\d/g," ")),f,s(c.marker,"^").repeat(d)].join(""),l&&r.message&&(u+=" "+s(c.message,r.message))}return[s(c.marker,">"),s(c.gutter,a),e,u].join("")}return" ".concat(s(c.gutter,a)).concat(e)})).join("\\n");return r.message&&!v&&(b="".concat(" ".repeat(m+1)).concat(r.message,"\\n").concat(b)),o?a.reset(b):b}}).call(this,r(51))},function(e,t,r){"use strict";r(91),r(77),r(106),r(78),r(108),r(109),r(110),r(111),r(112),r(113),r(114),r(115),r(117),r(118),r(119),r(120),r(121),r(122),r(123),r(124),r(125),r(126),r(128),r(129),r(130),r(131),r(132),r(133),r(134),r(135),r(136),r(137),r(138),r(139),r(140),r(141),r(142),r(143),r(144),r(145),r(149),r(181).polyfill()},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(8),o=r(59),a=n.WeakMap;e.exports="function"===typeof a&&/native code/.test(o(a))},function(e,t,r){var n=r(10),o=r(41),a=r(63),i=r(2);e.exports=n("Reflect","ownKeys")||function(e){var t=o.f(i(e)),r=a.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(20),o=r(26),a=r(95),i=function(e){return function(t,r,i){var l,u=n(t),c=o(u.length),s=a(i,c);if(e&&r!=r){for(;c>s;)if((l=u[s++])!=l)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===r)return e||s||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,r){var n=r(42),o=Math.max,a=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):a(r,t)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(13),o=r(72);e.exports=function(e,t,r){var a,i;return o&&"function"==typeof(a=t.constructor)&&a!==r&&n(i=a.prototype)&&i!==r.prototype&&o(e,i),e}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can\'t set "+String(e)+" as a prototype");return e}},function(e,t,r){var n=r(16),o=r(14),a=r(2),i=r(74);e.exports=n?Object.defineProperties:function(e,t){a(e);for(var r,n=i(t),l=n.length,u=0;l>u;)o.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(10);e.exports=n("document","documentElement")},function(e,t,r){var n=r(21);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){"use strict";var n=r(75).IteratorPrototype,o=r(32),a=r(23),i=r(22),l=r(27),u=function(){return this};e.exports=function(e,t,r){var c=t+" Iterator";return e.prototype=o(n,{next:a(1,r)}),i(e,c,!1,!0),l[c]=u,e}},function(e,t,r){var n=r(12);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){"use strict";var n=r(10),o=r(14),a=r(6),i=r(16),l=a("species");e.exports=function(e){var t=n(e),r=o.f;i&&t&&!t[l]&&r(t,l,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=r(46),o=r(68);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(42),o=r(37),a=function(e){return function(t,r){var a,i,l=String(o(t)),u=n(r),c=l.length;return u<0||u>=c?e?"":void 0:(a=l.charCodeAt(u))<55296||a>56319||u+1===c||(i=l.charCodeAt(u+1))<56320||i>57343?e?l.charAt(u):a:e?l.slice(u,u+2):i-56320+(a-55296<<10)+65536}};e.exports={codeAt:a(!1),charAt:a(!0)}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Map",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r,o){if(!n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){n(r,e,t)&&d.call(o,e,r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{findKey:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(e)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Map",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{groupBy:function(e,t){var r=new this;a(t);var n=a(r.has),i=a(r.get),l=a(r.set);return o(e,(function(e){var o=t(e);n.call(r,o)?i.call(r,o).push(e):l.call(r,o,[e])})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(116),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{includes:function(e){return u(i(a(this)),(function(t,r,n){if(l(r,e))return n()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{keyBy:function(e,t){var r=new this;a(t);var n=a(r.set);return o(e,(function(e){n.call(r,t(e),e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{keyOf:function(e){return l(i(a(this)),(function(t,r,n){if(r===e)return n(t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapKeys:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,n(r,e,t),r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapValues:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,e,n(r,e,t))}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{merge:function(e){for(var t=a(this),r=i(t.set),n=0;n<arguments.length;)l(arguments[n++],r,{that:t,AS_ENTRIES:!0});return t}})},function(e,t,r){r(1)({target:"Map",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r,a){n?(n=!1,o=a):o=e(o,a,r,t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty map with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5);n({target:"Map",proto:!0,real:!0,forced:o},{update:function(e,t){var r=a(this),n=arguments.length;i(t);var o=r.has(e);if(!o&&n<3)throw TypeError("Updating absent value");var l=o?r.get(e):i(n>2?arguments[2]:void 0)(e,r);return r.set(e,t(l,e,r)),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(127);n({target:"Set",proto:!0,real:!0,forced:o},{addAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e=n(this),t=o(e.add),r=0,a=arguments.length;r<a;r++)t.call(e,arguments[r]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Set",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{difference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete);return c(e,(function(e){n.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r){if(!n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){n(e,e,t)&&d.call(o,e)}),{IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r(e)}),{IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Set",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{intersection:function(e){var t=i(this),r=new(u(t,a("Set"))),n=l(t.has),o=l(r.add);return c(e,(function(e){n.call(t,e)&&o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isDisjointFrom:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!0===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(48),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSubsetOf:function(e){var t=u(this),r=i(e),n=r.has;return"function"!=typeof n&&(r=new(a("Set"))(e),n=l(r.has)),!c(t,(function(e,t){if(!1===n.call(r,e))return t()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSupersetOf:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!1===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(19),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{join:function(e){var t=a(this),r=i(t),n=void 0===e?",":String(e),o=[];return l(r,o.push,{that:o,IS_ITERATOR:!0}),o.join(n)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{map:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){d.call(o,n(e,e,t))}),{IS_ITERATOR:!0}),o}})},function(e,t,r){r(1)({target:"Set",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r){n?(n=!1,o=r):o=e(o,r,r,t)}),{IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty set with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{symmetricDifference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete),o=l(r.add);return c(e,(function(e){n.call(r,e)||o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{union:function(e){var t=i(this),r=new(u(t,a("Set")))(t);return c(e,l(r.add),{that:r}),r}})},function(e,t,r){var n=r(8),o=r(146),a=r(147),i=r(18),l=r(6),u=l("iterator"),c=l("toStringTag"),s=a.values;for(var f in o){var d=n[f],p=d&&d.prototype;if(p){if(p[u]!==s)try{i(p,u,s)}catch(e){p[u]=s}if(p[c]||i(p,c,f),o[f])for(var h in a)if(p[h]!==a[h])try{i(p,h,a[h])}catch(e){p[h]=a[h]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){"use strict";var n=r(20),o=r(148),a=r(27),i=r(24),l=r(47),u="Array Iterator",c=i.set,s=i.getterFor(u);e.exports=l(Array,"Array",(function(e,t){c(this,{type:u,target:n(e),index:0,kind:t})}),(function(){var e=s(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(e,t,r){var n=r(6),o=r(32),a=r(14),i=n("unscopables"),l=Array.prototype;void 0==l[i]&&a.f(l,i,{configurable:!0,value:o(null)}),e.exports=function(e){l[i][e]=!0}},function(e,t,r){"use strict";r(150),r(153),r(154),r(155),r(156),r(157),r(158),r(159),r(160),r(161),r(162),r(163),r(164),r(165),r(166),r(169),r(172),r(173),r(77),r(78),r(174),r(175),r(176),"undefined"===typeof Promise&&(r(177).enable(),self.Promise=r(179)),"undefined"!==typeof window&&r(180),Object.assign=r(50)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(10),i=r(3),l=r(16),u=r(44),c=r(67),s=r(12),f=r(11),d=r(49),p=r(13),h=r(2),g=r(28),v=r(20),m=r(29),y=r(23),b=r(32),w=r(74),k=r(41),E=r(151),x=r(63),S=r(35),_=r(14),T=r(55),C=r(18),O=r(21),P=r(40),R=r(30),N=r(25),L=r(31),A=r(6),I=r(82),j=r(9),M=r(22),D=r(24),q=r(152).forEach,z=R("hidden"),U="Symbol",F=A("toPrimitive"),B=D.set,V=D.getterFor(U),H=Object.prototype,W=o.Symbol,$=a("JSON","stringify"),G=S.f,Q=_.f,Y=E.f,K=T.f,X=P("symbols"),J=P("op-symbols"),Z=P("string-to-symbol-registry"),ee=P("symbol-to-string-registry"),te=P("wks"),re=o.QObject,ne=!re||!re.prototype||!re.prototype.findChild,oe=l&&s((function(){return 7!=b(Q({},"a",{get:function(){return Q(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=G(H,t);n&&delete H[t],Q(e,t,r),n&&e!==H&&Q(H,t,n)}:Q,ae=function(e,t){var r=X[e]=b(W.prototype);return B(r,{type:U,tag:e,description:t}),l||(r.description=t),r},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof W},le=function(e,t,r){e===H&&le(J,t,r),h(e);var n=m(t,!0);return h(r),f(X,n)?(r.enumerable?(f(e,z)&&e[z][n]&&(e[z][n]=!1),r=b(r,{enumerable:y(0,!1)})):(f(e,z)||Q(e,z,y(1,{})),e[z][n]=!0),oe(e,n,r)):Q(e,n,r)},ue=function(e,t){h(e);var r=v(t),n=w(r).concat(de(r));return q(n,(function(t){l&&!ce.call(r,t)||le(e,t,r[t])})),e},ce=function(e){var t=m(e,!0),r=K.call(this,t);return!(this===H&&f(X,t)&&!f(J,t))&&(!(r||!f(this,t)||!f(X,t)||f(this,z)&&this[z][t])||r)},se=function(e,t){var r=v(e),n=m(t,!0);if(r!==H||!f(X,n)||f(J,n)){var o=G(r,n);return!o||!f(X,n)||f(r,z)&&r[z][n]||(o.enumerable=!0),o}},fe=function(e){var t=Y(v(e)),r=[];return q(t,(function(e){f(X,e)||f(N,e)||r.push(e)})),r},de=function(e){var t=e===H,r=Y(t?J:v(e)),n=[];return q(r,(function(e){!f(X,e)||t&&!f(H,e)||n.push(X[e])})),n};(u||(O((W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=L(e),r=function e(r){this===H&&e.call(J,r),f(this,z)&&f(this[z],t)&&(this[z][t]=!1),oe(this,t,y(1,r))};return l&&ne&&oe(H,t,{configurable:!0,set:r}),ae(t,e)}).prototype,"toString",(function(){return V(this).tag})),O(W,"withoutSetter",(function(e){return ae(L(e),e)})),T.f=ce,_.f=le,S.f=se,k.f=E.f=fe,x.f=de,I.f=function(e){return ae(A(e),e)},l&&(Q(W.prototype,"description",{configurable:!0,get:function(){return V(this).description}}),i||O(H,"propertyIsEnumerable",ce,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:W}),q(w(te),(function(e){j(e)})),n({target:U,stat:!0,forced:!u},{for:function(e){var t=String(e);if(f(Z,t))return Z[t];var r=W(t);return Z[t]=r,ee[r]=t,r},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(f(ee,e))return ee[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!l},{create:function(e,t){return void 0===t?b(e):ue(b(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:se}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:fe,getOwnPropertySymbols:de}),n({target:"Object",stat:!0,forced:s((function(){x.f(1)}))},{getOwnPropertySymbols:function(e){return x.f(g(e))}}),$)&&n({target:"JSON",stat:!0,forced:!u||s((function(){var e=W();return"[null]"!=$([e])||"{}"!=$({a:e})||"{}"!=$(Object(e))}))},{stringify:function(e,t,r){for(var n,o=[e],a=1;arguments.length>a;)o.push(arguments[a++]);if(n=t,(p(t)||void 0!==e)&&!ie(e))return d(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ie(t))return t}),o[1]=t,$.apply(null,o)}});W.prototype[F]||C(W.prototype,F,W.prototype.valueOf),M(W,U),N[z]=!0},function(e,t,r){var n=r(20),o=r(41).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(n(e))}},function(e,t,r){var n=r(7),o=r(56),a=r(28),i=r(26),l=r(83),u=[].push,c=function(e){var t=1==e,r=2==e,c=3==e,s=4==e,f=6==e,d=7==e,p=5==e||f;return function(h,g,v,m){for(var y,b,w=a(h),k=o(w),E=n(g,v,3),x=i(k.length),S=0,_=m||l,T=t?_(h,x):r||d?_(h,0):void 0;x>S;S++)if((p||S in k)&&(b=E(y=k[S],S,w),e))if(t)T[S]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:u.call(T,y)}else switch(e){case 4:return!1;case 7:u.call(T,y)}return f?-1:c||s?s:T}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,t,r){"use strict";var n=r(1),o=r(16),a=r(8),i=r(11),l=r(13),u=r(14).f,c=r(60),s=a.Symbol;if(o&&"function"==typeof s&&(!("description"in s.prototype)||void 0!==s().description)){var f={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new s(e):void 0===e?s():s(e);return""===e&&(f[t]=!0),t};c(d,s);var p=d.prototype=s.prototype;p.constructor=d;var h=p.toString,g="Symbol(test)"==String(s("test")),v=/^Symbol\\((.*)\\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var e=l(this)?this.valueOf():this,t=h.call(e);if(i(f,e))return"";var r=g?t.slice(7,-1):t.replace(v,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:d})}},function(e,t,r){r(9)("asyncIterator")},function(e,t,r){r(9)("hasInstance")},function(e,t,r){r(9)("isConcatSpreadable")},function(e,t,r){r(9)("iterator")},function(e,t,r){r(9)("match")},function(e,t,r){r(9)("replace")},function(e,t,r){r(9)("search")},function(e,t,r){r(9)("species")},function(e,t,r){r(9)("split")},function(e,t,r){r(9)("toPrimitive")},function(e,t,r){r(9)("toStringTag")},function(e,t,r){r(9)("unscopables")},function(e,t,r){"use strict";var n=r(1),o=r(12),a=r(49),i=r(13),l=r(28),u=r(26),c=r(84),s=r(83),f=r(167),d=r(6),p=r(85),h=d("isConcatSpreadable"),g=9007199254740991,v="Maximum allowed index exceeded",m=p>=51||!o((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),y=f("concat"),b=function(e){if(!i(e))return!1;var t=e[h];return void 0!==t?!!t:a(e)};n({target:"Array",proto:!0,forced:!m||!y},{concat:function(e){var t,r,n,o,a,i=l(this),f=s(i,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(b(a=-1===t?i:arguments[t])){if(d+(o=u(a.length))>g)throw TypeError(v);for(r=0;r<o;r++,d++)r in a&&c(f,d,a[r])}else{if(d>=g)throw TypeError(v);c(f,d++,a)}return f.length=d,f}})},function(e,t,r){var n=r(12),o=r(6),a=r(85),i=o("species");e.exports=function(e){return a>=51||!n((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){var n=r(10);e.exports=n("navigator","userAgent")||""},function(e,t,r){var n=r(1),o=r(170);n({target:"Array",stat:!0,forced:!r(71)((function(e){Array.from(e)}))},{from:o})},function(e,t,r){"use strict";var n=r(7),o=r(28),a=r(171),i=r(66),l=r(26),u=r(84),c=r(45);e.exports=function(e){var t,r,s,f,d,p,h=o(e),g="function"==typeof this?this:Array,v=arguments.length,m=v>1?arguments[1]:void 0,y=void 0!==m,b=c(h),w=0;if(y&&(m=n(m,v>2?arguments[2]:void 0,2)),void 0==b||g==Array&&i(b))for(r=new g(t=l(h.length));t>w;w++)p=y?m(h[w],w):h[w],u(r,w,p);else for(d=(f=b.call(h)).next,r=new g;!(s=d.call(f)).done;w++)p=y?a(f,m,[s.value,w],!0):s.value,u(r,w,p);return r.length=w,r}},function(e,t,r){var n=r(2),o=r(69);e.exports=function(e,t,r,a){try{return a?t(n(r)[0],r[1]):t(r)}catch(t){throw o(e),t}}},function(e,t,r){var n=r(8);r(22)(n.JSON,"JSON",!0)},function(e,t,r){r(22)(Math,"Math",!0)},function(e,t,r){r(9)("dispose")},function(e,t,r){r(9)("observable")},function(e,t,r){r(9)("patternMatch")},function(e,t,r){"use strict";var n=r(86),o=[ReferenceError,TypeError,RangeError],a=!1;function i(){a=!1,n._Y=null,n._Z=null}function l(e,t){return t.some((function(t){return e instanceof t}))}t.disable=i,t.enable=function(e){e=e||{},a&&i();a=!0;var t=0,r=0,u={};function c(t){(e.allRejections||l(u[t].error,e.whitelist||o))&&(u[t].displayId=r++,e.onUnhandled?(u[t].logged=!0,e.onUnhandled(u[t].displayId,u[t].error)):(u[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach((function(e){console.warn("  "+e)}))}(u[t].displayId,u[t].error)))}n._Y=function(t){2===t._V&&u[t._1]&&(u[t._1].logged?function(t){u[t].logged&&(e.onHandled?e.onHandled(u[t].displayId,u[t].error):u[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+u[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+u[t].displayId+".")))}(t._1):clearTimeout(u[t._1].timeout),delete u[t._1])},n._Z=function(e,r){0===e._U&&(e._1=t++,u[e._1]={displayId:null,error:r,timeout:setTimeout(c.bind(null,e._1),l(r,o)?100:2e3),logged:!1})}}},function(e,t,r){"use strict";(function(t){function r(e){o.length||(n(),!0),o[o.length]=e}e.exports=r;var n,o=[],a=0;function i(){for(;a<o.length;){var e=a;if(a+=1,o[e].call(),a>1024){for(var t=0,r=o.length-a;t<r;t++)o[t]=o[t+a];o.length-=a,a=0}}o.length=0,a=0,!1}var l,u,c,s="undefined"!==typeof t?t:self,f=s.MutationObserver||s.WebKitMutationObserver;function d(e){return function(){var t=setTimeout(n,0),r=setInterval(n,50);function n(){clearTimeout(t),clearInterval(r),e()}}}"function"===typeof f?(l=1,u=new f(i),c=document.createTextNode(""),u.observe(c,{characterData:!0}),n=function(){l=-l,c.data=l}):n=d(i),r.requestFlush=n,r.makeRequestCallFromTimer=d}).call(this,r(34))},function(e,t,r){"use strict";var n=r(86);e.exports=n;var o=s(!0),a=s(!1),i=s(null),l=s(void 0),u=s(0),c=s("");function s(e){var t=new n(n._0);return t._V=1,t._W=e,t}n.resolve=function(e){if(e instanceof n)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new n(t.bind(e))}catch(e){return new n((function(t,r){r(e)}))}return s(e)};var f=function(e){return"function"===typeof Array.from?(f=Array.from,Array.from(e)):(f=function(e){return Array.prototype.slice.call(e)},Array.prototype.slice.call(e))};n.all=function(e){var t=f(e);return new n((function(e,r){if(0===t.length)return e([]);var o=t.length;function a(i,l){if(l&&("object"===typeof l||"function"===typeof l)){if(l instanceof n&&l.then===n.prototype.then){for(;3===l._V;)l=l._W;return 1===l._V?a(i,l._W):(2===l._V&&r(l._W),void l.then((function(e){a(i,e)}),r))}var u=l.then;if("function"===typeof u)return void new n(u.bind(l)).then((function(e){a(i,e)}),r)}t[i]=l,0===--o&&e(t)}for(var i=0;i<t.length;i++)a(i,t[i])}))},n.reject=function(e){return new n((function(t,r){r(e)}))},n.race=function(e){return new n((function(t,r){f(e).forEach((function(e){n.resolve(e).then(t,r)}))}))},n.prototype.catch=function(e){return this.then(null,e)}},function(e,t,r){"use strict";r.r(t),r.d(t,"Headers",(function(){return h})),r.d(t,"Request",(function(){return k})),r.d(t,"Response",(function(){return x})),r.d(t,"DOMException",(function(){return _})),r.d(t,"fetch",(function(){return T}));var n="undefined"!==typeof globalThis&&globalThis||"undefined"!==typeof self&&self||"undefined"!==typeof n&&n,o="URLSearchParams"in n,a="Symbol"in n&&"iterator"in Symbol,i="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),l="FormData"in n,u="ArrayBuffer"in n;if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(e){return e&&c.indexOf(Object.prototype.toString.call(e))>-1};function f(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function d(e){return"string"!==typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return a&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function g(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function m(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:l&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:o&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():u&&i&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):u&&(ArrayBuffer.prototype.isPrototypeOf(e)||s(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=g(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=g(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}return this.blob().then(m)}),this.text=function(){var e,t,r,n=g(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=v(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},l&&(this.formData=function(){return this.text().then(E)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=f(e),t=d(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[f(e)]},h.prototype.get=function(e){return e=f(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(f(e))},h.prototype.set=function(e,t){this.map[f(e)]=d(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},a&&(h.prototype[Symbol.iterator]=h.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function k(e,t){if(!(this instanceof k))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');var r,n,o=(t=t||{}).body;if(e instanceof k){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),w.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),("GET"===this.method||"HEAD"===this.method)&&("no-store"===t.cache||"no-cache"===t.cache)){var a=/([?&])_=[^&]*/;if(a.test(this.url))this.url=this.url.replace(a,"$1_="+(new Date).getTime());else{this.url+=(/\\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function E(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\\+/g," "),o=r.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function x(e,t){if(!(this instanceof x))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}k.prototype.clone=function(){return new k(this,{body:this._bodyInit})},b.call(k.prototype),b.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},x.error=function(){var e=new x(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];x.redirect=function(e,t){if(-1===S.indexOf(t))throw new RangeError("Invalid status code");return new x(null,{status:t,headers:{location:e}})};var _=n.DOMException;try{new _}catch(e){(_=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),_.prototype.constructor=_}function T(e,t){return new Promise((function(r,o){var a=new k(e,t);if(a.signal&&a.signal.aborted)return o(new _("Aborted","AbortError"));var l=new XMLHttpRequest;function c(){l.abort()}l.onload=function(){var e,t,n={status:l.status,statusText:l.statusText,headers:(e=l.getAllResponseHeaders()||"",t=new h,e.replace(/\\r?\\n[\\t ]+/g," ").split("\\r").map((function(e){return 0===e.indexOf("\\n")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in l?l.responseURL:n.headers.get("X-Request-URL");var o="response"in l?l.response:l.responseText;setTimeout((function(){r(new x(o,n))}),0)},l.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){o(new _("Aborted","AbortError"))}),0)},l.open(a.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(t){return e}}(a.url),!0),"include"===a.credentials?l.withCredentials=!0:"omit"===a.credentials&&(l.withCredentials=!1),"responseType"in l&&(i?l.responseType="blob":u&&a.headers.get("Content-Type")&&-1!==a.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!t||"object"!==typeof t.headers||t.headers instanceof h?a.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){l.setRequestHeader(e,d(t.headers[e]))})),a.signal&&(a.signal.addEventListener("abort",c),l.onreadystatechange=function(){4===l.readyState&&a.signal.removeEventListener("abort",c)}),l.send("undefined"===typeof a._bodyInit?null:a._bodyInit)}))}T.polyfill=!0,n.fetch||(n.fetch=T,n.Headers=h,n.Request=k,n.Response=x)},function(e,t,r){(function(t){for(var n=r(182),o="undefined"===typeof window?t:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],u=o["cancel"+i]||o["cancelRequest"+i],c=0;!l&&c<a.length;c++)l=o[a[c]+"Request"+i],u=o[a[c]+"Cancel"+i]||o[a[c]+"CancelRequest"+i];if(!l||!u){var s=0,f=0,d=[];l=function(e){if(0===d.length){var t=n(),r=Math.max(0,16.666666666666668-(t-s));s=r+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(s)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return d.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}}).call(this,r(34))},function(e,t,r){(function(t){(function(){var r,n,o,a,i,l;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(r()-i)/1e6},n=t.hrtime,a=(r=function(){var e;return 1e9*(e=n())[0]+e[1]})(),l=1e9*t.uptime(),i=a-l):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,r(51))},function(e,t,r){"use strict";var n=r(50),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function v(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}function m(){}function y(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=v.prototype;var b=y.prototype=new m;b.constructor=y,n(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,n)&&!E.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var _=/\\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===n?"."+T(u,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(_,"$&/")+"/"),C(i,t,r,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),t.push(i)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=n+T(l=e[c],c);u+=C(l,t,r,s,i)}else if("function"===typeof(s=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=C(l=l.value,t,r,s=n+T(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,r){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function N(){var e=R.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:O,forEach:function(e,t,r){O(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return N().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,r){return N().useReducer(e,t,r)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.1"},function(e,t,r){"use strict";var n=r(0),o=r(50),a=r(185);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function v(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=m.hasOwnProperty(t)?m[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,_=60108,T=60114,C=60109,O=60110,P=60112,R=60113,N=60120,L=60115,A=60116,I=60121,j=60128,M=60129,D=60130,q=60131;if("function"===typeof Symbol&&Symbol.for){var z=Symbol.for;E=z("react.element"),x=z("react.portal"),S=z("react.fragment"),_=z("react.strict_mode"),T=z("react.profiler"),C=z("react.provider"),O=z("react.context"),P=z("react.forward_ref"),R=z("react.suspense"),N=z("react.suspense_list"),L=z("react.memo"),A=z("react.lazy"),I=z("react.block"),z("react.scope"),j=z("react.opaque.id"),M=z("react.debug_trace_mode"),D=z("react.offscreen"),q=z("react.legacy_hidden")}var U,F="function"===typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\\n( *(at )?)/);U=t&&t[1]||""}return"\\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"===typeof e.stack){for(var o=e.stack.split("\\n"),a=n.stack.split("\\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?V(e):""}function $(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 22:return e=W(e.type._render,!1);case 1:return e=W(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case T:return"Profiler";case _:return"StrictMode";case R:return"Suspense";case N:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return G(e.type);case I:return G(e._render);case A:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=Y(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&J(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function ce(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ge,ve,me=(ve=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ye(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function ke(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=ke(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Re(e){if(e=eo(e)){if("function"!==typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ro(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function Le(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Ae(e,t){return e(t)}function Ie(e,t,r,n,o){return e(t,r,n,o)}function je(){}var Me=Ae,De=!1,qe=!1;function ze(){null===Oe&&null===Pe||(je(),Le())}function Ue(e,t){var r=e.stateNode;if(null===r)return null;var n=ro(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Fe=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ve){Fe=!1}function Ve(e,t,r,n,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var He=!1,We=null,$e=!1,Ge=null,Qe={onError:function(e){He=!0,We=e}};function Ye(e,t,r,n,o,a,i,l,u){He=!1,We=null,Ve.apply(Qe,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Je(o),e;if(a===n)return Je(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,u=o.child;u;){if(u===r){l=!0,r=o,n=a;break}if(u===n){l=!0,n=o,r=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===r){l=!0,r=a,n=o;break}if(u===n){l=!0,n=a,r=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var tt,rt,nt,ot,at=!1,it=[],lt=null,ut=null,ct=null,st=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function gt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function vt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=ht(t,r,n,o,a),null!==t&&(null!==(t=eo(t))&&rt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Zn(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void ot(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=eo(r))&&rt(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){yt(e)&&r.delete(t)}function wt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=eo(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&it.shift()}null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),null!==ct&&yt(ct)&&(ct=null),st.forEach(bt),ft.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,wt)))}function Et(e){function t(t){return kt(t,e)}if(0<it.length){kt(it[0],e);for(var r=1;r<it.length;r++){var n=it[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==lt&&kt(lt,e),null!==ut&&kt(ut,e),null!==ct&&kt(ct,e),st.forEach(t),ft.forEach(t),r=0;r<dt.length;r++)(n=dt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<dt.length&&null===(r=dt[0]).blockedOn;)mt(r),null===r.blockedOn&&dt.shift()}function xt(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var St={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},_t={},Tt={};function Ct(e){if(_t[e])return _t[e];if(!St[e])return e;var t,r=St[e];for(t in r)if(r.hasOwnProperty(t)&&t in Tt)return _t[e]=r[t];return e}f&&(Tt=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Rt=Ct("animationstart"),Nt=Ct("transitionend"),Lt=new Map,At=new Map,It=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function jt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(n,t),Lt.set(n,o),c(o,[n])}}(0,a.unstable_now)();var Mt=8;function Dt(e){if(0!==(1&e))return Mt=15,1;if(0!==(2&e))return Mt=14,2;if(0!==(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!==(32&e)?(Mt=11,32):0!==(t=192&e)?(Mt=10,t):0!==(256&e)?(Mt=9,256):0!==(t=3584&e)?(Mt=8,t):0!==(4096&e)?(Mt=7,4096):0!==(t=4186112&e)?(Mt=6,t):0!==(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!==(134217728&e)?(Mt=3,134217728):0!==(t=805306368&e)?(Mt=2,t):0!==(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function qt(e,t){var r=e.pendingLanes;if(0===r)return Mt=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=Mt=15;else if(0!==(a=134217727&r)){var u=a&~i;0!==u?(n=Dt(u),o=Mt):0!==(l&=a)&&(n=Dt(l),o=Mt)}else 0!==(a=r&~i)?(n=Dt(a),o=Mt):0!==l&&(n=Dt(l),o=Mt);if(0===n)return 0;if(n=r&((0>(n=31-Ht(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0===(t&i)){if(Dt(t),o<=Mt)return t;Mt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Ht(t)),n|=e[r],t&=~o;return n}function zt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ft(24&~t))?Ut(10,t):e;case 10:return 0===(e=Ft(192&~t))?Ut(8,t):e;case 8:return 0===(e=Ft(3584&~t))&&(0===(e=Ft(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ft(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ft(e){return e&-e}function Bt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Vt(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Ht(t)]=r}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/$t|0)|0},Wt=Math.log,$t=Math.LN2;var Gt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Yt=!0;function Kt(e,t,r,n){De||je();var o=Jt,a=De;De=!0;try{Ie(o,e,t,r,n)}finally{(De=a)||ze()}}function Xt(e,t,r,n){Qt(Gt,Jt.bind(null,e,t,r,n))}function Jt(e,t,r,n){var o;if(Yt)if((o=0===(4&t))&&0<it.length&&-1<pt.indexOf(e))e=ht(null,e,t,r,n),it.push(e);else{var a=Zt(e,t,r,n);if(null===a)o&&gt(e,n);else{if(o){if(-1<pt.indexOf(e))return e=ht(a,e,t,r,n),void it.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return lt=vt(lt,e,t,r,n,o),!0;case"dragenter":return ut=vt(ut,e,t,r,n,o),!0;case"mouseover":return ct=vt(ct,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,vt(st.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ft.set(a,vt(ft.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;gt(e,n)}Ln(e,t,n,null,r)}}}function Zt(e,t,r,n){var o=Te(n);if(null!==(o=Zn(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Ln(e,t,n,o,r),null}var er=null,tr=null,rr=null;function nr(){if(rr)return rr;var e,t,r=tr,n=r.length,o="value"in er?er.value:er.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return rr=o.slice(e,1<t?1-t:void 0)}function or(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ar(){return!0}function ir(){return!1}function lr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ar:ir,this.isPropagationStopped=ir,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ar)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ar)},persist:function(){},isPersistent:ar}),t}var ur,cr,sr,fr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dr=lr(fr),pr=o({},fr,{view:0,detail:0}),hr=lr(pr),gr=o({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sr&&(sr&&"mousemove"===e.type?(ur=e.screenX-sr.screenX,cr=e.screenY-sr.screenY):cr=ur=0,sr=e),ur)},movementY:function(e){return"movementY"in e?e.movementY:cr}}),vr=lr(gr),mr=lr(o({},gr,{dataTransfer:0})),yr=lr(o({},pr,{relatedTarget:0})),br=lr(o({},fr,{animationName:0,elapsedTime:0,pseudoElement:0})),wr=lr(o({},fr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kr=lr(o({},fr,{data:0})),Er={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Tr(){return _r}var Cr=lr(o({},pr,{key:function(e){if(e.key){var t=Er[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=or(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?or(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?or(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Or=lr(o({},gr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pr=lr(o({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tr})),Rr=lr(o({},fr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nr=lr(o({},gr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Lr=[9,13,27,32],Ar=f&&"CompositionEvent"in window,Ir=null;f&&"documentMode"in document&&(Ir=document.documentMode);var jr=f&&"TextEvent"in window&&!Ir,Mr=f&&(!Ar||Ir&&8<Ir&&11>=Ir),Dr=String.fromCharCode(32),qr=!1;function zr(e,t){switch(e){case"keyup":return-1!==Lr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Fr=!1;var Br={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Br[e.type]:"textarea"===t}function Hr(e,t,r,n){Ne(n),0<(t=In(t,"onChange")).length&&(r=new dr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Wr=null,$r=null;function Gr(e){Tn(e,0)}function Qr(e){if(X(to(e)))return e}function Yr(e,t){if("change"===e)return t}var Kr=!1;if(f){var Xr;if(f){var Jr="oninput"in document;if(!Jr){var Zr=document.createElement("div");Zr.setAttribute("oninput","return;"),Jr="function"===typeof Zr.oninput}Xr=Jr}else Xr=!1;Kr=Xr&&(!document.documentMode||9<document.documentMode)}function en(){Wr&&(Wr.detachEvent("onpropertychange",tn),$r=Wr=null)}function tn(e){if("value"===e.propertyName&&Qr($r)){var t=[];if(Hr(t,$r,e,Te(e)),e=Gr,De)e(t);else{De=!0;try{Ae(e,t)}finally{De=!1,ze()}}}}function rn(e,t,r){"focusin"===e?(en(),$r=r,(Wr=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qr($r)}function on(e,t){if("click"===e)return Qr(t)}function an(e,t){if("input"===e||"change"===e)return Qr(t)}var ln="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},un=Object.prototype.hasOwnProperty;function cn(e,t){if(ln(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!un.call(t,r[n])||!ln(e[r[n]],t[r[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var r,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=J((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=f&&"documentMode"in document&&11>=document.documentMode,vn=null,mn=null,yn=null,bn=!1;function wn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;bn||null==vn||vn!==J(n)||("selectionStart"in(n=vn)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},yn&&cn(yn,n)||(yn=n,0<(n=In(mn,"onSelect")).length&&(t=new dr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=vn)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(It,2);for(var kn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),En=0;En<kn.length;En++)At.set(kn[En],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sn=new Set("cancel close invalid load scroll toggle".split(" ").concat(xn));function _n(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,u,c){if(Ye.apply(this,arguments),He){if(!He)throw Error(i(198));var s=We;He=!1,We=null,$e||($e=!0,Ge=s)}}(n,t,void 0,e),e.currentTarget=null}function Tn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}else for(i=0;i<n.length;i++){if(u=(l=n[i]).instance,c=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}}}if($e)throw e=Ge,$e=!1,Ge=null,e}function Cn(e,t){var r=no(t),n=e+"__bubble";r.has(n)||(Nn(t,e,2,!1),r.add(n))}var On="_reactListening"+Math.random().toString(36).slice(2);function Pn(e){e[On]||(e[On]=!0,l.forEach((function(t){Sn.has(t)||Rn(t,!1,e,null),Rn(t,!0,e,null)})))}function Rn(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&Sn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Nn(a,e,o,t),i.add(l))}function Nn(e,t,r,n){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Kt;break;case 1:o=Xt;break;default:o=Jt}r=o.bind(null,t,r,e),o=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Ln(e,t,r,n,o){var a=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zn(l)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(qe)return e(t,r);qe=!0;try{Me(e,t,r)}finally{qe=!1,ze()}}((function(){var n=a,o=Te(r),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=dr,c=e;switch(e){case"keypress":if(0===or(r))break e;case"keydown":case"keyup":u=Cr;break;case"focusin":c="focus",u=yr;break;case"focusout":c="blur",u=yr;break;case"beforeblur":case"afterblur":u=yr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pr;break;case Ot:case Pt:case Rt:u=br;break;case Nt:u=Rr;break;case"scroll":u=hr;break;case"wheel":u=Nr;break;case"copy":case"cut":case"paste":u=wr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Or}var s=0!==(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=n;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&(null!=(g=Ue(h,d))&&s.push(An(h,g,p)))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,r,o),i.push({event:l,listeners:s}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(c=r.relatedTarget||r.fromElement)||!Zn(c)&&!c[Xn])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=n,null!==(c=(c=r.relatedTarget||r.toElement)?Zn(c):null)&&(c!==(f=Ke(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=n),u!==c)){if(s=vr,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Or,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:to(u),p=null==c?l:to(c),(l=new s(g,h+"leave",u,r,o)).target=f,l.relatedTarget=p,g=null,Zn(o)===n&&((s=new s(d,h+"enter",c,r,o)).target=p,s.relatedTarget=f,g=s),f=g,u&&c)e:{for(d=c,h=0,p=s=u;p;p=jn(p))h++;for(p=0,g=d;g;g=jn(g))p++;for(;0<h-p;)s=jn(s),h--;for(;0<p-h;)d=jn(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=jn(s),d=jn(d)}s=null}else s=null;null!==u&&Mn(i,l,u,s,!1),null!==c&&null!==f&&Mn(i,f,c,s,!0)}if("select"===(u=(l=n?to(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yr;else if(Vr(l))if(Kr)v=an;else{v=nn;var m=rn}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=on);switch(v&&(v=v(e,n))?Hr(i,v,r,o):(m&&m(e,l,n),"focusout"===e&&(m=l._wrapperState)&&m.controlled&&"number"===l.type&&oe(l,"number",l.value)),m=n?to(n):window,e){case"focusin":(Vr(m)||"true"===m.contentEditable)&&(vn=m,mn=n,yn=null);break;case"focusout":yn=mn=vn=null;break;case"mousedown":bn=!0;break;case"contextmenu":case"mouseup":case"dragend":bn=!1,wn(i,r,o);break;case"selectionchange":if(gn)break;case"keydown":case"keyup":wn(i,r,o)}var y;if(Ar)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Fr?zr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(Fr||"onCompositionStart"!==b?"onCompositionEnd"===b&&Fr&&(y=nr()):(tr="value"in(er=o)?er.value:er.textContent,Fr=!0)),0<(m=In(n,b)).length&&(b=new kr(b,e,null,r,o),i.push({event:b,listeners:m}),y?b.data=y:null!==(y=Ur(r))&&(b.data=y))),(y=jr?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(qr=!0,Dr);case"textInput":return(e=t.data)===Dr&&qr?null:e;default:return null}}(e,r):function(e,t){if(Fr)return"compositionend"===e||!Ar&&zr(e,t)?(e=nr(),rr=tr=er=null,Fr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))&&(0<(n=In(n,"onBeforeInput")).length&&(o=new kr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y))}Tn(i,t)}))}function An(e,t,r){return{instance:e,listener:t,currentTarget:r}}function In(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ue(e,r))&&n.unshift(An(e,a,o)),null!=(a=Ue(e,t))&&n.push(An(e,a,o))),e=e.return}return n}function jn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,u=l.alternate,c=l.stateNode;if(null!==u&&u===n)break;5===l.tag&&null!==c&&(l=c,o?null!=(u=Ue(r,a))&&i.unshift(An(r,u,l)):o||null!=(u=Ue(r,a))&&i.push(An(r,u,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function Dn(){}var qn=null,zn=null;function Un(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Fn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Bn="function"===typeof setTimeout?setTimeout:void 0,Vn="function"===typeof clearTimeout?clearTimeout:void 0;function Hn(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var Gn=0;var Qn=Math.random().toString(36).slice(2),Yn="__reactFiber$"+Qn,Kn="__reactProps$"+Qn,Xn="__reactContainer$"+Qn,Jn="__reactEvents$"+Qn;function Zn(e){var t=e[Yn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Xn]||r[Yn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=$n(e);null!==e;){if(r=e[Yn])return r;e=$n(e)}return t}r=(e=r).parentNode}return null}function eo(e){return!(e=e[Yn]||e[Xn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function to(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ro(e){return e[Kn]||null}function no(e){var t=e[Jn];return void 0===t&&(t=e[Jn]=new Set),t}var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){ao++,oo[ao]=e.current,e.current=t}var co={},so=io(co),fo=io(!1),po=co;function ho(e,t){var r=e.type.contextTypes;if(!r)return co;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function go(e){return null!==(e=e.childContextTypes)&&void 0!==e}function vo(){lo(fo),lo(so)}function mo(e,t,r){if(so.current!==co)throw Error(i(168));uo(so,t),uo(fo,r)}function yo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,G(t)||"Unknown",a));return o({},r,n)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||co,po=so.current,uo(so,e),uo(fo,fo.current),!0}function wo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=yo(e,t,po),n.__reactInternalMemoizedMergedChildContext=e,lo(fo),lo(so),uo(so,e)):lo(fo),uo(fo,r)}var ko=null,Eo=null,xo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,_o=a.unstable_cancelCallback,To=a.unstable_shouldYield,Co=a.unstable_requestPaint,Oo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,Ro=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Lo=a.unstable_NormalPriority,Ao=a.unstable_LowPriority,Io=a.unstable_IdlePriority,jo={},Mo=void 0!==Co?Co:function(){},Do=null,qo=null,zo=!1,Uo=Oo(),Fo=1e4>Uo?Oo:function(){return Oo()-Uo};function Bo(){switch(Po()){case Ro:return 99;case No:return 98;case Lo:return 97;case Ao:return 96;case Io:return 95;default:throw Error(i(332))}}function Vo(e){switch(e){case 99:return Ro;case 98:return No;case 97:return Lo;case 96:return Ao;case 95:return Io;default:throw Error(i(332))}}function Ho(e,t){return e=Vo(e),xo(e,t)}function Wo(e,t,r){return e=Vo(e),So(e,t,r)}function $o(){if(null!==qo){var e=qo;qo=null,_o(e)}Go()}function Go(){if(!zo&&null!==Do){zo=!0;var e=0;try{var t=Do;Ho(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),So(Ro,$o),t}finally{zo=!1}}}var Qo=k.ReactCurrentBatchConfig;function Yo(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Ko=io(null),Xo=null,Jo=null,Zo=null;function ea(){Zo=Jo=Xo=null}function ta(e){var t=Ko.current;lo(Ko),e.type._context._currentValue=t}function ra(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function na(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function oa(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(i(308));Jo=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var aa=!1;function ia(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ua(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ca(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function sa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function fa(e,t,r,n){var a=e.updateQueue;aa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((n&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=r,g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(u="function"===typeof(h=g.payload)?h.call(p,d,u):h)||void 0===u)break e;d=o({},d,u);break e;case 2:aa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,ql|=l,e.lanes=l,e.memoizedState=d}}function da(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!==typeof o)throw Error(i(191,o));o.call(n)}}}var pa=(new n.Component).refs;function ha(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ga={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.tag=1,a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=cu(),n=su(e),o=ua(r,n);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),ca(e,o),fu(e,n,r)}};function va(e,t,r,n,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!cn(r,n)||!cn(o,a))}function ma(e,t,r){var n=!1,o=co,a=t.contextType;return"object"===typeof a&&null!==a?a=oa(a):(o=go(t)?po:so.current,a=(n=null!==(n=t.contextTypes)&&void 0!==n)?ho(e,o):co),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ga,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ga.enqueueReplaceState(t,t.state,null)}function ba(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=pa,ia(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=oa(a):(a=go(t)?po:so.current,o.context=ho(e,a)),fa(e,r,o,n),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(ha(e,t,a,r),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ga.enqueueReplaceState(o,o.state,null),fa(e,r,o,n),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4)}var wa=Array.isArray;function ka(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===pa&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function Ea(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xa(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,r,n){return null===t||6!==t.tag?((t=Gu(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function c(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=ka(e,t,r),n.return=e,n):((n=Hu(r.type,r.key,r.props,null,e.mode,n)).ref=ka(e,t,r),n.return=e,n)}function s(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Qu(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Wu(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t||"number"===typeof t)return(t=Gu(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case E:return(r=Hu(t.type,t.key,t.props,null,e.mode,r)).ref=ka(e,null,t),r.return=e,r;case x:return(t=Qu(t,e.mode,r)).return=e,t}if(wa(t)||B(t))return(t=Wu(t,e.mode,r,null)).return=e,t;Ea(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"===typeof r||"number"===typeof r)return null!==o?null:u(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case E:return r.key===o?r.type===S?f(e,t,r.props.children,n,o):c(e,t,r,n):null;case x:return r.key===o?s(e,t,r,n):null}if(wa(r)||B(r))return null!==o?null:f(e,t,r,n,null);Ea(e,r)}return null}function h(e,t,r,n,o){if("string"===typeof n||"number"===typeof n)return u(t,e=e.get(r)||null,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case E:return e=e.get(null===n.key?r:n.key)||null,n.type===S?f(t,e,n.props.children,o,n.key):c(t,e,n,o);case x:return s(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(wa(n)||B(n))return f(t,e=e.get(r)||null,n,o,null);Ea(t,n)}return null}function g(o,i,l,u){for(var c=null,s=null,f=i,g=i=0,v=null;null!==f&&g<l.length;g++){f.index>g?(v=f,f=null):v=f.sibling;var m=p(o,f,l[g],u);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,g),null===s?c=m:s.sibling=m,s=m,f=v}if(g===l.length)return r(o,f),c;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],u))&&(i=a(f,i,g),null===s?c=f:s.sibling=f,s=f);return c}for(f=n(o,f);g<l.length;g++)null!==(v=h(f,o,g,l[g],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?g:v.key),i=a(v,i,g),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=B(u);if("function"!==typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,g=l,v=l=0,m=null,y=u.next();null!==g&&!y.done;v++,y=u.next()){g.index>v?(m=g,g=null):m=g.sibling;var b=p(o,g,y.value,c);if(null===b){null===g&&(g=m);break}e&&g&&null===b.alternate&&t(o,g),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,g=m}if(y.done)return r(o,g),s;if(null===g){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(g=n(o,g);!y.done;v++,y=u.next())null!==(y=h(g,o,v,y.value,c))&&(e&&null!==y.alternate&&g.delete(null===y.key?v:y.key),l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(o,e)})),s}return function(e,n,a,u){var c="object"===typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"===typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=n;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===S){r(e,c.sibling),(n=o(c,a.props.children)).return=e,e=n;break e}break;default:if(c.elementType===a.type){r(e,c.sibling),(n=o(c,a.props)).ref=ka(e,c,a),n.return=e,e=n;break e}}r(e,c);break}t(e,c),c=c.sibling}a.type===S?((n=Wu(a.props.children,e.mode,u,a.key)).return=e,e=n):((u=Hu(a.type,a.key,a.props,null,e.mode,u)).ref=ka(e,n,a),u.return=e,e=u)}return l(e);case x:e:{for(c=a.key;null!==n;){if(n.key===c){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Qu(a,e.mode,u)).return=e,e=n}return l(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Gu(a,e.mode,u)).return=e,e=n),l(e);if(wa(a))return g(e,n,a,u);if(B(a))return v(e,n,a,u);if(s&&Ea(e,a),"undefined"===typeof a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,G(e.type)||"Component"))}return r(e,n)}}var Sa=xa(!0),_a=xa(!1),Ta={},Ca=io(Ta),Oa=io(Ta),Pa=io(Ta);function Ra(e){if(e===Ta)throw Error(i(174));return e}function Na(e,t){switch(uo(Pa,t),uo(Oa,e),uo(Ca,Ta),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Ca),uo(Ca,t)}function La(){lo(Ca),lo(Oa),lo(Pa)}function Aa(e){Ra(Pa.current);var t=Ra(Ca.current),r=he(t,e.type);t!==r&&(uo(Oa,e),uo(Ca,r))}function Ia(e){Oa.current===e&&(lo(Ca),lo(Oa))}var ja=io(0);function Ma(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Da=null,qa=null,za=!1;function Ua(e,t){var r=Fu(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Fa(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(za){var t=qa;if(t){var r=t;if(!Fa(e,t)){if(!(t=Wn(r.nextSibling))||!Fa(e,t))return e.flags=-1025&e.flags|2,za=!1,void(Da=e);Ua(Da,r)}Da=e,qa=Wn(t.firstChild)}else e.flags=-1025&e.flags|2,za=!1,Da=e}}function Va(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Da=e}function Ha(e){if(e!==Da)return!1;if(!za)return Va(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Fn(t,e.memoizedProps))for(t=qa;t;)Ua(e,t),t=Wn(t.nextSibling);if(Va(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){qa=Wn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}qa=null}}else qa=Da?Wn(e.stateNode.nextSibling):null;return!0}function Wa(){qa=Da=null,za=!1}var $a=[];function Ga(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var Qa=k.ReactCurrentDispatcher,Ya=k.ReactCurrentBatchConfig,Ka=0,Xa=null,Ja=null,Za=null,ei=!1,ti=!1;function ri(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!ln(e[r],t[r]))return!1;return!0}function oi(e,t,r,n,o,a){if(Ka=a,Xa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qa.current=null===e||null===e.memoizedState?Ri:Ni,e=r(n,o),ti){a=0;do{if(ti=!1,!(25>a))throw Error(i(301));a+=1,Za=Ja=null,t.updateQueue=null,Qa.current=Li,e=r(n,o)}while(ti)}if(Qa.current=Pi,t=null!==Ja&&null!==Ja.next,Ka=0,Za=Ja=Xa=null,ei=!1,t)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Xa.memoizedState=Za=e:Za=Za.next=e,Za}function ii(){if(null===Ja){var e=Xa.alternate;e=null!==e?e.memoizedState:null}else e=Ja.next;var t=null===Za?Xa.memoizedState:Za.next;if(null!==t)Za=t,Ja=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ja=e).memoizedState,baseState:Ja.baseState,baseQueue:Ja.baseQueue,queue:Ja.queue,next:null},null===Za?Xa.memoizedState=Za=e:Za=Za.next=e}return Za}function li(e,t){return"function"===typeof t?t(e):t}function ui(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Ja,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var u=l=a=null,c=o;do{var s=c.lane;if((Ka&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),n=c.eagerReducer===e?c.eagerState:e(n,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=n):u=u.next=f,Xa.lanes|=s,ql|=s}c=c.next}while(null!==c&&c!==o);null===u?a=n:u.next=l,ln(n,t.memoizedState)||(Ii=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=u,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function ci(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ln(a,t.memoizedState)||(Ii=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function si(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Ka&e)===e)&&(t._workInProgressVersionPrimary=n,$a.push(t))),e)return r(t._source);throw $a.push(t),Error(i(350))}function fi(e,t,r,n){var o=Rl;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Qa.current,c=u.useState((function(){return si(o,t,r)})),s=c[1],f=c[0];c=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var v=Xa;return e.memoizedState={refs:p,source:t,subscribe:n},u.useEffect((function(){p.getSnapshot=r,p.setSnapshot=s;var e=a(t._source);if(!ln(l,e)){e=r(t._source),ln(f,e)||(s(e),e=su(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var u=31-Ht(i),c=1<<u;n[u]|=e,i&=~c}}}),[r,t,n]),u.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=su(v);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),ln(h,r)&&ln(g,t)&&ln(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:f}).dispatch=s=Oi.bind(null,Xa,e),c.queue=e,c.baseQueue=null,f=si(o,t,r),c.memoizedState=c.baseState=f),f}function di(e,t,r){return fi(ii(),e,t,r)}function pi(e){var t=ai();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:e}).dispatch=Oi.bind(null,Xa,e),[t.memoizedState,e]}function hi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Xa.updateQueue)?(t={lastEffect:null},Xa.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function gi(e){return e={current:e},ai().memoizedState=e}function vi(){return ii().memoizedState}function mi(e,t,r,n){var o=ai();Xa.flags|=e,o.memoizedState=hi(1|t,r,void 0,void 0===n?null:n)}function yi(e,t,r,n){var o=ii();n=void 0===n?null:n;var a=void 0;if(null!==Ja){var i=Ja.memoizedState;if(a=i.destroy,null!==n&&ni(n,i.deps))return void hi(t,r,a,n)}Xa.flags|=e,o.memoizedState=hi(1|t,r,a,n)}function bi(e,t){return mi(516,4,e,t)}function wi(e,t){return yi(516,4,e,t)}function ki(e,t){return yi(4,2,e,t)}function Ei(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xi(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,yi(4,2,Ei.bind(null,t,e),r)}function Si(){}function _i(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Ti(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ci(e,t){var r=Bo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Ya.transition;Ya.transition=1;try{e(!1),t()}finally{Ya.transition=r}}))}function Oi(e,t,r){var n=cu(),o=su(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Xa||null!==i&&i===Xa)ti=ei=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,r);if(a.eagerReducer=i,a.eagerState=u,ln(u,l))return}catch(e){}fu(e,o,n)}}var Pi={readContext:oa,useCallback:ri,useContext:ri,useEffect:ri,useImperativeHandle:ri,useLayoutEffect:ri,useMemo:ri,useReducer:ri,useRef:ri,useState:ri,useDebugValue:ri,useDeferredValue:ri,useTransition:ri,useMutableSource:ri,useOpaqueIdentifier:ri,unstable_isNewReconciler:!1},Ri={readContext:oa,useCallback:function(e,t){return ai().memoizedState=[e,void 0===t?null:t],e},useContext:oa,useEffect:bi,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,mi(4,2,Ei.bind(null,t,e),r)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var r=ai();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ai();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oi.bind(null,Xa,e),[n.memoizedState,e]},useRef:gi,useState:pi,useDebugValue:Si,useDeferredValue:function(e){var t=pi(e),r=t[0],n=t[1];return bi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=pi(!1),t=e[0];return gi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ai();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},fi(n,e,t,r)},useOpaqueIdentifier:function(){if(za){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(Gn++).toString(36))),Error(i(355))})),r=pi(t)[1];return 0===(2&Xa.mode)&&(Xa.flags|=516,hi(5,(function(){r("r:"+(Gn++).toString(36))}),void 0,null)),t}return pi(t="r:"+(Gn++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ui,useRef:vi,useState:function(){return ui(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ui(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Li={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ci,useRef:vi,useState:function(){return ci(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ci(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ci(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ci(li)[0]},unstable_isNewReconciler:!1},Ai=k.ReactCurrentOwner,Ii=!1;function ji(e,t,r,n){t.child=null===e?_a(t,null,r,n):Sa(t,e.child,r,n)}function Mi(e,t,r,n,o){r=r.render;var a=t.ref;return na(t,o),n=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Di(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!==typeof i||Bu(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Hu(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,qi(e,t,i,n,o,a))}return i=e.child,0===(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:cn)(o,n)&&e.ref===t.ref)?rl(e,t,a):(t.flags|=1,(e=Vu(i,n)).ref=t.ref,e.return=t,t.child=e)}function qi(e,t,r,n,o,a){if(null!==e&&cn(e.memoizedProps,n)&&e.ref===t.ref){if(Ii=!1,0===(a&o))return t.lanes=e.lanes,rl(e,t,a);0!==(16384&e.flags)&&(Ii=!0)}return Fi(e,t,r,n,a)}function zi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},bu(t,r);else{if(0===(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(t,e),null;t.memoizedState={baseLanes:0},bu(t,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,bu(t,n);return ji(e,t,o,r),t.child}function Ui(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Fi(e,t,r,n,o){var a=go(r)?po:so.current;return a=ho(t,a),na(t,o),r=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Bi(e,t,r,n,o){if(go(r)){var a=!0;bo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ma(t,r,n),ba(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=r.contextType;"object"===typeof c&&null!==c?c=oa(c):c=ho(t,c=go(r)?po:so.current);var s=r.getDerivedStateFromProps,f="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==n||u!==c)&&ya(t,i,n,c),aa=!1;var d=t.memoizedState;i.state=d,fa(t,n,i,o),u=t.memoizedState,l!==n||d!==u||fo.current||aa?("function"===typeof s&&(ha(t,r,s,n),u=t.memoizedState),(l=aa||va(t,r,l,n,d,u,c))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=c,n=l):("function"===typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,la(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:Yo(t.type,l),i.props=c,f=t.pendingProps,d=i.context,"object"===typeof(u=r.contextType)&&null!==u?u=oa(u):u=ho(t,u=go(r)?po:so.current);var p=r.getDerivedStateFromProps;(s="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ya(t,i,n,u),aa=!1,d=t.memoizedState,i.state=d,fa(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||fo.current||aa?("function"===typeof p&&(ha(t,r,p,n),h=t.memoizedState),(c=aa||va(t,r,c,n,d,h,u))?(s||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=c):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Vi(e,t,r,n,a,o)}function Vi(e,t,r,n,o,a){Ui(e,t);var i=0!==(64&t.flags);if(!n&&!i)return o&&wo(t,r,!1),rl(e,t,a);n=t.stateNode,Ai.current=t;var l=i&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,l,a)):ji(e,t,l,a),t.memoizedState=n.state,o&&wo(t,r,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Na(e,t.containerInfo)}var Wi,$i,Gi,Qi={dehydrated:null,retryLane:0};function Yi(e,t,r){var n,o=t.pendingProps,a=ja.current,i=!1;return(n=0!==(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!==(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),uo(ja,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,i?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,e):"number"===typeof o.unstable_expectedLoadTime?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,t.lanes=33554432,e):((r=$u({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=Ji(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Qi,o):(r=Xi(e,t,o.children,r),t.memoizedState=null,r))}function Ki(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0===(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=$u(t,o,0,null),r=Wu(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function Xi(e,t,r,n){var o=e.child;return e=o.sibling,r=Vu(o,{mode:"visible",children:r}),0===(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}function Ji(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0===(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Vu(i,l),null!==e?n=Vu(e,n):(n=Wu(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}function Zi(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ra(e.return,t)}function el(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function tl(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(ji(e,t,n.children,r),0!==(2&(n=ja.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,r);else if(19===e.tag)Zi(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(uo(ja,n),0===(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Ma(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),el(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ma(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}el(t,!0,r,null,a,t.lastEffect);break;case"together":el(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function rl(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),ql|=t.lanes,0!==(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Vu(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Vu(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function nl(e,t){if(!za)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ol(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return go(t.type)&&vo(),null;case 3:return La(),lo(fo),lo(so),Ga(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=Ra(Pa.current);if(r=t.type,null!==e&&null!=t.stateNode)$i(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=Ra(Ca.current),Ha(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[Yn]=t,n[Kn]=l,r){case"dialog":Cn("cancel",n),Cn("close",n);break;case"iframe":case"object":case"embed":Cn("load",n);break;case"video":case"audio":for(e=0;e<xn.length;e++)Cn(xn[e],n);break;case"source":Cn("error",n);break;case"img":case"image":case"link":Cn("error",n),Cn("load",n);break;case"details":Cn("toggle",n);break;case"input":ee(n,l),Cn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Cn("invalid",n);break;case"textarea":ue(n,l),Cn("invalid",n)}for(var c in Se(r,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"===typeof a?n.textContent!==a&&(e=["children",a]):"number"===typeof a&&n.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cn("scroll",n));switch(r){case"input":K(n),ne(n,l,!0);break;case"textarea":K(n),se(n);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(n.onclick=Dn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=pe(r)),e===fe?"script"===r?((e=c.createElement("div")).innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=c.createElement(r,{is:n.is}):(e=c.createElement(r),"select"===r&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,r),e[Yn]=t,e[Kn]=n,Wi(e,t),t.stateNode=e,c=_e(r,n),r){case"dialog":Cn("cancel",e),Cn("close",e),a=n;break;case"iframe":case"object":case"embed":Cn("load",e),a=n;break;case"video":case"audio":for(a=0;a<xn.length;a++)Cn(xn[a],e);a=n;break;case"source":Cn("error",e),a=n;break;case"img":case"image":case"link":Cn("error",e),Cn("load",e),a=n;break;case"details":Cn("toggle",e),a=n;break;case"input":ee(e,n),a=Z(e,n),Cn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Cn("invalid",e);break;case"textarea":ue(e,n),a=le(e,n),Cn("invalid",e);break;default:a=n}Se(r,a);var s=a;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?Ee(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===l?"string"===typeof f?("textarea"!==r||""!==f)&&ye(e,f):"number"===typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cn("scroll",e):null!=f&&w(e,l,f,c))}switch(r){case"input":K(e),ne(e,n,!1);break;case"textarea":K(e),se(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Dn)}Un(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Gi(0,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));r=Ra(Pa.current),Ra(Ca.current),Ha(t)?(n=t.stateNode,r=t.memoizedProps,n[Yn]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Yn]=t,t.stateNode=n)}return null;case 13:return lo(ja),n=t.memoizedState,0!==(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):r=null!==e.memoizedState,n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&ja.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),null===Rl||0===(134217727&ql)&&0===(134217727&zl)||gu(Rl,Ll))),(n||r)&&(t.flags|=4),null);case 4:return La(),null===e&&Pn(t.stateNode.containerInfo),null;case 10:return ta(t),null;case 17:return go(t.type)&&vo(),null;case 19:if(lo(ja),null===(n=t.memoizedState))return null;if(l=0!==(64&t.flags),null===(c=n.rendering))if(l)nl(n,!1);else{if(0!==jl||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ma(e))){for(t.flags|=64,nl(n,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return uo(ja,1&ja.current|2),t.child}e=e.sibling}null!==n.tail&&Fo()>Vl&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ma(c))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),nl(n,!0),null===n.tail&&"hidden"===n.tailMode&&!c.alternate&&!za)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Fo()-n.renderingStartTime>Vl&&1073741824!==r&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432);n.isBackwards?(c.sibling=t.child,t.child=c):(null!==(r=n.last)?r.sibling=c:t.child=c,n.last=c)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Fo(),r.sibling=null,t=ja.current,uo(ja,l?1&t|2:1&t),r):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function al(e){switch(e.tag){case 1:go(e.type)&&vo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(La(),lo(fo),lo(so),Ga(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return lo(ja),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(ja),null;case 4:return La(),null;case 10:return ta(e),null;case 23:case 24:return wu(),null;default:return null}}function il(e,t){try{var r="",n=t;do{r+=$(n),n=n.return}while(n);var o=r}catch(e){o="\\nError generating stack: "+e.message+"\\n"+e.stack}return{value:e,source:t,stack:o}}function ll(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},$i=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,Ra(Ca.current);var i,l=null;switch(r){case"input":a=Z(e,a),n=Z(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!==typeof a.onClick&&"function"===typeof n.onClick&&(e.onclick=Dn)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var s=n[f];if(c=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(r||(r={}),r[i]=s[i])}else r||(l||(l=[]),l.push(f,r)),r=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!==typeof s&&"number"!==typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cn("scroll",e),l||c===s||(l=[])):"object"===typeof s&&null!==s&&s.$$typeof===j?s.toString():(l=l||[]).push(f,s))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Gi=function(e,t,r,n){r!==n&&(t.flags|=4)};var ul="function"===typeof WeakMap?WeakMap:Map;function cl(e,t,r){(r=ua(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Gl||(Gl=!0,Ql=n),ll(0,t)},r}function sl(e,t,r){(r=ua(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var o=t.value;r.payload=function(){return ll(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(r.callback=function(){"function"!==typeof n&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var fl="function"===typeof WeakSet?WeakSet:Set;function dl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){Du(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Yo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hn(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function hl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(Iu(r,e),Au(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:Yo(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&da(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}da(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Un(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&Et(r)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function gl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"===typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,n.style.display=ke("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function vl(e,t){if(Eo&&"function"===typeof Eo.onCommitFiberUnmount)try{Eo.onCommitFiberUnmount(ko,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!==(4&n))Iu(t,r);else{n=t;try{o()}catch(e){Du(n,e)}}r=r.next}while(r!==e)}break;case 1:if(dl(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Du(t,e)}break;case 5:dl(t);break;case 4:El(e,t)}}function ml(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var t=e.return;null!==t;){if(yl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(ye(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||yl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?wl(e,r,t):kl(e,r,t)}function wl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=Dn));else if(4!==n&&null!==(e=e.child))for(wl(e,t,r),e=e.sibling;null!==e;)wl(e,t,r),e=e.sibling}function kl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(kl(e,t,r),e=e.sibling;null!==e;)kl(e,t,r),e=e.sibling}function El(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=u;;)if(vl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}n?(l=r,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(vl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function xl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3===(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Kn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),_e(e,o),t=_e(e,n),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?Ee(r,u):"dangerouslySetInnerHTML"===l?me(r,u):"children"===l?ye(r,u):w(r,l,u,t)}switch(e){case"input":re(r,n);break;case"textarea":ce(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,Et(r.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bl=Fo(),gl(t.child,!0)),void Sl(t);case 19:return void Sl(t);case 17:return;case 23:case 24:return void gl(t,null!==t.memoizedState)}throw Error(i(163))}function Sl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new fl),t.forEach((function(t){var n=zu.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function _l(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Tl=Math.ceil,Cl=k.ReactCurrentDispatcher,Ol=k.ReactCurrentOwner,Pl=0,Rl=null,Nl=null,Ll=0,Al=0,Il=io(0),jl=0,Ml=null,Dl=0,ql=0,zl=0,Ul=0,Fl=null,Bl=0,Vl=1/0;function Hl(){Vl=Fo()+500}var Wl,$l=null,Gl=!1,Ql=null,Yl=null,Kl=!1,Xl=null,Jl=90,Zl=[],eu=[],tu=null,ru=0,nu=null,ou=-1,au=0,iu=0,lu=null,uu=!1;function cu(){return 0!==(48&Pl)?Fo():-1!==ou?ou:ou=Fo()}function su(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Bo()?1:2;if(0===au&&(au=Dl),0!==Qo.transition){0!==iu&&(iu=null!==Fl?Fl.pendingLanes:0),e=au;var t=4186112&~iu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Bo(),0!==(4&Pl)&&98===e?e=Ut(12,au):e=Ut(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au),e}function fu(e,t,r){if(50<ru)throw ru=0,nu=null,Error(i(185));if(null===(e=du(e,t)))return null;Vt(e,t,r),e===Rl&&(zl|=t,4===jl&&gu(e,Ll));var n=Bo();1===t?0!==(8&Pl)&&0===(48&Pl)?vu(e):(pu(e,r),0===Pl&&(Hl(),$o())):(0===(4&Pl)||98!==n&&99!==n||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,r)),Fl=e}function du(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function pu(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),c=1<<u,s=a[u];if(-1===s){if(0===(c&n)||0!==(c&o)){s=t,Dt(c);var f=Mt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(n=qt(e,e===Rl?Ll:0),t=Mt,0===n)null!==r&&(r!==jo&&_o(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==jo&&_o(r)}15===t?(r=vu.bind(null,e),null===Do?(Do=[r],qo=So(Ro,Go)):Do.push(r),r=jo):14===t?r=Wo(99,vu.bind(null,e)):r=Wo(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),hu.bind(null,e)),e.callbackPriority=t,e.callbackNode=r}}function hu(e){if(ou=-1,iu=au=0,0!==(48&Pl))throw Error(i(327));var t=e.callbackNode;if(Lu()&&e.callbackNode!==t)return null;var r=qt(e,e===Rl?Ll:0);if(0===r)return null;var n=r,o=Pl;Pl|=16;var a=xu();for(Rl===e&&Ll===n||(Hl(),ku(e,n));;)try{Tu();break}catch(t){Eu(e,t)}if(ea(),Cl.current=a,Pl=o,null!==Nl?n=0:(Rl=null,Ll=0,n=jl),0!==(Dl&zl))ku(e,0);else if(0!==n){if(2===n&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(r=zt(e))&&(n=Su(e,r))),1===n)throw t=Ml,ku(e,0),gu(e,r),pu(e,Fo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:Pu(e);break;case 3:if(gu(e,r),(62914560&r)===r&&10<(n=Bl+500-Fo())){if(0!==qt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Bn(Pu.bind(null,e),n);break}Pu(e);break;case 4:if(gu(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Ht(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Fo()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Tl(r/1960))-r)){e.timeoutHandle=Bn(Pu.bind(null,e),r);break}Pu(e);break;case 5:Pu(e);break;default:throw Error(i(329))}}return pu(e,Fo()),e.callbackNode===t?hu.bind(null,e):null}function gu(e,t){for(t&=~Ul,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Ht(t),n=1<<r;e[r]=-1,t&=~n}}function vu(e){if(0!==(48&Pl))throw Error(i(327));if(Lu(),e===Rl&&0!==(e.expiredLanes&Ll)){var t=Ll,r=Su(e,t);0!==(Dl&zl)&&(r=Su(e,t=qt(e,t)))}else r=Su(e,t=qt(e,0));if(0!==e.tag&&2===r&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(t=zt(e))&&(r=Su(e,t))),1===r)throw r=Ml,ku(e,0),gu(e,t),pu(e,Fo()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Pu(e),pu(e,Fo()),null}function mu(e,t){var r=Pl;Pl|=1;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function yu(e,t){var r=Pl;Pl&=-2,Pl|=8;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function bu(e,t){uo(Il,Al),Al|=t,Dl|=t}function wu(){Al=Il.current,lo(Il)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Vn(r)),null!==Nl)for(r=Nl.return;null!==r;){var n=r;switch(n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&vo();break;case 3:La(),lo(fo),lo(so),Ga();break;case 5:Ia(n);break;case 4:La();break;case 13:case 19:lo(ja);break;case 10:ta(n);break;case 23:case 24:wu()}r=r.return}Rl=e,Nl=Vu(e.current,null),Ll=Al=Dl=t,jl=0,Ml=null,Ul=zl=ql=0}function Eu(e,t){for(;;){var r=Nl;try{if(ea(),Qa.current=Pi,ei){for(var n=Xa.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}ei=!1}if(Ka=0,Za=Ja=Xa=null,ti=!1,Ol.current=null,null===r||null===r.return){jl=1,Ml=t,Nl=null;break}e:{var a=e,i=r.return,l=r,u=t;if(t=Ll,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u;if(0===(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!==(1&ja.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var m=new Set;m.add(c),d.updateQueue=m}else v.add(c);if(0===(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ua(-1,1);y.tag=2,ca(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ul,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=qu.bind(null,a,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((G(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==jl&&(jl=2),u=il(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,cl(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0===(64&d.flags)&&("function"===typeof k.getDerivedStateFromError||null!==E&&"function"===typeof E.componentDidCatch&&(null===Yl||!Yl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,sl(d,a,t));break e}}d=d.return}while(null!==d)}Ou(r)}catch(e){t=e,Nl===r&&null!==r&&(Nl=r=r.return);continue}break}}function xu(){var e=Cl.current;return Cl.current=Pi,null===e?Pi:e}function Su(e,t){var r=Pl;Pl|=16;var n=xu();for(Rl===e&&Ll===t||ku(e,t);;)try{_u();break}catch(t){Eu(e,t)}if(ea(),Pl=r,Cl.current=n,null!==Nl)throw Error(i(261));return Rl=null,Ll=0,jl}function _u(){for(;null!==Nl;)Cu(Nl)}function Tu(){for(;null!==Nl&&!To();)Cu(Nl)}function Cu(e){var t=Wl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Ou(e):Nl=t,Ol.current=null}function Ou(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(r=ol(r,t,Al)))return void(Nl=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!==(1073741824&Al)||0===(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=al(t)))return r.flags&=2047,void(Nl=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===jl&&(jl=5)}function Pu(e){var t=Bo();return Ho(99,Ru.bind(null,e,t)),null}function Ru(e,t){do{Lu()}while(null!==Xl);if(0!==(48&Pl))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,l[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0===(24&n)&&tu.has(e)&&tu.delete(e),e===Rl&&(Nl=Rl=null,Ll=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=Pl,Pl|=32,Ol.current=null,qn=Yt,hn(l=pn())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,v=l,m=null;t:for(;;){for(var y;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)m=v,v=y;for(;;){if(v===l)break t;if(m===u&&++h===a&&(d=f),m===c&&++g===s&&(p=f),null!==(y=v.nextSibling))break;m=(v=m).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zn={focusedElem:l,selectionRange:u},Yt=!1,lu=null,uu=!1,$l=n;do{try{Nu()}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);lu=null,$l=n;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ye($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bl($l),$l.flags&=-3;break;case 6:bl($l),$l.flags&=-3,xl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,xl($l.alternate,$l);break;case 4:xl($l.alternate,$l);break;case 8:El(l,u=$l);var E=u.alternate;ml(u),null!==E&&ml(E)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=zn,w=pn(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&dn(b.ownerDocument.documentElement,b)){null!==l&&hn(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=fn(b,E),a=fn(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Yt=!!qn,zn=qn=null,e.current=r,$l=n;do{try{for(b=e;null!==$l;){var x=$l.flags;if(36&x&&hl(b,$l.alternate,$l),128&x){w=void 0;var S=$l.ref;if(null!==S){var _=$l.stateNode;switch($l.tag){case 5:w=_;break;default:w=_}"function"===typeof S?S(w):S.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Mo(),Pl=o}else e.current=r;if(Kl)Kl=!1,Xl=e,Jl=t;else for($l=n;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((x=$l).sibling=null,x.stateNode=null),$l=t;if(0===(n=e.pendingLanes)&&(Yl=null),1===n?e===nu?ru++:(ru=0,nu=e):ru=0,r=r.stateNode,Eo&&"function"===typeof Eo.onCommitFiberRoot)try{Eo.onCommitFiberRoot(ko,r,void 0,64===(64&r.current.flags))}catch(e){}if(pu(e,Fo()),Gl)throw Gl=!1,e=Ql,Ql=null,e;return 0!==(8&Pl)||$o(),null}function Nu(){for(;null!==$l;){var e=$l.alternate;uu||null===lu||(0!==(8&$l.flags)?et($l,lu)&&(uu=!0):13===$l.tag&&_l(e,$l)&&et($l,lu)&&(uu=!0));var t=$l.flags;0!==(256&t)&&pl(e,$l),0===(512&t)||Kl||(Kl=!0,Wo(97,(function(){return Lu(),null}))),$l=$l.nextEffect}}function Lu(){if(90!==Jl){var e=97<Jl?97:Jl;return Jl=90,Ho(e,ju)}return!1}function Au(e,t){Zl.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function Iu(e,t){eu.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function ju(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!==(48&Pl))throw Error(i(331));var t=Pl;Pl|=32;var r=eu;eu=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(r=Zl,Zl=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Pl=t,$o(),!0}function Mu(e,t,r){ca(e,t=cl(0,t=il(r,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Du(e,t){if(3===e.tag)Mu(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Mu(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"===typeof r.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n))){var o=sl(r,e=il(t,e),1);if(ca(r,o),o=cu(),null!==(r=du(r,1)))Vt(r,1,o),pu(r,o);else if("function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function qu(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&r,Rl===e&&(Ll&r)===r&&(4===jl||3===jl&&(62914560&Ll)===Ll&&500>Fo()-Bl?ku(e,0):Ul|=r),pu(e,t)}function zu(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Bo()?1:2:(0===au&&(au=Dl),0===(t=Ft(62914560&~au))&&(t=4194304))),r=cu(),null!==(e=du(e,t))&&(Vt(e,t,r),pu(e,r))}function Uu(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,r,n){return new Uu(e,t,r,n)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var r=e.alternate;return null===r?((r=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Hu(e,t,r,n,o,a){var l=2;if(n=e,"function"===typeof e)Bu(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Wu(r.children,o,a,t);case M:l=8,o|=16;break;case _:l=8,o|=1;break;case T:return(e=Fu(12,r,t,8|o)).elementType=T,e.type=T,e.lanes=a,e;case R:return(e=Fu(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case N:return(e=Fu(19,r,t,o)).elementType=N,e.lanes=a,e;case D:return $u(r,o,a,t);case q:return(e=Fu(24,r,t,o)).elementType=q,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case O:l=9;break e;case P:l=11;break e;case L:l=14;break e;case A:l=16,n=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Fu(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Wu(e,t,r,n){return(e=Fu(7,e,n,t)).lanes=r,e}function $u(e,t,r,n){return(e=Fu(23,e,n,t)).elementType=D,e.lanes=r,e}function Gu(e,t,r){return(e=Fu(6,e,null,t)).lanes=r,e}function Qu(e,t,r){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Xu(e,t,r,n){var o=t.current,a=cu(),l=su(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var u=r;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(go(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===r.tag){var c=r.type;if(go(c)){r=yo(r,c,u);break e}}r=u}else r=co;return null===t.context?t.context=r:t.pendingContext=r,(t=ua(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ca(o,t),fu(o,l,a),l}function Ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Yu(e,t,null!=r&&!0===r.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,ia(t),e[Xn]=r.current,Pn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function rc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function nc(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof o){var l=o;o=function(){var e=Ju(i);l.call(e)}}Xu(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new tc(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"===typeof o){var u=o;o=function(){var e=Ju(i);u.call(e)}}yu((function(){Xu(t,i,e,o)}))}return Ju(i)}function oc(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rc(t))throw Error(i(200));return Ku(e,t,null,r)}Wl=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fo.current)Ii=!0;else{if(0===(r&n)){switch(Ii=!1,t.tag){case 3:Hi(t),Wa();break;case 5:Aa(t);break;case 1:go(t.type)&&bo(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;uo(Ko,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(r&t.child.childLanes)?Yi(e,t,r):(uo(ja,1&ja.current),null!==(t=rl(e,t,r))?t.sibling:null);uo(ja,1&ja.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(64&e.flags)){if(n)return tl(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(ja,ja.current),n)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,r)}return rl(e,t,r)}Ii=0!==(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=ho(t,so.current),na(t,r),o=oi(null,t,n,e,o,r),t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,go(n)){var a=!0;bo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ia(t);var l=n.getDerivedStateFromProps;"function"===typeof l&&ha(t,n,l,e),o.updater=ga,t.stateNode=o,o._reactInternals=t,ba(t,n,e,r),t=Vi(null,t,n,!0,a,r)}else t.tag=0,ji(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Bu(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===P)return 11;if(e===L)return 14}return 2}(o),e=Yo(o,e),a){case 0:t=Fi(null,t,o,e,r);break e;case 1:t=Bi(null,t,o,e,r);break e;case 11:t=Mi(null,t,o,e,r);break e;case 14:t=Di(null,t,o,Yo(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Fi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Bi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 3:if(Hi(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),fa(t,n,null,r),(n=t.memoizedState.element)===o)Wa(),t=rl(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(qa=Wn(t.stateNode.containerInfo.firstChild),Da=t,a=za=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(r=_a(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else ji(e,t,n,r),Wa();t=t.child}return t;case 5:return Aa(t),null===e&&Ba(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Fn(n,o)?l=null:null!==a&&Fn(n,a)&&(t.flags|=16),Ui(e,t),ji(e,t,l,r),t.child;case 6:return null===e&&Ba(t),null;case 13:return Yi(e,t,r);case 4:return Na(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Sa(t,null,n,r):ji(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Mi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 7:return ji(e,t,t.pendingProps,r),t.child;case 8:case 12:return ji(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(uo(Ko,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=ln(u,a)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!fo.current){t=rl(e,t,r);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===n&&0!==(s.observedBits&a)){1===u.tag&&((s=ua(-1,r&-r)).tag=2,ca(u,s)),u.lanes|=r,null!==(s=u.alternate)&&(s.lanes|=r),ra(u.return,r),c.lanes|=r;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}ji(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,na(t,r),n=n(o=oa(o,a.unstable_observedBits)),t.flags|=1,ji(e,t,n,r),t.child;case 14:return a=Yo(o=t.type,t.pendingProps),Di(e,t,o,a=Yo(o.type,a),n,r);case 15:return qi(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Yo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,go(n)?(e=!0,bo(t)):e=!1,na(t,r),ma(t,n,o),ba(t,n,o,r),Vi(null,t,n,!0,e,r);case 19:return tl(e,t,r);case 23:case 24:return zi(e,t,r)}throw Error(i(156,t.tag))},tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Xn]=null}))},tt=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},rt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),r=su(e);fu(e,r,t),ec(e,r)}},ot=function(e,t){return t()},Ce=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=ro(n);if(!o)throw Error(i(90));X(n),re(n,o)}}}break;case"textarea":ce(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Ae=mu,Ie=function(e,t,r,n,o){var a=Pl;Pl|=4;try{return Ho(98,e.bind(null,t,r,n,o))}finally{0===(Pl=a)&&(Hl(),$o())}},je=function(){0===(49&Pl)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Fo())}))}$o()}(),Lu())},Me=function(e,t){var r=Pl;Pl|=2;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}};var ac={Events:[eo,to,ro,Ne,Le,Lu,{current:!1}]},ic={findFiberByHostInstance:Zn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},lc={bundleType:ic.bundleType,version:ic.version,rendererPackageName:ic.rendererPackageName,rendererConfig:ic.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ic.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof{}){var uc={};if(!uc.isDisabled&&uc.supportsFiber)try{ko=uc.inject(lc),Eo=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var r=Pl;if(0!==(48&r))return e(t);Pl|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Pl=r,$o()}},t.hydrate=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!0,r)},t.render=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!rc(e))throw Error(i(40));return!!e._reactRootContainer&&(yu((function(){nc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xn]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!rc(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return nc(e,t,r,!1,n)},t.version="17.0.1"},function(e,t,r){"use strict";e.exports=r(186)},function(e,t,r){"use strict";var n,o,a,i;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,c=u.now();t.unstable_now=function(){return u.now()-c}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,f=null,d=function e(){if(null!==s)try{var r=t.unstable_now();s(!0,r),s=null}catch(t){throw setTimeout(e,0),t}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(d,0))},o=function(e,t){f=setTimeout(e,t)},a=function(){clearTimeout(f)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var g=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof g&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var v=!1,m=null,y=-1,b=5,w=0;t.unstable_shouldYield=function(){return t.unstable_now()>=w},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,E=k.port2;k.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();w=e+b;try{m(!0,e)?E.postMessage(null):(v=!1,m=null)}catch(e){throw E.postMessage(null),e}}else v=!1},n=function(e){m=e,v||(v=!0,E.postMessage(null))},o=function(e,r){y=p((function(){e(t.unstable_now())}),r)},a=function(){h(y),y=-1}}function x(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<T(o,t)))break e;e[n]=t,e[r]=o,r=n}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>T(i,r))void 0!==u&&0>T(u,i)?(e[n]=u,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==u&&0>T(u,r)))break e;e[n]=u,e[l]=r,n=l}}}return t}return null}function T(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var C=[],O=[],P=1,R=null,N=3,L=!1,A=!1,I=!1;function j(e){for(var t=S(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,x(C,t)}t=S(O)}}function M(e){if(I=!1,j(e),!A)if(null!==S(C))A=!0,n(D);else{var t=S(O);null!==t&&o(M,t.startTime-e)}}function D(e,r){A=!1,I&&(I=!1,a()),L=!0;var n=N;try{for(j(r),R=S(C);null!==R&&(!(R.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=R.callback;if("function"===typeof i){R.callback=null,N=R.priorityLevel;var l=i(R.expirationTime<=r);r=t.unstable_now(),"function"===typeof l?R.callback=l:R===S(C)&&_(C),j(r)}else _(C);R=S(C)}if(null!==R)var u=!0;else{var c=S(O);null!==c&&o(M,c.startTime-r),u=!1}return u}finally{R=null,N=n,L=!1}}var q=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||L||(A=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var r=N;N=t;try{return e()}finally{N=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=q,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=N;N=e;try{return t()}finally{N=r}},t.unstable_scheduleCallback=function(e,r,i){var l=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:r,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,x(O,e),null===S(C)&&e===S(O)&&(I?a():I=!0,o(M,i-l))):(e.sortIndex=u,x(C,e),A||L||(A=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var r=N;N=t;try{return e.apply(this,arguments)}finally{N=r}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},o={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},a={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"},i=function(){function e(){}return e.prototype.encode=function(e){return e&&e.length?e.replace(/[<>"\'&]/g,(function(e){return a[e]})):""},e.encode=function(t){return(new e).encode(t)},e.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,(function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var a=e.charCodeAt(n),i=o[a];i?(r+="&"+i+";",n++):(r+=a<32||a>126?"&#"+a+";":e.charAt(n),n++)}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.XmlEntities=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],o=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],a={},i={};!function(){for(var e=0,t=n.length;e<t;){var r=n[e],l=o[e];a[r]=String.fromCharCode(l),i[l]=r,e++}}();var l=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=a[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=i[e.charCodeAt(n)];r+=o?"&"+o+";":e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),a=i[o];r+=a?"&"+a+";":o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html4Entities=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],o={},a={};!function(e,t){var r=n.length;for(;r--;){var o=n[r],a=o[0],i=o[1],l=i[0],u=l<32||l>126||62===l||60===l||38===l||34===l||39===l,c=void 0;if(u&&(c=t[l]=t[l]||{}),i[1]){var s=i[1];e[a]=String.fromCharCode(l)+String.fromCharCode(s),u&&(c[s]=a)}else e[a]=String.fromCharCode(l),u&&(c[""]=a)}}(o,a);var i=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=o[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=a[e.charCodeAt(n)];if(o){var i=o[e.charCodeAt(n+1)];if(i?n++:i=o[""],i){r+="&"+i+";",n++;continue}}r+=e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),i=a[o];if(i){var l=i[e.charCodeAt(n+1)];if(l?n++:l=i[""],l){r+="&"+l+";",n++;continue}}r+=o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html5Entities=i},function(e,t,r){"use strict";var n=r(52),o=r(193);Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=b,t.getChalk=w,t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(b(t)){var r=w(t),n=f(r);return y(n,e)}return e};var a,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(r(195)),l=r(196),u=(a=r(199))&&a.__esModule?a:{default:a};function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}var s=new Set(["as","async","from","get","of","set"]);function f(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}var d,p=/\\r\\n|[\\n\\r\\u2028\\u2029]/,h=/^[()[\\]{}]$/,g=i.matchToToken,v=/^[a-z][\\w-]*$/i,m=function(e,t,r){if("name"===e.type){if((0,l.isKeyword)(e.value)||(0,l.isStrictReservedWord)(e.value,!0)||s.has(e.value))return"keyword";if(v.test(e.value)&&("<"===r[t-1]||"</"==r.substr(t-2,2)))return"jsxIdentifier";if(e.value[0]!==e.value[0].toLowerCase())return"capitalized"}return"punctuator"===e.type&&h.test(e.value)?"bracket":"invalid"!==e.type||"@"!==e.value&&"#"!==e.value?e.type:"punctuator"};function y(e,t){var r,o="",a=n(d(t));try{var i=function(){var t=r.value,n=t.type,a=t.value,i=e[n];o+=i?a.split(p).map((function(e){return i(e)})).join("\\n"):a};for(a.s();!(r=a.n()).done;)i()}catch(e){a.e(e)}finally{a.f()}return o}function b(e){return u.default.supportsColor||e.forceColor}function w(e){var t=u.default;return e.forceColor&&(t=new u.default.constructor({enabled:!0,level:1})),t}d=o.mark((function e(t){var r,n;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r=i.default.exec(t))){e.next=6;break}return n=g(r),e.next=4,{type:m(n,r.index,t),value:n.value};case 4:e.next=0;break;case 6:case"end":return e.stop()}}),e)}))},function(e,t,r){var n=r(192);e.exports=function(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}},function(e,t,r){e.exports=r(194)},function(e,t,r){var n=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof v?t:v,a=Object.create(o.prototype),i=new O(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=s(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function s(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function v(){}function m(){}function y(){}var b={};b[a]=function(){return this};var w=Object.getPrototypeOf,k=w&&w(w(P([])));k&&k!==r&&n.call(k,a)&&(b=k);var E=y.prototype=v.prototype=Object.create(b);function x(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"===typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a \'throw\' method")}return g}var o=s(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return m.prototype=E.constructor=y,y.constructor=m,m.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},x(S.prototype),S.prototype[i]=function(){return this},e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(E),u(E,l,"Generator"),E[a]=function(){return this},E.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return n.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return n.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return n.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return o.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return o.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return o.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return o.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return o.isKeyword}});var n=r(197),o=r(198)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=s,t.isIdentifierChar=f,t.isIdentifierName=function(e){for(var t=!0,r=0,n=Array.from(e);r<n.length;r++){var o=n[r].codePointAt(0);if(t){if(!s(o))return!1;t=!1}else if(!f(o))return!1}return!t};var n="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",o="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",a=new RegExp("["+n+"]"),i=new RegExp("["+n+o+"]");n=o=null;var l=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],u=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function c(e,t){for(var r=65536,n=0,o=t.length;n<o;n+=2){if((r+=t[n])>e)return!1;if((r+=t[n+1])>=e)return!0}return!1}function s(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&a.test(String.fromCharCode(e)):c(e,l)))}function f(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):c(e,l)||c(e,u))))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=u,t.isStrictReservedWord=c,t.isStrictBindOnlyReservedWord=s,t.isStrictBindReservedWord=function(e,t){return c(e,t)||s(e)},t.isKeyword=function(e){return a.has(e)};var n=["implements","interface","let","package","private","protected","public","static","yield"],o=["eval","arguments"],a=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),i=new Set(n),l=new Set(o);function u(e,t){return t&&"await"===e||"enum"===e}function c(e,t){return u(e,t)||i.has(e)}function s(e){return l.has(e)}},function(e,t,r){"use strict";(function(t){var n=r(52),o=r(200),a=r(201),i=r(206).stdout,l=r(207),u="win32"===t.platform&&!(Object({NODE_ENV:"production"}).TERM||"").toLowerCase().startsWith("xterm"),c=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),f=Object.create(null);function d(e,t){t=t||{};var r=i?i.level:0;e.level=void 0===t.level?r:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function p(e){if(!this||!(this instanceof p)||this.template){var t={};return d(t,e),t.template=function(){var e=[].slice.call(arguments);return T.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,p.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=p,t.template}d(this,e)}u&&(a.blue.open="[94m");for(var h=function(){var e=v[g];a[e].closeRe=new RegExp(o(a[e].close),"g"),f[e]={get:function(){var t=a[e];return S.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},g=0,v=Object.keys(a);g<v.length;g++)h();f.visible={get:function(){return S.call(this,this._styles||[],!0,"visible")}},a.color.closeRe=new RegExp(o(a.color.close),"g");for(var m=function(){var e=b[y];if(s.has(e))return"continue";f[e]={get:function(){var t=this.level;return function(){var r=a.color[c[t]][e].apply(null,arguments),n={open:r,close:a.color.close,closeRe:a.color.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},y=0,b=Object.keys(a.color.ansi);y<b.length;y++)m();a.bgColor.closeRe=new RegExp(o(a.bgColor.close),"g");for(var w=function(){var e=E[k];if(s.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);f[t]={get:function(){var t=this.level;return function(){var r=a.bgColor[c[t]][e].apply(null,arguments),n={open:r,close:a.bgColor.close,closeRe:a.bgColor.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},k=0,E=Object.keys(a.bgColor.ansi);k<E.length;k++)w();var x=Object.defineProperties((function(){}),f);function S(e,t,r){var n=function e(){return _.apply(e,arguments)};n._styles=e,n._empty=t;var o=this;return Object.defineProperty(n,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(n,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),n.hasGrey=this.hasGrey||"gray"===r||"grey"===r,n.__proto__=x,n}function _(){var e=arguments,t=e.length,r=String(arguments[0]);if(0===t)return"";if(t>1)for(var o=1;o<t;o++)r+=" "+e[o];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;var i=a.dim.open;u&&this.hasGrey&&(a.dim.open="");var l,c=n(this._styles.slice().reverse());try{for(c.s();!(l=c.n()).done;){var s=l.value;r=(r=s.open+r.replace(s.closeRe,s.open)+s.close).replace(/\\r?\\n/g,"".concat(s.close,"$&").concat(s.open))}}catch(e){c.e(e)}finally{c.f()}return a.dim.open=i,r}function T(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var r=[].slice.call(arguments,2),n=[t.raw[0]],o=1;o<t.length;o++)n.push(String(r[o-1]).replace(/[{}\\\\]/g,"\\\\$&")),n.push(String(t.raw[o]));return l(e,n.join(""))}Object.defineProperties(p.prototype,f),e.exports=p(),e.exports.supportsColor=i,e.exports.default=e.exports}).call(this,r(51))},function(e,t,r){"use strict";var n=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(n,"\\\\$&")}},function(e,t,r){"use strict";(function(e){var t=r(203),n=function(e,r){return function(){var n=e.apply(t,arguments);return"[".concat(n+r,"m")}},o=function(e,r){return function(){var n=e.apply(t,arguments);return"[".concat(38+r,";5;").concat(n,"m")}},a=function(e,r){return function(){var n=e.apply(t,arguments);return"[".concat(38+r,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};r.color.grey=r.color.gray;for(var i=0,l=Object.keys(r);i<l.length;i++){for(var u=l[i],c=r[u],s=0,f=Object.keys(c);s<f.length;s++){var d=f[s],p=c[d];r[d]={open:"[".concat(p[0],"m"),close:"[".concat(p[1],"m")},c[d]=r[d],e.set(p[0],p[1])}Object.defineProperty(r,u,{value:c,enumerable:!1}),Object.defineProperty(r,"codes",{value:e,enumerable:!1})}var h=function(e){return e},g=function(e,t,r){return[e,t,r]};r.color.close="[39m",r.bgColor.close="[49m",r.color.ansi={ansi:n(h,0)},r.color.ansi256={ansi256:o(h,0)},r.color.ansi16m={rgb:a(g,0)},r.bgColor.ansi={ansi:n(h,10)},r.bgColor.ansi256={ansi256:o(h,10)},r.bgColor.ansi16m={rgb:a(g,10)};for(var v=0,m=Object.keys(t);v<m.length;v++){var y=m[v];if("object"===typeof t[y]){var b=t[y];"ansi16"===y&&(y="ansi"),"ansi16"in b&&(r.color.ansi[y]=n(b.ansi16,0),r.bgColor.ansi[y]=n(b.ansi16,10)),"ansi256"in b&&(r.color.ansi256[y]=o(b.ansi256,0),r.bgColor.ansi256[y]=o(b.ansi256,10)),"rgb"in b&&(r.color.ansi16m[y]=a(b.rgb,0),r.bgColor.ansi16m[y]=a(b.rgb,10))}}return r}})}).call(this,r(202)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){var n=r(87),o=r(205),a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=o(e);Object.keys(t).forEach((function(r){var n=t[r];a[e][r]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var r=e(t);if("object"===typeof r)for(var n=r.length,o=0;o<n;o++)r[o]=Math.round(r[o]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(n),a[e][r].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=a},function(e,t,r){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(e,t,r){var n=r(87);function o(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),a=Object.keys(n[o]),i=a.length,l=0;l<i;l++){var u=a[l],c=t[u];-1===c.distance&&(c.distance=t[o].distance+1,c.parent=o,r.unshift(u))}return t}function a(e,t){return function(r){return t(e(r))}}function i(e,t){for(var r=[t[e].parent,e],o=n[t[e].parent][e],i=t[e].parent;t[i].parent;)r.unshift(t[i].parent),o=a(n[t[i].parent][i],o),i=t[i].parent;return o.conversion=r,o}e.exports=function(e){for(var t=o(e),r={},n=Object.keys(t),a=n.length,l=0;l<a;l++){var u=n[l];null!==t[u].parent&&(r[u]=i(u,t))}return r}},function(e,t,r){"use strict";e.exports={stdout:!1,stderr:!1}},function(e,t,r){"use strict";var n=r(52),o=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,a=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,i=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,l=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,u=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e",""],["a",""]]);function c(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):u.get(e)||e}function s(e,t){var r,o,a=[],u=t.trim().split(/\\s*,\\s*/g),s=n(u);try{for(s.s();!(o=s.n()).done;){var f=o.value;if(isNaN(f)){if(!(r=f.match(i)))throw new Error("Invalid Chalk template style argument: ".concat(f," (in style \'").concat(e,"\')"));a.push(r[2].replace(l,(function(e,t,r){return t?c(t):r})))}else a.push(Number(f))}}catch(e){s.e(e)}finally{s.f()}return a}function f(e){a.lastIndex=0;for(var t,r=[];null!==(t=a.exec(e));){var n=t[1];if(t[2]){var o=s(n,t[2]);r.push([n].concat(o))}else r.push([n])}return r}function d(e,t){var r,o={},a=n(t);try{for(a.s();!(r=a.n()).done;){var i,l=r.value,u=n(l.styles);try{for(u.s();!(i=u.n()).done;){var c=i.value;o[c[0]]=l.inverse?null:c.slice(1)}}catch(e){u.e(e)}finally{u.f()}}}catch(e){a.e(e)}finally{a.f()}for(var s=e,f=0,d=Object.keys(o);f<d.length;f++){var p=d[f];if(Array.isArray(o[p])){if(!(p in s))throw new Error("Unknown Chalk style: ".concat(p));s=o[p].length>0?s[p].apply(s,o[p]):s[p]}}return s}e.exports=function(e,t){var r=[],n=[],a=[];if(t.replace(o,(function(t,o,i,l,u,s){if(o)a.push(c(o));else if(l){var p=a.join("");a=[],n.push(0===r.length?p:d(e,r)(p)),r.push({inverse:i,styles:f(l)})}else if(u){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");n.push(d(e,r)(a.join(""))),a=[],r.pop()}else a.push(s)})),n.push(a.join("")),r.length>0){var i="Chalk template literal is missing ".concat(r.length," closing bracket").concat(1===r.length?"":"s"," (`}`)");throw new Error(i)}return n.join("")}},function(e,t,r){"use strict";r.r(t),r.d(t,"ThemeContext",(function(){return me}));r(90);var n=r(0),o=r.n(n),a=r(53),i=r.n(a),l=function(e){return{position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:e.color}},u=null;var c=function(e){var t=Object(n.useContext)(me),r=e.shortcutHandler;return Object(n.useEffect)((function(){var e=function(e){r&&r(e.key)};return window.addEventListener("keydown",e),u&&u.addEventListener("keydown",e),function(){window.removeEventListener("keydown",e),u&&u.removeEventListener("keydown",e)}}),[r]),o.a.createElement("div",{style:l(t),ref:function(e){if(e){var t=e.ownerDocument;u=t.defaultView}}},e.children)},s=function(e){return{fontFamily:"sans-serif",color:e.footer,marginTop:"0.5rem",flex:"0 0 auto"}};var f=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:s(t)},e.line1,o.a.createElement("br",null),e.line2)},d=function(e){return{fontSize:"2em",fontFamily:"sans-serif",color:e.headerColor,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"}};var p=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:d(t)},e.headerText)};function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?g(Object(r),!0).forEach((function(t){h(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var m={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},y={fontFamily:"Consolas, Menlo, monospace"};var b=function(e){var t=e.main,r=e.codeHTML,a=Object(n.useContext)(me),i=v(v({},m),{},{backgroundColor:a.primaryPreBackground,color:a.primaryPreColor}),l=v(v({},m),{},{backgroundColor:a.secondaryPreBackground,color:a.secondaryPreColor}),u=t?i:l,c={__html:r};return o.a.createElement("pre",{style:u},o.a.createElement("code",{style:y,dangerouslySetInnerHTML:c}))},w=r(33),k=r.n(w),E=new(r(88).AllHtmlEntities),x=function(e){return{reset:[e.base05,"transparent"],black:e.base05,red:e.base08,green:e.base0B,yellow:e.base08,blue:e.base0C,magenta:e.base0C,cyan:e.base0E,gray:e.base03,lightgrey:e.base01,darkgrey:e.base03}},S={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};var _=function(e,t){for(var r=(new k.a).ansiToJson(E.encode(e),{use_classes:!0}),n="",o=!1,a=0;a<r.length;++a)for(var i=r[a],l=i.content,u=i.fg,c=l.split("\\n"),s=0;s<c.length;++s){o||(n+=\'<span data-ansi-line="true">\',o=!0);var f=c[s].replace("\\r",""),d=x(t)[S[u]];null!=d?n+=\'<span style="color: \'+d+\';">\'+f+"</span>":(null!=u&&console.log("Missing color mapping: ",u),n+="<span>"+f+"</span>"),s<c.length-1&&(n+="</span>",o=!1,n+="<br/>")}return o&&(n+="</span>",o=!1),n},T=/^\\.(\\/[^/\\n ]+)+\\.[^/\\n ]+$/,C=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];var O=function(e){for(var t=e.split("\\n"),r="",n=0,o=0,a=0;a<t.length;a++){var i=k.a.ansiToText(t[a]).trim();if(i){!r&&i.match(T)&&(r=i);for(var l=0;l<C.length;){var u=i.match(C[l]);if(u){n=parseInt(u[1],10),o=parseInt(u[2],10)+1||1;break}l++}if(r&&n)break}}return r&&n?{fileName:r,lineNumber:n,colNumber:o}:null},P={cursor:"pointer"};var R=function(e){var t=Object(n.useContext)(me),r=e.error,a=e.editorHandler,i=O(r),l=null!==i&&null!==a;return o.a.createElement(c,null,o.a.createElement(p,{headerText:"Failed to compile"}),o.a.createElement("div",{onClick:l&&i?function(){return a(i)}:null,style:l?P:null},o.a.createElement(b,{main:!0,codeHTML:_(r,t)})),o.a.createElement(f,{line1:"This error occurred during the build time and cannot be dismissed."}))};function N(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function A(e,t,r){return t&&L(e.prototype,t),r&&L(e,r),e}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function D(e){return(D="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){return!t||"object"!==D(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function z(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=M(e);if(t){var o=M(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return q(this,r)}}var U=function(e){return{color:e.closeColor,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0}};var F=function(e){var t=e.close,r=Object(n.useContext)(me);return o.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:U(r)},"×")},B={marginBottom:"0.5rem"},V={marginRight:"1em"},H={border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},W=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"})},$=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"})};var G=function(e){var t=Object(n.useContext)(me),r=e.currentError,a=e.totalErrors,i=e.previous,l=e.next;return o.a.createElement("div",{style:B},o.a.createElement("span",{style:V},o.a.createElement("button",{onClick:i,style:W(t)},"←"),o.a.createElement("button",{onClick:l,style:$(t)},"→")),"".concat(r," of ").concat(a," errors on the page"))};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"===typeof e)return Q(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var X=r(89);var J=function(e){var t=Object(n.useContext)(me),r=e.lines,a=e.lineNum,i=e.columnNum,l=e.contextSize,u=e.main,c=[],s=1/0;r.forEach((function(e){var t=e.content,r=t.match(/^\\s*/);""!==t&&(s=r&&r[0]?Math.min(s,r[0].length):0)})),r.forEach((function(e){var t=e.content,r=e.lineNumber;isFinite(s)&&(t=t.substring(s)),c[r-1]=t}));var f=Object(X.codeFrameColumns)(c.join("\\n"),{start:{line:a,column:null==i?0:i-(isFinite(s)?s:0)}},{forceColor:!0,linesAbove:l,linesBelow:l}),d=_(f,t),p=document.createElement("code");p.innerHTML=d,function(e){for(var t=e.childNodes,r=0;r<t.length;++r){var n=t[r];if("span"===n.tagName.toLowerCase()){var o=n.innerText;null!=o&&"|^"===o.replace(/\\s/g,"")&&(n.style.position="absolute",K(e,n))}}}(p);var h=p.childNodes;e:for(var g=0;g<h.length;++g)for(var v=h[g].childNodes,m=0;m<v.length;++m){var y=v[m].innerText;if(null!=y&&-1!==y.indexOf(" "+a+" |"))break e}return o.a.createElement(b,{main:u,codeHTML:p.innerHTML})};function Z(e,t,r,n,o,a,i){var l;if(!i&&e&&"number"===typeof t){var u=/^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)/.exec(e);l=u&&u[1]?u[1]:e,l+=":"+t,r&&(l+=":"+r)}else n&&"number"===typeof o?(l=n+":"+o,a&&(l+=":"+a)):l="unknown";return l.replace("webpack://",".")}var ee=function(e){return{textDecoration:"none",color:e.anchorColor,cursor:"pointer"}},te=function(e){return{marginBottom:"1.5em",color:e.toggleColor,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:e.toggleBackground,fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"}};var re=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!1),2),a=r[0],i=r[1],l=function(){var t=e.frame,r=t._originalFileName,n=t._originalLineNumber;return r?-1!==r.trim().indexOf(" ")?null:{fileName:r,lineNumber:n||1}:null},u=function(){var t=l();t&&e.editorHandler(t)},c=e.frame,s=e.contextSize,f=e.critical,d=e.showCode,p=c.fileName,h=c.lineNumber,g=c.columnNumber,v=c._scriptCode,m=c._originalFileName,y=c._originalLineNumber,b=c._originalColumnNumber,w=c._originalScriptCode,k=c.getFunctionName(),E=Z(m,y,b,p,h,g,a),x=null;d&&(a&&v&&0!==v.length&&null!=h?x={lines:v,lineNum:h,columnNum:g,contextSize:s,main:f}:!a&&w&&0!==w.length&&null!=y&&(x={lines:w,lineNum:y,columnNum:b,contextSize:s,main:f}));var S=null!==l()&&null!==e.editorHandler;return o.a.createElement("div",null,o.a.createElement("div",null,k),o.a.createElement("div",{style:{fontSize:"0.9em",marginBottom:"0.9em"}},o.a.createElement("span",{style:S?ee(t):null,onClick:S?u:null,onKeyDown:S?function(e){"Enter"===e.key&&u()}:null,tabIndex:S?"0":null},E)),x&&o.a.createElement("span",null,o.a.createElement("span",{onClick:S?u:null,style:S?{cursor:"pointer"}:null},o.a.createElement(J,x)),o.a.createElement("button",{style:te(t),onClick:function(){i(!a)}},"View "+(a?"source":"compiled"))))},ne={cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},oe=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"1.5em"})},ae=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"0.6em"})};var ie=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!0),2),a=r[0],i=r[1],l=function(){i(!a)},u=e.children.length;return o.a.createElement("div",null,o.a.createElement("button",{onClick:l,style:a?oe(t):ae(t)},(a?"▶":"▼")+" ".concat(u," stack frames were ")+(a?"collapsed.":"expanded.")),o.a.createElement("div",{style:{display:a?"none":"block"}},e.children,o.a.createElement("button",{onClick:l,style:ae(t)},"▲ ".concat(u," stack frames were expanded."))))};function le(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var ue={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},ce=function(e){j(r,e);var t=z(r);function r(){return N(this,r),t.apply(this,arguments)}return A(r,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,r=e.errorName,n=e.contextSize,a=e.editorHandler,i=[],l=!1,u=[],c=0;return t.forEach((function(e,s){var f=e.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(e._originalFileName,f),p=!le(r),h=d&&(p||l);d||(l=!0);var g=o.a.createElement(re,{key:"frame-"+s,frame:e,contextSize:n,critical:0===s,showCode:!h,editorHandler:a}),v=s===t.length-1;h&&u.push(g),h&&!v||(1===u.length?i.push(u[0]):u.length>1&&(c++,i.push(o.a.createElement(ie,{key:"bundle-"+c},u))),u=[]),h||i.push(g)})),i}},{key:"render",value:function(){return o.a.createElement("div",{style:ue},this.renderFrames())}}]),r}(n.Component),se={display:"flex",flexDirection:"column"};var fe=function(e){var t=e.errorRecord,r=e.editorHandler,n=t.error,a=t.unhandledRejection,i=t.contextSize,l=t.stackFrames,u=a?"Unhandled Rejection ("+n.name+")":n.name,c=n.message,s=c.match(/^\\w*:/)||!u?c:u+": "+c;return s=s.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),o.a.createElement("div",{style:se},o.a.createElement(p,{headerText:s}),o.a.createElement(ce,{stackFrames:l,errorName:u,contextSize:i,editorHandler:r}))},de=function(e){j(r,e);var t=z(r);function r(){var e;N(this,r);for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=t.call.apply(t,[this].concat(o))).state={currentIndex:0},e.previous=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}}))},e.next=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}}))},e.shortcutHandler=function(t){"Escape"===t?e.props.close():"ArrowLeft"===t?e.previous():"ArrowRight"===t&&e.next()},e}return A(r,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,r=e.close,n=t.length;return o.a.createElement(c,{shortcutHandler:this.shortcutHandler},o.a.createElement(F,{close:r}),n>1&&o.a.createElement(G,{currentError:this.state.currentIndex+1,totalErrors:n,previous:this.previous,next:this.next}),o.a.createElement(fe,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),o.a.createElement(f,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser’s developer console to further inspect this error.  Click the \'X\' or hit ESC to dismiss this message."}))}}]),r}(n.PureComponent),pe={background:"white",color:"black",headerColor:"#ce1126",primaryPreBackground:"rgba(206, 17, 38, 0.05)",primaryPreColor:"inherit",secondaryPreBackground:"rgba(251, 245, 180, 0.3)",secondaryPreColor:"inherit",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#293238",navBackground:"rgba(206, 17, 38, 0.05)",navArrow:"#ce1126",base01:"#f5f5f5",base03:"#6e6e6e",base05:"#333333",base08:"#881280",base0B:"#1155cc",base0C:"#994500",base0E:"#c80000"},he={background:"#353535",color:"white",headerColor:"#e83b46",primaryPreBackground:"rgba(206, 17, 38, 0.1)",primaryPreColor:"#fccfcf",secondaryPreBackground:"rgba(251, 245, 180, 0.1)",secondaryPreColor:"#fbf5b4",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#ffffff",navBackground:"rgba(206, 17, 38, 0.2)",navArrow:"#ce1126",base01:"#282a2e",base03:"#969896",base05:"#c5c8c6",base08:"#cc6666",base0B:"#b5bd68",base0C:"#8abeb7",base0E:"#b294bb"};var ge=null,ve=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?he:pe,me=Object(n.createContext)();window.updateContent=function(e){var t,r,n,a,l,u=(r=(t=e).currentBuildError,n=t.currentRuntimeErrorRecords,a=t.dismissRuntimeErrors,l=t.editorHandler,r?o.a.createElement(me.Provider,{value:ve},o.a.createElement(R,{error:r,editorHandler:l})):n.length>0?o.a.createElement(me.Provider,{value:ve},o.a.createElement(de,{errorRecords:n,close:a,editorHandler:l})):null);return null===u?(i.a.unmountComponentAtNode(ge),!1):(i.a.render(u,ge),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(ge=document.createElement("div"),{width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":ve.background}),document.body.appendChild(ge),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()}]);',ee=null,te=!1,re=!1,ne=null,oe=null,ae=[],ie=null,le=null;function ue(e){ne=e,ee&&me()}function ce(e){oe=e,me()}function se(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ie=t,X(pe(t))(e)}function fe(){oe=null,me()}function de(e){if(null!==le)throw new Error("Already listening");e.launchEditorEndpoint&&console.warn("Warning: `startReportingRuntimeErrors` doesn’t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "),ie=e,le=K(pe(e),e.filename)}var pe=function(e){return function(t){try{"function"==typeof e.onError&&e.onError.call(null)}finally{if(ae.some((function(e){return e.error===t.error})))return;ae=ae.concat([t]),me()}}};function he(){ae=[],me()}function ge(){if(null===le)throw new Error("Not currently listening");ie=null;try{le()}finally{le=null}}function me(){if(!te)if(re)ve();else{te=!0;var e=window.document.createElement("iframe");!function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(e,J),e.onload=function(){var t=e.contentDocument;if(null!=t&&null!=t.body){ee=e;var r=e.contentWindow.document.createElement("script");r.type="text/javascript",r.innerHTML=Z,t.body.appendChild(r)}},window.document.body.appendChild(e)}}function ve(){if(!ie)throw new Error("Expected options to be injected.");if(!ee)throw new Error("Iframe has not been created yet.");ee.contentWindow.updateContent({currentBuildError:oe,currentRuntimeErrorRecords:ae,dismissRuntimeErrors:he,editorHandler:ne})||(window.document.body.removeChild(ee),ee=null,re=!1)}window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__=window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__||{},window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady=function(){re=!0,te=!1,ve()}, false&&0}])}));

/***/ }),

/***/ "./node_modules/requires-port/index.js":
/*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


/**
 * Check if we're required to add a port number.
 *
 * @see https://url.spec.whatwg.org/#default-port
 * @param {Number|String} port Port number we need to check
 * @param {String} protocol Protocol we need to check against.
 * @returns {Boolean} Is it a default port for the given protocol
 * @api private
 */
module.exports = function required(port, protocol) {
  protocol = protocol.split(':')[0];
  port = +port;

  if (!port) return false;

  switch (protocol) {
    case 'http':
    case 'ws':
    return port !== 80;

    case 'https':
    case 'wss':
    return port !== 443;

    case 'ftp':
    return port !== 21;

    case 'gopher':
    return port !== 70;

    case 'file':
    return false;
  }

  return port !== 0;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/entry.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/entry.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var transportList = __webpack_require__(/*! ./transport-list */ "./node_modules/sockjs-client/lib/transport-list.js");

module.exports = __webpack_require__(/*! ./main */ "./node_modules/sockjs-client/lib/main.js")(transportList);

// TODO can't get rid of this until all servers do
if ('_sockjs_onload' in __webpack_require__.g) {
  setTimeout(__webpack_require__.g._sockjs_onload, 1);
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/close.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/close.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js")
  ;

function CloseEvent() {
  Event.call(this);
  this.initEvent('close', false, false);
  this.wasClean = false;
  this.code = 0;
  this.reason = '';
}

inherits(CloseEvent, Event);

module.exports = CloseEvent;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/emitter.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/emitter.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventTarget = __webpack_require__(/*! ./eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js")
  ;

function EventEmitter() {
  EventTarget.call(this);
}

inherits(EventEmitter, EventTarget);

EventEmitter.prototype.removeAllListeners = function(type) {
  if (type) {
    delete this._listeners[type];
  } else {
    this._listeners = {};
  }
};

EventEmitter.prototype.once = function(type, listener) {
  var self = this
    , fired = false;

  function g() {
    self.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  this.on(type, g);
};

EventEmitter.prototype.emit = function() {
  var type = arguments[0];
  var listeners = this._listeners[type];
  if (!listeners) {
    return;
  }
  // equivalent of Array.prototype.slice.call(arguments, 1);
  var l = arguments.length;
  var args = new Array(l - 1);
  for (var ai = 1; ai < l; ai++) {
    args[ai - 1] = arguments[ai];
  }
  for (var i = 0; i < listeners.length; i++) {
    listeners[i].apply(this, args);
  }
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;
EventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;

module.exports.EventEmitter = EventEmitter;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/event.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


function Event(eventType) {
  this.type = eventType;
}

Event.prototype.initEvent = function(eventType, canBubble, cancelable) {
  this.type = eventType;
  this.bubbles = canBubble;
  this.cancelable = cancelable;
  this.timeStamp = +new Date();
  return this;
};

Event.prototype.stopPropagation = function() {};
Event.prototype.preventDefault = function() {};

Event.CAPTURING_PHASE = 1;
Event.AT_TARGET = 2;
Event.BUBBLING_PHASE = 3;

module.exports = Event;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/eventtarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/eventtarget.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";


/* Simplified implementation of DOM2 EventTarget.
 *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
 */

function EventTarget() {
  this._listeners = {};
}

EventTarget.prototype.addEventListener = function(eventType, listener) {
  if (!(eventType in this._listeners)) {
    this._listeners[eventType] = [];
  }
  var arr = this._listeners[eventType];
  // #4
  if (arr.indexOf(listener) === -1) {
    // Make a copy so as not to interfere with a current dispatchEvent.
    arr = arr.concat([listener]);
  }
  this._listeners[eventType] = arr;
};

EventTarget.prototype.removeEventListener = function(eventType, listener) {
  var arr = this._listeners[eventType];
  if (!arr) {
    return;
  }
  var idx = arr.indexOf(listener);
  if (idx !== -1) {
    if (arr.length > 1) {
      // Make a copy so as not to interfere with a current dispatchEvent.
      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));
    } else {
      delete this._listeners[eventType];
    }
    return;
  }
};

EventTarget.prototype.dispatchEvent = function() {
  var event = arguments[0];
  var t = event.type;
  // equivalent of Array.prototype.slice.call(arguments, 0);
  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);
  // TODO: This doesn't match the real behavior; per spec, onfoo get
  // their place in line from the /first/ time they're set from
  // non-null. Although WebKit bumps it to the end every time it's
  // set.
  if (this['on' + t]) {
    this['on' + t].apply(this, args);
  }
  if (t in this._listeners) {
    // Grab a reference to the listeners list. removeEventListener may alter the list.
    var listeners = this._listeners[t];
    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(this, args);
    }
  }
};

module.exports = EventTarget;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/trans-message.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/trans-message.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js")
  ;

function TransportMessageEvent(data) {
  Event.call(this);
  this.initEvent('message', false, false);
  this.data = data;
}

inherits(TransportMessageEvent, Event);

module.exports = TransportMessageEvent;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/facade.js":
/*!**************************************************!*\
  !*** ./node_modules/sockjs-client/lib/facade.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  ;

function FacadeJS(transport) {
  this._transport = transport;
  transport.on('message', this._transportMessage.bind(this));
  transport.on('close', this._transportClose.bind(this));
}

FacadeJS.prototype._transportClose = function(code, reason) {
  iframeUtils.postMessage('c', JSON.stringify([code, reason]));
};
FacadeJS.prototype._transportMessage = function(frame) {
  iframeUtils.postMessage('t', frame);
};
FacadeJS.prototype._send = function(data) {
  this._transport.send(data);
};
FacadeJS.prototype._close = function() {
  this._transport.close();
  this._transport.removeAllListeners();
};

module.exports = FacadeJS;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/iframe-bootstrap.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/iframe-bootstrap.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , FacadeJS = __webpack_require__(/*! ./facade */ "./node_modules/sockjs-client/lib/facade.js")
  , InfoIframeReceiver = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js")
  , iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:iframe-bootstrap');
}

module.exports = function(SockJS, availableTransports) {
  var transportMap = {};
  availableTransports.forEach(function(at) {
    if (at.facadeTransport) {
      transportMap[at.facadeTransport.transportName] = at.facadeTransport;
    }
  });

  // hard-coded for the info iframe
  // TODO see if we can make this more dynamic
  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;
  var parentOrigin;

  /* eslint-disable camelcase */
  SockJS.bootstrap_iframe = function() {
    /* eslint-enable camelcase */
    var facade;
    iframeUtils.currentWindowId = loc.hash.slice(1);
    var onMessage = function(e) {
      if (e.source !== parent) {
        return;
      }
      if (typeof parentOrigin === 'undefined') {
        parentOrigin = e.origin;
      }
      if (e.origin !== parentOrigin) {
        return;
      }

      var iframeMessage;
      try {
        iframeMessage = JSON.parse(e.data);
      } catch (ignored) {
        debug('bad json', e.data);
        return;
      }

      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {
        return;
      }
      switch (iframeMessage.type) {
      case 's':
        var p;
        try {
          p = JSON.parse(iframeMessage.data);
        } catch (ignored) {
          debug('bad json', iframeMessage.data);
          break;
        }
        var version = p[0];
        var transport = p[1];
        var transUrl = p[2];
        var baseUrl = p[3];
        debug(version, transport, transUrl, baseUrl);
        // change this to semver logic
        if (version !== SockJS.version) {
          throw new Error('Incompatible SockJS! Main site uses:' +
                    ' "' + version + '", the iframe:' +
                    ' "' + SockJS.version + '".');
        }

        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||
            !urlUtils.isOriginEqual(baseUrl, loc.href)) {
          throw new Error('Can\'t connect to different domain from within an ' +
                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');
        }
        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));
        break;
      case 'm':
        facade._send(iframeMessage.data);
        break;
      case 'c':
        if (facade) {
          facade._close();
        }
        facade = null;
        break;
      }
    };

    eventUtils.attachEvent('message', onMessage);

    // Start
    iframeUtils.postMessage('s');
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-ajax.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-ajax.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-ajax');
}

function InfoAjax(url, AjaxObject) {
  EventEmitter.call(this);

  var self = this;
  var t0 = +new Date();
  this.xo = new AjaxObject('GET', url);

  this.xo.once('finish', function(status, text) {
    var info, rtt;
    if (status === 200) {
      rtt = (+new Date()) - t0;
      if (text) {
        try {
          info = JSON.parse(text);
        } catch (e) {
          debug('bad json', text);
        }
      }

      if (!objectUtils.isObject(info)) {
        info = {};
      }
    }
    self.emit('finish', info, rtt);
    self.removeAllListeners();
  });
}

inherits(InfoAjax, EventEmitter);

InfoAjax.prototype.close = function() {
  this.removeAllListeners();
  this.xo.close();
};

module.exports = InfoAjax;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe-receiver.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe-receiver.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , XHRLocalObject = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js")
  ;

function InfoReceiverIframe(transUrl) {
  var self = this;
  EventEmitter.call(this);

  this.ir = new InfoAjax(transUrl, XHRLocalObject);
  this.ir.once('finish', function(info, rtt) {
    self.ir = null;
    self.emit('message', JSON.stringify([info, rtt]));
  });
}

inherits(InfoReceiverIframe, EventEmitter);

InfoReceiverIframe.transportName = 'iframe-info-receiver';

InfoReceiverIframe.prototype.close = function() {
  if (this.ir) {
    this.ir.close();
    this.ir = null;
  }
  this.removeAllListeners();
};

module.exports = InfoReceiverIframe;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , utils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , IframeTransport = __webpack_require__(/*! ./transport/iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js")
  , InfoReceiverIframe = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-iframe');
}

function InfoIframe(baseUrl, url) {
  var self = this;
  EventEmitter.call(this);

  var go = function() {
    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);

    ifr.once('message', function(msg) {
      if (msg) {
        var d;
        try {
          d = JSON.parse(msg);
        } catch (e) {
          debug('bad json', msg);
          self.emit('finish');
          self.close();
          return;
        }

        var info = d[0], rtt = d[1];
        self.emit('finish', info, rtt);
      }
      self.close();
    });

    ifr.once('close', function() {
      self.emit('finish');
      self.close();
    });
  };

  // TODO this seems the same as the 'needBody' from transports
  if (!__webpack_require__.g.document.body) {
    utils.attachEvent('load', go);
  } else {
    go();
  }
}

inherits(InfoIframe, EventEmitter);

InfoIframe.enabled = function() {
  return IframeTransport.enabled();
};

InfoIframe.prototype.close = function() {
  if (this.ifr) {
    this.ifr.close();
  }
  this.removeAllListeners();
  this.ifr = null;
};

module.exports = InfoIframe;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-receiver.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-receiver.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , XDR = __webpack_require__(/*! ./transport/sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  , XHRCors = __webpack_require__(/*! ./transport/sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocal = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , XHRFake = __webpack_require__(/*! ./transport/sender/xhr-fake */ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js")
  , InfoIframe = __webpack_require__(/*! ./info-iframe */ "./node_modules/sockjs-client/lib/info-iframe.js")
  , InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-receiver');
}

function InfoReceiver(baseUrl, urlInfo) {
  debug(baseUrl);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function() {
    self.doXhr(baseUrl, urlInfo);
  }, 0);
}

inherits(InfoReceiver, EventEmitter);

// TODO this is currently ignoring the list of available transports and the whitelist

InfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {
  // determine method of CORS support (if needed)
  if (urlInfo.sameOrigin) {
    return new InfoAjax(url, XHRLocal);
  }
  if (XHRCors.enabled) {
    return new InfoAjax(url, XHRCors);
  }
  if (XDR.enabled && urlInfo.sameScheme) {
    return new InfoAjax(url, XDR);
  }
  if (InfoIframe.enabled()) {
    return new InfoIframe(baseUrl, url);
  }
  return new InfoAjax(url, XHRFake);
};

InfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {
  var self = this
    , url = urlUtils.addPath(baseUrl, '/info')
    ;
  debug('doXhr', url);

  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);

  this.timeoutRef = setTimeout(function() {
    debug('timeout');
    self._cleanup(false);
    self.emit('finish');
  }, InfoReceiver.timeout);

  this.xo.once('finish', function(info, rtt) {
    debug('finish', info, rtt);
    self._cleanup(true);
    self.emit('finish', info, rtt);
  });
};

InfoReceiver.prototype._cleanup = function(wasClean) {
  debug('_cleanup');
  clearTimeout(this.timeoutRef);
  this.timeoutRef = null;
  if (!wasClean && this.xo) {
    this.xo.close();
  }
  this.xo = null;
};

InfoReceiver.prototype.close = function() {
  debug('close');
  this.removeAllListeners();
  this._cleanup(false);
};

InfoReceiver.timeout = 8000;

module.exports = InfoReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/location.js":
/*!****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/location.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = __webpack_require__.g.location || {
  origin: 'http://localhost:80'
, protocol: 'http:'
, host: 'localhost'
, port: 80
, href: 'http://localhost/'
, hash: ''
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/main.js":
/*!************************************************!*\
  !*** ./node_modules/sockjs-client/lib/main.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


__webpack_require__(/*! ./shims */ "./node_modules/sockjs-client/lib/shims.js");

var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , random = __webpack_require__(/*! ./utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , escape = __webpack_require__(/*! ./utils/escape */ "./node_modules/sockjs-client/lib/utils/escape.js")
  , urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , transport = __webpack_require__(/*! ./utils/transport */ "./node_modules/sockjs-client/lib/utils/transport.js")
  , objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  , browser = __webpack_require__(/*! ./utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , log = __webpack_require__(/*! ./utils/log */ "./node_modules/sockjs-client/lib/utils/log.js")
  , Event = __webpack_require__(/*! ./event/event */ "./node_modules/sockjs-client/lib/event/event.js")
  , EventTarget = __webpack_require__(/*! ./event/eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js")
  , loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js")
  , CloseEvent = __webpack_require__(/*! ./event/close */ "./node_modules/sockjs-client/lib/event/close.js")
  , TransportMessageEvent = __webpack_require__(/*! ./event/trans-message */ "./node_modules/sockjs-client/lib/event/trans-message.js")
  , InfoReceiver = __webpack_require__(/*! ./info-receiver */ "./node_modules/sockjs-client/lib/info-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:main');
}

var transports;

// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface
function SockJS(url, protocols, options) {
  if (!(this instanceof SockJS)) {
    return new SockJS(url, protocols, options);
  }
  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");
  }
  EventTarget.call(this);

  this.readyState = SockJS.CONNECTING;
  this.extensions = '';
  this.protocol = '';

  // non-standard extension
  options = options || {};
  if (options.protocols_whitelist) {
    log.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead.");
  }
  this._transportsWhitelist = options.transports;
  this._transportOptions = options.transportOptions || {};
  this._timeout = options.timeout || 0;

  var sessionId = options.sessionId || 8;
  if (typeof sessionId === 'function') {
    this._generateSessionId = sessionId;
  } else if (typeof sessionId === 'number') {
    this._generateSessionId = function() {
      return random.string(sessionId);
    };
  } else {
    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');
  }

  this._server = options.server || random.numberString(1000);

  // Step 1 of WS spec - parse and validate the url. Issue #8
  var parsedUrl = new URL(url);
  if (!parsedUrl.host || !parsedUrl.protocol) {
    throw new SyntaxError("The URL '" + url + "' is invalid");
  } else if (parsedUrl.hash) {
    throw new SyntaxError('The URL must not contain a fragment');
  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {
    throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '" + parsedUrl.protocol + "' is not allowed.");
  }

  var secure = parsedUrl.protocol === 'https:';
  // Step 2 - don't allow secure origin with an insecure protocol
  if (loc.protocol === 'https:' && !secure) {
    // exception is 127.0.0.0/8 and ::1 urls
    if (!urlUtils.isLoopbackAddr(parsedUrl.hostname)) {
      throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');
    }
  }

  // Step 3 - check port access - no need here
  // Step 4 - parse protocols argument
  if (!protocols) {
    protocols = [];
  } else if (!Array.isArray(protocols)) {
    protocols = [protocols];
  }

  // Step 5 - check protocols argument
  var sortedProtocols = protocols.sort();
  sortedProtocols.forEach(function(proto, i) {
    if (!proto) {
      throw new SyntaxError("The protocols entry '" + proto + "' is invalid.");
    }
    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {
      throw new SyntaxError("The protocols entry '" + proto + "' is duplicated.");
    }
  });

  // Step 6 - convert origin
  var o = urlUtils.getOrigin(loc.href);
  this._origin = o ? o.toLowerCase() : null;

  // remove the trailing slash
  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\/+$/, ''));

  // store the sanitized url
  this.url = parsedUrl.href;
  debug('using url', this.url);

  // Step 7 - start connection in background
  // obtain server info
  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26
  this._urlInfo = {
    nullOrigin: !browser.hasDomain()
  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)
  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)
  };

  this._ir = new InfoReceiver(this.url, this._urlInfo);
  this._ir.once('finish', this._receiveInfo.bind(this));
}

inherits(SockJS, EventTarget);

function userSetCode(code) {
  return code === 1000 || (code >= 3000 && code <= 4999);
}

SockJS.prototype.close = function(code, reason) {
  // Step 1
  if (code && !userSetCode(code)) {
    throw new Error('InvalidAccessError: Invalid code');
  }
  // Step 2.4 states the max is 123 bytes, but we are just checking length
  if (reason && reason.length > 123) {
    throw new SyntaxError('reason argument has an invalid length');
  }

  // Step 3.1
  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {
    return;
  }

  // TODO look at docs to determine how to set this
  var wasClean = true;
  this._close(code || 1000, reason || 'Normal closure', wasClean);
};

SockJS.prototype.send = function(data) {
  // #13 - convert anything non-string to string
  // TODO this currently turns objects into [object Object]
  if (typeof data !== 'string') {
    data = '' + data;
  }
  if (this.readyState === SockJS.CONNECTING) {
    throw new Error('InvalidStateError: The connection has not been established yet');
  }
  if (this.readyState !== SockJS.OPEN) {
    return;
  }
  this._transport.send(escape.quote(data));
};

SockJS.version = __webpack_require__(/*! ./version */ "./node_modules/sockjs-client/lib/version.js");

SockJS.CONNECTING = 0;
SockJS.OPEN = 1;
SockJS.CLOSING = 2;
SockJS.CLOSED = 3;

SockJS.prototype._receiveInfo = function(info, rtt) {
  debug('_receiveInfo', rtt);
  this._ir = null;
  if (!info) {
    this._close(1002, 'Cannot connect to server');
    return;
  }

  // establish a round-trip timeout (RTO) based on the
  // round-trip time (RTT)
  this._rto = this.countRTO(rtt);
  // allow server to override url used for the actual transport
  this._transUrl = info.base_url ? info.base_url : this.url;
  info = objectUtils.extend(info, this._urlInfo);
  debug('info', info);
  // determine list of desired and supported transports
  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);
  this._transports = enabledTransports.main;
  debug(this._transports.length + ' enabled transports');

  this._connect();
};

SockJS.prototype._connect = function() {
  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {
    debug('attempt', Transport.transportName);
    if (Transport.needBody) {
      if (!__webpack_require__.g.document.body ||
          (typeof __webpack_require__.g.document.readyState !== 'undefined' &&
            __webpack_require__.g.document.readyState !== 'complete' &&
            __webpack_require__.g.document.readyState !== 'interactive')) {
        debug('waiting for body');
        this._transports.unshift(Transport);
        eventUtils.attachEvent('load', this._connect.bind(this));
        return;
      }
    }

    // calculate timeout based on RTO and round trips. Default to 5s
    var timeoutMs = Math.max(this._timeout, (this._rto * Transport.roundTrips) || 5000);
    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);
    debug('using timeout', timeoutMs);

    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());
    var options = this._transportOptions[Transport.transportName];
    debug('transport url', transportUrl);
    var transportObj = new Transport(transportUrl, this._transUrl, options);
    transportObj.on('message', this._transportMessage.bind(this));
    transportObj.once('close', this._transportClose.bind(this));
    transportObj.transportName = Transport.transportName;
    this._transport = transportObj;

    return;
  }
  this._close(2000, 'All transports failed', false);
};

SockJS.prototype._transportTimeout = function() {
  debug('_transportTimeout');
  if (this.readyState === SockJS.CONNECTING) {
    if (this._transport) {
      this._transport.close();
    }

    this._transportClose(2007, 'Transport timed out');
  }
};

SockJS.prototype._transportMessage = function(msg) {
  debug('_transportMessage', msg);
  var self = this
    , type = msg.slice(0, 1)
    , content = msg.slice(1)
    , payload
    ;

  // first check for messages that don't need a payload
  switch (type) {
    case 'o':
      this._open();
      return;
    case 'h':
      this.dispatchEvent(new Event('heartbeat'));
      debug('heartbeat', this.transport);
      return;
  }

  if (content) {
    try {
      payload = JSON.parse(content);
    } catch (e) {
      debug('bad json', content);
    }
  }

  if (typeof payload === 'undefined') {
    debug('empty payload', content);
    return;
  }

  switch (type) {
    case 'a':
      if (Array.isArray(payload)) {
        payload.forEach(function(p) {
          debug('message', self.transport, p);
          self.dispatchEvent(new TransportMessageEvent(p));
        });
      }
      break;
    case 'm':
      debug('message', this.transport, payload);
      this.dispatchEvent(new TransportMessageEvent(payload));
      break;
    case 'c':
      if (Array.isArray(payload) && payload.length === 2) {
        this._close(payload[0], payload[1], true);
      }
      break;
  }
};

SockJS.prototype._transportClose = function(code, reason) {
  debug('_transportClose', this.transport, code, reason);
  if (this._transport) {
    this._transport.removeAllListeners();
    this._transport = null;
    this.transport = null;
  }

  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {
    this._connect();
    return;
  }

  this._close(code, reason);
};

SockJS.prototype._open = function() {
  debug('_open', this._transport && this._transport.transportName, this.readyState);
  if (this.readyState === SockJS.CONNECTING) {
    if (this._transportTimeoutId) {
      clearTimeout(this._transportTimeoutId);
      this._transportTimeoutId = null;
    }
    this.readyState = SockJS.OPEN;
    this.transport = this._transport.transportName;
    this.dispatchEvent(new Event('open'));
    debug('connected', this.transport);
  } else {
    // The server might have been restarted, and lost track of our
    // connection.
    this._close(1006, 'Server lost session');
  }
};

SockJS.prototype._close = function(code, reason, wasClean) {
  debug('_close', this.transport, code, reason, wasClean, this.readyState);
  var forceFail = false;

  if (this._ir) {
    forceFail = true;
    this._ir.close();
    this._ir = null;
  }
  if (this._transport) {
    this._transport.close();
    this._transport = null;
    this.transport = null;
  }

  if (this.readyState === SockJS.CLOSED) {
    throw new Error('InvalidStateError: SockJS has already been closed');
  }

  this.readyState = SockJS.CLOSING;
  setTimeout(function() {
    this.readyState = SockJS.CLOSED;

    if (forceFail) {
      this.dispatchEvent(new Event('error'));
    }

    var e = new CloseEvent('close');
    e.wasClean = wasClean || false;
    e.code = code || 1000;
    e.reason = reason;

    this.dispatchEvent(e);
    this.onmessage = this.onclose = this.onerror = null;
    debug('disconnected');
  }.bind(this), 0);
};

// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
// and RFC 2988.
SockJS.prototype.countRTO = function(rtt) {
  // In a local environment, when using IE8/9 and the `jsonp-polling`
  // transport the time needed to establish a connection (the time that pass
  // from the opening of the transport to the call of `_dispatchOpen`) is
  // around 200msec (the lower bound used in the article above) and this
  // causes spurious timeouts. For this reason we calculate a value slightly
  // larger than that used in the article.
  if (rtt > 100) {
    return 4 * rtt; // rto > 400msec
  }
  return 300 + rtt; // 300msec < rto <= 400msec
};

module.exports = function(availableTransports) {
  transports = transport(availableTransports);
  __webpack_require__(/*! ./iframe-bootstrap */ "./node_modules/sockjs-client/lib/iframe-bootstrap.js")(SockJS, availableTransports);
  return SockJS;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/shims.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/shims.js ***!
  \*************************************************/
/***/ (() => {

"use strict";
/* eslint-disable */
/* jscs: disable */


// pulled specific shims from https://github.com/es-shims/es5-shim

var ArrayPrototype = Array.prototype;
var ObjectPrototype = Object.prototype;
var FunctionPrototype = Function.prototype;
var StringPrototype = String.prototype;
var array_slice = ArrayPrototype.slice;

var _toString = ObjectPrototype.toString;
var isFunction = function (val) {
    return ObjectPrototype.toString.call(val) === '[object Function]';
};
var isArray = function isArray(obj) {
    return _toString.call(obj) === '[object Array]';
};
var isString = function isString(obj) {
    return _toString.call(obj) === '[object String]';
};

var supportsDescriptors = Object.defineProperty && (function () {
    try {
        Object.defineProperty({}, 'x', {});
        return true;
    } catch (e) { /* this is ES3 */
        return false;
    }
}());

// Define configurable, writable and non-enumerable props
// if they don't exist.
var defineProperty;
if (supportsDescriptors) {
    defineProperty = function (object, name, method, forceAssign) {
        if (!forceAssign && (name in object)) { return; }
        Object.defineProperty(object, name, {
            configurable: true,
            enumerable: false,
            writable: true,
            value: method
        });
    };
} else {
    defineProperty = function (object, name, method, forceAssign) {
        if (!forceAssign && (name in object)) { return; }
        object[name] = method;
    };
}
var defineProperties = function (object, map, forceAssign) {
    for (var name in map) {
        if (ObjectPrototype.hasOwnProperty.call(map, name)) {
          defineProperty(object, name, map[name], forceAssign);
        }
    }
};

var toObject = function (o) {
    if (o == null) { // this matches both null and undefined
        throw new TypeError("can't convert " + o + ' to object');
    }
    return Object(o);
};

//
// Util
// ======
//

// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer

function toInteger(num) {
    var n = +num;
    if (n !== n) { // isNaN
        n = 0;
    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {
        n = (n > 0 || -1) * Math.floor(Math.abs(n));
    }
    return n;
}

function ToUint32(x) {
    return x >>> 0;
}

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

function Empty() {}

defineProperties(FunctionPrototype, {
    bind: function bind(that) { // .length is 1
        // 1. Let Target be the this value.
        var target = this;
        // 2. If IsCallable(Target) is false, throw a TypeError exception.
        if (!isFunction(target)) {
            throw new TypeError('Function.prototype.bind called on incompatible ' + target);
        }
        // 3. Let A be a new (possibly empty) internal list of all of the
        //   argument values provided after thisArg (arg1, arg2 etc), in order.
        // XXX slicedArgs will stand in for "A" if used
        var args = array_slice.call(arguments, 1); // for normal call
        // 4. Let F be a new native ECMAScript object.
        // 11. Set the [[Prototype]] internal property of F to the standard
        //   built-in Function prototype object as specified in 15.3.3.1.
        // 12. Set the [[Call]] internal property of F as described in
        //   15.3.4.5.1.
        // 13. Set the [[Construct]] internal property of F as described in
        //   15.3.4.5.2.
        // 14. Set the [[HasInstance]] internal property of F as described in
        //   15.3.4.5.3.
        var binder = function () {

            if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                    this,
                    args.concat(array_slice.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;

            } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                    that,
                    args.concat(array_slice.call(arguments))
                );

            }

        };

        // 15. If the [[Class]] internal property of Target is "Function", then
        //     a. Let L be the length property of Target minus the length of A.
        //     b. Set the length own property of F to either 0 or L, whichever is
        //       larger.
        // 16. Else set the length own property of F to 0.

        var boundLength = Math.max(0, target.length - args.length);

        // 17. Set the attributes of the length own property of F to the values
        //   specified in 15.3.5.1.
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push('$' + i);
        }

        // XXX Build a dynamic function with desired amount of arguments is the only
        // way to set the length property of a function.
        // In environments where Content Security Policies enabled (Chrome extensions,
        // for ex.) all use of eval or Function costructor throws an exception.
        // However in all of these environments Function.prototype.bind exists
        // and so this code will never be executed.
        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);

        if (target.prototype) {
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            // Clean up dangling references.
            Empty.prototype = null;
        }

        // TODO
        // 18. Set the [[Extensible]] internal property of F to true.

        // TODO
        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
        // 20. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
        //   false.
        // 21. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
        //   and false.

        // TODO
        // NOTE Function objects created using Function.prototype.bind do not
        // have a prototype property or the [[Code]], [[FormalParameters]], and
        // [[Scope]] internal properties.
        // XXX can't delete prototype in pure-js.

        // 22. Return F.
        return bound;
    }
});

//
// Array
// =====
//

// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
defineProperties(Array, { isArray: isArray });


var boxedString = Object('a');
var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

var properlyBoxesContext = function properlyBoxed(method) {
    // Check node 0.6.21 bug where third parameter is not boxed
    var properlyBoxesNonStrict = true;
    var properlyBoxesStrict = true;
    if (method) {
        method.call('foo', function (_, __, context) {
            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }
        });

        method.call([1], function () {
            'use strict';
            properlyBoxesStrict = typeof this === 'string';
        }, 'x');
    }
    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;
};

defineProperties(ArrayPrototype, {
    forEach: function forEach(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && isString(this) ? this.split('') : object,
            thisp = arguments[1],
            i = -1,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(); // TODO message
        }

        while (++i < length) {
            if (i in self) {
                // Invoke the callback function with call, passing arguments:
                // context, property value, property key, thisArg object
                // context
                fun.call(thisp, self[i], i, object);
            }
        }
    }
}, !properlyBoxesContext(ArrayPrototype.forEach));

// ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
var hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;
defineProperties(ArrayPrototype, {
    indexOf: function indexOf(sought /*, fromIndex */ ) {
        var self = splitString && isString(this) ? this.split('') : toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }

        var i = 0;
        if (arguments.length > 1) {
            i = toInteger(arguments[1]);
        }

        // handle negative indices
        i = i >= 0 ? i : Math.max(0, length + i);
        for (; i < length; i++) {
            if (i in self && self[i] === sought) {
                return i;
            }
        }
        return -1;
    }
}, hasFirefox2IndexOfBug);

//
// String
// ======
//

// ES5 15.5.4.14
// http://es5.github.com/#x15.5.4.14

// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
// Many browsers do not split properly with regular expressions or they
// do not perform the split correctly under obscure conditions.
// See http://blog.stevenlevithan.com/archives/cross-browser-split
// I've tested in many browsers and this seems to cover the deviant ones:
//    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
//    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
//    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
//       [undefined, "t", undefined, "e", ...]
//    ''.split(/.?/) should be [], not [""]
//    '.'.split(/()()/) should be ["."], not ["", "", "."]

var string_split = StringPrototype.split;
if (
    'ab'.split(/(?:ab)*/).length !== 2 ||
    '.'.split(/(.?)(.?)/).length !== 4 ||
    'tesst'.split(/(s)*/)[1] === 't' ||
    'test'.split(/(?:)/, -1).length !== 4 ||
    ''.split(/.?/).length ||
    '.'.split(/()()/).length > 1
) {
    (function () {
        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group

        StringPrototype.split = function (separator, limit) {
            var string = this;
            if (separator === void 0 && limit === 0) {
                return [];
            }

            // If `separator` is not a regex, use native split
            if (_toString.call(separator) !== '[object RegExp]') {
                return string_split.call(this, separator, limit);
            }

            var output = [],
                flags = (separator.ignoreCase ? 'i' : '') +
                        (separator.multiline  ? 'm' : '') +
                        (separator.extended   ? 'x' : '') + // Proposed for ES6
                        (separator.sticky     ? 'y' : ''), // Firefox 3+
                lastLastIndex = 0,
                // Make `global` and avoid `lastIndex` issues by working with a copy
                separator2, match, lastIndex, lastLength;
            separator = new RegExp(separator.source, flags + 'g');
            string += ''; // Type-convert
            if (!compliantExecNpcg) {
                // Doesn't need flags gy, but they don't hurt
                separator2 = new RegExp('^' + separator.source + '$(?!\\s)', flags);
            }
            /* Values for `limit`, per the spec:
             * If undefined: 4294967295 // Math.pow(2, 32) - 1
             * If 0, Infinity, or NaN: 0
             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
             * If negative number: 4294967296 - Math.floor(Math.abs(limit))
             * If other: Type-convert, then use the above rules
             */
            limit = limit === void 0 ?
                -1 >>> 0 : // Math.pow(2, 32) - 1
                ToUint32(limit);
            while (match = separator.exec(string)) {
                // `separator.lastIndex` is not reliable cross-browser
                lastIndex = match.index + match[0].length;
                if (lastIndex > lastLastIndex) {
                    output.push(string.slice(lastLastIndex, match.index));
                    // Fix browsers whose `exec` methods don't consistently return `undefined` for
                    // nonparticipating capturing groups
                    if (!compliantExecNpcg && match.length > 1) {
                        match[0].replace(separator2, function () {
                            for (var i = 1; i < arguments.length - 2; i++) {
                                if (arguments[i] === void 0) {
                                    match[i] = void 0;
                                }
                            }
                        });
                    }
                    if (match.length > 1 && match.index < string.length) {
                        ArrayPrototype.push.apply(output, match.slice(1));
                    }
                    lastLength = match[0].length;
                    lastLastIndex = lastIndex;
                    if (output.length >= limit) {
                        break;
                    }
                }
                if (separator.lastIndex === match.index) {
                    separator.lastIndex++; // Avoid an infinite loop
                }
            }
            if (lastLastIndex === string.length) {
                if (lastLength || !separator.test('')) {
                    output.push('');
                }
            } else {
                output.push(string.slice(lastLastIndex));
            }
            return output.length > limit ? output.slice(0, limit) : output;
        };
    }());

// [bugfix, chrome]
// If separator is undefined, then the result array contains just one String,
// which is the this value (converted to a String). If limit is not undefined,
// then the output array is truncated so that it contains no more than limit
// elements.
// "0".split(undefined, 0) -> []
} else if ('0'.split(void 0, 0).length) {
    StringPrototype.split = function split(separator, limit) {
        if (separator === void 0 && limit === 0) { return []; }
        return string_split.call(this, separator, limit);
    };
}

// ECMA-262, 3rd B.2.3
// Not an ECMAScript standard, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
var string_substr = StringPrototype.substr;
var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';
defineProperties(StringPrototype, {
    substr: function substr(start, length) {
        return string_substr.call(
            this,
            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,
            length
        );
    }
}, hasNegativeSubstrBug);


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport-list.js":
/*!**********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport-list.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = [
  // streaming transports
  __webpack_require__(/*! ./transport/websocket */ "./node_modules/sockjs-client/lib/transport/websocket.js")
, __webpack_require__(/*! ./transport/xhr-streaming */ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js")
, __webpack_require__(/*! ./transport/xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js")
, __webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js"))

  // polling transports
, __webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js"))
, __webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js")
, __webpack_require__(/*! ./transport/xdr-polling */ "./node_modules/sockjs-client/lib/transport/xdr-polling.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js"))
, __webpack_require__(/*! ./transport/jsonp-polling */ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js")
];


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , utils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , XHR = __webpack_require__.g.XMLHttpRequest
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:browser:xhr');
}

function AbstractXHRObject(method, url, payload, opts) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function () {
    self._start(method, url, payload, opts);
  }, 0);
}

inherits(AbstractXHRObject, EventEmitter);

AbstractXHRObject.prototype._start = function(method, url, payload, opts) {
  var self = this;

  try {
    this.xhr = new XHR();
  } catch (x) {
    // intentionally empty
  }

  if (!this.xhr) {
    debug('no xhr');
    this.emit('finish', 0, 'no xhr support');
    this._cleanup();
    return;
  }

  // several browsers cache POSTs
  url = urlUtils.addQuery(url, 't=' + (+new Date()));

  // Explorer tends to keep connection open, even after the
  // tab gets closed: http://bugs.jquery.com/ticket/5280
  this.unloadRef = utils.unloadAdd(function() {
    debug('unload cleanup');
    self._cleanup(true);
  });
  try {
    this.xhr.open(method, url, true);
    if (this.timeout && 'timeout' in this.xhr) {
      this.xhr.timeout = this.timeout;
      this.xhr.ontimeout = function() {
        debug('xhr timeout');
        self.emit('finish', 0, '');
        self._cleanup(false);
      };
    }
  } catch (e) {
    debug('exception', e);
    // IE raises an exception on wrong port.
    this.emit('finish', 0, '');
    this._cleanup(false);
    return;
  }

  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {
    debug('withCredentials');
    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
    // "This never affects same-site requests."

    this.xhr.withCredentials = true;
  }
  if (opts && opts.headers) {
    for (var key in opts.headers) {
      this.xhr.setRequestHeader(key, opts.headers[key]);
    }
  }

  this.xhr.onreadystatechange = function() {
    if (self.xhr) {
      var x = self.xhr;
      var text, status;
      debug('readyState', x.readyState);
      switch (x.readyState) {
      case 3:
        // IE doesn't like peeking into responseText or status
        // on Microsoft.XMLHTTP and readystate=3
        try {
          status = x.status;
          text = x.responseText;
        } catch (e) {
          // intentionally empty
        }
        debug('status', status);
        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
        if (status === 1223) {
          status = 204;
        }

        // IE does return readystate == 3 for 404 answers.
        if (status === 200 && text && text.length > 0) {
          debug('chunk');
          self.emit('chunk', status, text);
        }
        break;
      case 4:
        status = x.status;
        debug('status', status);
        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
        if (status === 1223) {
          status = 204;
        }
        // IE returns this for a bad port
        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx
        if (status === 12005 || status === 12029) {
          status = 0;
        }

        debug('finish', status, x.responseText);
        self.emit('finish', status, x.responseText);
        self._cleanup(false);
        break;
      }
    }
  };

  try {
    self.xhr.send(payload);
  } catch (e) {
    self.emit('finish', 0, '');
    self._cleanup(false);
  }
};

AbstractXHRObject.prototype._cleanup = function(abort) {
  debug('cleanup');
  if (!this.xhr) {
    return;
  }
  this.removeAllListeners();
  utils.unloadDel(this.unloadRef);

  // IE needs this field to be a function
  this.xhr.onreadystatechange = function() {};
  if (this.xhr.ontimeout) {
    this.xhr.ontimeout = null;
  }

  if (abort) {
    try {
      this.xhr.abort();
    } catch (x) {
      // intentionally empty
    }
  }
  this.unloadRef = this.xhr = null;
};

AbstractXHRObject.prototype.close = function() {
  debug('close');
  this._cleanup(true);
};

AbstractXHRObject.enabled = !!XHR;
// override XMLHttpRequest for IE6/7
// obfuscate to avoid firewalls
var axo = ['Active'].concat('Object').join('X');
if (!AbstractXHRObject.enabled && (axo in __webpack_require__.g)) {
  debug('overriding xmlhttprequest');
  XHR = function() {
    try {
      return new __webpack_require__.g[axo]('Microsoft.XMLHTTP');
    } catch (e) {
      return null;
    }
  };
  AbstractXHRObject.enabled = !!new XHR();
}

var cors = false;
try {
  cors = 'withCredentials' in new XHR();
} catch (ignored) {
  // intentionally empty
}

AbstractXHRObject.supportsCORS = cors;

module.exports = AbstractXHRObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/eventsource.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.g.EventSource;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/websocket.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/websocket.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Driver = __webpack_require__.g.WebSocket || __webpack_require__.g.MozWebSocket;
if (Driver) {
	module.exports = function WebSocketBrowserDriver(url) {
		return new Driver(url);
	};
} else {
	module.exports = undefined;
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/eventsource.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/eventsource.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , EventSourceReceiver = __webpack_require__(/*! ./receiver/eventsource */ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js")
  ;

function EventSourceTransport(transUrl) {
  if (!EventSourceTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);
}

inherits(EventSourceTransport, AjaxBasedTransport);

EventSourceTransport.enabled = function() {
  return !!EventSourceDriver;
};

EventSourceTransport.transportName = 'eventsource';
EventSourceTransport.roundTrips = 2;

module.exports = EventSourceTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/htmlfile.js":
/*!**************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/htmlfile.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , HtmlfileReceiver = __webpack_require__(/*! ./receiver/htmlfile */ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  ;

function HtmlFileTransport(transUrl) {
  if (!HtmlfileReceiver.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);
}

inherits(HtmlFileTransport, AjaxBasedTransport);

HtmlFileTransport.enabled = function(info) {
  return HtmlfileReceiver.enabled && info.sameOrigin;
};

HtmlFileTransport.transportName = 'htmlfile';
HtmlFileTransport.roundTrips = 2;

module.exports = HtmlFileTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/iframe.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/iframe.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// Few cool transports do work only for same-origin. In order to make
// them work cross-domain we shall use iframe, served from the
// remote domain. New browsers have capabilities to communicate with
// cross domain iframe using postMessage(). In IE it was implemented
// from IE 8+, but of course, IE got some details wrong:
//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
//    http://stevesouders.com/misc/test-postmessage.php

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , version = __webpack_require__(/*! ../version */ "./node_modules/sockjs-client/lib/version.js")
  , urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , iframeUtils = __webpack_require__(/*! ../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , eventUtils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , random = __webpack_require__(/*! ../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:transport:iframe');
}

function IframeTransport(transport, transUrl, baseUrl) {
  if (!IframeTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }
  EventEmitter.call(this);

  var self = this;
  this.origin = urlUtils.getOrigin(baseUrl);
  this.baseUrl = baseUrl;
  this.transUrl = transUrl;
  this.transport = transport;
  this.windowId = random.string(8);

  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;
  debug(transport, transUrl, iframeUrl);

  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {
    debug('err callback');
    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');
    self.close();
  });

  this.onmessageCallback = this._message.bind(this);
  eventUtils.attachEvent('message', this.onmessageCallback);
}

inherits(IframeTransport, EventEmitter);

IframeTransport.prototype.close = function() {
  debug('close');
  this.removeAllListeners();
  if (this.iframeObj) {
    eventUtils.detachEvent('message', this.onmessageCallback);
    try {
      // When the iframe is not loaded, IE raises an exception
      // on 'contentWindow'.
      this.postMessage('c');
    } catch (x) {
      // intentionally empty
    }
    this.iframeObj.cleanup();
    this.iframeObj = null;
    this.onmessageCallback = this.iframeObj = null;
  }
};

IframeTransport.prototype._message = function(e) {
  debug('message', e.data);
  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {
    debug('not same origin', e.origin, this.origin);
    return;
  }

  var iframeMessage;
  try {
    iframeMessage = JSON.parse(e.data);
  } catch (ignored) {
    debug('bad json', e.data);
    return;
  }

  if (iframeMessage.windowId !== this.windowId) {
    debug('mismatched window id', iframeMessage.windowId, this.windowId);
    return;
  }

  switch (iframeMessage.type) {
  case 's':
    this.iframeObj.loaded();
    // window global dependency
    this.postMessage('s', JSON.stringify([
      version
    , this.transport
    , this.transUrl
    , this.baseUrl
    ]));
    break;
  case 't':
    this.emit('message', iframeMessage.data);
    break;
  case 'c':
    var cdata;
    try {
      cdata = JSON.parse(iframeMessage.data);
    } catch (ignored) {
      debug('bad json', iframeMessage.data);
      return;
    }
    this.emit('close', cdata[0], cdata[1]);
    this.close();
    break;
  }
};

IframeTransport.prototype.postMessage = function(type, data) {
  debug('postMessage', type, data);
  this.iframeObj.post(JSON.stringify({
    windowId: this.windowId
  , type: type
  , data: data || ''
  }), this.origin);
};

IframeTransport.prototype.send = function(message) {
  debug('send', message);
  this.postMessage('m', message);
};

IframeTransport.enabled = function() {
  return iframeUtils.iframeEnabled;
};

IframeTransport.transportName = 'iframe';
IframeTransport.roundTrips = 2;

module.exports = IframeTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/jsonp-polling.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// The simplest and most robust transport, using the well-know cross
// domain hack - JSONP. This transport is quite inefficient - one
// message could use up to one http request. But at least it works almost
// everywhere.
// Known limitations:
//   o you will get a spinning cursor
//   o for Konqueror a dumb timer is needed to detect errors

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , SenderReceiver = __webpack_require__(/*! ./lib/sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js")
  , JsonpReceiver = __webpack_require__(/*! ./receiver/jsonp */ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js")
  , jsonpSender = __webpack_require__(/*! ./sender/jsonp */ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js")
  ;

function JsonPTransport(transUrl) {
  if (!JsonPTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }
  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);
}

inherits(JsonPTransport, SenderReceiver);

JsonPTransport.enabled = function() {
  return !!__webpack_require__.g.document;
};

JsonPTransport.transportName = 'jsonp-polling';
JsonPTransport.roundTrips = 1;
JsonPTransport.needBody = true;

module.exports = JsonPTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/ajax-based.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , SenderReceiver = __webpack_require__(/*! ./sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:ajax-based');
}

function createAjaxSender(AjaxObject) {
  return function(url, payload, callback) {
    debug('create ajax sender', url, payload);
    var opt = {};
    if (typeof payload === 'string') {
      opt.headers = {'Content-type': 'text/plain'};
    }
    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');
    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);
    xo.once('finish', function(status) {
      debug('finish', status);
      xo = null;

      if (status !== 200 && status !== 204) {
        return callback(new Error('http status ' + status));
      }
      callback();
    });
    return function() {
      debug('abort');
      xo.close();
      xo = null;

      var err = new Error('Aborted');
      err.code = 1000;
      callback(err);
    };
  };
}

function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {
  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);
}

inherits(AjaxBasedTransport, SenderReceiver);

module.exports = AjaxBasedTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:buffered-sender');
}

function BufferedSender(url, sender) {
  debug(url);
  EventEmitter.call(this);
  this.sendBuffer = [];
  this.sender = sender;
  this.url = url;
}

inherits(BufferedSender, EventEmitter);

BufferedSender.prototype.send = function(message) {
  debug('send', message);
  this.sendBuffer.push(message);
  if (!this.sendStop) {
    this.sendSchedule();
  }
};

// For polling transports in a situation when in the message callback,
// new message is being send. If the sending connection was started
// before receiving one, it is possible to saturate the network and
// timeout due to the lack of receiving socket. To avoid that we delay
// sending messages by some small time, in order to let receiving
// connection be started beforehand. This is only a halfmeasure and
// does not fix the big problem, but it does make the tests go more
// stable on slow networks.
BufferedSender.prototype.sendScheduleWait = function() {
  debug('sendScheduleWait');
  var self = this;
  var tref;
  this.sendStop = function() {
    debug('sendStop');
    self.sendStop = null;
    clearTimeout(tref);
  };
  tref = setTimeout(function() {
    debug('timeout');
    self.sendStop = null;
    self.sendSchedule();
  }, 25);
};

BufferedSender.prototype.sendSchedule = function() {
  debug('sendSchedule', this.sendBuffer.length);
  var self = this;
  if (this.sendBuffer.length > 0) {
    var payload = '[' + this.sendBuffer.join(',') + ']';
    this.sendStop = this.sender(this.url, payload, function(err) {
      self.sendStop = null;
      if (err) {
        debug('error', err);
        self.emit('close', err.code || 1006, 'Sending error: ' + err);
        self.close();
      } else {
        self.sendScheduleWait();
      }
    });
    this.sendBuffer = [];
  }
};

BufferedSender.prototype._cleanup = function() {
  debug('_cleanup');
  this.removeAllListeners();
};

BufferedSender.prototype.close = function() {
  debug('close');
  this._cleanup();
  if (this.sendStop) {
    this.sendStop();
    this.sendStop = null;
  }
};

module.exports = BufferedSender;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , IframeTransport = __webpack_require__(/*! ../iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js")
  , objectUtils = __webpack_require__(/*! ../../utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  ;

module.exports = function(transport) {

  function IframeWrapTransport(transUrl, baseUrl) {
    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);
  }

  inherits(IframeWrapTransport, IframeTransport);

  IframeWrapTransport.enabled = function(url, info) {
    if (!__webpack_require__.g.document) {
      return false;
    }

    var iframeInfo = objectUtils.extend({}, info);
    iframeInfo.sameOrigin = true;
    return transport.enabled(iframeInfo) && IframeTransport.enabled();
  };

  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;
  IframeWrapTransport.needBody = true;
  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)

  IframeWrapTransport.facadeTransport = transport;

  return IframeWrapTransport;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/polling.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:polling');
}

function Polling(Receiver, receiveUrl, AjaxObject) {
  debug(receiveUrl);
  EventEmitter.call(this);
  this.Receiver = Receiver;
  this.receiveUrl = receiveUrl;
  this.AjaxObject = AjaxObject;
  this._scheduleReceiver();
}

inherits(Polling, EventEmitter);

Polling.prototype._scheduleReceiver = function() {
  debug('_scheduleReceiver');
  var self = this;
  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);

  poll.on('message', function(msg) {
    debug('message', msg);
    self.emit('message', msg);
  });

  poll.once('close', function(code, reason) {
    debug('close', code, reason, self.pollIsClosing);
    self.poll = poll = null;

    if (!self.pollIsClosing) {
      if (reason === 'network') {
        self._scheduleReceiver();
      } else {
        self.emit('close', code || 1006, reason);
        self.removeAllListeners();
      }
    }
  });
};

Polling.prototype.abort = function() {
  debug('abort');
  this.removeAllListeners();
  this.pollIsClosing = true;
  if (this.poll) {
    this.poll.abort();
  }
};

module.exports = Polling;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , BufferedSender = __webpack_require__(/*! ./buffered-sender */ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js")
  , Polling = __webpack_require__(/*! ./polling */ "./node_modules/sockjs-client/lib/transport/lib/polling.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender-receiver');
}

function SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {
  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);
  debug(pollUrl);
  var self = this;
  BufferedSender.call(this, transUrl, senderFunc);

  this.poll = new Polling(Receiver, pollUrl, AjaxObject);
  this.poll.on('message', function(msg) {
    debug('poll message', msg);
    self.emit('message', msg);
  });
  this.poll.once('close', function(code, reason) {
    debug('poll close', code, reason);
    self.poll = null;
    self.emit('close', code, reason);
    self.close();
  });
}

inherits(SenderReceiver, BufferedSender);

SenderReceiver.prototype.close = function() {
  BufferedSender.prototype.close.call(this);
  debug('close');
  this.removeAllListeners();
  if (this.poll) {
    this.poll.abort();
    this.poll = null;
  }
};

module.exports = SenderReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/eventsource.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:eventsource');
}

function EventSourceReceiver(url) {
  debug(url);
  EventEmitter.call(this);

  var self = this;
  var es = this.es = new EventSourceDriver(url);
  es.onmessage = function(e) {
    debug('message', e.data);
    self.emit('message', decodeURI(e.data));
  };
  es.onerror = function(e) {
    debug('error', es.readyState, e);
    // ES on reconnection has readyState = 0 or 1.
    // on network error it's CLOSED = 2
    var reason = (es.readyState !== 2 ? 'network' : 'permanent');
    self._cleanup();
    self._close(reason);
  };
}

inherits(EventSourceReceiver, EventEmitter);

EventSourceReceiver.prototype.abort = function() {
  debug('abort');
  this._cleanup();
  this._close('user');
};

EventSourceReceiver.prototype._cleanup = function() {
  debug('cleanup');
  var es = this.es;
  if (es) {
    es.onmessage = es.onerror = null;
    es.close();
    this.es = null;
  }
};

EventSourceReceiver.prototype._close = function(reason) {
  debug('close', reason);
  var self = this;
  // Safari and chrome < 15 crash if we close window before
  // waiting for ES cleanup. See:
  // https://code.google.com/p/chromium/issues/detail?id=89155
  setTimeout(function() {
    self.emit('close', null, reason);
    self.removeAllListeners();
  }, 200);
};

module.exports = EventSourceReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , iframeUtils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:htmlfile');
}

function HtmlfileReceiver(url) {
  debug(url);
  EventEmitter.call(this);
  var self = this;
  iframeUtils.polluteGlobalNamespace();

  this.id = 'a' + random.string(6);
  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));

  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);
  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?
      iframeUtils.createHtmlfile : iframeUtils.createIframe;

  __webpack_require__.g[iframeUtils.WPrefix][this.id] = {
    start: function() {
      debug('start');
      self.iframeObj.loaded();
    }
  , message: function(data) {
      debug('message', data);
      self.emit('message', data);
    }
  , stop: function() {
      debug('stop');
      self._cleanup();
      self._close('network');
    }
  };
  this.iframeObj = constructFunc(url, function() {
    debug('callback');
    self._cleanup();
    self._close('permanent');
  });
}

inherits(HtmlfileReceiver, EventEmitter);

HtmlfileReceiver.prototype.abort = function() {
  debug('abort');
  this._cleanup();
  this._close('user');
};

HtmlfileReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  if (this.iframeObj) {
    this.iframeObj.cleanup();
    this.iframeObj = null;
  }
  delete __webpack_require__.g[iframeUtils.WPrefix][this.id];
};

HtmlfileReceiver.prototype._close = function(reason) {
  debug('_close', reason);
  this.emit('close', null, reason);
  this.removeAllListeners();
};

HtmlfileReceiver.htmlfileEnabled = false;

// obfuscate to avoid firewalls
var axo = ['Active'].concat('Object').join('X');
if (axo in __webpack_require__.g) {
  try {
    HtmlfileReceiver.htmlfileEnabled = !!new __webpack_require__.g[axo]('htmlfile');
  } catch (x) {
    // intentionally empty
  }
}

HtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;

module.exports = HtmlfileReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/jsonp.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:jsonp');
}

function JsonpReceiver(url) {
  debug(url);
  var self = this;
  EventEmitter.call(this);

  utils.polluteGlobalNamespace();

  this.id = 'a' + random.string(6);
  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));

  __webpack_require__.g[utils.WPrefix][this.id] = this._callback.bind(this);
  this._createScript(urlWithId);

  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.
  this.timeoutId = setTimeout(function() {
    debug('timeout');
    self._abort(new Error('JSONP script loaded abnormally (timeout)'));
  }, JsonpReceiver.timeout);
}

inherits(JsonpReceiver, EventEmitter);

JsonpReceiver.prototype.abort = function() {
  debug('abort');
  if (__webpack_require__.g[utils.WPrefix][this.id]) {
    var err = new Error('JSONP user aborted read');
    err.code = 1000;
    this._abort(err);
  }
};

JsonpReceiver.timeout = 35000;
JsonpReceiver.scriptErrorTimeout = 1000;

JsonpReceiver.prototype._callback = function(data) {
  debug('_callback', data);
  this._cleanup();

  if (this.aborting) {
    return;
  }

  if (data) {
    debug('message', data);
    this.emit('message', data);
  }
  this.emit('close', null, 'network');
  this.removeAllListeners();
};

JsonpReceiver.prototype._abort = function(err) {
  debug('_abort', err);
  this._cleanup();
  this.aborting = true;
  this.emit('close', err.code, err.message);
  this.removeAllListeners();
};

JsonpReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  clearTimeout(this.timeoutId);
  if (this.script2) {
    this.script2.parentNode.removeChild(this.script2);
    this.script2 = null;
  }
  if (this.script) {
    var script = this.script;
    // Unfortunately, you can't really abort script loading of
    // the script.
    script.parentNode.removeChild(script);
    script.onreadystatechange = script.onerror =
        script.onload = script.onclick = null;
    this.script = null;
  }
  delete __webpack_require__.g[utils.WPrefix][this.id];
};

JsonpReceiver.prototype._scriptError = function() {
  debug('_scriptError');
  var self = this;
  if (this.errorTimer) {
    return;
  }

  this.errorTimer = setTimeout(function() {
    if (!self.loadedOkay) {
      self._abort(new Error('JSONP script loaded abnormally (onerror)'));
    }
  }, JsonpReceiver.scriptErrorTimeout);
};

JsonpReceiver.prototype._createScript = function(url) {
  debug('_createScript', url);
  var self = this;
  var script = this.script = __webpack_require__.g.document.createElement('script');
  var script2;  // Opera synchronous load trick.

  script.id = 'a' + random.string(8);
  script.src = url;
  script.type = 'text/javascript';
  script.charset = 'UTF-8';
  script.onerror = this._scriptError.bind(this);
  script.onload = function() {
    debug('onload');
    self._abort(new Error('JSONP script loaded abnormally (onload)'));
  };

  // IE9 fires 'error' event after onreadystatechange or before, in random order.
  // Use loadedOkay to determine if actually errored
  script.onreadystatechange = function() {
    debug('onreadystatechange', script.readyState);
    if (/loaded|closed/.test(script.readyState)) {
      if (script && script.htmlFor && script.onclick) {
        self.loadedOkay = true;
        try {
          // In IE, actually execute the script.
          script.onclick();
        } catch (x) {
          // intentionally empty
        }
      }
      if (script) {
        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));
      }
    }
  };
  // IE: event/htmlFor/onclick trick.
  // One can't rely on proper order for onreadystatechange. In order to
  // make sure, set a 'htmlFor' and 'event' properties, so that
  // script code will be installed as 'onclick' handler for the
  // script object. Later, onreadystatechange, manually execute this
  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
  // set. For reference see:
  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
  // Also, read on that about script ordering:
  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order
  if (typeof script.async === 'undefined' && __webpack_require__.g.document.attachEvent) {
    // According to mozilla docs, in recent browsers script.async defaults
    // to 'true', so we may use it to detect a good browser:
    // https://developer.mozilla.org/en/HTML/Element/script
    if (!browser.isOpera()) {
      // Naively assume we're in IE
      try {
        script.htmlFor = script.id;
        script.event = 'onclick';
      } catch (x) {
        // intentionally empty
      }
      script.async = true;
    } else {
      // Opera, second sync script hack
      script2 = this.script2 = __webpack_require__.g.document.createElement('script');
      script2.text = "try{var a = document.getElementById('" + script.id + "'); if(a)a.onerror();}catch(x){};";
      script.async = script2.async = false;
    }
  }
  if (typeof script.async !== 'undefined') {
    script.async = true;
  }

  var head = __webpack_require__.g.document.getElementsByTagName('head')[0];
  head.insertBefore(script, head.firstChild);
  if (script2) {
    head.insertBefore(script2, head.firstChild);
  }
};

module.exports = JsonpReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/xhr.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:xhr');
}

function XhrReceiver(url, AjaxObject) {
  debug(url);
  EventEmitter.call(this);
  var self = this;

  this.bufferPosition = 0;

  this.xo = new AjaxObject('POST', url, null);
  this.xo.on('chunk', this._chunkHandler.bind(this));
  this.xo.once('finish', function(status, text) {
    debug('finish', status, text);
    self._chunkHandler(status, text);
    self.xo = null;
    var reason = status === 200 ? 'network' : 'permanent';
    debug('close', reason);
    self.emit('close', null, reason);
    self._cleanup();
  });
}

inherits(XhrReceiver, EventEmitter);

XhrReceiver.prototype._chunkHandler = function(status, text) {
  debug('_chunkHandler', status);
  if (status !== 200 || !text) {
    return;
  }

  for (var idx = -1; ; this.bufferPosition += idx + 1) {
    var buf = text.slice(this.bufferPosition);
    idx = buf.indexOf('\n');
    if (idx === -1) {
      break;
    }
    var msg = buf.slice(0, idx);
    if (msg) {
      debug('message', msg);
      this.emit('message', msg);
    }
  }
};

XhrReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  this.removeAllListeners();
};

XhrReceiver.prototype.abort = function() {
  debug('abort');
  if (this.xo) {
    this.xo.close();
    debug('close');
    this.emit('close', null, 'user');
    this.xo = null;
  }
  this._cleanup();
};

module.exports = XhrReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/jsonp.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:jsonp');
}

var form, area;

function createIframe(id) {
  debug('createIframe', id);
  try {
    // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
    return __webpack_require__.g.document.createElement('<iframe name="' + id + '">');
  } catch (x) {
    var iframe = __webpack_require__.g.document.createElement('iframe');
    iframe.name = id;
    return iframe;
  }
}

function createForm() {
  debug('createForm');
  form = __webpack_require__.g.document.createElement('form');
  form.style.display = 'none';
  form.style.position = 'absolute';
  form.method = 'POST';
  form.enctype = 'application/x-www-form-urlencoded';
  form.acceptCharset = 'UTF-8';

  area = __webpack_require__.g.document.createElement('textarea');
  area.name = 'd';
  form.appendChild(area);

  __webpack_require__.g.document.body.appendChild(form);
}

module.exports = function(url, payload, callback) {
  debug(url, payload);
  if (!form) {
    createForm();
  }
  var id = 'a' + random.string(8);
  form.target = id;
  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);

  var iframe = createIframe(id);
  iframe.id = id;
  iframe.style.display = 'none';
  form.appendChild(iframe);

  try {
    area.value = payload;
  } catch (e) {
    // seriously broken browsers get here
  }
  form.submit();

  var completed = function(err) {
    debug('completed', id, err);
    if (!iframe.onerror) {
      return;
    }
    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;
    // Opera mini doesn't like if we GC iframe
    // immediately, thus this timeout.
    setTimeout(function() {
      debug('cleaning up', id);
      iframe.parentNode.removeChild(iframe);
      iframe = null;
    }, 500);
    area.value = '';
    // It is not possible to detect if the iframe succeeded or
    // failed to submit our form.
    callback(err);
  };
  iframe.onerror = function() {
    debug('onerror', id);
    completed();
  };
  iframe.onload = function() {
    debug('onload', id);
    completed();
  };
  iframe.onreadystatechange = function(e) {
    debug('onreadystatechange', id, iframe.readyState, e);
    if (iframe.readyState === 'complete') {
      completed();
    }
  };
  return function() {
    debug('aborted', id);
    completed(new Error('Aborted'));
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xdr.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xdr.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , eventUtils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:xdr');
}

// References:
//   http://ajaxian.com/archives/100-line-ajax-wrapper
//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx

function XDRObject(method, url, payload) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function() {
    self._start(method, url, payload);
  }, 0);
}

inherits(XDRObject, EventEmitter);

XDRObject.prototype._start = function(method, url, payload) {
  debug('_start');
  var self = this;
  var xdr = new __webpack_require__.g.XDomainRequest();
  // IE caches even POSTs
  url = urlUtils.addQuery(url, 't=' + (+new Date()));

  xdr.onerror = function() {
    debug('onerror');
    self._error();
  };
  xdr.ontimeout = function() {
    debug('ontimeout');
    self._error();
  };
  xdr.onprogress = function() {
    debug('progress', xdr.responseText);
    self.emit('chunk', 200, xdr.responseText);
  };
  xdr.onload = function() {
    debug('load');
    self.emit('finish', 200, xdr.responseText);
    self._cleanup(false);
  };
  this.xdr = xdr;
  this.unloadRef = eventUtils.unloadAdd(function() {
    self._cleanup(true);
  });
  try {
    // Fails with AccessDenied if port number is bogus
    this.xdr.open(method, url);
    if (this.timeout) {
      this.xdr.timeout = this.timeout;
    }
    this.xdr.send(payload);
  } catch (x) {
    this._error();
  }
};

XDRObject.prototype._error = function() {
  this.emit('finish', 0, '');
  this._cleanup(false);
};

XDRObject.prototype._cleanup = function(abort) {
  debug('cleanup', abort);
  if (!this.xdr) {
    return;
  }
  this.removeAllListeners();
  eventUtils.unloadDel(this.unloadRef);

  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;
  if (abort) {
    try {
      this.xdr.abort();
    } catch (x) {
      // intentionally empty
    }
  }
  this.unloadRef = this.xdr = null;
};

XDRObject.prototype.close = function() {
  debug('close');
  this._cleanup(true);
};

// IE 8/9 if the request target uses the same scheme - #79
XDRObject.enabled = !!(__webpack_require__.g.XDomainRequest && browser.hasDomain());

module.exports = XDRObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js")
  ;

function XHRCorsObject(method, url, payload, opts) {
  XhrDriver.call(this, method, url, payload, opts);
}

inherits(XHRCorsObject, XhrDriver);

XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;

module.exports = XHRCorsObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  ;

function XHRFake(/* method, url, payload, opts */) {
  var self = this;
  EventEmitter.call(this);

  this.to = setTimeout(function() {
    self.emit('finish', 200, '{}');
  }, XHRFake.timeout);
}

inherits(XHRFake, EventEmitter);

XHRFake.prototype.close = function() {
  clearTimeout(this.to);
};

XHRFake.timeout = 2000;

module.exports = XHRFake;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-local.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js")
  ;

function XHRLocalObject(method, url, payload /*, opts */) {
  XhrDriver.call(this, method, url, payload, {
    noCredentials: true
  });
}

inherits(XHRLocalObject, XhrDriver);

XHRLocalObject.enabled = XhrDriver.enabled;

module.exports = XHRLocalObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/websocket.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/websocket.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , WebsocketDriver = __webpack_require__(/*! ./driver/websocket */ "./node_modules/sockjs-client/lib/transport/browser/websocket.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:websocket');
}

function WebSocketTransport(transUrl, ignore, options) {
  if (!WebSocketTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  EventEmitter.call(this);
  debug('constructor', transUrl);

  var self = this;
  var url = urlUtils.addPath(transUrl, '/websocket');
  if (url.slice(0, 5) === 'https') {
    url = 'wss' + url.slice(5);
  } else {
    url = 'ws' + url.slice(4);
  }
  this.url = url;

  this.ws = new WebsocketDriver(this.url, [], options);
  this.ws.onmessage = function(e) {
    debug('message event', e.data);
    self.emit('message', e.data);
  };
  // Firefox has an interesting bug. If a websocket connection is
  // created after onunload, it stays alive even when user
  // navigates away from the page. In such situation let's lie -
  // let's not open the ws connection at all. See:
  // https://github.com/sockjs/sockjs-client/issues/28
  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085
  this.unloadRef = utils.unloadAdd(function() {
    debug('unload');
    self.ws.close();
  });
  this.ws.onclose = function(e) {
    debug('close event', e.code, e.reason);
    self.emit('close', e.code, e.reason);
    self._cleanup();
  };
  this.ws.onerror = function(e) {
    debug('error event', e);
    self.emit('close', 1006, 'WebSocket connection broken');
    self._cleanup();
  };
}

inherits(WebSocketTransport, EventEmitter);

WebSocketTransport.prototype.send = function(data) {
  var msg = '[' + data + ']';
  debug('send', msg);
  this.ws.send(msg);
};

WebSocketTransport.prototype.close = function() {
  debug('close');
  var ws = this.ws;
  this._cleanup();
  if (ws) {
    ws.close();
  }
};

WebSocketTransport.prototype._cleanup = function() {
  debug('_cleanup');
  var ws = this.ws;
  if (ws) {
    ws.onmessage = ws.onclose = ws.onerror = null;
  }
  utils.unloadDel(this.unloadRef);
  this.unloadRef = this.ws = null;
  this.removeAllListeners();
};

WebSocketTransport.enabled = function() {
  debug('enabled');
  return !!WebsocketDriver;
};
WebSocketTransport.transportName = 'websocket';

// In theory, ws should require 1 round trip. But in chrome, this is
// not very stable over SSL. Most likely a ws connection requires a
// separate SSL connection, in which case 2 round trips are an
// absolute minumum.
WebSocketTransport.roundTrips = 2;

module.exports = WebSocketTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-polling.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XdrStreamingTransport = __webpack_require__(/*! ./xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  ;

function XdrPollingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);
}

inherits(XdrPollingTransport, AjaxBasedTransport);

XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
XdrPollingTransport.transportName = 'xdr-polling';
XdrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrPollingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-streaming.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  ;

// According to:
//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/

function XdrStreamingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);
}

inherits(XdrStreamingTransport, AjaxBasedTransport);

XdrStreamingTransport.enabled = function(info) {
  if (info.cookie_needed || info.nullOrigin) {
    return false;
  }
  return XDRObject.enabled && info.sameScheme;
};

XdrStreamingTransport.transportName = 'xdr-streaming';
XdrStreamingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrStreamingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-polling.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  ;

function XhrPollingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);
}

inherits(XhrPollingTransport, AjaxBasedTransport);

XhrPollingTransport.enabled = function(info) {
  if (info.nullOrigin) {
    return false;
  }

  if (XHRLocalObject.enabled && info.sameOrigin) {
    return true;
  }
  return XHRCorsObject.enabled;
};

XhrPollingTransport.transportName = 'xhr-polling';
XhrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XhrPollingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-streaming.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , browser = __webpack_require__(/*! ../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  ;

function XhrStreamingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);
}

inherits(XhrStreamingTransport, AjaxBasedTransport);

XhrStreamingTransport.enabled = function(info) {
  if (info.nullOrigin) {
    return false;
  }
  // Opera doesn't support xhr-streaming #60
  // But it might be able to #92
  if (browser.isOpera()) {
    return false;
  }

  return XHRCorsObject.enabled;
};

XhrStreamingTransport.transportName = 'xhr-streaming';
XhrStreamingTransport.roundTrips = 2; // preflight, ajax

// Safari gets confused when a streaming ajax request is started
// before onload. This causes the load indicator to spin indefinetely.
// Only require body when used in a browser
XhrStreamingTransport.needBody = !!__webpack_require__.g.document;

module.exports = XhrStreamingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser-crypto.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser-crypto.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (__webpack_require__.g.crypto && __webpack_require__.g.crypto.getRandomValues) {
  module.exports.randomBytes = function(length) {
    var bytes = new Uint8Array(length);
    __webpack_require__.g.crypto.getRandomValues(bytes);
    return bytes;
  };
} else {
  module.exports.randomBytes = function(length) {
    var bytes = new Array(length);
    for (var i = 0; i < length; i++) {
      bytes[i] = Math.floor(Math.random() * 256);
    }
    return bytes;
  };
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = {
  isOpera: function() {
    return __webpack_require__.g.navigator &&
      /opera/i.test(__webpack_require__.g.navigator.userAgent);
  }

, isKonqueror: function() {
    return __webpack_require__.g.navigator &&
      /konqueror/i.test(__webpack_require__.g.navigator.userAgent);
  }

  // #187 wrap document.domain in try/catch because of WP8 from file:///
, hasDomain: function () {
    // non-browser client always has a domain
    if (!__webpack_require__.g.document) {
      return true;
    }

    try {
      return !!__webpack_require__.g.document.domain;
    } catch (e) {
      return false;
    }
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/escape.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/escape.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


// Some extra characters that Chrome gets wrong, and substitutes with
// something else on the wire.
// eslint-disable-next-line no-control-regex, no-misleading-character-class
var extraEscapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g
  , extraLookup;

// This may be quite slow, so let's delay until user actually uses bad
// characters.
var unrollLookup = function(escapable) {
  var i;
  var unrolled = {};
  var c = [];
  for (i = 0; i < 65536; i++) {
    c.push( String.fromCharCode(i) );
  }
  escapable.lastIndex = 0;
  c.join('').replace(escapable, function(a) {
    unrolled[ a ] = '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    return '';
  });
  escapable.lastIndex = 0;
  return unrolled;
};

// Quote string, also taking care of unicode characters that browsers
// often break. Especially, take care of unicode surrogates:
// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates
module.exports = {
  quote: function(string) {
    var quoted = JSON.stringify(string);

    // In most cases this should be very fast and good enough.
    extraEscapable.lastIndex = 0;
    if (!extraEscapable.test(quoted)) {
      return quoted;
    }

    if (!extraLookup) {
      extraLookup = unrollLookup(extraEscapable);
    }

    return quoted.replace(extraEscapable, function(a) {
      return extraLookup[a];
    });
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/event.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var random = __webpack_require__(/*! ./random */ "./node_modules/sockjs-client/lib/utils/random.js");

var onUnload = {}
  , afterUnload = false
    // detect google chrome packaged apps because they don't allow the 'unload' event
  , isChromePackagedApp = __webpack_require__.g.chrome && __webpack_require__.g.chrome.app && __webpack_require__.g.chrome.app.runtime
  ;

module.exports = {
  attachEvent: function(event, listener) {
    if (typeof __webpack_require__.g.addEventListener !== 'undefined') {
      __webpack_require__.g.addEventListener(event, listener, false);
    } else if (__webpack_require__.g.document && __webpack_require__.g.attachEvent) {
      // IE quirks.
      // According to: http://stevesouders.com/misc/test-postmessage.php
      // the message gets delivered only to 'document', not 'window'.
      __webpack_require__.g.document.attachEvent('on' + event, listener);
      // I get 'window' for ie8.
      __webpack_require__.g.attachEvent('on' + event, listener);
    }
  }

, detachEvent: function(event, listener) {
    if (typeof __webpack_require__.g.addEventListener !== 'undefined') {
      __webpack_require__.g.removeEventListener(event, listener, false);
    } else if (__webpack_require__.g.document && __webpack_require__.g.detachEvent) {
      __webpack_require__.g.document.detachEvent('on' + event, listener);
      __webpack_require__.g.detachEvent('on' + event, listener);
    }
  }

, unloadAdd: function(listener) {
    if (isChromePackagedApp) {
      return null;
    }

    var ref = random.string(8);
    onUnload[ref] = listener;
    if (afterUnload) {
      setTimeout(this.triggerUnloadCallbacks, 0);
    }
    return ref;
  }

, unloadDel: function(ref) {
    if (ref in onUnload) {
      delete onUnload[ref];
    }
  }

, triggerUnloadCallbacks: function() {
    for (var ref in onUnload) {
      onUnload[ref]();
      delete onUnload[ref];
    }
  }
};

var unloadTriggered = function() {
  if (afterUnload) {
    return;
  }
  afterUnload = true;
  module.exports.triggerUnloadCallbacks();
};

// 'unload' alone is not reliable in opera within an iframe, but we
// can't use `beforeunload` as IE fires it on javascript: links.
if (!isChromePackagedApp) {
  module.exports.attachEvent('unload', unloadTriggered);
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/iframe.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/iframe.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var eventUtils = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , browser = __webpack_require__(/*! ./browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:iframe');
}

module.exports = {
  WPrefix: '_jp'
, currentWindowId: null

, polluteGlobalNamespace: function() {
    if (!(module.exports.WPrefix in __webpack_require__.g)) {
      __webpack_require__.g[module.exports.WPrefix] = {};
    }
  }

, postMessage: function(type, data) {
    if (__webpack_require__.g.parent !== __webpack_require__.g) {
      __webpack_require__.g.parent.postMessage(JSON.stringify({
        windowId: module.exports.currentWindowId
      , type: type
      , data: data || ''
      }), '*');
    } else {
      debug('Cannot postMessage, no parent window.', type, data);
    }
  }

, createIframe: function(iframeUrl, errorCallback) {
    var iframe = __webpack_require__.g.document.createElement('iframe');
    var tref, unloadRef;
    var unattach = function() {
      debug('unattach');
      clearTimeout(tref);
      // Explorer had problems with that.
      try {
        iframe.onload = null;
      } catch (x) {
        // intentionally empty
      }
      iframe.onerror = null;
    };
    var cleanup = function() {
      debug('cleanup');
      if (iframe) {
        unattach();
        // This timeout makes chrome fire onbeforeunload event
        // within iframe. Without the timeout it goes straight to
        // onunload.
        setTimeout(function() {
          if (iframe) {
            iframe.parentNode.removeChild(iframe);
          }
          iframe = null;
        }, 0);
        eventUtils.unloadDel(unloadRef);
      }
    };
    var onerror = function(err) {
      debug('onerror', err);
      if (iframe) {
        cleanup();
        errorCallback(err);
      }
    };
    var post = function(msg, origin) {
      debug('post', msg, origin);
      setTimeout(function() {
        try {
          // When the iframe is not loaded, IE raises an exception
          // on 'contentWindow'.
          if (iframe && iframe.contentWindow) {
            iframe.contentWindow.postMessage(msg, origin);
          }
        } catch (x) {
          // intentionally empty
        }
      }, 0);
    };

    iframe.src = iframeUrl;
    iframe.style.display = 'none';
    iframe.style.position = 'absolute';
    iframe.onerror = function() {
      onerror('onerror');
    };
    iframe.onload = function() {
      debug('onload');
      // `onload` is triggered before scripts on the iframe are
      // executed. Give it few seconds to actually load stuff.
      clearTimeout(tref);
      tref = setTimeout(function() {
        onerror('onload timeout');
      }, 2000);
    };
    __webpack_require__.g.document.body.appendChild(iframe);
    tref = setTimeout(function() {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post
    , cleanup: cleanup
    , loaded: unattach
    };
  }

/* eslint no-undef: "off", new-cap: "off" */
, createHtmlfile: function(iframeUrl, errorCallback) {
    var axo = ['Active'].concat('Object').join('X');
    var doc = new __webpack_require__.g[axo]('htmlfile');
    var tref, unloadRef;
    var iframe;
    var unattach = function() {
      clearTimeout(tref);
      iframe.onerror = null;
    };
    var cleanup = function() {
      if (doc) {
        unattach();
        eventUtils.unloadDel(unloadRef);
        iframe.parentNode.removeChild(iframe);
        iframe = doc = null;
        CollectGarbage();
      }
    };
    var onerror = function(r) {
      debug('onerror', r);
      if (doc) {
        cleanup();
        errorCallback(r);
      }
    };
    var post = function(msg, origin) {
      try {
        // When the iframe is not loaded, IE raises an exception
        // on 'contentWindow'.
        setTimeout(function() {
          if (iframe && iframe.contentWindow) {
              iframe.contentWindow.postMessage(msg, origin);
          }
        }, 0);
      } catch (x) {
        // intentionally empty
      }
    };

    doc.open();
    doc.write('<html><s' + 'cript>' +
              'document.domain="' + __webpack_require__.g.document.domain + '";' +
              '</s' + 'cript></html>');
    doc.close();
    doc.parentWindow[module.exports.WPrefix] = __webpack_require__.g[module.exports.WPrefix];
    var c = doc.createElement('div');
    doc.body.appendChild(c);
    iframe = doc.createElement('iframe');
    c.appendChild(iframe);
    iframe.src = iframeUrl;
    iframe.onerror = function() {
      onerror('onerror');
    };
    tref = setTimeout(function() {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post
    , cleanup: cleanup
    , loaded: unattach
    };
  }
};

module.exports.iframeEnabled = false;
if (__webpack_require__.g.document) {
  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
  // huge delay, or not at all.
  module.exports.iframeEnabled = (typeof __webpack_require__.g.postMessage === 'function' ||
    typeof __webpack_require__.g.postMessage === 'object') && (!browser.isKonqueror());
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/log.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/log.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var logObject = {};
['log', 'debug', 'warn'].forEach(function (level) {
  var levelExists;

  try {
    levelExists = __webpack_require__.g.console && __webpack_require__.g.console[level] && __webpack_require__.g.console[level].apply;
  } catch(e) {
    // do nothing
  }

  logObject[level] = levelExists ? function () {
    return __webpack_require__.g.console[level].apply(__webpack_require__.g.console, arguments);
  } : (level === 'log' ? function () {} : logObject.log);
});

module.exports = logObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/object.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/object.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = {
  isObject: function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }

, extend: function(obj) {
    if (!this.isObject(obj)) {
      return obj;
    }
    var source, prop;
    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];
      for (prop in source) {
        if (Object.prototype.hasOwnProperty.call(source, prop)) {
          obj[prop] = source[prop];
        }
      }
    }
    return obj;
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/random.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/random.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var crypto = __webpack_require__(/*! crypto */ "./node_modules/sockjs-client/lib/utils/browser-crypto.js");

// This string has length 32, a power of 2, so the modulus doesn't introduce a
// bias.
var _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';
module.exports = {
  string: function(length) {
    var max = _randomStringChars.length;
    var bytes = crypto.randomBytes(length);
    var ret = [];
    for (var i = 0; i < length; i++) {
      ret.push(_randomStringChars.substr(bytes[i] % max, 1));
    }
    return ret.join('');
  }

, number: function(max) {
    return Math.floor(Math.random() * max);
  }

, numberString: function(max) {
    var t = ('' + (max - 1)).length;
    var p = new Array(t + 1).join('0');
    return (p + this.number(max)).slice(-t);
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/transport.js":
/*!***********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/transport.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:transport');
}

module.exports = function(availableTransports) {
  return {
    filterToEnabled: function(transportsWhitelist, info) {
      var transports = {
        main: []
      , facade: []
      };
      if (!transportsWhitelist) {
        transportsWhitelist = [];
      } else if (typeof transportsWhitelist === 'string') {
        transportsWhitelist = [transportsWhitelist];
      }

      availableTransports.forEach(function(trans) {
        if (!trans) {
          return;
        }

        if (trans.transportName === 'websocket' && info.websocket === false) {
          debug('disabled from server', 'websocket');
          return;
        }

        if (transportsWhitelist.length &&
            transportsWhitelist.indexOf(trans.transportName) === -1) {
          debug('not in whitelist', trans.transportName);
          return;
        }

        if (trans.enabled(info)) {
          debug('enabled', trans.transportName);
          transports.main.push(trans);
          if (trans.facadeTransport) {
            transports.facade.push(trans.facadeTransport);
          }
        } else {
          debug('disabled', trans.transportName);
        }
      });
      return transports;
    }
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/url.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/url.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js");

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:url');
}

module.exports = {
  getOrigin: function(url) {
    if (!url) {
      return null;
    }

    var p = new URL(url);
    if (p.protocol === 'file:') {
      return null;
    }

    var port = p.port;
    if (!port) {
      port = (p.protocol === 'https:') ? '443' : '80';
    }

    return p.protocol + '//' + p.hostname + ':' + port;
  }

, isOriginEqual: function(a, b) {
    var res = this.getOrigin(a) === this.getOrigin(b);
    debug('same', a, b, res);
    return res;
  }

, isSchemeEqual: function(a, b) {
    return (a.split(':')[0] === b.split(':')[0]);
  }

, addPath: function (url, path) {
    var qs = url.split('?');
    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');
  }

, addQuery: function (url, q) {
    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));
  }

, isLoopbackAddr: function (addr) {
    return /^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(addr) || /^\[::1\]$/.test(addr);
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/version.js":
/*!***************************************************!*\
  !*** ./node_modules/sockjs-client/lib/version.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = '1.6.0';


/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/browser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/browser.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
/**
 * Colors.
 */

exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */
// eslint-disable-next-line complexity

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    return true;
  } // Internet Explorer and Edge do not support colors.


  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  } // Is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

  if (!this.useColors) {
    return;
  }

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into

  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if (match === '%%') {
      return;
    }

    index++;

    if (match === '%c') {
      // We only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });
  args.splice(lastC, 0, c);
}
/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */


function log() {
  var _console;

  // This hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return (typeof console === "undefined" ? "undefined" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  try {
    if (namespaces) {
      exports.storage.setItem('debug', namespaces);
    } else {
      exports.storage.removeItem('debug');
    }
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  var r;

  try {
    r = exports.storage.getItem('debug');
  } catch (error) {} // Swallow
  // XXX (@Qix-) should we be logging these?
  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */


function localstorage() {
  try {
    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    // The Browser also has localStorage in the global context.
    return localStorage;
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}

module.exports = __webpack_require__(/*! ./common */ "./node_modules/sockjs-client/node_modules/debug/src/common.js")(exports);
var formatters = module.exports.formatters;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (error) {
    return '[UnexpectedJSONParseError]: ' + error.message;
  }
};



/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/common.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */
function setup(env) {
  createDebug.debug = createDebug;
  createDebug.default = createDebug;
  createDebug.coerce = coerce;
  createDebug.disable = disable;
  createDebug.enable = enable;
  createDebug.enabled = enabled;
  createDebug.humanize = __webpack_require__(/*! ms */ "./node_modules/sockjs-client/node_modules/ms/index.js");
  Object.keys(env).forEach(function (key) {
    createDebug[key] = env[key];
  });
  /**
  * Active `debug` instances.
  */

  createDebug.instances = [];
  /**
  * The currently active debug mode names, and names to skip.
  */

  createDebug.names = [];
  createDebug.skips = [];
  /**
  * Map of special "%n" handling functions, for the debug "format" argument.
  *
  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
  */

  createDebug.formatters = {};
  /**
  * Selects a color for a debug namespace
  * @param {String} namespace The namespace string for the for the debug instance to be colored
  * @return {Number|String} An ANSI color code for the given namespace
  * @api private
  */

  function selectColor(namespace) {
    var hash = 0;

    for (var i = 0; i < namespace.length; i++) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
  }

  createDebug.selectColor = selectColor;
  /**
  * Create a debugger with the given `namespace`.
  *
  * @param {String} namespace
  * @return {Function}
  * @api public
  */

  function createDebug(namespace) {
    var prevTime;

    function debug() {
      // Disabled?
      if (!debug.enabled) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var self = debug; // Set `diff` timestamp

      var curr = Number(new Date());
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      args[0] = createDebug.coerce(args[0]);

      if (typeof args[0] !== 'string') {
        // Anything else let's inspect with %O
        args.unshift('%O');
      } // Apply any `formatters` transformations


      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // If we encounter an escaped % then don't increase the array index
        if (match === '%%') {
          return match;
        }

        index++;
        var formatter = createDebug.formatters[format];

        if (typeof formatter === 'function') {
          var val = args[index];
          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

          args.splice(index, 1);
          index--;
        }

        return match;
      }); // Apply env-specific formatting (colors, etc.)

      createDebug.formatArgs.call(self, args);
      var logFn = self.log || createDebug.log;
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = createDebug.enabled(namespace);
    debug.useColors = createDebug.useColors();
    debug.color = selectColor(namespace);
    debug.destroy = destroy;
    debug.extend = extend; // Debug.formatArgs = formatArgs;
    // debug.rawLog = rawLog;
    // env-specific initialization logic for debug instances

    if (typeof createDebug.init === 'function') {
      createDebug.init(debug);
    }

    createDebug.instances.push(debug);
    return debug;
  }

  function destroy() {
    var index = createDebug.instances.indexOf(this);

    if (index !== -1) {
      createDebug.instances.splice(index, 1);
      return true;
    }

    return false;
  }

  function extend(namespace, delimiter) {
    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
  }
  /**
  * Enables a debug mode by namespaces. This can include modes
  * separated by a colon and wildcards.
  *
  * @param {String} namespaces
  * @api public
  */


  function enable(namespaces) {
    createDebug.save(namespaces);
    createDebug.names = [];
    createDebug.skips = [];
    var i;
    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (i = 0; i < len; i++) {
      if (!split[i]) {
        // ignore empty strings
        continue;
      }

      namespaces = split[i].replace(/\*/g, '.*?');

      if (namespaces[0] === '-') {
        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        createDebug.names.push(new RegExp('^' + namespaces + '$'));
      }
    }

    for (i = 0; i < createDebug.instances.length; i++) {
      var instance = createDebug.instances[i];
      instance.enabled = createDebug.enabled(instance.namespace);
    }
  }
  /**
  * Disable debug output.
  *
  * @api public
  */


  function disable() {
    createDebug.enable('');
  }
  /**
  * Returns true if the given mode name is enabled, false otherwise.
  *
  * @param {String} name
  * @return {Boolean}
  * @api public
  */


  function enabled(name) {
    if (name[name.length - 1] === '*') {
      return true;
    }

    var i;
    var len;

    for (i = 0, len = createDebug.skips.length; i < len; i++) {
      if (createDebug.skips[i].test(name)) {
        return false;
      }
    }

    for (i = 0, len = createDebug.names.length; i < len; i++) {
      if (createDebug.names[i].test(name)) {
        return true;
      }
    }

    return false;
  }
  /**
  * Coerce `val`.
  *
  * @param {Mixed} val
  * @return {Mixed}
  * @api private
  */


  function coerce(val) {
    if (val instanceof Error) {
      return val.stack || val.message;
    }

    return val;
  }

  createDebug.enable(createDebug.load());
  return createDebug;
}

module.exports = setup;



/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/ms/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/ms/index.js ***!
  \*************************************************************/
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function (val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ "./node_modules/url-parse/index.js":
/*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var required = __webpack_require__(/*! requires-port */ "./node_modules/requires-port/index.js")
  , qs = __webpack_require__(/*! querystringify */ "./node_modules/querystringify/index.js")
  , controlOrWhitespace = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/
  , CRHTLF = /[\n\r\t]/g
  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
  , port = /:\d+$/
  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i
  , windowsDriveLetter = /^[a-zA-Z]:/;

/**
 * Remove control characters and whitespace from the beginning of a string.
 *
 * @param {Object|String} str String to trim.
 * @returns {String} A new string representing `str` stripped of control
 *     characters and whitespace from its beginning.
 * @public
 */
function trimLeft(str) {
  return (str ? str : '').toString().replace(controlOrWhitespace, '');
}

/**
 * These are the parse rules for the URL parser, it informs the parser
 * about:
 *
 * 0. The char it Needs to parse, if it's a string it should be done using
 *    indexOf, RegExp using exec and NaN means set as current value.
 * 1. The property we should set when parsing this value.
 * 2. Indication if it's backwards or forward parsing, when set as number it's
 *    the value of extra chars that should be split off.
 * 3. Inherit from location if non existing in the parser.
 * 4. `toLowerCase` the resulting value.
 */
var rules = [
  ['#', 'hash'],                        // Extract from the back.
  ['?', 'query'],                       // Extract from the back.
  function sanitize(address, url) {     // Sanitize what is left of the address
    return isSpecial(url.protocol) ? address.replace(/\\/g, '/') : address;
  },
  ['/', 'pathname'],                    // Extract from the back.
  ['@', 'auth', 1],                     // Extract from the front.
  [NaN, 'host', undefined, 1, 1],       // Set left over value.
  [/:(\d*)$/, 'port', undefined, 1],    // RegExp the back.
  [NaN, 'hostname', undefined, 1, 1]    // Set left over.
];

/**
 * These properties should not be copied or inherited from. This is only needed
 * for all non blob URL's as a blob URL does not include a hash, only the
 * origin.
 *
 * @type {Object}
 * @private
 */
var ignore = { hash: 1, query: 1 };

/**
 * The location object differs when your code is loaded through a normal page,
 * Worker or through a worker using a blob. And with the blobble begins the
 * trouble as the location object will contain the URL of the blob, not the
 * location of the page where our code is loaded in. The actual origin is
 * encoded in the `pathname` so we can thankfully generate a good "default"
 * location from it so we can generate proper relative URL's again.
 *
 * @param {Object|String} loc Optional default location object.
 * @returns {Object} lolcation object.
 * @public
 */
function lolcation(loc) {
  var globalVar;

  if (typeof window !== 'undefined') globalVar = window;
  else if (typeof __webpack_require__.g !== 'undefined') globalVar = __webpack_require__.g;
  else if (typeof self !== 'undefined') globalVar = self;
  else globalVar = {};

  var location = globalVar.location || {};
  loc = loc || location;

  var finaldestination = {}
    , type = typeof loc
    , key;

  if ('blob:' === loc.protocol) {
    finaldestination = new Url(unescape(loc.pathname), {});
  } else if ('string' === type) {
    finaldestination = new Url(loc, {});
    for (key in ignore) delete finaldestination[key];
  } else if ('object' === type) {
    for (key in loc) {
      if (key in ignore) continue;
      finaldestination[key] = loc[key];
    }

    if (finaldestination.slashes === undefined) {
      finaldestination.slashes = slashes.test(loc.href);
    }
  }

  return finaldestination;
}

/**
 * Check whether a protocol scheme is special.
 *
 * @param {String} The protocol scheme of the URL
 * @return {Boolean} `true` if the protocol scheme is special, else `false`
 * @private
 */
function isSpecial(scheme) {
  return (
    scheme === 'file:' ||
    scheme === 'ftp:' ||
    scheme === 'http:' ||
    scheme === 'https:' ||
    scheme === 'ws:' ||
    scheme === 'wss:'
  );
}

/**
 * @typedef ProtocolExtract
 * @type Object
 * @property {String} protocol Protocol matched in the URL, in lowercase.
 * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
 * @property {String} rest Rest of the URL that is not part of the protocol.
 */

/**
 * Extract protocol information from a URL with/without double slash ("//").
 *
 * @param {String} address URL we want to extract from.
 * @param {Object} location
 * @return {ProtocolExtract} Extracted information.
 * @private
 */
function extractProtocol(address, location) {
  address = trimLeft(address);
  address = address.replace(CRHTLF, '');
  location = location || {};

  var match = protocolre.exec(address);
  var protocol = match[1] ? match[1].toLowerCase() : '';
  var forwardSlashes = !!match[2];
  var otherSlashes = !!match[3];
  var slashesCount = 0;
  var rest;

  if (forwardSlashes) {
    if (otherSlashes) {
      rest = match[2] + match[3] + match[4];
      slashesCount = match[2].length + match[3].length;
    } else {
      rest = match[2] + match[4];
      slashesCount = match[2].length;
    }
  } else {
    if (otherSlashes) {
      rest = match[3] + match[4];
      slashesCount = match[3].length;
    } else {
      rest = match[4]
    }
  }

  if (protocol === 'file:') {
    if (slashesCount >= 2) {
      rest = rest.slice(2);
    }
  } else if (isSpecial(protocol)) {
    rest = match[4];
  } else if (protocol) {
    if (forwardSlashes) {
      rest = rest.slice(2);
    }
  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
    rest = match[4];
  }

  return {
    protocol: protocol,
    slashes: forwardSlashes || isSpecial(protocol),
    slashesCount: slashesCount,
    rest: rest
  };
}

/**
 * Resolve a relative URL pathname against a base URL pathname.
 *
 * @param {String} relative Pathname of the relative URL.
 * @param {String} base Pathname of the base URL.
 * @return {String} Resolved pathname.
 * @private
 */
function resolve(relative, base) {
  if (relative === '') return base;

  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
    , i = path.length
    , last = path[i - 1]
    , unshift = false
    , up = 0;

  while (i--) {
    if (path[i] === '.') {
      path.splice(i, 1);
    } else if (path[i] === '..') {
      path.splice(i, 1);
      up++;
    } else if (up) {
      if (i === 0) unshift = true;
      path.splice(i, 1);
      up--;
    }
  }

  if (unshift) path.unshift('');
  if (last === '.' || last === '..') path.push('');

  return path.join('/');
}

/**
 * The actual URL instance. Instead of returning an object we've opted-in to
 * create an actual constructor as it's much more memory efficient and
 * faster and it pleases my OCD.
 *
 * It is worth noting that we should not use `URL` as class name to prevent
 * clashes with the global URL instance that got introduced in browsers.
 *
 * @constructor
 * @param {String} address URL we want to parse.
 * @param {Object|String} [location] Location defaults for relative paths.
 * @param {Boolean|Function} [parser] Parser for the query string.
 * @private
 */
function Url(address, location, parser) {
  address = trimLeft(address);
  address = address.replace(CRHTLF, '');

  if (!(this instanceof Url)) {
    return new Url(address, location, parser);
  }

  var relative, extracted, parse, instruction, index, key
    , instructions = rules.slice()
    , type = typeof location
    , url = this
    , i = 0;

  //
  // The following if statements allows this module two have compatibility with
  // 2 different API:
  //
  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
  //    where the boolean indicates that the query string should also be parsed.
  //
  // 2. The `URL` interface of the browser which accepts a URL, object as
  //    arguments. The supplied object will be used as default values / fall-back
  //    for relative paths.
  //
  if ('object' !== type && 'string' !== type) {
    parser = location;
    location = null;
  }

  if (parser && 'function' !== typeof parser) parser = qs.parse;

  location = lolcation(location);

  //
  // Extract protocol information before running the instructions.
  //
  extracted = extractProtocol(address || '', location);
  relative = !extracted.protocol && !extracted.slashes;
  url.slashes = extracted.slashes || relative && location.slashes;
  url.protocol = extracted.protocol || location.protocol || '';
  address = extracted.rest;

  //
  // When the authority component is absent the URL starts with a path
  // component.
  //
  if (
    extracted.protocol === 'file:' && (
      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||
    (!extracted.slashes &&
      (extracted.protocol ||
        extracted.slashesCount < 2 ||
        !isSpecial(url.protocol)))
  ) {
    instructions[3] = [/(.*)/, 'pathname'];
  }

  for (; i < instructions.length; i++) {
    instruction = instructions[i];

    if (typeof instruction === 'function') {
      address = instruction(address, url);
      continue;
    }

    parse = instruction[0];
    key = instruction[1];

    if (parse !== parse) {
      url[key] = address;
    } else if ('string' === typeof parse) {
      index = parse === '@'
        ? address.lastIndexOf(parse)
        : address.indexOf(parse);

      if (~index) {
        if ('number' === typeof instruction[2]) {
          url[key] = address.slice(0, index);
          address = address.slice(index + instruction[2]);
        } else {
          url[key] = address.slice(index);
          address = address.slice(0, index);
        }
      }
    } else if ((index = parse.exec(address))) {
      url[key] = index[1];
      address = address.slice(0, index.index);
    }

    url[key] = url[key] || (
      relative && instruction[3] ? location[key] || '' : ''
    );

    //
    // Hostname, host and protocol should be lowercased so they can be used to
    // create a proper `origin`.
    //
    if (instruction[4]) url[key] = url[key].toLowerCase();
  }

  //
  // Also parse the supplied query string in to an object. If we're supplied
  // with a custom parser as function use that instead of the default build-in
  // parser.
  //
  if (parser) url.query = parser(url.query);

  //
  // If the URL is relative, resolve the pathname against the base URL.
  //
  if (
      relative
    && location.slashes
    && url.pathname.charAt(0) !== '/'
    && (url.pathname !== '' || location.pathname !== '')
  ) {
    url.pathname = resolve(url.pathname, location.pathname);
  }

  //
  // Default to a / for pathname if none exists. This normalizes the URL
  // to always have a /
  //
  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {
    url.pathname = '/' + url.pathname;
  }

  //
  // We should not add port numbers if they are already the default port number
  // for a given protocol. As the host also contains the port number we're going
  // override it with the hostname which contains no port number.
  //
  if (!required(url.port, url.protocol)) {
    url.host = url.hostname;
    url.port = '';
  }

  //
  // Parse down the `auth` for the username and password.
  //
  url.username = url.password = '';

  if (url.auth) {
    index = url.auth.indexOf(':');

    if (~index) {
      url.username = url.auth.slice(0, index);
      url.username = encodeURIComponent(decodeURIComponent(url.username));

      url.password = url.auth.slice(index + 1);
      url.password = encodeURIComponent(decodeURIComponent(url.password))
    } else {
      url.username = encodeURIComponent(decodeURIComponent(url.auth));
    }

    url.auth = url.password ? url.username +':'+ url.password : url.username;
  }

  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
    ? url.protocol +'//'+ url.host
    : 'null';

  //
  // The href is just the compiled result.
  //
  url.href = url.toString();
}

/**
 * This is convenience method for changing properties in the URL instance to
 * insure that they all propagate correctly.
 *
 * @param {String} part          Property we need to adjust.
 * @param {Mixed} value          The newly assigned value.
 * @param {Boolean|Function} fn  When setting the query, it will be the function
 *                               used to parse the query.
 *                               When setting the protocol, double slash will be
 *                               removed from the final url if it is true.
 * @returns {URL} URL instance for chaining.
 * @public
 */
function set(part, value, fn) {
  var url = this;

  switch (part) {
    case 'query':
      if ('string' === typeof value && value.length) {
        value = (fn || qs.parse)(value);
      }

      url[part] = value;
      break;

    case 'port':
      url[part] = value;

      if (!required(value, url.protocol)) {
        url.host = url.hostname;
        url[part] = '';
      } else if (value) {
        url.host = url.hostname +':'+ value;
      }

      break;

    case 'hostname':
      url[part] = value;

      if (url.port) value += ':'+ url.port;
      url.host = value;
      break;

    case 'host':
      url[part] = value;

      if (port.test(value)) {
        value = value.split(':');
        url.port = value.pop();
        url.hostname = value.join(':');
      } else {
        url.hostname = value;
        url.port = '';
      }

      break;

    case 'protocol':
      url.protocol = value.toLowerCase();
      url.slashes = !fn;
      break;

    case 'pathname':
    case 'hash':
      if (value) {
        var char = part === 'pathname' ? '/' : '#';
        url[part] = value.charAt(0) !== char ? char + value : value;
      } else {
        url[part] = value;
      }
      break;

    case 'username':
    case 'password':
      url[part] = encodeURIComponent(value);
      break;

    case 'auth':
      var index = value.indexOf(':');

      if (~index) {
        url.username = value.slice(0, index);
        url.username = encodeURIComponent(decodeURIComponent(url.username));

        url.password = value.slice(index + 1);
        url.password = encodeURIComponent(decodeURIComponent(url.password));
      } else {
        url.username = encodeURIComponent(decodeURIComponent(value));
      }
  }

  for (var i = 0; i < rules.length; i++) {
    var ins = rules[i];

    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
  }

  url.auth = url.password ? url.username +':'+ url.password : url.username;

  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
    ? url.protocol +'//'+ url.host
    : 'null';

  url.href = url.toString();

  return url;
}

/**
 * Transform the properties back in to a valid and full URL string.
 *
 * @param {Function} stringify Optional query stringify function.
 * @returns {String} Compiled version of the URL.
 * @public
 */
function toString(stringify) {
  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;

  var query
    , url = this
    , host = url.host
    , protocol = url.protocol;

  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

  var result =
    protocol +
    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');

  if (url.username) {
    result += url.username;
    if (url.password) result += ':'+ url.password;
    result += '@';
  } else if (url.password) {
    result += ':'+ url.password;
    result += '@';
  } else if (
    url.protocol !== 'file:' &&
    isSpecial(url.protocol) &&
    !host &&
    url.pathname !== '/'
  ) {
    //
    // Add back the empty userinfo, otherwise the original invalid URL
    // might be transformed into a valid one with `url.pathname` as host.
    //
    result += '@';
  }

  //
  // Trailing colon is removed from `url.host` when it is parsed. If it still
  // ends with a colon, then add back the trailing colon that was removed. This
  // prevents an invalid URL from being transformed into a valid one.
  //
  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {
    host += ':';
  }

  result += host + url.pathname;

  query = 'object' === typeof url.query ? stringify(url.query) : url.query;
  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

  if (url.hash) result += url.hash;

  return result;
}

Url.prototype = { set: set, toString: toString };

//
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//
Url.extractProtocol = extractProtocol;
Url.location = lolcation;
Url.trimLeft = trimLeft;
Url.qs = qs;

module.exports = Url;


/***/ }),

/***/ "./src/Ammo.js":
/*!*********************!*\
  !*** ./src/Ammo.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Ammo)
/* harmony export */ });
/* harmony import */ var _assets_ammo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/ammo */ "./src/assets/ammo.js");
/* harmony import */ var _assets_ammo__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_assets_ammo__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var three_examples_jsm_misc_ConvexObjectBreaker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three/examples/jsm/misc/ConvexObjectBreaker */ "./node_modules/three/examples/jsm/misc/ConvexObjectBreaker.js");

// require('./ammo')




class Ammo {
    Ammo;
    physicsUniverse;
    collisionConfiguration;
    dispatcher;
    overlappingPairCache;
    solver;
    tmpTransformation;

    threeScene
    rigidBody_List;
    convexBreaker = new three_examples_jsm_misc_ConvexObjectBreaker__WEBPACK_IMPORTED_MODULE_1__.ConvexObjectBreaker();
    numObjectsToRemove = 0;
    objectsToRemove = [];
    transformAux1;
    tempBtVec3_1;
    margin = 0.05
    impactPoint = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();
    impactNormal = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();

    constructor(initResolve, threeScene, rigidBody_List) {
        this.threeScene = threeScene;
        this.rigidBody_List = rigidBody_List
        this.init().then(() => { console.log('AMMO INITIALIZED'); initResolve() })
    }

    async init() {
        this.Ammo = await _assets_ammo__WEBPACK_IMPORTED_MODULE_0__()

        this.initPhysicsUniverse()
        this.initGravityController()



        
    }

    initGravityController() {

        let input = document.getElementById('gravityInput')
        let span = document.getElementById('gravityValue')
        if (input && span) {
           
            input.addEventListener('change', (e) => {
                let value = +input.value;
                if (Number.isFinite(value)) {
                    console.log(value);
                    this.physicsUniverse.setGravity(new this.Ammo.btVector3(0, -value, 0));
                    span.innerHTML = value+'m/s^2'
                }
            })
        } else {

            setTimeout(() => { this.initGravityController }, 200)
        }


    }

    initPhysicsUniverse() {
        this.tmpTransformation = new this.Ammo.btTransform();

        this.collisionConfiguration = new this.Ammo.btDefaultCollisionConfiguration();
        this.dispatcher = new this.Ammo.btCollisionDispatcher(this.collisionConfiguration);
        this.overlappingPairCache = new this.Ammo.btDbvtBroadphase();
        this.solver = new this.Ammo.btSequentialImpulseConstraintSolver();
        this.physicsUniverse = new this.Ammo.btDiscreteDynamicsWorld(this.dispatcher, this.overlappingPairCache, this.solver, this.collisionConfiguration);
        this.physicsUniverse.setGravity(new this.Ammo.btVector3(0, -1, 0));

        this.transformAux1 = new this.Ammo.btTransform();
        this.tempBtVec3_1 = new this.Ammo.btVector3(0, 0, 0);
        console.log({ physicsUniverse: this.physicsUniverse, collisionConfiguration: this.collisionConfiguration, dispatcher: this.dispatcher, overlappingPairCache: this.overlappingPairCache, solver: this.solver, tmpTransformation: this.tmpTransformation });
    }

    createCube({ scale, position, mass, quaternion, newcube }) {


        this.makeObjectBreakable(newcube, mass)






    }

    makeObjectBreakable(object, mass, velocity) {
        object.userData.mass = mass;
        object.userData.velocity = velocity

        this.convexBreaker.prepareBreakableObject(object, mass, new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(), new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(), true);

        this.createDebrisFromBreakableObject(object, velocity);
    }

    createDebrisFromBreakableObject(object, velocity) {

        const shape = this.createConvexHullPhysicsShape(object.geometry.attributes.position.array);
        // console.log(shape);
        shape.setMargin(this.margin);

        const body = this.createRigidBody(object, shape, object.userData.mass, null, null, velocity);

        // // Set pointer back to the three object only in the debris objects
        const btVecUserData = new this.Ammo.btVector3(0, 0, 0);
        btVecUserData.threeObject = object;
        body.setUserPointer(btVecUserData);

    }

    createConvexHullPhysicsShape(coords) {

        const shape = new this.Ammo.btConvexHullShape();

        for (let i = 0, il = coords.length; i < il; i += 3) {

            this.tempBtVec3_1.setValue(coords[i], coords[i + 1], coords[i + 2]);
            const lastOne = (i >= (il - 3));
            shape.addPoint(this.tempBtVec3_1, lastOne);

        }

        return shape;

    }

    createRigidBody(object, physicsShape, mass, pos, quat, vel, angVel) {
        // console.log({ object, physicsShape, mass, pos, quat, vel, angVel });


        if (pos) {

            object.position.copy(pos);

        } else {

            pos = object.position;

        }
        if (quat) {

            object.quaternion.copy(quat);

        } else {

            quat = object.quaternion;

        }

        const transform = new this.Ammo.btTransform();
        transform.setIdentity();

        transform.setOrigin(new this.Ammo.btVector3(pos.x, pos.y, pos.z));
        transform.setRotation(new this.Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));
        const motionState = new this.Ammo.btDefaultMotionState(transform);

        const localInertia = new this.Ammo.btVector3(0, 0, 0);
        physicsShape.calculateLocalInertia(mass, localInertia);

        const rbInfo = new this.Ammo.btRigidBodyConstructionInfo(mass, motionState, physicsShape, localInertia);
        const body = new this.Ammo.btRigidBody(rbInfo);

        body.setFriction(0.5);
        body.activate()
        if (vel) {

            console.log({ vel });
            body.setLinearVelocity(new this.Ammo.btVector3(vel.x, vel.y, vel.z));

        }

        if (angVel) {

            body.setAngularVelocity(new this.Ammo.btVector3(angVel.x, angVel.y, angVel.z));

        }
        // console.log({ body }, object.userData.physicsBody);
        object.userData.physicsBody = body;

        object.userData.collided = false;

        this.threeScene.add(object);

        if (mass > 0) {

            this.rigidBody_List.push(object);

            // Disable deactivation
            body.setActivationState(4);

        }

        this.physicsUniverse.addRigidBody(body);

        return body;

    }



    createBall({ radius, position, mass, quaternion, newball, velocity }) {

        this.makeObjectBreakable(newball, mass, velocity)
    }

    createJoin(body1, body2, pivot1, pivot2) {

        let pivotVector1 = new this.Ammo.btVector3(pivot1[0], pivot1[1], pivot1[2]);
        let pivotVector2 = new this.Ammo.btVector3(pivot2[0], pivot2[1], pivot2[2]);
        let p2p = new this.Ammo.btPoint2PointConstraint(body1, body2, pivotVector1, pivotVector2);
        this.physicsUniverse.addConstraint(p2p, false);
    }

    updatePhysicsUniverse(deltaTime, rigidBody_List) {
        this.physicsUniverse.stepSimulation(deltaTime, 10);

        // for (let i = 0; i < rigidBody_List.length; i++) {
        //     let Graphics_Obj = rigidBody_List[i];
        //     let Physics_Obj = Graphics_Obj.userData.physicsBody;

        //     let motionState = Physics_Obj.getMotionState();
        //     if (motionState) {
        //         motionState.getWorldTransform(this.tmpTransformation);
        //         let new_pos = this.tmpTransformation.getOrigin();
        //         let new_qua = this.tmpTransformation.getRotation();
        //         Graphics_Obj.position.set(new_pos.x(), new_pos.y(), new_pos.z());
        //         Graphics_Obj.quaternion.set(new_qua.x(), new_qua.y(), new_qua.z(), new_qua.w());
        //     }
        // }


        for (let i = 0, il = rigidBody_List.length; i < il; i++) {

            const objThree = rigidBody_List[i];
            const objPhys = objThree.userData.physicsBody;
            const ms = objPhys.getMotionState();

            if (ms) {

                ms.getWorldTransform(this.transformAux1);
                const p = this.transformAux1.getOrigin();
                const q = this.transformAux1.getRotation();
                objThree.position.set(p.x(), p.y(), p.z());
                objThree.quaternion.set(q.x(), q.y(), q.z(), q.w());

                objThree.userData.collided = false;

            }

        }


        for (let i = 0, il = this.dispatcher.getNumManifolds(); i < il; i++) {

            const contactManifold = this.dispatcher.getManifoldByIndexInternal(i);

            const rb0 = this.Ammo.castObject(contactManifold.getBody0(), this.Ammo.btRigidBody);
            const rb1 = this.Ammo.castObject(contactManifold.getBody1(), this.Ammo.btRigidBody);

            const threeObject0 = this.Ammo.castObject(rb0.getUserPointer(), this.Ammo.btVector3).threeObject;
            const threeObject1 = this.Ammo.castObject(rb1.getUserPointer(), this.Ammo.btVector3).threeObject;

            // console.log({ threeObject0, threeObject1 });
            if (!threeObject0 && !threeObject1) {

                continue;

            }

            const userData0 = threeObject0 ? threeObject0.userData : null;
            const userData1 = threeObject1 ? threeObject1.userData : null;
            // console.log({userData0, userData1});
            const breakable0 = userData0 ? userData0.breakable : false;
            const breakable1 = userData1 ? userData1.breakable : false;

            const collided0 = userData0 ? userData0.collided : false;
            const collided1 = userData1 ? userData1.collided : false;

            if ((!breakable0 && !breakable1) || (collided0 && collided1)) {

                continue;

            }

            let contact = false;
            let maxImpulse = 0;

            for (let j = 0, jl = contactManifold.getNumContacts(); j < jl; j++) {

                const contactPoint = contactManifold.getContactPoint(j);

                if (contactPoint.getDistance() < 0) {

                    contact = true;
                    const impulse = contactPoint.getAppliedImpulse();

                    if (impulse > maxImpulse) {

                        maxImpulse = impulse;
                        const pos = contactPoint.get_m_positionWorldOnB();
                        const normal = contactPoint.get_m_normalWorldOnB();
                        this.impactPoint.set(pos.x(), pos.y(), pos.z());
                        this.impactNormal.set(normal.x(), normal.y(), normal.z());

                    }

                    break;

                }

            }

            // If no point has contact, abort
            // console.log({ contact });
            if (!contact) continue;

            // Subdivision

            const fractureImpulse = 50;


            if (breakable0 && !collided0 && maxImpulse > fractureImpulse) {

                const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2, 1.5);

                const numObjects = debris.length;
                for (let j = 0; j < numObjects; j++) {

                    const vel = rb0.getLinearVelocity();
                    const angVel = rb0.getAngularVelocity();
                    const fragment = debris[j];
                    fragment.userData.velocity.set(vel.x(), vel.y(), vel.z());
                    fragment.userData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z());

                    this.createDebrisFromBreakableObject(fragment);

                }

                this.objectsToRemove[this.numObjectsToRemove++] = threeObject0;
                userData0.collided = true;

            }

            if (breakable1 && !collided1 && maxImpulse > fractureImpulse) {

                const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2, 1.5);

                const numObjects = debris.length;
                for (let j = 0; j < numObjects; j++) {

                    const vel = rb1.getLinearVelocity();
                    const angVel = rb1.getAngularVelocity();
                    const fragment = debris[j];
                    fragment.userData.velocity.set(vel.x(), vel.y(), vel.z());
                    fragment.userData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z());

                    this.createDebrisFromBreakableObject(fragment);

                }

                this.objectsToRemove[this.numObjectsToRemove++] = threeObject1;
                userData1.collided = true;

            }

        }

        for (let i = 0; i < this.numObjectsToRemove; i++) {

            this.removeDebris(this.objectsToRemove[i]);

        }

        this.numObjectsToRemove = 0;
    }


    removeDebris(object) {

        this.threeScene.remove(object);

        this.physicsUniverse.removeRigidBody(object.userData.physicsBody);

    }
}

/***/ }),

/***/ "./src/FPVControls.js":
/*!****************************!*\
  !*** ./src/FPVControls.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FPVControls)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _assets_JoyStick__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/JoyStick */ "./src/assets/JoyStick.js");
// import { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls'



class FPVControls {
    controls
    velocity = 0.05
    _target = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
    _lookDirection = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
    _spherical = new three__WEBPACK_IMPORTED_MODULE_1__.Spherical();
    lat = 0;
    lon = 0;
    state = {
        front: false,
        back: false,
        left: false,
        right: false,

    }
    JoyStickMove
    JoyStickLook
    joyStickLookCoords = { x: 0, y: 0 }
    rotateAt = { x: 0, y: 0 };


    constructor(camera) {

        this.rotation = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion();
        this.translation = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 1, 0);
        this.phi = 0;
        this.phiSpeed = 8;
        this.theta = 0;
        this.thetaSpeed_ = 5;

        this.camera = camera;
        // this.camera.lookAt = this.lookAt.bind(this)
        this.init()
        console.log({ camera });
    }

    init() {
        this.hideCursor()

        if (!this.mobileCheck()) {
            // alert('desktop'+ navigator.userAgent)
            document.addEventListener('keydown', (e) => { this.keydownHandler(e) })
            document.addEventListener('keyup', (e) => { this.keyupHandler(e) })





            document.addEventListener('mousemove', (e) => { this.mousemoveHandler(e) })


           
        } else {
            // alert('mobile' +navigator.userAgent)
            this.initJoysticks()
        }





        // setInterval(() => {this.camera.rotation.y += 0.1}, 10)
    }


    hideCursor() {
        document.addEventListener("click", () => {
            try{
                  document.body.requestPointerLock();
            }catch(e){
                console.log(e);
            }
          
        });

    }

    initJoysticks() {
        this.JoyStickMove = new _assets_JoyStick__WEBPACK_IMPORTED_MODULE_0__["default"]('joyDiv_move', {}, () => {
            let dir = this.JoyStickMove.GetDir()
            // N, NE, E, SE, S, SW, W, NW  C
            let dirArr = dir.split('')
            dirArr.forEach(i => {
                switch (i) {
                    case 'N':
                        this.state.back = false;
                        this.state.front = true;
                        break;
                    case 'S':
                        this.state.front = false;
                        this.state.back = true;
                        break;

                    case 'E':
                        this.state.left = false;
                        this.state.right = true;
                        break;
                    case 'W':
                        this.state.right = false;
                        this.state.left = true;
                        break;
                    case 'C':
                        this.state.right = false;
                        this.state.left = false;
                        this.state.back = false;
                        this.state.front = false;
                        break;
                }
            })

        })


        this.JoyStickLook = new _assets_JoyStick__WEBPACK_IMPORTED_MODULE_0__["default"]('joyDiv_look', {})
        setInterval(() => {

            let x = +this.JoyStickLook.GetX()
            let y = +this.JoyStickLook.GetY()
            // console.log(x, y)
            this.rotateAt.x += x / 25
            this.rotateAt.y += -y / 25
        })

    }

    mobileCheck() {
        let isMobile = false; //initiate as false
        // device detection
        if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
            || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) { 
            isMobile = true;
        }
        return isMobile

    }


    update(deltaTime) {




        if (this.state.front) {

            const idealOffset = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 0, -this.velocity * deltaTime);

            idealOffset.applyEuler(this.camera.rotation);

            idealOffset.add(this.camera.position);

            this.camera.position.copy(idealOffset);
        }
        if (this.state.back) {
            const idealOffset = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 0, this.velocity * deltaTime);

            idealOffset.applyEuler(this.camera.rotation);

            idealOffset.add(this.camera.position);

            this.camera.position.copy(idealOffset);
        }
        if (this.state.left) {
            const idealOffset = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(-this.velocity * deltaTime, 0, 0);

            idealOffset.applyEuler(this.camera.rotation);

            idealOffset.add(this.camera.position);

            this.camera.position.copy(idealOffset);
        }
        if (this.state.right) {
            const idealOffset = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(this.velocity * deltaTime, 0, 0);

            idealOffset.applyEuler(this.camera.rotation);

            idealOffset.add(this.camera.position);

            this.camera.position.copy(idealOffset);
        }


        const xh = this.rotateAt.x * 0.01
        const yh = this.rotateAt.y * 0.01

        this.phi += -xh
        this.theta = this.clamp(this.theta + -yh, -Math.PI / 2.2, Math.PI / 2.2);

        const qx = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion();
        qx.setFromAxisAngle(new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 1, 0), this.phi);
        const qz = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion();
        qz.setFromAxisAngle(new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(1, 0, 0), this.theta);

        const q = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion();
        q.multiply(qx);
        q.multiply(qz);

        this.rotation.copy(q);
        this.camera.quaternion.copy(this.rotation);





        this.rotateAt.x = 0;
        this.rotateAt.y = 0;

    }


    clamp(x, a, b) {
        return Math.min(Math.max(x, a), b);
    }

    keydownHandler(e) {

        switch (e.keyCode) {
            case 87:
                this.state.front = true;
                break;
            case 83:
                this.state.back = true;
                break;
            case 65: this.state.left = true;
                break;
            case 68: this.state.right = true;
                break;


        }

    }
    keyupHandler(e) {
        switch (e.keyCode) {
            case 87:
                this.state.front = false;
                break;
            case 83:
                this.state.back = false;
                break;
            case 65: this.state.left = false;
                break;
            case 68: this.state.right = false;
                break;


        }
    }
    mousemoveHandler(e) {

        this.rotateAt.x = e.movementX;
        this.rotateAt.y = e.movementY;
    }
}

/***/ }),

/***/ "./src/Three.js":
/*!**********************!*\
  !*** ./src/Three.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Three)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls */ "./node_modules/three/examples/jsm/controls/OrbitControls.js");
/* harmony import */ var _FPVControls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FPVControls */ "./src/FPVControls.js");


// import { ConvexObjectBreaker } from 'three/examples/jsm/misc/ConvexObjectBreaker';

class Three {
    scene;
    camera;
    renderer;
    clock;
    ambientLight;
    directionalLight;
    controls;
    FPVControls

    constructor(initResolve) {
        this.init();

        console.log('THREE INITIALIZED');
        initResolve()

    }

    init() {
        this.initGraphicsUniverse()
        this.initUiScene()


        window.addEventListener('resize', this.onWindowResize.bind(this), false);
    }


    onWindowResize() {
console.log(this.camera);
        this.camera.aspect = window.innerWidth / window.innerHeight;
        this.camera.updateProjectionMatrix();

        this.renderer.setSize(window.innerWidth, window.innerHeight);

    }


    fullScreen(element) {
        if (element.requestFullscreen) {
            element.requestFullscreen();
        } else if (element.webkitrequestFullscreen) {
            element.webkitRequestFullscreen();
        } else if (element.mozRequestFullscreen) {
            element.mozRequestFullScreen();
        }
    }
    initUiScene() {
        // let asp = window.innerWidth / window.innerHeight
        // this.uiScene = new THREE.Scene()
        // this.uiCamera= new THREE.OrthographicCamera(1,1,1*asp,-1*asp,1,1000)

        // let cross = (new THREE.TextureLoader()).load('./crosshair.png')
        // cross.anisotropy = 10000;
        // let sprite = new THREE.Sprite(new THREE.SpriteMaterial({map: cross, color: 0x000000}))
        // sprite.position.set(0,0,-10)
        // this.uiScene.add(sprite)
    }
    initGraphicsUniverse() {
        this.clock = new three__WEBPACK_IMPORTED_MODULE_2__.Clock();
        this.scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();

        this.camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);
        this.camera.position.set(-25, 20, -25);
        this.camera.lookAt(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 6, 0));

        this.renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({ antialias: true, alpha: true });
        this.renderer.setPixelRatio(window.devicePixelRatio);
        this.renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(this.renderer.domElement);

        this.ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xfff, 0.8);
        this.scene.add(this.ambientLight);
        this.directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 0.6);
        this.directionalLight.position.set(-1, 0.9, 0.4);
        this.scene.add(this.directionalLight);




        this.controls = new _FPVControls__WEBPACK_IMPORTED_MODULE_1__["default"](this.camera)


        //         var html = document.documentElement;s
        // this.fullScreen(html);

        // this.controls = this.FPVControls.createControls(this.camera, this.renderer.domElement);
        // this.controls = new OrbitControls(this.camera, this.renderer.domElement);
        // this.controls = new MapControls(this.camera, this.renderer.domElement);

    }



    createCube({ scale, position, quaternion, color }) {

        // ------ Graphics Universe - Three.JS ------
        let vectorScale = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(scale[0], scale[1], scale[2])
        let vectorPosition = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(position[0], position[1], position[2])

        let newcube = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(new three__WEBPACK_IMPORTED_MODULE_2__.BoxBufferGeometry(vectorScale.x, vectorScale.y, vectorScale.z), new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({ color: color }));
        newcube.position.copy(vectorPosition);
        newcube.quaternion.copy(quaternion);
        newcube.castShadow = false;
        this.scene.add(newcube);



        return newcube;
    }


    createBall({ radius, position, color }) {

        // ------ Graphics Universe - Three.JS ------

        let vectorPosition = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(position[0], position[1], position[2])
        let newball = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(new three__WEBPACK_IMPORTED_MODULE_2__.SphereBufferGeometry(radius), new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({ color: color }));
        newball.position.copy(vectorPosition);
        newball.castShadow = false;
        this.scene.add(newball);
        return newball;
    }


    render(deltaTime) {
        this.controls.update(deltaTime);
        this.renderer.render(this.scene, this.camera);
    }

}

/***/ }),

/***/ "./src/assets/JoyStick.js":
/*!********************************!*\
  !*** ./src/assets/JoyStick.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
let StickStatus =
{
    xPosition: 0,
    yPosition: 0,
    x: 0,
    y: 0,
    cardinalDirection: "C"
};

/**
 * @desc Principal object that draw a joystick, you only need to initialize the object and suggest the HTML container
 * @costructor
 * @param container {String} - HTML object that contains the Joystick
 * @param parameters (optional) - object with following keys:
 *  title {String} (optional) - The ID of canvas (Default value is 'joystick')
 *  width {Int} (optional) - The width of canvas, if not specified is setted at width of container object (Default value is the width of container object)
 *  height {Int} (optional) - The height of canvas, if not specified is setted at height of container object (Default value is the height of container object)
 *  internalFillColor {String} (optional) - Internal color of Stick (Default value is '#00AA00')
 *  internalLineWidth {Int} (optional) - Border width of Stick (Default value is 2)
 *  internalStrokeColor {String}(optional) - Border color of Stick (Default value is '#003300')
 *  externalLineWidth {Int} (optional) - External reference circonference width (Default value is 2)
 *  externalStrokeColor {String} (optional) - External reference circonference color (Default value is '#008000')
 *  autoReturnToCenter {Bool} (optional) - Sets the behavior of the stick, whether or not, it should return to zero position when released (Default value is True and return to zero)
 * @param callback {StickStatus} - 
 */
var JoyStick = (function(container, parameters, callback)
{
    parameters = parameters || {};
    var title = (typeof parameters.title === "undefined" ? "joystick" : parameters.title),
        width = (typeof parameters.width === "undefined" ? 0 : parameters.width),
        height = (typeof parameters.height === "undefined" ? 0 : parameters.height),
        internalFillColor = (typeof parameters.internalFillColor === "undefined" ? "#00AA00" : parameters.internalFillColor),
        internalLineWidth = (typeof parameters.internalLineWidth === "undefined" ? 2 : parameters.internalLineWidth),
        internalStrokeColor = (typeof parameters.internalStrokeColor === "undefined" ? "#003300" : parameters.internalStrokeColor),
        externalLineWidth = (typeof parameters.externalLineWidth === "undefined" ? 2 : parameters.externalLineWidth),
        externalStrokeColor = (typeof parameters.externalStrokeColor ===  "undefined" ? "#008000" : parameters.externalStrokeColor),
        autoReturnToCenter = (typeof parameters.autoReturnToCenter === "undefined" ? true : parameters.autoReturnToCenter);

    callback = callback || function(StickStatus) {};

    // Create Canvas element and add it in the Container object
    var objContainer = document.getElementById(container);
    
    // Fixing Unable to preventDefault inside passive event listener due to target being treated as passive in Chrome [Thanks to https://github.com/artisticfox8 for this suggestion]
    objContainer.style.touchAction = "none";

    var canvas = document.createElement("canvas");
    canvas.id = title;
    if(width === 0) { width = objContainer.clientWidth; }
    if(height === 0) { height = objContainer.clientHeight; }
    canvas.width = width;
    canvas.height = height;
    objContainer.appendChild(canvas);
    var context=canvas.getContext("2d");

    var pressed = 0; // Bool - 1=Yes - 0=No
    var circumference = 2 * Math.PI;
    var internalRadius = (canvas.width-((canvas.width/2)+10))/2;
    var maxMoveStick = internalRadius + 5;
    var externalRadius = internalRadius + 30;
    var centerX = canvas.width / 2;
    var centerY = canvas.height / 2;
    var directionHorizontalLimitPos = canvas.width / 10;
    var directionHorizontalLimitNeg = directionHorizontalLimitPos * -1;
    var directionVerticalLimitPos = canvas.height / 10;
    var directionVerticalLimitNeg = directionVerticalLimitPos * -1;
    // Used to save current position of stick
    var movedX=centerX;
    var movedY=centerY;

    // Check if the device support the touch or not
    if("ontouchstart" in document.documentElement)
    {
        canvas.addEventListener("touchstart", onTouchStart, false);
        document.addEventListener("touchmove", onTouchMove, false);
        document.addEventListener("touchend", onTouchEnd, false);
    }
    else
    {
        canvas.addEventListener("mousedown", onMouseDown, false);
        document.addEventListener("mousemove", onMouseMove, false);
        document.addEventListener("mouseup", onMouseUp, false);
    }
    // Draw the object
    drawExternal();
    drawInternal();

    /******************************************************
     * Private methods
     *****************************************************/

    /**
     * @desc Draw the external circle used as reference position
     */
    function drawExternal()
    {
        context.beginPath();
        context.arc(centerX, centerY, externalRadius, 0, circumference, false);
        context.lineWidth = externalLineWidth;
        context.strokeStyle = externalStrokeColor;
        context.stroke();
    }

    /**
     * @desc Draw the internal stick in the current position the user have moved it
     */
    function drawInternal()
    {
        context.beginPath();
        if(movedX<internalRadius) { movedX=maxMoveStick; }
        if((movedX+internalRadius) > canvas.width) { movedX = canvas.width-(maxMoveStick); }
        if(movedY<internalRadius) { movedY=maxMoveStick; }
        if((movedY+internalRadius) > canvas.height) { movedY = canvas.height-(maxMoveStick); }
        context.arc(movedX, movedY, internalRadius, 0, circumference, false);
        // create radial gradient
        var grd = context.createRadialGradient(centerX, centerY, 5, centerX, centerY, 200);
        // Light color
        grd.addColorStop(0, internalFillColor);
        // Dark color
        grd.addColorStop(1, internalStrokeColor);
        context.fillStyle = grd;
        context.fill();
        context.lineWidth = internalLineWidth;
        context.strokeStyle = internalStrokeColor;
        context.stroke();
    }

    /**
     * @desc Events for manage touch
     */
    function onTouchStart(event) 
    {
        pressed = 1;
    }

    function onTouchMove(event)
    {
        if(pressed === 1 && event.targetTouches[0].target === canvas)
        {
            movedX = event.targetTouches[0].pageX;
            movedY = event.targetTouches[0].pageY;
            // Manage offset
            if(canvas.offsetParent.tagName.toUpperCase() === "BODY")
            {
                movedX -= canvas.offsetLeft;
                movedY -= canvas.offsetTop;
            }
            else
            {
                movedX -= canvas.offsetParent.offsetLeft;
                movedY -= canvas.offsetParent.offsetTop;
            }
            // Delete canvas
            context.clearRect(0, 0, canvas.width, canvas.height);
            // Redraw object
            drawExternal();
            drawInternal();

            // Set attribute of callback
            StickStatus.xPosition = movedX;
            StickStatus.yPosition = movedY;
            StickStatus.x = (100*((movedX - centerX)/maxMoveStick)).toFixed();
            StickStatus.y = ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();
            StickStatus.cardinalDirection = getCardinalDirection();
            callback(StickStatus);
        }
    } 

    function onTouchEnd(event) 
    {
        pressed = 0;
        // If required reset position store variable
        if(autoReturnToCenter)
        {
            movedX = centerX;
            movedY = centerY;
        }
        // Delete canvas
        context.clearRect(0, 0, canvas.width, canvas.height);
        // Redraw object
        drawExternal();
        drawInternal();

        // Set attribute of callback
        StickStatus.xPosition = movedX;
        StickStatus.yPosition = movedY;
        StickStatus.x = (100*((movedX - centerX)/maxMoveStick)).toFixed();
        StickStatus.y = ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();
        StickStatus.cardinalDirection = getCardinalDirection();
        callback(StickStatus);
    }

    /**
     * @desc Events for manage mouse
     */
    function onMouseDown(event) 
    {
        pressed = 1;
    }

    /* To simplify this code there was a new experimental feature here: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX , but it present only in Mouse case not metod presents in Touch case :-( */
    function onMouseMove(event) 
    {
        if(pressed === 1)
        {
            movedX = event.pageX;
            movedY = event.pageY;
            // Manage offset
            if(canvas.offsetParent.tagName.toUpperCase() === "BODY")
            {
                movedX -= canvas.offsetLeft;
                movedY -= canvas.offsetTop;
            }
            else
            {
                movedX -= canvas.offsetParent.offsetLeft;
                movedY -= canvas.offsetParent.offsetTop;
            }
            // Delete canvas
            context.clearRect(0, 0, canvas.width, canvas.height);
            // Redraw object
            drawExternal();
            drawInternal();

            // Set attribute of callback
            StickStatus.xPosition = movedX;
            StickStatus.yPosition = movedY;
            StickStatus.x = (100*((movedX - centerX)/maxMoveStick)).toFixed();
            StickStatus.y = ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();
            StickStatus.cardinalDirection = getCardinalDirection();
            callback(StickStatus);
        }
    }

    function onMouseUp(event) 
    {
        pressed = 0;
        // If required reset position store variable
        if(autoReturnToCenter)
        {
            movedX = centerX;
            movedY = centerY;
        }
        // Delete canvas
        context.clearRect(0, 0, canvas.width, canvas.height);
        // Redraw object
        drawExternal();
        drawInternal();

        // Set attribute of callback
        StickStatus.xPosition = movedX;
        StickStatus.yPosition = movedY;
        StickStatus.x = (100*((movedX - centerX)/maxMoveStick)).toFixed();
        StickStatus.y = ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();
        StickStatus.cardinalDirection = getCardinalDirection();
        callback(StickStatus);
    }

    function getCardinalDirection()
    {
        let result = "";
        let orizontal = movedX - centerX;
        let vertical = movedY - centerY;
        
        if(vertical >= directionVerticalLimitNeg && vertical <= directionVerticalLimitPos)
        {
            result = "C";
        }
        if(vertical < directionVerticalLimitNeg)
        {
            result = "N";
        }
        if(vertical > directionVerticalLimitPos)
        {
            result = "S";
        }
        
        if(orizontal < directionHorizontalLimitNeg)
        {
            if(result === "C")
            { 
                result = "W";
            }
            else
            {
                result += "W";
            }
        }
        if(orizontal > directionHorizontalLimitPos)
        {
            if(result === "C")
            { 
                result = "E";
            }
            else
            {
                result += "E";
            }
        }
        
        return result;
    }

    /******************************************************
     * Public methods
     *****************************************************/

    /**
     * @desc The width of canvas
     * @return Number of pixel width 
     */
    this.GetWidth = function () 
    {
        return canvas.width;
    };

    /**
     * @desc The height of canvas
     * @return Number of pixel height
     */
    this.GetHeight = function () 
    {
        return canvas.height;
    };

    /**
     * @desc The X position of the cursor relative to the canvas that contains it and to its dimensions
     * @return Number that indicate relative position
     */
    this.GetPosX = function ()
    {
        return movedX;
    };

    /**
     * @desc The Y position of the cursor relative to the canvas that contains it and to its dimensions
     * @return Number that indicate relative position
     */
    this.GetPosY = function ()
    {
        return movedY;
    };

    /**
     * @desc Normalizzed value of X move of stick
     * @return Integer from -100 to +100
     */
    this.GetX = function ()
    {
        return (100*((movedX - centerX)/maxMoveStick)).toFixed();
    };

    /**
     * @desc Normalizzed value of Y move of stick
     * @return Integer from -100 to +100
     */
    this.GetY = function ()
    {
        return ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();
    };

    /**
     * @desc Get the direction of the cursor as a string that indicates the cardinal points where this is oriented
     * @return String of cardinal point N, NE, E, SE, S, SW, W, NW and C when it is placed in the center
     */
    this.GetDir = function()
    {
        return getCardinalDirection();
    };
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JoyStick);

/***/ }),

/***/ "./src/assets/ammo.js":
/*!****************************!*\
  !*** ./src/assets/ammo.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var __filename = "/index.js";
var __dirname = "/";
// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.

var Ammo = (() => {
    var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
    if (true) _scriptDir = _scriptDir || __filename;
    return (
  function(Ammo) {
    Ammo = Ammo || {};
  
  
  function aa(a,c){return Object.prototype.hasOwnProperty.call(a,c)}var ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,d){if(a==Array.prototype||a==Object.prototype)return a;a[c]=d.value;return a};function da(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof __webpack_require__.g&&__webpack_require__.g];for(var c=0;c<a.length;++c){var d=a[c];if(d&&d.Math==Math)return d}throw Error("Cannot find global object");}var ea=da(this);
  function fa(a,c){if(c)a:{var d=ea;a=a.split(".");for(var e=0;e<a.length-1;e++){var f=a[e];if(!(f in d))break a;d=d[f]}a=a[a.length-1];e=d[a];c=c(e);c!=e&&null!=c&&ba(d,a,{configurable:!0,writable:!0,value:c})}}var ha="function"==typeof Object.assign?Object.assign:function(a,c){for(var d=1;d<arguments.length;d++){var e=arguments[d];if(e)for(var f in e)aa(e,f)&&(a[f]=e[f])}return a};fa("Object.assign",function(a){return a||ha});
  function ia(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}}
  fa("WeakMap",function(a){function c(E){this.zB=(W+=Math.random()+1).toString();if(E){var p="undefined"!=typeof Symbol&&Symbol.iterator&&E[Symbol.iterator];for(E=p?p.call(E):{next:ia(E)};!(p=E.next()).done;)p=p.value,this.set(p[0],p[1])}}function d(){}function e(E){var p=typeof E;return"object"===p&&null!==E||"function"===p}function f(E){if(!aa(E,y)){var p=new d;ba(E,y,{value:p})}}function m(E){var p=Object[E];p&&(Object[E]=function(G){if(G instanceof d)return G;Object.isExtensible(G)&&f(G);return p(G)})}
  if(function(){if(!a||!Object.seal)return!1;try{var E=Object.seal({}),p=Object.seal({}),G=new a([[E,2],[p,3]]);if(2!=G.get(E)||3!=G.get(p))return!1;G.delete(E);G.set(p,4);return!G.has(E)&&4==G.get(p)}catch(ca){return!1}}())return a;var y="$jscomp_hidden_"+Math.random();m("freeze");m("preventExtensions");m("seal");var W=0;c.prototype.set=function(E,p){if(!e(E))throw Error("Invalid WeakMap key");f(E);if(!aa(E,y))throw Error("WeakMap key fail: "+E);E[y][this.zB]=p;return this};c.prototype.get=function(E){return e(E)&&
  aa(E,y)?E[y][this.zB]:void 0};c.prototype.has=function(E){return e(E)&&aa(E,y)&&aa(E[y],this.zB)};c.prototype.delete=function(E){return e(E)&&aa(E,y)&&aa(E[y],this.zB)?delete E[y][this.zB]:!1};return c});
  fa("String.prototype.startsWith",function(a){return a?a:function(c,d){if(null==this)throw new TypeError("The 'this' value for String.prototype.startsWith must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype.startsWith must not be a regular expression");var e=this+"";c+="";var f=e.length,m=c.length;d=Math.max(0,Math.min(d|0,e.length));for(var y=0;y<m&&d<f;)if(e[d++]!=c[y++])return!1;return y>=m}});var b;b||(b=typeof Ammo !== 'undefined' ? Ammo : {});
  var Promise=function(){function a(){}function c(p,G){return function(){p.apply(G,arguments)}}function d(p){if(!(this instanceof d))throw new TypeError("Promises must be constructed via new");if("function"!=typeof p)throw new TypeError("not a function");this.nB=0;this.bC=!1;this.oB=void 0;this.rB=[];E(p,this)}function e(p,G){for(;3===p.nB;)p=p.oB;0===p.nB?p.rB.push(G):(p.bC=!0,d.cC(function(){var ca=1===p.nB?G.WE:G.XE;if(null===ca)(1===p.nB?f:m)(G.promise,p.oB);else{try{var Ha=ca(p.oB)}catch(Eb){m(G.promise,
  Eb);return}f(G.promise,Ha)}}))}function f(p,G){try{if(G===p)throw new TypeError("A promise cannot be resolved with itself.");if(G&&("object"==typeof G||"function"==typeof G)){var ca=G.then;if(G instanceof d){p.nB=3;p.oB=G;y(p);return}if("function"==typeof ca){E(c(ca,G),p);return}}p.nB=1;p.oB=G;y(p)}catch(Ha){m(p,Ha)}}function m(p,G){p.nB=2;p.oB=G;y(p)}function y(p){2===p.nB&&0===p.rB.length&&d.cC(function(){p.bC||d.dC(p.oB)});for(var G=0,ca=p.rB.length;G<ca;G++)e(p,p.rB[G]);p.rB=null}function W(p,
  G,ca){this.WE="function"==typeof p?p:null;this.XE="function"==typeof G?G:null;this.promise=ca}function E(p,G){var ca=!1;try{p(function(Ha){ca||(ca=!0,f(G,Ha))},function(Ha){ca||(ca=!0,m(G,Ha))})}catch(Ha){ca||(ca=!0,m(G,Ha))}}d.prototype["catch"]=function(p){return this.then(null,p)};d.prototype.then=function(p,G){var ca=new this.constructor(a);e(this,new W(p,G,ca));return ca};d.all=function(p){return new d(function(G,ca){function Ha(Wc,fc){try{if(fc&&("object"==typeof fc||"function"==typeof fc)){var Xc=
  fc.then;if("function"==typeof Xc){Xc.call(fc,function(Ec){Ha(Wc,Ec)},ca);return}}Eb[Wc]=fc;0===--TF&&G(Eb)}catch(Ec){ca(Ec)}}if(!Array.isArray(p))return ca(new TypeError("Promise.all accepts an array"));var Eb=Array.prototype.slice.call(p);if(0===Eb.length)return G([]);for(var TF=Eb.length,rc=0;rc<Eb.length;rc++)Ha(rc,Eb[rc])})};d.resolve=function(p){return p&&"object"==typeof p&&p.constructor==d?p:new d(function(G){G(p)})};d.reject=function(p){return new d(function(G,ca){ca(p)})};d.race=function(p){return new d(function(G,
  ca){if(!Array.isArray(p))return ca(new TypeError("Promise.race accepts an array"));for(var Ha=0,Eb=p.length;Ha<Eb;Ha++)d.resolve(p[Ha]).then(G,ca)})};d.cC="function"==typeof setImmediate&&function(p){setImmediate(p)}||function(p){setTimeout(p,0)};d.dC=function(p){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",p)};return d}();
  "undefined"==typeof Object.assign&&(Object.assign=function(a,c){for(var d=1;d<arguments.length;d++)if(c=arguments[d])for(var e in c)c.hasOwnProperty(e)&&(a[e]=c[e]);return a});var ja,ka;b.ready=new Promise(function(a,c){ja=a;ka=c});var la=Object.assign({},b),ma="object"==typeof window,na="function"==typeof importScripts,oa="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,pa="",qa,ra,sa,fs,ta,ua;
  if(oa)pa=na?(__webpack_require__(/*! path */ "?3419").dirname)(pa)+"/":__dirname+"/",ua=function(){ta||(fs=__webpack_require__(/*! fs */ "?6793"),ta=__webpack_require__(/*! path */ "?3419"))},qa=function(a,c){var d=va(a);if(d)return c?d:d.toString();ua();a=ta.normalize(a);return fs.readFileSync(a,c?void 0:"utf8")},sa=function(a){a=qa(a,!0);a.buffer||(a=new Uint8Array(a));return a},ra=function(a,c,d){var e=va(a);e&&c(e);ua();a=ta.normalize(a);fs.readFile(a,function(f,m){f?d(f):c(m.buffer)})},1<process.argv.length&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",
  function(a){throw a;}),process.on("unhandledRejection",function(a){throw a;}),b.inspect=function(){return"[Emscripten Module object]"};else if(ma||na)na?pa=self.location.href:"undefined"!=typeof document&&document.currentScript&&(pa=document.currentScript.src),_scriptDir&&(pa=_scriptDir),pa=0!==pa.indexOf("blob:")?pa.substr(0,pa.replace(/[?#].*/,"").lastIndexOf("/")+1):"",qa=function(a){try{var c=new XMLHttpRequest;c.open("GET",a,!1);c.send(null);return c.responseText}catch(f){if(a=va(a)){c=[];for(var d=
  0;d<a.length;d++){var e=a[d];255<e&&(wa&&xa("Character code "+e+" ("+String.fromCharCode(e)+")  at offset "+d+" not in 0x00-0xFF."),e&=255);c.push(String.fromCharCode(e))}return c.join("")}throw f;}},na&&(sa=function(a){try{var c=new XMLHttpRequest;c.open("GET",a,!1);c.responseType="arraybuffer";c.send(null);return new Uint8Array(c.response)}catch(d){if(a=va(a))return a;throw d;}}),ra=function(a,c,d){var e=new XMLHttpRequest;e.open("GET",a,!0);e.responseType="arraybuffer";e.onload=function(){if(200==
  e.status||0==e.status&&e.response)c(e.response);else{var f=va(a);f?c(f.buffer):d()}};e.onerror=d;e.send(null)};b.print||console.log.bind(console);var ya=b.printErr||console.warn.bind(console);Object.assign(b,la);la=null;var za=[],Aa,Ba;b.wasmBinary&&(Ba=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!0;function Ca(){this.buffer=new ArrayBuffer(Da/65536*65536)}function Ea(){this.exports=(
  // EMSCRIPTEN_START_ASM
  function instantiate(ma){function e(f){f.grow=function(b){var a=this.length;this.length=this.length+b;return a};f.set=function(c,d){this[c]=d};f.get=function(c){return this[c]};return f}var g;var h=new Uint8Array(123);for(var c=25;c>=0;--c){h[48+c]=52+c;h[65+c]=c;h[97+c]=26+c}h[43]=62;h[47]=63;function n(o,p,q){var i,j,c=0,k=p,l=q.length,m=p+(l*3>>2)-(q[l-2]=="=")-(q[l-1]=="=");for(;c<l;c+=4){i=h[q.charCodeAt(c+1)];j=h[q.charCodeAt(c+2)];o[k++]=h[q.charCodeAt(c)]<<2|i>>4;if(k<m)o[k++]=i<<4|j>>2;if(k<m)o[k++]=j<<6|h[q.charCodeAt(c+3)]}}function r(s){n(g,1028,"");n(g,11990,"gD8AAIC/");n(g,12022,"");n(g,21012,"AQAAAAIAAAAAAAAAAQAAAAMAAAABAAAAAgAAAAMAAAAAAAAAAgAAAAMAAABOMTBidFNvZnRCb2R5NUpvaW50RQAAAAD4aAAAQFIAAAAAAACYUgAAsgMAALMDAAC0AwAAtQMAALYDAAC3AwAATjEwYnRTb2Z0Qm9keTZDSm9pbnRFAAAAIGkAAIBSAABYUgAAMTBidFNvZnRCb2R5AAAAACBpAACkUgAALBoAAE4xMGJ0U29mdEJvZHkxNVJheUZyb21Ub0Nhc3RlckUAIGkAAMBSAADIFgAAAAAAAFRTAAD6AQAAuAMAALkDAAA5AAAAOgAAADsAAAC6AwAAuwMAALwDAAC9AwAAQAAAAM4BAABxAAAAcgAAAHMAAABFAAAAvgMAADI0YnRTb2Z0Qm9keUNvbGxpc2lvblNoYXBlAAAgaQAAOFMAAGQ0AAAAAAAAqFMAAMIAAAC/AwAAygAAAMADAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxM0NvbGxpZGVTREZfUlNFAAAgaQAAhFMAAMgWAAAAAAAAKFQAAMIAAADBAwAAygAAAMIDAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVDTF9SU0UATjE1YnRTb2Z0Q29sbGlkZXJzMTFDbHVzdGVyQmFzZUUAACBpAAD6UwAAyBYAACBpAADYUwAAHFQAAAAAAAC8VAAA3QEAAMMDAADEAwAAOQAAADoAAAA7AAAAPAAAAD0AAADFAwAAxgMAAEAAAADHAwAAyAMAAEMAAABEAAAARQAAAMkDAADKAwAASAAAAMsDAABKAAAAYQAAAGIAAADMAwAAMjdidFNvZnRDbHVzdGVyQ29sbGlzaW9uU2hhcGUAAAAgaQAAnFQAAHg3AAAAAAAAEFUAAMIAAADNAwAAzgMAAGQBAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVDTF9TU0UAAAAgaQAA7FQAABxUAAAAAAAAZFUAAMIAAADPAwAA0AMAAGQBAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVWRl9TU0UAAAAgaQAAQFUAAMgWAADRAwAA0gMAANMDAADUAwAAAAAAANhVAADVAwAA1gMAANcDAADYAwAA2QMAAAAAAAAEVgAA2gMAANsDAADcAwAAMzVidFNvZnRCb2R5Q29uY2F2ZUNvbGxpc2lvbkFsZ29yaXRobQAAACBpAACwVQAAGCIAADI2YnRTb2Z0Qm9keVRyaWFuZ2xlQ2FsbGJhY2sAAAAAIGkAAORVAAC4QAAAAAAAAMRWAAAQAQAA3QMAAN4DAABaTjM1YnRTb2Z0Qm9keUNvbmNhdmVDb2xsaXNpb25BbGdvcml0aG0yMWNhbGN1bGF0ZVRpbWVPZkltcGFjdEVQMTdidENvbGxpc2lvbk9iamVjdFMxX1JLMTZidERpc3BhdGNoZXJJbmZvUDE2YnRNYW5pZm9sZFJlc3VsdEUzMUxvY2FsVHJpYW5nbGVTcGhlcmVDYXN0Q2FsbGJhY2sAIGkAACRWAAC4QAAAAAAAABxXAADfAwAA4AMAAHQBAAB1AQAA4QMAAHcBAAA0MWJ0U29mdEJvZHlSaWdpZEJvZHlDb2xsaXNpb25Db25maWd1cmF0aW9uACBpAADwVgAAfCgAAAAAAABsVwAAeAEAAOIDAADjAwAATjI4YnRTb2Z0U29mdENvbGxpc2lvbkFsZ29yaXRobTEwQ3JlYXRlRnVuY0UAAAAAIGkAADxXAADwKAAAAAAAALxXAAB4AQAA5AMAAOUDAABOMjlidFNvZnRSaWdpZENvbGxpc2lvbkFsZ29yaXRobTEwQ3JlYXRlRnVuY0UAAAAgaQAAjFcAAPAoAAAAAAAAEFgAAHgBAADmAwAA5wMAAE4zNWJ0U29mdEJvZHlDb25jYXZlQ29sbGlzaW9uQWxnb3JpdGhtMTBDcmVhdGVGdW5jRQAgaQAA3FcAAPAoAAAAAAAAbFgAAHgBAADoAwAA6QMAAE4zNWJ0U29mdEJvZHlDb25jYXZlQ29sbGlzaW9uQWxnb3JpdGhtMTdTd2FwcGVkQ3JlYXRlRnVuY0UAACBpAAAwWAAA8CgAAAAAAAC0WAAA6gMAAOsDAADsAwAA7QMAAO4DAAAyOWJ0U29mdFJpZ2lkQ29sbGlzaW9uQWxnb3JpdGhtACBpAACUWAAAGCIAAAAAAACYWQAA7wMAAPADAAAAAQAAAQEAAAIBAAADAQAA8QMAAAUBAADyAwAAcAMAAPMDAAAJAQAA9AMAAHMDAAB0AwAAdQMAAHYDAAB3AwAAeAMAAHkDAAB6AwAAewMAAHwDAAB9AwAAfgMAAH8DAACAAwAAgQMAAIIDAAD1AwAAhAMAAIUDAACGAwAAhwMAAIgDAAD2AwAAigMAAIsDAACMAwAAjQMAAPcDAACPAwAAkAMAAJEDAACSAwAAMjRidFNvZnRSaWdpZER5bmFtaWNzV29ybGQAACBpAAB8WQAAMFAAAAAAAADUWQAAIwEAAPgDAAD5AwAAMjNidFNvZnRTaW5nbGVSYXlDYWxsYmFjawAAACBpAAC4WQAAeCAAAAAAAAAcWgAA+gMAAPsDAAD8AwAA/QMAAP4DAAAyOGJ0U29mdFNvZnRDb2xsaXNpb25BbGdvcml0aG0AACBpAAD8WQAAGCIAAAAAAACoWgAA/wMAAAAEAAABBAAAAgQAAAMEAAAEBAAABQQAAAYEAAAHBAAACAQAAAkEAAAKBAAACwQAAAwEAAANBAAADgQAADIzYnREZWZhdWx0U29mdEJvZHlTb2x2ZXIAMTZidFNvZnRCb2R5U29sdmVyAAAAAPhoAACKWgAAIGkAAHBaAACgWgAAF7fROBAAAADbD0k/2w9Jv+TLFkDkyxbAAAAAAAAAAIDbD0lA2w9JwAAAAAA4Y+0+2g9JP16Yez/aD8k/aTesMWghIjO0DxQzaCGiMwMAAAAEAAAABAAAAAYAAACD+aIARE5uAPwpFQDRVycA3TT1AGLbwAA8mZUAQZBDAGNR/gC73qsAt2HFADpuJADSTUIASQbgAAnqLgAcktEA6x3+ACmxHADoPqcA9TWCAES7LgCc6YQAtCZwAEF+XwDWkTkAU4M5AJz0OQCLX4QAKPm9APgfOwDe/5cAD5gFABEv7wAKWosAbR9tAM9+NgAJyycARk+3AJ5mPwAt6l8Auid1AOXrxwA9e/EA9zkHAJJSigD7a+oAH7FfAAhdjQAwA1YAe/xGAPCrawAgvM8ANvSaAOOpHQBeYZEACBvmAIWZZQCgFF8AjUBoAIDY/wAnc00ABgYxAMpWFQDJqHMAe+JgAGuMwAAZxEcAzWfDAAno3ABZgyoAi3bEAKYclgBEr90AGVfRAKU+BQAFB/8AM34/AMIy6ACYT94Au30yACY9wwAea+8An/heADUfOgB/8soA8YcdAHyQIQBqJHwA1W76ADAtdwAVO0MAtRTGAMMZnQCtxMIALE1BAAwAXQCGfUYA43EtAJvGmgAzYgAAtNJ8ALSnlwA3VdUA1z72AKMQGABNdvwAZJ0qAHDXqwBjfPgAerBXABcV5wDASVYAO9bZAKeEOAAkI8sA1op3AFpUIwAAH7kA8QobABnO3wCfMf8AZh5qAJlXYQCs+0cAfn/YACJltwAy6IkA5r9gAO/EzQBsNgkAXT/UABbe1wBYO94A3puSANIiKAAohugA4lhNAMbKMgAI4xYA4H3LABfAUADzHacAGOBbAC4TNACDEmIAg0gBAPWOWwCtsH8AHunyAEhKQwAQZ9MAqt3YAK5fQgBqYc4ACiikANOZtAAGpvIAXHd/AKPCgwBhPIgAinN4AK+MWgBv170ALaZjAPS/ywCNge8AJsFnAFXKRQDK2TYAKKjSAMJhjQASyXcABCYUABJGmwDEWcQAyMVEAE2ykQAAF/MA1EOtAClJ5QD91RAAAL78AB6UzABwzu4AEz71AOzxgACz58MAx/goAJMFlADBcT4ALgmzAAtF8wCIEpwAqyB7AC61nwBHksIAezIvAAxVbQByp5AAa+cfADHLlgB5FkoAQXniAPTfiQDolJcA4uaEAJkxlwCI7WsAX182ALv9DgBImrQAZ6RsAHFyQgCNXTIAnxW4ALzlCQCNMSUA93Q5ADAFHAANDAEASwhoACzuWABHqpAAdOcCAL3WJAD3faYAbkhyAJ8W7wCOlKYAtJH2ANFTUQDPCvIAIJgzAPVLfgCyY2gA3T5fAEBdAwCFiX8AVVIpADdkwABt2BAAMkgyAFtMdQBOcdQARVRuAAsJwQAq9WkAFGbVACcHnQBdBFAAtDvbAOp2xQCH+RcASWt9AB0nugCWaSkAxsysAK0UVACQ4moAiNmJACxyUAAEpL4AdweUAPMwcAAA/CcA6nGoAGbCSQBk4D0Al92DAKM/lwBDlP0ADYaMADFB3gCSOZ0A3XCMABe35wAI3zsAFTcrAFyAoABagJMAEBGSAA/o2ABsgK8A2/9LADiQDwBZGHYAYqUVAGHLuwDHibkAEEC9ANLyBABJdScA67b2ANsiuwAKFKoAiSYvAGSDdgAJOzMADpQaAFE6qgAdo8IAr+2uAFwmEgBtwk0ALXqcAMBWlwADP4MACfD2ACtAjABtMZkAObQHAAwgFQDYw1sA9ZLEAMatSwBOyqUApzfNAOapNgCrkpQA3UJoABlj3gB2jO8AaItSAPzbNwCuoasA3xUxAACuoQAM+9oAZE1mAO0FtwApZTAAV1a/AEf/OgBq+bkAdb7zACiT3wCrgDAAZoz2AATLFQD6IgYA2eQdAD2zpABXG48ANs0JAE5C6QATvqQAMyO1APCqGgBPZagA0sGlAAs/DwBbeM0AI/l2AHuLBACJF3IAxqZTAG9u4gDv6wAAm0pYAMTatwCqZroAds/PANECHQCx8S0AjJnBAMOtdwCGSNoA912gAMaA9ACs8C8A3eyaAD9cvADQ3m0AkMcfACrbtgCjJToAAK+aAK1TkwC2VwQAKS20AEuAfgDaB6cAdqoOAHtZoQAWEioA3LctAPrl/QCJ2/4Aib79AOR2bAAGqfwAPoBwAIVuFQD9h/8AKD4HAGFnMwAqGIYATb3qALPnrwCPbW4AlWc5ADG/WwCE10gAMN8WAMctQwAlYTUAyXDOADDLuAC/bP0ApACiAAVs5ABa3aAAIW9HAGIS0gC5XIQAcGFJAGtW4ACZUgEAUFU3AB7VtwAz8cQAE25fAF0w5ACFLqkAHbLDAKEyNgAIt6QA6rHUABb3IQCPaeQAJ/93AAwDgACNQC0AT82gACClmQCzotMAL10KALT5QgAR2ssAfb7QAJvbwQCrF70AyqKBAAhqXAAuVRcAJwBVAH8U8ADhB4YAFAtkAJZBjQCHvt4A2v0qAGsltgB7iTQABfP+ALm/ngBoak8ASiqoAE/EWgAt+LwA11qYAPTHlQANTY0AIDqmAKRXXwAUP7EAgDiVAMwgAQBx3YYAyd62AL9g9QBNZREAAQdrAIywrACywNAAUVVIAB77DgCVcsMAowY7AMBANQAG3HsA4EXMAE4p+gDWysgA6PNBAHxk3gCbZNgA2b4xAKSXwwB3WNQAaePFAPDaEwC6OjwARhhGAFV1XwDSvfUAbpLGAKwuXQAORO0AHD5CAGHEhwAp/ekA59bzACJ8ygBvkTUACODFAP/XjQBuauIAsP3GAJMIwQB8XXQAa62yAM1unQA+cnsAxhFqAPfPqQApc98Atcm6ALcAUQDisg0AdLokAOV9YAB02IoADRUsAIEYDAB+ZpQAASkWAJ96dgD9/b4AVkXvANl+NgDs2RMAi7q5AMSX/AAxqCcA8W7DAJTFNgDYqFYAtKi1AM/MDgASiS0Ab1c0ACxWiQCZzuMA1iC5AGteqgA+KpwAEV/MAP0LSgDh9PsAjjttAOKGLADp1IQA/LSpAO/u0QAuNckALzlhADghRAAb2cgAgfwKAPtKagAvHNgAU7SEAE6ZjABUIswAKlXcAMDG1gALGZYAGnC4AGmVZAAmWmAAP1LuAH8RDwD0tREA/Mv1ADS8LQA0vO4A6F3MAN1eYABnjpsAkjPvAMkXuABhWJsA4Ve8AFGDxgDYPhAA3XFIAC0c3QCvGKEAISxGAFnz1wDZepgAnlTAAE+G+gBWBvwA5XmuAIkiNgA4rSIAZ5PcAFXoqgCCJjgAyuebAFENpACZM7EAqdcOAGkFSABlsvAAf4inAIhMlwD50TYAIZKzAHuCSgCYzyEAQJ/cANxHVQDhdDoAZ+tCAP6d3wBe1F8Ae2ekALqsegBV9qIAK4gjAEG6VQBZbggAISqGADlHgwCJ4+YA5Z7UAEn7QAD/VukAHA/KAMVZigCU+isA08HFAA/FzwDbWq4AR8WGAIVDYgAhhjsALHmUABBhhwAqTHsAgCwaAEO/EgCIJpAAeDyJAKjE5ADl23sAxDrCACb06gD3Z4oADZK/AGWjKwA9k7EAvXwLAKRR3AAn3WMAaeHdAJqUGQCoKZUAaM4oAAnttABEnyAATpjKAHCCYwB+fCMAD7kyAKf1jgAUVucAIfEIALWdKgBvfk0ApRlRALX5qwCC39YAlt1hABY2AgDEOp8Ag6KhAHLtbQA5jXoAgripAGsyXABGJ1sAADTtANIAdwD89FUAAVlNAOBxgA==");n(g,26083,"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNQAAAAAAAPA/dIUV07DZ7z8PiflsWLXvP1FbEtABk+8/e1F9PLhy7z+quWgxh1TvPzhidW56OO8/4d4f9Z0e7z8VtzEK/gbvP8upOjen8e4/IjQSTKbe7j8tiWFgCM7uPycqNtXav+4/gk+dViu07j8pVEjdB6vuP4VVOrB+pO4/zTt/Zp6g7j90X+zodZ/uP4cB63MUoe4/E85MmYml7j/boCpC5azuP+XFzbA3t+4/kPCjgpHE7j9dJT6yA9XuP63TWpmf6O4/R1778nb/7j+cUoXdmxnvP2mQ79wgN+8/h6T73BhY7z9fm3szl3zvP9qQpKKvpO8/QEVuW3bQ7z8AAAAAAADoQpQjkUv4aqw/88T6UM6/zj/WUgz/Qi7mPwAAAAAAADhD/oIrZUcVR0CUI5FL+Gq8PvPE+lDOvy4/1lIM/0Iulj++8/h57GH2PxkwllvG/t6/PYivSu1x9T+k/NQyaAvbv7AQ8PA5lfQ/e7cfCotB17+FA7iwlcnzP3vPbRrpndO/pWSIDBkN8z8xtvLzmx3Qv6COC3siXvI/8Ho7Gx18yb8/NBpKSrvxP588r5Pj+cK/uuWK8Fgj8T9cjXi/y2C5v6cAmUE/lfA/zl9Htp1vqr8AAAAAAADwPwAAAAAAAAAArEea/Yxg7j899SSfyjizP6BqAh+zpOw/upE4VKl2xD/m/GpXNiDrP9LkxEoLhM4/LaqhY9HC6T8cZcbwRQbUP+1BeAPmhug/+J8bLJyO2D9iSFP13GfnP8x7sU6k4Nw/C25JyRZ20j96xnWgaRnXv926p2wKx94/yPa+SEcV578ruCplRxX3P04xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAACBpAACQaAAA4GkAAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAACBpAADAaAAAtGgAAAAAAADkaAAAFQQAABYEAAAXBAAAGAQAABkEAAAaBAAAGwQAABwEAAAAAAAAaGkAABUEAAAdBAAAFwQAABgEAAAZBAAAHgQAAB8EAAAgBAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAACBpAABAaQAA5GgAAAAAAADEaQAAFQQAACEEAAAXBAAAGAQAABkEAAAiBAAAIwQAACQEAABOMTBfX2N4eGFiaXYxMjFfX3ZtaV9jbGFzc190eXBlX2luZm9FAAAAIGkAAJxpAADkaAAAU3Q5dHlwZV9pbmZvAAAAAPhoAADQaQ==");n(g,27112,"CtejPAEBAAAAAABAAACAPw8EAAAQBAAAEQQAABIEAAD/////0IIAAACFUA==")}var t=new ArrayBuffer(16);var u=new Int32Array(t);var v=new Float32Array(t);var w=new Float64Array(t);function x(y){return u[y]}function z(y,A){u[y]=A}function B(){return w[0]}function C(A){w[0]=A}function D(A){v[2]=A}function E(){return v[2]}function ka(la){var F=la.a;var G=F.buffer;var H=new Int8Array(G);var I=new Int16Array(G);var J=new Int32Array(G);var K=new Uint8Array(G);var L=new Uint16Array(G);var M=new Uint32Array(G);var N=new Float32Array(G);var O=new Float64Array(G);var P=Math.imul;var Q=Math.fround;var R=Math.abs;var S=Math.clz32;var T=Math.min;var U=Math.max;var V=Math.floor;var W=Math.ceil;var X=Math.trunc;var Y=Math.sqrt;var Z=la.abort;var _=NaN;var $=Infinity;var aa=la.b;var ba=la.c;var ca=la.d;var da=la.e;var ea=la.f;var fa=la.g;var ga=5276928;var ha=0;
  // EMSCRIPTEN_START_FUNCS
  function wD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=0,O=0,S=0,T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0;d=ga-208|0;ga=d;c=J[a+52>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+52>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[8369]=J[8369]+1;c=ia[J[6782]](132,16)|0;H[c+20|0]=1;J[c>>2]=15728;J[c+16>>2]=0;H[c+40|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c+36>>2]=0;H[c+60|0]=1;J[c+28>>2]=0;J[c+32>>2]=0;J[c+56>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[a+52>>2]=c;J[d+196>>2]=0;J[d+188>>2]=0;J[d+192>>2]=0;H[d+200|0]=1;if((ia[J[J[a>>2]+96>>2]](a)|0)>0){c=J[d+192>>2];F=K[d+200|0];while(1){a:{if((e|0)!=(j|0)){break a}m=e?e<<1:1;if((m|0)<=(e|0)){break a}if(m){J[8369]=J[8369]+1;l=ia[J[6782]](m<<4,16)|0}else{l=0}b:{if((e|0)<=0){break b}p=0;c=0;if(e-1>>>0>=3){x=e&-4;s=0;while(1){o=c<<4;u=o+l|0;i=g+o|0;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=o|16;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=o|32;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=o|48;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;c=c+4|0;s=s+4|0;if((x|0)!=(s|0)){continue}break}}u=e&3;if(!u){break b}while(1){e=c<<4;f=e+l|0;x=e+g|0;e=J[x+4>>2];J[f>>2]=J[x>>2];J[f+4>>2]=e;e=J[x+12>>2];J[f+8>>2]=J[x+8>>2];J[f+12>>2]=e;c=c+1|0;p=p+1|0;if((u|0)!=(p|0)){continue}break}}if(!(g?!g|!(F&255):1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[d+196>>2]=l;F=1;H[d+200|0]=1;J[d+192>>2]=m;c=m}g=J[d+196>>2];ia[J[J[a>>2]+108>>2]](a,h,g+(j<<4)|0);j=j+1|0;e=c;h=h+1|0;if((ia[J[J[a>>2]+96>>2]](a)|0)>(h|0)){continue}break}J[d+188>>2]=j}H[d+156|0]=1;J[d+152>>2]=0;H[d+176|0]=1;J[d+144>>2]=0;J[d+148>>2]=0;J[d+172>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+132>>2]=0;H[d+136|0]=1;J[d+124>>2]=0;J[d+128>>2]=0;c:{d:{if(b){J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;c=0;q=J[d+188>>2];if((q|0)>0){while(1){b=c;e:{c=c+1|0;if((q|0)<=(c|0)){break e}l=J[d+196>>2];t=l+(b<<4)|0;b=c;while(1){f:{g=b+1|0;if((g|0)>=(q|0)){break f}k=(b<<4)+l|0;m=g;while(1){v=N[t>>2];C=Q(N[k>>2]-v);b=(m<<4)+l|0;n=N[t+4>>2];B=Q(N[b+4>>2]-n);w=Q(N[b>>2]-v);z=Q(N[k+4>>2]-n);E=Q(Q(C*B)-Q(w*z));n=N[t+8>>2];v=Q(N[k+8>>2]-n);n=Q(N[b+8>>2]-n);w=Q(Q(v*w)-Q(n*C));v=Q(Q(z*n)-Q(B*v));D=Q(1);e=1;while(1){C=Q(E*D);B=Q(v*D);z=Q(w*D);n=Q(Q(C*C)+Q(Q(B*B)+Q(z*z)));g:{if(!(n>Q(9999999747378752e-20))){break g}n=Q(Q(1)/Q(Y(n)));I=Q(C*n);C=Q(z*n);z=Q(B*n);j=J[d+20>>2];if((j|0)>0){b=1;f=J[d+28>>2];if(Q(Q(I*N[f+8>>2])+Q(Q(z*N[f>>2])+Q(C*N[f+4>>2])))>Q(.9990000128746033)){break g}while(1){l=b;if((b|0)!=(j|0)){b=l+1|0;h=f+(l<<4)|0;if(!(Q(Q(I*N[h+8>>2])+Q(Q(z*N[h>>2])+Q(C*N[h+4>>2])))>Q(.9990000128746033))){continue}}break}if((j|0)>(l|0)){break g}}n=Q(Q(I*N[t+8>>2])+Q(Q(z*N[t>>2])+Q(C*N[t+4>>2])));f=J[d+188>>2];if((f|0)>0){b=1;u=J[d+196>>2];if(Q(Q(Q(Q(I*N[u+8>>2])+Q(Q(z*N[u>>2])+Q(C*N[u+4>>2])))-n)+Q(-.009999999776482582))>Q(0)){break g}while(1){l=b;if((b|0)!=(f|0)){b=l+1|0;h=u+(l<<4)|0;if(!(Q(Q(Q(Q(I*N[h+8>>2])+Q(Q(z*N[h>>2])+Q(C*N[h+4>>2])))-n)+Q(-.009999999776482582))>Q(0))){continue}}break}if((f|0)>(l|0)){break g}}n=Q(-n);h:{if(J[d+24>>2]!=(j|0)){break h}r=j?j<<1:1;if((r|0)<=(j|0)){break h}i:{if(!r){b=0;break i}J[8369]=J[8369]+1;b=ia[J[6782]](r<<4,16)|0;j=J[d+20>>2]}j:{if((j|0)<=0){break j}x=j&1;l=0;if((j|0)!=1){u=j&-2;j=0;while(1){i=l<<4;f=i+b|0;o=i+J[d+28>>2]|0;h=J[o+4>>2];J[f>>2]=J[o>>2];J[f+4>>2]=h;h=J[o+12>>2];J[f+8>>2]=J[o+8>>2];J[f+12>>2]=h;h=i|16;f=h+b|0;i=h+J[d+28>>2]|0;h=J[i+4>>2];J[f>>2]=J[i>>2];J[f+4>>2]=h;h=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=h;l=l+2|0;j=j+2|0;if((u|0)!=(j|0)){continue}break}}if(!x){break j}l=l<<4;h=l+b|0;f=l+J[d+28>>2]|0;l=J[f+4>>2];J[h>>2]=J[f>>2];J[h+4>>2]=l;l=J[f+12>>2];J[h+8>>2]=J[f+8>>2];J[h+12>>2]=l}l=J[d+28>>2];if(!(l?!l|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}J[d+28>>2]=b;H[d+32|0]=1;J[d+24>>2]=r;j=J[d+20>>2]}b=J[d+28>>2]+(j<<4)|0;N[b+12>>2]=n;N[b+8>>2]=I;N[b+4>>2]=C;N[b>>2]=z;J[d+20>>2]=J[d+20>>2]+1}b=e;D=Q(-1);e=0;if(b){continue}break}m=m+1|0;if((q|0)<=(m|0)){break f}l=J[d+196>>2];continue}}if((g|0)==(q|0)){break e}l=J[d+196>>2];b=g;continue}}if((c|0)!=(q|0)){continue}break}}J[d+108>>2]=0;H[d+112|0]=1;J[d+100>>2]=0;J[d+104>>2]=0;if(J[d+20>>2]<=0){break d}j=0;while(1){b=J[d+28>>2]+(j<<4)|0;J[d+80>>2]=J[b+8>>2];c=J[b+4>>2];J[d+72>>2]=J[b>>2];J[d+76>>2]=c;n=Q(N[b+12>>2]-Q(ia[J[J[a>>2]+48>>2]](a)));g=J[d+100>>2];k:{if((g|0)!=J[d+104>>2]){break k}u=g?g<<1:1;if((u|0)<=(g|0)){break k}l:{if(!u){A=0;break l}J[8369]=J[8369]+1;A=ia[J[6782]](u<<4,16)|0;g=J[d+100>>2]}m:{if((g|0)<=0){break m}c=0;if((g|0)!=1){l=g&-2;e=0;while(1){h=c<<4;m=h+A|0;f=h+J[d+108>>2]|0;b=J[f+4>>2];J[m>>2]=J[f>>2];J[m+4>>2]=b;b=J[f+12>>2];J[m+8>>2]=J[f+8>>2];J[m+12>>2]=b;b=h|16;m=b+A|0;h=b+J[d+108>>2]|0;b=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=b;b=J[h+12>>2];J[m+8>>2]=J[h+8>>2];J[m+12>>2]=b;c=c+2|0;e=e+2|0;if((l|0)!=(e|0)){continue}break}}if(!(g&1)){break m}b=c<<4;c=b+A|0;g=b+J[d+108>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}b=J[d+108>>2];if(!(b?!b|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+108>>2]=A;H[d+112|0]=1;J[d+104>>2]=u;g=J[d+100>>2]}b=J[d+76>>2];c=J[d+108>>2]+(g<<4)|0;J[c>>2]=J[d+72>>2];J[c+4>>2]=b;b=J[d+80>>2];N[c+12>>2]=n;J[c+8>>2]=b;J[d+100>>2]=J[d+100>>2]+1;j=j+1|0;if((j|0)<J[d+20>>2]){continue}break}break d}eg(d+120|0,g,J[d+188>>2]);break c}J[d+84>>2]=0;H[d+88|0]=1;J[d+76>>2]=0;J[d+80>>2]=0;c=0;k=J[d+100>>2];if((k|0)>0){while(1){b=c;n:{c=c+1|0;if((k|0)<=(c|0)){break n}l=J[d+108>>2];r=l+(b<<4)|0;b=c;while(1){o:{g=b+1|0;if((g|0)>=(k|0)){break o}o=(b<<4)+l|0;m=g;while(1){W=N[o>>2];b=(m<<4)+l|0;B=N[b+4>>2];w=N[b>>2];z=N[o+4>>2];E=Q(Q(W*B)-Q(w*z));v=N[b+8>>2];n=N[o+8>>2];D=Q(Q(z*v)-Q(B*n));G=Q(Q(n*w)-Q(v*W));p:{if(!(Q(Q(E*E)+Q(Q(D*D)+Q(G*G)))>Q(9999999747378752e-20))){break p}X=N[r+4>>2];Z=N[r>>2];T=Q(Q(w*X)-Q(Z*B));_=B;B=N[r+8>>2];U=Q(Q(_*B)-Q(X*v));I=Q(Q(v*Z)-Q(B*w));if(!(Q(Q(T*T)+Q(Q(U*U)+Q(I*I)))>Q(9999999747378752e-20))){break p}w=Q(Q(Z*z)-Q(W*X));C=Q(Q(X*n)-Q(z*B));v=Q(Q(B*W)-Q(n*Z));if(!(Q(Q(w*w)+Q(Q(C*C)+Q(v*v)))>Q(9999999747378752e-20))){break p}n=Q(Q(B*E)+Q(Q(Z*D)+Q(X*G)));if(!(Q(R(n))>Q(9.999999974752427e-7))){break p}B=Q(Q(-1)/n);z=N[b+12>>2];_=E;E=N[r+12>>2];n=N[o+12>>2];w=Q(B*Q(Q(w*z)+Q(Q(_*E)+Q(T*n))));v=Q(B*Q(Q(v*z)+Q(Q(G*E)+Q(I*n))));n=Q(B*Q(Q(C*z)+Q(Q(D*E)+Q(U*n))));b=0;h=1;e=J[d+100>>2];if((e|0)>0){while(1){f=(b<<4)+l|0;if(!(Q(Q(N[f+12>>2]+Q(Q(N[f+8>>2]*w)+Q(Q(N[f>>2]*n)+Q(v*N[f+4>>2]))))+Q(-.009999999776482582))>Q(0))){b=b+1|0;h=(e|0)>(b|0);if((b|0)!=(e|0)){continue}}break}if(h){break p}}l=J[d+76>>2];q:{if((l|0)!=J[d+80>>2]){break q}i=l?l<<1:1;if((i|0)<=(l|0)){break q}r:{if(!i){j=0;break r}J[8369]=J[8369]+1;j=ia[J[6782]](i<<4,16)|0;l=J[d+76>>2]}s:{if((l|0)<=0){break s}b=0;if((l|0)!=1){f=l&-2;A=0;while(1){u=b<<4;h=u+j|0;x=u+J[d+84>>2]|0;e=J[x+4>>2];J[h>>2]=J[x>>2];J[h+4>>2]=e;e=J[x+12>>2];J[h+8>>2]=J[x+8>>2];J[h+12>>2]=e;e=u|16;h=e+j|0;u=e+J[d+84>>2]|0;e=J[u+4>>2];J[h>>2]=J[u>>2];J[h+4>>2]=e;e=J[u+12>>2];J[h+8>>2]=J[u+8>>2];J[h+12>>2]=e;b=b+2|0;A=A+2|0;if((f|0)!=(A|0)){continue}break}}if(!(l&1)){break s}b=b<<4;e=b+j|0;l=b+J[d+84>>2]|0;b=J[l+4>>2];J[e>>2]=J[l>>2];J[e+4>>2]=b;b=J[l+12>>2];J[e+8>>2]=J[l+8>>2];J[e+12>>2]=b}b=J[d+84>>2];if(!(b?!b|!K[d+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+84>>2]=j;H[d+88|0]=1;J[d+80>>2]=i;l=J[d+76>>2]}b=J[d+84>>2]+(l<<4)|0;J[b+12>>2]=0;N[b+8>>2]=w;N[b+4>>2]=v;N[b>>2]=n;J[d+76>>2]=J[d+76>>2]+1}m=m+1|0;if((k|0)<=(m|0)){break o}l=J[d+108>>2];continue}}if((g|0)==(k|0)){break n}l=J[d+108>>2];b=g;continue}}if((c|0)!=(k|0)){continue}break}}eg(d+120|0,J[d+84>>2],J[d+76>>2]);b=J[d+84>>2];if(!(b?!b|!K[d+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[d+108>>2];if(!(b?!b|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[d+28>>2];if(!b|!K[d+32|0]){break c}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}u=J[d+164>>2];t:{if(!u){break t}J[8369]=J[8369]+1;$=ia[J[6782]](u<<4,16)|0;g=0;H[d+31|0]=0;H[d+32|0]=0;H[d+33|0]=0;H[d+34|0]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;b=d+16|3;J[8369]=J[8369]+1;M=ia[J[6782]](P(u,36),16)|0;if((u|0)!=1){e=u&2147483646;p=0;while(1){c=P(g,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;l=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);m=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=m;H[c+21|0]=m>>>8;H[c+22|0]=m>>>16;H[c+23|0]=m>>>24;H[c+24|0]=l;H[c+25|0]=l>>>8;H[c+26|0]=l>>>16;H[c+27|0]=l>>>24;l=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);m=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=m;H[c+29|0]=m>>>8;H[c+30|0]=m>>>16;H[c+31|0]=m>>>24;H[c+32|0]=l;H[c+33|0]=l>>>8;H[c+34|0]=l>>>16;H[c+35|0]=l>>>24;c=P(g|1,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;l=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);m=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=m;H[c+21|0]=m>>>8;H[c+22|0]=m>>>16;H[c+23|0]=m>>>24;H[c+24|0]=l;H[c+25|0]=l>>>8;H[c+26|0]=l>>>16;H[c+27|0]=l>>>24;l=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);m=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=m;H[c+29|0]=m>>>8;H[c+30|0]=m>>>16;H[c+31|0]=m>>>24;H[c+32|0]=l;H[c+33|0]=l>>>8;H[c+34|0]=l>>>16;H[c+35|0]=l>>>24;g=g+2|0;p=p+2|0;if((e|0)!=(p|0)){continue}break}}if(!(u&1)){break t}c=P(g,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;e=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);g=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=g;H[c+21|0]=g>>>8;H[c+22|0]=g>>>16;H[c+23|0]=g>>>24;H[c+24|0]=e;H[c+25|0]=e>>>8;H[c+26|0]=e>>>16;H[c+27|0]=e>>>24;g=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);b=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=b;H[c+29|0]=b>>>8;H[c+30|0]=b>>>16;H[c+31|0]=b>>>24;H[c+32|0]=g;H[c+33|0]=g>>>8;H[c+34|0]=g>>>16;H[c+35|0]=g>>>24}f=J[a+52>>2];A=J[f+8>>2];h=J[d+124>>2];if(!((A|0)>=(h|0)|(h|0)<=J[f+12>>2])){u:{if(!h){p=0;break u}J[8369]=J[8369]+1;p=ia[J[6782]](h<<4,16)|0;A=J[f+8>>2]}v:{if((A|0)<=0){break v}g=0;if((A|0)!=1){e=A&-2;s=0;while(1){m=g<<4;c=m+p|0;l=m+J[f+16>>2]|0;b=J[l+4>>2];J[c>>2]=J[l>>2];J[c+4>>2]=b;b=J[l+12>>2];J[c+8>>2]=J[l+8>>2];J[c+12>>2]=b;b=m|16;c=b+p|0;m=b+J[f+16>>2]|0;b=J[m+4>>2];J[c>>2]=J[m>>2];J[c+4>>2]=b;b=J[m+12>>2];J[c+8>>2]=J[m+8>>2];J[c+12>>2]=b;g=g+2|0;s=s+2|0;if((e|0)!=(s|0)){continue}break}}if(!(A&1)){break v}b=g<<4;c=b+p|0;g=b+J[f+16>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}b=J[f+16>>2];if(!(b?!b|!K[f+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[f+16>>2]=p;H[f+20|0]=1;J[f+12>>2]=h}J[f+8>>2]=h;w:{if((h|0)<=0){break w}c=0;if((h|0)!=1){e=h&-2;A=0;while(1){m=c<<4;g=m+J[J[a+52>>2]+16>>2]|0;l=m+J[d+132>>2]|0;b=J[l+4>>2];J[g>>2]=J[l>>2];J[g+4>>2]=b;b=J[l+12>>2];J[g+8>>2]=J[l+8>>2];J[g+12>>2]=b;b=m|16;g=b+J[J[a+52>>2]+16>>2]|0;m=b+J[d+132>>2]|0;b=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=b;b=J[m+12>>2];J[g+8>>2]=J[m+8>>2];J[g+12>>2]=b;c=c+2|0;A=A+2|0;if((e|0)!=(A|0)){continue}break}}if(!(h&1)){break w}b=c<<4;c=b+J[J[a+52>>2]+16>>2]|0;g=b+J[d+132>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}x:{y:{z:{A:{if(!u){break A}b=0;while(1){k=P(b,36)+M|0;e=J[k+4>>2];h=0;x=J[d+152>>2]+P(J[J[d+172>>2]+(b<<2)>>2],12)|0;s=x;B:{while(1){f=J[(P(J[s+4>>2],12)+s|0)+8>>2];C:{if(J[k+8>>2]!=(e|0)){break C}i=e?e<<1:1;if((i|0)<=(e|0)){break C}D:{if(!i){g=0;break D}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;e=J[k+4>>2]}r=J[k+12>>2];E:{F:{if((e|0)>0){p=0;c=0;if(e-1>>>0>=3){l=e&-4;j=0;while(1){o=c<<2;J[o+g>>2]=J[o+r>>2];m=o|4;J[m+g>>2]=J[m+r>>2];m=o|8;J[m+g>>2]=J[m+r>>2];m=o|12;J[m+g>>2]=J[m+r>>2];c=c+4|0;j=j+4|0;if((l|0)!=(j|0)){continue}break}}m=e&3;if(!m){break F}while(1){e=c<<2;J[e+g>>2]=J[e+r>>2];c=c+1|0;p=p+1|0;if((m|0)!=(p|0)){continue}break}break F}if(!r){break E}}if(r?K[k+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](r)}e=J[k+4>>2]}H[k+16|0]=1;J[k+12>>2]=g;J[k+8>>2]=i}J[J[k+12>>2]+(e<<2)>>2]=f;e=J[k+4>>2]+1|0;J[k+4>>2]=e;G:{if((h|0)<=1){c=J[d+132>>2];g=c+(f<<4)|0;B=N[g+4>>2];c=c+(J[s+8>>2]<<4)|0;z=N[c+4>>2];E=N[g>>2];w=N[c>>2];v=N[g+8>>2];n=N[c+8>>2];c=(d+16|0)+(h<<4)|0;J[c+12>>2]=0;C=Q(n-v);v=Q(w-E);n=Q(z-B);w=Q(Q(1)/Q(Y(Q(Q(C*C)+Q(Q(v*v)+Q(n*n))))));N[c+8>>2]=C*w;N[c+4>>2]=n*w;N[c>>2]=v*w;h=h+1|0;c=P(J[s+4>>2],12)+s|0;s=P(J[c>>2],12)+c|0;if((x|0)!=(s|0)){continue}if((h|0)==2){break G}c=(b<<4)+$|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;break B}h=2;c=P(J[s+4>>2],12)+s|0;s=P(J[c>>2],12)+c|0;if((x|0)!=(s|0)){continue}}break}C=N[d+20>>2];v=N[d+36>>2];B=N[d+32>>2];z=N[d+24>>2];E=N[d+16>>2];n=N[d+40>>2];c=(b<<4)+$|0;J[c+12>>2]=0;w=Q(Q(E*v)-Q(B*C));v=Q(Q(C*n)-Q(v*z));n=Q(Q(z*B)-Q(n*E));E=Q(Q(1)/Q(Y(Q(Q(w*w)+Q(Q(v*v)+Q(n*n))))));N[c+8>>2]=w*E;N[c+4>>2]=n*E;n=Q(v*E);N[c>>2]=n;N[k+20>>2]=n;N[k+24>>2]=N[c+4>>2];n=N[c+8>>2];J[k+32>>2]=1900671690;N[k+28>>2]=n}m=J[k+4>>2];H:{if((m|0)<=0){D=Q(1.0000000150474662e30);break H}c=(b<<4)+$|0;E=N[c+8>>2];w=N[c+4>>2];v=N[c>>2];e=J[J[a+52>>2]+16>>2];g=J[k+12>>2];D=Q(1.0000000150474662e30);c=0;while(1){l=e+(J[g+(c<<2)>>2]<<4)|0;n=Q(Q(N[l+8>>2]*E)+Q(Q(N[l>>2]*v)+Q(N[l+4>>2]*w)));D=n<D?n:D;c=c+1|0;if((m|0)!=(c|0)){continue}break}}N[k+32>>2]=-D;b=b+1|0;if((u|0)!=(b|0)){continue}break}if(!u){break A}e=0;m=0;h=0;while(1){I:{if((e|0)!=(h|0)){break I}h=e?e<<1:1;if(h>>>0<=e>>>0){h=e;break I}J[8369]=J[8369]+1;b=ia[J[6782]](h<<2,16)|0;J:{K:{if(e){p=0;c=0;if(e-1>>>0>=3){l=e&2147483644;s=0;while(1){f=c<<2;J[f+b>>2]=J[f+m>>2];g=f|4;J[g+b>>2]=J[g+m>>2];g=f|8;J[g+b>>2]=J[g+m>>2];g=f|12;J[g+b>>2]=J[g+m>>2];c=c+4|0;s=s+4|0;if((l|0)!=(s|0)){continue}break}}l=e&3;if(!l){break K}while(1){g=c<<2;J[g+b>>2]=J[g+m>>2];c=c+1|0;p=p+1|0;if((l|0)!=(p|0)){continue}break}break K}if(m){break K}h=1;break J}if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}}m=b}J[(e<<2)+m>>2]=e;e=e+1|0;if((u|0)!=(e|0)){continue}break}l=u;while(1){g=l-1|0;c=J[(g<<2)+m>>2];J[8369]=J[8369]+1;b=ia[J[6782]](4,16)|0;J[b>>2]=c;L:{M:{if((l|0)<2){l=g;x=1;break M}c=P(c,36)+M|0;w=N[c+20>>2];v=N[c+28>>2];n=N[c+24>>2];c=l-2|0;x=1;l=g;h=1;while(1){e=c;o=J[(c<<2)+m>>2];c=P(o,36)+M|0;if(Q(Q(v*N[c+28>>2])+Q(Q(w*N[c+20>>2])+Q(n*N[c+24>>2])))>Q(.9990000128746033)){N:{if((h|0)!=(x|0)){g=b;break N}h=x?x<<1:1;if((x|0)>=(h|0)){g=b;h=x;break N}if(h){J[8369]=J[8369]+1;g=ia[J[6782]](h<<2,16)|0}else{g=0}O:{if((x|0)>0){p=0;c=0;if(x-1>>>0>=3){i=x&-4;j=0;while(1){r=c<<2;J[r+g>>2]=J[b+r>>2];f=r|4;J[f+g>>2]=J[b+f>>2];f=r|8;J[f+g>>2]=J[b+f>>2];f=r|12;J[f+g>>2]=J[b+f>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}j=x&3;if(!j){break O}while(1){f=c<<2;J[f+g>>2]=J[b+f>>2];c=c+1|0;p=p+1|0;if((j|0)!=(p|0)){continue}break}break O}if(!b){break N}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[(x<<2)+g>>2]=o;x=x+1|0;c=0;P:{if((l|0)<=0){break P}while(1){b=(c<<2)+m|0;if((o|0)!=J[b>>2]){c=c+1|0;if((l|0)!=(c|0)){continue}break P}break}if((c|0)>=(l|0)){break P}c=b;l=l-1|0;b=(l<<2)+m|0;J[c>>2]=J[b>>2];J[b>>2]=o}b=g}c=e-1|0;if((e|0)>0){continue}break}Q:{if((x|0)>1){g=0;J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;D=Q(0);G=Q(0);w=Q(0);e=0;while(1){t=P(J[(e<<2)+b>>2],36)+M|0;v=N[t+24>>2];n=N[t+28>>2];N[d>>2]=N[t+20>>2]+w;N[d+8>>2]=n+D;N[d+4>>2]=v+G;p=J[t+4>>2];if((p|0)>0){h=0;while(1){k=J[J[t+12>>2]+(h<<2)>>2];j=J[J[a+52>>2]+16>>2];R:{if((g|0)>0){c=0;f=J[d+28>>2];while(1){if((k|0)==J[(f+P(c,24)|0)+20>>2]){break R}c=c+1|0;if((g|0)!=(c|0)){continue}break}}f=j+(k<<4)|0;c=J[f+12>>2];J[d+104>>2]=J[f+8>>2];J[d+108>>2]=c;c=J[f+4>>2];J[d+96>>2]=J[f>>2];J[d+100>>2]=c;S:{if(J[d+24>>2]!=(g|0)){break S}r=g?g<<1:1;if((r|0)<=(g|0)){break S}T:{if(!r){p=0;break T}J[8369]=J[8369]+1;p=ia[J[6782]](P(r,24),16)|0;g=J[d+20>>2]}y=J[d+28>>2];U:{if((g|0)<=0){break U}F=0;c=0;if(g-1>>>0>=3){o=g&-4;j=0;while(1){f=P(c,24);i=f+p|0;q=f+y|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=P(c|1,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=P(c|2,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=P(c|3,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;c=c+4|0;j=j+4|0;if((o|0)!=(j|0)){continue}break}}i=g&3;if(!i){break U}while(1){f=P(c,24);j=f+p|0;o=f+y|0;f=J[o+4>>2];J[j>>2]=J[o>>2];J[j+4>>2]=f;f=J[o+20>>2];J[j+16>>2]=J[o+16>>2];J[j+20>>2]=f;f=J[o+12>>2];J[j+8>>2]=J[o+8>>2];J[j+12>>2]=f;c=c+1|0;F=F+1|0;if((i|0)!=(F|0)){continue}break}}if(!(!y|!K[d+32|0])){if(y){J[8370]=J[8370]+1;ia[J[6783]](y)}g=J[d+20>>2]}J[d+28>>2]=p;H[d+32|0]=1;J[d+24>>2]=r}c=J[d+100>>2];j=J[d+28>>2]+P(g,24)|0;g=j;J[g>>2]=J[d+96>>2];J[g+4>>2]=c;f=J[d+108>>2];g=J[d+104>>2];c=J[d+112>>2];J[j+20>>2]=k;J[j+16>>2]=c;J[j+8>>2]=g;J[j+12>>2]=f;g=J[d+20>>2]+1|0;J[d+20>>2]=g;p=J[t+4>>2]}h=h+1|0;if((p|0)>(h|0)){continue}break}}D=N[d+8>>2];G=N[d+4>>2];w=N[d>>2];e=e+1|0;if((x|0)!=(e|0)){continue}break}break Q}c=(x|0)!=1;x=1;if(c){break L}break M}e=P(J[b>>2],36)+M|0;g=K[e+32|0]|K[e+33|0]<<8|(K[e+34|0]<<16|K[e+35|0]<<24);c=K[e+28|0]|K[e+29|0]<<8|(K[e+30|0]<<16|K[e+31|0]<<24);H[d+83|0]=c;H[d+84|0]=c>>>8;H[d+85|0]=c>>>16;H[d+86|0]=c>>>24;H[d+87|0]=g;H[d+88|0]=g>>>8;H[d+89|0]=g>>>16;H[d+90|0]=g>>>24;g=K[e+24|0]|K[e+25|0]<<8|(K[e+26|0]<<16|K[e+27|0]<<24);c=K[e+20|0]|K[e+21|0]<<8|(K[e+22|0]<<16|K[e+23|0]<<24);H[d+75|0]=c;H[d+76|0]=c>>>8;H[d+77|0]=c>>>16;H[d+78|0]=c>>>24;H[d+79|0]=g;H[d+80|0]=g>>>8;H[d+81|0]=g>>>16;H[d+82|0]=g>>>24;n=Q(Q(1)/Q(Y(Q(Q(D*D)+Q(Q(w*w)+Q(G*G))))));N[d+8>>2]=D*n;N[d+4>>2]=G*n;N[d>>2]=w*n;g=0;J[d+108>>2]=0;H[d+112|0]=1;J[d+100>>2]=0;J[d+104>>2]=0;t=d+16|0;c=0;p=0;D=Q(0);s=0;y=ga-32|0;ga=y;w=N[d+8>>2];V:{if(Q(R(w))>Q(.7071067690849304)){v=N[d+4>>2];n=Q(Q(1)/Q(Y(Q(Q(v*v)+Q(w*w)))));D=Q(v*n);G=Q(n*Q(-w));n=Q(0);break V}w=N[d>>2];v=N[d+4>>2];n=Q(Q(1)/Q(Y(Q(Q(w*w)+Q(v*v)))));G=Q(w*n);n=Q(n*Q(-v))}W:{X:{Y:{Z:{j=J[t+4>>2];if((j|0)>=2){while(1){i=J[t+12>>2];f=P(c,24);e=i+f|0;if(Q(Q(N[e+8>>2]*D)+Q(Q(N[e>>2]*n)+Q(G*N[e+4>>2])))<Q(Q(N[i+8>>2]*D)+Q(Q(N[i>>2]*n)+Q(G*N[i+4>>2])))){h=J[i+20>>2];J[y+24>>2]=J[i+16>>2];J[y+28>>2]=h;h=J[i+12>>2];J[y+16>>2]=J[i+8>>2];J[y+20>>2]=h;h=J[i+4>>2];J[y+8>>2]=J[i>>2];J[y+12>>2]=h;h=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=h;h=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=h;h=J[e+20>>2];J[i+16>>2]=J[e+16>>2];J[i+20>>2]=h;e=J[y+12>>2];h=f+J[t+12>>2]|0;J[h>>2]=J[y+8>>2];J[h+4>>2]=e;e=J[y+28>>2];J[h+16>>2]=J[y+24>>2];J[h+20>>2]=e;e=J[y+20>>2];J[h+8>>2]=J[y+16>>2];J[h+12>>2]=e;j=J[t+4>>2]}c=c+1|0;if((j|0)>(c|0)){continue}break}h=J[t+12>>2];J[h+16>>2]=-246811958;if((j|0)>=2){C=N[h+8>>2];B=N[h+4>>2];z=N[h>>2];E=Q(-G);w=Q(-n);v=Q(-D);c=1;while(1){e=h+P(c,24)|0;T=Q(N[e+4>>2]-B);U=Q(N[e>>2]-z);I=Q(N[e+8>>2]-C);N[e+16>>2]=Q(Q(Q(Q(n*T)+Q(U*E))*N[d+8>>2])+Q(Q(Q(Q(G*I)+Q(T*v))*N[d>>2])+Q(N[d+4>>2]*Q(Q(D*U)+Q(I*w)))))/Q(Y(Q(Q(I*I)+Q(Q(U*U)+Q(T*T)))));c=c+1|0;if((j|0)!=(c|0)){continue}break}}c=J[h+12>>2];J[y+16>>2]=J[h+8>>2];J[y+20>>2]=c;c=J[h+4>>2];J[y+8>>2]=J[h>>2];J[y+12>>2]=c;Tl(t,y+8|0,1,j-1|0);h=J[t+12>>2];c=J[d+100>>2];if((c|0)!=J[d+104>>2]){break X}r=c?c<<1:1;if((r|0)<=(c|0)){break X}if(r){break Z}j=0;break Y}if((j|0)!=1){break W}c=J[d+100>>2];while(1){h=J[t+12>>2];_:{if(J[d+104>>2]!=(c|0)){break _}k=c?c<<1:1;if((k|0)<=(c|0)){break _}$:{if(!k){j=0;break $}J[8369]=J[8369]+1;j=ia[J[6782]](P(k,24),16)|0;c=J[d+100>>2]}aa:{if((c|0)<=0){break aa}e=0;if((c|0)!=1){o=c&-2;r=0;while(1){f=P(e,24);i=f+j|0;q=f+J[d+108>>2]|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;q=f+J[d+108>>2]|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;e=e+2|0;r=r+2|0;if((o|0)!=(r|0)){continue}break}}if(!(c&1)){break aa}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=k;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+4>>2];J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c;s=s+1|0;if((s|0)<J[t+4>>2]){continue}break}break W}J[8369]=J[8369]+1;j=ia[J[6782]](P(r,24),16)|0;c=J[d+100>>2]}ba:{if((c|0)<=0){break ba}e=0;if((c|0)!=1){o=c&-2;while(1){f=P(e,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;e=e+2|0;p=p+2|0;if((o|0)!=(p|0)){continue}break}}if(!(c&1)){break ba}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=r;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+4>>2];J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c;h=J[t+12>>2];ca:{if(J[d+104>>2]!=(c|0)){break ca}r=c?c<<1:1;if((r|0)<=(c|0)){break ca}da:{if(!r){j=0;break da}J[8369]=J[8369]+1;j=ia[J[6782]](P(r,24),16)|0;c=J[d+100>>2]}ea:{if((c|0)<=0){break ea}e=0;if((c|0)!=1){o=c&-2;p=0;while(1){f=P(e,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;e=e+2|0;p=p+2|0;if((o|0)!=(p|0)){continue}break}}if(!(c&1)){break ea}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=r;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+28>>2];J[e>>2]=J[h+24>>2];J[e+4>>2]=c;c=J[h+44>>2];J[e+16>>2]=J[h+40>>2];J[e+20>>2]=c;c=J[h+36>>2];J[e+8>>2]=J[h+32>>2];J[e+12>>2]=c;h=J[d+100>>2];c=h+1|0;J[d+100>>2]=c;p=2;e=J[t+4>>2];if((e|0)==2|(h|0)<=0){break W}while(1){if((c|0)>=2){h=J[t+12>>2]+P(p,24)|0;G=N[h+8>>2];T=N[h+4>>2];U=N[h>>2];I=N[d+8>>2];C=N[d+4>>2];B=N[d>>2];j=J[d+108>>2];e=c;fa:{while(1){c=P(e,24)+j|0;f=c-48|0;v=N[f>>2];c=c-24|0;z=Q(v-N[c>>2]);n=N[f+4>>2];E=Q(n-T);w=Q(v-U);n=Q(n-N[c+4>>2]);W=Q(Q(Q(z*E)-Q(w*n))*I);_=n;n=N[f+8>>2];v=Q(n-G);n=Q(n-N[c+8>>2]);if(!(Q(W+Q(Q(Q(Q(_*v)-Q(E*n))*B)+Q(C*Q(Q(n*w)-Q(v*z)))))>Q(0))){c=e-1|0;J[d+100>>2]=c;f=(e|0)<3;e=c;if(!f){continue}break fa}break}ga:{if(J[d+104>>2]!=(e|0)){break ga}o=e<<1;if((o|0)<=(e|0)){break ga}J[8369]=J[8369]+1;j=ia[J[6782]](P(e,48),16)|0;r=J[d+100>>2];ha:{if((r|0)<=0){break ha}e=0;if((r|0)!=1){i=r&-2;s=0;while(1){c=P(e,24);f=c+j|0;k=c+J[d+108>>2]|0;c=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=c;c=J[k+20>>2];J[f+16>>2]=J[k+16>>2];J[f+20>>2]=c;c=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=c;c=P(e|1,24);f=c+j|0;k=c+J[d+108>>2]|0;c=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=c;c=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=c;c=J[k+20>>2];J[f+16>>2]=J[k+16>>2];J[f+20>>2]=c;e=e+2|0;s=s+2|0;if((i|0)!=(s|0)){continue}break}}if(!(r&1)){break ha}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=o;e=J[d+100>>2]}c=J[h+4>>2];e=P(e,24)+j|0;J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c}e=J[t+4>>2]}p=p+1|0;if((p|0)!=(e|0)){continue}break}}ga=y+32|0;j=0;F=0;h=0;ia:{if(J[d+100>>2]<=0){A=J[d+20>>2];break ia}while(1){k=P(h,24);r=k+J[d+108>>2]|0;ja:{if((j|0)!=(F|0)){break ja}f=j?j<<1:1;if((f|0)<=(j|0)){break ja}if(f){J[8369]=J[8369]+1;e=ia[J[6782]](f<<2,16)|0}else{e=0}ka:{la:{if((j|0)>0){p=0;c=0;if(j-1>>>0>=3){o=j&-4;s=0;while(1){q=c<<2;J[q+e>>2]=J[g+q>>2];i=q|4;J[i+e>>2]=J[g+i>>2];i=q|8;J[i+e>>2]=J[g+i>>2];i=q|12;J[i+e>>2]=J[g+i>>2];c=c+4|0;s=s+4|0;if((o|0)!=(s|0)){continue}break}}i=j&3;if(!i){break la}while(1){j=c<<2;J[j+e>>2]=J[g+j>>2];c=c+1|0;p=p+1|0;if((i|0)!=(p|0)){continue}break}break la}if(!g){break ka}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}g=e;j=f}J[(F<<2)+g>>2]=J[r+20>>2];A=J[d+20>>2];ma:{if((A|0)<=0){break ma}i=J[(k+J[d+108>>2]|0)+20>>2];c=0;f=J[d+28>>2];while(1){e=f+P(c,24)|0;if((i|0)!=J[e+20>>2]){c=c+1|0;if((A|0)!=(c|0)){continue}break ma}break}J[e+20>>2]=-1}F=F+1|0;h=h+1|0;if((h|0)<J[d+100>>2]){continue}break}}na:{if((A|0)>0){h=0;o=J[d+28>>2];while(1){r=J[(o+P(h,24)|0)+20>>2];oa:{if(!u|(r|0)==-1){break oa}e=0;if((x|0)>0){while(1){c=0;pa:{while(1){if(J[(c<<2)+b>>2]==(e|0)){break pa}c=c+1|0;if((x|0)!=(c|0)){continue}break}c=P(e,36)+M|0;i=J[c+4>>2];if((i|0)<=0){break pa}j=J[c+12>>2];c=0;while(1){s=1;if((r|0)==J[j+(c<<2)>>2]){break na}c=c+1|0;if((i|0)!=(c|0)){continue}break}}e=e+1|0;if((u|0)!=(e|0)){continue}break oa}}while(1){c=P(e,36)+M|0;i=J[c+4>>2];if((i|0)>0){j=J[c+12>>2];c=0;while(1){s=1;if((r|0)==J[j+(c<<2)>>2]){break na}c=c+1|0;if((i|0)!=(c|0)){continue}break}}e=e+1|0;if((u|0)!=(e|0)){continue}break}}h=h+1|0;if((A|0)!=(h|0)){continue}break}}r=J[a+52>>2];c=J[r+28>>2];if((c|0)==J[r+32>>2]){zh(r+24|0,c?c<<1:1);c=J[r+28>>2]}t=J[r+36>>2]+P(c,36)|0;J[t+12>>2]=0;H[t+16|0]=1;J[t+4>>2]=0;J[t+8>>2]=0;qa:{if((F|0)<=0){J[t+4>>2]=F;break qa}J[8369]=J[8369]+1;f=F<<2;k=ia[J[6782]](f,16)|0;q=J[t+12>>2];i=J[t+4>>2];ra:{sa:{if((i|0)>0){s=0;c=0;if(i-1>>>0>=3){h=i&-4;j=0;while(1){o=c<<2;J[o+k>>2]=J[o+q>>2];e=o|4;J[e+k>>2]=J[e+q>>2];e=o|8;J[e+k>>2]=J[e+q>>2];e=o|12;J[e+k>>2]=J[e+q>>2];c=c+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}h=i&3;if(!h){break sa}while(1){e=c<<2;J[e+k>>2]=J[e+q>>2];c=c+1|0;s=s+1|0;if((h|0)!=(s|0)){continue}break}break sa}if(!q){break ra}}if(!K[t+16|0]){break ra}if(q){J[8370]=J[8370]+1;ia[J[6783]](q)}}H[t+16|0]=1;J[t+12>>2]=k;J[t+8>>2]=F;p=0;j=qa(k,0,f);J[t+4>>2]=F;c=0;if(F-1>>>0>=3){h=F&-4;s=0;while(1){f=c<<2;J[f+j>>2]=J[f+g>>2];e=f|4;J[e+j>>2]=J[e+g>>2];e=f|8;J[e+j>>2]=J[e+g>>2];e=f|12;J[e+j>>2]=J[e+g>>2];c=c+4|0;s=s+4|0;if((h|0)!=(s|0)){continue}break}}h=F&3;if(!h){break qa}while(1){e=c<<2;J[e+j>>2]=J[e+g>>2];c=c+1|0;p=p+1|0;if((h|0)!=(p|0)){continue}break}}e=K[d+79|0]|K[d+80|0]<<8|(K[d+81|0]<<16|K[d+82|0]<<24);c=K[d+75|0]|K[d+76|0]<<8|(K[d+77|0]<<16|K[d+78|0]<<24);H[t+20|0]=c;H[t+21|0]=c>>>8;H[t+22|0]=c>>>16;H[t+23|0]=c>>>24;H[t+24|0]=e;H[t+25|0]=e>>>8;H[t+26|0]=e>>>16;H[t+27|0]=e>>>24;e=K[d+87|0]|K[d+88|0]<<8|(K[d+89|0]<<16|K[d+90|0]<<24);c=K[d+83|0]|K[d+84|0]<<8|(K[d+85|0]<<16|K[d+86|0]<<24);H[t+28|0]=c;H[t+29|0]=c>>>8;H[t+30|0]=c>>>16;H[t+31|0]=c>>>24;H[t+32|0]=e;H[t+33|0]=e>>>8;H[t+34|0]=e>>>16;H[t+35|0]=e>>>24;J[r+28>>2]=J[r+28>>2]+1;s=0}c=s;e=J[d+108>>2];if(!(e?!e|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}g=J[d+28>>2];if(!(g?!g|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}if(!(c&(x|0)>0)){break L}}A=0;while(1){j=0;g=P(J[(A<<2)+b>>2],36)+M|0;S=J[g+4>>2];ta:{if((S|0)<=0){break ta}p=0;J[8369]=J[8369]+1;c=S<<2;j=ia[J[6782]](c,16)|0;o=qa(j,0,c);i=J[g+12>>2];c=0;if(S-1>>>0>=3){h=S&-4;s=0;while(1){f=c<<2;J[f+o>>2]=J[f+i>>2];e=f|4;J[e+o>>2]=J[e+i>>2];e=f|8;J[e+o>>2]=J[e+i>>2];e=f|12;J[e+o>>2]=J[e+i>>2];c=c+4|0;s=s+4|0;if((h|0)!=(s|0)){continue}break}}h=S&3;if(!h){break ta}while(1){e=c<<2;J[e+o>>2]=J[e+i>>2];c=c+1|0;p=p+1|0;if((h|0)!=(p|0)){continue}break}}e=K[g+24|0]|K[g+25|0]<<8|(K[g+26|0]<<16|K[g+27|0]<<24);c=K[g+20|0]|K[g+21|0]<<8|(K[g+22|0]<<16|K[g+23|0]<<24);H[d+19|0]=c;H[d+20|0]=c>>>8;H[d+21|0]=c>>>16;H[d+22|0]=c>>>24;H[d+23|0]=e;H[d+24|0]=e>>>8;H[d+25|0]=e>>>16;H[d+26|0]=e>>>24;e=K[g+32|0]|K[g+33|0]<<8|(K[g+34|0]<<16|K[g+35|0]<<24);c=K[g+28|0]|K[g+29|0]<<8|(K[g+30|0]<<16|K[g+31|0]<<24);H[d+27|0]=c;H[d+28|0]=c>>>8;H[d+29|0]=c>>>16;H[d+30|0]=c>>>24;H[d+31|0]=e;H[d+32|0]=e>>>8;H[d+33|0]=e>>>16;H[d+34|0]=e>>>24;O=J[a+52>>2];e=J[O+28>>2];ua:{if((e|0)!=J[O+32>>2]){break ua}k=e?e<<1:1;if((k|0)<=(e|0)){break ua}va:{if(!k){r=0;break va}J[8369]=J[8369]+1;r=ia[J[6782]](P(k,36),16)|0;e=J[O+28>>2]}wa:{if((e|0)<=0){break wa}F=0;while(1){g=J[O+36>>2];c=P(F,36);L=c+r|0;J[L+12>>2]=0;H[L+16|0]=1;J[L+4>>2]=0;J[L+8>>2]=0;g=c+g|0;y=J[g+4>>2];xa:{if((y|0)<=0){J[L+4>>2]=y;break xa}J[8369]=J[8369]+1;i=y<<2;t=ia[J[6782]](i,16)|0;V=J[L+12>>2];o=J[L+4>>2];ya:{za:{if((o|0)>0){p=0;c=0;if(o-1>>>0>=3){f=o&-4;s=0;while(1){q=c<<2;J[q+t>>2]=J[q+V>>2];h=q|4;J[h+t>>2]=J[h+V>>2];h=q|8;J[h+t>>2]=J[h+V>>2];h=q|12;J[h+t>>2]=J[h+V>>2];c=c+4|0;s=s+4|0;if((f|0)!=(s|0)){continue}break}}f=o&3;if(!f){break za}while(1){h=c<<2;J[h+t>>2]=J[h+V>>2];c=c+1|0;p=p+1|0;if((f|0)!=(p|0)){continue}break}break za}if(!V){break ya}}if(!K[L+16|0]){break ya}if(V){J[8370]=J[8370]+1;ia[J[6783]](V)}}H[L+16|0]=1;J[L+12>>2]=t;J[L+8>>2]=y;p=0;q=qa(t,0,i);J[L+4>>2]=y;o=J[g+12>>2];c=0;if(y-1>>>0>=3){f=y&-4;s=0;while(1){i=c<<2;J[i+q>>2]=J[i+o>>2];h=i|4;J[h+q>>2]=J[h+o>>2];h=i|8;J[h+q>>2]=J[h+o>>2];h=i|12;J[h+q>>2]=J[h+o>>2];c=c+4|0;s=s+4|0;if((f|0)!=(s|0)){continue}break}}f=y&3;if(!f){break xa}while(1){h=c<<2;J[h+q>>2]=J[h+o>>2];c=c+1|0;p=p+1|0;if((f|0)!=(p|0)){continue}break}}c=J[g+24>>2];J[L+20>>2]=J[g+20>>2];J[L+24>>2]=c;c=J[g+32>>2];J[L+28>>2]=J[g+28>>2];J[L+32>>2]=c;F=F+1|0;if((F|0)!=(e|0)){continue}break}g=0;c=J[O+28>>2];if((c|0)<=0){break wa}while(1){h=J[O+36>>2]+P(g,36)|0;e=J[h+12>>2];if(!(e?!e|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}H[h+16|0]=1;J[h+12>>2]=0;J[h+4>>2]=0;J[h+8>>2]=0;g=g+1|0;if((c|0)!=(g|0)){continue}break}}c=J[O+36>>2];if(!(c?!c|!K[O+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[O+36>>2]=r;H[O+40|0]=1;J[O+32>>2]=k;e=J[O+28>>2]}k=J[O+36>>2]+P(e,36)|0;J[k+12>>2]=0;H[k+16|0]=1;J[k+4>>2]=0;J[k+8>>2]=0;Aa:{if((S|0)<=0){J[k+4>>2]=S;break Aa}J[8369]=J[8369]+1;h=S<<2;o=ia[J[6782]](h,16)|0;r=J[k+12>>2];f=J[k+4>>2];Ba:{Ca:{if((f|0)>0){p=0;c=0;if(f-1>>>0>=3){e=f&-4;s=0;while(1){i=c<<2;J[i+o>>2]=J[i+r>>2];g=i|4;J[g+o>>2]=J[g+r>>2];g=i|8;J[g+o>>2]=J[g+r>>2];g=i|12;J[g+o>>2]=J[g+r>>2];c=c+4|0;s=s+4|0;if((e|0)!=(s|0)){continue}break}}e=f&3;if(!e){break Ca}while(1){g=c<<2;J[g+o>>2]=J[g+r>>2];c=c+1|0;p=p+1|0;if((e|0)!=(p|0)){continue}break}break Ca}if(!r){break Ba}}if(!K[k+16|0]){break Ba}if(r){J[8370]=J[8370]+1;ia[J[6783]](r)}}H[k+16|0]=1;J[k+12>>2]=o;J[k+8>>2]=S;e=0;i=qa(o,0,h);J[k+4>>2]=S;c=0;if(S-1>>>0>=3){h=S&-4;p=0;while(1){f=c<<2;J[f+i>>2]=J[f+j>>2];g=f|4;J[g+i>>2]=J[g+j>>2];g=f|8;J[g+i>>2]=J[g+j>>2];g=f|12;J[g+i>>2]=J[g+j>>2];c=c+4|0;p=p+4|0;if((h|0)!=(p|0)){continue}break}}h=S&3;if(!h){break Aa}while(1){g=c<<2;J[g+i>>2]=J[g+j>>2];c=c+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}g=K[d+23|0]|K[d+24|0]<<8|(K[d+25|0]<<16|K[d+26|0]<<24);c=K[d+19|0]|K[d+20|0]<<8|(K[d+21|0]<<16|K[d+22|0]<<24);H[k+20|0]=c;H[k+21|0]=c>>>8;H[k+22|0]=c>>>16;H[k+23|0]=c>>>24;H[k+24|0]=g;H[k+25|0]=g>>>8;H[k+26|0]=g>>>16;H[k+27|0]=g>>>24;g=K[d+31|0]|K[d+32|0]<<8|(K[d+33|0]<<16|K[d+34|0]<<24);c=K[d+27|0]|K[d+28|0]<<8|(K[d+29|0]<<16|K[d+30|0]<<24);H[k+28|0]=c;H[k+29|0]=c>>>8;H[k+30|0]=c>>>16;H[k+31|0]=c>>>24;H[k+32|0]=g;H[k+33|0]=g>>>8;H[k+34|0]=g>>>16;H[k+35|0]=g>>>24;J[O+28>>2]=J[O+28>>2]+1;if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}A=A+1|0;if((x|0)!=(A|0)){continue}break}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(l){continue}break}Ul(J[a+52>>2]);if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}if(!u){break z}g=0;while(1){b=P(g,36)+M|0;a=J[b+12>>2];if(!(a?!a|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;g=g+1|0;if((u|0)!=(g|0)){continue}break}break y}Ul(J[a+52>>2])}if(!M){break x}}if(M){J[8370]=J[8370]+1;ia[J[6783]](M)}}if($){J[8370]=J[8370]+1;ia[J[6783]]($)}a=J[d+172>>2];if(!(a?!a|!K[d+176|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+172>>2]=0;H[d+176|0]=1;J[d+164>>2]=0;J[d+168>>2]=0;a=J[d+152>>2];if(!(a?!a|!K[d+156|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+152>>2]=0;H[d+156|0]=1;J[d+144>>2]=0;J[d+148>>2]=0;a=J[d+132>>2];if(!(a?!a|!K[d+136|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}a=J[d+196>>2];if(!(a?!a|!K[d+200|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+208|0;return 1}function mk(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=0,A=0,B=Q(0),C=0,D=0,E=Q(0),F=Q(0),G=Q(0),L=Q(0);A=ga-16|0;ga=A;d=J[a+1112>>2];if((d|0)>0){while(1){ng(a,0);d=J[a+1112>>2];if((d|0)>0){continue}break}}e=J[a+712>>2];f=(b|0)>(e|0)?e:b;a:{if((f|0)<=(d|0)){break a}if(J[a+1116>>2]<(f|0)){b:{if(!f){break b}J[8369]=J[8369]+1;g=ia[J[6782]](f<<2,16)|0;j=J[a+1112>>2];if((j|0)<=0){break b}b=0;if(j-1>>>0>=3){i=j&-4;while(1){e=b<<2;J[e+g>>2]=J[e+J[a+1120>>2]>>2];m=e|4;J[m+g>>2]=J[m+J[a+1120>>2]>>2];m=e|8;J[m+g>>2]=J[m+J[a+1120>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[a+1120>>2]>>2];b=b+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=j&3;if(!e){break b}while(1){j=b<<2;J[j+g>>2]=J[j+J[a+1120>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[a+1120>>2];if(!(b?!b|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=f}e=(d^-1)+f|0;j=f-d&3;if(j){b=0;while(1){J[J[a+1120>>2]+(d<<2)>>2]=0;d=d+1|0;b=b+1|0;if((j|0)!=(b|0)){continue}break}}if(e>>>0<3){break a}while(1){b=d<<2;J[b+J[a+1120>>2]>>2]=0;J[(b+J[a+1120>>2]|0)+4>>2]=0;J[(b+J[a+1120>>2]|0)+8>>2]=0;J[(b+J[a+1120>>2]|0)+12>>2]=0;d=d+4|0;if((f|0)!=(d|0)){continue}break}}J[a+1112>>2]=f;c:{d:{e:{f:{if((f|0)<=0){break f}b=0;while(1){J[8369]=J[8369]+1;e=ia[J[6782]](384,16)|0;H[e+36|0]=1;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;H[e+16|0]=1;J[e+32>>2]=0;H[e+56|0]=1;J[e+24>>2]=0;J[e+28>>2]=0;J[e+52>>2]=0;J[e+348>>2]=0;J[e+352>>2]=0;J[e+44>>2]=0;J[e+48>>2]=0;H[e+376|0]=0;J[e+368>>2]=1120403456;J[e+372>>2]=1008981770;J[e+356>>2]=0;J[e+360>>2]=0;J[e+364>>2]=0;f=b<<2;J[f+J[a+1120>>2]>>2]=e;H[J[f+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;f=J[a+1112>>2];if((b|0)<(f|0)){continue}break}if((f|0)<=0){break f}e=0;b=J[a+712>>2];g:{h:{if((b|0)<=0){q=Q(Q(Q(1)/Q(b|0))*Q(0));p=q;n=p;break h}d=f;while(1){m=J[a+720>>2]+P(e,104)|0;s=N[m+8>>2];t=N[m+16>>2];u=N[m+12>>2];d=J[J[a+1120>>2]+((P(e,29873)|0)%(d|0)<<2)>>2];k=J[d+24>>2];i:{if((k|0)!=J[d+28>>2]){break i}l=k?k<<1:1;if((l|0)<=(k|0)){break i}j:{if(!l){g=0;break j}J[8369]=J[8369]+1;g=ia[J[6782]](l<<2,16)|0;k=J[d+24>>2]}k:{if((k|0)<=0){break k}h=0;b=0;if(k-1>>>0>=3){r=k&-4;i=0;while(1){j=b<<2;J[j+g>>2]=J[j+J[d+32>>2]>>2];o=j|4;J[o+g>>2]=J[o+J[d+32>>2]>>2];o=j|8;J[o+g>>2]=J[o+J[d+32>>2]>>2];j=j|12;J[j+g>>2]=J[j+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((r|0)!=(i|0)){continue}break}}j=k&3;if(!j){break k}while(1){i=b<<2;J[i+g>>2]=J[i+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((j|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}k=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=l;b=J[a+712>>2]}n=Q(n+s);q=Q(q+t);p=Q(p+u);J[J[d+32>>2]+(k<<2)>>2]=m;J[d+24>>2]=k+1;e=e+1|0;if((e|0)<(b|0)){d=J[a+1112>>2];continue}break}k=0;if((f|0)<0){break g}s=Q(Q(1)/Q(b|0));q=Q(q*s);p=Q(p*s);n=Q(n*s)}b=0;J[8369]=J[8369]+1;k=ia[J[6782]](f<<4,16)|0;if((f|0)!=1){d=f&-2;g=0;while(1){j=b<<4;e=j+k|0;J[e+12>>2]=0;N[e+8>>2]=q;N[e+4>>2]=p;N[e>>2]=n;e=(j|16)+k|0;J[e+12>>2]=0;N[e+8>>2]=q;N[e+4>>2]=p;N[e>>2]=n;b=b+2|0;g=g+2|0;if((d|0)!=(g|0)){continue}break}}if(!(f&1)){break g}b=(b<<4)+k|0;J[b+12>>2]=0;N[b+8>>2]=q;N[b+4>>2]=p;N[b>>2]=n}j=0;while(1){b=j;j=b+1|0;s=Q(Q(2)-Q(T(Q(Q(b|0)*Q(.0625)),Q(1))));o=0;e=0;while(1){l=e<<2;b=J[l+J[a+1120>>2]>>2];g=J[b+24>>2];l:{if((g|0)<=0){q=Q(0);p=Q(0);n=Q(0);break l}r=g&1;b=J[b+32>>2];m:{if((g|0)==1){n=Q(0);d=0;p=Q(0);q=Q(0);break m}x=g&-2;n=Q(0);d=0;p=Q(0);q=Q(0);h=0;while(1){m=d<<2;i=J[m+b>>2];m=J[b+(m|4)>>2];q=Q(Q(q+N[i+8>>2])+N[m+8>>2]);n=Q(Q(n+N[i+16>>2])+N[m+16>>2]);p=Q(Q(p+N[i+12>>2])+N[m+12>>2]);d=d+2|0;h=h+2|0;if((x|0)!=(h|0)){continue}break}}if(!r){break l}b=J[b+(d<<2)>>2];q=Q(q+N[b+8>>2]);n=Q(n+N[b+16>>2]);p=Q(p+N[b+12>>2])}if(g){b=(e<<4)+k|0;J[b+12>>2]=0;t=N[b+8>>2];u=n;n=Q(Q(1)/Q(g|0));y=Q(t+Q(s*Q(Q(u*n)-t)));N[b+8>>2]=y;u=N[b+4>>2];v=Q(u+Q(s*Q(Q(p*n)-u)));N[b+4>>2]=v;p=N[b>>2];n=Q(p+Q(s*Q(Q(q*n)-p)));N[b>>2]=n;q=Q(y-t);n=Q(n-p);p=Q(n*n);n=Q(v-u);i=Q(Q(q*q)+Q(p+Q(n*n)))>Q(1.1920928955078125e-7);h=J[l+J[a+1120>>2]>>2];b=J[h+24>>2];n:{if((b|0)>=0){break n}if(J[h+28>>2]<0){d=J[h+32>>2];if(!(d?!d|!K[h+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[h+36|0]=1;J[h+28>>2]=0;J[h+32>>2]=0}g=0;d=b;m=0-d&3;if(m){while(1){J[J[h+32>>2]+(d<<2)>>2]=0;d=d+1|0;g=g+1|0;if((m|0)!=(g|0)){continue}break}}if(b>>>0>4294967292){break n}while(1){b=d<<2;J[b+J[h+32>>2]>>2]=0;J[(b+J[h+32>>2]|0)+4>>2]=0;J[(b+J[h+32>>2]|0)+8>>2]=0;J[(b+J[h+32>>2]|0)+12>>2]=0;d=d+4|0;if(d){continue}break}}J[h+24>>2]=0;o=i|o}e=e+1|0;if((f|0)!=(e|0)){continue}break}l=0;e=J[a+712>>2];if((e|0)>0){while(1){r=J[a+720>>2]+P(l,104)|0;g=0;if((f|0)>=2){n=N[r+8>>2];p=N[r+12>>2];s=N[r+16>>2];q=Q(Q(Q(R(Q(N[k>>2]-n)))+Q(R(Q(N[k+4>>2]-p))))+Q(R(Q(N[k+8>>2]-s))));d=1;while(1){b=(d<<4)+k|0;t=Q(Q(Q(R(Q(N[b>>2]-n)))+Q(R(Q(N[b+4>>2]-p))))+Q(R(Q(N[b+8>>2]-s))));b=t<q;q=b?t:q;g=b?d:g;d=d+1|0;if((f|0)!=(d|0)){continue}break}}d=J[J[a+1120>>2]+(g<<2)>>2];i=J[d+24>>2];o:{if((i|0)!=J[d+28>>2]){break o}x=i?i<<1:1;if((x|0)<=(i|0)){break o}p:{if(!x){g=0;break p}J[8369]=J[8369]+1;g=ia[J[6782]](x<<2,16)|0;i=J[d+24>>2]}q:{if((i|0)<=0){break q}h=0;b=0;if(i-1>>>0>=3){z=i&-4;m=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[d+32>>2]>>2];C=e|4;J[C+g>>2]=J[C+J[d+32>>2]>>2];C=e|8;J[C+g>>2]=J[C+J[d+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[d+32>>2]>>2];b=b+4|0;m=m+4|0;if((z|0)!=(m|0)){continue}break}}e=i&3;if(!e){break q}while(1){m=b<<2;J[m+g>>2]=J[m+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}i=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=x;e=J[a+712>>2]}J[J[d+32>>2]+(i<<2)>>2]=r;J[d+24>>2]=i+1;l=l+1|0;if((l|0)<(e|0)){continue}break}}if((c|0)>(j|0)&o){continue}break}r:{if((e|0)<=0){m=0;break r}J[8369]=J[8369]+1;b=e<<2;m=ia[J[6782]](b,16)|0;qa(m,255,b)}e=J[a+1112>>2];if((e|0)>0){f=J[a+720>>2];j=J[a+1120>>2];b=0;while(1){c=J[j+(b<<2)>>2];if(J[c+24>>2]>0){e=J[c+32>>2];d=0;while(1){J[((J[e+(d<<2)>>2]-f|0)/104<<2)+m>>2]=b;d=d+1|0;if((d|0)<J[c+24>>2]){continue}break}e=J[a+1112>>2]}b=b+1|0;if((e|0)>(b|0)){continue}break}}if(J[a+752>>2]>0){i=0;while(1){b=J[a+760>>2]+P(i,44)|0;c=J[a+720>>2];d=(J[b+8>>2]-c|0)/104|0;J[A+4>>2]=d;J[A+8>>2]=(J[b+12>>2]-c|0)/104;J[A+12>>2]=(J[b+16>>2]-c|0)/104;e=0;while(1){b=e+1|0;x=(b|0)==3;r=J[(d<<2)+m>>2];c=J[(A+4|0)+((x?0:b)<<2)>>2];s:{if((r|0)==J[(c<<2)+m>>2]){break s}z=J[a+720>>2]+P(c,104)|0;c=J[J[a+1120>>2]+(r<<2)>>2];g=J[c+24>>2];t:{if((g|0)<=0){break t}f=J[c+32>>2];d=0;while(1){if((z|0)!=J[f+(d<<2)>>2]){d=d+1|0;if((g|0)!=(d|0)){continue}break t}break}if((d|0)!=(g|0)){break s}}u:{if(J[c+28>>2]!=(g|0)){break u}o=g?g<<1:1;if((o|0)<=(g|0)){break u}v:{if(!o){h=0;break v}J[8369]=J[8369]+1;h=ia[J[6782]](o<<2,16)|0;g=J[c+24>>2]}w:{if((g|0)<=0){break w}j=0;d=0;if(g-1>>>0>=3){C=g&-4;l=0;while(1){f=d<<2;J[f+h>>2]=J[f+J[c+32>>2]>>2];D=f|4;J[D+h>>2]=J[D+J[c+32>>2]>>2];D=f|8;J[D+h>>2]=J[D+J[c+32>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+32>>2]>>2];d=d+4|0;l=l+4|0;if((C|0)!=(l|0)){continue}break}}f=g&3;if(!f){break w}while(1){l=d<<2;J[l+h>>2]=J[l+J[c+32>>2]>>2];d=d+1|0;j=j+1|0;if((f|0)!=(j|0)){continue}break}}f=J[c+32>>2];if(!(!f|!K[c+36|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}g=J[c+24>>2]}J[c+32>>2]=h;H[c+36|0]=1;J[c+28>>2]=o}J[J[c+32>>2]+(g<<2)>>2]=z;J[c+24>>2]=g+1}c=J[(A+4|0)+((e+2>>>0)%3<<2)>>2];x:{if((r|0)==J[(c<<2)+m>>2]){break x}l=J[a+720>>2]+P(c,104)|0;c=J[J[a+1120>>2]+(r<<2)>>2];g=J[c+24>>2];y:{if((g|0)<=0){break y}e=J[c+32>>2];d=0;while(1){if((l|0)!=J[e+(d<<2)>>2]){d=d+1|0;if((g|0)!=(d|0)){continue}break y}break}if((d|0)!=(g|0)){break x}}z:{if(J[c+28>>2]!=(g|0)){break z}j=g?g<<1:1;if((j|0)<=(g|0)){break z}A:{if(!j){h=0;break A}J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;g=J[c+24>>2]}B:{if((g|0)<=0){break B}e=0;d=0;if(g-1>>>0>=3){o=g&-4;r=0;while(1){f=d<<2;J[f+h>>2]=J[f+J[c+32>>2]>>2];z=f|4;J[z+h>>2]=J[z+J[c+32>>2]>>2];z=f|8;J[z+h>>2]=J[z+J[c+32>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+32>>2]>>2];d=d+4|0;r=r+4|0;if((o|0)!=(r|0)){continue}break}}f=g&3;if(!f){break B}while(1){r=d<<2;J[r+h>>2]=J[r+J[c+32>>2]>>2];d=d+1|0;e=e+1|0;if((f|0)!=(e|0)){continue}break}}e=J[c+32>>2];if(!(!e|!K[c+36|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}g=J[c+24>>2]}J[c+32>>2]=h;H[c+36|0]=1;J[c+28>>2]=j}J[J[c+32>>2]+(g<<2)>>2]=l;J[c+24>>2]=g+1}if(!x){d=J[(A+4|0)+(b<<2)>>2];e=b;continue}break}i=i+1|0;if((i|0)<J[a+752>>2]){continue}break}e=J[a+1112>>2]}if((e|0)<2){break d}J[8369]=J[8369]+1;d=ia[J[6782]](384,16)|0;I[d+376>>1]=0;J[d+368>>2]=1120403456;J[d+372>>2]=1008981770;J[d+348>>2]=0;J[d+352>>2]=0;J[d+12>>2]=0;H[d+16|0]=1;H[d+36|0]=1;J[d+4>>2]=0;J[d+8>>2]=0;J[d+32>>2]=0;H[d+56|0]=1;J[d+24>>2]=0;J[d+28>>2]=0;J[d+52>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+364>>2]=0;J[d+356>>2]=0;J[d+360>>2]=0;e=J[a+712>>2];if((e|0)<=0){break e}J[8369]=J[8369]+1;c=ia[J[6782]](e<<2,16)|0;g=J[d+24>>2];C:{if((g|0)<=0){break C}f=0;b=0;if(g-1>>>0>=3){h=g&-4;i=0;while(1){j=b<<2;J[j+c>>2]=J[j+J[d+32>>2]>>2];l=j|4;J[l+c>>2]=J[l+J[d+32>>2]>>2];l=j|8;J[l+c>>2]=J[l+J[d+32>>2]>>2];j=j|12;J[j+c>>2]=J[j+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((h|0)!=(i|0)){continue}break}}j=g&3;if(!j){break C}while(1){g=b<<2;J[g+c>>2]=J[g+J[d+32>>2]>>2];b=b+1|0;f=f+1|0;if((j|0)!=(f|0)){continue}break}}b=J[d+32>>2];if(!(b?!b|!K[d+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+32>>2]=c;H[d+36|0]=1;J[d+28>>2]=e;b=J[a+712>>2];if((b|0)<=0){break e}f=J[d+24>>2];j=0;while(1){l=J[a+720>>2]+P(j,104)|0;D:{if((e|0)!=(f|0)){break D}c=e?e<<1:1;if((c|0)<=(e|0)){f=e;break D}E:{if(!c){g=0;break E}J[8369]=J[8369]+1;g=ia[J[6782]](c<<2,16)|0;e=J[d+24>>2]}f=e;F:{if((e|0)<=0){break F}h=0;b=0;if(f-1>>>0>=3){r=f&-4;i=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[d+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[d+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[d+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((r|0)!=(i|0)){continue}break}}e=f&3;if(!e){break F}while(1){i=b<<2;J[i+g>>2]=J[i+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=c;b=J[a+712>>2];e=c}J[J[d+32>>2]+(f<<2)>>2]=l;f=f+1|0;J[d+24>>2]=f;j=j+1|0;if((j|0)<(b|0)){continue}break}break e}b=J[a+772>>2];if(b){G:{if((b|0)<=(f|0)){break G}if((b|0)>J[a+1116>>2]){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;j=J[a+1112>>2];H:{if((j|0)<=0){break H}h=0;d=0;if(j-1>>>0>=3){g=j&-4;k=0;while(1){e=d<<2;J[e+c>>2]=J[e+J[a+1120>>2]>>2];i=e|4;J[i+c>>2]=J[i+J[a+1120>>2]>>2];i=e|8;J[i+c>>2]=J[i+J[a+1120>>2]>>2];e=e|12;J[e+c>>2]=J[e+J[a+1120>>2]>>2];d=d+4|0;k=k+4|0;if((g|0)!=(k|0)){continue}break}}e=j&3;if(!e){break H}while(1){j=d<<2;J[j+c>>2]=J[j+J[a+1120>>2]>>2];d=d+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}e=J[a+1120>>2];if(!(e?!e|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+1120>>2]=c;H[a+1124|0]=1;J[a+1116>>2]=b}c=b+(f^-1)|0;e=b-f&3;if(e){d=0;while(1){J[J[a+1120>>2]+(f<<2)>>2]=0;f=f+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(c>>>0<3){break G}while(1){c=f<<2;J[c+J[a+1120>>2]>>2]=0;J[(c+J[a+1120>>2]|0)+4>>2]=0;J[(c+J[a+1120>>2]|0)+8>>2]=0;J[(c+J[a+1120>>2]|0)+12>>2]=0;f=f+4|0;if((b|0)!=(f|0)){continue}break}}J[a+1112>>2]=b;if((b|0)>0){b=0;while(1){J[8369]=J[8369]+1;c=ia[J[6782]](384,16)|0;H[c+36|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+32>>2]=0;H[c+56|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;J[c+52>>2]=0;J[c+348>>2]=0;J[c+352>>2]=0;J[c+44>>2]=0;J[c+48>>2]=0;H[c+376|0]=0;J[c+368>>2]=1120403456;J[c+372>>2]=1008981770;J[c+356>>2]=0;J[c+360>>2]=0;J[c+364>>2]=0;e=b<<2;J[e+J[a+1120>>2]>>2]=c;H[J[e+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;if((b|0)<J[a+1112>>2]){continue}break}}if(J[a+772>>2]<=0){break c}m=0;while(1){d=P(m,104);l=d+J[a+780>>2]|0;j=m<<2;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];I:{if((f|0)!=J[c+28>>2]){break I}i=f?f<<1:1;if((i|0)<=(f|0)){break I}J:{if(!i){g=0;break J}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}K:{if((f|0)<=0){break K}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break K}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+8>>2];J[c+24>>2]=f+1;l=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];L:{if((f|0)!=J[c+28>>2]){break L}i=f?f<<1:1;if((i|0)<=(f|0)){break L}M:{if(!i){g=0;break M}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}N:{if((f|0)<=0){break N}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break N}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+12>>2];J[c+24>>2]=f+1;l=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];O:{if((f|0)!=J[c+28>>2]){break O}i=f?f<<1:1;if((i|0)<=(f|0)){break O}P:{if(!i){g=0;break P}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}Q:{if((f|0)<=0){break Q}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break Q}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+16>>2];J[c+24>>2]=f+1;i=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];R:{if((f|0)!=J[c+28>>2]){break R}d=f?f<<1:1;if((d|0)<=(f|0)){break R}S:{if(!d){g=0;break S}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}T:{if((f|0)<=0){break T}h=0;b=0;if(f-1>>>0>=3){j=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];l=e|4;J[l+g>>2]=J[l+J[c+32>>2]>>2];l=e|8;J[l+g>>2]=J[l+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}e=f&3;if(!e){break T}while(1){j=b<<2;J[j+g>>2]=J[j+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[i+20>>2];J[c+24>>2]=f+1;m=m+1|0;if((m|0)<J[a+772>>2]){continue}break}break c}b=J[a+752>>2];U:{if((b|0)<=(f|0)){break U}if((b|0)>J[a+1116>>2]){V:{if(!b){g=0;break V}J[8369]=J[8369]+1;g=ia[J[6782]](b<<2,16)|0;e=J[a+1112>>2];if((e|0)<=0){break V}h=0;d=0;if(e-1>>>0>=3){j=e&-4;k=0;while(1){c=d<<2;J[c+g>>2]=J[c+J[a+1120>>2]>>2];i=c|4;J[i+g>>2]=J[i+J[a+1120>>2]>>2];i=c|8;J[i+g>>2]=J[i+J[a+1120>>2]>>2];c=c|12;J[c+g>>2]=J[c+J[a+1120>>2]>>2];d=d+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}c=e&3;if(!c){break V}while(1){e=d<<2;J[e+g>>2]=J[e+J[a+1120>>2]>>2];d=d+1|0;h=h+1|0;if((c|0)!=(h|0)){continue}break}}c=J[a+1120>>2];if(!(c?!c|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=b}c=b+(f^-1)|0;e=b-f&3;if(e){d=0;while(1){J[J[a+1120>>2]+(f<<2)>>2]=0;f=f+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(c>>>0<3){break U}while(1){c=f<<2;J[c+J[a+1120>>2]>>2]=0;J[(c+J[a+1120>>2]|0)+4>>2]=0;J[(c+J[a+1120>>2]|0)+8>>2]=0;J[(c+J[a+1120>>2]|0)+12>>2]=0;f=f+4|0;if((b|0)!=(f|0)){continue}break}}J[a+1112>>2]=b;if((b|0)>0){b=0;while(1){J[8369]=J[8369]+1;c=ia[J[6782]](384,16)|0;H[c+36|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+32>>2]=0;H[c+56|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;J[c+52>>2]=0;J[c+348>>2]=0;J[c+352>>2]=0;J[c+44>>2]=0;J[c+48>>2]=0;H[c+376|0]=0;J[c+368>>2]=1120403456;J[c+372>>2]=1008981770;J[c+356>>2]=0;J[c+360>>2]=0;J[c+364>>2]=0;e=b<<2;J[e+J[a+1120>>2]>>2]=c;H[J[e+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;if((b|0)<J[a+1112>>2]){continue}break}}if(J[a+752>>2]<=0){break c}m=0;while(1){j=P(m,44);l=j+J[a+760>>2]|0;i=m<<2;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];W:{if((f|0)!=J[c+28>>2]){break W}d=f?f<<1:1;if((d|0)<=(f|0)){break W}X:{if(!d){g=0;break X}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}Y:{if((f|0)<=0){break Y}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break Y}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[l+8>>2];J[c+24>>2]=f+1;l=j+J[a+760>>2]|0;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];Z:{if((f|0)!=J[c+28>>2]){break Z}d=f?f<<1:1;if((d|0)<=(f|0)){break Z}_:{if(!d){g=0;break _}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}$:{if((f|0)<=0){break $}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break $}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[l+12>>2];J[c+24>>2]=f+1;j=j+J[a+760>>2]|0;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];aa:{if((f|0)!=J[c+28>>2]){break aa}d=f?f<<1:1;if((d|0)<=(f|0)){break aa}ba:{if(!d){g=0;break ba}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}ca:{if((f|0)<=0){break ca}h=0;b=0;if(f-1>>>0>=3){i=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];l=e|4;J[l+g>>2]=J[l+J[c+32>>2]>>2];l=e|8;J[l+g>>2]=J[l+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=f&3;if(!e){break ca}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[j+16>>2];J[c+24>>2]=f+1;m=m+1|0;if((m|0)<J[a+752>>2]){continue}break}break c}f=J[a+1112>>2];da:{if((f|0)!=J[a+1116>>2]){break da}e=f?f<<1:1;if((e|0)<=(f|0)){break da}ea:{if(!e){g=0;break ea}J[8369]=J[8369]+1;g=ia[J[6782]](e<<2,16)|0;f=J[a+1112>>2]}fa:{if((f|0)<=0){break fa}h=0;b=0;if(f-1>>>0>=3){j=f&-4;i=0;while(1){c=b<<2;J[c+g>>2]=J[c+J[a+1120>>2]>>2];l=c|4;J[l+g>>2]=J[l+J[a+1120>>2]>>2];l=c|8;J[l+g>>2]=J[l+J[a+1120>>2]>>2];c=c|12;J[c+g>>2]=J[c+J[a+1120>>2]>>2];b=b+4|0;i=i+4|0;if((j|0)!=(i|0)){continue}break}}c=f&3;if(!c){break fa}while(1){j=b<<2;J[j+g>>2]=J[j+J[a+1120>>2]>>2];b=b+1|0;h=h+1|0;if((c|0)!=(h|0)){continue}break}}b=J[a+1120>>2];if(!(!b|!K[a+1124|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[a+1112>>2]}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=e}c=f<<2;J[c+J[a+1120>>2]>>2]=d;e=f+1|0;J[a+1112>>2]=e;b=J[a+1120>>2];f=J[b>>2];d=b;b=b+c|0;J[d>>2]=J[b>>2];J[b>>2]=f}if((e|0)>0){d=0;while(1){if(!J[J[J[a+1120>>2]+(d<<2)>>2]+24>>2]){ng(a,d);d=d-1|0;e=J[a+1112>>2]}d=d+1|0;if((e|0)>(d|0)){continue}break}}if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}if(!k){break c}if(k){J[8370]=J[8370]+1;ia[J[6783]](k)}}ga:{if(!J[a+1112>>2]){i=0;break ga}j=0;if(J[a+1112>>2]>0){while(1){d=J[J[a+1120>>2]+(j<<2)>>2];J[d+128>>2]=0;k=J[d+24>>2];f=k;c=J[d+4>>2];if((f|0)>(c|0)){ha:{if((k|0)<=J[d+8>>2]){e=J[d+12>>2];break ha}ia:{if(!k){e=0;b=c;break ia}J[8369]=J[8369]+1;e=ia[J[6782]](k<<2,16)|0;b=J[d+4>>2]}g=J[d+12>>2];f=b;ja:{ka:{if((b|0)>0){h=0;b=0;if(f-1>>>0>=3){l=f&-4;i=0;while(1){m=b<<2;N[m+e>>2]=N[g+m>>2];r=m|4;N[r+e>>2]=N[g+r>>2];r=m|8;N[r+e>>2]=N[g+r>>2];m=m|12;N[m+e>>2]=N[g+m>>2];b=b+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}f=f&3;if(!f){break ka}while(1){i=b<<2;N[i+e>>2]=N[g+i>>2];b=b+1|0;h=h+1|0;if((f|0)!=(h|0)){continue}break}break ka}if(!g){break ja}}if(!K[d+16|0]){break ja}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[d+12>>2]=e;H[d+16|0]=1;J[d+8>>2]=k}qa((c<<2)+e|0,0,k-c<<2);f=J[d+24>>2]}J[d+4>>2]=k;la:{ma:{i=(f|0)>0;na:{if(!i){s=Q(Q(1)/N[d+128>>2]);N[d+128>>2]=s;break na}c=J[d+32>>2];e=J[d+12>>2];b=0;while(1){g=b<<2;n=N[J[g+c>>2]+88>>2];oa:{if(n==Q(0)){H[d+376|0]=1;n=Q(0xde0b6b000000000);break oa}n=Q(Q(1)/n)}N[e+g>>2]=n;n=Q(n+N[d+128>>2]);N[d+128>>2]=n;b=b+1|0;if((f|0)!=(b|0)){continue}break}s=Q(Q(1)/n);N[d+128>>2]=s;if((f|0)>0){break ma}}p=Q(0);n=Q(0);q=Q(0);break la}m=f&1;c=J[d+32>>2];g=J[d+12>>2];pa:{if((f|0)==1){q=Q(0);b=0;n=Q(0);p=Q(0);break pa}l=f&-2;q=Q(0);b=0;n=Q(0);p=Q(0);e=0;while(1){h=b<<2;k=J[h+c>>2];t=N[g+h>>2];r=h|4;h=J[r+c>>2];u=N[g+r>>2];p=Q(Q(p+Q(N[k+8>>2]*t))+Q(N[h+8>>2]*u));q=Q(Q(q+Q(t*N[k+16>>2]))+Q(u*N[h+16>>2]));n=Q(Q(n+Q(t*N[k+12>>2]))+Q(u*N[h+12>>2]));b=b+2|0;e=e+2|0;if((l|0)!=(e|0)){continue}break}}if(!m){break la}e=c;c=b<<2;b=J[e+c>>2];t=N[c+g>>2];p=Q(p+Q(N[b+8>>2]*t));q=Q(q+Q(t*N[b+16>>2]));n=Q(n+Q(t*N[b+12>>2]))}J[d+316>>2]=0;J[d+320>>2]=0;J[d+132>>2]=0;J[d+136>>2]=0;J[d+240>>2]=0;E=Q(s*q);N[d+236>>2]=E;F=Q(s*n);N[d+232>>2]=F;G=Q(s*p);N[d+228>>2]=G;J[d+324>>2]=0;J[d+328>>2]=0;J[d+332>>2]=0;J[d+336>>2]=0;J[d+340>>2]=0;J[d+344>>2]=0;J[d+348>>2]=0;J[d+140>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+152>>2]=0;J[d+156>>2]=0;J[d+160>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+172>>2]=0;J[d+176>>2]=0;qa:{if(!i){t=N[d+152>>2];p=N[d+156>>2];q=N[d+140>>2];s=N[d+136>>2];n=N[d+132>>2];u=Q(0);break qa}p=N[d+156>>2];q=N[d+140>>2];s=N[d+136>>2];t=N[d+152>>2];e=J[d+32>>2];n=N[d+132>>2];g=J[d+12>>2];b=0;u=Q(0);while(1){h=b<<2;c=J[h+e>>2];w=N[c+12>>2];B=Q(N[c+8>>2]-G);y=N[g+h>>2];L=Q(B*Q(-y));v=Q(N[c+16>>2]-E);q=Q(Q(L*v)+q);N[d+140>>2]=q;w=Q(w-F);s=Q(Q(L*w)+s);N[d+136>>2]=s;p=Q(p-Q(Q(w*y)*v));N[d+156>>2]=p;B=Q(B*B);w=Q(w*w);u=Q(Q(y*Q(B+w))+u);N[d+172>>2]=u;v=Q(v*v);t=Q(Q(y*Q(B+v))+t);N[d+152>>2]=t;n=Q(Q(y*Q(w+v))+n);N[d+132>>2]=n;b=b+1|0;if((f|0)!=(b|0)){continue}break}}J[d+176>>2]=0;J[d+60>>2]=1065353216;J[d+160>>2]=0;J[d+144>>2]=0;b=d- -64|0;J[b>>2]=0;J[b+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+84>>2]=0;J[d+88>>2]=0;J[d+80>>2]=1065353216;J[d+92>>2]=0;J[d+96>>2]=0;B=Q(Q(n*t)-Q(s*s));y=Q(Q(s*p)-Q(t*q));v=Q(Q(t*u)-Q(p*p));w=Q(Q(p*q)-Q(u*s));t=Q(Q(1)/Q(Q(q*y)+Q(Q(n*v)+Q(s*w))));N[d+172>>2]=B*t;p=Q(Q(Q(q*s)-Q(p*n))*t);N[d+168>>2]=p;s=Q(y*t);N[d+164>>2]=s;N[d+156>>2]=p;N[d+152>>2]=Q(Q(n*u)-Q(q*q))*t;n=Q(w*t);N[d+148>>2]=n;N[d+140>>2]=s;N[d+136>>2]=n;N[d+132>>2]=v*t;J[d+100>>2]=1065353216;J[d+104>>2]=0;b=J[d+232>>2];J[d+108>>2]=J[d+228>>2];J[d+112>>2]=b;b=J[d+240>>2];J[d+116>>2]=J[d+236>>2];J[d+120>>2]=b;e=J[d+44>>2];c=J[d+24>>2];if(!((e|0)>=(c|0)|(c|0)<=J[d+48>>2])){ra:{if(!c){f=0;break ra}J[8369]=J[8369]+1;f=ia[J[6782]](c<<4,16)|0;e=J[d+44>>2]}sa:{if((e|0)<=0){break sa}b=0;if((e|0)!=1){m=e&-2;k=0;while(1){i=b<<4;g=i+f|0;h=i+J[d+52>>2]|0;l=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=l;l=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=l;h=i|16;g=h+f|0;h=h+J[d+52>>2]|0;i=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=i;i=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=i;b=b+2|0;k=k+2|0;if((m|0)!=(k|0)){continue}break}}if(!(e&1)){break sa}e=b<<4;b=e+f|0;e=e+J[d+52>>2]|0;g=J[e+4>>2];J[b>>2]=J[e>>2];J[b+4>>2]=g;g=J[e+12>>2];J[b+8>>2]=J[e+8>>2];J[b+12>>2]=g}b=J[d+52>>2];if(!(b?!b|!K[d+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+52>>2]=f;H[d+56|0]=1;J[d+48>>2]=c}J[d+44>>2]=c;if((c|0)>0){b=0;while(1){c=J[J[d+32>>2]+(b<<2)>>2];n=N[c+12>>2];q=N[c+16>>2];p=N[c+8>>2];s=N[d+232>>2];t=N[d+236>>2];u=N[d+228>>2];c=J[d+52>>2]+(b<<4)|0;J[c+12>>2]=0;N[c>>2]=p-u;N[c+8>>2]=q-t;N[c+4>>2]=n-s;b=b+1|0;if((b|0)<J[d+44>>2]){continue}break}}j=j+1|0;if((j|0)<J[a+1112>>2]){continue}break}}lk(a);i=J[a+1112>>2];g=P(i,i);f=J[a+1132>>2];if((g|0)>(f|0)){ta:{if((g|0)<=J[a+1136>>2]){b=J[a+1140>>2];break ta}ua:{if(!g){b=0;c=f;break ua}J[8369]=J[8369]+1;b=ia[J[6782]](g,16)|0;c=J[a+1132>>2]}j=J[a+1140>>2];va:{if((c|0)>0){e=0;d=0;if(c-1>>>0>=3){k=c&-4;h=0;while(1){H[b+d|0]=K[d+j|0];i=d|1;H[i+b|0]=K[i+j|0];i=d|2;H[i+b|0]=K[i+j|0];i=d|3;H[i+b|0]=K[i+j|0];d=d+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}c=c&3;if(!c){break va}while(1){H[b+d|0]=K[d+j|0];d=d+1|0;e=e+1|0;if((c|0)!=(e|0)){continue}break}break va}if(j){break va}J[a+1140>>2]=b;J[a+1136>>2]=g;H[a+1144|0]=1;break ta}if(j?K[a+1144|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[a+1140>>2]=b;H[a+1144|0]=1;J[a+1136>>2]=g}qa(b+f|0,0,g-f|0);i=J[a+1112>>2]}J[a+1132>>2]=g;if((i|0)<=0){break ga}m=J[a+1140>>2];c=J[a+1120>>2];j=0;while(1){e=J[c+(j<<2)>>2];J[e+380>>2]=j;b=J[e+24>>2];l=(b|0)>0?b:0;a=(b|0)<=0;k=0;while(1){f=a;wa:{if((b|0)<=0){break wa}r=J[c+(k<<2)>>2];g=J[r+24>>2];h=0;while(1){if((g|0)>0){o=J[J[e+32>>2]+(h<<2)>>2];x=J[r+32>>2];d=0;while(1){if((o|0)==J[x+(d<<2)>>2]){break wa}d=d+1|0;if((g|0)!=(d|0)){continue}break}}h=h+1|0;f=(l|0)==(h|0);if(!f){continue}break}}H[m+(P(i,k)+j|0)|0]=(f^-1)&1;k=k+1|0;if((k|0)!=(i|0)){continue}break}j=j+1|0;if((j|0)!=(i|0)){continue}break}}ga=A+16|0;return i}function My(a){a=a|0;var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=0,B=0,C=0,D=0,E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0;Kk(a);if(!(!(ia[J[J[a>>2]+20>>2]](a)|0)|J[a+328>>2]<=0)){while(1){k=J[J[a+336>>2]+(E<<2)>>2];a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}d=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[d>>2]+48>>2]](d)&1)){break a}i=J[a+72>>2];d=ga+-64|0;ga=d;b:{if(!K[k+473|0]){break b}c=J[k+532>>2];J[d+24>>2]=J[k+528>>2];J[d+28>>2]=c;c=J[k+524>>2];J[d+16>>2]=J[k+520>>2];J[d+20>>2]=c;f=N[k+576>>2];h=N[k+568>>2];g=N[k+572>>2];l=N[k+544>>2];m=N[k+536>>2];p=N[k+540>>2];r=N[k+624>>2];s=N[k+592>>2];t=N[k+608>>2];q=N[k+620>>2];u=N[k+588>>2];v=N[k+604>>2];w=N[k+616>>2];y=N[k+560>>2];z=N[k+584>>2];F=N[k+552>>2];G=N[k+600>>2];I=N[k+556>>2];J[d+60>>2]=0;L=Q(Q(r*f)+Q(Q(s*h)+Q(t*g)));T=Q(L*Q(0));M=Q(Q(w*f)+Q(Q(z*h)+Q(G*g)));O=Q(Q(q*f)+Q(Q(u*h)+Q(v*g)));U=Q(O*Q(0));h=Q(T+Q(M+U));R=Q(Q(r*l)+Q(Q(s*m)+Q(p*t)));V=Q(R*Q(0));S=Q(Q(w*l)+Q(Q(z*m)+Q(G*p)));p=Q(Q(q*l)+Q(Q(u*m)+Q(p*v)));m=Q(p*Q(0));g=Q(V+Q(S+m));r=Q(Q(r*y)+Q(Q(s*F)+Q(t*I)));W=Q(r*Q(0));s=Q(Q(w*y)+Q(Q(z*F)+Q(G*I)));t=Q(Q(q*y)+Q(Q(u*F)+Q(v*I)));q=Q(t*Q(0));l=Q(W+Q(s+q));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=N[d+24>>2]+Q(Q(h*f)*Q(10));N[d+52>>2]=N[d+20>>2]+Q(Q(l*f)*Q(10));N[d+48>>2]=N[d+16>>2]+Q(Q(g*f)*Q(10));J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=1065353216;J[d+36>>2]=0;c=d+16|0;b=d+48|0;j=d+32|0;ia[J[J[i>>2]+8>>2]](i,c,b,j);J[d+60>>2]=0;u=Q(M*Q(0));h=Q(T+Q(u+O));v=Q(S*Q(0));g=Q(V+Q(v+p));w=Q(s*Q(0));l=Q(W+Q(w+t));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=Q(Q(h*f)*Q(10))+N[d+24>>2];N[d+52>>2]=Q(Q(l*f)*Q(10))+N[d+20>>2];N[d+48>>2]=Q(Q(g*f)*Q(10))+N[d+16>>2];J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=1065353216;ia[J[J[i>>2]+8>>2]](i,c,b,j);J[d+60>>2]=0;h=Q(L+Q(u+U));g=Q(Q(v+m)+R);l=Q(r+Q(w+q));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=Q(Q(h*f)*Q(10))+N[d+24>>2];N[d+52>>2]=Q(Q(l*f)*Q(10))+N[d+20>>2];N[d+48>>2]=Q(Q(g*f)*Q(10))+N[d+16>>2];J[d+40>>2]=1065353216;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;ia[J[J[i>>2]+8>>2]](i,c,b,j);if(J[k+484>>2]<=0){break b}c=0;while(1){b=J[k+492>>2]+(c<<4)|0;g=N[b+8>>2];l=N[b>>2];m=N[b+4>>2];q=N[d+16>>2];h=N[d+20>>2];f=N[d+24>>2];J[d+8>>2]=1065353216;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;J[d+60>>2]=0;f=Q(f+Q(Q(L*g)+Q(Q(M*l)+Q(O*m))));N[d+56>>2]=f;h=Q(h+Q(Q(r*g)+Q(Q(s*l)+Q(t*m))));N[d+52>>2]=h;g=Q(q+Q(Q(R*g)+Q(Q(S*l)+Q(p*m))));N[d+48>>2]=g+Q(-.10000000149011612);J[d+44>>2]=0;l=Q(f+Q(0));N[d+40>>2]=l;m=Q(h+Q(0));N[d+36>>2]=m;N[d+32>>2]=g+Q(.10000000149011612);b=d+48|0;j=d+32|0;ia[J[J[i>>2]+8>>2]](i,b,j,d);J[d+60>>2]=0;N[d+56>>2]=f;N[d+52>>2]=h+Q(-.10000000149011612);N[d+48>>2]=g;J[d+44>>2]=0;N[d+40>>2]=l;N[d+36>>2]=h+Q(.10000000149011612);l=Q(g+Q(0));N[d+32>>2]=l;ia[J[J[i>>2]+8>>2]](i,b,j,d);J[d+60>>2]=0;N[d+56>>2]=f+Q(-.10000000149011612);N[d+52>>2]=h;N[d+48>>2]=g;J[d+44>>2]=0;N[d+40>>2]=f+Q(.10000000149011612);N[d+36>>2]=m;N[d+32>>2]=l;ia[J[J[i>>2]+8>>2]](i,b,j,d);c=c+1|0;if((c|0)<J[k+484>>2]){continue}break}}ga=d- -64|0;j=J[a+72>>2];o=J[a+344>>2];d=0;C=0;b=ga-176|0;ga=b;J[b+152>>2]=0;J[b+156>>2]=0;J[b+144>>2]=0;J[b+148>>2]=0;J[b+136>>2]=1065353216;J[b+140>>2]=0;J[b+128>>2]=1065353216;J[b+132>>2]=1065353216;J[b+120>>2]=0;J[b+124>>2]=0;J[b+112>>2]=1065353216;J[b+116>>2]=0;c:{if(o&256){J[8384]=1805;J[8385]=0;e=J[k+1112>>2];if((e|0)<=0){break c}while(1){x=C<<2;if(K[J[x+J[k+1120>>2]>>2]+377|0]){D=0;c=jI(J[8384],J[8385],1284865837,1481765933)+1|0;d=ha;J[8384]=c;d=c?d:d+1|0;J[8385]=d;i=jI(J[8384],J[8385],1284865837,1481765933)+1|0;c=ha;J[8384]=i;c=i?c:c+1|0;J[8385]=c;i=jI(J[8384],J[8385],1284865837,1481765933)+1|0;e=ha;e=i?e:e+1|0;J[8384]=i;J[8385]=e;J[b+172>>2]=0;f=Q(Q(e>>>1|0)*Q(4.656612873077393e-10));m=f;q=Q(f*f);f=Q(Q(d>>>1|0)*Q(4.656612873077393e-10));h=Q(Q(c>>>1|0)*Q(4.656612873077393e-10));g=Q(Q(1)/Q(Y(Q(q+Q(Q(f*f)+Q(h*h))))));N[b+168>>2]=Q(m*g)*Q(.75);N[b+164>>2]=Q(h*g)*Q(.75);N[b+160>>2]=Q(f*g)*Q(.75);n=0;d=J[J[x+J[k+1120>>2]>>2]+24>>2];d:{if((d|0)<=0){break d}e=0;J[8369]=J[8369]+1;n=ia[J[6782]](d<<4,16)|0;if((d|0)!=1){X=d&-2;i=0;while(1){c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(e<<2)>>2];B=J[c+12>>2];A=(e<<4)+n|0;J[A>>2]=J[c+8>>2];J[A+4>>2]=B;B=J[c+20>>2];J[A+8>>2]=J[c+16>>2];J[A+12>>2]=B;c=e|1;A=(c<<4)+n|0;c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(c<<2)>>2];B=J[c+12>>2];J[A>>2]=J[c+8>>2];J[A+4>>2]=B;B=J[c+20>>2];J[A+8>>2]=J[c+16>>2];J[A+12>>2]=B;e=e+2|0;i=i+2|0;if((X|0)!=(i|0)){continue}break}}if(!(d&1)){break d}i=(e<<4)+n|0;c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(e<<2)>>2];e=J[c+12>>2];J[i>>2]=J[c+8>>2];J[i+4>>2]=e;e=J[c+20>>2];J[i+8>>2]=J[c+16>>2];J[i+12>>2]=e}J[b+60>>2]=0;H[b+64|0]=1;H[b+84|0]=1;J[b+52>>2]=0;J[b+56>>2]=0;J[b+80>>2]=0;H[b+104|0]=1;J[b+72>>2]=0;J[b+76>>2]=0;J[b+100>>2]=0;J[b+92>>2]=0;J[b+96>>2]=0;eg(b+48|0,n,d);i=J[b+92>>2];if((i|0)>0){while(1){x=J[b+80>>2]+P(J[J[b+100>>2]+(D<<2)>>2],12)|0;d=P(J[x+4>>2],12)+x|0;e=P(J[d>>2],12)+d|0;if((e|0)!=(x|0)){c=J[d+8>>2];d=J[x+8>>2];while(1){A=c<<4;c=J[b+60>>2];i=J[e+8>>2];ia[J[J[j>>2]+28>>2]](j,A+c|0,c+(d<<4)|0,c+(i<<4)|0,b+160|0,Q(1));c=d;d=i;i=P(J[e+4>>2],12)+e|0;e=P(J[i>>2],12)+i|0;if((x|0)!=(e|0)){continue}break}i=J[b+92>>2]}D=D+1|0;if((i|0)>(D|0)){continue}break}}d=J[b+100>>2];if(!(d?!d|!K[b+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[b+100>>2]=0;H[b+104|0]=1;J[b+92>>2]=0;J[b+96>>2]=0;d=J[b+80>>2];if(!(d?!d|!K[b+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[b+80>>2]=0;H[b+84|0]=1;J[b+72>>2]=0;J[b+76>>2]=0;d=J[b+60>>2];if(!(d?!d|!K[b+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}e=J[k+1112>>2]}C=C+1|0;if((C|0)<(e|0)){continue}break}break c}e:{if(!(o&1)){break e}i=J[k+712>>2];if((i|0)<=0){break e}while(1){c=J[k+720>>2]+P(d,104)|0;if(H[J[c+4>>2]+16|0]&1){f=N[c+8>>2];i=J[c+16>>2];J[b+52>>2]=J[c+12>>2];J[b+56>>2]=i;J[b+60>>2]=0;N[b+48>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.10000000149011612);J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;i=b+48|0;e=b+160|0;n=b+32|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+12>>2];h=N[c+8>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(.10000000149011612);N[b+160>>2]=f+Q(0);J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+16>>2];x=J[c+8>>2];C=J[c+12>>2];J[b+60>>2]=0;J[b+48>>2]=x;J[b+52>>2]=C;N[b+56>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(.10000000149011612);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(0);J[b+40>>2]=1065353216;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[j>>2]+8>>2]](j,i,e,n);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}f:{if(!(o&2)){break f}i=J[k+732>>2];if((i|0)<=0){break f}e=0;while(1){d=J[k+740>>2]+P(e,52)|0;if(H[J[d+4>>2]+16|0]&1){ia[J[J[j>>2]+8>>2]](j,J[d+8>>2]+8|0,J[d+12>>2]+8|0,b+144|0);i=J[k+732>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}g:{if(!(o&16)){break g}i=J[k+712>>2];if((i|0)<=0){break g}d=0;while(1){c=J[k+720>>2]+P(d,104)|0;if(H[J[c+4>>2]+16|0]&1){f=N[c+72>>2];h=N[c+76>>2];g=N[c+80>>2];l=N[c+8>>2];m=N[c+12>>2];p=N[c+16>>2];J[b+60>>2]=0;g=Q(g*Q(.5));N[b+56>>2]=p+g;h=Q(h*Q(.5));N[b+52>>2]=m+h;f=Q(f*Q(.5));N[b+48>>2]=l+f;i=c+8|0;e=b+48|0;ia[J[J[j>>2]+8>>2]](j,i,e,b+128|0);l=N[c+8>>2];m=N[c+12>>2];p=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=p-g;N[b+52>>2]=m-h;N[b+48>>2]=l-f;J[b+172>>2]=0;N[b+168>>2]=N[b+136>>2]*Q(.5);N[b+164>>2]=N[b+132>>2]*Q(.5);N[b+160>>2]=N[b+128>>2]*Q(.5);ia[J[J[j>>2]+8>>2]](j,i,e,b+160|0);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}h:{if(!(o&32)){break h}if(!K[33472]){J[8357]=0;J[8358]=0;J[8356]=1065353216;J[8359]=0;J[8360]=0;J[8362]=0;J[8363]=0;J[8361]=1065353216;J[8364]=0;J[8365]=0;J[8366]=1065353216;J[8367]=0;H[33472]=1}if(J[k+812>>2]<=0){break h}d=0;while(1){c=J[k+820>>2]+P(d,104)|0;r=N[c+20>>2];f=N[c+12>>2];i=J[c+24>>2];h=N[i+16>>2];g=N[c+8>>2];l=N[i+12>>2];m=N[c+4>>2];p=N[i+8>>2];J[b+60>>2]=0;q=m;m=Q(r+Q(Q(h*f)+Q(Q(p*m)+Q(l*g))));p=Q(p-Q(q*m));N[b+48>>2]=p;r=Q(l-Q(g*m));N[b+52>>2]=r;m=Q(h-Q(f*m));N[b+56>>2]=m;f=N[c+4>>2];h=N[c+8>>2];i=f<h;g=N[c+12>>2];i=(g>(i?f:h)?!i:2)<<4;l=N[i+33428>>2];s=N[i+33424>>2];t=N[i+33432>>2];J[b+172>>2]=0;q=Q(Q(f*l)-Q(s*h));u=Q(Q(h*t)-Q(l*g));s=Q(Q(g*s)-Q(t*f));l=Q(Q(1)/Q(Y(Q(Q(q*q)+Q(Q(u*u)+Q(s*s))))));t=Q(q*l);q=Q(t*Q(.5));N[b+168>>2]=m-q;s=Q(s*l);v=Q(s*Q(.5));N[b+164>>2]=r-v;l=Q(u*l);u=Q(l*Q(.5));N[b+160>>2]=p-u;J[b+44>>2]=0;N[b+40>>2]=m+q;N[b+36>>2]=r+v;N[b+32>>2]=p+u;i=b+160|0;e=b+32|0;n=b+112|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);J[b+172>>2]=0;m=Q(Q(l*h)-Q(f*s));h=Q(Q(s*g)-Q(h*t));g=Q(Q(t*f)-Q(g*l));f=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(h*h)+Q(g*g))))));l=N[b+56>>2];m=Q(Q(m*f)*Q(.5));N[b+168>>2]=l-m;p=N[b+52>>2];g=Q(Q(g*f)*Q(.5));N[b+164>>2]=p-g;r=N[b+48>>2];f=Q(Q(h*f)*Q(.5));N[b+160>>2]=r-f;J[b+44>>2]=0;N[b+40>>2]=m+l;N[b+36>>2]=g+p;N[b+32>>2]=f+r;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+4>>2];h=N[c+8>>2];g=N[c+12>>2];J[b+172>>2]=0;N[b+168>>2]=Q(Q(g*Q(.5))*Q(3))+N[b+56>>2];N[b+164>>2]=Q(Q(h*Q(.5))*Q(3))+N[b+52>>2];N[b+160>>2]=Q(Q(f*Q(.5))*Q(3))+N[b+48>>2];J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,b+48|0,i,e);d=d+1|0;if((d|0)<J[k+812>>2]){continue}break}}i:{if(!(o&4)){break i}J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1060320051;i=J[k+752>>2];if((i|0)<=0){break i}e=0;while(1){d=J[k+760>>2]+P(e,44)|0;if(H[J[d+4>>2]+16|0]&1){c=J[d+16>>2];l=N[c+12>>2];i=J[d+8>>2];m=N[i+12>>2];d=J[d+12>>2];p=N[d+12>>2];r=N[c+16>>2];g=N[i+16>>2];s=N[d+16>>2];t=N[c+8>>2];h=N[i+8>>2];q=N[d+8>>2];J[b+172>>2]=0;f=Q(Q(t+Q(h+q))*Q(.3333333432674408));N[b+160>>2]=f+Q(Q(h-f)*Q(.800000011920929));h=Q(Q(r+Q(g+s))*Q(.3333333432674408));N[b+168>>2]=h+Q(Q(g-h)*Q(.800000011920929));g=Q(Q(l+Q(m+p))*Q(.3333333432674408));N[b+164>>2]=g+Q(Q(m-g)*Q(.800000011920929));J[b+44>>2]=0;N[b+40>>2]=h+Q(Q(s-h)*Q(.800000011920929));N[b+36>>2]=g+Q(Q(p-g)*Q(.800000011920929));N[b+32>>2]=f+Q(Q(q-f)*Q(.800000011920929));J[b+28>>2]=0;N[b+24>>2]=h+Q(Q(r-h)*Q(.800000011920929));N[b+20>>2]=g+Q(Q(l-g)*Q(.800000011920929));N[b+16>>2]=f+Q(Q(t-f)*Q(.800000011920929));ia[J[J[j>>2]+28>>2]](j,b+160|0,b+32|0,b+16|0,b+48|0,Q(1));i=J[k+752>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}if(!(o&8)){break c}J[b+56>>2]=1060320051;J[b+60>>2]=0;J[b+48>>2]=1050253722;J[b+52>>2]=1050253722;i=J[k+772>>2];if((i|0)<=0){break c}e=0;while(1){d=J[k+780>>2]+P(e,104)|0;if(H[J[d+4>>2]+16|0]&1){c=J[d+20>>2];l=N[c+12>>2];i=J[d+16>>2];m=N[i+12>>2];n=J[d+8>>2];p=N[n+12>>2];d=J[d+12>>2];r=N[d+12>>2];s=N[c+16>>2];t=N[i+16>>2];g=N[n+16>>2];q=N[d+16>>2];u=N[c+8>>2];v=N[i+8>>2];h=N[n+8>>2];w=N[d+8>>2];J[b+172>>2]=0;f=Q(Q(u+Q(v+Q(h+w)))*Q(.25));y=Q(f+Q(Q(h-f)*Q(.800000011920929)));N[b+160>>2]=y;h=Q(Q(s+Q(t+Q(g+q)))*Q(.25));z=Q(h+Q(Q(g-h)*Q(.800000011920929)));N[b+168>>2]=z;g=Q(Q(l+Q(m+Q(p+r)))*Q(.25));p=Q(g+Q(Q(p-g)*Q(.800000011920929)));N[b+164>>2]=p;J[b+44>>2]=0;q=Q(h+Q(Q(q-h)*Q(.800000011920929)));N[b+40>>2]=q;r=Q(g+Q(Q(r-g)*Q(.800000011920929)));N[b+36>>2]=r;w=Q(f+Q(Q(w-f)*Q(.800000011920929)));N[b+32>>2]=w;J[b+28>>2]=0;t=Q(h+Q(Q(t-h)*Q(.800000011920929)));N[b+24>>2]=t;m=Q(g+Q(Q(m-g)*Q(.800000011920929)));N[b+20>>2]=m;v=Q(f+Q(Q(v-f)*Q(.800000011920929)));N[b+16>>2]=v;d=b+160|0;c=b+32|0;i=b+16|0;n=b+48|0;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=z;N[b+164>>2]=p;N[b+160>>2]=y;J[b+44>>2]=0;N[b+40>>2]=q;N[b+36>>2]=r;N[b+32>>2]=w;J[b+28>>2]=0;h=Q(h+Q(Q(s-h)*Q(.800000011920929)));N[b+24>>2]=h;g=Q(g+Q(Q(l-g)*Q(.800000011920929)));N[b+20>>2]=g;f=Q(f+Q(Q(u-f)*Q(.800000011920929)));N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=q;N[b+164>>2]=r;N[b+160>>2]=w;J[b+44>>2]=0;N[b+40>>2]=t;N[b+36>>2]=m;N[b+32>>2]=v;J[b+28>>2]=0;N[b+24>>2]=h;N[b+20>>2]=g;N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=t;N[b+164>>2]=m;N[b+160>>2]=v;J[b+44>>2]=0;N[b+40>>2]=z;N[b+36>>2]=p;N[b+32>>2]=y;J[b+28>>2]=0;N[b+24>>2]=h;N[b+20>>2]=g;N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));i=J[k+772>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}j:{if(!(o&64)){break j}if(J[k+792>>2]>0){i=0;while(1){e=J[k+800>>2]+P(i,96)|0;d=J[e+20>>2];l=N[d+52>>2];m=N[d+12>>2];p=N[d+8>>2];r=N[d+4>>2];s=N[d+56>>2];t=N[d+28>>2];q=N[d+20>>2];u=N[d+24>>2];v=N[d+60>>2];f=N[e+12>>2];w=N[d+44>>2];h=N[e+4>>2];y=N[d+36>>2];g=N[e+8>>2];z=N[d+40>>2];J[b+44>>2]=0;N[b+40>>2]=v+Q(Q(f*w)+Q(Q(h*y)+Q(g*z)));N[b+36>>2]=s+Q(Q(f*t)+Q(Q(h*q)+Q(g*u)));N[b+32>>2]=l+Q(Q(f*m)+Q(Q(h*r)+Q(g*p)));d=J[e>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=0;f=N[d+8>>2];h=N[d+12>>2];g=N[d+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+52>>2]=h;N[b+48>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.25);c=b+48|0;n=b+160|0;x=b+16|0;ia[J[J[j>>2]+8>>2]](j,c,n,x);f=N[d+12>>2];h=N[d+8>>2];g=N[d+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=f+Q(.25);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);f=N[d+16>>2];h=N[d+8>>2];g=N[d+12>>2];J[b+60>>2]=0;N[b+52>>2]=g;N[b+48>>2]=h;N[b+56>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=g+Q(0);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h+Q(-.25);g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f+Q(-.25);h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);d=J[e>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,d+8|0,b+32|0,c);i=i+1|0;if((i|0)<J[k+792>>2]){continue}break}}i=J[k+712>>2];if((i|0)<=0){break j}d=0;while(1){c=J[k+720>>2]+P(d,104)|0;if(!(!(H[J[c+4>>2]+16|0]&1)|!(N[c+88>>2]<=Q(0)))){J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+52>>2]=h;N[b+48>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.25);i=b+48|0;e=b+160|0;n=b+32|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+12>>2];h=N[c+8>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=f+Q(.25);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+16>>2];h=N[c+8>>2];g=N[c+12>>2];J[b+60>>2]=0;N[b+52>>2]=g;N[b+48>>2]=h;N[b+56>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=g+Q(0);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,i,e,n);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}if(!(!(o&128)|J[k+692>>2]<=0)){c=0;while(1){d=J[k+700>>2]+P(c,60)|0;i=J[d+20>>2];J[b+56>>2]=J[d+16>>2];J[b+60>>2]=i;i=J[d+12>>2];J[b+48>>2]=J[d+8>>2];J[b+52>>2]=i;n=J[d+24>>2];if((n|0)>0){e=0;f=N[b+56>>2];h=N[b+52>>2];g=N[b+48>>2];while(1){x=d+(e<<2)|0;i=J[x+28>>2];m=N[i+12>>2];p=N[i+16>>2];l=N[x+44>>2];g=Q(Q(N[i+8>>2]*l)+g);N[b+48>>2]=g;f=Q(Q(l*p)+f);N[b+56>>2]=f;h=Q(Q(l*m)+h);N[b+52>>2]=h;e=e+1|0;if((n|0)!=(e|0)){continue}break}}ia[J[J[j>>2]+40>>2]](j,b+48|0,J[d+4>>2]);c=c+1|0;if((c|0)<J[k+692>>2]){continue}break}}if(o&512){d=J[k+928>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=0;J[b+168>>2]=1065353216;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=1065353216;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(o&1024){d=J[k+988>>2];J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;J[b+168>>2]=0;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=0;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(o&2048){d=J[k+1048>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;J[b+168>>2]=0;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=0;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(!(!(o&4096)|J[k+852>>2]<=0)){i=0;while(1){k:{l:{m:{d=J[J[k+860>>2]+(i<<2)>>2];switch(ia[J[J[d>>2]+20>>2]](d)|0){case 1:break l;case 0:break m;default:break k}}c=K[33296];if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;l=N[e+52>>2];m=N[e+24>>2];p=N[e+20>>2];r=N[e+16>>2];s=N[e+56>>2];t=N[e+40>>2];q=N[e+36>>2];u=N[e+32>>2];v=N[e+48>>2];w=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];f=N[d+36>>2];h=N[d+32>>2];g=N[d+28>>2];J[b+44>>2]=0;N[b+32>>2]=v+Q(Q(f*w)+Q(Q(g*y)+Q(h*z)));N[b+40>>2]=s+Q(Q(f*t)+Q(Q(g*u)+Q(h*q)));N[b+36>>2]=l+Q(Q(f*m)+Q(Q(g*r)+Q(h*p)));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+24>>2];o=J[d+16>>2];e=e?e+4|0:o?o+60|0:33232;l=N[e+52>>2];m=N[e+24>>2];p=N[e+20>>2];r=N[e+16>>2];s=N[e+56>>2];t=N[e+40>>2];q=N[e+36>>2];u=N[e+32>>2];v=N[e+48>>2];w=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];f=N[d+52>>2];h=N[d+44>>2];g=N[d+48>>2];J[b+28>>2]=0;N[b+16>>2]=v+Q(Q(f*w)+Q(Q(h*y)+Q(g*z)));N[b+24>>2]=s+Q(Q(f*t)+Q(Q(h*u)+Q(g*q)));N[b+20>>2]=l+Q(Q(f*m)+Q(Q(h*r)+Q(g*p)));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+12>>2];e=J[d+4>>2];J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,(c?c+4|0:e?e+60|0:33232)+48|0,b+32|0,b+48|0);if(!(H[33296]&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+24>>2];d=J[d+16>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;c=(c?c+4|0:d?d+60|0:33232)+48|0;d=b+48|0;ia[J[J[j>>2]+8>>2]](j,c,b+16|0,d);J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);c=b+160|0;ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h+Q(-.25);g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f+Q(-.25);h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+8>>2]=1065353216;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=1065353216;J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f;h=N[b+20>>2];N[b+52>>2]=h;g=N[b+16>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f;h=N[b+20>>2];N[b+52>>2]=h+Q(-.25);g=N[b+16>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f+Q(-.25);h=N[b+20>>2];N[b+52>>2]=h;g=N[b+16>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);break k}c=K[33296];if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;o=J[e+60>>2];J[b+56>>2]=J[e+56>>2];J[b+60>>2]=o;o=J[e+52>>2];J[b+48>>2]=J[e+48>>2];J[b+52>>2]=o;if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+24>>2];o=J[d+16>>2];e=e?e+4|0:o?o+60|0:33232;o=J[e+60>>2];J[b+168>>2]=J[e+56>>2];J[b+172>>2]=o;o=J[e+52>>2];J[b+160>>2]=J[e+48>>2];J[b+164>>2]=o;if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;f=N[d+36>>2];h=N[d+28>>2];g=N[d+32>>2];l=Q(Q(N[e+8>>2]*f)+Q(Q(N[e>>2]*h)+Q(N[e+4>>2]*g)));m=Q(Q(N[e+40>>2]*f)+Q(Q(N[e+32>>2]*h)+Q(g*N[e+36>>2])));p=Q(Q(N[e+24>>2]*f)+Q(Q(N[e+16>>2]*h)+Q(g*N[e+20>>2])));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+24>>2];e=J[d+16>>2];c=c?c+4|0:e?e+60|0:33232;r=N[c+8>>2];s=N[c>>2];t=N[c+4>>2];q=N[c+24>>2];u=N[c+20>>2];v=N[c+16>>2];w=N[c+40>>2];y=N[c+36>>2];z=N[c+32>>2];f=N[d+52>>2];h=N[d+48>>2];g=N[d+44>>2];J[b+44>>2]=0;m=Q(m*Q(10));N[b+40>>2]=m+N[b+56>>2];p=Q(p*Q(10));N[b+36>>2]=p+N[b+52>>2];l=Q(l*Q(10));N[b+32>>2]=l+N[b+48>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=1065353216;e=b+48|0;d=b+32|0;c=b+16|0;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;w=Q(Q(Q(w*f)+Q(Q(z*g)+Q(h*y)))*Q(10));N[b+40>>2]=w+N[b+56>>2];q=Q(Q(Q(q*f)+Q(Q(v*g)+Q(h*u)))*Q(10));N[b+36>>2]=q+N[b+52>>2];f=Q(Q(Q(r*f)+Q(Q(s*g)+Q(t*h)))*Q(10));N[b+32>>2]=f+N[b+48>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;N[b+40>>2]=m+N[b+168>>2];N[b+36>>2]=p+N[b+164>>2];N[b+32>>2]=l+N[b+160>>2];J[b+24>>2]=1065353216;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;e=b+160|0;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;N[b+40>>2]=w+N[b+168>>2];N[b+36>>2]=q+N[b+164>>2];N[b+32>>2]=f+N[b+160>>2];J[b+24>>2]=1065353216;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,e,d,c)}i=i+1|0;if((i|0)<J[k+852>>2]){continue}break}}ga=b+176|0}d=J[a+72>>2];n:{if(!d){break n}if(!(ia[J[J[d>>2]+48>>2]](d)&2)){break n}if(K[a+348|0]){c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+928>>2];J[d+24>>2]=1065353216;J[d+28>>2]=0;J[d+16>>2]=1065353216;J[d+20>>2]=0;J[d+8>>2]=1065353216;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=1065353216;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}if(K[a+349|0]){c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+988>>2];J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=1065353216;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}if(!K[a+350|0]){break n}c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+1048>>2];J[d+24>>2]=1065353216;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=1065353216;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}E=E+1|0;if((E|0)<J[a+328>>2]){continue}break}}}function VG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=0,i=0,j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=0,w=Q(0),x=0,y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),U=0,V=0,W=Q(0),X=0,Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=0,fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=0,qa=Q(0),ra=Q(0),sa=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=0,xa=0,ya=0,za=0;g=ga-544|0;ga=g;k=J[a+20>>2];if(!k){h=J[a+4>>2];k=ia[J[J[h>>2]+12>>2]](h,J[b+8>>2],J[c+8>>2])|0;H[a+16|0]=1;J[a+20>>2]=k}J[e+4>>2]=k;U=J[b+4>>2];v=J[c+4>>2];a:{if(!(J[U+4>>2]!=10|J[v+4>>2]!=10)){u=N[k+752>>2];a=J[b+12>>2];h=J[U+52>>2];k=h<<2;d=a+k|0;F=N[d+32>>2];b=J[c+12>>2];$=N[b+56>>2];w=Q($-N[a+56>>2]);M=N[d>>2];W=N[b+48>>2];G=Q(W-N[a+48>>2]);C=N[d+16>>2];E=N[b+52>>2];I=Q(E-N[a+52>>2]);n=Q(Q(F*w)+Q(Q(M*G)+Q(C*I)));a=b;b=J[v+52>>2];c=b<<2;a=a+c|0;q=N[a+32>>2];t=N[a>>2];Z=N[a+16>>2];o=Q(-Q(Q(q*w)+Q(Q(t*G)+Q(Z*I))));a=v+28|0;j=N[a+c>>2];c=U+28|0;y=N[c+k>>2];a=a+((b+2|0)%3<<2)|0;b=c+((h+2|0)%3<<2)|0;L=Q(Q(F*q)+Q(Q(M*t)+Q(C*Z)));l=Q(Q(1)-Q(L*L));b:{if(l==Q(0)){break b}f=Q(-y);l=Q(Q(Q(o*L)+n)/l);if(f>l){break b}f=l;if(!(y<f)){break b}f=y}r=N[a>>2];_=N[b>>2];l=Q(Q(f*L)+o);o=Q(-j);c:{d:{if(l<o){f=Q(-y);j=Q(Q(o*L)+n);if(f>j){l=o;break c}if(!(j>y)){l=o;f=j;break c}j=o;break d}if(!(j<l)){break c}f=Q(-y);o=Q(Q(j*L)+n);if(f>o){l=j;break c}if(!(o>y)){l=j;f=o;break c}}l=j;f=y}L=Q(q*l);j=Q(L+Q(w-Q(F*f)));n=Q(t*l);o=Q(n+Q(G-Q(M*f)));w=Q(Z*l);f=Q(w+Q(I-Q(C*f)));l=Q(Q(j*j)+Q(Q(o*o)+Q(f*f)));G=Q(Y(l));y=Q(Q(G-_)-r);if(!(y>u)){e:{if(l<=Q(1.4210854715202004e-14)){if(Q(R(F))>Q(.7071067690849304)){J[g>>2]=0;f=Q(Q(1)/Q(Y(Q(Q(C*C)+Q(F*F)))));j=Q(C*f);N[g+8>>2]=j;l=Q(f*Q(-F));N[g+4>>2]=l;f=Q(0);break e}J[g+8>>2]=0;f=Q(Q(1)/Q(Y(Q(Q(M*M)+Q(C*C)))));l=Q(M*f);N[g+4>>2]=l;f=Q(f*Q(-C));N[g>>2]=f;j=Q(0);break e}J[g+12>>2]=0;C=Q(Q(-1)/G);j=Q(j*C);N[g+8>>2]=j;l=Q(f*C);N[g+4>>2]=l;f=Q(o*C);N[g>>2]=f}J[g+420>>2]=0;N[g+416>>2]=Q(r*j)+Q(L+$);N[g+412>>2]=Q(r*l)+Q(w+E);N[g+408>>2]=Q(r*f)+Q(n+W)}if(u>y){ia[J[J[e>>2]+16>>2]](e,g,g+408|0,y)}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0);break a}J[g+536>>2]=1566444395;V=Bg(g+328|0,U,v,J[a+8>>2],J[a+12>>2]);J[V+32>>2]=v;J[V+28>>2]=U;l=Q(Q(Q(ia[J[J[U>>2]+48>>2]](U))+Q(ia[J[J[v>>2]+48>>2]](v)))+N[J[a+20>>2]+752>>2]);N[g+536>>2]=l*l;h=J[b+12>>2];k=J[h+12>>2];J[g+416>>2]=J[h+8>>2];J[g+420>>2]=k;k=J[h+4>>2];J[g+408>>2]=J[h>>2];J[g+412>>2]=k;k=J[h+28>>2];J[g+432>>2]=J[h+24>>2];J[g+436>>2]=k;k=J[h+20>>2];J[g+424>>2]=J[h+16>>2];J[g+428>>2]=k;k=J[h+44>>2];J[g+448>>2]=J[h+40>>2];J[g+452>>2]=k;k=J[h+36>>2];J[g+440>>2]=J[h+32>>2];J[g+444>>2]=k;k=J[h+60>>2];J[g+464>>2]=J[h+56>>2];J[g+468>>2]=k;k=J[h+52>>2];J[g+456>>2]=J[h+48>>2];J[g+460>>2]=k;h=J[c+12>>2];k=J[h+12>>2];J[g+480>>2]=J[h+8>>2];J[g+484>>2]=k;k=J[h+4>>2];J[g+472>>2]=J[h>>2];J[g+476>>2]=k;p=J[h+20>>2];i=g+488|0;J[i>>2]=J[h+16>>2];J[i+4>>2]=p;k=J[h+28>>2];J[g+496>>2]=J[h+24>>2];J[g+500>>2]=k;s=J[h+36>>2];p=g+504|0;k=p;J[k>>2]=J[h+32>>2];J[k+4>>2]=s;k=J[h+44>>2];J[g+512>>2]=J[h+40>>2];J[g+516>>2]=k;x=J[h+52>>2];s=g+520|0;k=s;J[k>>2]=J[h+48>>2];J[k+4>>2]=x;k=J[h+60>>2];J[g+528>>2]=J[h+56>>2];J[g+532>>2]=k;f:{k=J[U+4>>2];if((k|0)>6){break f}h=J[v+4>>2];if((h|0)>6){break f}J[g+320>>2]=8896;l=Q(0);if(k){l=Q(ia[J[J[U>>2]+48>>2]](U));h=J[v+4>>2]}if(h){f=Q(ia[J[J[v>>2]+48>>2]](v))}H[g+36|0]=0;N[g+28>>2]=f;N[g+24>>2]=l;J[g+4>>2]=e;J[g>>2]=9128;if(!J[U+52>>2]){break f}if(J[v+52>>2]){aa=N[J[a+20>>2]+752>>2];g:{h:{if(K[d+24|0]){l=Q(-1.0000000150474662e30);x=J[U+52>>2];A=J[v+52>>2];p=J[b+12>>2];s=J[c+12>>2];h=0;V=0;i=ga-96|0;ga=i;J[7973]=J[7973]+1;f=N[x+72>>2];r=N[p+40>>2];j=N[x+64>>2];n=N[p+32>>2];q=N[x+68>>2];u=N[p+36>>2];t=N[A+72>>2];W=N[A+64>>2];D=N[A+68>>2];Z=Q(Q(Q(Q(f*r)+Q(Q(j*n)+Q(q*u)))+N[p+56>>2])-Q(Q(Q(t*N[s+40>>2])+Q(Q(W*N[s+32>>2])+Q(D*N[s+36>>2])))+N[s+56>>2]));w=N[p+24>>2];G=N[p+16>>2];I=N[p+20>>2];$=Q(Q(Q(Q(f*w)+Q(Q(j*G)+Q(q*I)))+N[p+52>>2])-Q(Q(Q(t*N[s+24>>2])+Q(Q(W*N[s+16>>2])+Q(D*N[s+20>>2])))+N[s+52>>2]));E=N[p+8>>2];_=N[p>>2];O=N[p+4>>2];W=Q(Q(Q(Q(f*E)+Q(Q(j*_)+Q(q*O)))+N[p+48>>2])-Q(Q(Q(t*N[s+8>>2])+Q(Q(W*N[s>>2])+Q(D*N[s+4>>2])))+N[s+48>>2]));j=Q(3.4028234663852886e38);i:{j:{k=J[x+28>>2];if((k|0)<=0){break j}while(1){d=J[x+36>>2]+P(z,36)|0;t=N[d+28>>2];D=N[d+24>>2];S=N[d+20>>2];J[i+12>>2]=0;f=Q(Q(r*t)+Q(Q(n*S)+Q(D*u)));N[i+8>>2]=f;q=Q(Q(w*t)+Q(Q(G*S)+Q(D*I)));N[i+4>>2]=q;t=Q(Q(E*t)+Q(Q(_*S)+Q(D*O)));N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;k:{l:{if(K[27117]){D=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));S=N[x+88>>2];r=Q(Q(r*f)+Q(Q(E*t)+Q(q*w)));w=Q((r<Q(0)?Q(-S):S)*r);r=N[x+80>>2];E=Q(-r);B=r;r=Q(Q(n*f)+Q(Q(_*t)+Q(q*G)));B=Q((r<Q(0)?E:B)*r);r=Q(Q(u*f)+Q(Q(O*t)+Q(q*I)));n=N[x+84>>2];r=Q(w+Q(B+Q(r*(r<Q(0)?Q(-n):n))));n=N[x+96>>2];B=r>n?r:n;r=N[A+88>>2];u=Q(-r);n=r;r=Q(Q(N[s+40>>2]*f)+Q(Q(N[s+8>>2]*t)+Q(q*N[s+24>>2])));u=Q((r<Q(0)?u:n)*r);r=N[A+80>>2];w=Q(-r);n=r;r=Q(Q(N[s+32>>2]*f)+Q(Q(N[s>>2]*t)+Q(q*N[s+16>>2])));n=Q((r<Q(0)?w:n)*r);f=Q(Q(N[s+36>>2]*f)+Q(Q(N[s+4>>2]*t)+Q(q*N[s+20>>2])));r=N[A+84>>2];f=Q(u+Q(n+Q(f*(f<Q(0)?Q(-r):r))));r=N[A+96>>2];f=Q(B+(f>r?f:r));r=Q(D+f);f=Q(f-D);if((f>r?r:f)>j){break l}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];r=N[i+84>>2];if(f<r){break k}n=N[i+80>>2];u=N[i+92>>2];if(n<u){break k}f=Q(f-r);r=Q(n-u);f=f<r?f:r;if(!(f<j)){break l}d=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=d;d=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=d;j=f}z=z+1|0;if((k|0)==(z|0)){break j}r=N[p+40>>2];u=N[p+36>>2];n=N[p+32>>2];w=N[p+24>>2];I=N[p+20>>2];G=N[p+16>>2];E=N[p+8>>2];O=N[p+4>>2];_=N[p>>2];continue}break}break i}m:{k=J[A+28>>2];if((k|0)>0){z=0;while(1){d=J[A+36>>2]+P(z,36)|0;r=N[d+28>>2];n=N[d+20>>2];u=N[d+24>>2];w=N[s+8>>2];G=N[s>>2];I=N[s+4>>2];E=N[s+24>>2];_=N[s+16>>2];O=N[s+20>>2];D=N[s+40>>2];S=N[s+32>>2];ba=N[s+36>>2];J[i+12>>2]=0;f=Q(Q(D*r)+Q(Q(S*n)+Q(u*ba)));N[i+8>>2]=f;q=Q(Q(E*r)+Q(Q(_*n)+Q(u*O)));N[i+4>>2]=q;t=Q(Q(w*r)+Q(Q(G*n)+Q(u*I)));N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;n:{if(K[27117]){r=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));n=N[x+88>>2];u=Q(-n);B=n;n=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+8>>2]*t)+Q(q*N[p+24>>2])));ca=Q((n<Q(0)?u:B)*n);n=N[x+80>>2];u=Q(-n);B=n;n=Q(Q(N[p+32>>2]*f)+Q(Q(N[p>>2]*t)+Q(q*N[p+16>>2])));B=Q((n<Q(0)?u:B)*n);n=Q(Q(N[p+36>>2]*f)+Q(Q(N[p+4>>2]*t)+Q(q*N[p+20>>2])));u=N[x+84>>2];n=Q(ca+Q(B+Q(n*(n<Q(0)?Q(-u):u))));u=N[x+96>>2];u=n>u?n:u;n=N[A+88>>2];ca=Q(-n);B=n;n=Q(Q(D*f)+Q(Q(w*t)+Q(q*E)));w=Q((n<Q(0)?ca:B)*n);n=N[A+80>>2];E=Q(-n);B=n;n=Q(Q(S*f)+Q(Q(G*t)+Q(q*_)));B=Q((n<Q(0)?E:B)*n);f=Q(Q(ba*f)+Q(Q(I*t)+Q(q*O)));n=N[A+84>>2];f=Q(w+Q(B+Q(f*(f<Q(0)?Q(-n):n))));n=N[A+96>>2];f=Q(u+(f>n?f:n));n=Q(r+f);f=Q(f-r);if((f>n?n:f)>j){break n}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];r=N[i+84>>2];if(f<r){break m}n=N[i+80>>2];u=N[i+92>>2];if(n<u){break m}f=Q(f-r);r=Q(n-u);f=f<r?f:r;if(!(f<j)){break n}d=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=d;d=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=d;j=f}z=z+1|0;if((k|0)!=(z|0)){continue}break}}V=1;d=J[x+48>>2];o:{if((d|0)<=0){break o}z=J[A+48>>2];if((z|0)<=0){break o}k=-1;m=-1;while(1){if((z|0)>0){d=J[x+56>>2]+(h<<4)|0;f=N[d+8>>2];u=N[d>>2];w=N[d+4>>2];r=Q(Q(N[p+24>>2]*f)+Q(Q(N[p+16>>2]*u)+Q(w*N[p+20>>2])));qa=Q(-r);n=Q(Q(N[p+8>>2]*f)+Q(Q(N[p>>2]*u)+Q(w*N[p+4>>2])));ra=Q(-n);u=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+32>>2]*u)+Q(w*N[p+36>>2])));sa=Q(-u);d=0;while(1){z=J[A+56>>2]+(d<<4)|0;I=N[z+8>>2];q=N[z>>2];t=N[z+4>>2];E=N[s+40>>2];_=N[s+32>>2];O=N[s+36>>2];D=N[s+24>>2];S=N[s+16>>2];ba=N[s+20>>2];ja=N[s+8>>2];fa=N[s>>2];ha=N[s+4>>2];J[i+12>>2]=0;w=Q(Q(D*I)+Q(Q(S*q)+Q(t*ba)));G=Q(Q(ja*I)+Q(Q(fa*q)+Q(t*ha)));f=Q(Q(n*w)+Q(G*qa));I=Q(Q(E*I)+Q(Q(_*q)+Q(t*O)));q=Q(Q(u*G)+Q(I*ra));t=Q(Q(r*I)+Q(w*sa));p:{if(!(+Q(R(f))>1e-6?1:+Q(R(t))>1e-6|+Q(R(q))>1e-6)){break p}da=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(t*t)+Q(q*q))))));f=Q(f*da);N[i+8>>2]=f;q=Q(q*da);N[i+4>>2]=q;t=Q(t*da);N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;if(K[27117]){da=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));B=N[x+88>>2];ka=Q(-B);ca=B;B=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+8>>2]*t)+Q(q*N[p+24>>2])));ka=Q((B<Q(0)?ka:ca)*B);B=N[x+80>>2];la=Q(-B);ca=B;B=Q(Q(N[p+32>>2]*f)+Q(Q(N[p>>2]*t)+Q(q*N[p+16>>2])));la=Q((B<Q(0)?la:ca)*B);B=Q(Q(N[p+36>>2]*f)+Q(Q(N[p+4>>2]*t)+Q(q*N[p+20>>2])));ca=N[x+84>>2];B=Q(ka+Q(la+Q(B*(B<Q(0)?Q(-ca):ca))));ca=N[x+96>>2];ca=B>ca?B:ca;B=N[A+88>>2];E=Q(Q(E*f)+Q(Q(ja*t)+Q(q*D)));D=Q((E<Q(0)?Q(-B):B)*E);E=N[A+80>>2];ja=Q(-E);B=E;E=Q(Q(_*f)+Q(Q(fa*t)+Q(q*S)));f=Q(Q(O*f)+Q(Q(ha*t)+Q(q*ba)));q=N[A+84>>2];f=Q(D+Q(Q((E<Q(0)?ja:B)*E)+Q(f*(f<Q(0)?Q(-q):q))));q=N[A+96>>2];f=Q(ca+(f>q?f:q));q=Q(da+f);f=Q(f-da);if((f>q?q:f)>j){break p}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];q=N[i+84>>2];if(f<q){break m}t=N[i+80>>2];E=N[i+92>>2];if(t<E){break m}f=Q(f-q);q=Q(t-E);z=f<q;f=z?f:q;if(!(f<j)){break p}ma=N[(z?i+32|0:i+16|0)>>2];ta=N[(z?i+48|0:i- -64|0)>>2];j=N[i+24>>2];o=N[i+40>>2];y=N[i+20>>2];C=N[i+36>>2];F=N[i+72>>2];M=N[i+56>>2];L=N[i+68>>2];q=N[i+52>>2];k=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=k;k=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=k;ua=z?q:L;va=z?M:F;na=z?C:y;oa=z?o:j;o=G;y=w;C=I;F=n;M=r;L=u;m=h;k=d;j=f}d=d+1|0;z=J[A+48>>2];if((d|0)<(z|0)){continue}break}d=J[x+48>>2]}h=h+1|0;if((h|0)<(d|0)){continue}break}if((m|k)<0){break o}u=Q(oa-va);w=Q(ma-ta);G=Q(na-ua);n=Q(Q(L*u)+Q(Q(F*w)+Q(G*M)));f=Q(0);I=Q(-Q(Q(C*u)+Q(Q(o*w)+Q(G*y))));r=Q(Q(L*C)+Q(Q(F*o)+Q(y*M)));j=Q(Q(1)-Q(r*r));q:{if(j==Q(0)){break q}f=Q(-1.0000000150474662e30);j=Q(Q(Q(I*r)+n)/j);if(j<Q(-1.0000000150474662e30)){break q}f=j;if(!(f>Q(1.0000000150474662e30))){break q}f=Q(1.0000000150474662e30)}q=Q(Q(f*r)+I);r:{if(q<Q(-1.0000000150474662e30)){j=Q(Q(r*Q(-1.0000000150474662e30))+n);if(j<Q(-1.0000000150474662e30)){q=Q(-1.0000000150474662e30);f=Q(-1.0000000150474662e30);break r}f=Q(1.0000000150474662e30);if(!(j>Q(1.0000000150474662e30))){q=Q(-1.0000000150474662e30);f=j;break r}q=Q(-1.0000000150474662e30);break r}if(!(q>Q(1.0000000150474662e30))){break r}f=Q(-1.0000000150474662e30);q=Q(1.0000000150474662e30);j=Q(Q(r*Q(1.0000000150474662e30))+n);if(j<Q(-1.0000000150474662e30)){break r}f=j;if(!(f>Q(1.0000000150474662e30))){break r}f=Q(1.0000000150474662e30)}J[i+76>>2]=0;C=Q(C*q);j=Q(C+Q(u-Q(L*f)));L=Q(o*q);o=Q(L+Q(w-Q(F*f)));F=Q(y*q);f=Q(F+Q(G-Q(M*f)));y=Q(Q(j*j)+Q(Q(o*o)+Q(f*f)));if(!(y>Q(1.1920928955078125e-7))){break o}n=j;M=Q(Y(y));j=Q(Q(1)/M);y=Q(n*j);N[i+72>>2]=y;f=Q(f*j);N[i+68>>2]=f;j=Q(o*j);N[i+64>>2]=j;if(Q(Q(y*Z)+Q(Q(j*W)+Q($*f)))<Q(0)){N[i+72>>2]=-y;N[i+68>>2]=-f;N[i+64>>2]=-j}J[i+60>>2]=0;N[i+56>>2]=oa+C;N[i+52>>2]=na+F;N[i+48>>2]=ma+L;ia[J[J[e>>2]+16>>2]](e,i- -64|0,i+48|0,Q(-M))}f=N[g+248>>2];j=N[g+240>>2];o=N[g+244>>2];if(!(Q(Q(Z*f)+Q(Q(W*j)+Q($*o)))<Q(0))){break i}J[g+252>>2]=0;N[g+248>>2]=-f;N[g+244>>2]=-o;N[g+240>>2]=-j;break i}V=0}ga=i+96|0;if(V){break h}break g}zb(V,g+408|0,g,J[d+20>>2],0);d=J[g+20>>2];J[g+248>>2]=J[g+16>>2];J[g+252>>2]=d;d=J[g+12>>2];J[g+240>>2]=J[g+8>>2];J[g+244>>2]=d;if(!K[g+36|0]){break g}l=N[g+32>>2];if(!(l<Q(0))){break g}}wa=J[U+52>>2];s=J[v+52>>2];xa=J[b+12>>2];k=J[c+12>>2];y=Q(l-aa);x=0;A=0;c=ga-48|0;ga=c;f=N[g+248>>2];l=N[g+240>>2];j=N[g+244>>2];N[c+44>>2]=N[g+252>>2];o=f;f=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(l*l)+Q(j*j))))));C=Q(o*f);N[c+40>>2]=C;F=Q(j*f);N[c+36>>2]=F;M=Q(l*f);N[c+32>>2]=M;b=J[s+36>>2];i=J[s+28>>2];s:{if((i|0)<=0){m=-1;break s}L=N[k+40>>2];r=N[k+36>>2];n=N[k+24>>2];u=N[k+20>>2];w=N[k+32>>2];G=N[k+16>>2];I=N[k+8>>2];q=N[k+4>>2];t=N[k>>2];d=0;f=Q(-3.4028234663852886e38);m=-1;while(1){h=b+P(d,36)|0;l=N[h+28>>2];j=N[h+20>>2];o=N[h+24>>2];l=Q(Q(Q(Q(L*l)+Q(Q(w*j)+Q(o*r)))*C)+Q(Q(Q(Q(I*l)+Q(Q(t*j)+Q(o*q)))*M)+Q(F*Q(Q(n*l)+Q(Q(G*j)+Q(o*u))))));h=l>f;f=h?l:f;m=h?d:m;d=d+1|0;if((i|0)!=(d|0)){continue}break}}J[c+20>>2]=0;J[c+12>>2]=0;J[c+16>>2]=0;H[c+24|0]=1;t:{pa=J[(b+P(m,36)|0)+4>>2];if((pa|0)<=0){break t}ya=b+P(m,36)|0;h=0;while(1){b=J[s+16>>2]+(J[J[ya+12>>2]+(A<<2)>>2]<<4)|0;f=N[b+8>>2];l=N[b>>2];j=N[b+4>>2];o=Q(Q(Q(f*N[k+40>>2])+Q(Q(l*N[k+32>>2])+Q(j*N[k+36>>2])))+N[k+56>>2]);C=Q(Q(Q(f*N[k+24>>2])+Q(Q(l*N[k+16>>2])+Q(j*N[k+20>>2])))+N[k+52>>2]);f=Q(Q(Q(f*N[k+8>>2])+Q(Q(l*N[k>>2])+Q(j*N[k+4>>2])))+N[k+48>>2]);u:{if((h|0)!=(x|0)){break u}z=h?h<<1:1;if((z|0)<=(h|0)){break u}if(z){J[8369]=J[8369]+1;b=ia[J[6782]](z<<4,16)|0}else{b=0}i=J[c+20>>2];v:{if((h|0)<=0){break v}U=0;d=0;if(h-1>>>0>=3){za=h&-4;V=0;while(1){p=d<<4;X=p+b|0;v=i+p|0;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;v=p|16;X=v+b|0;v=i+v|0;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;v=p|32;X=v+b|0;v=i+v|0;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;p=p|48;v=p+b|0;p=i+p|0;X=J[p+12>>2];J[v+8>>2]=J[p+8>>2];J[v+12>>2]=X;X=J[p+4>>2];J[v>>2]=J[p>>2];J[v+4>>2]=X;d=d+4|0;V=V+4|0;if((za|0)!=(V|0)){continue}break}}v=h&3;if(!v){break v}while(1){h=d<<4;p=h+b|0;h=h+i|0;V=J[h+4>>2];J[p>>2]=J[h>>2];J[p+4>>2]=V;V=J[h+12>>2];J[p+8>>2]=J[h+8>>2];J[p+12>>2]=V;d=d+1|0;U=U+1|0;if((v|0)!=(U|0)){continue}break}}if(!(i?!i|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](i)}J[c+20>>2]=b;H[c+24|0]=1;J[c+16>>2]=z}b=J[c+20>>2]+(x<<4)|0;J[b+12>>2]=0;N[b+8>>2]=o;N[b+4>>2]=C;N[b>>2]=f;x=J[c+12>>2]+1|0;J[c+12>>2]=x;A=A+1|0;if((pa|0)==(A|0)){break t}h=J[c+16>>2];continue}}if((m|0)>=0){ll(c+32|0,wa,xa,c+8|0,y,aa,e)}b=J[c+20>>2];if(!(b?!b|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=c+48|0}if(!K[a+16|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0);break a}if(J[v+4>>2]!=1){break f}J[g+244>>2]=0;h=J[c+12>>2];o=N[h+52>>2];y=N[h+20>>2];C=N[h+24>>2];F=N[h+56>>2];M=N[h+36>>2];L=N[h+40>>2];f=N[v- -64>>2];l=N[v+56>>2];j=N[v+60>>2];r=N[h+16>>2];n=N[h+32>>2];u=N[h+48>>2];w=N[h+8>>2];G=N[h>>2];I=N[h+4>>2];J[8369]=J[8369]+1;h=ia[J[6782]](16,16)|0;J[g+252>>2]=h;H[g+256|0]=1;J[g+248>>2]=1;J[h+12>>2]=0;N[h>>2]=u+Q(Q(f*w)+Q(Q(l*G)+Q(j*I)));N[h+8>>2]=F+Q(Q(f*L)+Q(Q(l*n)+Q(j*M)));N[h+4>>2]=o+Q(Q(f*C)+Q(Q(l*r)+Q(j*y)));i=J[g+244>>2];h=i+1|0;J[g+244>>2]=h;f=N[v+80>>2];k=J[c+12>>2];l=N[v+72>>2];j=N[v+76>>2];o=Q(Q(Q(f*N[k+40>>2])+Q(Q(l*N[k+32>>2])+Q(j*N[k+36>>2])))+N[k+56>>2]);y=Q(Q(Q(f*N[k+24>>2])+Q(Q(l*N[k+16>>2])+Q(j*N[k+20>>2])))+N[k+52>>2]);f=Q(Q(Q(f*N[k+8>>2])+Q(Q(l*N[k>>2])+Q(j*N[k+4>>2])))+N[k+48>>2]);w:{if(J[g+248>>2]!=(h|0)){break w}p=h?h<<1:1;if((p|0)<=(h|0)){break w}if(p){J[8369]=J[8369]+1;m=ia[J[6782]](p<<4,16)|0}x:{if((i|0)<0){break x}h=i+1|0;A=h&1;y:{if(!i){k=0;break y}z=h&-2;k=0;h=0;while(1){s=k<<4;x=s+m|0;i=s+J[g+252>>2]|0;X=J[i+4>>2];J[x>>2]=J[i>>2];J[x+4>>2]=X;X=J[i+12>>2];J[x+8>>2]=J[i+8>>2];J[x+12>>2]=X;i=s|16;s=i+m|0;i=i+J[g+252>>2]|0;x=J[i+4>>2];J[s>>2]=J[i>>2];J[s+4>>2]=x;x=J[i+12>>2];J[s+8>>2]=J[i+8>>2];J[s+12>>2]=x;k=k+2|0;h=h+2|0;if((z|0)!=(h|0)){continue}break}}if(!A){break x}h=k<<4;k=h+m|0;h=h+J[g+252>>2]|0;i=J[h+4>>2];J[k>>2]=J[h>>2];J[k+4>>2]=i;i=J[h+12>>2];J[k+8>>2]=J[h+8>>2];J[k+12>>2]=i}h=J[g+252>>2];if(!(h?!h|!K[g+256|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](h)}J[g+252>>2]=m;H[g+256|0]=1;J[g+248>>2]=p;h=J[g+244>>2]}h=J[g+252>>2]+(h<<4)|0;J[h+12>>2]=0;N[h+8>>2]=o;N[h+4>>2]=y;N[h>>2]=f;k=J[g+244>>2];h=k+1|0;J[g+244>>2]=h;f=N[v+96>>2];c=J[c+12>>2];l=N[v+88>>2];j=N[v+92>>2];o=Q(Q(Q(f*N[c+8>>2])+Q(Q(l*N[c>>2])+Q(j*N[c+4>>2])))+N[c+48>>2]);y=Q(Q(Q(f*N[c+40>>2])+Q(Q(l*N[c+32>>2])+Q(j*N[c+36>>2])))+N[c+56>>2]);f=Q(Q(Q(f*N[c+24>>2])+Q(Q(l*N[c+16>>2])+Q(j*N[c+20>>2])))+N[c+52>>2]);z:{if(J[g+248>>2]!=(h|0)){break z}c=h?h<<1:1;if((c|0)<=(h|0)){break z}h=0;if(c){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0}A:{if((k|0)<0){break A}m=k+1|0;x=m&1;B:{if(!k){k=0;break B}A=m&-2;k=0;m=0;while(1){p=k<<4;s=p+h|0;i=p+J[g+252>>2]|0;z=J[i+4>>2];J[s>>2]=J[i>>2];J[s+4>>2]=z;z=J[i+12>>2];J[s+8>>2]=J[i+8>>2];J[s+12>>2]=z;i=p|16;p=i+h|0;i=i+J[g+252>>2]|0;s=J[i+4>>2];J[p>>2]=J[i>>2];J[p+4>>2]=s;s=J[i+12>>2];J[p+8>>2]=J[i+8>>2];J[p+12>>2]=s;k=k+2|0;m=m+2|0;if((A|0)!=(m|0)){continue}break}}if(!x){break A}k=k<<4;m=k+h|0;k=k+J[g+252>>2]|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=J[k+12>>2];J[m+8>>2]=J[k+8>>2];J[m+12>>2]=i}k=J[g+252>>2];if(!(k?!k|!K[g+256|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](k)}J[g+252>>2]=h;H[g+256|0]=1;J[g+248>>2]=c;h=J[g+244>>2]}c=J[g+252>>2]+(h<<4)|0;J[c+12>>2]=0;N[c+8>>2]=y;N[c+4>>2]=f;N[c>>2]=o;J[g+244>>2]=J[g+244>>2]+1;f=N[J[a+20>>2]+752>>2];zb(V,g+408|0,g+320|0,J[d+20>>2],0);l=N[V+12>>2];j=N[V+4>>2];o=N[V+8>>2];y=Q(Q(l*l)+Q(Q(j*j)+Q(o*o)));if(y>Q(1.1920928955078125e-7)){J[g+316>>2]=0;n=l;l=Q(Q(1)/y);N[g+312>>2]=n*l;N[g+308>>2]=o*l;N[g+304>>2]=j*l;l=N[V+56>>2];j=Q(ia[J[J[U>>2]+48>>2]](U));o=Q(ia[J[J[v>>2]+48>>2]](v));ll(g+304|0,J[U+52>>2],J[b+12>>2],g+240|0,Q(Q(Q(l-j)-o)-f),f,e)}C:{if(!K[a+16|0]){break C}a=J[e+4>>2];if(!J[a+748>>2]){break C}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0)}a=J[g+252>>2];if(!a|!K[g+256|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break a}zb(V,g+408|0,e,J[d+20>>2],0);D:{if(!J[a+28>>2]|J[J[e+4>>2]+748>>2]>=J[a+32>>2]){break D}f=N[V+12>>2];l=N[V+4>>2];j=N[V+8>>2];o=Q(Q(f*f)+Q(Q(l*l)+Q(j*j)));if(!(o>Q(1.1920928955078125e-7))){break D}n=j;j=Q(Q(1)/o);y=Q(n*j);r=Q(l*j);n=Q(f*j);E:{if(Q(R(n))>Q(.7071067690849304)){l=Q(Q(1)/Q(Y(Q(Q(y*y)+Q(n*n)))));f=Q(y*l);l=Q(l*Q(-n));j=Q(0);break E}f=Q(Q(1)/Q(Y(Q(Q(r*r)+Q(y*y)))));l=Q(r*f);j=Q(f*Q(-y));f=Q(0)}x=g+456|0;A=g+440|0;z=g+424|0;o=Q(ia[J[J[U>>2]+16>>2]](U));C=Q(ia[J[J[v>>2]+16>>2]](v));F=N[6778];v=o<C;F:{if(v){h=J[g+420>>2];J[g+248>>2]=J[g+416>>2];J[g+252>>2]=h;h=J[g+412>>2];J[g+240>>2]=J[g+408>>2];J[g+244>>2]=h;k=A;m=x;o=Q(T(Q(F/o),Q(.39269909262657166)));h=z;break F}h=J[g+484>>2];J[g+248>>2]=J[g+480>>2];J[g+252>>2]=h;h=J[g+476>>2];J[g+240>>2]=J[g+472>>2];J[g+244>>2]=h;k=p;m=s;o=Q(T(Q(F/C),Q(.39269909262657166)));h=i}U=J[h+12>>2];J[g+264>>2]=J[h+8>>2];J[g+268>>2]=U;U=J[h+4>>2];J[g+256>>2]=J[h>>2];J[g+260>>2]=U;h=J[k+12>>2];J[g+280>>2]=J[k+8>>2];J[g+284>>2]=h;h=J[k+4>>2];J[g+272>>2]=J[k>>2];J[g+276>>2]=h;h=J[m+12>>2];J[g+296>>2]=J[m+8>>2];J[g+300>>2]=h;h=J[m+4>>2];J[g+288>>2]=J[m>>2];J[g+292>>2]=h;h=J[a+28>>2];if((h|0)<=0){break D}o=Q(o*Q(.5));F=Ga(o);C=Ha(o);o=Q(Q(f*f)+Q(Q(j*j)+Q(l*l)));if(!(o>Q(1.1920928955078125e-7))){break D}B=f;f=Q(F/Q(Y(o)));F=Q(B*f);M=Q(l*f);L=Q(j*f);ja=Q(Y(Q(Q(n*n)+Q(Q(r*r)+Q(y*y)))));k=0;while(1){o=Q(Q(Q(Q(6.2831854820251465)/Q(h|0))*Q(k|0))*Q(.5));j=Q(Ga(o)/ja);f=Q(n*j);l=Q(y*j);j=Q(r*j);o=Ha(o);G:{if(!v){h=J[b+12>>2];m=J[h+12>>2];J[g+416>>2]=J[h+8>>2];J[g+420>>2]=m;m=J[h+4>>2];J[g+408>>2]=J[h>>2];J[g+412>>2]=m;m=J[h+28>>2];J[z+8>>2]=J[h+24>>2];J[z+12>>2]=m;m=J[h+20>>2];J[z>>2]=J[h+16>>2];J[z+4>>2]=m;m=J[h+44>>2];J[A+8>>2]=J[h+40>>2];J[A+12>>2]=m;m=J[h+36>>2];J[A>>2]=J[h+32>>2];J[A+4>>2]=m;m=J[h+60>>2];J[x+8>>2]=J[h+56>>2];J[x+12>>2]=m;m=J[h+52>>2];J[x>>2]=J[h+48>>2];J[x+4>>2]=m;h=J[c+12>>2];G=N[h+36>>2];I=N[h+20>>2];q=N[h+40>>2];t=N[h+24>>2];Z=N[h+32>>2];$=N[h>>2];W=N[h+16>>2];E=N[h+4>>2];_=N[h+8>>2];J[g+516>>2]=0;J[g+500>>2]=0;J[g+484>>2]=0;O=Q(Q(j*F)+Q(Q(Q(o*M)-Q(C*l))-Q(f*L)));D=Q(Q(f*F)+Q(Q(l*M)+Q(Q(o*C)+Q(L*j))));S=Q(Q(f*M)+Q(Q(Q(o*L)-Q(C*j))-Q(l*F)));aa=Q(Q(l*L)+Q(Q(Q(o*F)-Q(C*f))-Q(j*M)));u=Q(Q(Q(O*f)+Q(Q(D*j)+Q(o*S)))-Q(aa*l));w=Q(Q(Q(Q(D*o)-Q(j*S))-Q(O*l))-Q(aa*f));ba=Q(Q(Q(S*l)+Q(Q(D*f)+Q(o*aa)))-Q(O*j));f=Q(Q(Q(aa*j)+Q(Q(D*l)+Q(o*O)))-Q(S*f));l=Q(Q(2)/Q(Q(w*w)+Q(Q(ba*ba)+Q(Q(u*u)+Q(f*f)))));D=Q(u*l);S=Q(u*D);j=Q(f*l);aa=Q(f*j);o=Q(Q(1)-Q(S+aa));l=Q(ba*l);fa=Q(u*l);ha=Q(w*j);O=Q(fa-ha);da=Q(f*l);D=Q(w*D);f=Q(da+D);N[g+512>>2]=Q(q*o)+Q(Q(_*O)+Q(t*f));N[g+508>>2]=Q(G*o)+Q(Q(E*O)+Q(f*I));N[g+504>>2]=Q(Z*o)+Q(Q($*O)+Q(f*W));f=Q(da-D);o=Q(u*j);u=Q(w*l);j=Q(o+u);w=Q(ba*l);l=Q(Q(1)-Q(S+w));N[g+496>>2]=Q(q*f)+Q(Q(_*j)+Q(t*l));N[g+492>>2]=Q(G*f)+Q(Q(E*j)+Q(l*I));N[g+488>>2]=Q(Z*f)+Q(Q($*j)+Q(l*W));f=Q(fa+ha);l=Q(Q(1)-Q(aa+w));j=Q(o-u);N[g+480>>2]=Q(q*f)+Q(Q(_*l)+Q(t*j));N[g+476>>2]=Q(G*f)+Q(Q(E*l)+Q(j*I));N[g+472>>2]=Q(Z*f)+Q(Q($*l)+Q(j*W));break G}h=J[b+12>>2];G=N[h+36>>2];I=N[h+20>>2];q=N[h+40>>2];t=N[h+24>>2];Z=N[h+32>>2];$=N[h>>2];W=N[h+16>>2];E=N[h+4>>2];_=N[h+8>>2];J[g+452>>2]=0;J[g+436>>2]=0;J[g+420>>2]=0;O=Q(Q(j*F)+Q(Q(Q(o*M)-Q(C*l))-Q(f*L)));D=Q(Q(f*F)+Q(Q(l*M)+Q(Q(o*C)+Q(L*j))));S=Q(Q(f*M)+Q(Q(Q(o*L)-Q(C*j))-Q(l*F)));aa=Q(Q(l*L)+Q(Q(Q(o*F)-Q(C*f))-Q(j*M)));u=Q(Q(Q(O*f)+Q(Q(D*j)+Q(o*S)))-Q(aa*l));w=Q(Q(Q(Q(D*o)-Q(j*S))-Q(O*l))-Q(aa*f));ba=Q(Q(Q(S*l)+Q(Q(D*f)+Q(o*aa)))-Q(O*j));f=Q(Q(Q(aa*j)+Q(Q(D*l)+Q(o*O)))-Q(S*f));l=Q(Q(2)/Q(Q(w*w)+Q(Q(ba*ba)+Q(Q(u*u)+Q(f*f)))));D=Q(u*l);S=Q(u*D);j=Q(f*l);aa=Q(f*j);o=Q(Q(1)-Q(S+aa));l=Q(ba*l);fa=Q(u*l);ha=Q(w*j);O=Q(fa-ha);da=Q(f*l);D=Q(w*D);f=Q(da+D);N[g+448>>2]=Q(q*o)+Q(Q(_*O)+Q(t*f));N[g+444>>2]=Q(G*o)+Q(Q(E*O)+Q(f*I));N[g+440>>2]=Q(Z*o)+Q(Q($*O)+Q(f*W));f=Q(da-D);o=Q(u*j);u=Q(w*l);j=Q(o+u);w=Q(ba*l);l=Q(Q(1)-Q(S+w));N[g+432>>2]=Q(q*f)+Q(Q(_*j)+Q(t*l));N[g+428>>2]=Q(G*f)+Q(Q(E*j)+Q(l*I));N[g+424>>2]=Q(Z*f)+Q(Q($*j)+Q(l*W));f=Q(fa+ha);l=Q(Q(1)-Q(aa+w));j=Q(o-u);N[g+416>>2]=Q(q*f)+Q(Q(_*l)+Q(t*j));N[g+412>>2]=Q(G*f)+Q(Q(E*l)+Q(j*I));N[g+408>>2]=Q(Z*f)+Q(Q($*l)+Q(j*W));h=J[c+12>>2];m=J[h+4>>2];J[g+472>>2]=J[h>>2];J[g+476>>2]=m;m=J[h+12>>2];J[g+480>>2]=J[h+8>>2];J[g+484>>2]=m;m=J[h+28>>2];J[i+8>>2]=J[h+24>>2];J[i+12>>2]=m;m=J[h+20>>2];J[i>>2]=J[h+16>>2];J[i+4>>2]=m;m=J[h+44>>2];J[p+8>>2]=J[h+40>>2];J[p+12>>2]=m;m=J[h+36>>2];J[p>>2]=J[h+32>>2];J[p+4>>2]=m;m=J[h+60>>2];J[s+8>>2]=J[h+56>>2];J[s+12>>2]=m;m=J[h+52>>2];J[s>>2]=J[h+48>>2];J[s+4>>2]=m}h=J[d+20>>2];J[g+32>>2]=e;J[g>>2]=9312;m=J[g+420>>2];J[g+44>>2]=J[g+416>>2];J[g+48>>2]=m;m=J[g+412>>2];J[g+36>>2]=J[g+408>>2];J[g+40>>2]=m;m=J[z+12>>2];J[g+60>>2]=J[z+8>>2];J[g+64>>2]=m;m=J[z+4>>2];J[g+52>>2]=J[z>>2];J[g+56>>2]=m;m=J[A+12>>2];J[g+76>>2]=J[A+8>>2];J[g+80>>2]=m;m=J[A+4>>2];J[g+68>>2]=J[A>>2];J[g+72>>2]=m;m=J[x+12>>2];J[g+92>>2]=J[x+8>>2];J[g+96>>2]=m;m=J[x+4>>2];J[g+84>>2]=J[x>>2];J[g+88>>2]=m;m=J[g+484>>2];J[g+108>>2]=J[g+480>>2];J[g+112>>2]=m;m=J[g+476>>2];J[g+100>>2]=J[g+472>>2];J[g+104>>2]=m;m=J[i+12>>2];J[g+124>>2]=J[i+8>>2];J[g+128>>2]=m;m=J[i+4>>2];J[g+116>>2]=J[i>>2];J[g+120>>2]=m;m=J[p+12>>2];J[g+140>>2]=J[p+8>>2];J[g+144>>2]=m;m=J[p+4>>2];J[g+132>>2]=J[p>>2];J[g+136>>2]=m;m=J[s+12>>2];J[g+156>>2]=J[s+8>>2];J[g+160>>2]=m;m=J[s+4>>2];J[g+148>>2]=J[s>>2];J[g+152>>2]=m;m=J[g+252>>2];J[g+172>>2]=J[g+248>>2];J[g+176>>2]=m;m=J[g+244>>2];J[g+164>>2]=J[g+240>>2];J[g+168>>2]=m;m=J[g+268>>2];J[g+188>>2]=J[g+264>>2];J[g+192>>2]=m;m=J[g+260>>2];J[g+180>>2]=J[g+256>>2];J[g+184>>2]=m;m=J[g+284>>2];J[g+204>>2]=J[g+280>>2];J[g+208>>2]=m;m=J[g+276>>2];J[g+196>>2]=J[g+272>>2];J[g+200>>2]=m;m=J[g+292>>2];J[g+212>>2]=J[g+288>>2];J[g+216>>2]=m;m=J[g+300>>2];J[g+220>>2]=J[g+296>>2];J[g+224>>2]=m;J[g+232>>2]=h;H[g+228|0]=v;zb(V,g+408|0,g,h,0);h=J[a+28>>2];k=k+1|0;if((h|0)>(k|0)){continue}break}}if(!K[a+16|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0)}ga=g+544|0}function Vj(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=0,r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=0,C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=0,O=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Z=0,_=0,$=Q(0),aa=Q(0),ba=0,ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0);u=ga+-64|0;ga=u;J[u+52>>2]=0;_=1;H[u+56|0]=1;J[u+44>>2]=0;J[u+48>>2]=0;J[u+32>>2]=0;J[u+36>>2]=0;J[u+24>>2]=0;J[u+28>>2]=0;j=J[b+4>>2];d=j>>>0>8?j:8;if((d|0)>=0){J[8369]=J[8369]+1;q=ia[J[6782]](d<<4,16)|0;j=J[b+4>>2]}g=a;h=J[b+8>>2];n=J[b+12>>2];p=N[b+16>>2];a:{if(!j){break a}d=J[g+24>>2];if((d|0)<0){a=J[g+32>>2];if(J[g+28>>2]<0){if(!(a?!a|!K[g+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[g+36|0]=1;J[g+28>>2]=0;J[g+32>>2]=0;a=0}k=a;a=d<<2;qa(k+a|0,0,0-a|0)}J[g+24>>2]=0;J[u+4>>2]=0;J[u+16>>2]=1065353216;J[u+8>>2]=1065353216;J[u+12>>2]=1065353216;m=Q(-3.4028234663852886e38);v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);y=Q(3.4028234663852886e38);t=Q(-3.4028234663852886e38);l=Q(-3.4028234663852886e38);a=h;while(1){r=N[a+8>>2];m=m<r?r:m;v=r<v?r:v;r=N[a+4>>2];t=r>t?r:t;w=r<w?r:w;r=N[a>>2];l=l<r?r:l;y=r<y?r:y;a=a+n|0;e=e+1|0;if((j|0)!=(e|0)){continue}break}r=Q(m-v);v=Q(Q(r*Q(.5))+v);m=Q(t-w);x=Q(Q(m*Q(.5))+w);w=Q(l-y);C=Q(Q(w*Q(.5))+y);b:{c:{if(!(j>>>0<3|w<Q(9.999999974752427e-7)|m<Q(9.999999974752427e-7))){if(!(r<Q(9.999999974752427e-7))){break c}}y=Q(.009999999776482582);l=Q(.009999999776482582);t=Q(.009999999776482582);p=w>Q(9.999999974752427e-7)?w<Q(3.4028234663852886e38)?w:Q(3.4028234663852886e38):Q(3.4028234663852886e38);p=m>Q(9.999999974752427e-7)?m<p?m:p:p;p=r>Q(9.999999974752427e-7)?p>r?r:p:p;d:{if(p==Q(3.4028234663852886e38)){break d}y=Q(p*Q(.05000000074505806));l=m<Q(9.999999974752427e-7)?y:m;t=w<Q(9.999999974752427e-7)?y:w;if(r<Q(9.999999974752427e-7)){break d}y=r}p=Q(v+y);r=Q(v-y);v=Q(x+l);w=Q(x-l);m=Q(C-t);y=Q(C+t);break b}N[u+16>>2]=r;N[u+12>>2]=m;N[u+8>>2]=w;l=Q(Q(1)/r);t=Q(v*l);y=x;x=Q(Q(1)/m);v=Q(y*x);y=C;C=Q(Q(1)/w);w=Q(y*C);while(1){r=Q(l*N[h+8>>2]);y=Q(x*N[h+4>>2]);m=Q(C*N[h>>2]);a=0;d=0;e:{f:{g:{if(!f){break g}while(1){h:{d=(a<<4)+q|0;D=N[d>>2];if(!(p>Q(R(Q(D-m))))){break h}G=N[d+4>>2];if(!(p>Q(R(Q(G-y))))){break h}L=N[d+8>>2];if(!(p>Q(R(Q(L-r))))){break h}F=Q(r-t);V=Q(F*F);F=Q(m-w);T=Q(F*F);F=Q(y-v);L=Q(L-t);D=Q(D-w);I=Q(D*D);D=Q(G-v);if(Q(V+Q(T+Q(F*F)))>Q(Q(L*L)+Q(I+Q(D*D)))){N[d>>2]=m;N[d+4>>2]=y;N[d+8>>2]=r}d=a;break g}a=a+1|0;if((f|0)!=(a|0)){continue}break}d=f;break f}if((d|0)!=(f|0)){break e}}a=(f<<4)+q|0;N[a+8>>2]=r;N[a+4>>2]=y;N[a>>2]=m;J[u+4>>2]=f+1}f=J[g+24>>2];i:{if((f|0)!=J[g+28>>2]){break i}i=f?f<<1:1;if((i|0)<=(f|0)){break i}j:{if(!i){e=0;break j}J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;f=J[g+24>>2]}k=J[g+32>>2];k:{l:{if((f|0)>0){s=0;a=0;if(f-1>>>0>=3){A=f&-4;B=0;while(1){o=a<<2;J[o+e>>2]=J[k+o>>2];M=o|4;J[M+e>>2]=J[k+M>>2];M=o|8;J[M+e>>2]=J[k+M>>2];o=o|12;J[o+e>>2]=J[k+o>>2];a=a+4|0;B=B+4|0;if((A|0)!=(B|0)){continue}break}}f=f&3;if(!f){break l}while(1){o=a<<2;J[o+e>>2]=J[k+o>>2];a=a+1|0;s=s+1|0;if((f|0)!=(s|0)){continue}break}break l}if(!k){break k}}if(k?K[g+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](k)}f=J[g+24>>2]}J[g+32>>2]=e;H[g+36|0]=1;J[g+28>>2]=i}h=h+n|0;J[J[g+32>>2]+(f<<2)>>2]=d;J[g+24>>2]=J[g+24>>2]+1;f=J[u+4>>2];U=U+1|0;if((j|0)!=(U|0)){continue}break}y=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);m:{if(!f){v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);t=Q(-3.4028234663852886e38);break m}a=0;v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);t=Q(-3.4028234663852886e38);while(1){d=(a<<4)+q|0;l=N[d+8>>2];y=l>y?l:y;r=l<r?l:r;l=N[d+4>>2];m=l>m?l:m;v=l<v?l:v;l=N[d>>2];t=l>t?l:t;w=l<w?l:w;a=a+1|0;if((f|0)!=(a|0)){continue}break}}y=Q(y-r);l=Q(t-w);m=Q(m-v);if(!(l<Q(9.999999974752427e-7)|m<Q(9.999999974752427e-7)|y<Q(9.999999974752427e-7))){if(f>>>0>2){break a}}x=Q(Q(y*Q(.5))+r);C=Q(Q(m*Q(.5))+v);D=Q(Q(l*Q(.5))+w);t=Q(.009999999776482582);w=Q(.009999999776482582);r=Q(.009999999776482582);v=l>=Q(9.999999974752427e-7)?l<Q(3.4028234663852886e38)?l:Q(3.4028234663852886e38):Q(3.4028234663852886e38);v=m>=Q(9.999999974752427e-7)?m<v?m:v:v;v=y>=Q(9.999999974752427e-7)?v>y?y:v:v;n:{if(v==Q(3.4028234663852886e38)){break n}r=Q(v*Q(.05000000074505806));w=m<Q(9.999999974752427e-7)?r:m;t=l<Q(9.999999974752427e-7)?r:l;if(y<Q(9.999999974752427e-7)){break n}r=y}p=Q(x+r);r=Q(x-r);v=Q(C+w);w=Q(C-w);m=Q(D-t);y=Q(D+t)}N[q+112>>2]=m;N[q+96>>2]=y;N[q+80>>2]=y;N[q+64>>2]=m;N[q+48>>2]=m;N[q+32>>2]=y;N[q+16>>2]=y;N[q+8>>2]=r;N[q+4>>2]=w;N[q>>2]=m;N[q+120>>2]=p;N[q+116>>2]=v;N[q+104>>2]=p;N[q+100>>2]=v;N[q+88>>2]=p;N[q+84>>2]=w;N[q+72>>2]=p;N[q+68>>2]=w;N[q+56>>2]=r;N[q+52>>2]=v;N[q+40>>2]=r;N[q+36>>2]=v;N[q+24>>2]=r;N[q+20>>2]=w;J[u+4>>2]=8}o:{if(!j){break o}o=J[u+4>>2];p:{if(!o){break p}d=0;r=N[u+16>>2];y=N[u+12>>2];m=N[u+8>>2];if((o|0)!=1){f=o&-2;while(1){h=d<<4;a=h+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2];a=(h|16)+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2];d=d+2|0;z=z+2|0;if((f|0)!=(z|0)){continue}break}}if(!(o&1)){break p}a=(d<<4)+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2]}i=0;s=0;k=0;z=0;j=g;M=J[b+20>>2];d=0;n=ga+-64|0;ga=n;q:{if((o|0)<4){break q}m=N[q+8>>2];w=N[q+4>>2];t=N[q>>2];J[8369]=J[8369]+1;f=o<<2;a=ia[J[6782]](f,16)|0;J[n+44>>2]=0;J[8369]=J[8369]+1;h=ia[J[6782]](f,16)|0;J[n+52>>2]=h;H[n+56|0]=1;J[n+48>>2]=o;r=m;y=w;v=t;e=o;s=e;while(1){r:{if((d|0)!=(e|0)){f=h;e=d;break r}A=e?e<<1:1;if((A|0)<=(e|0)){f=h;break r}if(A){J[8369]=J[8369]+1;f=ia[J[6782]](A<<2,16)|0}else{f=0}s:{t:{if((e|0)>0){U=e&3;B=0;d=0;if(e-1>>>0>=3){ba=e&-4;e=0;while(1){g=d<<2;J[g+f>>2]=J[g+h>>2];Z=g|4;J[Z+f>>2]=J[h+Z>>2];Z=g|8;J[Z+f>>2]=J[h+Z>>2];g=g|12;J[g+f>>2]=J[g+h>>2];d=d+4|0;e=e+4|0;if((ba|0)!=(e|0)){continue}break}}if(!U){break t}while(1){g=d<<2;J[g+f>>2]=J[g+h>>2];d=d+1|0;B=B+1|0;if((U|0)!=(B|0)){continue}break}break t}if(!h){break s}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}e=J[n+44>>2]}J[n+52>>2]=f;H[n+56|0]=1;J[n+48>>2]=A}J[(e<<2)+f>>2]=1;J[n+44>>2]=J[n+44>>2]+1;u:{if((i|0)!=(s|0)){g=a;break u}s=i?i<<1:1;if(s>>>0<=i>>>0){g=a;s=i;break u}J[8369]=J[8369]+1;g=ia[J[6782]](s<<2,16)|0;v:{if(i){B=0;d=0;if(i-1>>>0>=3){A=i&2147483644;e=0;while(1){h=d<<2;J[h+g>>2]=J[a+h>>2];U=h|4;J[U+g>>2]=J[a+U>>2];U=h|8;J[U+g>>2]=J[a+U>>2];h=h|12;J[h+g>>2]=J[a+h>>2];d=d+4|0;e=e+4|0;if((A|0)!=(e|0)){continue}break}}h=i&3;if(!h){break v}while(1){e=d<<2;J[e+g>>2]=J[a+e>>2];d=d+1|0;B=B+1|0;if((h|0)!=(B|0)){continue}break}break v}if(a){break v}s=1;break u}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}J[(i<<2)+g>>2]=0;a=(i<<4)+q|0;l=N[a+8>>2];r=l>r?l:r;p=N[a+4>>2];y=p>y?p:y;x=N[a>>2];v=v<x?x:v;m=l<m?l:m;w=p<w?p:w;t=t>x?x:t;i=i+1|0;if((o|0)!=(i|0)){e=J[n+48>>2];d=J[n+44>>2];h=f;a=g;continue}break}a=ga+-64|0;ga=a;J[a+24>>2]=1065353216;J[a+28>>2]=0;J[a+16>>2]=1008981770;J[a+20>>2]=1017370378;s=n+40|0;e=Nb(q,o,a+16|0,s);J[a+12>>2]=0;N[a+8>>2]=-N[a+24>>2];N[a+4>>2]=-N[a+20>>2];N[a>>2]=-N[a+16>>2];i=Nb(q,o,a,s);f=(e<<4)+q|0;x=N[f>>2];B=(i<<4)+q|0;C=N[B>>2];p=N[f+4>>2];D=N[B+4>>2];l=N[f+8>>2];G=N[B+8>>2];J[a+28>>2]=0;l=Q(l-G);N[a+24>>2]=l;p=Q(p-D);N[a+20>>2]=p;x=Q(x-C);N[a+16>>2]=x;w:{x:{if((e|0)!=(i|0)){if(l!=Q(0)|p!=Q(0)|x!=Q(0)){break x}}J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}J[a+60>>2]=0;J[a+44>>2]=0;C=Q(Q(p*Q(-.019999999552965164))-x);N[a+56>>2]=C;L=Q(x*Q(0));F=Q(l*Q(.019999999552965164));D=Q(L+F);N[a+52>>2]=D;O=Q(p*Q(-0));G=Q(l+O);N[a+48>>2]=G;d=a+48|0;h=a+32|0;I=Q(Y(Q(Q(C*C)+Q(Q(G*G)+Q(D*D)))));p=Q(p+Q(x*Q(-.019999999552965164)));x=Q(F+O);l=Q(L-l);C=Q(Y(Q(Q(p*p)+Q(Q(x*x)+Q(l*l)))));y:{if(I<C){I=l;l=Q(Q(1)/C);N[a+36>>2]=I*l;N[a+32>>2]=x*l;I=Q(p*l);break y}A=J[d+4>>2];J[h>>2]=J[d>>2];J[h+4>>2]=A;A=J[d+12>>2];J[h+8>>2]=J[d+8>>2];J[h+12>>2]=A;p=N[a+40>>2];x=N[a+32>>2];C=N[a+36>>2];l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(x*x)+Q(C*C))))));N[a+36>>2]=C*l;N[a+32>>2]=x*l;I=Q(p*l)}N[a+40>>2]=I;h=Nb(q,o,h,s);if(!((e|0)!=(h|0)&(h|0)!=(i|0))){J[a+12>>2]=0;N[a+8>>2]=-N[a+40>>2];N[a+4>>2]=-N[a+36>>2];N[a>>2]=-N[a+32>>2];h=Nb(q,o,a,s)}if(!((e|0)!=(h|0)&(h|0)!=(i|0))){J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}A=(h<<4)+q|0;G=N[A+4>>2];x=N[A+8>>2];l=N[A>>2];L=N[f+4>>2];C=N[f+8>>2];p=N[f>>2];J[a+44>>2]=0;J[a+60>>2]=0;l=Q(l-p);N[a+32>>2]=l;p=N[a+24>>2];x=Q(x-C);N[a+40>>2]=x;C=N[a+16>>2];D=N[a+20>>2];G=Q(G-L);N[a+36>>2]=G;L=Q(Q(l*D)-Q(C*G));D=Q(Q(G*p)-Q(D*x));p=Q(Q(x*C)-Q(p*l));l=Q(Q(1)/Q(Y(Q(Q(L*L)+Q(Q(D*D)+Q(p*p))))));N[a+56>>2]=L*l;N[a+52>>2]=p*l;N[a+48>>2]=D*l;d=Nb(q,o,d,s);if(!(!((h|0)==(d|0)|(d|0)==(e|0))&(d|0)!=(i|0))){J[a+12>>2]=0;N[a+8>>2]=-N[a+56>>2];N[a+4>>2]=-N[a+52>>2];N[a>>2]=-N[a+48>>2];d=Nb(q,o,a,s)}if(!(!((d|0)==(h|0)|(d|0)==(e|0))&(d|0)!=(i|0))){J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}s=(d<<4)+q|0;C=N[s+8>>2];D=N[s>>2];G=N[s+4>>2];L=N[B+4>>2];F=N[A+4>>2];l=N[f+4>>2];O=N[B+8>>2];S=N[A>>2];W=N[A+8>>2];p=N[f+8>>2];X=N[B>>2];x=N[f>>2];J[n+28>>2]=i;J[n+24>>2]=e;T=Q(C-p);C=Q(X-x);F=Q(F-l);S=Q(S-x);L=Q(L-l);I=Q(D-x);x=Q(W-p);p=Q(O-p);f=Q(Q(T*Q(Q(C*F)-Q(S*L)))+Q(Q(I*Q(Q(L*x)-Q(F*p)))+Q(Q(G-l)*Q(Q(p*S)-Q(x*C)))))<Q(0);J[n+36>>2]=f?h:d;J[n+32>>2]=f?d:h}ga=a- -64|0;z:{a=J[n+24>>2];if((a|0)==-1){s=0;break z}d=J[n+36>>2];e=(d<<4)+q|0;L=N[e>>2];f=J[n+32>>2];i=(f<<4)+q|0;F=N[i>>2];h=J[n+28>>2];s=(h<<4)+q|0;O=N[s>>2];B=(a<<4)+q|0;S=N[B>>2];W=N[e+4>>2];X=N[i+4>>2];ca=N[s+4>>2];da=N[B+4>>2];ea=N[e+8>>2];fa=N[i+8>>2];ha=N[s+8>>2];ja=N[B+8>>2];e=ec(j,f,d,h);J[e+12>>2]=2;J[e+16>>2]=3;s=1;J[e+20>>2]=1;e=ec(j,d,f,a);J[e+12>>2]=3;J[e+16>>2]=2;J[e+20>>2]=0;e=ec(j,a,h,d);J[e+12>>2]=0;J[e+16>>2]=1;J[e+20>>2]=3;a=ec(j,h,a,f);J[a+12>>2]=1;J[a+16>>2]=0;J[a+20>>2]=2;J[(d<<2)+g>>2]=1;J[(J[n+32>>2]<<2)+g>>2]=1;J[(J[n+28>>2]<<2)+g>>2]=1;J[(J[n+24>>2]<<2)+g>>2]=1;a=J[j+4>>2];if((a|0)>0){f=0;while(1){l=Q(0);p=Q(1);x=Q(0);a=J[J[j+12>>2]+(f<<2)>>2];d=(J[a+4>>2]<<4)+q|0;C=N[d>>2];h=(J[a>>2]<<4)+q|0;G=Q(C-N[h>>2]);e=(J[a+8>>2]<<4)+q|0;D=N[d+4>>2];V=Q(N[e+4>>2]-D);$=Q(N[e>>2]-C);D=Q(D-N[h+4>>2]);C=Q(Q(G*V)-Q($*D));T=D;D=N[d+8>>2];aa=Q(N[e+8>>2]-D);I=V;V=Q(D-N[h+8>>2]);D=Q(Q(T*aa)-Q(I*V));G=Q(Q(V*$)-Q(aa*G));V=Q(Y(Q(Q(C*C)+Q(Q(D*D)+Q(G*G)))));if(V!=Q(0)){p=Q(Q(1)/V);x=Q(C*p);l=Q(G*p);p=Q(D*p)}J[n+20>>2]=0;N[n+16>>2]=x;N[n+12>>2]=l;N[n+8>>2]=p;d=Nb(q,o,n+8|0,n+40|0);J[a+28>>2]=d;h=a;d=(d<<4)+q|0;a=(J[a>>2]<<4)+q|0;N[h+32>>2]=Q(N[n+16>>2]*Q(N[d+8>>2]-N[a+8>>2]))+Q(Q(N[n+8>>2]*Q(N[d>>2]-N[a>>2]))+Q(Q(N[d+4>>2]-N[a+4>>2])*N[n+12>>2]));a=J[j+4>>2];f=f+1|0;if((a|0)>(f|0)){continue}break}}h=M?M-4|0:999999996;if((h|0)<=0){break z}C=Q(Q(Q(Q(ja+ha)+fa)+ea)*Q(.25));D=Q(Q(Q(Q(da+ca)+X)+W)*Q(.25));G=Q(Q(Q(Q(S+O)+F)+L)*Q(.25));r=Q(r-m);m=Q(r*r);r=Q(v-t);t=Q(r*r);r=Q(y-w);r=Q(Q(Y(Q(m+Q(t+Q(r*r)))))*Q(.0010000000474974513));y=Q(r*Q(.009999999776482582));L=Q(Q(r*r)*Q(.10000000149011612));while(1){s=J[j+12>>2];d=0;f=0;if((a|0)!=1){B=a&2147483646;i=0;while(1){A=f<<2;e=J[A+s>>2];if(!(!e|!(N[d+32>>2]<N[e+32>>2])?d:0)){d=e}e=J[s+(A|4)>>2];if(!(!e|!(N[d+32>>2]<N[e+32>>2])?d:0)){d=e}f=f+2|0;i=i+2|0;if((B|0)!=(i|0)){continue}break}}A:{if(!(a&1)){break A}a=J[s+(f<<2)>>2];if(!a|!(N[d+32>>2]<N[a+32>>2])?d:0){break A}d=a}s=1;if(!(r<N[d+32>>2])|!d){break z}e=J[d+28>>2];J[(e<<2)+g>>2]=1;f=J[j+4>>2];B:{if(!f){break B}d=(e<<4)+q|0;while(1){f=f-1|0;a=J[J[j+12>>2]+(f<<2)>>2];C:{if(!a){break C}l=Q(0);p=Q(1);x=Q(0);i=(J[a+4>>2]<<4)+q|0;m=N[i>>2];B=(J[a>>2]<<4)+q|0;v=N[B>>2];w=Q(m-v);A=(J[a+8>>2]<<4)+q|0;t=N[i+4>>2];F=Q(N[A+4>>2]-t);O=Q(N[A>>2]-m);S=N[B+4>>2];t=Q(t-S);m=Q(Q(w*F)-Q(O*t));T=t;t=N[i+8>>2];W=Q(N[A+8>>2]-t);I=F;F=N[B+8>>2];X=Q(t-F);t=Q(Q(T*W)-Q(I*X));w=Q(Q(X*O)-Q(W*w));O=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(O!=Q(0)){I=m;m=Q(Q(1)/O);x=Q(I*m);p=Q(t*m);l=Q(w*m)}if(!(y<Q(Q(x*Q(N[d+8>>2]-F))+Q(Q(p*Q(N[d>>2]-v))+Q(l*Q(N[d+4>>2]-S)))))){break C}Wj(j,a,e)}if(f){continue}break}a=J[j+4>>2];d=a;if(!a){break B}while(1){D:{M=J[j+12>>2];d=d-1|0;f=J[M+(d<<2)>>2];E:{if(!f){break E}i=J[f+8>>2];A=J[f>>2];B=J[f+4>>2];if(!((A|0)==(e|0)|(B|0)==(e|0))&(e|0)!=(i|0)){break D}l=Q(0);p=Q(1);x=Q(0);B=(B<<4)+q|0;m=N[B>>2];A=(A<<4)+q|0;F=N[A>>2];w=Q(m-F);i=(i<<4)+q|0;t=N[B+4>>2];v=Q(N[i+4>>2]-t);O=Q(N[i>>2]-m);S=N[A+4>>2];t=Q(t-S);m=Q(Q(w*v)-Q(O*t));T=t;t=N[B+8>>2];W=Q(N[i+8>>2]-t);I=v;X=N[A+8>>2];v=Q(t-X);t=Q(Q(T*W)-Q(I*v));w=Q(Q(v*O)-Q(W*w));v=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(v!=Q(0)){I=m;m=Q(Q(1)/v);x=Q(I*m);p=Q(t*m);l=Q(w*m)}if(!(y<Q(Q(x*Q(C-X))+Q(Q(p*Q(G-F))+Q(Q(D-S)*l)))|v<L)){break E}Wj(j,J[M+(J[f+12>>2]<<2)>>2],e);a=J[j+4>>2];d=a}if(d){continue}}break}if(!a){break B}while(1){a=a-1|0;d=J[J[j+12>>2]+(a<<2)>>2];F:{if(!d){break F}if(J[d+28>>2]>=0){break B}l=Q(0);p=Q(1);x=Q(0);f=(J[d+4>>2]<<4)+q|0;m=N[f>>2];e=(J[d>>2]<<4)+q|0;w=Q(m-N[e>>2]);i=(J[d+8>>2]<<4)+q|0;t=N[f+4>>2];v=Q(N[i+4>>2]-t);F=Q(N[i>>2]-m);t=Q(t-N[e+4>>2]);m=Q(Q(w*v)-Q(F*t));T=t;t=N[f+8>>2];O=Q(N[i+8>>2]-t);I=v;v=Q(t-N[e+8>>2]);t=Q(Q(T*O)-Q(I*v));w=Q(Q(v*F)-Q(O*w));v=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(v!=Q(0)){I=m;m=Q(Q(1)/v);x=Q(I*m);p=Q(t*m);l=Q(w*m)}J[n+20>>2]=0;N[n+16>>2]=x;N[n+12>>2]=l;N[n+8>>2]=p;f=Nb(q,o,n+8|0,n+40|0);J[d+28>>2]=f;if(J[(f<<2)+g>>2]){J[d+28>>2]=-1;break F}e=d;f=(f<<4)+q|0;d=(J[d>>2]<<4)+q|0;N[e+32>>2]=Q(N[n+16>>2]*Q(N[f+8>>2]-N[d+8>>2]))+Q(Q(N[n+8>>2]*Q(N[f>>2]-N[d>>2]))+Q(Q(N[f+4>>2]-N[d+4>>2])*N[n+12>>2]))}if(a){continue}break}}if((h|0)<2){break z}h=h-1|0;a=J[j+4>>2];continue}}a=J[n+52>>2];if(!(a?!a|!K[n+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}if(!g){break q}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}ga=n- -64|0;a=0;G:{if(!s){break G}a=J[j+4>>2];H:{if((a|0)<=0){h=0;break H}h=0;while(1){s=z<<2;n=J[s+J[j+12>>2]>>2];if(n){I:{J:{if((k|0)!=(E|0)){break J}d=k?k<<1:1;if((k|0)>=(d|0)){break J}if(d){J[8369]=J[8369]+1;a=ia[J[6782]](d<<2,16)|0}else{a=0}K:{if((k|0)>0){i=k&3;e=0;f=0;if(k-1>>>0>=3){B=k&-4;k=0;while(1){g=f<<2;J[g+a>>2]=J[g+h>>2];A=g|4;J[A+a>>2]=J[h+A>>2];A=g|8;J[A+a>>2]=J[h+A>>2];g=g|12;J[g+a>>2]=J[g+h>>2];f=f+4|0;k=k+4|0;if((B|0)!=(k|0)){continue}break}}if(!i){break K}while(1){g=f<<2;J[g+a>>2]=J[g+h>>2];f=f+1|0;e=e+1|0;if((i|0)!=(e|0)){continue}break}break K}if(!h){break I}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}break I}d=k;a=h}J[(E<<2)+a>>2]=J[n>>2];n=J[s+J[j+12>>2]>>2];L:{M:{B=E+1|0;if((B|0)!=(d|0)){break M}g=d?d<<1:1;if((g|0)<=(d|0)){break M}if(g){J[8369]=J[8369]+1;f=ia[J[6782]](g<<2,16)|0}else{f=0}N:{if((d|0)<=0){break N}e=0;h=0;if(d-1>>>0>=3){A=d&-4;k=0;while(1){i=h<<2;J[i+f>>2]=J[a+i>>2];M=i|4;J[M+f>>2]=J[a+M>>2];M=i|8;J[M+f>>2]=J[a+M>>2];i=i|12;J[i+f>>2]=J[a+i>>2];h=h+4|0;k=k+4|0;if((A|0)!=(k|0)){continue}break}}d=d&3;if(!d){break N}while(1){k=h<<2;J[k+f>>2]=J[a+k>>2];h=h+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break L}g=d;f=a}J[(B<<2)+f>>2]=J[n+4>>2];n=J[s+J[j+12>>2]>>2];O:{P:{B=E+2|0;if((B|0)!=(g|0)){break P}k=g?g<<1:1;if((k|0)<=(g|0)){break P}if(k){J[8369]=J[8369]+1;h=ia[J[6782]](k<<2,16)|0}else{h=0}Q:{if((g|0)<=0){break Q}e=0;a=0;if(g-1>>>0>=3){A=g&-4;d=0;while(1){i=a<<2;J[i+h>>2]=J[f+i>>2];M=i|4;J[M+h>>2]=J[f+M>>2];M=i|8;J[M+h>>2]=J[f+M>>2];i=i|12;J[i+h>>2]=J[f+i>>2];a=a+4|0;d=d+4|0;if((A|0)!=(d|0)){continue}break}}d=g&3;if(!d){break Q}while(1){g=a<<2;J[g+h>>2]=J[f+g>>2];a=a+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}break O}k=g;h=f}J[(B<<2)+h>>2]=J[n+8>>2];d=J[j+12>>2];a=J[d+s>>2];J[(J[a+24>>2]<<2)+d>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}E=E+3|0;a=J[j+4>>2]}z=z+1|0;if((z|0)<(a|0)){continue}break}}J[u+60>>2]=(E|0)/3;g=J[u+44>>2];if((g|0)<(E|0)){R:{if(J[u+48>>2]>=(E|0)){f=J[u+52>>2];break R}S:{if(!E){f=0;a=g;break S}J[8369]=J[8369]+1;f=ia[J[6782]](E<<2,16)|0;a=J[u+44>>2]}i=J[u+52>>2];T:{U:{e=a;if((a|0)>0){k=0;a=0;if(e-1>>>0>=3){n=e&-4;d=0;while(1){s=a<<2;J[s+f>>2]=J[i+s>>2];z=s|4;J[z+f>>2]=J[i+z>>2];z=s|8;J[z+f>>2]=J[i+z>>2];s=s|12;J[s+f>>2]=J[i+s>>2];a=a+4|0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}d=e&3;if(!d){break U}while(1){e=a<<2;J[e+f>>2]=J[e+i>>2];a=a+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}break U}if(i){break U}break T}if(i?K[u+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}}J[u+52>>2]=f;H[u+56|0]=1;J[u+48>>2]=E}qa((g<<2)+f|0,0,E-g<<2)}J[u+44>>2]=E;V:{if((E|0)<=0){break V}g=E&3;d=J[u+52>>2];e=0;a=0;if(E-1>>>0>=3){k=E&-4;E=0;while(1){f=a<<2;J[f+d>>2]=J[f+h>>2];i=f|4;J[i+d>>2]=J[h+i>>2];i=f|8;J[i+d>>2]=J[h+i>>2];f=f|12;J[f+d>>2]=J[f+h>>2];a=a+4|0;E=E+4|0;if((k|0)!=(E|0)){continue}break}}if(!g){break V}while(1){f=a<<2;J[f+d>>2]=J[f+h>>2];a=a+1|0;e=e+1|0;if((g|0)!=(e|0)){continue}break}}d=J[j+4>>2];W:{if((d|0)>=0){break W}if(J[j+8>>2]<0){a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[j+16|0]=1;J[j+8>>2]=0;J[j+12>>2]=0}f=0;a=d;g=0-a&3;if(g){while(1){J[J[j+12>>2]+(a<<2)>>2]=0;a=a+1|0;f=f+1|0;if((g|0)!=(f|0)){continue}break}}if(d>>>0>4294967292){break W}while(1){d=a<<2;J[d+J[j+12>>2]>>2]=0;J[(d+J[j+12>>2]|0)+4>>2]=0;J[(d+J[j+12>>2]|0)+8>>2]=0;J[(d+J[j+12>>2]|0)+12>>2]=0;a=a+4|0;if(a){continue}break}}J[j+4>>2]=0;if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}a=1}if(!a){break o}J[u+36>>2]=q;i=J[u+60>>2];J[u+32>>2]=i;s=P(i,3);J[u+28>>2]=s;J[u+24>>2]=o;if((o|0)<=0){h=0}else{J[8369]=J[8369]+1;h=ia[J[6782]](o<<4,16)|0}f=J[u+52>>2];d=0;a=J[j+24>>2];X:{if((a|0)<=0){e=0;break X}J[8369]=J[8369]+1;a=a<<2;e=ia[J[6782]](a,16)|0;a=qa(e,0,a);if(J[j+24>>2]<=0){break X}g=J[j+32>>2];while(1){k=d<<2;J[k+a>>2]=J[g+k>>2];d=d+1|0;if((d|0)<J[j+24>>2]){continue}break}}d=o<<2;Y:{Z:{_:{if((o|0)>0){J[8369]=J[8369]+1;a=ia[J[6782]](d,16)|0;d=qa(a,0,d);J[u+4>>2]=0;if((s|0)>0){break _}if(d){break Z}break Y}a=0;J[u+4>>2]=qa(0,0,d);if((s|0)<=0){break Y}}z=0;while(1){d=f+(z<<2)|0;g=J[d>>2];n=(g<<2)+a|0;k=J[n>>2];$:{if(k){J[d>>2]=k-1;break $}J[d>>2]=J[u+4>>2];d=J[u+4>>2];k=h+(d<<4)|0;o=(g<<4)+q|0;N[k>>2]=N[o>>2];N[k+4>>2]=N[o+4>>2];N[k+8>>2]=N[o+8>>2];k=J[j+24>>2];if((k|0)>0){o=J[j+32>>2];d=0;while(1){E=d<<2;if((g|0)==J[E+e>>2]){J[o+E>>2]=J[u+4>>2];k=J[j+24>>2]}d=d+1|0;if((k|0)>(d|0)){continue}break}d=J[u+4>>2]}d=d+1|0;J[u+4>>2]=d;J[n>>2]=d}z=z+1|0;if((s|0)!=(z|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}aa:{ba:{ca:{da:{if(H[b|0]&1){H[c|0]=0;g=J[u+4>>2];J[c+4>>2]=g;d=J[c+12>>2];if(!((g|0)<=(d|0)|(g|0)<=J[c+16>>2])){ea:{if(!g){z=0;break ea}J[8369]=J[8369]+1;z=ia[J[6782]](g<<4,16)|0;d=J[c+12>>2]}fa:{if((d|0)<=0){break fa}e=0;if((d|0)!=1){n=d&-2;a=0;while(1){o=e<<4;k=o+z|0;j=o+J[c+20>>2]|0;E=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=E;E=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=E;j=o|16;k=j+z|0;j=j+J[c+20>>2]|0;o=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=o;o=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=o;e=e+2|0;a=a+2|0;if((n|0)!=(a|0)){continue}break}}if(!(d&1)){break fa}d=e<<4;a=d+z|0;d=d+J[c+20>>2]|0;e=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=e;e=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=e}a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+20>>2]=z;H[c+24|0]=1;J[c+16>>2]=g}J[c+32>>2]=s;J[c+28>>2]=i;J[c+12>>2]=g;k=J[c+40>>2];if((k|0)>=(s|0)){break ba}if((s|0)<=J[c+44>>2]){d=J[c+48>>2];break ca}ga:{if(!i){d=0;a=k;break ga}J[8369]=J[8369]+1;d=ia[J[6782]](P(i,12),16)|0;a=J[c+40>>2]}j=J[c+48>>2];g=a;if((a|0)>0){z=0;e=0;if(g-1>>>0>=3){n=g&-4;a=0;while(1){o=e<<2;J[o+d>>2]=J[j+o>>2];E=o|4;J[E+d>>2]=J[j+E>>2];E=o|8;J[E+d>>2]=J[j+E>>2];o=o|12;J[o+d>>2]=J[j+o>>2];e=e+4|0;a=a+4|0;if((n|0)!=(a|0)){continue}break}}a=g&3;if(!a){break da}while(1){g=e<<2;J[g+d>>2]=J[g+j>>2];e=e+1|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break da}if(j){break da}J[c+48>>2]=d;J[c+44>>2]=s;H[c+52|0]=1;break ca}H[c|0]=1;g=J[u+4>>2];J[c+4>>2]=g;d=J[c+12>>2];if(!((g|0)<=(d|0)|(g|0)<=J[c+16>>2])){ha:{if(!g){z=0;break ha}J[8369]=J[8369]+1;z=ia[J[6782]](g<<4,16)|0;d=J[c+12>>2]}ia:{if((d|0)<=0){break ia}e=0;if((d|0)!=1){s=d&-2;a=0;while(1){o=e<<4;k=o+z|0;j=o+J[c+20>>2]|0;n=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=n;n=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=n;j=o|16;k=j+z|0;j=j+J[c+20>>2]|0;o=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=o;o=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=o;e=e+2|0;a=a+2|0;if((s|0)!=(a|0)){continue}break}}if(!(d&1)){break ia}d=e<<4;a=d+z|0;d=d+J[c+20>>2]|0;e=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=e;e=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=e}a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+20>>2]=z;H[c+24|0]=1;J[c+16>>2]=g}J[c+28>>2]=i;J[c+12>>2]=g;o=i<<2;J[c+32>>2]=o;g=J[c+40>>2];if((g|0)<(o|0)){ja:{if((o|0)<=J[c+44>>2]){d=J[c+48>>2];break ja}ka:{if(!o){d=0;a=g;break ka}J[8369]=J[8369]+1;d=ia[J[6782]](i<<4,16)|0;a=J[c+40>>2]}j=J[c+48>>2];la:{k=a;if((a|0)>0){z=0;e=0;if(k-1>>>0>=3){n=k&-4;a=0;while(1){s=e<<2;J[s+d>>2]=J[j+s>>2];E=s|4;J[E+d>>2]=J[j+E>>2];E=s|8;J[E+d>>2]=J[j+E>>2];s=s|12;J[s+d>>2]=J[j+s>>2];e=e+4|0;a=a+4|0;if((n|0)!=(a|0)){continue}break}}a=k&3;if(!a){break la}while(1){k=e<<2;J[k+d>>2]=J[j+k>>2];e=e+1|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break la}if(j){break la}J[c+48>>2]=d;J[c+44>>2]=o;H[c+52|0]=1;break ja}if(j?K[c+52|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+48>>2]=d;H[c+52|0]=1;J[c+44>>2]=o}qa((g<<2)+d|0,0,o-g<<2)}J[c+40>>2]=o;sa(J[c+20>>2],h,J[u+4>>2]<<4);if(!i){break aa}e=J[c+48>>2];z=0;d=f;while(1){J[e>>2]=3;ma:{if(K[b|0]&2){J[e+4>>2]=J[d+8>>2];J[e+8>>2]=J[d+4>>2];a=d;break ma}J[e+4>>2]=J[d>>2];J[e+8>>2]=J[d+4>>2];a=d+8|0}J[e+12>>2]=J[a>>2];d=d+12|0;e=e+16|0;z=z+1|0;if((i|0)!=(z|0)){continue}break}break aa}if(j?K[c+52|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+48>>2]=d;H[c+52|0]=1;J[c+44>>2]=s}a=k<<2;qa(a+d|0,0,P(i,12)-a|0)}J[c+40>>2]=s;sa(J[c+20>>2],h,J[u+4>>2]<<4);if(K[b|0]&2){if(!i){break aa}a=i&3;e=J[c+48>>2];na:{if(i-1>>>0<3){d=f;break na}b=i&-4;z=0;d=f;while(1){J[e>>2]=J[d+8>>2];J[e+4>>2]=J[d+4>>2];J[e+8>>2]=J[d>>2];J[e+12>>2]=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=J[d+12>>2];J[e+24>>2]=J[d+32>>2];J[e+28>>2]=J[d+28>>2];J[e+32>>2]=J[d+24>>2];J[e+36>>2]=J[d+44>>2];J[e+40>>2]=J[d+40>>2];J[e+44>>2]=J[d+36>>2];d=d+48|0;e=e+48|0;z=z+4|0;if((b|0)!=(z|0)){continue}break}}if(!a){break aa}z=0;while(1){J[e>>2]=J[d+8>>2];J[e+4>>2]=J[d+4>>2];J[e+8>>2]=J[d>>2];d=d+12|0;e=e+12|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break aa}sa(J[c+48>>2],f,P(i,12))}if(J[u+44>>2]){if(!(f?!f|!K[u+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[u+52>>2]=0;H[u+56|0]=1;J[u+44>>2]=0;J[u+48>>2]=0}_=0;J[u+36>>2]=0;J[u+24>>2]=0;J[u+28>>2]=0;if(!h){break o}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}}if(q){J[8370]=J[8370]+1;ia[J[6783]](q)}a=J[u+52>>2];if(!(a?!a|!K[u+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=u- -64|0;return _}function Hm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=0,z=Q(0),A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=0,H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=0,X=0,Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=0,ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=0,pa=0,qa=Q(0),ra=0,ta=0,ua=0,va=Q(0);d=ga-160|0;ga=d;N[d+112>>2]=N[b>>2];N[d+64>>2]=N[b+64>>2];N[d+116>>2]=N[b+4>>2];N[d+68>>2]=N[b+68>>2];N[d+120>>2]=N[b+8>>2];N[d+72>>2]=N[b+72>>2];N[d+128>>2]=N[b+16>>2];N[d+80>>2]=N[b+80>>2];N[d+132>>2]=N[b+20>>2];N[d+84>>2]=N[b+84>>2];N[d+136>>2]=N[b+24>>2];N[d+88>>2]=N[b+88>>2];N[d+144>>2]=N[b+32>>2];N[d+96>>2]=N[b+96>>2];N[d+148>>2]=N[b+36>>2];N[d+100>>2]=N[b+100>>2];N[d+152>>2]=N[b+40>>2];N[d+104>>2]=N[b+104>>2];e=J[a+4>>2];j=N[e+36>>2];i=N[e+32>>2];m=N[e+28>>2];g=Q(ia[J[J[e>>2]+48>>2]](e));h=Q(ia[J[J[e>>2]+48>>2]](e));l=Q(ia[J[J[e>>2]+48>>2]](e));J[d+36>>2]=0;i=Q(i+h);N[d+28>>2]=i+i;i=Q(m+g);N[d+24>>2]=i+i;j=Q(j+l);N[d+32>>2]=j+j;a=J[a+8>>2];j=N[a+36>>2];i=N[a+32>>2];m=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));l=Q(ia[J[J[a>>2]+48>>2]](a));J[d+20>>2]=0;i=Q(i+h);N[d+12>>2]=i+i;i=Q(m+g);N[d+8>>2]=i+i;j=Q(j+l);N[d+16>>2]=j+j;W=c;e=0;f=ga-368|0;ga=f;a=d+112|0;I=N[a+36>>2];U=N[a+4>>2];F=N[a+20>>2];s=N[a+40>>2];ea=N[a+8>>2];L=N[a+24>>2];G=b+48|0;m=N[G+8>>2];b=b+112|0;g=N[b+8>>2];u=N[G>>2];r=N[b>>2];z=N[G+4>>2];D=N[b+4>>2];j=N[a+32>>2];qa=N[a>>2];i=N[a+16>>2];h=Q(N[d+24>>2]*Q(.5));N[f+356>>2]=h;l=Q(N[d+28>>2]*Q(.5));N[f+360>>2]=l;k=Q(N[d+32>>2]*Q(.5));N[f+364>>2]=k;x=Q(N[d+8>>2]*Q(.5));N[f+344>>2]=x;t=Q(N[d+12>>2]*Q(.5));N[f+348>>2]=t;o=Q(N[d+16>>2]*Q(.5));N[f+352>>2]=o;m=Q(g-m);g=Q(r-u);u=Q(D-z);r=Q(Q(j*m)+Q(Q(qa*g)+Q(i*u)));c=d- -64|0;Z=N[c+40>>2];_=N[c+8>>2];M=N[c+24>>2];z=Q(Q(j*Z)+Q(Q(qa*_)+Q(i*M)));ha=Q(R(z));V=N[c+36>>2];H=N[c+4>>2];$=N[c+20>>2];D=Q(Q(j*V)+Q(Q(qa*H)+Q(i*$)));ja=Q(R(D));aa=N[c+32>>2];ba=N[c>>2];ca=N[c+16>>2];A=Q(Q(j*aa)+Q(Q(qa*ba)+Q(i*ca)));va=Q(R(A));i=Q(Q(R(r))-Q(Q(o*ha)+Q(Q(t*ja)+Q(Q(x*va)+h))));a:{if(i>Q(0)){break a}K=Q(Q(I*Z)+Q(Q(U*_)+Q(F*M)));ka=Q(R(K));O=Q(Q(I*V)+Q(Q(U*H)+Q(F*$)));S=Q(R(O));T=Q(Q(I*aa)+Q(Q(U*ba)+Q(F*ca)));la=Q(R(T));j=Q(-3.4028234663852886e38);if(i>Q(-3.4028234663852886e38)){j=i;q=a;B=1;e=r<Q(0)}I=Q(Q(I*m)+Q(Q(U*g)+Q(u*F)));i=Q(Q(R(I))-Q(Q(o*ka)+Q(Q(t*S)+Q(Q(x*la)+l))));if(i>Q(0)){break a}F=Q(Q(s*Z)+Q(Q(ea*_)+Q(L*M)));ma=Q(R(F));E=Q(Q(s*V)+Q(Q(ea*H)+Q(L*$)));na=Q(R(E));v=Q(Q(s*aa)+Q(Q(ea*ba)+Q(L*ca)));da=Q(R(v));if(i>j){q=a+4|0;j=i;B=2;e=I<Q(0)}s=Q(Q(s*m)+Q(Q(ea*g)+Q(u*L)));i=Q(Q(R(s))-Q(Q(o*ma)+Q(Q(t*na)+Q(Q(x*da)+k))));if(i>Q(0)){break a}if(i>j){q=a+8|0;j=i;B=3;e=s<Q(0)}L=Q(Q(aa*m)+Q(Q(ba*g)+Q(u*ca)));i=Q(Q(R(L))-Q(x+Q(Q(k*da)+Q(Q(h*va)+Q(l*la)))));if(i>Q(0)){break a}if(i>j){j=i;q=c;B=4;e=L<Q(0)}L=Q(Q(V*m)+Q(Q(H*g)+Q(u*$)));i=Q(Q(R(L))-Q(t+Q(Q(k*na)+Q(Q(h*ja)+Q(l*S)))));if(i>Q(0)){break a}if(i>j){q=c+4|0;j=i;B=5;e=L<Q(0)}m=Q(Q(Z*m)+Q(Q(_*g)+Q(u*M)));i=Q(Q(R(m))-Q(o+Q(Q(k*ma)+Q(Q(h*ha)+Q(l*ka)))));if(i>Q(0)){break a}if(i>j){q=c+8|0;j=i;B=6;e=m<Q(0)}V=Q(Q(s*T)-Q(v*I));$=Q(ja+Q(9999999747378752e-21));aa=Q(ha+Q(9999999747378752e-21));ba=Q(da+Q(9999999747378752e-21));ca=Q(la+Q(9999999747378752e-21));i=Q(Q(R(V))-Q(Q(o*$)+Q(Q(t*aa)+Q(Q(l*ba)+Q(k*ca)))));if(i>Q(1.1920928955078125e-7)){break a}L=Q(na+Q(9999999747378752e-21));Z=Q(S+Q(9999999747378752e-21));_=Q(va+Q(9999999747378752e-21));S=Q(-I);u=Q(0);la=Q(T*T);na=Q(Q(v*v)+Q(0));M=Q(Y(Q(la+na)));b:{if(!(M>Q(1.1920928955078125e-7))){g=Q(0);m=Q(0);break b}g=Q(0);i=Q(i/M);m=Q(0);if(!(Q(i*Q(1.0499999523162842))>j)){break b}e=V<Q(0);g=Q(T/M);u=Q(Q(0)/M);q=0;B=7;j=i;m=Q(Q(-v)/M)}da=Q(Q(s*O)+Q(E*S));i=Q(Q(R(da))-Q(Q(o*_)+Q(Q(x*aa)+Q(Q(l*L)+Q(k*Z)))));if(i>Q(1.1920928955078125e-7)){break a}M=Q(ma+Q(9999999747378752e-21));V=Q(ka+Q(9999999747378752e-21));ka=Q(O*O);ma=Q(Q(E*E)+Q(0));H=Q(Y(Q(ka+ma)));c:{if(!(H>Q(1.1920928955078125e-7))){break c}i=Q(i/H);if(!(Q(i*Q(1.0499999523162842))>j)){break c}e=da<Q(0);g=Q(O/H);m=Q(Q(-E)/H);u=Q(Q(0)/H);q=0;B=8;j=i}S=Q(Q(s*K)+Q(F*S));i=Q(Q(R(S))-Q(Q(t*_)+Q(Q(x*$)+Q(Q(l*M)+Q(k*V)))));if(i>Q(1.1920928955078125e-7)){break a}da=Q(K*K);ha=Q(Q(F*F)+Q(0));H=Q(Y(Q(da+ha)));d:{if(!(H>Q(1.1920928955078125e-7))){break d}i=Q(i/H);if(!(Q(i*Q(1.0499999523162842))>j)){break d}e=S<Q(0);g=Q(K/H);m=Q(Q(-F)/H);u=Q(Q(0)/H);q=0;B=9;j=i}S=Q(Q(r*v)-Q(A*s));i=Q(Q(R(S))-Q(Q(o*Z)+Q(Q(t*V)+Q(Q(h*ba)+Q(k*_)))));if(i>Q(1.1920928955078125e-7)){break a}H=Q(-s);ja=Q(A*A);s=Q(Y(Q(ja+na)));e:{if(!(s>Q(1.1920928955078125e-7))){break e}i=Q(i/s);if(!(Q(i*Q(1.0499999523162842))>j)){break e}e=S<Q(0);g=Q(Q(-A)/s);m=Q(Q(0)/s);u=Q(v/s);q=0;B=10;j=i}s=Q(Q(r*E)+Q(D*H));i=Q(Q(R(s))-Q(Q(o*ca)+Q(Q(x*V)+Q(Q(h*L)+Q(k*$)))));if(i>Q(1.1920928955078125e-7)){break a}S=Q(D*D);v=Q(Y(Q(S+ma)));f:{if(!(v>Q(1.1920928955078125e-7))){break f}i=Q(i/v);if(!(Q(i*Q(1.0499999523162842))>j)){break f}e=s<Q(0);g=Q(Q(-D)/v);m=Q(Q(0)/v);u=Q(E/v);q=0;B=11;j=i}v=Q(Q(r*F)+Q(z*H));i=Q(Q(R(v))-Q(Q(t*ca)+Q(Q(x*Z)+Q(Q(h*M)+Q(k*aa)))));if(i>Q(1.1920928955078125e-7)){break a}s=Q(z*z);E=Q(Y(Q(s+ha)));g:{if(!(E>Q(1.1920928955078125e-7))){break g}i=Q(i/E);if(!(Q(i*Q(1.0499999523162842))>j)){break g}e=v<Q(0);g=Q(Q(-z)/E);m=Q(Q(0)/E);u=Q(F/E);q=0;B=12;j=i}E=Q(Q(I*A)-Q(T*r));i=Q(Q(R(E))-Q(Q(o*L)+Q(Q(t*M)+Q(Q(h*ca)+Q(l*_)))));if(i>Q(1.1920928955078125e-7)){break a}F=Q(-r);r=Q(Y(Q(Q(la+ja)+Q(0))));h:{if(!(r>Q(1.1920928955078125e-7))){break h}i=Q(i/r);if(!(Q(i*Q(1.0499999523162842))>j)){break h}e=E<Q(0);g=Q(Q(0)/r);m=Q(A/r);u=Q(Q(-T)/r);q=0;B=13;j=i}r=Q(Q(I*D)+Q(O*F));i=Q(Q(R(r))-Q(Q(o*ba)+Q(Q(x*M)+Q(Q(h*Z)+Q(l*$)))));if(i>Q(1.1920928955078125e-7)){break a}o=Q(Y(Q(Q(ka+S)+Q(0))));i:{if(!(o>Q(1.1920928955078125e-7))){break i}i=Q(i/o);if(!(Q(i*Q(1.0499999523162842))>j)){break i}e=r<Q(0);g=Q(Q(0)/o);m=Q(D/o);u=Q(Q(-O)/o);q=0;B=14;j=i}r=Q(Q(I*z)+Q(K*F));i=Q(Q(R(r))-Q(Q(t*ba)+Q(Q(x*L)+Q(Q(h*V)+Q(l*aa)))));if(i>Q(1.1920928955078125e-7)){break a}j:{k:{l:{m:{o=Q(Y(Q(Q(da+s)+Q(0))));if(!(o>Q(1.1920928955078125e-7))){break m}i=Q(i/o);if(!(Q(i*Q(1.0499999523162842))>j)){break m}e=r<Q(0);g=Q(Q(0)/o);m=Q(z/o);u=Q(Q(-K)/o);B=15;break l}if(!B){break a}if(q){break k}i=j}o=Q(Q(ea*g)+Q(Q(qa*u)+Q(U*m)));N[d+48>>2]=o;r=Q(Q(N[a+24>>2]*g)+Q(Q(N[a+16>>2]*u)+Q(m*N[a+20>>2])));N[d+52>>2]=r;j=Q(Q(N[a+40>>2]*g)+Q(Q(N[a+32>>2]*u)+Q(m*N[a+36>>2])));break j}o=N[q>>2];N[d+48>>2]=o;r=N[q+16>>2];N[d+52>>2]=r;i=j;j=N[q+32>>2]}N[d+56>>2]=j;if(e){N[d+56>>2]=-j;N[d+52>>2]=-r;N[d+48>>2]=-o}N[d+44>>2]=-i;if(B>>>0>=7){J[f+120>>2]=J[G+8>>2];e=J[G+4>>2];J[f+112>>2]=J[G>>2];J[f+116>>2]=e;s=k;v=Q(-k);j=N[d+56>>2];k=N[a+40>>2];i=N[d+48>>2];u=N[a+8>>2];m=N[d+52>>2];o=N[a+24>>2];g=Q(Q(j*k)+Q(Q(i*u)+Q(m*o)))>Q(0)?s:v;s=Q(g*k);k=N[a+36>>2];r=N[a+4>>2];z=N[a+20>>2];l=Q(Q(j*k)+Q(Q(i*r)+Q(m*z)))>Q(0)?l:Q(-l);v=Q(l*k);k=N[a+32>>2];D=N[a>>2];A=N[a+16>>2];h=Q(Q(j*k)+Q(Q(i*D)+Q(m*A)))>Q(0)?h:Q(-h);N[f+120>>2]=s+Q(v+Q(Q(h*k)+N[f+120>>2]));N[f+112>>2]=Q(g*u)+Q(Q(l*r)+Q(Q(h*D)+N[f+112>>2]));N[f+116>>2]=Q(g*o)+Q(Q(l*z)+Q(Q(h*A)+N[f+116>>2]));J[f+216>>2]=J[b+8>>2];e=J[b+4>>2];J[f+208>>2]=J[b>>2];J[f+212>>2]=e;g=N[f+352>>2];h=N[c+40>>2];l=N[c+8>>2];k=N[c+24>>2];g=Q(Q(j*h)+Q(Q(i*l)+Q(m*k)))>Q(0)?Q(-g):g;z=Q(g*h);v=Q(-t);s=t;t=N[c+36>>2];u=N[c+4>>2];o=N[c+20>>2];h=Q(Q(j*t)+Q(Q(i*u)+Q(m*o)))>Q(0)?v:s;A=Q(-x);s=x;x=N[c+32>>2];v=i;i=N[c>>2];r=m;m=N[c+16>>2];j=Q(Q(j*x)+Q(Q(v*i)+Q(r*m)))>Q(0)?A:s;x=Q(z+Q(Q(h*t)+Q(Q(j*x)+N[f+216>>2])));N[f+216>>2]=x;i=Q(Q(g*l)+Q(Q(h*u)+Q(Q(j*i)+N[f+208>>2])));N[f+208>>2]=i;m=Q(Q(g*k)+Q(Q(h*o)+Q(Q(j*m)+N[f+212>>2])));N[f+212>>2]=m;b=B-7&255;a=((b>>>0)/3<<2)+a|0;N[f+288>>2]=N[a>>2];N[f+292>>2]=N[a+16>>2];N[f+296>>2]=N[a+32>>2];a=c+((b>>>0)%3<<2)|0;g=N[a>>2];N[f+80>>2]=g;h=N[a+16>>2];N[f+84>>2]=h;l=N[a+32>>2];N[f+88>>2]=l;a=f+208|0;b=f- -64|0;k=N[f+296>>2];t=N[f+88>>2];u=N[f+288>>2];o=N[f+80>>2];r=N[f+292>>2];z=N[f+84>>2];j=Q(Q(k*t)+Q(Q(u*o)+Q(r*z)));D=Q(Q(1)-Q(j*j));n:{if(D<=Q(9999999747378752e-20)){J[f+328>>2]=0;N[b>>2]=0;break n}s=t;t=Q(N[a+8>>2]-N[f+120>>2]);v=o;o=Q(N[a>>2]-N[f+112>>2]);A=Q(N[a+4>>2]-N[f+116>>2]);z=Q(-Q(Q(s*t)+Q(Q(v*o)+Q(A*z))));k=Q(Q(k*t)+Q(Q(u*o)+Q(A*r)));t=Q(Q(1)/D);N[f+328>>2]=Q(Q(j*z)+k)*t;N[b>>2]=Q(Q(j*k)+z)*t}j=N[f+64>>2];N[f+216>>2]=Q(l*j)+x;N[f+212>>2]=Q(h*j)+m;N[f+208>>2]=Q(g*j)+i;j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+44>>2]=0;N[f+40>>2]=-m;N[f+36>>2]=-i;N[f+32>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f+32|0,a,Q(-N[d+44>>2]));J[d+40>>2]=B;break a}j=N[d+48>>2];o:{if(B>>>0<=3){m=N[d+52>>2];q=f+356|0;w=c;n=f+344|0;i=N[d+56>>2];break o}j=Q(-j);m=Q(-N[d+52>>2]);e=b;q=f+344|0;b=G;G=e;w=a;a=c;n=f+356|0;i=Q(-N[d+56>>2])}h=Q(Q(N[w+32>>2]*i)+Q(Q(N[w>>2]*j)+Q(m*N[w+16>>2])));N[f+328>>2]=h;l=Q(Q(N[w+36>>2]*i)+Q(Q(N[w+4>>2]*j)+Q(m*N[w+20>>2])));N[f+332>>2]=l;g=Q(Q(N[w+40>>2]*i)+Q(Q(N[w+8>>2]*j)+Q(m*N[w+24>>2])));N[f+336>>2]=g;g=Q(R(g));l=Q(R(l));h=Q(R(h));p:{if(l>h){e=g<l;c=e?1:2;p=0;break p}e=g<h;c=!e<<1;p=e}X=p;c=c<<2;g=N[c+n>>2];g=N[c+(f+328|0)>>2]<Q(0)?g:Q(-g);c=c+w|0;x=Q(Q(g*N[c+32>>2])+Q(N[b+8>>2]-N[G+8>>2]));t=Q(Q(g*N[c+16>>2])+Q(N[b+4>>2]-N[G+4>>2]));u=Q(Q(g*N[c>>2])+Q(N[b>>2]-N[G>>2]));ra=e?2:1;c=1;e=2;q:{r:{s:{ta=(B>>>0<4?-1:-4)+B|0;switch(ta|0){case 0:break q;case 1:break s;default:break r}}c=0;break q}e=1;c=0}c=c<<2;b=c+a|0;g=N[b+32>>2];h=N[b>>2];l=N[b+16>>2];b=e<<2;a=b+a|0;k=N[a+32>>2];o=N[a>>2];r=N[a+16>>2];z=Q(Q(x*k)+Q(Q(u*o)+Q(t*r)));a=X<<2;oa=a+w|0;A=N[oa+32>>2];K=N[oa>>2];O=N[oa+16>>2];D=Q(Q(k*A)+Q(Q(o*K)+Q(r*O)));T=N[a+n>>2];I=Q(D*T);F=Q(z+I);a=ra<<2;fa=a+w|0;E=N[fa+32>>2];v=N[fa>>2];s=N[fa+16>>2];o=Q(Q(k*E)+Q(Q(o*v)+Q(r*s)));U=N[a+n>>2];k=Q(o*U);N[f+316>>2]=F-k;r=Q(Q(x*g)+Q(Q(u*h)+Q(t*l)));A=Q(Q(g*A)+Q(Q(h*K)+Q(l*O)));O=Q(T*A);T=Q(r+O);K=Q(Q(g*E)+Q(Q(h*v)+Q(l*s)));g=Q(U*K);N[f+312>>2]=T-g;N[f+308>>2]=F+k;N[f+304>>2]=T+g;h=Q(z-I);N[f+300>>2]=h+k;l=Q(r-O);N[f+296>>2]=l+g;N[f+292>>2]=h-k;N[f+288>>2]=l-g;N[f+280>>2]=N[c+q>>2];N[f+284>>2]=N[b+q>>2];e=f+208|0;b=0;p=ga+-64|0;ga=p;g=N[f+280>>2];k=N[f+288>>2];h=Q(-k);if(g>h){N[e>>2]=k;N[e+4>>2]=N[f+292>>2];g=N[f+280>>2];k=N[f+288>>2];h=Q(-k);b=1;c=e+8|0}else{c=e}a=g>h;l=N[f+296>>2];h=Q(-l);if((a|0)!=(h<g|0)){h=N[f+292>>2];N[c+4>>2]=Q(Q(Q(N[f+300>>2]-h)/Q(l-k))*Q(Q(-g)-k))+h;N[c>>2]=-N[f+280>>2];g=N[f+280>>2];l=N[f+296>>2];h=Q(-l);c=c+8|0;b=b+1|0}if(g>h){N[c>>2]=l;N[c+4>>2]=N[f+300>>2];g=N[f+280>>2];l=N[f+296>>2];h=Q(-l);c=c+8|0;b=b+1|0}a=g>h;h=N[f+304>>2];k=Q(-h);t:{if((a|0)!=(k<g|0)){k=N[f+300>>2];N[c+4>>2]=Q(Q(Q(N[f+308>>2]-k)/Q(h-l))*Q(Q(-g)-l))+k;N[c>>2]=-N[f+280>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];h=N[f+304>>2];k=Q(-h);c=c+8|0}if(g>k){N[c>>2]=h;N[c+4>>2]=N[f+308>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];h=N[f+304>>2];k=Q(-h);c=c+8|0}a=g>k;l=N[f+312>>2];k=Q(-l);if((a|0)!=(k<g|0)){k=N[f+308>>2];N[c+4>>2]=Q(Q(Q(N[f+316>>2]-k)/Q(l-h))*Q(Q(-g)-h))+k;N[c>>2]=-N[f+280>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];l=N[f+312>>2];k=Q(-l);c=c+8|0}if(g>k){N[c>>2]=l;N[c+4>>2]=N[f+316>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];l=N[f+312>>2];k=Q(-l);c=c+8|0}u:{v:{h=N[f+288>>2];if((Q(-h)<g|0)!=(g>k|0)){k=N[f+316>>2];N[c+4>>2]=Q(Q(Q(N[f+292>>2]-k)/Q(h-l))*Q(Q(-g)-l))+k;N[c>>2]=-N[f+280>>2];a=8;b=b+1|0;if(b&8){break t}break v}if(b){break v}a=0;break u}g=N[f+280>>2];h=N[e>>2];w:{if(!(g>h)){c=p;a=0;break w}N[p>>2]=h;N[p+4>>2]=N[e+4>>2];c=p|8;g=N[f+280>>2];h=N[e>>2];a=1}n=e+8|0;y=b>>>0>1;l=N[e+(y<<3)>>2];if((l<g|0)!=(g>h|0)){k=N[e+4>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;g=N[f+280>>2];N[c>>2]=g;c=c+8|0;a=a+1|0}x:{if((b|0)<2){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+12>>2];c=c+8|0;g=N[f+280>>2];h=N[n>>2];a=a+1|0}n=e+16|0;y=b-3>>>0<4294967294;l=N[e+(y<<4)>>2];if((l<g|0)!=(g>h|0)){k=N[e+12>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<3){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+20>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+24|0;y=(b&254)==2;l=N[e+(y?0:24)>>2];if((l<g|0)!=(g>h|0)){k=N[e+20>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<4){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+28>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+32|0;y=b-5>>>0<4294967294;l=N[e+(y<<5)>>2];if((l<g|0)!=(g>h|0)){k=N[e+28>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<5){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+36>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+40|0;y=(b&254)==4;l=N[e+(y?0:40)>>2];if((l<g|0)!=(g>h|0)){k=N[e+36>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<6){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+44>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+48|0;y=b-7>>>0<4294967294;l=N[e+(y?48:0)>>2];if((l<g|0)!=(g>h|0)){k=N[e+44>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<7){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+52>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+56|0;y=(b&254)==6;l=N[e+(y?0:56)>>2];if((l<g|0)!=(g>h|0)){k=N[e+52>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<8){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+60>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}b=e+((b-9>>>0<4294967294)<<6)|0;l=N[b>>2];if((l<g|0)==(g>h|0)){break x}k=N[e+60>>2];N[c+4>>2]=Q(Q(Q(N[b+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}}if((a|0)<=0){a=0;break u}pa=p|4;n=0;c=p;b=e;while(1){g=N[f+284>>2];l=N[c+4>>2];h=Q(-l);if(g>h){N[b>>2]=N[c>>2];N[b+4>>2]=N[c+4>>2];n=n+1|0;if(n&8){a=n;break t}g=N[f+284>>2];l=N[c+4>>2];h=Q(-l);b=b+8|0}y=c+8|0;ua=a>>>0>1;k=N[(ua?c+12|0:pa)>>2];if((Q(-k)<g|0)!=(g>h|0)){h=N[c>>2];N[b>>2]=Q(Q(Q(N[(ua?y:p)>>2]-h)/Q(k-l))*Q(Q(-g)-l))+h;N[b+4>>2]=-N[f+284>>2];n=n+1|0;if(n&8){a=n;break t}b=b+8|0}ua=(a|0)>1;a=a-1|0;c=y;if(ua){continue}break}a=0;if((n|0)<=0){break u}b=p;c=e;while(1){g=N[f+284>>2];h=N[c+4>>2];if(g>h){N[b>>2]=N[c>>2];N[b+4>>2]=N[c+4>>2];a=a+1|0;if(a&8){break u}g=N[f+284>>2];h=N[c+4>>2];b=b+8|0}y=c+8|0;pa=n>>>0>1?y:e;l=N[pa+4>>2];if((l<g|0)!=(g>h|0)){k=N[c>>2];N[b>>2]=Q(Q(Q(N[pa>>2]-k)/Q(l-h))*Q(g-h))+k;N[b+4>>2]=N[f+284>>2];a=a+1|0;if(a&8){break u}b=b+8|0}pa=(n|0)>1;n=n-1|0;c=y;if(pa){continue}break}}if((e|0)==(p|0)){break t}sa(e,p,a<<3)}ga=p- -64|0;if((a|0)<=0){break a}b=a;g=Q(Q(1)/Q(Q(A*o)-Q(D*K)));l=Q(g*Q(-D));k=Q(g*Q(-K));o=Q(o*g);D=Q(A*g);A=N[(ta<<2)+q>>2];a=(ra<<2)+w|0;K=N[a+32>>2];c=(X<<2)+w|0;O=N[c+32>>2];T=N[a+16>>2];I=N[c+16>>2];F=N[fa>>2];E=N[oa>>2];a=0;c=0;while(1){e=(f+112|0)+P(a,12)|0;p=(f+208|0)+(c<<3)|0;v=N[p>>2];h=Q(v-r);s=N[p+4>>2];U=Q(s-z);g=Q(Q(l*h)+Q(D*U));h=Q(Q(o*h)+Q(k*U));U=Q(Q(g*F)+Q(Q(h*E)+u));N[e>>2]=U;ea=Q(Q(g*T)+Q(Q(h*I)+t));N[e+4>>2]=ea;g=Q(Q(g*K)+Q(Q(h*O)+x));N[e+8>>2]=g;g=Q(A-Q(Q(i*g)+Q(Q(j*U)+Q(m*ea))));N[(f+80|0)+(a<<2)>>2]=g;if(g>=Q(0)){e=(f+208|0)+(a<<3)|0;N[e+4>>2]=s;N[e>>2]=v;a=a+1|0}c=c+1|0;if((b|0)!=(c|0)){continue}break}if((a|0)<=0){break a}b=(a|0)<4?a:4;X=(b|0)>1?b:1;y:{if(X>>>0>=a>>>0){if(B>>>0>=4){c=0;while(1){b=(f+112|0)+P(c,12)|0;i=N[d+48>>2];j=N[(f+80|0)+(c<<2)>>2];N[f+32>>2]=Q(N[b>>2]+N[G>>2])-Q(i*j);m=N[d+52>>2];N[f+36>>2]=Q(N[b+4>>2]+N[G+4>>2])-Q(j*m);g=N[d+56>>2];N[f+40>>2]=Q(N[b+8>>2]+N[G+8>>2])-Q(j*g);J[f+76>>2]=0;N[f+72>>2]=-g;N[f+68>>2]=-m;N[f+64>>2]=-i;ia[J[J[W>>2]+16>>2]](W,f- -64|0,f+32|0,Q(-j));c=c+1|0;if((c|0)!=(a|0)){continue}break}break y}c=0;while(1){b=(f+112|0)+P(c,12)|0;N[f+32>>2]=N[b>>2]+N[G>>2];N[f+36>>2]=N[b+4>>2]+N[G+4>>2];N[f+40>>2]=N[b+8>>2]+N[G+8>>2];j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+76>>2]=0;N[f+72>>2]=-m;N[f+68>>2]=-i;N[f+64>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f- -64|0,f+32|0,Q(-N[(f+80|0)+(c<<2)>>2]));c=c+1|0;if((c|0)!=(a|0)){continue}break}break y}b=0;z:{if(a>>>0<2){break z}b=a-1|0;q=b&3;e=0;m=N[f+80>>2];A:{if(a-2>>>0<3){c=1;b=0;break A}oa=b&-4;b=0;c=1;while(1){p=f+80|0;fa=c+3|0;j=N[p+(fa<<2)>>2];i=N[p+(c<<2)>>2];w=i>m;ra=c+1|0;g=N[p+(ra<<2)>>2];i=w?i:m;n=g>i;ta=c+2|0;m=N[p+(ta<<2)>>2];i=n?g:i;p=m>i;i=p?m:i;y=i<j;m=y?j:i;b=y?fa:p?ta:n?ra:w?c:b;c=c+4|0;C=C+4|0;if((oa|0)!=(C|0)){continue}break}}if(!q){break z}while(1){j=N[(f+80|0)+(c<<2)>>2];p=j>m;m=p?j:m;b=p?c:b;c=c+1|0;e=e+1|0;if((q|0)!=(e|0)){continue}break}}w=f+208|0;n=f+32|0;i=Q(0);q=0;g=Q(0);h=Q(0);p=ga+-64|0;ga=p;B:{C:{D:{E:{F:{G:{H:{c=a;e=c-1|0;switch(e|0){case 0:break D;case 1:break G;default:break H}}if((c|0)>1){break F}break E}g=Q(Q(N[w+4>>2]+N[w+12>>2])*Q(.5));j=Q(Q(N[w>>2]+N[w+8>>2])*Q(.5));break C}while(1){a=w+(q<<3)|0;m=N[a>>2];l=N[a+12>>2];k=N[a+4>>2];x=N[a+8>>2];j=Q(Q(m*l)-Q(k*x));i=Q(i+j);g=Q(Q(j*Q(l+k))+g);h=Q(Q(j*Q(m+x))+h);q=q+1|0;if((e|0)!=(q|0)){continue}break}}l=Q(0xde0b6b000000000);t=i;a=w+(c<<3)|0;i=N[a-8>>2];m=N[w+4>>2];k=N[a-4>>2];x=N[w>>2];j=Q(Q(i*m)-Q(k*x));t=Q(t+j);if(Q(R(t))>Q(1.1920928955078125e-7)){l=Q(Q(1)/Q(t*Q(3)))}e=0;if((c|0)<=0){break B}g=Q(Q(Q(j*Q(m+k))+g)*l);j=Q(Q(Q(j*Q(i+x))+h)*l);break C}g=N[w+4>>2];j=N[w>>2]}e=0;while(1){a=w+(e<<3)|0;N[(p+32|0)+(e<<2)>>2]=$a(Q(N[a+4>>2]-g),Q(N[a>>2]-j));e=e+1|0;if((c|0)!=(e|0)){continue}break}C=0;q=0;if(c-1>>>0>=7){w=c&-8;a=0;while(1){e=q<<2;J[e+p>>2]=1;J[p+(e|4)>>2]=1;J[p+(e|8)>>2]=1;J[p+(e|12)>>2]=1;J[p+(e|16)>>2]=1;J[p+(e|20)>>2]=1;J[p+(e|24)>>2]=1;J[p+(e|28)>>2]=1;q=q+8|0;a=a+8|0;if((w|0)!=(a|0)){continue}break}}a=c&7;if(!a){e=1;break B}while(1){e=1;J[p+(q<<2)>>2]=1;q=q+1|0;C=C+1|0;if((a|0)!=(C|0)){continue}break}}a=b<<2;q=a+p|0;J[q>>2]=0;J[n>>2]=b;I:{if((X|0)<2){break I}C=n+4|0;if(e){m=Q(Q(6.2831854820251465)/Q(X|0));g=N[a+(p+32|0)>>2];n=1;while(1){J[C>>2]=b;j=Q(Q(Q(n|0)*m)+g);h=j>Q(3.1415927410125732)?Q(j+Q(-6.2831854820251465)):j;i=Q(1e9);a=b;e=0;while(1){q=e<<2;J:{if(!J[q+p>>2]){break J}j=Q(R(Q(N[q+(p+32|0)>>2]-h)));j=j>Q(3.1415927410125732)?Q(Q(6.2831854820251465)-j):j;if(!(j<i)){break J}J[C>>2]=e;a=e;i=j}e=e+1|0;if((c|0)!=(e|0)){continue}break}J[p+(a<<2)>>2]=0;C=C+4|0;n=n+1|0;if((X|0)!=(n|0)){continue}break}break I}c=X-1|0;a=c&7;if(X-2>>>0>=7){c=c&-8;e=0;while(1){J[C+28>>2]=b;J[C+24>>2]=b;J[C+20>>2]=b;J[C+16>>2]=b;J[C+12>>2]=b;J[C+8>>2]=b;J[C+4>>2]=b;J[C>>2]=b;C=C+32|0;e=e+8|0;if((c|0)!=(e|0)){continue}break}}if(a){e=0;while(1){J[C>>2]=b;C=C+4|0;e=e+1|0;if((a|0)!=(e|0)){continue}break}}J[q>>2]=0}ga=p- -64|0;e=B>>>0>3;a=0;while(1){b=J[(f+32|0)+(a<<2)>>2];c=(f+112|0)+P(b,12)|0;g=Q(N[c>>2]+N[G>>2]);N[f+64>>2]=g;h=Q(N[c+4>>2]+N[G+4>>2]);N[f+68>>2]=h;l=Q(N[c+8>>2]+N[G+8>>2]);N[f+72>>2]=l;K:{if(!e){j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+28>>2]=0;N[f+24>>2]=-m;N[f+20>>2]=-i;N[f+16>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f+16|0,f- -64|0,Q(-N[(f+80|0)+(b<<2)>>2]));break K}i=N[d+48>>2];m=N[d+52>>2];j=N[d+56>>2];J[f+28>>2]=0;N[f+24>>2]=-j;N[f+20>>2]=-m;N[f+16>>2]=-i;J[f+12>>2]=0;t=j;j=N[(f+80|0)+(b<<2)>>2];N[f+8>>2]=l-Q(t*j);N[f+4>>2]=h-Q(m*j);N[f>>2]=g-Q(i*j);ia[J[J[W>>2]+16>>2]](W,f+16|0,f,Q(-j))}a=a+1|0;if((X|0)!=(a|0)){continue}break}}J[d+40>>2]=B}ga=f+368|0;ga=d+160|0}function QA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=0,p=0,q=0,r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=0,I=Q(0),L=Q(0),M=Q(0),O=0,S=Q(0),T=0,U=0,V=0,W=Q(0),X=Q(0),Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0);if((c|0)>0){while(1){_=0;r=ga-96|0;ga=r;Z=J[($<<2)+b>>2];o=J[Z+744>>2];p=J[Z+740>>2];F=yb(a,p,N[d+12>>2]);G=yb(a,o,N[d+12>>2]);n=J[a+16>>2];i=n+P(F,244)|0;a:{b:{if(N[i+128>>2]!=Q(0)|N[i+132>>2]!=Q(0)|N[(n+P(F,244)|0)+136>>2]!=Q(0)){break b}i=n+P(G,244)|0;if(N[i+128>>2]!=Q(0)|N[i+132>>2]!=Q(0)){break b}if(N[(n+P(G,244)|0)+136>>2]==Q(0)){break a}}if(J[Z+748>>2]<=0){break a}T=n+P(G,244)|0;U=n+P(F,244)|0;aa=1;while(1){q=P(_,184)+Z|0;if(N[q+84>>2]<=N[Z+756>>2]){y=q+4|0;n=J[a+28>>2];i=n;c:{if((i|0)!=J[a+32>>2]){break c}i=n;x=i?i<<1:1;if((x|0)<=(i|0)){break c}d:{if(!x){u=0;l=n;break d}J[8369]=J[8369]+1;u=ia[J[6782]](P(x,152),16)|0;l=J[a+28>>2]}e:{if((l|0)<=0){break e}i=0;if((l|0)!=1){V=l&-2;E=0;while(1){O=P(i,152);sa(O+u|0,O+J[a+36>>2]|0,152);O=P(i|1,152);sa(O+u|0,O+J[a+36>>2]|0,152);i=i+2|0;E=E+2|0;if((V|0)!=(E|0)){continue}break}}if(!(l&1)){break e}i=P(i,152);sa(i+u|0,i+J[a+36>>2]|0,152)}i=J[a+36>>2];if(!(i?!i|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](i)}J[a+36>>2]=u;H[a+40|0]=1;J[a+32>>2]=x;i=J[a+28>>2]}J[a+28>>2]=i+1;ea=J[p+236>>2];fa=J[o+236>>2];i=J[a+36>>2]+P(n,152)|0;J[i+148>>2]=G;J[i+144>>2]=F;J[i+132>>2]=y;g=N[q+52>>2];f=N[q+56>>2];e=N[q+60>>2];h=N[p+52>>2];k=N[p+56>>2];m=N[p+60>>2];J[r+92>>2]=0;e=Q(e-m);N[r+88>>2]=e;f=Q(f-k);N[r+84>>2]=f;g=Q(g-h);N[r+80>>2]=g;m=N[q+36>>2];k=N[q+40>>2];h=N[q+44>>2];j=N[o+52>>2];t=N[o+56>>2];v=N[o+60>>2];J[r+76>>2]=0;h=Q(h-v);N[r+72>>2]=h;k=Q(k-t);N[r+68>>2]=k;m=Q(m-j);N[r+64>>2]=m;A=Q(0);D=Q(0);S=Q(0);ha=Q(0);if(J[U+240>>2]){j=Q(N[U+192>>2]+N[U+224>>2]);t=Q(N[U+196>>2]+N[U+228>>2]);ha=Q(Q(N[U+184>>2]+N[U+216>>2])+Q(Q(j*f)-Q(g*t)));v=Q(N[U+200>>2]+N[U+232>>2]);S=Q(Q(N[U+180>>2]+N[U+212>>2])+Q(Q(v*g)-Q(e*j)));D=Q(Q(N[U+176>>2]+N[U+208>>2])+Q(Q(t*e)-Q(f*v)))}ja=Q(0);ka=Q(0);if(J[T+240>>2]){e=Q(N[T+192>>2]+N[T+224>>2]);f=Q(N[T+196>>2]+N[T+228>>2]);ka=Q(Q(N[T+184>>2]+N[T+216>>2])+Q(Q(e*k)-Q(m*f)));g=Q(N[T+200>>2]+N[T+232>>2]);ja=Q(Q(N[T+180>>2]+N[T+212>>2])+Q(Q(g*m)-Q(h*e)));A=Q(Q(N[T+176>>2]+N[T+208>>2])+Q(Q(f*h)-Q(k*g)))}la=N[q+76>>2];V=q+68|0;ma=N[V>>2];na=N[q+72>>2];m=Q(0);E=J[a+16>>2];ba=E+P(G,244)|0;l=J[ba+240>>2];ca=E+P(F,244)|0;u=J[ca+240>>2];J[r+60>>2]=1065353216;e=N[r+80>>2];f=N[y+68>>2];g=N[y+64>>2];h=N[r+84>>2];j=Q(Q(e*f)-Q(g*h));k=N[r+88>>2];s=Q(k*g);g=N[y+72>>2];t=Q(s-Q(g*e));v=Q(Q(h*g)-Q(f*k));f=Q(0);e=Q(0);g=Q(0);if(u){g=Q(Q(Q(N[u+304>>2]*j)+Q(Q(N[u+296>>2]*v)+Q(t*N[u+300>>2])))*N[u+552>>2]);f=Q(Q(Q(N[u+272>>2]*j)+Q(Q(N[u+264>>2]*v)+Q(t*N[u+268>>2])))*N[u+544>>2]);e=Q(Q(Q(N[u+288>>2]*j)+Q(Q(N[u+280>>2]*v)+Q(t*N[u+284>>2])))*N[u+548>>2])}N[i+64>>2]=f;J[i+76>>2]=0;N[i+72>>2]=g;N[i+68>>2]=e;x=r- -64|0;h=N[x>>2];k=N[y+68>>2];w=N[y+64>>2];B=N[x+4>>2];s=Q(Q(h*k)-Q(w*B));C=N[x+8>>2];I=N[y+72>>2];w=Q(Q(C*w)-Q(I*h));B=Q(Q(B*I)-Q(k*C));h=Q(0);k=Q(0);if(l){m=Q(-B);k=Q(Q(Q(Q(N[l+296>>2]*m)-Q(N[l+300>>2]*w))-Q(N[l+304>>2]*s))*N[l+552>>2]);h=Q(Q(Q(Q(N[l+280>>2]*m)-Q(N[l+284>>2]*w))-Q(N[l+288>>2]*s))*N[l+548>>2]);m=Q(Q(Q(Q(N[l+264>>2]*m)-Q(N[l+268>>2]*w))-Q(N[l+272>>2]*s))*N[l+544>>2])}N[i+80>>2]=m;J[i+92>>2]=0;N[i+88>>2]=k;N[i+84>>2]=h;L=N[r+60>>2];if(u){I=N[r+84>>2];M=N[r+80>>2];C=Q(N[y+72>>2]*Q(Q(f*I)-Q(M*e)));z=e;e=N[r+88>>2];f=Q(N[u+344>>2]+Q(C+Q(Q(N[y+64>>2]*Q(Q(z*e)-Q(I*g)))+Q(Q(Q(g*M)-Q(e*f))*N[y+68>>2]))))}else{f=Q(0)}e=f;if(l){f=N[x>>2];g=N[x+4>>2];z=Q(N[y+72>>2]*Q(Q(h*f)-Q(m*g)));C=Q(k*g);g=N[x+8>>2];f=Q(N[l+344>>2]+Q(z+Q(Q(N[y+64>>2]*Q(C-Q(h*g)))+Q(Q(Q(m*g)-Q(k*f))*N[y+68>>2]))))}else{f=Q(0)}N[i+108>>2]=L/Q(e+f);f:{if(u){O=y- -64|0;da=J[O+4>>2];J[i+16>>2]=J[O>>2];J[i+20>>2]=da;da=J[O+12>>2];J[i+24>>2]=J[O+8>>2];J[i+28>>2]=da;J[i+12>>2]=0;N[i+8>>2]=j;N[i+4>>2]=t;N[i>>2]=v;break f}J[i>>2]=0;J[i+4>>2]=0;J[i+24>>2]=0;J[i+28>>2]=0;J[i+16>>2]=0;J[i+20>>2]=0;J[i+8>>2]=0;J[i+12>>2]=0}g:{if(l){e=N[y+64>>2];f=N[y+68>>2];g=N[y+72>>2];J[i+60>>2]=0;J[i+44>>2]=0;N[i+40>>2]=-s;N[i+36>>2]=-w;N[i+32>>2]=-B;N[i+56>>2]=-g;N[i+52>>2]=-f;N[i+48>>2]=-e;break g}J[i+32>>2]=0;J[i+36>>2]=0;J[i+56>>2]=0;J[i+60>>2]=0;J[i+48>>2]=0;J[i+52>>2]=0;J[i+40>>2]=0;J[i+44>>2]=0}m=Q(0);f=Q(0);e=Q(0);g=Q(0);if(u){e=N[u+328>>2];f=N[r+84>>2];h=N[r+80>>2];k=N[u+332>>2];g=Q(Q(Q(e*f)-Q(h*k))+N[u+320>>2]);j=N[u+336>>2];s=Q(j*h);h=N[r+88>>2];e=Q(Q(s-Q(h*e))+N[u+316>>2]);f=Q(Q(Q(k*h)-Q(f*j))+N[u+312>>2])}h=Q(0);k=Q(0);if(l){h=N[l+328>>2];m=N[x+4>>2];j=N[x>>2];t=N[l+332>>2];k=Q(Q(Q(h*m)-Q(j*t))+N[l+320>>2]);v=N[l+336>>2];s=Q(v*j);j=N[x+8>>2];h=Q(Q(s-Q(j*h))+N[l+316>>2]);m=Q(Q(Q(t*j)-Q(m*v))+N[l+312>>2])}I=N[d+56>>2];M=N[y+80>>2];j=N[y+72>>2];t=N[y+64>>2];v=N[y+68>>2];N[i+104>>2]=N[y+84>>2];m=Q(N[y+92>>2]*Q(-Q(Q(j*Q(g-k))+Q(Q(t*Q(f-m))+Q(v*Q(e-h))))));h:{if(K[d+64|0]&4){e=Q(N[y+120>>2]*N[d+60>>2]);N[i+100>>2]=e;if(!(!u|!J[ca+240>>2])){f=N[u+356>>2];g=N[i+24>>2];h=N[u+352>>2];k=N[i+20>>2];x=E+P(F,244)|0;N[x+64>>2]=Q(N[x+112>>2]*Q(e*Q(Q(N[i+16>>2]*N[x+128>>2])*N[u+348>>2])))+N[x+64>>2];N[x+68>>2]=Q(Q(e*Q(h*Q(k*N[x+132>>2])))*N[x+116>>2])+N[x+68>>2];N[x+72>>2]=Q(Q(e*Q(f*Q(g*N[x+136>>2])))*N[x+120>>2])+N[x+72>>2];f=N[i+72>>2];g=N[i+68>>2];N[x+80>>2]=Q(Q(e*N[x+96>>2])*N[i+64>>2])+N[x+80>>2];h=N[x+104>>2];N[x+84>>2]=Q(g*Q(e*N[x+100>>2]))+N[x+84>>2];N[x+88>>2]=Q(f*Q(e*h))+N[x+88>>2]}if(!l|!J[ba+240>>2]){break h}f=N[l+356>>2];g=N[i+56>>2];h=N[l+352>>2];k=N[i+52>>2];j=N[i+88>>2];t=N[i+84>>2];v=N[i+80>>2];u=E+P(G,244)|0;e=Q(-N[i+100>>2]);N[u+64>>2]=N[u+64>>2]-Q(N[u+112>>2]*Q(Q(Q(N[u+128>>2]*N[i+48>>2])*N[l+348>>2])*e));N[u+68>>2]=N[u+68>>2]-Q(Q(Q(h*Q(k*N[u+132>>2]))*e)*N[u+116>>2]);N[u+72>>2]=N[u+72>>2]-Q(Q(Q(f*Q(g*N[u+136>>2]))*e)*N[u+120>>2]);N[u+80>>2]=N[u+80>>2]-Q(v*Q(N[u+96>>2]*e));f=N[u+104>>2];N[u+84>>2]=N[u+84>>2]-Q(t*Q(N[u+100>>2]*e));N[u+88>>2]=N[u+88>>2]-Q(j*Q(f*e));break h}J[i+100>>2]=0}J[i+96>>2]=0;e=Q(0);g=Q(0);h=Q(0);k=Q(0);j=Q(0);t=Q(0);v=Q(0);if(J[ca+240>>2]){l=E+P(F,244)|0;v=N[l+224>>2];k=N[l+208>>2];j=N[l+232>>2];t=N[l+228>>2];h=N[l+212>>2];g=N[l+216>>2]}f=Q(0);s=Q(0);w=Q(0);B=Q(0);C=Q(0);if(J[ba+240>>2]){l=E+P(G,244)|0;C=N[l+224>>2];w=N[l+232>>2];B=N[l+228>>2];s=N[l+216>>2];f=N[l+212>>2];e=N[l+208>>2]}l=E+P(F,244)|0;j=Q(Q(Q(N[i+24>>2]*Q(g+N[l+184>>2]))+Q(Q(N[i+16>>2]*Q(k+N[l+176>>2]))+Q(Q(h+N[l+180>>2])*N[i+20>>2])))+Q(Q(N[i+8>>2]*Q(j+N[l+200>>2]))+Q(Q(N[i>>2]*Q(v+N[l+192>>2]))+Q(Q(t+N[l+196>>2])*N[i+4>>2]))));l=E+P(G,244)|0;f=Q((m<=Q(0)?Q(0):m)-Q(j+Q(Q(Q(N[i+56>>2]*Q(s+N[l+184>>2]))+Q(Q(N[i+48>>2]*Q(e+N[l+176>>2]))+Q(Q(f+N[l+180>>2])*N[i+52>>2])))+Q(Q(N[i+40>>2]*Q(w+N[l+200>>2]))+Q(Q(N[i+32>>2]*Q(C+N[l+192>>2]))+Q(Q(B+N[l+196>>2])*N[i+36>>2]))))));g=Q(M+I);l=!J[d+44>>2]|g>N[d+48>>2];e=Q(0);i:{if(g>Q(0)){f=Q(f-Q(g/N[d+12>>2]));break i}e=Q(Q(N[(l?32:36)+d>>2]*Q(-g))/N[d+12>>2])}J[i+124>>2]=1343554297;J[i+116>>2]=0;J[i+120>>2]=0;j=e;e=N[i+108>>2];g=Q(j*e);N[i+128>>2]=l?Q(0):g;N[i+112>>2]=Q(f*e)+(l?g:Q(-0));J[i+140>>2]=J[a+68>>2];e=Q(0);f=Q(0);g=Q(0);h=Q(0);if(ea&2){l=ea<<30>>31&p;h=N[l+336>>2];g=N[l+332>>2];f=N[l+328>>2]}k=Q(0);m=Q(0);if(fa&2){l=fa<<30>>31&o;m=N[l+336>>2];k=N[l+332>>2];e=N[l+328>>2]}J[r+52>>2]=0;h=Q(m-h);N[r+48>>2]=h;g=Q(k-g);N[r+44>>2]=g;e=Q(e-f);N[r+40>>2]=e;j:{if(!(N[q+92>>2]>Q(0))|!aa){break j}f=Q(Y(Q(Q(h*h)+Q(Q(e*e)+Q(g*g)))));if(f>N[d+80>>2]){j=h;h=Q(Q(1)/f);f=Q(j*h);N[r+48>>2]=f;g=Q(g*h);N[r+44>>2]=g;e=Q(e*h);N[r+40>>2]=e;if(K[p+180|0]&2){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*f)+Q(Q(j*e)+Q(g*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*f)+Q(Q(s*e)+Q(g*w)))*N[p+164>>2]);B=N[p+40>>2];C=N[p+8>>2];z=g;g=N[p+24>>2];e=Q(Q(Q(B*f)+Q(Q(C*e)+Q(z*g)))*N[p+168>>2]);f=Q(Q(m*h)+Q(Q(v*k)+Q(B*e)));N[r+48>>2]=f;g=Q(Q(t*h)+Q(Q(w*k)+Q(g*e)));N[r+44>>2]=g;e=Q(Q(j*h)+Q(Q(s*k)+Q(C*e)));N[r+40>>2]=e}if(K[o+180|0]&2){C=N[o+172>>2];h=N[o+44>>2];k=N[o+12>>2];m=N[o+28>>2];I=N[o+164>>2];j=N[o+36>>2];t=N[o+4>>2];v=N[o+20>>2];M=N[o+168>>2];s=N[o+40>>2];w=N[o+8>>2];B=N[o+24>>2];J[r+52>>2]=0;z=h;h=Q(C*Q(Q(h*f)+Q(Q(k*e)+Q(g*m))));L=j;j=Q(I*Q(Q(j*f)+Q(Q(t*e)+Q(v*g))));e=Q(M*Q(Q(s*f)+Q(Q(w*e)+Q(g*B))));f=Q(Q(z*h)+Q(Q(L*j)+Q(s*e)));N[r+48>>2]=f;g=Q(Q(m*h)+Q(Q(v*j)+Q(B*e)));N[r+44>>2]=g;e=Q(Q(k*h)+Q(Q(t*j)+Q(w*e)));N[r+40>>2]=e}aa=0;if(!(+Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(g*g)))))>.001)){break j}Ae(a,r+40|0,F,G,n,y);break j}Ae(a,V,F,G,n,y);e=N[q+76>>2];k:{if(Q(R(e))>Q(.7071067690849304)){f=N[q+72>>2];J[r+24>>2]=0;k=Q(Q(f*f)+Q(e*e));h=Q(Q(1)/Q(Y(k)));g=Q(f*h);N[r+32>>2]=g;f=Q(h*Q(-e));N[r+28>>2]=f;m=Q(k*h);N[r+8>>2]=m;e=N[V>>2];k=Q(g*Q(-e));N[r+12>>2]=k;h=Q(0);e=Q(f*e);break k}f=N[V>>2];g=N[q+72>>2];J[r+32>>2]=0;t=Q(Q(f*f)+Q(g*g));j=Q(Q(1)/Q(Y(t)));f=Q(f*j);N[r+28>>2]=f;h=Q(j*Q(-g));N[r+24>>2]=h;k=Q(e*h);N[r+12>>2]=k;m=Q(f*Q(-e));N[r+8>>2]=m;g=Q(0);e=Q(t*j)}N[r+16>>2]=e;if(K[p+180|0]&2){L=N[p+172>>2];j=N[p+44>>2];t=N[p+12>>2];v=N[p+28>>2];W=N[p+164>>2];s=N[p+36>>2];w=N[p+4>>2];B=N[p+20>>2];X=N[p+168>>2];C=N[p+40>>2];I=N[p+8>>2];M=N[p+24>>2];J[r+36>>2]=0;z=j;j=Q(L*Q(Q(j*g)+Q(Q(t*h)+Q(f*v))));L=s;s=Q(W*Q(Q(s*g)+Q(Q(w*h)+Q(B*f))));h=Q(X*Q(Q(C*g)+Q(Q(I*h)+Q(f*M))));g=Q(Q(z*j)+Q(Q(L*s)+Q(C*h)));N[r+32>>2]=g;f=Q(Q(v*j)+Q(Q(B*s)+Q(M*h)));N[r+28>>2]=f;h=Q(Q(t*j)+Q(Q(w*s)+Q(I*h)));N[r+24>>2]=h}if(K[o+180|0]&2){L=N[o+172>>2];j=N[o+44>>2];t=N[o+12>>2];v=N[o+28>>2];W=N[o+164>>2];s=N[o+36>>2];w=N[o+4>>2];B=N[o+20>>2];X=N[o+168>>2];C=N[o+40>>2];I=N[o+8>>2];M=N[o+24>>2];J[r+36>>2]=0;z=j;j=Q(L*Q(Q(j*g)+Q(Q(t*h)+Q(f*v))));L=s;s=Q(W*Q(Q(s*g)+Q(Q(w*h)+Q(B*f))));h=Q(X*Q(Q(C*g)+Q(Q(I*h)+Q(f*M))));g=Q(Q(z*j)+Q(Q(L*s)+Q(C*h)));N[r+32>>2]=g;f=Q(Q(v*j)+Q(Q(B*s)+Q(M*h)));N[r+28>>2]=f;h=Q(Q(t*j)+Q(Q(w*s)+Q(I*h)));N[r+24>>2]=h}if(K[p+180|0]&2){L=N[p+172>>2];j=N[p+44>>2];t=N[p+12>>2];v=N[p+28>>2];W=N[p+164>>2];s=N[p+36>>2];w=N[p+4>>2];B=N[p+20>>2];X=N[p+168>>2];C=N[p+40>>2];I=N[p+8>>2];M=N[p+24>>2];J[r+20>>2]=0;z=j;j=Q(L*Q(Q(j*e)+Q(Q(t*m)+Q(k*v))));L=s;s=Q(W*Q(Q(s*e)+Q(Q(w*m)+Q(B*k))));m=Q(X*Q(Q(C*e)+Q(Q(I*m)+Q(k*M))));e=Q(Q(z*j)+Q(Q(L*s)+Q(C*m)));N[r+16>>2]=e;k=Q(Q(v*j)+Q(Q(B*s)+Q(M*m)));N[r+12>>2]=k;m=Q(Q(t*j)+Q(Q(w*s)+Q(I*m)));N[r+8>>2]=m}if(K[o+180|0]&2){L=N[o+172>>2];j=N[o+44>>2];t=N[o+12>>2];v=N[o+28>>2];W=N[o+164>>2];s=N[o+36>>2];w=N[o+4>>2];B=N[o+20>>2];X=N[o+168>>2];C=N[o+40>>2];I=N[o+8>>2];M=N[o+24>>2];J[r+20>>2]=0;z=j;j=Q(L*Q(Q(j*e)+Q(Q(t*m)+Q(k*v))));L=s;s=Q(W*Q(Q(s*e)+Q(Q(w*m)+Q(B*k))));m=Q(X*Q(Q(C*e)+Q(Q(I*m)+Q(k*M))));e=Q(Q(z*j)+Q(Q(L*s)+Q(C*m)));N[r+16>>2]=e;k=Q(Q(v*j)+Q(Q(B*s)+Q(M*m)));N[r+12>>2]=k;m=Q(Q(t*j)+Q(Q(w*s)+Q(I*m)));N[r+8>>2]=m}if(+Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(f*f)))))>.001){Ae(a,r+24|0,F,G,n,y)}if(+Q(Y(Q(Q(e*e)+Q(Q(m*m)+Q(k*k)))))>.001){Ae(a,r+8|0,F,G,n,y)}aa=0}l:{if(!(K[q+120|0]?K[d+64|0]&32:0)){g=N[V>>2];e=N[q+72>>2];k=N[q+76>>2];J[q+168>>2]=0;h=Q(ha-ka);j=Q(D-A);m=Q(S-ja);f=Q(Q(la*h)+Q(Q(ma*j)+Q(m*na)));h=Q(h-Q(k*f));N[q+164>>2]=h;m=Q(m-Q(f*e));N[q+160>>2]=m;l=q+156|0;f=Q(j-Q(f*g));N[l>>2]=f;m:{if(K[d+64|0]&64){break m}j=Q(Q(h*h)+Q(Q(f*f)+Q(m*m)));if(!(j>Q(1.1920928955078125e-7))){break m}g=Q(Q(1)/Q(Y(j)));e=Q(f*g);N[l>>2]=e;f=Q(m*g);N[q+160>>2]=f;g=Q(h*g);N[q+164>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*g)+Q(Q(j*e)+Q(f*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*g)+Q(Q(s*e)+Q(f*w)))*N[p+164>>2]);A=N[p+40>>2];D=N[p+8>>2];z=f;f=N[p+24>>2];g=Q(Q(Q(A*g)+Q(Q(D*e)+Q(z*f)))*N[p+168>>2]);e=Q(Q(j*h)+Q(Q(s*k)+Q(D*g)));N[l>>2]=e;f=Q(Q(t*h)+Q(Q(w*k)+Q(f*g)));N[q+160>>2]=f;g=Q(Q(m*h)+Q(Q(v*k)+Q(A*g)));N[q+164>>2]=g;J[q+168>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];h=Q(Q(Q(m*g)+Q(Q(j*e)+Q(f*t)))*N[o+172>>2]);v=N[o+36>>2];s=N[o+4>>2];w=N[o+20>>2];k=Q(Q(Q(v*g)+Q(Q(s*e)+Q(w*f)))*N[o+164>>2]);A=N[o+40>>2];L=Q(A*g);g=N[o+8>>2];z=f;f=N[o+24>>2];e=Q(Q(L+Q(Q(g*e)+Q(z*f)))*N[o+168>>2]);N[l>>2]=Q(j*h)+Q(Q(s*k)+Q(g*e));N[q+160>>2]=Q(t*h)+Q(Q(w*k)+Q(f*e));N[q+164>>2]=Q(m*h)+Q(Q(v*k)+Q(A*e));J[q+168>>2]=0}v=N[r+60>>2];Bc(a,l,F,G,n,y,r+80|0,r- -64|0,v,Q(0),Q(0));if(!(K[d+64|0]&16)){break l}e=N[q+160>>2];f=N[q+72>>2];g=N[V>>2];h=N[q+164>>2];k=N[l>>2];m=N[q+76>>2];J[q+184>>2]=0;j=Q(Q(k*f)-Q(g*e));t=Q(Q(e*m)-Q(f*h));f=Q(Q(h*g)-Q(m*k));g=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(t*t)+Q(f*f))))));e=Q(j*g);N[q+180>>2]=e;f=Q(f*g);N[q+176>>2]=f;l=q+172|0;g=Q(t*g);N[l>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*e)+Q(Q(j*g)+Q(f*t)))*N[p+172>>2]);s=N[p+36>>2];w=N[p+4>>2];A=N[p+20>>2];k=Q(Q(Q(s*e)+Q(Q(w*g)+Q(f*A)))*N[p+164>>2]);D=N[p+40>>2];S=N[p+8>>2];z=f;f=N[p+24>>2];e=Q(Q(Q(D*e)+Q(Q(S*g)+Q(z*f)))*N[p+168>>2]);g=Q(Q(j*h)+Q(Q(w*k)+Q(S*e)));N[l>>2]=g;f=Q(Q(t*h)+Q(Q(A*k)+Q(f*e)));N[q+176>>2]=f;e=Q(Q(m*h)+Q(Q(s*k)+Q(D*e)));N[q+180>>2]=e;J[q+184>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];h=Q(Q(Q(m*e)+Q(Q(j*g)+Q(f*t)))*N[o+172>>2]);s=N[o+36>>2];w=N[o+4>>2];A=N[o+20>>2];k=Q(Q(Q(s*e)+Q(Q(w*g)+Q(A*f)))*N[o+164>>2]);D=N[o+40>>2];S=N[o+8>>2];z=f;f=N[o+24>>2];e=Q(Q(Q(D*e)+Q(Q(S*g)+Q(z*f)))*N[o+168>>2]);N[l>>2]=Q(j*h)+Q(Q(w*k)+Q(S*e));N[q+176>>2]=Q(t*h)+Q(Q(A*k)+Q(f*e));N[q+180>>2]=Q(m*h)+Q(Q(s*k)+Q(D*e));J[q+184>>2]=0}Bc(a,l,F,G,n,y,r+80|0,r- -64|0,v,Q(0),Q(0));break l}u=q+172|0;n:{if(Q(R(k))>Q(.7071067690849304)){J[l>>2]=0;m=Q(Q(e*e)+Q(k*k));f=Q(Q(1)/Q(Y(m)));h=Q(f*Q(-k));N[q+160>>2]=h;e=Q(e*f);N[q+164>>2]=e;k=Q(m*f);m=Q(g*h);g=Q(e*Q(-g));f=Q(0);break n}j=Q(Q(g*g)+Q(e*e));m=Q(Q(1)/Q(Y(j)));f=Q(m*Q(-e));N[l>>2]=f;h=Q(g*m);N[q+160>>2]=h;J[q+164>>2]=0;m=Q(j*m);g=Q(k*f);k=Q(h*Q(-k));e=Q(0)}N[u>>2]=k;N[q+180>>2]=m;N[q+176>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];g=Q(Q(Q(m*e)+Q(Q(j*f)+Q(h*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*e)+Q(Q(s*f)+Q(w*h)))*N[p+164>>2]);A=N[p+40>>2];D=N[p+8>>2];z=h;h=N[p+24>>2];e=Q(Q(Q(A*e)+Q(Q(D*f)+Q(z*h)))*N[p+168>>2]);f=Q(Q(j*g)+Q(Q(s*k)+Q(D*e)));N[l>>2]=f;h=Q(Q(t*g)+Q(Q(w*k)+Q(h*e)));N[q+160>>2]=h;e=Q(Q(m*g)+Q(Q(v*k)+Q(A*e)));N[q+164>>2]=e;J[q+168>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];g=Q(Q(Q(m*e)+Q(Q(j*f)+Q(h*t)))*N[o+172>>2]);v=N[o+36>>2];s=N[o+4>>2];w=N[o+20>>2];k=Q(Q(Q(v*e)+Q(Q(s*f)+Q(w*h)))*N[o+164>>2]);A=N[o+40>>2];D=N[o+8>>2];z=Q(D*f);f=N[o+24>>2];e=Q(Q(Q(A*e)+Q(z+Q(h*f)))*N[o+168>>2]);N[l>>2]=Q(j*g)+Q(Q(s*k)+Q(D*e));N[q+160>>2]=Q(t*g)+Q(Q(w*k)+Q(f*e));N[q+164>>2]=Q(m*g)+Q(Q(v*k)+Q(A*e));J[q+168>>2]=0}m=N[r+60>>2];Bc(a,l,F,G,n,y,r+80|0,r- -64|0,m,Q(0),Q(0));l=J[d+64>>2];if(l&16){if(H[p+180|0]&1){j=N[p+44>>2];g=N[q+180>>2];t=N[p+12>>2];h=N[u>>2];k=N[q+176>>2];v=N[p+28>>2];e=Q(Q(Q(j*g)+Q(Q(t*h)+Q(k*v)))*N[p+172>>2]);s=N[p+36>>2];w=N[p+4>>2];A=N[p+20>>2];f=Q(Q(Q(s*g)+Q(Q(w*h)+Q(A*k)))*N[p+164>>2]);D=N[p+40>>2];S=N[p+8>>2];z=Q(S*h);h=N[p+24>>2];g=Q(Q(Q(D*g)+Q(z+Q(k*h)))*N[p+168>>2]);N[u>>2]=Q(t*e)+Q(Q(w*f)+Q(S*g));N[q+176>>2]=Q(v*e)+Q(Q(A*f)+Q(h*g));N[q+180>>2]=Q(j*e)+Q(Q(s*f)+Q(D*g));J[q+184>>2]=0}if(H[o+180|0]&1){j=N[o+44>>2];g=N[q+180>>2];t=N[o+12>>2];h=N[u>>2];k=N[q+176>>2];v=N[o+28>>2];e=Q(Q(Q(j*g)+Q(Q(t*h)+Q(k*v)))*N[o+172>>2]);s=N[o+36>>2];w=N[o+4>>2];A=N[o+20>>2];f=Q(Q(Q(s*g)+Q(Q(w*h)+Q(A*k)))*N[o+164>>2]);D=N[o+40>>2];S=N[o+8>>2];z=Q(S*h);h=N[o+24>>2];g=Q(Q(Q(D*g)+Q(z+Q(k*h)))*N[o+168>>2]);N[u>>2]=Q(t*e)+Q(Q(w*f)+Q(S*g));N[q+176>>2]=Q(v*e)+Q(Q(A*f)+Q(h*g));N[q+180>>2]=Q(j*e)+Q(Q(s*f)+Q(D*g));J[q+184>>2]=0}Bc(a,u,F,G,n,y,r+80|0,r- -64|0,m,Q(0),Q(0));l=J[d+64>>2]}if((l&80)!=80){break l}H[q+120|0]=1;break l}e=N[r+60>>2];Bc(a,q+156|0,F,G,n,y,r+80|0,r- -64|0,e,N[q+136>>2],N[q+144>>2]);if(!(K[d+64|0]&16)){break l}Bc(a,q+172|0,F,G,n,y,r+80|0,r- -64|0,e,N[q+140>>2],N[q+148>>2])}u=J[a+76>>2];V=J[i+140>>2];O=J[d+64>>2];o:{if(O&4){x=J[a+16>>2];i=J[(x+P(G,244)|0)+240>>2];l=J[(x+P(F,244)|0)+240>>2];q=u+P(V,152)|0;e=Q(N[y+124>>2]*N[d+60>>2]);N[q+100>>2]=e;if(l){g=N[l+356>>2];h=N[q+24>>2];k=N[l+352>>2];m=N[q+20>>2];n=x+P(F,244)|0;f=N[l+344>>2];N[n+64>>2]=Q(Q(e*Q(Q(f*N[q+16>>2])*N[l+348>>2]))*N[n+112>>2])+N[n+64>>2];N[n+68>>2]=Q(Q(e*Q(k*Q(f*m)))*N[n+116>>2])+N[n+68>>2];N[n+72>>2]=Q(Q(e*Q(g*Q(f*h)))*N[n+120>>2])+N[n+72>>2];f=N[q+72>>2];g=N[q+68>>2];N[n+80>>2]=Q(Q(e*N[n+96>>2])*N[q+64>>2])+N[n+80>>2];h=N[n+104>>2];N[n+84>>2]=Q(g*Q(e*N[n+100>>2]))+N[n+84>>2];N[n+88>>2]=Q(f*Q(e*h))+N[n+88>>2]}if(i){E=u+P(V,152)|0;g=N[E+88>>2];h=N[E+84>>2];k=N[E+80>>2];m=N[i+356>>2];j=N[E+56>>2];t=N[i+352>>2];v=N[E+52>>2];n=x+P(G,244)|0;f=N[i+344>>2];e=N[q+100>>2];N[n+64>>2]=N[n+64>>2]+Q(Q(Q(Q(f*N[E+48>>2])*N[i+348>>2])*e)*N[n+112>>2]);N[n+68>>2]=N[n+68>>2]+Q(Q(e*Q(t*Q(f*v)))*N[n+116>>2]);N[n+72>>2]=N[n+72>>2]+Q(Q(e*Q(m*Q(f*j)))*N[n+120>>2]);N[n+80>>2]=N[n+80>>2]+Q(k*Q(e*N[n+96>>2]));f=N[n+104>>2];N[n+84>>2]=N[n+84>>2]+Q(h*Q(e*N[n+100>>2]));N[n+88>>2]=N[n+88>>2]+Q(g*Q(f*e))}if(!(O&16)){break o}E=V+1|0;q=u+P(E,152)|0;e=Q(N[y+128>>2]*N[d+60>>2]);N[q+100>>2]=e;if(l){g=N[q+24>>2];h=N[q+20>>2];n=x+P(F,244)|0;f=N[l+344>>2];N[n+64>>2]=Q(Q(e*Q(f*N[q+16>>2]))*N[n+112>>2])+N[n+64>>2];N[n+68>>2]=Q(Q(e*Q(f*h))*N[n+116>>2])+N[n+68>>2];N[n+72>>2]=Q(Q(e*Q(f*g))*N[n+120>>2])+N[n+72>>2];f=N[q+72>>2];g=N[q+68>>2];N[n+80>>2]=Q(Q(e*N[n+96>>2])*N[q+64>>2])+N[n+80>>2];h=N[n+104>>2];N[n+84>>2]=Q(g*Q(e*N[n+100>>2]))+N[n+84>>2];N[n+88>>2]=Q(f*Q(e*h))+N[n+88>>2]}if(!i){break o}l=u+P(E,152)|0;g=N[l+88>>2];h=N[l+84>>2];k=N[l+56>>2];m=N[l+52>>2];j=N[l+48>>2];f=N[i+344>>2];n=x+P(G,244)|0;e=N[q+100>>2];N[n+80>>2]=N[n+80>>2]+Q(N[l+80>>2]*Q(N[n+96>>2]*e));N[n+64>>2]=N[n+64>>2]+Q(Q(e*Q(f*j))*N[n+112>>2]);N[n+68>>2]=N[n+68>>2]+Q(Q(e*Q(f*m))*N[n+116>>2]);N[n+72>>2]=N[n+72>>2]+Q(Q(e*Q(f*k))*N[n+120>>2]);f=N[n+104>>2];N[n+84>>2]=N[n+84>>2]+Q(h*Q(e*N[n+100>>2]));N[n+88>>2]=N[n+88>>2]+Q(g*Q(f*e));break o}n=u+P(V,152)|0;J[n+100>>2]=0;if(!(O&16)){break o}J[n+252>>2]=0}}_=_+1|0;if((_|0)<J[Z+748>>2]){continue}break}}ga=r+96|0;$=$+1|0;if(($|0)!=(c|0)){continue}break}}}function rz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=Q(0),y=Q(0);l=ga-96|0;ga=l;kh(a,b,c);H[l+52|0]=1;J[l+48>>2]=0;H[l+72|0]=1;J[l+40>>2]=0;J[l+44>>2]=0;J[l+68>>2]=0;H[l+92|0]=1;J[l+60>>2]=0;J[l+64>>2]=0;J[l+88>>2]=0;J[l+80>>2]=0;J[l+84>>2]=0;J[l+28>>2]=0;H[l+32|0]=1;J[l+20>>2]=0;J[l+24>>2]=0;d=J[a+872>>2];J[b+292>>2]=d;a:{if(!d){J[b+260>>2]=0;break a}j=a+868|0;d=ia[J[J[c>>2]+28>>2]](c,j)|0;J[b+260>>2]=d;if(!d){break a}i=J[b+292>>2];h=ia[J[J[c>>2]+16>>2]](c,4,i)|0;if((i|0)>0){f=J[h+8>>2];while(1){d=J[J[a+880>>2]+(g<<2)>>2];if(d){e=ia[J[J[c>>2]+28>>2]](c,d)|0}else{e=0}J[f>>2]=e;if(!(ia[J[J[c>>2]+24>>2]](c,d)|0)){k=ia[J[J[c>>2]+16>>2]](c,16,1)|0;e=J[k+8>>2];J[e+12>>2]=J[d+16>>2];N[e+4>>2]=N[d+8>>2];N[e>>2]=N[d+4>>2];N[e+8>>2]=N[d+12>>2];ia[J[J[c>>2]+20>>2]](c,k,3706,1414349395,d)}f=f+4|0;g=g+1|0;if((i|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,h,3706,1497453121,j)}d=J[a+712>>2];J[b+296>>2]=d;b:{if(!d){J[b+264>>2]=0;break b}u=a+708|0;d=ia[J[J[c>>2]+28>>2]](c,u)|0;J[b+264>>2]=d;if(!d){break b}t=J[b+296>>2];w=ia[J[J[c>>2]+16>>2]](c,100,t)|0;d=J[w+8>>2];g=0;J[l+12>>2]=0;if((t|0)>0){while(1){h=J[a+720>>2];f=h+P(g,104)|0;N[d+52>>2]=N[f+56>>2];N[d+56>>2]=N[f+60>>2];N[d+60>>2]=N[f- -64>>2];N[d- -64>>2]=N[f+68>>2];N[d+88>>2]=N[f+92>>2];e=0;J[d+92>>2]=0-(H[f+100|0]&1);N[d+84>>2]=N[f+88>>2];f=J[f+4>>2];if(f){e=ia[J[J[c>>2]+28>>2]](c,f)|0;g=J[l+12>>2];h=J[a+720>>2]}J[d>>2]=e;e=P(g,104)+h|0;N[d+68>>2]=N[e+72>>2];N[d+72>>2]=N[e+76>>2];N[d+76>>2]=N[e+80>>2];N[d+80>>2]=N[e+84>>2];N[d+4>>2]=N[e+8>>2];N[d+8>>2]=N[e+12>>2];N[d+12>>2]=N[e+16>>2];N[d+16>>2]=N[e+20>>2];N[d+20>>2]=N[e+24>>2];N[d+24>>2]=N[e+28>>2];N[d+28>>2]=N[e+32>>2];N[d+32>>2]=N[e+36>>2];N[d+36>>2]=N[e+40>>2];N[d+40>>2]=N[e+44>>2];N[d+44>>2]=N[e+48>>2];N[d+48>>2]=N[e+52>>2];J[l>>2]=e;g=0;o=0;c:{d:{e:{f:{g:{h:{j=l+16|0;i=J[j+48>>2];e=J[l>>2];f=(e<<15^-1)+e|0;f=P(f>>10^f,9);f=f>>6^f;f=(f<<11^-1)+f|0;s=i-1&(f>>16^f);i:{if(s>>>0>=M[j+4>>2]){break i}h=J[J[j+12>>2]+(s<<2)>>2];if((h|0)==-1){break i}f=J[j+32>>2];k=J[j+72>>2];while(1){if((e|0)==J[k+(h<<3)>>2]){break h}h=J[f+(h<<2)>>2];if((h|0)!=-1){continue}break}}m=J[j+44>>2];e=m;if((i|0)!=(e|0)){break d}e=i;n=e?e<<1:1;if((e|0)>=(n|0)){break d}j:{if(!n){k=0;e=i;break j}J[8369]=J[8369]+1;k=ia[J[6782]](n<<2,16)|0;e=J[j+44>>2]}f=J[j+52>>2];if((e|0)<=0){break g}h=0;if(e-1>>>0>=3){p=e&-4;while(1){q=h<<2;J[q+k>>2]=J[f+q>>2];r=q|4;J[r+k>>2]=J[f+r>>2];r=q|8;J[r+k>>2]=J[f+r>>2];q=q|12;J[q+k>>2]=J[f+q>>2];h=h+4|0;g=g+4|0;if((p|0)!=(g|0)){continue}break}}e=e&3;if(!e){break f}while(1){g=h<<2;J[g+k>>2]=J[f+g>>2];h=h+1|0;o=o+1|0;if((e|0)!=(o|0)){continue}break}break f}J[J[j+52>>2]+(h<<2)>>2]=J[l+12>>2];break c}if(!f){break e}}if(f?K[j+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](f)}e=J[j+44>>2]}J[j+52>>2]=k;J[j+48>>2]=n;H[j+56|0]=1}J[J[j+52>>2]+(e<<2)>>2]=J[l+12>>2];J[j+44>>2]=J[j+44>>2]+1;f=J[j- -64>>2];k:{if((f|0)!=J[j+68>>2]){break k}n=f?f<<1:1;if((n|0)<=(f|0)){break k}l:{if(!n){k=0;break l}J[8369]=J[8369]+1;k=ia[J[6782]](n<<3,16)|0;f=J[j+64>>2]}m:{if((f|0)<=0){break m}e=0;h=0;if(f-1>>>0>=3){q=f&-4;o=0;while(1){g=h<<3;p=g+k|0;r=g+J[j+72>>2]|0;v=J[r+4>>2];J[p>>2]=J[r>>2];J[p+4>>2]=v;p=g|8;r=p+k|0;p=p+J[j+72>>2]|0;v=J[p+4>>2];J[r>>2]=J[p>>2];J[r+4>>2]=v;p=g|16;r=p+k|0;p=p+J[j+72>>2]|0;v=J[p+4>>2];J[r>>2]=J[p>>2];J[r+4>>2]=v;g=g|24;p=g+k|0;g=g+J[j+72>>2]|0;r=J[g+4>>2];J[p>>2]=J[g>>2];J[p+4>>2]=r;h=h+4|0;o=o+4|0;if((q|0)!=(o|0)){continue}break}}f=f&3;if(!f){break m}while(1){g=h<<3;o=g+k|0;g=g+J[j+72>>2]|0;q=J[g+4>>2];J[o>>2]=J[g>>2];J[o+4>>2]=q;h=h+1|0;e=e+1|0;if((f|0)!=(e|0)){continue}break}}e=J[j+72>>2];if(!(e?!e|!K[j+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[j+72>>2]=k;H[j+76|0]=1;J[j+68>>2]=n;f=J[j+64>>2]}e=J[j+72>>2]+(f<<3)|0;f=J[l+4>>2];J[e>>2]=J[l>>2];J[e+4>>2]=f;J[j+64>>2]=J[j+64>>2]+1;if((i|0)<J[j+48>>2]){Sm(j);e=J[l>>2];e=(e<<15^-1)+e|0;e=P(e>>10^e,9);e=e>>6^e;e=(e<<11^-1)+e|0;s=J[j+48>>2]-1&(e>>16^e)}e=J[j+12>>2]+(s<<2)|0;J[J[j+32>>2]+(m<<2)>>2]=J[e>>2];J[e>>2]=m}g=J[l+12>>2]+1|0;J[l+12>>2]=g;d=d+100|0;if((g|0)<(t|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,w,4018,1145979475,u)}d=J[a+732>>2];J[b+300>>2]=d;n:{if(!d){J[b+268>>2]=0;break n}d=ia[J[J[c>>2]+28>>2]](c,J[a+740>>2])|0;J[b+268>>2]=d;if(!d){break n}f=0;e=J[b+300>>2];i=ia[J[J[c>>2]+16>>2]](c,20,e)|0;o:{if((e|0)<=0){h=J[a+740>>2];break o}h=J[a+740>>2];d=J[i+8>>2];while(1){g=0;j=P(f,52);k=j+h|0;J[d+16>>2]=0-(H[k+20|0]&1);k=J[k+4>>2];if(k){g=ia[J[J[c>>2]+28>>2]](c,k)|0;h=J[a+740>>2]}J[d>>2]=g;g=h+j|0;j=J[g+8>>2];if(j){m=(j-J[a+720>>2]|0)/104|0}else{m=-1}J[d+4>>2]=m;j=J[g+12>>2];if(j){m=(j-J[a+720>>2]|0)/104|0}else{m=-1}J[d+8>>2]=m;N[d+12>>2]=N[g+16>>2];d=d+20|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,3727,1497453121,h)}d=J[a+752>>2];J[b+304>>2]=d;p:{if(!d){J[b+272>>2]=0;break p}d=ia[J[J[c>>2]+28>>2]](c,J[a+760>>2])|0;J[b+272>>2]=d;if(!d){break p}g=0;j=J[b+304>>2];k=ia[J[J[c>>2]+16>>2]](c,36,j)|0;q:{if((j|0)<=0){e=J[a+760>>2];break q}e=J[a+760>>2];d=J[k+8>>2];while(1){f=P(g,44);i=J[(f+e|0)+4>>2];r:{if(!i){h=0;break r}h=ia[J[J[c>>2]+28>>2]](c,i)|0;e=J[a+760>>2]}J[d+16>>2]=h;f=e+f|0;N[d>>2]=N[f+20>>2];N[d+4>>2]=N[f+24>>2];N[d+8>>2]=N[f+28>>2];N[d+12>>2]=N[f+32>>2];i=J[a+720>>2];h=J[f+8>>2];if(h){m=(h-i|0)/104|0}else{m=-1}J[d+20>>2]=m;h=J[f+12>>2];if(h){m=(h-i|0)/104|0}else{m=-1}J[d+24>>2]=m;h=J[f+16>>2];if(h){i=(h-i|0)/104|0}else{i=-1}J[d+28>>2]=i;N[d+32>>2]=N[f+36>>2];d=d+36|0;g=g+1|0;if((j|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,k,4109,1497453121,e)}d=J[a+772>>2];J[b+308>>2]=d;s:{if(!d){J[b+276>>2]=0;break s}d=ia[J[J[c>>2]+28>>2]](c,J[a+780>>2])|0;J[b+276>>2]=d;if(!d){break s}e=0;h=J[b+308>>2];j=ia[J[J[c>>2]+16>>2]](c,100,h)|0;t:{if((h|0)<=0){g=J[a+780>>2];break t}g=J[a+780>>2];d=J[j+8>>2];while(1){i=J[a+720>>2];o=P(e,104);f=o+g|0;N[d>>2]=N[f+32>>2];N[d+4>>2]=N[f+36>>2];N[d+8>>2]=N[f+40>>2];N[d+12>>2]=N[f+44>>2];k=J[g+8>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+68>>2]=m;N[d+16>>2]=N[f+48>>2];N[d+20>>2]=N[f+52>>2];N[d+24>>2]=N[f+56>>2];N[d+28>>2]=N[f+60>>2];k=J[g+116>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+72>>2]=m;N[d+32>>2]=N[f- -64>>2];N[d+36>>2]=N[f+68>>2];N[d+40>>2]=N[f+72>>2];N[d+44>>2]=N[f+76>>2];k=J[g+224>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+76>>2]=m;N[d+48>>2]=N[f+80>>2];N[d+52>>2]=N[f+84>>2];N[d+56>>2]=N[f+88>>2];N[d+60>>2]=N[f+92>>2];k=J[g+332>>2];if(k){i=(k-i|0)/104|0}else{i=-1}J[d+80>>2]=i;N[d+88>>2]=N[f+96>>2];N[d+92>>2]=N[f+100>>2];f=J[f+4>>2];u:{if(!f){f=0;break u}f=ia[J[J[c>>2]+28>>2]](c,f)|0;g=J[a+780>>2]}J[d+64>>2]=f;N[d+84>>2]=N[(g+o|0)+24>>2];d=d+100|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,j,4151,1497453121,g)}d=J[a+792>>2];J[b+312>>2]=d;v:{if(!d){J[b+280>>2]=0;break v}d=ia[J[J[c>>2]+28>>2]](c,J[a+800>>2])|0;J[b+280>>2]=d;if(!d){break v}f=J[b+312>>2];i=ia[J[J[c>>2]+16>>2]](c,92,f)|0;if((f|0)>0){d=J[i+8>>2];g=0;while(1){e=J[a+800>>2]+P(g,96)|0;N[d>>2]=N[e+28>>2];N[d+4>>2]=N[e+32>>2];N[d+8>>2]=N[e+36>>2];N[d+12>>2]=N[e+40>>2];N[d+16>>2]=N[e+44>>2];N[d+20>>2]=N[e+48>>2];N[d+24>>2]=N[e+52>>2];N[d+28>>2]=N[e+56>>2];N[d+32>>2]=N[e+60>>2];N[d+36>>2]=N[e- -64>>2];N[d+40>>2]=N[e+68>>2];N[d+44>>2]=N[e+72>>2];N[d+48>>2]=N[e+76>>2];N[d+52>>2]=N[e+80>>2];N[d+56>>2]=N[e+84>>2];N[d+60>>2]=N[e+88>>2];N[d+88>>2]=N[e+92>>2];N[d+64>>2]=N[e+4>>2];N[d+68>>2]=N[e+8>>2];N[d+72>>2]=N[e+12>>2];N[d+76>>2]=N[e+16>>2];h=J[e>>2];if(h){m=(h-J[a+720>>2]|0)/104|0}else{m=-1}J[d+84>>2]=m;e=J[e+20>>2];if(e){e=ia[J[J[c>>2]+28>>2]](c,e)|0}else{e=0}J[d+80>>2]=e;d=d+92|0;g=g+1|0;if((f|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,3645,1497453121,J[a+800>>2])}N[b+352>>2]=N[a+316>>2];N[b+328>>2]=N[a+292>>2];N[b+344>>2]=N[a+308>>2];J[b+324>>2]=J[a+288>>2];N[b+340>>2]=N[a+304>>2];N[b+336>>2]=N[a+300>>2];J[b+412>>2]=J[a+376>>2];J[b+416>>2]=J[a+380>>2];J[b+420>>2]=J[a+384>>2];J[b+408>>2]=J[a+372>>2];x=N[a+364>>2];N[b+332>>2]=N[a+296>>2];N[b+356>>2]=N[a+320>>2];J[b+424>>2]=J[a+388>>2];N[b+348>>2]=N[a+312>>2];N[b+360>>2]=N[a+324>>2];N[b+364>>2]=N[a+328>>2];N[b+368>>2]=N[a+332>>2];N[b+372>>2]=N[a+336>>2];y=N[a+368>>2];N[b+400>>2]=x;N[b+404>>2]=y;N[b+376>>2]=N[a+340>>2];N[b+380>>2]=N[a+344>>2];N[b+384>>2]=N[a+348>>2];N[b+388>>2]=N[a+352>>2];N[b+392>>2]=N[a+356>>2];N[b+396>>2]=N[a+360>>2];o=a+472|0;J[b+256>>2]=ia[J[J[c>>2]+28>>2]](c,o);s=ia[J[J[c>>2]+16>>2]](c,192,1)|0;d=J[s+8>>2];N[d+96>>2]=N[a+632>>2];N[d+100>>2]=N[a+636>>2];N[d+104>>2]=N[a+640>>2];N[d+108>>2]=N[a+644>>2];N[d+112>>2]=N[a+648>>2];N[d+116>>2]=N[a+652>>2];N[d+120>>2]=N[a+656>>2];N[d+124>>2]=N[a+660>>2];N[d+128>>2]=N[a+664>>2];N[d+132>>2]=N[a+668>>2];N[d+136>>2]=N[a+672>>2];N[d+140>>2]=N[a+676>>2];J[d+180>>2]=K[a+473|0];J[d+176>>2]=K[a+472|0];N[d+144>>2]=N[a+520>>2];N[d+148>>2]=N[a+524>>2];N[d+152>>2]=N[a+528>>2];N[d+156>>2]=N[a+532>>2];e=J[a+484>>2];J[d+168>>2]=e;w:{if(!e){J[d+160>>2]=0;break w}J[d+160>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+492>>2]);i=J[d+168>>2];if(!i){break w}h=0;j=ia[J[J[c>>2]+16>>2]](c,16,i)|0;x:{if((i|0)<=0){e=J[a+492>>2];break x}e=J[a+492>>2];f=J[j+8>>2];if((i|0)!=1){n=i&-2;k=0;while(1){q=h<<4;g=q+e|0;N[f>>2]=N[g>>2];N[f+4>>2]=N[g+4>>2];N[f+8>>2]=N[g+8>>2];N[f+12>>2]=N[g+12>>2];g=(q|16)+e|0;N[f+16>>2]=N[g>>2];N[f+20>>2]=N[g+4>>2];N[f+24>>2]=N[g+8>>2];N[f+28>>2]=N[g+12>>2];f=f+32|0;h=h+2|0;k=k+2|0;if((n|0)!=(k|0)){continue}break}}if(!(i&1)){break x}i=(h<<4)+e|0;N[f>>2]=N[i>>2];N[f+4>>2]=N[i+4>>2];N[f+8>>2]=N[i+8>>2];N[f+12>>2]=N[i+12>>2]}ia[J[J[c>>2]+20>>2]](c,j,3626,1497453121,e)}N[d+184>>2]=N[a+476>>2];N[d>>2]=N[a+536>>2];N[d+4>>2]=N[a+540>>2];N[d+8>>2]=N[a+544>>2];N[d+12>>2]=N[a+548>>2];N[d+16>>2]=N[a+552>>2];N[d+20>>2]=N[a+556>>2];N[d+24>>2]=N[a+560>>2];N[d+28>>2]=N[a+564>>2];N[d+32>>2]=N[a+568>>2];N[d+36>>2]=N[a+572>>2];N[d+40>>2]=N[a+576>>2];N[d+44>>2]=N[a+580>>2];N[d+48>>2]=N[a+584>>2];N[d+52>>2]=N[a+588>>2];N[d+56>>2]=N[a+592>>2];N[d+60>>2]=N[a+596>>2];N[d- -64>>2]=N[a+600>>2];N[d+68>>2]=N[a+604>>2];N[d+72>>2]=N[a+608>>2];N[d+76>>2]=N[a+612>>2];N[d+80>>2]=N[a+616>>2];N[d+84>>2]=N[a+620>>2];N[d+88>>2]=N[a+624>>2];N[d+92>>2]=N[a+628>>2];e=J[a+504>>2];J[d+172>>2]=e;y:{if(!e){J[d+164>>2]=0;break y}J[d+164>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+512>>2]);i=J[d+172>>2];if(!i){break y}f=0;j=ia[J[J[c>>2]+16>>2]](c,4,i)|0;z:{if((i|0)<=0){g=J[a+512>>2];break z}g=J[a+512>>2];d=J[j+8>>2];if(i-1>>>0>=3){k=i&-4;e=0;while(1){h=f<<2;N[d>>2]=N[h+g>>2];N[d+4>>2]=N[(h|4)+g>>2];N[d+8>>2]=N[(h|8)+g>>2];N[d+12>>2]=N[(h|12)+g>>2];d=d+16|0;f=f+4|0;e=e+4|0;if((k|0)!=(e|0)){continue}break}}e=i&3;if(!e){break z}h=0;while(1){N[d>>2]=N[(f<<2)+g>>2];d=d+4|0;f=f+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,j,2448,1497453121,g)}ia[J[J[c>>2]+20>>2]](c,s,3744,1497453121,o);d=J[a+1112>>2];J[b+316>>2]=d;A:{if(!d){J[b+284>>2]=0;break A}J[b+284>>2]=ia[J[J[c>>2]+28>>2]](c,J[J[a+1120>>2]>>2]);j=J[b+316>>2];if(!j){break A}q=ia[J[J[c>>2]+16>>2]](c,348,j)|0;if((j|0)>0){e=J[q+8>>2];s=0;while(1){i=s<<2;d=J[i+J[a+1120>>2]>>2];N[e+320>>2]=N[d+360>>2];N[e+256>>2]=N[d+332>>2];N[e+260>>2]=N[d+336>>2];N[e+264>>2]=N[d+340>>2];N[e+268>>2]=N[d+344>>2];J[e+344>>2]=J[d+380>>2];J[e+340>>2]=K[d+377|0];N[e+160>>2]=N[d+228>>2];N[e+164>>2]=N[d+232>>2];N[e+168>>2]=N[d+236>>2];N[e+172>>2]=N[d+240>>2];J[e+336>>2]=K[d+376|0];N[e+208>>2]=N[d+276>>2];N[e+212>>2]=N[d+280>>2];N[e+216>>2]=N[d+284>>2];N[e+220>>2]=N[d+288>>2];N[e+224>>2]=N[d+292>>2];N[e+228>>2]=N[d+296>>2];N[e+232>>2]=N[d+300>>2];N[e+236>>2]=N[d+304>>2];N[e>>2]=N[d+60>>2];N[e+4>>2]=N[d- -64>>2];N[e+8>>2]=N[d+68>>2];N[e+12>>2]=N[d+72>>2];N[e+16>>2]=N[d+76>>2];N[e+20>>2]=N[d+80>>2];N[e+24>>2]=N[d+84>>2];N[e+28>>2]=N[d+88>>2];N[e+32>>2]=N[d+92>>2];N[e+36>>2]=N[d+96>>2];N[e+40>>2]=N[d+100>>2];N[e+44>>2]=N[d+104>>2];N[e+48>>2]=N[d+108>>2];N[e+52>>2]=N[d+112>>2];N[e+56>>2]=N[d+116>>2];N[e+60>>2]=N[d+120>>2];N[e+296>>2]=N[d+124>>2];N[e+300>>2]=N[d+128>>2];N[e+112>>2]=N[d+180>>2];N[e+116>>2]=N[d+184>>2];N[e+120>>2]=N[d+188>>2];N[e+124>>2]=N[d+192>>2];N[e+128>>2]=N[d+196>>2];N[e+132>>2]=N[d+200>>2];N[e+136>>2]=N[d+204>>2];N[e+140>>2]=N[d+208>>2];N[e+144>>2]=N[d+212>>2];N[e+148>>2]=N[d+216>>2];N[e+152>>2]=N[d+220>>2];N[e+156>>2]=N[d+224>>2];N[e+316>>2]=N[d+356>>2];N[e+64>>2]=N[d+132>>2];N[e+68>>2]=N[d+136>>2];N[e+72>>2]=N[d+140>>2];N[e+76>>2]=N[d+144>>2];N[e+80>>2]=N[d+148>>2];N[e+84>>2]=N[d+152>>2];N[e+88>>2]=N[d+156>>2];N[e+92>>2]=N[d+160>>2];N[e+96>>2]=N[d+164>>2];N[e+100>>2]=N[d+168>>2];N[e+104>>2]=N[d+172>>2];N[e+108>>2]=N[d+176>>2];N[e+240>>2]=N[d+316>>2];N[e+244>>2]=N[d+320>>2];N[e+248>>2]=N[d+324>>2];N[e+252>>2]=N[d+328>>2];N[e+324>>2]=N[d+364>>2];N[e+328>>2]=N[d+368>>2];N[e+312>>2]=N[d+352>>2];N[e+316>>2]=N[d+356>>2];N[e+320>>2]=N[d+360>>2];N[e+332>>2]=N[d+372>>2];f=J[d+44>>2];J[e+284>>2]=f;J[e+292>>2]=J[d+4>>2];J[e+288>>2]=J[d+24>>2];J[e+304>>2]=J[d+308>>2];N[e+176>>2]=N[d+244>>2];N[e+180>>2]=N[d+248>>2];N[e+184>>2]=N[d+252>>2];N[e+188>>2]=N[d+256>>2];N[e+192>>2]=N[d+260>>2];N[e+196>>2]=N[d+264>>2];N[e+200>>2]=N[d+268>>2];N[e+204>>2]=N[d+272>>2];J[e+308>>2]=J[d+312>>2];B:{if(!f){J[e+272>>2]=0;break B}d=ia[J[J[c>>2]+28>>2]](c,J[d+52>>2])|0;J[e+272>>2]=d;if(!d){break B}f=J[e+284>>2];t=ia[J[J[c>>2]+16>>2]](c,16,f)|0;C:{if((f|0)<=0){o=J[i+J[a+1120>>2]>>2];break C}o=J[i+J[a+1120>>2]>>2];h=J[o+52>>2];d=J[t+8>>2];g=0;if((f|0)!=1){m=f&-2;k=0;while(1){u=g<<4;n=u+h|0;N[d>>2]=N[n>>2];N[d+4>>2]=N[n+4>>2];N[d+8>>2]=N[n+8>>2];N[d+12>>2]=N[n+12>>2];n=h+(u|16)|0;N[d+16>>2]=N[n>>2];N[d+20>>2]=N[n+4>>2];N[d+24>>2]=N[n+8>>2];N[d+28>>2]=N[n+12>>2];d=d+32|0;g=g+2|0;k=k+2|0;if((m|0)!=(k|0)){continue}break}}if(!(f&1)){break C}f=h+(g<<4)|0;N[d>>2]=N[f>>2];N[d+4>>2]=N[f+4>>2];N[d+8>>2]=N[f+8>>2];N[d+12>>2]=N[f+12>>2]}ia[J[J[c>>2]+20>>2]](c,t,3626,1497453121,J[o+52>>2])}D:{if(!J[e+292>>2]){J[e+280>>2]=0;break D}d=ia[J[J[c>>2]+28>>2]](c,J[J[i+J[a+1120>>2]>>2]+12>>2])|0;J[e+280>>2]=d;if(!d){break D}f=J[e+292>>2];t=ia[J[J[c>>2]+16>>2]](c,4,f)|0;E:{if((f|0)<=0){o=J[i+J[a+1120>>2]>>2];break E}m=f&3;o=J[i+J[a+1120>>2]>>2];g=J[o+12>>2];d=J[t+8>>2];k=0;F:{if(f-1>>>0<3){f=0;break F}u=f&-4;f=0;h=0;while(1){n=f<<2;N[d>>2]=N[n+g>>2];N[d+4>>2]=N[g+(n|4)>>2];N[d+8>>2]=N[g+(n|8)>>2];N[d+12>>2]=N[g+(n|12)>>2];d=d+16|0;f=f+4|0;h=h+4|0;if((u|0)!=(h|0)){continue}break}}if(!m){break E}while(1){N[d>>2]=N[g+(f<<2)>>2];d=d+4|0;f=f+1|0;k=k+1|0;if((m|0)!=(k|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,t,2448,1497453121,J[o+12>>2])}G:{if(!J[e+288>>2]){J[e+276>>2]=0;break G}d=ia[J[J[c>>2]+28>>2]](c,J[i+J[a+1120>>2]>>2]+20|0)|0;J[e+276>>2]=d;if(!d){break G}g=J[e+292>>2];o=ia[J[J[c>>2]+16>>2]](c,4,g)|0;H:{if((g|0)<=0){f=J[i+J[a+1120>>2]>>2];break H}f=J[i+J[a+1120>>2]>>2];t=J[f+32>>2];k=J[o+8>>2];h=0;m=J[l+68>>2];n=J[l+88>>2];u=J[l+28>>2];while(1){i=J[t+(h<<2)>>2];d=(i<<15^-1)+i|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;d=J[u+((J[l+64>>2]-1&(d>>16^d))<<2)>>2];if(J[n+(d<<3)>>2]!=(i|0)){w=J[l+48>>2];while(1){d=J[w+(d<<2)>>2];if((i|0)!=J[n+(d<<3)>>2]){continue}break}}J[k>>2]=J[m+(d<<2)>>2];k=k+4|0;h=h+1|0;if((g|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,o,2444,1497453121,f+20|0)}e=e+348|0;s=s+1|0;if((j|0)!=(s|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,q,3665,1497453121,J[J[a+1120>>2]>>2])}d=J[a+852>>2];J[b+320>>2]=d;I:{if(!d){J[b+288>>2]=0;break I}d=b;b=ia[J[J[c>>2]+28>>2]](c,J[a+860>>2])|0;J[d+288>>2]=b;if(!b){break I}i=J[a+852>>2];g=ia[J[J[c>>2]+16>>2]](c,104,i)|0;if((i|0)>0){d=J[g+8>>2];h=0;while(1){e=h<<2;b=J[e+J[a+860>>2]>>2];J[d+96>>2]=ia[J[J[b>>2]+20>>2]](b);f=e+J[a+860>>2]|0;b=J[f>>2];N[d+8>>2]=N[b+28>>2];N[d+12>>2]=N[b+32>>2];N[d+16>>2]=N[b+36>>2];N[d+20>>2]=N[b+40>>2];N[d+24>>2]=N[b+44>>2];N[d+28>>2]=N[b+48>>2];N[d+32>>2]=N[b+52>>2];N[d+36>>2]=N[b+56>>2];N[d+40>>2]=N[b+60>>2];N[d+44>>2]=N[b+64>>2];N[d+48>>2]=N[b+68>>2];b=K[b+152|0];J[d+56>>2]=0;J[d+60>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+52>>2]=b;b=d- -64|0;J[b>>2]=0;J[b+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;f=J[f>>2];b=J[f+4>>2];if(b){J[d+88>>2]=1;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+12>>2];if(b){J[d+88>>2]=3;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+8>>2];if(b){J[d+88>>2]=2;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+16>>2];if(b){J[d+92>>2]=1;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+24>>2];if(b){J[d+92>>2]=3;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+20>>2];if(b){J[d+92>>2]=2;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b)}d=d+104|0;h=h+1|0;if((i|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,3241,1497453121,J[a+860>>2])}a=J[l+88>>2];if(!(a?!a|!K[l+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+88>>2]=0;H[l+92|0]=1;J[l+80>>2]=0;J[l+84>>2]=0;a=J[l+68>>2];if(!(a?!a|!K[l+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+68>>2]=0;H[l+72|0]=1;J[l+60>>2]=0;J[l+64>>2]=0;a=J[l+48>>2];if(!(a?!a|!K[l+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+48>>2]=0;H[l+52|0]=1;J[l+40>>2]=0;J[l+44>>2]=0;a=J[l+28>>2];if(!(a?!a|!K[l+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=l+96|0;return 3422}function Kk(a){a=a|0;var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=0,H=Q(0),I=Q(0),L=Q(0),M=0,O=0;ya(3196);Um(a);a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&6144)){break a}M=ia[J[J[a>>2]+104>>2]](a)|0;if((M|0)<=0){break a}while(1){O=M-1|0;d=ia[J[J[a>>2]+108>>2]](a,O)|0;b=ga-224|0;ga=b;c=ia[J[J[a>>2]+20>>2]](a)|0;c=ia[J[J[c>>2]+48>>2]](c)|0;e=ia[J[J[a>>2]+20>>2]](a)|0;e=ia[J[J[e>>2]+48>>2]](e)|0;y=N[d+40>>2];b:{if(y<=Q(0)){break b}h=c&2048;n=e&4096;c:{switch(J[d+4>>2]-3|0){case 0:J[b+172>>2]=0;J[b+176>>2]=0;J[b+184>>2]=0;J[b+188>>2]=0;J[b+180>>2]=1065353216;J[b+192>>2]=0;J[b+196>>2]=0;J[b+200>>2]=1065353216;J[b+204>>2]=0;J[b+164>>2]=0;J[b+168>>2]=0;J[b+160>>2]=1065353216;c=J[d+28>>2];j=N[c+52>>2];k=N[c+8>>2];l=N[c+12>>2];m=N[c+56>>2];o=N[c+28>>2];p=N[c+20>>2];t=N[c+24>>2];q=N[c+60>>2];f=N[d+308>>2];r=N[c+44>>2];g=N[d+300>>2];s=N[c+36>>2];i=N[d+304>>2];u=N[c+40>>2];v=N[c+4>>2];J[b+220>>2]=0;N[b+216>>2]=q+Q(Q(f*r)+Q(Q(g*s)+Q(i*u)));N[b+212>>2]=m+Q(Q(f*o)+Q(Q(g*p)+Q(i*t)));N[b+208>>2]=j+Q(Q(f*l)+Q(Q(g*v)+Q(i*k)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,b+160|0,y);c=J[d+32>>2];j=N[c+52>>2];k=N[c+8>>2];l=N[c+12>>2];m=N[c+56>>2];o=N[c+28>>2];p=N[c+20>>2];t=N[c+24>>2];q=N[c+60>>2];f=N[d+324>>2];r=N[c+44>>2];g=N[d+316>>2];s=N[c+36>>2];i=N[d+320>>2];u=N[c+40>>2];v=N[c+4>>2];J[b+220>>2]=0;N[b+216>>2]=q+Q(Q(f*r)+Q(Q(g*s)+Q(i*u)));N[b+212>>2]=m+Q(Q(f*o)+Q(Q(g*p)+Q(i*t)));N[b+208>>2]=j+Q(Q(f*l)+Q(Q(g*v)+Q(i*k)));if(!h){break b}c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,b+160|0,y);break b;case 1:c=J[d+28>>2];H=N[c+52>>2];f=N[c+8>>2];g=N[c+12>>2];t=N[d+584>>2];q=N[d+552>>2];r=N[d+568>>2];I=N[c+56>>2];L=N[c+60>>2];s=N[d+608>>2];u=N[d+600>>2];v=N[d+604>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];x=N[d+588>>2];z=N[d+556>>2];A=N[d+572>>2];B=N[d+592>>2];l=N[c+44>>2];C=N[d+560>>2];m=N[c+36>>2];D=N[d+576>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+216>>2]=L+Q(Q(s*l)+Q(Q(u*m)+Q(o*v)));N[b+212>>2]=I+Q(Q(s*i)+Q(Q(u*j)+Q(k*v)));J[b+172>>2]=0;N[b+192>>2]=Q(t*l)+Q(Q(q*m)+Q(r*o));N[b+176>>2]=Q(t*i)+Q(Q(q*j)+Q(r*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(t*g)+Q(Q(q*p)+Q(r*f));N[b+208>>2]=H+Q(Q(s*g)+Q(Q(u*p)+Q(f*v)));d:{if(h){c=ia[J[J[a>>2]+20>>2]](a)|0;e=b+160|0;ia[J[J[c>>2]+56>>2]](c,e,y);c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+672>>2];q=N[d+664>>2];r=N[d+668>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+648>>2];u=N[d+616>>2];v=N[d+632>>2];x=N[d+652>>2];z=N[d+620>>2];A=N[d+636>>2];B=N[d+656>>2];l=N[c+44>>2];C=N[d+624>>2];m=N[c+36>>2];D=N[d+640>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,e,y);break d}c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+672>>2];q=N[d+664>>2];r=N[d+668>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+648>>2];u=N[d+616>>2];v=N[d+632>>2];x=N[d+652>>2];z=N[d+620>>2];A=N[d+636>>2];B=N[d+656>>2];l=N[c+44>>2];C=N[d+624>>2];m=N[c+36>>2];D=N[d+640>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)))}c=d+688|0;f=xe(c);g=ye(c);if(!n|f==g){break b}N[b+64>>2]=N[b+168>>2];N[b+68>>2]=N[b+184>>2];J[b+76>>2]=0;N[b+72>>2]=N[b+200>>2];N[b+144>>2]=N[b+160>>2];N[b+148>>2]=N[b+176>>2];J[b+156>>2]=0;N[b+152>>2]=N[b+192>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;e=f>g;ia[J[J[c>>2]+60>>2]](c,b+208|0,b- -64|0,b+144|0,y,y,e?Q(0):f,e?Q(6.2831854820251465):g,b+128|0,!e,Q(10));break b;case 2:c=J[d+28>>2];H=N[c+52>>2];f=N[c+8>>2];g=N[c+12>>2];t=N[d+332>>2];F=d+300|0;q=N[F>>2];r=N[d+316>>2];I=N[c+56>>2];L=N[c+60>>2];s=N[d+356>>2];u=N[d+348>>2];v=N[d+352>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];x=N[d+336>>2];z=N[d+304>>2];A=N[d+320>>2];B=N[d+340>>2];l=N[c+44>>2];C=N[d+308>>2];m=N[c+36>>2];D=N[d+324>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+216>>2]=L+Q(Q(s*l)+Q(Q(u*m)+Q(o*v)));N[b+212>>2]=I+Q(Q(s*i)+Q(Q(u*j)+Q(k*v)));J[b+172>>2]=0;N[b+192>>2]=Q(t*l)+Q(Q(q*m)+Q(r*o));N[b+176>>2]=Q(t*i)+Q(Q(q*j)+Q(r*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(t*g)+Q(Q(q*p)+Q(r*f));N[b+208>>2]=H+Q(Q(s*g)+Q(Q(u*p)+Q(f*v)));e:{if(h){c=ia[J[J[a>>2]+20>>2]](a)|0;e=b+160|0;ia[J[J[c>>2]+56>>2]](c,e,y);c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+420>>2];q=N[d+412>>2];r=N[d+416>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+396>>2];u=N[d+364>>2];v=N[d+380>>2];x=N[d+400>>2];z=N[d+368>>2];A=N[d+384>>2];B=N[d+404>>2];l=N[c+44>>2];C=N[d+372>>2];m=N[c+36>>2];D=N[d+388>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,e,y);break e}c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+420>>2];q=N[d+412>>2];r=N[d+416>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+396>>2];u=N[d+364>>2];v=N[d+380>>2];x=N[d+400>>2];z=N[d+368>>2];A=N[d+384>>2];B=N[d+404>>2];l=N[c+44>>2];C=N[d+372>>2];m=N[c+36>>2];D=N[d+388>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)))}if(!n){break b}gl(b+144|0,d,Q(6.0868353843688965),y);J[b+156>>2]=0;f=N[b+152>>2];g=N[b+144>>2];i=N[b+148>>2];N[b+152>>2]=Q(Q(f*N[b+200>>2])+Q(Q(g*N[b+192>>2])+Q(i*N[b+196>>2])))+N[b+216>>2];N[b+148>>2]=Q(Q(f*N[b+184>>2])+Q(Q(g*N[b+176>>2])+Q(i*N[b+180>>2])))+N[b+212>>2];N[b+144>>2]=Q(Q(f*N[b+168>>2])+Q(Q(g*N[b+160>>2])+Q(i*N[b+164>>2])))+N[b+208>>2];c=b+208|0;e=0;while(1){h=b- -64|0;gl(h,d,Q(Q(Q(e|0)*Q(6.283185005187988))*Q(.03125)),y);J[b+76>>2]=0;f=N[b+72>>2];g=N[b+64>>2];i=N[b+68>>2];N[b+72>>2]=Q(Q(f*N[b+200>>2])+Q(Q(g*N[b+192>>2])+Q(i*N[b+196>>2])))+N[b+216>>2];N[b+68>>2]=Q(Q(f*N[b+184>>2])+Q(Q(g*N[b+176>>2])+Q(i*N[b+180>>2])))+N[b+212>>2];N[b+64>>2]=Q(Q(f*N[b+168>>2])+Q(Q(g*N[b+160>>2])+Q(i*N[b+164>>2])))+N[b+208>>2];w=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;ia[J[J[w>>2]+8>>2]](w,b+144|0,h,b+128|0);if(!(e&3)){w=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;ia[J[J[w>>2]+8>>2]](w,c,b- -64|0,b+128|0)}w=J[b+76>>2];J[b+152>>2]=J[b+72>>2];J[b+156>>2]=w;w=J[b+68>>2];J[b+144>>2]=J[b+64>>2];J[b+148>>2]=w;e=e+1|0;if((e|0)!=32){continue}break};f=N[d+512>>2];g=N[d+452>>2];e=J[d+32>>2];f:{if(N[e+344>>2]>Q(0)){Td(b- -64|0,e+4|0,d+364|0);break f}Td(b- -64|0,J[d+28>>2]+4|0,F)}e=J[b+76>>2];J[b+168>>2]=J[b+72>>2];J[b+172>>2]=e;e=J[b+92>>2];J[b+184>>2]=J[b+88>>2];J[b+188>>2]=e;e=J[b+108>>2];J[b+200>>2]=J[b+104>>2];J[b+204>>2]=e;e=J[b+68>>2];J[b+160>>2]=J[b+64>>2];J[b+164>>2]=e;e=J[b+84>>2];J[b+176>>2]=J[b+80>>2];J[b+180>>2]=e;e=J[b+100>>2];J[b+192>>2]=J[b+96>>2];J[b+196>>2]=e;e=J[b+124>>2];J[c+8>>2]=J[b+120>>2];J[c+12>>2]=e;e=J[b+116>>2];J[c>>2]=J[b+112>>2];J[c+4>>2]=e;e=J[c+12>>2];J[b+72>>2]=J[c+8>>2];J[b+76>>2]=e;e=J[c+4>>2];J[b+64>>2]=J[c>>2];J[b+68>>2]=e;N[b+128>>2]=N[b+160>>2];N[b+132>>2]=N[b+176>>2];J[b+140>>2]=0;N[b+136>>2]=N[b+192>>2];N[b+48>>2]=N[b+164>>2];N[b+52>>2]=N[b+180>>2];J[b+60>>2]=0;N[b+56>>2]=N[b+196>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[c>>2]+60>>2]](c,b- -64|0,b+128|0,b+48|0,y,y,Q(Q(-f)-g),Q(g-f),b+32|0,1,Q(10));break b;case 3:case 6:c=d+1072|0;e=J[c+4>>2];J[b+168>>2]=J[c>>2];J[b+172>>2]=e;F=d+1064|0;c=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=c;c=d+1088|0;e=J[c+4>>2];J[b+184>>2]=J[c>>2];J[b+188>>2]=e;c=d+1080|0;e=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=e;e=d+1104|0;w=J[e+4>>2];J[b+200>>2]=J[e>>2];J[b+204>>2]=w;e=d+1096|0;w=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=w;w=d+1120|0;E=J[w+4>>2];J[b+216>>2]=J[w>>2];J[b+220>>2]=E;w=d+1112|0;E=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=E;if(h){h=ia[J[J[a>>2]+20>>2]](a)|0;E=b+160|0;ia[J[J[h>>2]+56>>2]](h,E,y);h=d+1136|0;G=J[h+4>>2];J[b+168>>2]=J[h>>2];J[b+172>>2]=G;h=d+1128|0;G=J[h+4>>2];J[b+160>>2]=J[h>>2];J[b+164>>2]=G;h=d+1152|0;G=J[h+4>>2];J[b+184>>2]=J[h>>2];J[b+188>>2]=G;h=d+1144|0;G=J[h+4>>2];J[b+176>>2]=J[h>>2];J[b+180>>2]=G;h=d+1168|0;G=J[h+4>>2];J[b+200>>2]=J[h>>2];J[b+204>>2]=G;h=d+1160|0;G=J[h+4>>2];J[b+192>>2]=J[h>>2];J[b+196>>2]=G;h=d+1184|0;G=J[h+4>>2];J[b+216>>2]=J[h>>2];J[b+220>>2]=G;h=d+1176|0;G=J[h+4>>2];J[b+208>>2]=J[h>>2];J[b+212>>2]=G;h=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[h>>2]+56>>2]](h,E,y)}if(!n){break b}h=J[F+12>>2];J[b+168>>2]=J[F+8>>2];J[b+172>>2]=h;h=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=h;h=J[c+12>>2];J[b+184>>2]=J[c+8>>2];J[b+188>>2]=h;h=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=h;h=J[e+12>>2];J[b+200>>2]=J[e+8>>2];J[b+204>>2]=h;h=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=h;h=J[w+12>>2];J[b+216>>2]=J[w+8>>2];J[b+220>>2]=h;h=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=h;N[b+64>>2]=N[b+168>>2];N[b+68>>2]=N[b+184>>2];J[b+76>>2]=0;N[b+72>>2]=N[b+200>>2];N[b+144>>2]=N[b+160>>2];N[b+148>>2]=N[b+176>>2];J[b+156>>2]=0;N[b+152>>2]=N[b+192>>2];f=N[d+1e3>>2];g=N[d+996>>2];i=N[d+936>>2];j=N[d+932>>2];n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;h=d+1176|0;ia[J[J[n>>2]+64>>2]](n,h,b- -64|0,b+144|0,Q(y*Q(.8999999761581421)),j,i,g,f,b+128|0,Q(10),1);J[b+156>>2]=0;N[b+152>>2]=N[b+196>>2];N[b+148>>2]=N[b+180>>2];N[b+144>>2]=N[b+164>>2];j=N[d+1196>>2];f=N[b+144>>2];i=N[d+1200>>2];g=Ga(i);k=N[b+148>>2];l=Ha(i);N[b+132>>2]=Q(k*l)-Q(g*f);i=Ga(j);m=N[b+152>>2];j=Ha(j);N[b+136>>2]=Q(m*j)+Q(Q(f*Q(i*l))+Q(k*Q(i*g)));N[b+128>>2]=Q(Q(f*Q(j*l))+Q(k*Q(j*g)))-Q(i*m);n=d+1136|0;E=J[n+4>>2];J[b+168>>2]=J[n>>2];J[b+172>>2]=E;n=d+1128|0;E=J[n+4>>2];J[b+160>>2]=J[n>>2];J[b+164>>2]=E;n=d+1152|0;E=J[n+4>>2];J[b+184>>2]=J[n>>2];J[b+188>>2]=E;n=d+1144|0;E=J[n+4>>2];J[b+176>>2]=J[n>>2];J[b+180>>2]=E;n=d+1168|0;E=J[n+4>>2];J[b+200>>2]=J[n>>2];J[b+204>>2]=E;n=d+1160|0;E=J[n+4>>2];J[b+192>>2]=J[n>>2];J[b+196>>2]=E;n=J[h+4>>2];J[b+208>>2]=J[h>>2];J[b+212>>2]=n;n=d+1184|0;E=J[n+4>>2];J[b+216>>2]=J[n>>2];J[b+220>>2]=E;J[b+60>>2]=0;N[b+56>>2]=-N[b+192>>2];N[b+52>>2]=-N[b+176>>2];N[b+48>>2]=-N[b+160>>2];f=N[d+868>>2];g=N[d+872>>2];g:{if(f>g){n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[n>>2]+60>>2]](n,h,b+48|0,b+128|0,y,y,Q(-3.1415927410125732),Q(3.1415927410125732),b+32|0,0,Q(10));break g}if(!(f<g)){break g}n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[n>>2]+60>>2]](n,h,b+48|0,b+128|0,y,y,f,g,b+32|0,1,Q(10))}h=J[F+12>>2];J[b+168>>2]=J[F+8>>2];J[b+172>>2]=h;h=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=h;F=J[c+12>>2];J[b+184>>2]=J[c+8>>2];J[b+188>>2]=F;F=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=F;c=J[e+12>>2];J[b+200>>2]=J[e+8>>2];J[b+204>>2]=c;c=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=c;c=J[w+12>>2];J[b+216>>2]=J[w+8>>2];J[b+220>>2]=c;c=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=c;c=J[d+692>>2];J[b+40>>2]=J[d+688>>2];J[b+44>>2]=c;c=J[d+684>>2];J[b+32>>2]=J[d+680>>2];J[b+36>>2]=c;c=J[d+708>>2];J[b+24>>2]=J[d+704>>2];J[b+28>>2]=c;c=J[d+700>>2];J[b+16>>2]=J[d+696>>2];J[b+20>>2]=c;c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;ia[J[J[c>>2]+72>>2]](c,b+32|0,b+16|0,b+160|0,b);break b;case 4:break c;default:break b}}c=J[d+836>>2];J[b+168>>2]=J[d+832>>2];J[b+172>>2]=c;c=d+824|0;e=J[c+4>>2];J[b+160>>2]=J[c>>2];J[b+164>>2]=e;e=J[d+852>>2];J[b+184>>2]=J[d+848>>2];J[b+188>>2]=e;e=J[d+844>>2];J[b+176>>2]=J[d+840>>2];J[b+180>>2]=e;e=J[d+868>>2];J[b+200>>2]=J[d+864>>2];J[b+204>>2]=e;e=J[d+860>>2];J[b+192>>2]=J[d+856>>2];J[b+196>>2]=e;e=J[d+884>>2];J[b+216>>2]=J[d+880>>2];J[b+220>>2]=e;e=J[d+876>>2];J[b+208>>2]=J[d+872>>2];J[b+212>>2]=e;h:{if(h){e=ia[J[J[a>>2]+20>>2]](a)|0;w=b+160|0;ia[J[J[e>>2]+56>>2]](e,w,y);e=J[d+900>>2];J[b+168>>2]=J[d+896>>2];J[b+172>>2]=e;e=J[d+892>>2];J[b+160>>2]=J[d+888>>2];J[b+164>>2]=e;e=J[d+916>>2];J[b+184>>2]=J[d+912>>2];J[b+188>>2]=e;e=J[d+908>>2];J[b+176>>2]=J[d+904>>2];J[b+180>>2]=e;e=J[d+932>>2];J[b+200>>2]=J[d+928>>2];J[b+204>>2]=e;e=J[d+924>>2];J[b+192>>2]=J[d+920>>2];J[b+196>>2]=e;e=J[d+948>>2];J[b+216>>2]=J[d+944>>2];J[b+220>>2]=e;e=J[d+940>>2];J[b+208>>2]=J[d+936>>2];J[b+212>>2]=e;e=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[e>>2]+56>>2]](e,w,y);break h}e=J[d+900>>2];J[b+168>>2]=J[d+896>>2];J[b+172>>2]=e;e=J[d+892>>2];J[b+160>>2]=J[d+888>>2];J[b+164>>2]=e;e=J[d+916>>2];J[b+184>>2]=J[d+912>>2];J[b+188>>2]=e;e=J[d+908>>2];J[b+176>>2]=J[d+904>>2];J[b+180>>2]=e;e=J[d+932>>2];J[b+200>>2]=J[d+928>>2];J[b+204>>2]=e;e=J[d+924>>2];J[b+192>>2]=J[d+920>>2];J[b+196>>2]=e;e=J[d+948>>2];J[b+216>>2]=J[d+944>>2];J[b+220>>2]=e;e=J[d+940>>2];J[b+208>>2]=J[d+936>>2];J[b+212>>2]=e}if(!n){break b}c=K[d+180|0]?c:d+888|0;k=N[c+48>>2];q=N[c+8>>2];f=N[c>>2];l=N[c+4>>2];m=N[c+52>>2];r=N[c+24>>2];g=N[c+16>>2];o=N[c+20>>2];p=N[c+56>>2];s=N[c+40>>2];i=N[c+32>>2];t=N[c+36>>2];j=N[d+184>>2];J[b+76>>2]=0;s=Q(s*Q(0));u=Q(t*Q(0));N[b+72>>2]=p+Q(s+Q(Q(j*i)+u));r=Q(r*Q(0));v=Q(o*Q(0));N[b+68>>2]=m+Q(r+Q(Q(j*g)+v));q=Q(q*Q(0));x=Q(l*Q(0));N[b+64>>2]=k+Q(q+Q(Q(j*f)+x));j=N[d+188>>2];J[b+156>>2]=0;N[b+152>>2]=p+Q(s+Q(Q(j*i)+u));N[b+148>>2]=m+Q(r+Q(Q(j*g)+v));N[b+144>>2]=k+Q(q+Q(Q(j*f)+x));c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;e=b+128|0;ia[J[J[c>>2]+8>>2]](c,b- -64|0,b+144|0,e);J[b+140>>2]=0;N[b+136>>2]=i;N[b+132>>2]=g;N[b+128>>2]=f;J[b+60>>2]=0;N[b+56>>2]=t;N[b+52>>2]=o;N[b+48>>2]=l;f=N[d+196>>2];g=N[d+192>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[c>>2]+60>>2]](c,d+936|0,e,b+48|0,y,y,g,f,b+32|0,1,Q(10))}ga=b+224|0;c=M>>>0>1;M=O;if(c){continue}break}}i:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break i}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&16387)){break i}if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break i}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)|0)|J[a+280>>2]<=0){break i}M=0;while(1){c=J[J[a+288>>2]+(M<<2)>>2];ia[J[J[c>>2]+12>>2]](c,J[a+72>>2]);M=M+1|0;if((M|0)<J[a+280>>2]){continue}break}}xa()}function Lg(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,P=0,S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0,Z=0,_=0,$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=0,ja=0,ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=Q(0),qa=Q(0),ra=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=Q(0),xa=Q(0),ya=Q(0);f=ga-960|0;ga=f;a:{if((ia[J[J[d>>2]+80>>2]](d)|0)==2){g=J[d+152>>2];h=g-1|0;J[a+28>>2]=h;if(!g){break a}while(1){Lg(a,b,c,J[J[d+160>>2]+(h<<2)>>2],e);g=J[a+28>>2];h=g-1|0;J[a+28>>2]=h;if(g){continue}break}break a}if((ia[J[J[e>>2]+80>>2]](e)|0)==2){g=J[e+152>>2];h=g-1|0;J[a+36>>2]=h;if(!g){break a}while(1){Lg(a,b,c,d,J[J[e+160>>2]+(h<<2)>>2]);g=J[a+36>>2];h=g-1|0;J[a+36>>2]=h;if(g){continue}break}break a}h=J[b+12>>2];g=J[h+12>>2];J[f+904>>2]=J[h+8>>2];J[f+908>>2]=g;g=J[h+4>>2];J[f+896>>2]=J[h>>2];J[f+900>>2]=g;g=J[h+28>>2];J[f+920>>2]=J[h+24>>2];J[f+924>>2]=g;g=J[h+20>>2];J[f+912>>2]=J[h+16>>2];J[f+916>>2]=g;g=J[h+44>>2];J[f+936>>2]=J[h+40>>2];J[f+940>>2]=g;g=J[h+36>>2];J[f+928>>2]=J[h+32>>2];J[f+932>>2]=g;g=J[h+60>>2];J[f+952>>2]=J[h+56>>2];J[f+956>>2]=g;g=J[h+52>>2];J[f+944>>2]=J[h+48>>2];J[f+948>>2]=g;h=J[c+12>>2];g=J[h+12>>2];J[f+840>>2]=J[h+8>>2];J[f+844>>2]=g;g=J[h+4>>2];J[f+832>>2]=J[h>>2];J[f+836>>2]=g;g=J[h+28>>2];J[f+856>>2]=J[h+24>>2];J[f+860>>2]=g;g=J[h+20>>2];J[f+848>>2]=J[h+16>>2];J[f+852>>2]=g;g=J[h+44>>2];J[f+872>>2]=J[h+40>>2];J[f+876>>2]=g;g=J[h+36>>2];J[f+864>>2]=J[h+32>>2];J[f+868>>2]=g;g=J[h+60>>2];J[f+888>>2]=J[h+56>>2];J[f+892>>2]=g;g=J[h+52>>2];J[f+880>>2]=J[h+48>>2];J[f+884>>2]=g;J[f+812>>2]=0;J[8369]=J[8369]+1;J[f+820>>2]=ia[J[6782]](256,16);H[f+824|0]=1;J[f+816>>2]=32;i=f+896|0;k=f+832|0;v=f+808|0;C=ga+-64|0;ga=C;b:{if(!(!J[d+68>>2]|!J[e+68>>2])){j=ga-112|0;ga=j;g=d+68|0;h=e+68|0;if(!(!J[g>>2]|!J[h>>2])){S=N[i+52>>2];D=N[i+56>>2];E=N[k+52>>2];F=N[k+56>>2];$=N[i+20>>2];aa=N[i+36>>2];G=N[k+20>>2];I=N[k+36>>2];T=N[k+24>>2];ba=N[i+24>>2];m=N[k+40>>2];ca=N[i+40>>2];U=N[i+48>>2];y=N[k+48>>2];da=N[i+32>>2];ea=N[i+16>>2];z=N[i>>2];A=N[i+4>>2];W=N[k+32>>2];V=N[k+16>>2];L=N[k>>2];M=N[k+4>>2];l=N[k+8>>2];B=N[i+8>>2];J[j+60>>2]=0;J[j+44>>2]=0;J[j+28>>2]=0;x=Q(Q(m*ca)+Q(Q(l*B)+Q(ba*T)));N[j+56>>2]=x;u=Q(Q(I*ca)+Q(Q(M*B)+Q(ba*G)));N[j+52>>2]=u;q=Q(Q(W*ca)+Q(Q(L*B)+Q(ba*V)));N[j+48>>2]=q;o=Q(Q(m*aa)+Q(Q(l*A)+Q($*T)));N[j+40>>2]=o;p=Q(Q(I*aa)+Q(Q(M*A)+Q($*G)));N[j+36>>2]=p;r=Q(Q(W*aa)+Q(Q(L*A)+Q($*V)));N[j+32>>2]=r;m=Q(Q(m*da)+Q(Q(l*z)+Q(ea*T)));N[j+24>>2]=m;l=Q(Q(I*da)+Q(Q(M*z)+Q(ea*G)));N[j+20>>2]=l;N[j+104>>2]=Q(R(x))+Q(9.999999974752427e-7);N[j+100>>2]=Q(R(u))+Q(9.999999974752427e-7);N[j+96>>2]=Q(R(q))+Q(9.999999974752427e-7);N[j+88>>2]=Q(R(o))+Q(9.999999974752427e-7);N[j+84>>2]=Q(R(p))+Q(9.999999974752427e-7);N[j+80>>2]=Q(R(r))+Q(9.999999974752427e-7);N[j+72>>2]=Q(R(m))+Q(9.999999974752427e-7);N[j+68>>2]=Q(R(l))+Q(9.999999974752427e-7);J[j+12>>2]=0;l=Q(-U);N[j+8>>2]=Q(Q(Q(B*l)-Q(ba*S))-Q(ca*D))+Q(Q(F*ca)+Q(Q(y*B)+Q(ba*E)));N[j+4>>2]=Q(Q(Q(A*l)-Q($*S))-Q(aa*D))+Q(Q(F*aa)+Q(Q(y*A)+Q($*E)));N[j>>2]=Q(Q(Q(z*l)-Q(ea*S))-Q(da*D))+Q(Q(F*da)+Q(Q(y*z)+Q(ea*E)));l=Q(Q(W*da)+Q(Q(L*z)+Q(ea*V)));N[j+16>>2]=l;N[j+64>>2]=Q(R(l))+Q(9.999999974752427e-7);Ab(g,h,v,j,0,0,1)}ga=j+112|0;break b}O=ia[J[J[d>>2]+88>>2]](d)|0;if(!O){break b}P=C+16|0;t=C+48|0;while(1){O=O-1|0;ia[J[J[d>>2]+120>>2]](d,O,i,C+32|0,t);_=ia[J[J[e>>2]+88>>2]](e)|0;if(_){while(1){ia[J[J[e>>2]+120>>2]](e,O,k,C,P);_=_-1|0;c:{if(N[C+16>>2]<N[C+32>>2]|N[C>>2]>N[C+48>>2]|(N[C+20>>2]<N[C+36>>2]|N[C+4>>2]>N[C+52>>2])){break c}if(N[C+24>>2]<N[C+40>>2]|N[C+8>>2]>N[C+56>>2]){break c}n=J[v+4>>2];d:{if((n|0)!=J[v+8>>2]){break d}fa=n?n<<1:1;if((fa|0)<=(n|0)){break d}e:{if(!fa){Z=0;break e}J[8369]=J[8369]+1;Z=ia[J[6782]](fa<<3,16)|0;n=J[v+4>>2]}s=J[v+12>>2];f:{g:{if((n|0)>0){ja=0;if((n|0)!=1){j=n&-2;w=0;while(1){X=ja<<3;h=X+Z|0;g=s+X|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];g=X|8;h=g+Z|0;g=g+s|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];ja=ja+2|0;w=w+2|0;if((j|0)!=(w|0)){continue}break}}if(n&1){g=ja<<3;h=g+Z|0;g=g+s|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2]}if(K[v+16|0]){break g}break f}if(!s|!K[v+16|0]){break f}}if(s){J[8370]=J[8370]+1;ia[J[6783]](s)}n=J[v+4>>2]}J[v+12>>2]=Z;H[v+16|0]=1;J[v+8>>2]=fa}g=J[v+12>>2]+(n<<3)|0;J[g+4>>2]=_;J[g>>2]=O;J[v+4>>2]=n+1}if(_){continue}break}}if(O){continue}break}}ga=C- -64|0;h:{if(!J[f+812>>2]){break h}i:{if((ia[J[J[d>>2]+80>>2]](d)|0)!=1){break i}if((ia[J[J[e>>2]+80>>2]](e)|0)!=1){break i}_=J[f+820>>2];ja=J[f+812>>2];i=ga-432|0;ga=i;h=J[c+12>>2];ka=N[h+56>>2];la=N[h+52>>2];ma=N[h+40>>2];na=N[h+36>>2];oa=N[h+24>>2];pa=N[h+20>>2];g=J[b+12>>2];qa=N[g+56>>2];ra=N[g+52>>2];ta=N[g+40>>2];ua=N[g+36>>2];va=N[g+24>>2];wa=N[g+20>>2];xa=N[h+48>>2];ya=N[h+32>>2];$=N[h+16>>2];aa=N[h+8>>2];ba=N[h+4>>2];ca=N[h>>2];da=N[g+48>>2];ea=N[g+32>>2];z=N[g+16>>2];A=N[g+8>>2];B=N[g+4>>2];S=N[g>>2];J[i+424>>2]=1008981770;J[i+352>>2]=1008981770;ia[J[J[d>>2]+112>>2]](d);ia[J[J[e>>2]+112>>2]](e);if(ja){fa=i+16|0;while(1){h=J[_>>2];J[a+24>>2]=h;J[a+32>>2]=J[_+4>>2];g=ia[J[J[d>>2]+84>>2]](d)|0;ia[J[J[g>>2]+20>>2]](g,h,i+360|0);h=J[a+32>>2];g=ia[J[J[e>>2]+84>>2]](e)|0;ia[J[J[g>>2]+20>>2]](g,h,i+288|0);J[i+372>>2]=0;J[i+388>>2]=0;J[i+404>>2]=0;L=N[i+384>>2];M=N[i+376>>2];U=N[i+380>>2];W=Q(ra+Q(Q(L*va)+Q(Q(M*z)+Q(wa*U))));N[i+380>>2]=W;x=N[i+368>>2];u=N[i+360>>2];q=N[i+364>>2];D=Q(ra+Q(Q(x*va)+Q(Q(u*z)+Q(wa*q))));N[i+364>>2]=D;o=N[i+400>>2];m=N[i+392>>2];l=N[i+396>>2];V=Q(ra+Q(Q(o*va)+Q(Q(m*z)+Q(wa*l))));N[i+396>>2]=V;p=Q(qa+Q(Q(L*ta)+Q(Q(M*ea)+Q(ua*U))));N[i+384>>2]=p;r=Q(da+Q(Q(o*A)+Q(Q(m*S)+Q(B*l))));N[i+392>>2]=r;E=Q(qa+Q(Q(x*ta)+Q(Q(u*ea)+Q(ua*q))));N[i+368>>2]=E;m=Q(qa+Q(Q(o*ta)+Q(Q(m*ea)+Q(ua*l))));N[i+400>>2]=m;F=Q(da+Q(Q(x*A)+Q(Q(u*S)+Q(B*q))));N[i+360>>2]=F;l=Q(da+Q(Q(L*A)+Q(Q(M*S)+Q(B*U))));N[i+376>>2]=l;u=N[i+296>>2];q=N[i+288>>2];o=N[i+292>>2];J[i+300>>2]=0;G=Q(la+Q(Q(u*oa)+Q(Q(q*$)+Q(pa*o))));N[i+292>>2]=G;I=Q(ka+Q(Q(u*ma)+Q(Q(q*ya)+Q(na*o))));N[i+296>>2]=I;T=Q(xa+Q(Q(u*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+288>>2]=T;u=N[i+312>>2];q=N[i+304>>2];o=N[i+308>>2];J[i+316>>2]=0;L=Q(la+Q(Q(u*oa)+Q(Q(q*$)+Q(pa*o))));N[i+308>>2]=L;M=Q(ka+Q(Q(u*ma)+Q(Q(q*ya)+Q(na*o))));N[i+312>>2]=M;U=Q(xa+Q(Q(u*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+304>>2]=U;y=N[i+328>>2];q=N[i+320>>2];o=N[i+324>>2];J[i+332>>2]=0;x=Q(la+Q(Q(y*oa)+Q(Q(q*$)+Q(pa*o))));N[i+324>>2]=x;u=Q(xa+Q(Q(y*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+320>>2]=u;q=Q(ka+Q(Q(y*ma)+Q(Q(q*ya)+Q(na*o))));N[i+328>>2]=q;o=Q(p-E);p=Q(r-F);r=Q(m-E);l=Q(l-F);y=Q(Q(o*p)-Q(r*l));m=Q(V-D);V=Q(l*m);l=Q(W-D);p=Q(V-Q(p*l));m=Q(Q(l*r)-Q(m*o));l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(m*m)+Q(y*y))))));r=Q(y*l);N[i+412>>2]=r;m=Q(m*l);N[i+408>>2]=m;l=Q(p*l);N[i+416>>2]=l;N[i+420>>2]=Q(E*l)+Q(Q(F*m)+Q(D*r));o=Q(M-I);p=Q(u-T);r=Q(q-I);l=Q(U-T);q=Q(Q(o*p)-Q(r*l));m=Q(x-G);u=Q(l*m);l=Q(L-G);p=Q(u-Q(p*l));m=Q(Q(l*r)-Q(m*o));l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(m*m)+Q(q*q))))));r=Q(q*l);N[i+340>>2]=r;m=Q(m*l);N[i+336>>2]=m;l=Q(p*l);N[i+344>>2]=l;N[i+348>>2]=Q(I*l)+Q(Q(T*m)+Q(G*r));ja=ja-1|0;p=N[i+416>>2];r=N[i+408>>2];m=N[i+412>>2];l=N[i+420>>2];o=Q(N[i+424>>2]+N[i+352>>2]);j:{if(!(!(Q(Q(Q(Q(N[i+296>>2]*p)+Q(Q(N[i+288>>2]*r)+Q(N[i+292>>2]*m)))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+312>>2]*p)+Q(Q(N[i+304>>2]*r)+Q(m*N[i+308>>2])))-l)-o)>Q(0)))){g=0;if(Q(Q(Q(Q(N[i+328>>2]*p)+Q(Q(N[i+320>>2]*r)+Q(m*N[i+324>>2])))-l)-o)>Q(0)){break j}}p=N[i+344>>2];r=N[i+336>>2];m=N[i+340>>2];l=N[i+348>>2];g=!(Q(Q(Q(Q(N[i+368>>2]*p)+Q(Q(N[i+360>>2]*r)+Q(N[i+364>>2]*m)))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+384>>2]*p)+Q(Q(N[i+376>>2]*r)+Q(m*N[i+380>>2])))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+400>>2]*p)+Q(Q(N[i+392>>2]*r)+Q(m*N[i+396>>2])))-l)-o)>Q(0))}k:{if(!g){break k}v=i+8|0;n=0;s=0;k=ga-880|0;ga=k;h=i+288|0;m=N[h+64>>2];g=i+360|0;l=N[g+64>>2];j=J[g+60>>2];J[k+296>>2]=J[g+56>>2];J[k+300>>2]=j;j=J[g+52>>2];J[k+288>>2]=J[g+48>>2];J[k+292>>2]=j;t=Al(g,h,k+560|0);j=0;l:{if(!t){break l}j=0;if((t|0)<=0){break l}x=Q(l+m);q=N[k+300>>2];o=N[k+296>>2];p=N[k+292>>2];r=Q(-1e3);m=N[k+288>>2];m:{n:{while(1){o:{j=(k+560|0)+(n<<4)|0;l=Q(x-Q(Q(Q(N[j+8>>2]*o)+Q(Q(N[j>>2]*m)+Q(N[j+4>>2]*p)))-q));p:{if(!(l>=Q(0))){break p}if(l>r){break o}if(!(Q(l+Q(1.1920928955078125e-7))>=r)){break p}J[k+(s<<2)>>2]=n;s=s+1|0}n=n+1|0;if((t|0)!=(n|0)){continue}N[k+280>>2]=r;if((s|0)<=0){break m}break n}J[k>>2]=n;s=1;r=l;n=n+1|0;if((t|0)!=(n|0)){continue}break}J[k+284>>2]=1;N[k+280>>2]=r}n=0;if((s|0)!=1){X=s&-2;O=k+304|0;Z=0;while(1){P=k+560|0;w=P+(J[k+(n<<2)>>2]<<4)|0;j=J[w+12>>2];t=O+(n<<4)|0;J[t+8>>2]=J[w+8>>2];J[t+12>>2]=j;j=J[w+4>>2];J[t>>2]=J[w>>2];J[t+4>>2]=j;j=n|1;t=O+(j<<4)|0;P=P+(J[k+(j<<2)>>2]<<4)|0;j=J[P+12>>2];J[t+8>>2]=J[P+8>>2];J[t+12>>2]=j;j=J[P+4>>2];J[t>>2]=J[P>>2];J[t+4>>2]=j;n=n+2|0;Z=Z+2|0;if((X|0)!=(Z|0)){continue}break}}if(!(s&1)){break m}P=(k+560|0)+(J[k+(n<<2)>>2]<<4)|0;j=J[P+4>>2];t=(k+280|0)+(n<<4)|0;J[t+24>>2]=J[P>>2];J[t+28>>2]=j;j=J[P+12>>2];J[t+32>>2]=J[P+8>>2];J[t+36>>2]=j}j=0;if(!s){break l}N[k+292>>2]=-N[k+292>>2];N[k+296>>2]=-N[k+296>>2];N[k+288>>2]=-N[k+288>>2];j=J[h+60>>2];J[k+16>>2]=J[h+56>>2];J[k+20>>2]=j;j=J[h+52>>2];J[k+8>>2]=J[h+48>>2];J[k+12>>2]=j;h=Al(h,g,k+560|0);j=0;if(!h){break l}j=0;if((h|0)<=0){break l}u=N[k+20>>2];q=N[k+16>>2];o=N[k+12>>2];m=Q(-1e3);w=0;p=N[k+8>>2];n=0;q:{r:{while(1){s:{g=(k+560|0)+(n<<4)|0;l=Q(x-Q(Q(Q(N[g+8>>2]*q)+Q(Q(N[g>>2]*p)+Q(N[g+4>>2]*o)))-u));t:{if(!(l>=Q(0))){break t}if(l>m){break s}if(!(Q(l+Q(1.1920928955078125e-7))>=m)){break t}J[(k+816|0)+(w<<2)>>2]=n;w=w+1|0}n=n+1|0;if((h|0)!=(n|0)){continue}J[k+4>>2]=w;N[k>>2]=m;if((w|0)<=0){break q}break r}J[k+816>>2]=n;w=1;m=l;n=n+1|0;if((h|0)!=(n|0)){continue}break}J[k+4>>2]=1;N[k>>2]=m}n=0;if((w|0)!=1){P=w&-2;X=k+24|0;Z=0;while(1){j=k+560|0;t=k+816|0;O=j+(J[t+(n<<2)>>2]<<4)|0;g=J[O+12>>2];h=X+(n<<4)|0;J[h+8>>2]=J[O+8>>2];J[h+12>>2]=g;g=J[O+4>>2];J[h>>2]=J[O>>2];J[h+4>>2]=g;g=n|1;h=X+(g<<4)|0;j=j+(J[t+(g<<2)>>2]<<4)|0;g=J[j+12>>2];J[h+8>>2]=J[j+8>>2];J[h+12>>2]=g;g=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=g;n=n+2|0;Z=Z+2|0;if((P|0)!=(Z|0)){continue}break}}if(!(w&1)){break q}j=(k+560|0)+(J[(k+816|0)+(n<<2)>>2]<<4)|0;g=J[j+4>>2];h=k+(n<<4)|0;J[h+24>>2]=J[j>>2];J[h+28>>2]=g;g=J[j+12>>2];J[h+32>>2]=J[j+8>>2];J[h+36>>2]=g}j=0;if(!w){break l}u:{if(m<r){N[v>>2]=m;g=J[k+12>>2];J[v+8>>2]=J[k+8>>2];J[v+12>>2]=g;g=J[k+20>>2];J[v+16>>2]=J[k+16>>2];J[v+20>>2]=g;J[v+4>>2]=w;sa(v+24|0,k+24|0,w<<4);break u}N[v>>2]=r;g=J[k+292>>2];J[v+8>>2]=J[k+288>>2];J[v+12>>2]=g;g=J[k+300>>2];J[v+16>>2]=J[k+296>>2];J[v+20>>2]=g;J[v+4>>2]=s;sa(v+24|0,k+304|0,s<<4)}j=1}ga=k+880|0;if(!j){break k}t=J[i+12>>2];if(!t){break k}while(1){l=N[i+8>>2];g=J[a+16>>2];ia[J[J[g>>2]+8>>2]](g,J[a+28>>2],J[a+24>>2]);g=J[a+16>>2];ia[J[J[g>>2]+12>>2]](g,J[a+36>>2],J[a+32>>2]);t=t-1|0;h=(i+(t<<4)|0)+32|0;j=J[a+12>>2];if(!j){g=J[a+4>>2];j=ia[J[J[g>>2]+12>>2]](g,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=j}g=J[a+16>>2];J[g+4>>2]=j;ia[J[J[g>>2]+16>>2]](g,fa,h,Q(-l));if(t){continue}break}}_=_+8|0;if(ja){continue}break}}ia[J[J[d>>2]+116>>2]](d);ia[J[J[e>>2]+116>>2]](e);ga=i+432|0;break h}ia[J[J[d>>2]+112>>2]](d);ia[J[J[e>>2]+112>>2]](e);Bb(f+512|4);J[f+572>>2]=0;J[f+576>>2]=0;J[f+520>>2]=1;J[f+580>>2]=0;J[f+584>>2]=0;J[f+588>>2]=0;J[f+592>>2]=0;J[f+596>>2]=0;J[f+600>>2]=0;J[f+604>>2]=0;J[f+608>>2]=0;J[f+612>>2]=0;J[f+616>>2]=0;J[f+516>>2]=1976;Se(f+620|0);J[f+712>>2]=4;J[f+796>>2]=17412;J[f+788>>2]=17332;J[f+780>>2]=17260;J[f+620>>2]=4488;J[f+512>>2]=d;if(ia[J[J[d>>2]+96>>2]](d)|0){g=f+788|0}else{g=J[f+512>>2];g=ia[J[J[g>>2]+100>>2]](g)|0?f+796|0:f+780|0}J[f+804>>2]=g;J[g+4>>2]=f+512;Bb(f+216|4);J[f+276>>2]=0;J[f+280>>2]=0;J[f+224>>2]=1;J[f+284>>2]=0;J[f+288>>2]=0;J[f+292>>2]=0;J[f+296>>2]=0;J[f+300>>2]=0;J[f+304>>2]=0;J[f+308>>2]=0;J[f+312>>2]=0;J[f+316>>2]=0;J[f+320>>2]=0;J[f+220>>2]=1976;Se(f+324|0);J[f+416>>2]=4;J[f+500>>2]=17412;J[f+492>>2]=17332;J[f+484>>2]=17260;J[f+324>>2]=4488;J[f+216>>2]=e;if(ia[J[J[e>>2]+96>>2]](e)|0){g=f+492|0}else{g=J[f+216>>2];g=ia[J[J[g>>2]+100>>2]](g)|0?f+500|0:f+484|0}J[f+508>>2]=g;J[g+4>>2]=f+216;P=ia[J[J[d>>2]+92>>2]](d)|0;t=ia[J[J[e>>2]+92>>2]](e)|0;w=J[f+812>>2];if(w){while(1){w=w-1|0;g=J[f+820>>2]+(w<<3)|0;h=J[g>>2];J[a+24>>2]=h;J[a+32>>2]=J[g+4>>2];g=J[f+804>>2];X=ia[J[J[g>>2]>>2]](g,h)|0;g=J[f+508>>2];O=ia[J[J[g>>2]>>2]](g,J[a+32>>2])|0;h=J[b+12>>2];g=J[h+12>>2];J[f+160>>2]=J[h+8>>2];J[f+164>>2]=g;g=J[h+4>>2];J[f+152>>2]=J[h>>2];J[f+156>>2]=g;g=J[h+28>>2];J[f+176>>2]=J[h+24>>2];J[f+180>>2]=g;g=J[h+20>>2];J[f+168>>2]=J[h+16>>2];J[f+172>>2]=g;g=J[h+44>>2];J[f+192>>2]=J[h+40>>2];J[f+196>>2]=g;g=J[h+36>>2];J[f+184>>2]=J[h+32>>2];J[f+188>>2]=g;g=J[h+60>>2];J[f+208>>2]=J[h+56>>2];J[f+212>>2]=g;g=J[h+52>>2];J[f+200>>2]=J[h+48>>2];J[f+204>>2]=g;h=J[c+12>>2];g=J[h+12>>2];J[f+96>>2]=J[h+8>>2];J[f+100>>2]=g;g=J[h+4>>2];J[f+88>>2]=J[h>>2];J[f+92>>2]=g;g=J[h+28>>2];J[f+112>>2]=J[h+24>>2];J[f+116>>2]=g;g=J[h+20>>2];J[f+104>>2]=J[h+16>>2];J[f+108>>2]=g;g=J[h+44>>2];J[f+128>>2]=J[h+40>>2];J[f+132>>2]=g;g=J[h+36>>2];J[f+120>>2]=J[h+32>>2];J[f+124>>2]=g;g=J[h+60>>2];J[f+144>>2]=J[h+56>>2];J[f+148>>2]=g;g=J[h+52>>2];J[f+136>>2]=J[h+48>>2];J[f+140>>2]=g;if(P){ia[J[J[d>>2]+132>>2]](f+24|0,d,J[a+24>>2]);r=N[f+944>>2];m=N[f+948>>2];l=N[f+952>>2];T=N[f+80>>2];y=N[f+72>>2];W=N[f+76>>2];z=N[f+904>>2];A=N[f+896>>2];B=N[f+900>>2];S=N[f+920>>2];D=N[f+912>>2];E=N[f+916>>2];V=N[f+56>>2];L=N[f+24>>2];M=N[f+40>>2];U=N[f+60>>2];x=N[f+28>>2];u=N[f+44>>2];F=N[f+936>>2];q=N[f+64>>2];G=N[f+928>>2];o=N[f+32>>2];I=N[f+932>>2];p=N[f+48>>2];J[f+212>>2]=0;J[f+196>>2]=0;J[f+180>>2]=0;J[f+164>>2]=0;N[f+192>>2]=Q(q*F)+Q(Q(o*G)+Q(p*I));N[f+188>>2]=Q(U*F)+Q(Q(x*G)+Q(u*I));N[f+184>>2]=Q(V*F)+Q(Q(L*G)+Q(M*I));N[f+176>>2]=Q(q*S)+Q(Q(o*D)+Q(p*E));N[f+172>>2]=Q(U*S)+Q(Q(x*D)+Q(u*E));N[f+168>>2]=Q(V*S)+Q(Q(L*D)+Q(M*E));N[f+160>>2]=Q(q*z)+Q(Q(o*A)+Q(B*p));N[f+156>>2]=Q(U*z)+Q(Q(x*A)+Q(B*u));N[f+152>>2]=Q(V*z)+Q(Q(L*A)+Q(M*B));N[f+208>>2]=l+Q(Q(T*F)+Q(Q(y*G)+Q(I*W)));N[f+204>>2]=m+Q(Q(T*S)+Q(Q(y*D)+Q(E*W)));N[f+200>>2]=r+Q(Q(T*z)+Q(Q(y*A)+Q(B*W)))}if(t){ia[J[J[e>>2]+132>>2]](f+24|0,e,J[a+32>>2]);r=N[f+880>>2];m=N[f+884>>2];l=N[f+888>>2];T=N[f+80>>2];y=N[f+72>>2];W=N[f+76>>2];z=N[f+840>>2];A=N[f+832>>2];B=N[f+836>>2];S=N[f+856>>2];D=N[f+848>>2];E=N[f+852>>2];V=N[f+56>>2];L=N[f+24>>2];M=N[f+40>>2];U=N[f+60>>2];x=N[f+28>>2];u=N[f+44>>2];F=N[f+872>>2];q=N[f+64>>2];G=N[f+864>>2];o=N[f+32>>2];I=N[f+868>>2];p=N[f+48>>2];J[f+148>>2]=0;J[f+132>>2]=0;J[f+116>>2]=0;J[f+100>>2]=0;N[f+128>>2]=Q(q*F)+Q(Q(o*G)+Q(p*I));N[f+124>>2]=Q(U*F)+Q(Q(x*G)+Q(u*I));N[f+120>>2]=Q(V*F)+Q(Q(L*G)+Q(M*I));N[f+112>>2]=Q(q*S)+Q(Q(o*D)+Q(p*E));N[f+108>>2]=Q(U*S)+Q(Q(x*D)+Q(u*E));N[f+104>>2]=Q(V*S)+Q(Q(L*D)+Q(M*E));N[f+96>>2]=Q(q*z)+Q(Q(o*A)+Q(B*p));N[f+92>>2]=Q(U*z)+Q(Q(x*A)+Q(B*u));N[f+88>>2]=Q(V*z)+Q(Q(L*A)+Q(M*B));N[f+144>>2]=l+Q(Q(T*F)+Q(Q(y*G)+Q(I*W)));N[f+140>>2]=m+Q(Q(T*S)+Q(Q(y*D)+Q(E*W)));N[f+136>>2]=r+Q(Q(T*z)+Q(Q(y*A)+Q(B*W)))}j=J[a+28>>2];h=J[a+24>>2];g=J[b+8>>2];J[f+28>>2]=X;J[f+32>>2]=g;J[f+24>>2]=b;J[f+40>>2]=lI(h,j);J[f+44>>2]=ha;J[f+36>>2]=f+152;j=J[a+36>>2];h=J[a+32>>2];g=J[c+8>>2];J[f+4>>2]=O;J[f+8>>2]=g;J[f>>2]=c;J[f+16>>2]=lI(h,j);J[f+20>>2]=ha;J[f+12>>2]=f+88;s=ga-48|0;ga=s;g=J[a+16>>2];ia[J[J[g>>2]+8>>2]](g,J[a+28>>2],J[a+24>>2]);g=J[a+16>>2];ia[J[J[g>>2]+12>>2]](g,J[a+36>>2],J[a+32>>2]);j=J[a+28>>2];h=J[a+24>>2];g=J[f+36>>2];fa=J[f+32>>2];J[s+28>>2]=X;J[s+32>>2]=fa;J[s+36>>2]=g;J[s+24>>2]=f+24;J[s+40>>2]=lI(h,j);J[s+44>>2]=ha;j=J[a+36>>2];h=J[a+32>>2];g=J[f+12>>2];X=J[f+8>>2];J[s+4>>2]=O;J[s+8>>2]=X;J[s+12>>2]=g;J[s>>2]=f;J[s+16>>2]=lI(h,j);J[s+20>>2]=ha;h=J[a+8>>2];if(!h){h=J[a+12>>2];if(!h){g=J[a+4>>2];h=ia[J[J[g>>2]+12>>2]](g,fa,X)|0;J[a+12>>2]=h}J[J[a+16>>2]+4>>2]=h;g=J[a+4>>2];h=ia[J[J[g>>2]+8>>2]](g,s+24|0,s,h)|0;J[a+8>>2]=h}ia[J[J[h>>2]+8>>2]](h,s+24|0,s,J[a+20>>2],J[a+16>>2]);ga=s+48|0;if(w){continue}break}}ia[J[J[d>>2]+116>>2]](d);ia[J[J[e>>2]+116>>2]](e);Qa(f+324|0);Qa(f+216|4);Qa(f+620|0);Qa(f+512|4)}a=J[f+820>>2];if(!a|!K[f+824|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}ga=f+960|0}function yB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=0,$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0,ea=0,fa=Q(0),ha=Q(0),ia=Q(0),ja=Q(0);f=ga-464|0;ga=f;a:{if(!K[a+527|0]){break a}h=J[a+32>>2];l=J[a+28>>2];if(!K[a+524|0]){n=Q(N[b+192>>2]+N[b+80>>2]);e=N[a+356>>2];g=N[a+348>>2];i=N[a+352>>2];j=N[l+56>>2];q=Q(Q(Q(e*N[l+28>>2])+Q(Q(g*N[l+20>>2])+Q(i*N[l+24>>2])))+j);k=Q(q-j);j=N[l+52>>2];u=Q(Q(Q(e*N[l+12>>2])+Q(Q(g*N[l+4>>2])+Q(i*N[l+8>>2])))+j);o=Q(u-j);v=Q(N[b+196>>2]+N[b+84>>2]);y=Q(N[c+192>>2]+N[c+80>>2]);j=N[a+420>>2];s=N[a+412>>2];m=N[a+416>>2];p=N[h+56>>2];z=Q(Q(Q(j*N[h+28>>2])+Q(Q(s*N[h+20>>2])+Q(m*N[h+24>>2])))+p);p=Q(z-p);t=N[h+52>>2];w=Q(Q(Q(j*N[h+12>>2])+Q(Q(s*N[h+4>>2])+Q(m*N[h+8>>2])))+t);t=Q(w-t);B=Q(N[c+196>>2]+N[c+84>>2]);C=Q(Q(Q(N[b+184>>2]+N[b+72>>2])+Q(Q(n*k)-Q(o*v)))-Q(Q(N[c+184>>2]+N[c+72>>2])+Q(Q(y*p)-Q(t*B))));E=Q(N[b+200>>2]+N[b+88>>2]);g=Q(Q(e*N[l+44>>2])+Q(Q(g*N[l+36>>2])+Q(i*N[l+40>>2])));e=N[l+60>>2];g=Q(g+e);r=Q(g-e);e=Q(N[c+200>>2]+N[c+88>>2]);i=N[h+60>>2];j=Q(Q(Q(j*N[h+44>>2])+Q(Q(s*N[h+36>>2])+Q(m*N[h+40>>2])))+i);s=Q(j-i);y=Q(Q(Q(N[b+180>>2]+N[b+68>>2])+Q(Q(E*o)-Q(r*n)))-Q(Q(N[c+180>>2]+N[c+68>>2])+Q(Q(e*t)-Q(s*y))));v=Q(Q(Q(N[b+176>>2]+N[b+64>>2])+Q(Q(v*r)-Q(k*E)))-Q(Q(N[c+176>>2]+N[c+64>>2])+Q(Q(B*s)-Q(p*e))));B=Q(g-j);z=Q(q-z);u=Q(u-w);w=Q(-p);E=Q(-t);O=Q(-s);R=Q(-k);Z=Q(-o);M=Q(-r);da=J[c+240>>2];ea=J[b+240>>2];while(1){x=P(_,84)+a|0;g=N[x+56>>2];i=N[x+48>>2];j=N[x+52>>2];e=Q(Q(1)/N[x+128>>2]);e=Q(Q(Q(Q(Q(Q(B*g)+Q(Q(u*i)+Q(z*j)))*Q(-.30000001192092896))/d)*e)-Q(e*Q(Q(g*C)+Q(Q(i*v)+Q(y*j)))));N[a+36>>2]=N[a+36>>2]+e;if(ea){W=N[l+304>>2];X=N[l+296>>2];F=N[l+300>>2];G=N[l+288>>2];H=N[l+280>>2];A=N[l+284>>2];n=N[l+272>>2];q=N[l+264>>2];D=N[l+268>>2];m=N[l+344>>2];N[b+64>>2]=Q(Q(Q(i*m)*e)*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(Q(Q(j*m)*e)*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(Q(g*m)*e)*N[b+120>>2])+N[b+72>>2];m=Q(Q(o*j)+Q(i*R));I=Q(n*m);n=Q(Q(k*g)+Q(j*M));L=Q(q*n);q=Q(Q(r*i)+Q(g*Z));N[b+80>>2]=Q(Q(I+Q(L+Q(D*q)))*Q(e*N[b+96>>2]))+N[b+80>>2];D=N[b+104>>2];N[b+84>>2]=Q(Q(Q(G*m)+Q(Q(H*n)+Q(q*A)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(W*m)+Q(Q(X*n)+Q(q*F)))*Q(e*D))+N[b+88>>2]}if(da){n=N[h+304>>2];q=N[h+296>>2];W=N[h+300>>2];X=N[h+288>>2];F=N[h+280>>2];G=N[h+284>>2];H=N[h+272>>2];A=N[h+264>>2];D=N[h+268>>2];I=N[x+56>>2];L=N[x+52>>2];m=N[h+344>>2];e=Q(-e);N[c+64>>2]=Q(N[c+112>>2]*Q(Q(m*N[x+48>>2])*e))+N[c+64>>2];N[c+68>>2]=Q(Q(Q(m*L)*e)*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(Q(Q(m*I)*e)*N[c+120>>2])+N[c+72>>2];m=Q(Q(t*j)+Q(i*w));j=Q(Q(p*g)+Q(j*O));g=Q(Q(s*i)+Q(g*E));N[c+80>>2]=Q(Q(Q(H*m)+Q(Q(A*j)+Q(D*g)))*Q(N[c+96>>2]*e))+N[c+80>>2];i=N[c+104>>2];N[c+84>>2]=Q(Q(Q(X*m)+Q(Q(F*j)+Q(g*G)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(n*m)+Q(Q(q*j)+Q(g*W)))*Q(i*e))+N[c+88>>2]}_=_+1|0;if((_|0)!=3){continue}break}}b:{if(K[a+552|0]){x=J[l+16>>2];J[f+384>>2]=J[l+12>>2];J[f+388>>2]=x;x=J[l+8>>2];J[f+376>>2]=J[l+4>>2];J[f+380>>2]=x;x=J[l+32>>2];J[f+400>>2]=J[l+28>>2];J[f+404>>2]=x;x=J[l+24>>2];J[f+392>>2]=J[l+20>>2];J[f+396>>2]=x;x=J[l+48>>2];J[f+416>>2]=J[l+44>>2];J[f+420>>2]=x;x=J[l+40>>2];J[f+408>>2]=J[l+36>>2];J[f+412>>2]=x;x=J[l+64>>2];J[f+432>>2]=J[l+60>>2];J[f+436>>2]=x;x=J[l+56>>2];J[f+424>>2]=J[l+52>>2];J[f+428>>2]=x;l=J[h+16>>2];J[f+320>>2]=J[h+12>>2];J[f+324>>2]=l;l=J[h+8>>2];J[f+312>>2]=J[h+4>>2];J[f+316>>2]=l;l=J[h+32>>2];J[f+336>>2]=J[h+28>>2];J[f+340>>2]=l;l=J[h+24>>2];J[f+328>>2]=J[h+20>>2];J[f+332>>2]=l;l=J[h+48>>2];J[f+352>>2]=J[h+44>>2];J[f+356>>2]=l;l=J[h+40>>2];J[f+344>>2]=J[h+36>>2];J[f+348>>2]=l;l=J[h+64>>2];J[f+368>>2]=J[h+60>>2];J[f+372>>2]=l;l=J[h+56>>2];J[f+360>>2]=J[h+52>>2];J[f+364>>2]=l;e=N[b+84>>2];g=N[b+196>>2];i=N[b+88>>2];j=N[b+200>>2];k=N[b+80>>2];o=N[b+192>>2];J[f+308>>2]=0;N[f+304>>2]=j+i;N[f+300>>2]=g+e;N[f+296>>2]=o+k;e=N[c+84>>2];g=N[c+196>>2];i=N[c+88>>2];j=N[c+200>>2];k=N[c+80>>2];o=N[c+192>>2];J[f+292>>2]=0;N[f+288>>2]=j+i;N[f+284>>2]=g+e;N[f+280>>2]=o+k;J[f+228>>2]=0;J[f+232>>2]=0;J[f+240>>2]=0;J[f+244>>2]=0;J[f+236>>2]=1065353216;J[f+248>>2]=0;J[f+252>>2]=0;J[f+260>>2]=0;J[f+264>>2]=0;J[f+256>>2]=1065353216;J[f+268>>2]=0;J[f+272>>2]=0;J[f+276>>2]=0;J[f+220>>2]=0;J[f+224>>2]=0;J[f+216>>2]=1065353216;J[f+208>>2]=0;J[f+212>>2]=0;J[f+200>>2]=0;J[f+204>>2]=0;h=f+376|0;l=f+200|0;Rb(h,l,f+296|0,d,f+216|0);J[f+148>>2]=0;J[f+152>>2]=0;J[f+160>>2]=0;J[f+164>>2]=0;J[f+156>>2]=1065353216;J[f+168>>2]=0;J[f+172>>2]=0;J[f+180>>2]=0;J[f+184>>2]=0;J[f+176>>2]=1065353216;J[f+188>>2]=0;J[f+192>>2]=0;J[f+196>>2]=0;J[f+140>>2]=0;J[f+144>>2]=0;J[f+136>>2]=1065353216;x=f+312|0;Rb(x,l,f+280|0,d,f+136|0);j=N[a+308>>2];n=N[a+304>>2];o=N[a+324>>2];r=N[a+316>>2];s=N[a+320>>2];m=N[a+404>>2];q=N[a+400>>2];u=N[a+396>>2];v=N[a+372>>2];y=N[a+368>>2];z=N[a+340>>2];w=N[a+332>>2];B=N[a+336>>2];C=N[a+388>>2];E=N[a+384>>2];O=N[a+380>>2];g=N[a+568>>2];k=N[a+564>>2];i=N[a+560>>2];fa=N[a+420>>2];ha=N[a+412>>2];ia=N[a+416>>2];R=N[a+300>>2];W=N[a+356>>2];ja=N[a+348>>2];X=N[a+352>>2];Z=N[a+364>>2];e=N[a+556>>2];J[f+132>>2]=0;J[f+116>>2]=0;J[f+100>>2]=0;p=Q(Q(2)/Q(Q(g*g)+Q(Q(k*k)+Q(Q(e*e)+Q(i*i)))));F=Q(e*p);H=Q(e*F);t=Q(i*p);G=Q(i*t);M=Q(Q(1)-Q(H+G));p=Q(k*p);A=Q(e*p);D=Q(g*t);S=Q(A+D);I=Q(i*p);L=Q(g*F);i=Q(I-L);F=Q(Q(m*M)+Q(Q(u*S)+Q(q*i)));T=Q(A-D);A=Q(k*p);k=Q(Q(1)-Q(G+A));e=Q(e*t);g=Q(g*p);p=Q(e+g);G=Q(Q(m*T)+Q(Q(u*k)+Q(q*p)));t=Q(I+L);U=Q(e-g);V=Q(Q(1)-Q(H+A));H=Q(Q(m*t)+Q(Q(u*U)+Q(q*V)));e=Q(Q(z*F)+Q(Q(w*G)+Q(B*H)));A=N[f+176>>2];D=Q(Q(M*v)+Q(Q(S*Z)+Q(y*i)));I=Q(Q(T*v)+Q(Q(k*Z)+Q(y*p)));L=Q(Q(t*v)+Q(Q(U*Z)+Q(y*V)));g=Q(Q(z*D)+Q(Q(w*I)+Q(B*L)));$=N[f+168>>2];S=Q(Q(M*C)+Q(Q(S*O)+Q(E*i)));T=Q(Q(T*C)+Q(Q(k*O)+Q(E*p)));U=Q(Q(t*C)+Q(Q(U*O)+Q(E*V)));i=Q(Q(z*S)+Q(Q(w*T)+Q(B*U)));V=N[f+172>>2];N[f+112>>2]=Q(e*A)+Q(Q(g*$)+Q(i*V));k=Q(Q(o*F)+Q(Q(r*G)+Q(H*s)));p=Q(Q(o*D)+Q(Q(r*I)+Q(L*s)));t=Q(Q(o*S)+Q(Q(r*T)+Q(U*s)));N[f+108>>2]=Q(A*k)+Q(Q($*p)+Q(V*t));aa=N[f+160>>2];ba=N[f+152>>2];ca=N[f+156>>2];N[f+96>>2]=Q(e*aa)+Q(Q(g*ba)+Q(i*ca));N[f+92>>2]=Q(k*aa)+Q(Q(p*ba)+Q(t*ca));M=Q(0);q=Q(fa+Q(Q(m*Q(0))+Q(Q(u*Q(0))+Q(q*Q(0)))));m=Q(-ja);o=Q(Q(Q(j*m)-Q(o*X))-Q(z*W));r=Q(Q(Q(R*m)-Q(r*X))-Q(w*W));m=Q(Q(Q(n*m)-Q(s*X))-Q(B*W));s=Q(q+Q(Q(o*F)+Q(Q(r*G)+Q(H*m))));q=Q(Q(ha+Q(Q(v*Q(0))+Q(Q(Z*Q(0))+Q(y*Q(0)))))+Q(Q(o*D)+Q(Q(r*I)+Q(L*m))));m=Q(Q(ia+Q(Q(C*Q(0))+Q(Q(O*Q(0))+Q(E*Q(0)))))+Q(Q(o*S)+Q(Q(r*T)+Q(U*m))));E=Q(Q(Q(A*s)+Q(Q($*q)+Q(V*m)))+N[f+192>>2]);N[f+128>>2]=E;O=Q(Q(Q(s*aa)+Q(Q(q*ba)+Q(m*ca)))+N[f+188>>2]);N[f+124>>2]=O;J[f+84>>2]=0;r=Q(Q(j*F)+Q(Q(R*G)+Q(H*n)));o=Q(Q(j*D)+Q(Q(R*I)+Q(L*n)));j=Q(Q(j*S)+Q(Q(R*T)+Q(U*n)));N[f+104>>2]=Q(A*r)+Q(Q($*o)+Q(V*j));N[f+88>>2]=Q(r*aa)+Q(Q(o*ba)+Q(j*ca));n=N[f+144>>2];u=N[f+136>>2];v=N[f+140>>2];N[f+80>>2]=Q(e*n)+Q(Q(g*u)+Q(i*v));N[f+76>>2]=Q(k*n)+Q(Q(p*u)+Q(t*v));N[f+72>>2]=Q(r*n)+Q(Q(o*u)+Q(j*v));R=Q(Q(Q(s*n)+Q(Q(q*u)+Q(v*m)))+N[f+184>>2]);N[f+120>>2]=R;J[f+68>>2]=0;J[f+52>>2]=0;J[f+36>>2]=0;n=N[f+256>>2];u=N[f+248>>2];v=N[f+252>>2];N[f+48>>2]=Q(e*n)+Q(Q(r*u)+Q(k*v));N[f+44>>2]=Q(i*n)+Q(Q(j*u)+Q(t*v));y=N[f+240>>2];z=N[f+232>>2];w=N[f+236>>2];N[f+32>>2]=Q(e*y)+Q(Q(r*z)+Q(k*w));N[f+28>>2]=Q(i*y)+Q(Q(j*z)+Q(t*w));q=Q(-q);B=Q(Q(Q(g*q)-Q(i*m))-Q(e*s));C=Q(Q(Q(o*q)-Q(j*m))-Q(r*s));s=Q(Q(Q(p*q)-Q(t*m))-Q(k*s));m=Q(Q(Q(n*B)+Q(Q(u*C)+Q(v*s)))+N[f+272>>2]);N[f- -64>>2]=m;q=Q(Q(Q(B*y)+Q(Q(C*z)+Q(s*w)))+N[f+268>>2]);N[f+60>>2]=q;J[f+20>>2]=0;N[f+40>>2]=Q(g*n)+Q(Q(o*u)+Q(p*v));N[f+24>>2]=Q(g*y)+Q(Q(o*z)+Q(p*w));w=e;e=N[f+224>>2];A=r;r=N[f+216>>2];n=k;k=N[f+220>>2];N[f+16>>2]=Q(w*e)+Q(Q(A*r)+Q(n*k));N[f+12>>2]=Q(i*e)+Q(Q(j*r)+Q(t*k));N[f+8>>2]=Q(g*e)+Q(Q(o*r)+Q(p*k));g=Q(Q(Q(B*e)+Q(Q(C*r)+Q(s*k)))+N[f+264>>2]);N[f+56>>2]=g;e=Q(Q(1)/d);N[f+208>>2]=e*Q(E-N[f+432>>2]);J[f+212>>2]=0;N[f+200>>2]=e*Q(R-N[f+424>>2]);N[f+204>>2]=e*Q(O-N[f+428>>2]);_=h;h=f+448|0;l=f+444|0;hc(_,f+72|0,h,l);N[f+208>>2]=e*Q(m-N[f+368>>2]);J[f+212>>2]=0;N[f+204>>2]=e*Q(q-N[f+364>>2]);N[f+200>>2]=e*Q(g-N[f+360>>2]);p=N[f+452>>2];g=N[f+444>>2];m=N[f+456>>2];n=N[f+448>>2];hc(x,f+8|0,h,l);i=N[f+444>>2];t=Q(Q(e*Q(i*N[f+456>>2]))-N[f+288>>2]);r=Q(Q(e*Q(i*N[f+452>>2]))-N[f+284>>2]);s=Q(Q(e*Q(N[f+448>>2]*i))-N[f+280>>2]);i=Q(0);m=Q(Q(e*Q(g*m))-N[f+304>>2]);n=Q(Q(e*Q(n*g))-N[f+296>>2]);q=Q(Q(e*Q(g*p))-N[f+300>>2]);e=Q(Q(m*m)+Q(Q(n*n)+Q(q*q)));if(e>Q(1.1920928955078125e-7)){e=Q(Q(1)/Q(Y(e)));j=Q(m*e);h=J[a+28>>2];k=Q(n*e);o=Q(q*e);i=Q(Q(j*Q(Q(j*N[h+304>>2])+Q(Q(N[h+272>>2]*k)+Q(o*N[h+288>>2]))))+Q(Q(k*Q(Q(N[h+296>>2]*j)+Q(Q(k*N[h+264>>2])+Q(o*N[h+280>>2]))))+Q(o*Q(Q(N[h+300>>2]*j)+Q(Q(N[h+268>>2]*k)+Q(o*N[h+284>>2]))))))}u=Q(Q(t*t)+Q(Q(s*s)+Q(r*r)));if(u>Q(1.1920928955078125e-7)){g=Q(Q(1)/Q(Y(u)));p=Q(t*g);h=J[a+32>>2];e=Q(s*g);g=Q(r*g);M=Q(Q(p*Q(Q(p*N[h+304>>2])+Q(Q(N[h+272>>2]*e)+Q(g*N[h+288>>2]))))+Q(Q(e*Q(Q(N[h+296>>2]*p)+Q(Q(e*N[h+264>>2])+Q(g*N[h+280>>2]))))+Q(g*Q(Q(N[h+300>>2]*p)+Q(Q(N[h+268>>2]*e)+Q(g*N[h+284>>2]))))))}j=Q(Q(i*j)+Q(M*p));k=Q(Q(i*k)+Q(M*e));i=Q(Q(i*o)+Q(M*g));e=Q(Q(j*j)+Q(Q(k*k)+Q(i*i)));if(!(e>Q(1.1920928955078125e-7))){break b}g=j;j=Q(Q(1)/Q(Y(e)));e=Q(g*j);h=J[a+28>>2];g=Q(k*j);i=Q(i*j);o=Q(Q(e*Q(Q(e*N[h+304>>2])+Q(Q(N[h+272>>2]*g)+Q(i*N[h+288>>2]))))+Q(Q(g*Q(Q(N[h+296>>2]*e)+Q(Q(g*N[h+264>>2])+Q(i*N[h+280>>2]))))+Q(i*Q(Q(N[h+300>>2]*e)+Q(Q(N[h+268>>2]*g)+Q(i*N[h+284>>2]))))));l=J[a+32>>2];g=Q(Q(e*Q(Q(e*N[l+304>>2])+Q(Q(N[l+272>>2]*g)+Q(i*N[l+288>>2]))))+Q(Q(g*Q(Q(N[l+296>>2]*e)+Q(Q(g*N[l+264>>2])+Q(i*N[l+280>>2]))))+Q(i*Q(Q(N[l+300>>2]*e)+Q(Q(N[l+268>>2]*g)+Q(i*N[l+284>>2]))))));e=Q(o+g);j=Q(Q(1)/Q(e*e));e=Q(Q(Q(m*o)-Q(t*g))*j);i=Q(Q(Q(q*o)-Q(r*g))*j);g=Q(Q(Q(n*o)-Q(s*g))*j);m=N[a+572>>2];if(m>=Q(0)){t=N[a+584>>2];j=Q(e+t);r=N[a+576>>2];k=Q(g+r);s=N[a+580>>2];p=Q(i+s);n=Q(Y(Q(Q(j*j)+Q(Q(k*k)+Q(p*p)))));o=Q(m/(K[a+553|0]?o:Q(1)));if(n>o){g=Q(Q(1)/n);e=Q(Q(o*Q(j*g))-t);j=Q(t+e);i=Q(Q(o*Q(p*g))-s);p=Q(s+i);g=Q(Q(o*Q(k*g))-r);k=Q(r+g)}N[a+584>>2]=j;N[a+580>>2]=p;N[a+576>>2]=k}j=e;e=Q(Y(Q(Q(e*e)+Q(Q(g*g)+Q(i*i)))));k=Q(Q(1)/e);j=Q(j*k);i=Q(i*k);g=Q(g*k);if(J[b+240>>2]){o=N[h+304>>2];p=N[h+296>>2];t=N[h+300>>2];r=N[h+288>>2];s=N[h+280>>2];m=N[h+284>>2];n=N[h+272>>2];q=N[h+264>>2];u=N[h+268>>2];k=Q(e*Q(0));N[b+64>>2]=Q(k*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(k*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(k*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(n*j)+Q(Q(q*g)+Q(i*u)))*Q(e*N[b+96>>2]))+N[b+80>>2];k=N[b+104>>2];N[b+84>>2]=Q(Q(Q(r*j)+Q(Q(s*g)+Q(i*m)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(o*j)+Q(Q(p*g)+Q(i*t)))*Q(e*k))+N[b+88>>2]}if(!J[c+240>>2]){break b}o=N[l+304>>2];p=N[l+296>>2];t=N[l+300>>2];r=N[l+288>>2];s=N[l+280>>2];m=N[l+284>>2];n=N[l+272>>2];q=N[l+264>>2];u=N[l+268>>2];k=Q(e*Q(-0));N[c+64>>2]=Q(k*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(k*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(k*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(n*j)+Q(Q(q*g)+Q(i*u)))*Q(N[c+96>>2]*e))+N[c+80>>2];k=N[c+104>>2];N[c+84>>2]=Q(Q(Q(r*j)+Q(Q(s*g)+Q(i*m)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(o*j)+Q(Q(p*g)+Q(i*t)))*Q(k*e))+N[c+88>>2];break b}g=N[a+440>>2];if(!(g>Q(1.1920928955078125e-7))){break b}o=N[b+88>>2];e=Q(Q(N[c+200>>2]+N[c+88>>2])-Q(N[b+200>>2]+o));p=N[b+80>>2];j=Q(Q(N[c+192>>2]+N[c+80>>2])-Q(N[b+192>>2]+p));t=N[b+84>>2];k=Q(Q(N[c+196>>2]+N[c+84>>2])-Q(N[b+196>>2]+t));i=Q(Q(e*e)+Q(Q(j*j)+Q(k*k)));if(!(i>Q(1.1920928955078125e-7))){break b}w=e;A=g;i=Q(Q(1)/Q(Y(i)));e=Q(e*i);r=N[l+304>>2];s=N[l+272>>2];g=Q(j*i);i=Q(k*i);m=N[l+288>>2];n=N[l+296>>2];q=N[l+264>>2];u=N[l+280>>2];v=N[l+300>>2];y=N[l+268>>2];z=N[l+284>>2];e=Q(A*Q(Q(1)/Q(Q(Q(e*Q(Q(e*r)+Q(Q(s*g)+Q(i*m))))+Q(Q(g*Q(Q(n*e)+Q(Q(g*q)+Q(i*u))))+Q(i*Q(Q(v*e)+Q(Q(y*g)+Q(i*z))))))+Q(Q(e*Q(Q(e*N[h+304>>2])+Q(Q(N[h+272>>2]*g)+Q(i*N[h+288>>2]))))+Q(Q(g*Q(Q(N[h+296>>2]*e)+Q(Q(g*N[h+264>>2])+Q(i*N[h+280>>2]))))+Q(i*Q(Q(N[h+300>>2]*e)+Q(Q(N[h+268>>2]*g)+Q(i*N[h+284>>2])))))))));g=Q(w*e);j=Q(j*e);i=Q(k*e);e=Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(i*i)))));k=Q(Q(1)/e);g=Q(g*k);i=Q(i*k);j=Q(j*k);if(J[b+240>>2]){k=Q(e*Q(0));N[b+64>>2]=Q(k*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(k*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(k*N[b+120>>2])+N[b+72>>2];N[b+88>>2]=o+Q(Q(Q(r*g)+Q(Q(n*j)+Q(i*v)))*Q(e*N[b+104>>2]));N[b+84>>2]=t+Q(Q(Q(m*g)+Q(Q(u*j)+Q(i*z)))*Q(e*N[b+100>>2]));N[b+80>>2]=p+Q(Q(Q(s*g)+Q(Q(q*j)+Q(i*y)))*Q(e*N[b+96>>2]))}if(!J[c+240>>2]){break b}o=N[h+304>>2];p=N[h+296>>2];t=N[h+300>>2];r=N[h+288>>2];s=N[h+280>>2];m=N[h+284>>2];n=N[h+272>>2];q=N[h+264>>2];u=N[h+268>>2];k=Q(e*Q(-0));N[c+64>>2]=Q(k*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(k*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(k*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(N[c+96>>2]*e))+N[c+80>>2];k=N[c+104>>2];N[c+84>>2]=Q(Q(Q(r*g)+Q(Q(s*j)+Q(i*m)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(o*g)+Q(Q(p*j)+Q(i*t)))*Q(k*e))+N[c+88>>2]}k=Q(N[c+200>>2]+N[c+88>>2]);o=Q(N[c+196>>2]+N[c+84>>2]);p=Q(N[b+200>>2]+N[b+88>>2]);t=Q(N[b+196>>2]+N[b+84>>2]);r=Q(N[c+192>>2]+N[c+80>>2]);s=Q(N[b+192>>2]+N[b+80>>2]);c:{if(!K[a+526|0]){break c}g=N[a+528>>2];e=Q(Q(Q(g*N[a+504>>2])*N[a+432>>2])/d);i=N[a+516>>2];w=g;g=N[a+468>>2];j=N[a+460>>2];m=N[a+464>>2];n=Q(Q(Q(k-p)*g)+Q(Q(Q(r-s)*j)+Q(Q(o-t)*m)));e=Q(i+Q(N[a+492>>2]*(n>Q(0)?Q(Q(Q(w*n)*N[a+436>>2])+e):e)));e=e>Q(0)?e:Q(0);N[a+516>>2]=e;e=Q(e-i);g=Q(g*e);i=N[a+544>>2];j=Q(j*e);n=N[a+536>>2];q=N[a+540>>2];u=Q(m*e);e=Q(Q(g*i)+Q(Q(j*n)+Q(q*u)));g=Q(g-Q(i*e));m=Q(j-Q(n*e));i=Q(u-Q(q*e));e=Q(Y(Q(Q(g*g)+Q(Q(m*m)+Q(i*i)))));j=Q(Q(1)/e);g=Q(g*j);i=Q(i*j);j=Q(m*j);if(J[b+240>>2]){h=J[a+28>>2];n=N[h+304>>2];q=N[h+296>>2];u=N[h+300>>2];v=N[h+288>>2];y=N[h+280>>2];z=N[h+284>>2];w=N[h+272>>2];B=N[h+268>>2];C=N[h+264>>2];m=Q(e*Q(0));N[b+64>>2]=Q(m*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(m*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(m*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(w*g)+Q(Q(C*j)+Q(i*B)))*Q(e*N[b+96>>2]))+N[b+80>>2];m=N[b+104>>2];N[b+84>>2]=Q(Q(Q(v*g)+Q(Q(y*j)+Q(i*z)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(e*m))+N[b+88>>2]}if(!J[c+240>>2]){break c}h=J[a+32>>2];n=N[h+304>>2];q=N[h+296>>2];u=N[h+300>>2];v=N[h+288>>2];y=N[h+280>>2];z=N[h+284>>2];w=N[h+272>>2];B=N[h+268>>2];C=N[h+264>>2];m=Q(e*Q(-0));N[c+64>>2]=Q(m*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(m*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(m*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(w*g)+Q(Q(C*j)+Q(i*B)))*Q(N[c+96>>2]*e))+N[c+80>>2];m=N[c+104>>2];N[c+84>>2]=Q(Q(Q(v*g)+Q(Q(y*j)+Q(i*z)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(m*e))+N[c+88>>2]}if(!K[a+525|0]){break a}e=N[a+532>>2];d=Q(Q(Q(e*N[a+508>>2])*N[a+432>>2])/d);j=N[a+520>>2];w=e;e=N[a+484>>2];i=N[a+476>>2];g=N[a+480>>2];k=Q(Q(Q(k-p)*e)+Q(Q(Q(r-s)*i)+Q(Q(o-t)*g)));d=Q(j+Q(N[a+496>>2]*(k>Q(0)?Q(Q(Q(w*k)*N[a+436>>2])+d):d)));d=d>Q(0)?d:Q(0);N[a+520>>2]=d;d=Q(d-j);if(J[b+240>>2]){h=J[a+28>>2];k=N[h+304>>2];o=N[h+296>>2];p=N[h+300>>2];t=N[h+288>>2];r=N[h+280>>2];s=N[h+284>>2];m=N[h+272>>2];n=N[h+268>>2];q=N[h+264>>2];j=Q(d*Q(0));N[b+64>>2]=Q(j*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(j*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(j*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(m*e)+Q(Q(q*i)+Q(g*n)))*Q(d*N[b+96>>2]))+N[b+80>>2];j=N[b+104>>2];N[b+84>>2]=Q(Q(Q(t*e)+Q(Q(r*i)+Q(g*s)))*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(k*e)+Q(Q(o*i)+Q(g*p)))*Q(d*j))+N[b+88>>2];g=N[a+480>>2];i=N[a+476>>2];e=N[a+484>>2]}if(!J[c+240>>2]){break a}a=J[a+32>>2];k=N[a+304>>2];o=N[a+296>>2];p=N[a+300>>2];t=N[a+288>>2];r=N[a+280>>2];s=N[a+284>>2];m=N[a+272>>2];n=N[a+268>>2];q=N[a+264>>2];j=Q(d*Q(-0));N[c+64>>2]=Q(j*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(j*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(j*N[c+120>>2])+N[c+72>>2];d=Q(-d);N[c+80>>2]=Q(Q(Q(m*e)+Q(Q(q*i)+Q(g*n)))*Q(N[c+96>>2]*d))+N[c+80>>2];j=N[c+104>>2];N[c+84>>2]=Q(Q(Q(t*e)+Q(Q(r*i)+Q(g*s)))*Q(N[c+100>>2]*d))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(k*e)+Q(Q(o*i)+Q(g*p)))*Q(j*d))+N[c+88>>2]}ga=f+464|0}function xy(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=0,O=Q(0),S=0,T=0,U=Q(0),V=Q(0),W=Q(0),X=Q(0);d=J[a+24>>2];if((d|0)>0){while(1){a:{b:{e=J[J[a+32>>2]+(T<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}d=0;r=ga-144|0;ga=r;c:{if(!K[e+924|0]){break c}H[e+924|0]=0;g=J[e+732>>2];if((g|0)>0){m=J[e+740>>2];while(1){c=m+P(d,52)|0;v=J[c+8>>2];y=J[c+12>>2];f=Q(N[v+16>>2]-N[y+16>>2]);i=Q(f*f);f=Q(N[v+8>>2]-N[y+8>>2]);j=Q(f*f);f=Q(N[v+12>>2]-N[y+12>>2]);f=Q(Y(Q(i+Q(j+Q(f*f)))));N[c+16>>2]=f;N[c+28>>2]=f*f;d=d+1|0;if((g|0)!=(d|0)){continue}break}d=0;while(1){c=m+P(d,52)|0;N[c+24>>2]=Q(N[J[c+8>>2]+88>>2]+N[J[c+12>>2]+88>>2])/N[J[c+4>>2]+4>>2];d=d+1|0;if((g|0)!=(d|0)){continue}break}}kg(e);Fd(e+988|0);if(!(K[e+388|0]&16)){break c}kk(e)}f=Q(N[e+368>>2]*b);N[e+452>>2]=f;N[e+460>>2]=f*Q(3);N[e+456>>2]=Q(1)/f;d=J[e+192>>2];f=Q(ia[J[J[d>>2]+48>>2]](d));N[e+464>>2]=f;N[e+468>>2]=f*Q(.25);g=J[e+712>>2];if((g|0)>0){f=N[e+452>>2];d=J[e+684>>2];i=Q(f*N[d+48>>2]);k=Q(f*N[d+44>>2]);f=Q(N[d+40>>2]*f);m=J[e+720>>2];d=0;while(1){c=m+P(d,104)|0;if(N[c+88>>2]>Q(0)){N[c+40>>2]=f+N[c+40>>2];N[c+44>>2]=k+N[c+44>>2];N[c+48>>2]=i+N[c+48>>2]}d=d+1|0;if((g|0)!=(d|0)){continue}break}}d=0;k=Q(0);ya(2710);g=J[e+712>>2];n=N[e+312>>2];f=N[e+308>>2];d:{if(f==Q(0)){i=Q(0);if(!(n>Q(0))){break d}}if((g|0)<=0){i=Q(0)}else{y=J[e+752>>2];if((y|0)>0){c=J[e+720>>2];i=N[c+8>>2];o=N[c+16>>2];p=N[c+12>>2];C=J[e+760>>2];while(1){u=k;c=C+P(d,44)|0;m=J[c+8>>2];v=J[c+12>>2];k=Q(N[v+8>>2]-i);c=J[c+16>>2];j=Q(N[c+12>>2]-p);h=Q(N[c+8>>2]-i);l=Q(N[v+12>>2]-p);t=Q(Q(N[m+16>>2]-o)*Q(Q(k*j)-Q(h*l)));q=l;l=Q(N[c+16>>2]-o);s=j;j=Q(N[v+16>>2]-o);k=Q(u+Q(t+Q(Q(Q(N[m+8>>2]-i)*Q(Q(q*l)-Q(s*j)))+Q(Q(N[m+12>>2]-p)*Q(Q(j*h)-Q(l*k))))));d=d+1|0;if((y|0)!=(d|0)){continue}break}}i=Q(k/Q(6))}k=Q(f*Q(Q(1)/Q(R(i))));i=Q(n*Q(N[e+476>>2]-i))}e:{if((g|0)<=0){break e}m=N[e+304>>2]>Q(0)|N[e+300>>2]>Q(0);v=e+1212|0;if(f!=Q(0)){c=0;while(1){d=J[e+720>>2]+P(c,104)|0;f:{if(!(N[d+88>>2]>Q(0))){break f}if(m){te(e,v,c)}o=N[d+72>>2];p=N[d+92>>2];f=Q(k*p);j=Q(Q(o*f)+N[d+56>>2]);N[d+56>>2]=j;h=N[d+76>>2];l=Q(Q(f*h)+N[d+60>>2]);N[d+60>>2]=l;t=N[d+80>>2];y=d- -64|0;f=Q(Q(f*t)+N[y>>2]);N[y>>2]=f;if(!(n>Q(0))){break f}u=o;o=Q(i*p);N[d+56>>2]=Q(u*o)+j;N[d+60>>2]=Q(o*h)+l;N[y>>2]=Q(o*t)+f}c=c+1|0;if((g|0)!=(c|0)){continue}break}break e}if(n>Q(0)){c=0;while(1){d=J[e+720>>2]+P(c,104)|0;if(N[d+88>>2]>Q(0)){if(m){te(e,v,c)}f=Q(i*N[d+92>>2]);N[d+56>>2]=Q(N[d+72>>2]*f)+N[d+56>>2];N[d+60>>2]=Q(f*N[d+76>>2])+N[d+60>>2];y=d- -64|0;N[y>>2]=Q(f*N[d+80>>2])+N[y>>2]}c=c+1|0;if((g|0)!=(c|0)){continue}break}break e}if(!m){break e}d=0;while(1){if(N[(J[e+720>>2]+P(d,104)|0)+88>>2]>Q(0)){te(e,v,d)}d=d+1|0;if((g|0)!=(d|0)){continue}break}}M=J[e+752>>2];if((M|0)>0){y=e+1212|0;d=0;while(1){z=N[e+304>>2];A=N[e+300>>2];g:{if(!(z>Q(0)|A>Q(0))){break g}S=J[e+288>>2];if((S|0)<4){break g}C=J[e+760>>2];v=C+P(d,44)|0;m=J[v+8>>2];h=N[m+48>>2];c=J[v+12>>2];g=J[v+16>>2];f=Q(Q(Q(Q(h+N[c+48>>2])+N[g+48>>2])*Q(.3333333432674408))-N[y+8>>2]);l=N[m+40>>2];o=Q(Q(Q(Q(l+N[c+40>>2])+N[g+40>>2])*Q(.3333333432674408))-N[y>>2]);t=N[m+44>>2];p=Q(Q(Q(Q(t+N[c+44>>2])+N[g+44>>2])*Q(.3333333432674408))-N[y+4>>2]);x=Q(Q(f*f)+Q(Q(o*o)+Q(p*p)));if(!(x>Q(1.1920928955078125e-7))){break g}j=N[e+452>>2];B=N[J[e+684>>2]>>2];E=Q(Y(x));n=Q(Q(1)/E);i=Q(f*n);k=Q(p*n);n=Q(o*n);q=N[v+20>>2];s=N[v+28>>2];w=N[v+24>>2];h:{switch(S-4|0){case 1:f=Q(Q(s*f)+Q(Q(q*o)+Q(p*w)))<Q(0)?Q(-1):Q(1);s=Q(s*f);u=Q(q*f);w=Q(w*f);q=Q(Q(s*i)+Q(Q(u*n)+Q(k*w)));f=Q(Q(Q(A*Q(.5))*B)*x);x=Q(N[(C+P(d,44)|0)+36>>2]*Q(.5));f=Q(q*Q(f*x));A=Q(f*Q(-i));F=Q(f*Q(-k));G=Q(f*Q(-n));o=Q(0);p=Q(0);f=Q(0);i:{if(!(q>Q(0))){break i}f=Q(0);if(!(q<Q(.9847999811172485))){break i}o=Q(Q(w*i)-Q(k*s));s=Q(Q(s*n)-Q(i*u));f=Q(Q(Y(Q(Q(1)-Q(q*q))))*Q(Q(Q(Q(z*Q(.5))*B)*E)*x));p=Q(Q(Q(Q(o*k)-Q(n*s))*f)*Q(.3333333432674408));q=Q(Q(u*k)-Q(n*w));o=Q(Q(Q(Q(q*n)-Q(i*o))*f)*Q(.3333333432674408));f=Q(Q(Q(Q(s*i)-Q(k*q))*f)*Q(.3333333432674408))}i=Q(A*Q(.3333333432674408));k=Q(F*Q(.3333333432674408));n=Q(G*Q(.3333333432674408));q=N[m+88>>2];if(q>Q(0)){s=Q(Q(i*q)*j);u=Q(s*s);s=Q(Q(n*q)*j);j=Q(Q(k*q)*j);j=Q(u+Q(Q(s*s)+Q(j*j)));j:{if(!(j>Q(0))){break j}h=Q(Q(h*h)+Q(Q(l*l)+Q(t*t)));if(!(h<=j)){break j}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[m+56>>2]=f+Q(n+N[m+56>>2]);v=m- -64|0;N[v>>2]=p+Q(i+N[v>>2]);N[m+60>>2]=o+Q(k+N[m+60>>2])}j=N[c+88>>2];if(j>Q(0)){h=N[e+452>>2];l=Q(Q(i*j)*h);u=Q(l*l);l=Q(Q(n*j)*h);j=Q(Q(k*j)*h);j=Q(u+Q(Q(l*l)+Q(j*j)));k:{if(!(j>Q(0))){break k}h=N[c+48>>2];l=Q(h*h);h=N[c+40>>2];u=Q(h*h);h=N[c+44>>2];h=Q(l+Q(u+Q(h*h)));if(!(h<=j)){break k}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[c+56>>2]=f+Q(n+N[c+56>>2]);m=c- -64|0;N[m>>2]=p+Q(i+N[m>>2]);N[c+60>>2]=o+Q(k+N[c+60>>2])}j=N[g+88>>2];if(!(j>Q(0))){break g}h=N[e+452>>2];l=Q(Q(i*j)*h);u=Q(l*l);l=Q(Q(n*j)*h);j=Q(Q(k*j)*h);j=Q(u+Q(Q(l*l)+Q(j*j)));l:{if(!(j>Q(0))){break l}h=N[g+48>>2];l=Q(h*h);h=N[g+40>>2];u=Q(h*h);h=N[g+44>>2];h=Q(l+Q(u+Q(h*h)));if(!(h<=j)){break l}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[g+56>>2]=f+Q(n+N[g+56>>2]);c=g- -64|0;N[c>>2]=p+Q(i+N[c>>2]);N[g+60>>2]=o+Q(k+N[g+60>>2]);break g;case 0:case 2:break h;default:break g}}u=f;f=Q(Q(s*f)+Q(Q(q*o)+Q(p*w)))<Q(0)?Q(-1):Q(1);s=Q(s*f);q=Q(q*f);w=Q(w*f);f=Q(Q(u*s)+Q(Q(o*q)+Q(p*w)));if(!(f>Q(0))){break g}f=Q(B*Q(x*Q(f*Q(-N[(C+P(d,44)|0)+36>>2]))));o=Q(A*f);p=Q(z*f);f=Q(Q(Q(i*o)+Q(Q(s*p)+Q(0)))*Q(.3333333432674408));i=Q(Q(Q(n*o)+Q(Q(q*p)+Q(0)))*Q(.3333333432674408));k=Q(Q(Q(k*o)+Q(Q(w*p)+Q(0)))*Q(.3333333432674408));p=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(k*k))))));n=Q(f*p);o=Q(k*p);p=Q(i*p);q=Q(j*N[m+88>>2]);s=Q(f*q);u=Q(s*s);s=Q(i*q);w=Q(s*s);s=Q(k*q);m:{if(Q(u+Q(w+Q(s*s)))>Q(Q(h*h)+Q(Q(l*l)+Q(t*t)))){q=Q(Q(1)/q);h=Q(Q(h*n)+Q(Q(l*p)+Q(o*t)));N[m+56>>2]=N[m+56>>2]-Q(q*Q(p*h));N[m+60>>2]=N[m+60>>2]-Q(q*Q(o*h));m=m- -64|0;N[m>>2]=N[m>>2]-Q(q*Q(n*h));break m}N[m+56>>2]=i+N[m+56>>2];N[m+60>>2]=k+N[m+60>>2];m=m- -64|0;N[m>>2]=f+N[m>>2]}h=Q(j*N[c+88>>2]);l=Q(f*h);u=Q(l*l);l=Q(i*h);q=Q(l*l);l=Q(k*h);u=Q(u+Q(q+Q(l*l)));l=N[c+48>>2];t=N[c+40>>2];q=N[c+44>>2];n:{if(!(u>Q(Q(l*l)+Q(Q(t*t)+Q(q*q))))){N[c+56>>2]=i+N[c+56>>2];N[c+60>>2]=k+N[c+60>>2];c=c- -64|0;N[c>>2]=f+N[c>>2];break n}h=Q(Q(1)/h);l=Q(Q(l*n)+Q(Q(t*p)+Q(o*q)));N[c+56>>2]=N[c+56>>2]-Q(h*Q(p*l));N[c+60>>2]=N[c+60>>2]-Q(h*Q(o*l));c=c- -64|0;N[c>>2]=N[c>>2]-Q(h*Q(n*l))}j=Q(j*N[g+88>>2]);h=Q(f*j);l=Q(h*h);h=Q(i*j);u=Q(h*h);h=Q(k*j);u=Q(l+Q(u+Q(h*h)));h=N[g+48>>2];l=N[g+40>>2];t=N[g+44>>2];if(!(u>Q(Q(h*h)+Q(Q(l*l)+Q(t*t))))){N[g+56>>2]=i+N[g+56>>2];N[g+60>>2]=k+N[g+60>>2];c=g- -64|0;N[c>>2]=f+N[c>>2];break g}f=Q(Q(1)/j);i=Q(Q(h*n)+Q(Q(l*p)+Q(o*t)));N[g+56>>2]=N[g+56>>2]-Q(f*Q(p*i));N[g+60>>2]=N[g+60>>2]-Q(f*Q(o*i));c=g- -64|0;N[c>>2]=N[c>>2]-Q(f*Q(n*i))}d=d+1|0;if((M|0)!=(d|0)){continue}break}}xa();m=J[e+712>>2];if((m|0)>0){d=0;while(1){c=J[e+720>>2]+P(d,104)|0;g=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=g;g=J[c+20>>2];J[c+32>>2]=J[c+16>>2];J[c+36>>2]=g;k=N[e+452>>2];f=Q(N[J[e+684>>2]+12>>2]/k);i=Q(-f);n=N[c+88>>2];o=Q(Q(N[c+56>>2]*n)*k);o=f<o?f:o;o=Q((i>o?i:o)+N[c+40>>2]);N[c+40>>2]=o;p=Q(k*Q(n*N[c+60>>2]));p=f<p?f:p;p=Q((i>p?i:p)+N[c+44>>2]);N[c+44>>2]=p;g=c- -64|0;k=Q(k*Q(n*N[g>>2]));f=f<k?f:k;i=Q((f<i?i:f)+N[c+48>>2]);N[c+48>>2]=i;f=N[e+452>>2];N[c+8>>2]=Q(o*f)+N[c+8>>2];N[c+12>>2]=Q(p*f)+N[c+12>>2];N[c+16>>2]=Q(i*f)+N[c+16>>2];J[g>>2]=0;J[g+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}lk(e);d=J[e+928>>2];o:{if(d){c=J[e+192>>2];f=Q(ia[J[J[c>>2]+48>>2]](c));i=N[d>>2];k=N[d+4>>2];n=N[d+8>>2];J[e+904>>2]=0;N[e+900>>2]=n-f;N[e+896>>2]=k-f;N[e+892>>2]=i-f;i=N[d+20>>2];k=N[d+24>>2];n=N[d+16>>2];J[e+920>>2]=0;N[e+916>>2]=f+k;N[e+912>>2]=f+i;d=e+908|0;N[d>>2]=f+n;c=J[e+188>>2];if(!c){break o}g=J[e+684>>2];m=J[g+32>>2];ia[J[J[m>>2]+16>>2]](m,c,e+892|0,d,J[g+36>>2]);break o}J[e+892>>2]=0;J[e+896>>2]=0;J[e+916>>2]=0;J[e+920>>2]=0;J[e+908>>2]=0;J[e+912>>2]=0;J[e+900>>2]=0;J[e+904>>2]=0}g=J[e+712>>2];if((g|0)>0){m=e+928|0;d=0;while(1){c=J[e+720>>2]+P(d,104)|0;i=N[c+12>>2];k=N[c+16>>2];n=N[c+8>>2];f=N[e+464>>2];J[r+140>>2]=0;N[r+128>>2]=f+n;J[r+124>>2]=0;N[r+112>>2]=n-f;N[r+136>>2]=f+k;N[r+132>>2]=f+i;N[r+120>>2]=k-f;N[r+116>>2]=i-f;v=J[c+96>>2];i=N[c+40>>2];k=N[c+44>>2];n=N[c+48>>2];f=N[e+460>>2];J[r+20>>2]=0;N[r+16>>2]=f*n;N[r+12>>2]=f*k;N[r+8>>2]=i*f;Cd(m,v,r+112|0,r+8|0,N[e+468>>2]);d=d+1|0;if((g|0)!=(d|0)){continue}break}}y=e+988|0;if(!(!J[e+988>>2]|J[e+752>>2]<=0)){m=0;while(1){v=J[e+760>>2]+P(m,44)|0;d=J[v+16>>2];x=N[d+40>>2];c=J[v+8>>2];B=N[c+40>>2];g=J[v+12>>2];z=N[g+40>>2];A=N[d+44>>2];u=N[c+44>>2];E=N[g+44>>2];F=N[d+48>>2];G=N[c+48>>2];O=N[g+48>>2];i=N[d+12>>2];k=N[c+12>>2];n=N[g+12>>2];o=N[d+16>>2];p=N[c+16>>2];j=N[g+16>>2];h=N[d+8>>2];l=N[c+8>>2];t=N[g+8>>2];f=N[e+464>>2];q=N[d+20>>2];s=N[g+20>>2];w=N[c+20>>2];D=s>w?s:w;N[r+140>>2]=q>D?q:D;D=l<t?t:l;N[r+128>>2]=f+(h>D?h:D);s=s<w?s:w;N[r+124>>2]=q<s?q:s;l=l>t?t:l;N[r+112>>2]=(h<l?h:l)-f;h=j>p?j:p;N[r+136>>2]=f+(h<o?o:h);h=k<n?n:k;N[r+132>>2]=f+(i>h?i:h);p=j<p?j:p;N[r+120>>2]=(o<p?o:p)-f;k=k>n?n:k;N[r+116>>2]=(i<k?i:k)-f;d=J[v+40>>2];f=N[e+460>>2];J[r+20>>2]=0;N[r+16>>2]=f*Q(Q(F+Q(G+O))*Q(.3333333432674408));N[r+12>>2]=f*Q(Q(A+Q(u+E))*Q(.3333333432674408));N[r+8>>2]=f*Q(Q(x+Q(B+z))*Q(.3333333432674408));Cd(y,d,r+112|0,r+8|0,N[e+468>>2]);m=m+1|0;if((m|0)<J[e+752>>2]){continue}break}}i=Q(0);c=0;f=Q(0);k=Q(0);n=Q(0);j=Q(0);d=ga-144|0;ga=d;p:{if(!K[e+473|0]){break p}g=J[e+712>>2];v=(g|0)<=0;if(!v){C=J[e+512>>2];M=J[e+720>>2];while(1){m=M+P(c,104)|0;o=N[C+(c<<2)>>2];n=Q(n+Q(N[m+8>>2]*o));i=Q(i+Q(o*N[m+16>>2]));k=Q(k+Q(o*N[m+12>>2]));c=c+1|0;if((g|0)!=(c|0)){continue}break}}J[e+532>>2]=0;N[e+528>>2]=i;N[e+524>>2]=k;N[e+520>>2]=n;J[d+132>>2]=0;J[d+136>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+140>>2]=0;J[d+124>>2]=0;J[d+128>>2]=0;J[d+108>>2]=0;J[d+112>>2]=0;J[d+136>>2]=884998144;J[d+116>>2]=880803840;J[d+100>>2]=0;J[d+104>>2]=0;J[d+96>>2]=872415232;if(!v){C=J[e+492>>2];M=J[e+720>>2];S=J[e+512>>2];o=N[d+120>>2];p=Q(1.1920928955078125e-7);h=Q(2.384185791015625e-7);l=Q(3.5762786865234375e-7);t=N[d+112>>2];q=N[d+104>>2];s=N[d+100>>2];m=0;while(1){v=M+P(m,104)|0;B=N[v+16>>2];z=N[v+12>>2];c=C+(m<<4)|0;A=N[c>>2];u=N[c+4>>2];w=N[S+(m<<2)>>2];x=Q(Q(N[v+8>>2]-n)*w);q=Q(Q(x*N[c+8>>2])+q);N[d+104>>2]=q;s=Q(Q(x*u)+s);N[d+100>>2]=s;p=Q(Q(x*A)+p);N[d+96>>2]=p;A=N[c>>2];u=N[c+4>>2];x=Q(w*Q(z-k));o=Q(Q(x*N[c+8>>2])+o);N[d+120>>2]=o;h=Q(Q(x*u)+h);N[d+116>>2]=h;t=Q(Q(x*A)+t);N[d+112>>2]=t;x=N[c>>2];z=N[c+4>>2];w=Q(w*Q(B-i));l=Q(Q(w*N[c+8>>2])+l);N[d+136>>2]=l;f=Q(Q(w*z)+f);N[d+132>>2]=f;j=Q(Q(w*x)+j);N[d+128>>2]=j;m=m+1|0;if((g|0)!=(m|0)){continue}break}}if(!K[33308]){f=N[5805];J[8326]=J[5806];N[8325]=f;H[33308]=1}Qj(d+96|0,d+48|0,d);c=J[d+60>>2];J[e+544>>2]=J[d+56>>2];J[e+548>>2]=c;c=J[d+52>>2];J[e+536>>2]=J[d+48>>2];J[e+540>>2]=c;c=J[d+76>>2];J[e+560>>2]=J[d+72>>2];J[e+564>>2]=c;c=J[d+68>>2];J[e+552>>2]=J[d+64>>2];J[e+556>>2]=c;c=J[d+84>>2];J[e+568>>2]=J[d+80>>2];J[e+572>>2]=c;c=J[d+92>>2];J[e+576>>2]=J[d+88>>2];J[e+580>>2]=c;f=N[e+640>>2];i=N[e+632>>2];k=N[e+636>>2];n=N[e+656>>2];o=N[e+648>>2];p=N[e+652>>2];j=N[e+672>>2];h=N[e+664>>2];l=N[e+668>>2];t=N[d+88>>2];q=N[d+84>>2];s=N[d+56>>2];w=N[d+120>>2];x=N[d+72>>2];B=N[d+68>>2];z=N[d+128>>2];A=N[d+96>>2];u=N[d+112>>2];E=N[d+132>>2];F=N[d+100>>2];G=N[d+116>>2];O=N[d+136>>2];D=N[d+80>>2];U=N[d+104>>2];V=N[d+48>>2];W=N[d+52>>2];X=N[d+64>>2];J[e+628>>2]=0;J[e+612>>2]=0;J[e+596>>2]=0;I=Q(Q(t*j)+Q(Q(D*h)+Q(q*l)));L=Q(Q(s*j)+Q(Q(V*h)+Q(W*l)));l=Q(Q(x*j)+Q(Q(X*h)+Q(B*l)));j=Q(Q(O*I)+Q(Q(U*L)+Q(w*l)));N[e+624>>2]=j;h=Q(Q(E*I)+Q(Q(F*L)+Q(l*G)));N[e+620>>2]=h;l=Q(Q(z*I)+Q(Q(A*L)+Q(u*l)));N[e+616>>2]=l;I=Q(Q(t*n)+Q(Q(D*o)+Q(q*p)));L=Q(Q(s*n)+Q(Q(V*o)+Q(W*p)));p=Q(Q(x*n)+Q(Q(X*o)+Q(B*p)));n=Q(Q(O*I)+Q(Q(U*L)+Q(w*p)));N[e+608>>2]=n;o=Q(Q(E*I)+Q(Q(F*L)+Q(p*G)));N[e+604>>2]=o;p=Q(Q(z*I)+Q(Q(A*L)+Q(p*u)));N[e+600>>2]=p;t=Q(Q(t*f)+Q(Q(D*i)+Q(q*k)));q=Q(Q(s*f)+Q(Q(V*i)+Q(W*k)));f=Q(Q(x*f)+Q(Q(X*i)+Q(B*k)));i=Q(Q(O*t)+Q(Q(U*q)+Q(w*f)));N[e+592>>2]=i;k=Q(Q(E*t)+Q(Q(F*q)+Q(f*G)));N[e+588>>2]=k;t=Q(Q(z*t)+Q(Q(A*q)+Q(f*u)));N[e+584>>2]=t;f=N[e+364>>2];if(!(f>Q(1))){break p}u=j;j=Q(Q(1)/Q(Q(i*Q(Q(p*h)-Q(l*o)))+Q(Q(t*Q(Q(o*j)-Q(h*n)))+Q(k*Q(Q(n*l)-Q(j*p))))));f=j<Q(1)?Q(1):f<j?f:j;N[e+624>>2]=u*f;N[e+620>>2]=h*f;N[e+616>>2]=l*f;N[e+608>>2]=n*f;N[e+604>>2]=o*f;N[e+600>>2]=p*f;N[e+592>>2]=i*f;N[e+588>>2]=k*f;N[e+584>>2]=t*f}ga=d+144|0;q:{if(!K[e+473|0]|!(N[e+320>>2]>Q(0))){break q}m=J[e+712>>2];if((m|0)<=0){break q}o=N[e+576>>2];p=N[e+572>>2];j=N[e+568>>2];h=N[e+560>>2];l=N[e+556>>2];t=N[e+552>>2];q=N[e+544>>2];s=N[e+540>>2];w=N[e+536>>2];d=0;while(1){c=J[e+720>>2]+P(d,104)|0;if(N[c+88>>2]>Q(0)){g=J[e+492>>2]+(d<<4)|0;f=N[g+8>>2];i=N[g>>2];k=N[g+4>>2];x=N[e+520>>2];B=N[e+524>>2];n=N[e+320>>2];z=N[e+528>>2];J[c+20>>2]=0;A=N[c+16>>2];N[c+16>>2]=A+Q(n*Q(Q(z+Q(Q(o*f)+Q(Q(j*i)+Q(p*k))))-A));z=N[c+12>>2];N[c+12>>2]=z+Q(n*Q(Q(B+Q(Q(h*f)+Q(Q(t*i)+Q(l*k))))-z));B=N[c+8>>2];N[c+8>>2]=B+Q(n*Q(Q(x+Q(Q(q*f)+Q(Q(w*i)+Q(s*k))))-B))}d=d+1|0;if((m|0)!=(d|0)){continue}break}}qa(r+8|0,0,104);d=J[e+812>>2];if((d|0)<0){if(J[e+816>>2]<0){c=J[e+820>>2];if(!(c?!c|!K[e+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[e+824|0]=1;J[e+816>>2]=0;J[e+820>>2]=0}while(1){c=J[e+820>>2]+P(d,104)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+24>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;g=J[r+48>>2];J[c+36>>2]=J[r+44>>2];J[c+40>>2]=g;g=J[r+40>>2];J[c+28>>2]=J[r+36>>2];J[c+32>>2]=g;g=J[r+64>>2];J[c+52>>2]=J[r+60>>2];J[c+56>>2]=g;g=J[r+56>>2];J[c+44>>2]=J[r+52>>2];J[c+48>>2]=g;g=J[r+80>>2];J[c+68>>2]=J[r+76>>2];J[c+72>>2]=g;g=J[r+72>>2];J[c+60>>2]=J[r+68>>2];J[c+64>>2]=g;g=J[r+88>>2];J[c+76>>2]=J[r+84>>2];J[c+80>>2]=g;g=J[r+96>>2];J[c+84>>2]=J[r+92>>2];J[c+88>>2]=g;g=J[r+104>>2];J[c+92>>2]=J[r+100>>2];J[c+96>>2]=g;J[c+100>>2]=J[r+108>>2];c=d;d=c+1|0;if(d>>>0>=c>>>0){continue}break}}J[e+812>>2]=0;c=J[e+832>>2];r:{if((c|0)>=0){break r}if(J[e+836>>2]<0){d=J[e+840>>2];if(!(d?!d|!K[e+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[e+844|0]=1;J[e+836>>2]=0;J[e+840>>2]=0}m=0;d=c;v=0-c&3;if(v){while(1){g=J[e+840>>2]+P(d,56)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+48>>2]=0;J[g+52>>2]=0;J[g+40>>2]=0;J[g+44>>2]=0;J[g+32>>2]=0;J[g+36>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;m=m+1|0;if((v|0)!=(m|0)){continue}break}}if(c>>>0>4294967292){break r}while(1){g=P(d,56);c=g+J[e+840>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=g+J[e+840>>2]|0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;m=c- -64|0;J[m>>2]=0;J[m+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;c=g+J[e+840>>2]|0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;c=g+J[e+840>>2]|0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;d=d+4|0;if(d){continue}break}}J[e+832>>2]=0;Hc(e+928|0,1);Hc(y,1);Hc(e+1048|0,1);ga=r+144|0;d=J[a+24>>2]}T=T+1|0;if((T|0)<(d|0)){continue}break}}}
  function OA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=Q(0),p=0,q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=0,ca=0,da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=0,na=Q(0),oa=Q(0),pa=Q(0),ra=Q(0);p=ga-256|0;ga=p;J[a+188>>2]=-1;ya(2822);J[a+184>>2]=0;a:{if((c|0)<=0){break a}if(c-1>>>0>=3){i=c&-4;while(1){l=k<<2;J[J[l+b>>2]+212>>2]=-1;J[J[(l|4)+b>>2]+212>>2]=-1;J[J[(l|8)+b>>2]+212>>2]=-1;J[J[(l|12)+b>>2]+212>>2]=-1;k=k+4|0;n=n+4|0;if((i|0)!=(n|0)){continue}break}}l=c&3;if(!l){break a}i=0;while(1){J[J[(k<<2)+b>>2]+212>>2]=-1;k=k+1|0;i=i+1|0;if((l|0)!=(i|0)){continue}break}}r=J[a+12>>2];if((r|0)<=(c|0)){r=c+1|0;if(r){J[8369]=J[8369]+1;i=ia[J[6782]](P(r,244),16)|0}else{i=0}j=J[a+8>>2];if((j|0)>0){n=0;while(1){l=P(n,244);m=l+i|0;s=l+J[a+16>>2]|0;l=J[s+4>>2];J[m>>2]=J[s>>2];J[m+4>>2]=l;l=J[s+12>>2];J[m+8>>2]=J[s+8>>2];J[m+12>>2]=l;l=J[s+28>>2];J[m+24>>2]=J[s+24>>2];J[m+28>>2]=l;l=J[s+20>>2];J[m+16>>2]=J[s+16>>2];J[m+20>>2]=l;l=J[s+44>>2];J[m+40>>2]=J[s+40>>2];J[m+44>>2]=l;l=J[s+36>>2];J[m+32>>2]=J[s+32>>2];J[m+36>>2]=l;l=J[s+52>>2];J[m+48>>2]=J[s+48>>2];J[m+52>>2]=l;l=J[s+60>>2];J[m+56>>2]=J[s+56>>2];J[m+60>>2]=l;sa(m- -64|0,s- -64|0,180);n=n+1|0;if((j|0)!=(n|0)){continue}break}}l=J[a+16>>2];if(!(l?!l|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}J[a+16>>2]=i;H[a+20|0]=1;J[a+12>>2]=r}qa(p+8|0,0,244);i=J[a+8>>2];if((i|0)<0){if((r|0)<0){l=J[a+16>>2];if(!(l?!l|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}H[a+20|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}m=p+72|0;while(1){j=J[a+16>>2]+P(i,244)|0;J[j>>2]=0;J[j+4>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;l=J[p+36>>2];J[j+24>>2]=J[p+32>>2];J[j+28>>2]=l;l=J[p+28>>2];J[j+16>>2]=J[p+24>>2];J[j+20>>2]=l;l=J[p+44>>2];J[j+32>>2]=J[p+40>>2];J[j+36>>2]=l;l=J[p+52>>2];J[j+40>>2]=J[p+48>>2];J[j+44>>2]=l;l=J[p+60>>2];J[j+48>>2]=J[p+56>>2];J[j+52>>2]=l;l=J[p+68>>2];J[j+56>>2]=J[p+64>>2];J[j+60>>2]=l;sa(j- -64|0,m,180);l=i;i=l+1|0;if(l>>>0<=i>>>0){continue}break}}J[a+8>>2]=0;if((c|0)>0){i=0;while(1){l=(i<<2)+b|0;m=yb(a,J[l>>2],N[h+12>>2]);j=J[l>>2];if(!(!(K[j+236|0]&2)|!j|(!(K[j+504|0]&2)|N[j+344>>2]==Q(0)))){l=J[a+16>>2];z=N[h+76>>2];I=N[j+336>>2];W=N[j+44>>2];X=N[j+40>>2];Z=N[j+36>>2];L=N[j+332>>2];_=N[j+28>>2];$=N[j+12>>2];q=N[j+404>>2];aa=N[j+24>>2];D=N[j+8>>2];u=N[j+400>>2];E=N[j+20>>2];M=N[j+328>>2];x=N[j+4>>2];o=N[j+396>>2];J[p+20>>2]=0;A=Q(Q(1)/q);t=Q(_*A);B=Q(Q(1)/o);q=Q(E*B);C=Q(Q(1)/u);o=Q(aa*C);u=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(aa*o))))));t=Q(A*$);q=Q(B*x);o=Q(C*D);o=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(o*aa))))));y=Q(Q(M*u)-Q(L*o));N[p+16>>2]=y;F=Q(I*o);t=Q(A*W);q=Q(B*Z);o=Q(C*X);o=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(aa*o))))));q=Q(F-Q(M*o));N[p+12>>2]=q;u=Q(Q(L*o)-Q(u*I));N[p+8>>2]=u;o=Q(Q(y*y)+Q(Q(u*u)+Q(q*q)));if(o>Q(z*z)){o=Q(Q(Q(1)/Q(Y(o)))*z);N[p+16>>2]=y*o;N[p+12>>2]=q*o;N[p+8>>2]=u*o}B=N[j+304>>2];C=N[j+272>>2];t=N[j+288>>2];q=N[j+300>>2];u=N[j+268>>2];o=N[j+284>>2];l=l+P(m,244)|0;x=N[p+16>>2];z=N[p+8>>2];y=N[p+12>>2];A=N[h+12>>2];N[l+224>>2]=N[l+224>>2]-Q(Q(Q(N[j+296>>2]*x)+Q(Q(N[j+264>>2]*z)+Q(y*N[j+280>>2])))*A);N[l+228>>2]=N[l+228>>2]-Q(A*Q(Q(q*x)+Q(Q(u*z)+Q(y*o))));N[l+232>>2]=N[l+232>>2]-Q(A*Q(Q(B*x)+Q(Q(C*z)+Q(y*t))))}i=i+1|0;if((i|0)!=(c|0)){continue}break}}b:{if((g|0)<=0){break b}k=0;if((g|0)!=1){i=g&-2;b=0;while(1){c=k<<2;l=J[c+f>>2];ia[J[J[l>>2]+8>>2]](l);J[l+36>>2]=0;c=J[(c|4)+f>>2];ia[J[J[c>>2]+8>>2]](c);J[c+36>>2]=0;k=k+2|0;b=b+2|0;if((i|0)!=(b|0)){continue}break}}if(!(g&1)){break b}b=J[(k<<2)+f>>2];ia[J[J[b>>2]+8>>2]](b);J[b+36>>2]=0}b=J[a+168>>2];if(!((g|0)<=(b|0)|J[a+172>>2]>=(g|0))){c:{if(!g){i=0;break c}J[8369]=J[8369]+1;i=ia[J[6782]](g<<3,16)|0;b=J[a+168>>2]}d:{if((b|0)<=0){break d}n=0;k=0;if(b-1>>>0>=3){s=b&-4;c=0;while(1){G=k<<3;j=G+i|0;m=G+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|8;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|16;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|24;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;k=k+4|0;c=c+4|0;if((s|0)!=(c|0)){continue}break}}m=b&3;if(!m){break d}while(1){b=k<<3;l=b+i|0;c=b+J[a+176>>2]|0;b=J[c+4>>2];J[l>>2]=J[c>>2];J[l+4>>2]=b;k=k+1|0;n=n+1|0;if((m|0)!=(n|0)){continue}break}}b=J[a+176>>2];if(!(b?!b|!K[a+180|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+176>>2]=i;H[a+180|0]=1;J[a+172>>2]=g}J[a+168>>2]=g;n=0;if((g|0)>0){i=0;while(1){m=J[a+176>>2];l=(i<<2)+f|0;b=J[l>>2];c=J[b+44>>2];if(c){J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;b=J[l>>2]}c=m+(i<<3)|0;e:{if(K[b+20|0]){ia[J[J[b>>2]+16>>2]](b,c);b=J[c>>2];break e}J[c>>2]=0;J[c+4>>2]=0;b=0}n=b+n|0;i=i+1|0;if((i|0)!=(g|0)){continue}break}}b=J[a+48>>2];if(!((n|0)<=(b|0)|J[a+52>>2]>=(n|0))){f:{if(!n){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](P(n,152),16)|0;b=J[a+48>>2]}g:{if((b|0)<=0){break g}m=b&1;k=0;if((b|0)!=1){l=b&-2;b=0;while(1){c=P(k,152);sa(c+i|0,c+J[a+56>>2]|0,152);c=P(k|1,152);sa(c+i|0,c+J[a+56>>2]|0,152);k=k+2|0;b=b+2|0;if((l|0)!=(b|0)){continue}break}}if(!m){break g}b=P(k,152);sa(b+i|0,b+J[a+56>>2]|0,152)}b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=i;H[a+60|0]=1;J[a+52>>2]=n}J[a+48>>2]=n;if((g|0)>0){i=J[a+176>>2];while(1){l=ca<<3;k=l+i|0;if(J[k>>2]){G=(ca<<2)+f|0;ba=J[G>>2];v=J[ba+32>>2];i=J[a+56>>2];w=J[ba+28>>2];s=yb(a,w,N[h+12>>2]);j=yb(a,v,N[h+12>>2]);c=J[ba+24>>2];b=J[h+20>>2];m=(c|0)>0?c:b;if((m|0)>J[a+184>>2]){J[a+184>>2]=m}i=i+P(ma,152)|0;c=J[a+16>>2];n=0;if(J[k>>2]>0){while(1){b=qa(i+P(n,152)|0,0,152);J[b+120>>2]=-8388609;J[b+124>>2]=2139095039;J[b+148>>2]=j;J[b+144>>2]=s;J[b+96>>2]=0;J[b+100>>2]=0;J[b+136>>2]=m;n=n+1|0;if((n|0)<J[k>>2]){continue}break}b=J[h+20>>2]}m=P(s,244)+c|0;J[m+64>>2]=0;J[m+68>>2]=0;J[m+144>>2]=0;J[m+148>>2]=0;J[m+88>>2]=0;J[m+92>>2]=0;J[m+80>>2]=0;J[m+84>>2]=0;J[m+72>>2]=0;J[m+76>>2]=0;J[m+152>>2]=0;J[m+156>>2]=0;J[m+160>>2]=0;J[m+164>>2]=0;J[m+168>>2]=0;J[m+172>>2]=0;c=P(j,244)+c|0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;N[p+8>>2]=Q(1)/N[h+12>>2];o=N[h+32>>2];J[p+36>>2]=i+112;J[p+32>>2]=38;J[p+28>>2]=i+32;J[p+24>>2]=i+48;J[p+20>>2]=i;J[p+16>>2]=i+16;N[p+12>>2]=o;N[i+116>>2]=N[h+40>>2];o=N[h+4>>2];J[p+56>>2]=b;J[p+48>>2]=i+124;J[p+44>>2]=i+120;J[p+40>>2]=i+116;N[p+60>>2]=o;b=J[G>>2];ia[J[J[b>>2]+20>>2]](b,p+8|0);if(J[k>>2]>0){r=0;while(1){o=N[J[G>>2]+16>>2];j=i+P(r,152)|0;if(o<=N[j+124>>2]){N[j+124>>2]=o}o=Q(-o);if(o>=N[j+120>>2]){N[j+120>>2]=o}J[j+132>>2]=ba;b=J[ba+28>>2];D=N[b+268>>2];E=N[b+272>>2];x=N[b+548>>2];z=N[b+288>>2];y=N[b+280>>2];A=N[b+284>>2];B=N[b+552>>2];C=N[b+304>>2];t=N[b+296>>2];q=N[b+300>>2];u=N[b+544>>2];o=N[b+264>>2];J[j+76>>2]=0;F=N[j+8>>2];O=N[j>>2];S=N[j+4>>2];N[j+72>>2]=B*Q(Q(C*F)+Q(Q(t*O)+Q(q*S)));N[j+68>>2]=x*Q(Q(z*F)+Q(Q(y*O)+Q(S*A)));N[j+64>>2]=u*Q(Q(E*F)+Q(Q(o*O)+Q(D*S)));b=J[ba+32>>2];D=N[b+268>>2];E=N[b+272>>2];x=N[b+548>>2];z=N[b+288>>2];y=N[b+280>>2];A=N[b+284>>2];B=N[b+552>>2];C=N[b+304>>2];t=N[b+296>>2];q=N[b+300>>2];u=N[b+544>>2];o=N[b+264>>2];J[j+92>>2]=0;T=N[j+40>>2];U=N[j+32>>2];V=N[j+36>>2];N[j+88>>2]=B*Q(Q(C*T)+Q(Q(t*U)+Q(q*V)));N[j+84>>2]=x*Q(Q(z*T)+Q(Q(y*U)+Q(V*A)));N[j+80>>2]=u*Q(Q(E*T)+Q(Q(o*U)+Q(D*V)));na=Q(0);o=N[w+344>>2];da=N[j+24>>2];ea=N[j+16>>2];fa=N[j+20>>2];q=Q(Q(Q(Q(o*da)*da)+Q(Q(Q(o*ea)*ea)+Q(fa*Q(o*fa))))+Q(Q(F*Q(Q(F*N[w+304>>2])+Q(Q(O*N[w+296>>2])+Q(S*N[w+300>>2]))))+Q(Q(O*Q(Q(F*N[w+272>>2])+Q(Q(O*N[w+264>>2])+Q(S*N[w+268>>2]))))+Q(S*Q(Q(F*N[w+288>>2])+Q(Q(O*N[w+280>>2])+Q(S*N[w+284>>2])))))));o=N[v+344>>2];ha=N[j+56>>2];ja=N[j+48>>2];ka=N[j+52>>2];o=Q(Q(q+Q(Q(Q(o*ha)*ha)+Q(Q(Q(o*ja)*ja)+Q(ka*Q(o*ka)))))+Q(Q(T*Q(Q(T*N[v+304>>2])+Q(Q(U*N[v+296>>2])+Q(V*N[v+300>>2]))))+Q(Q(U*Q(Q(T*N[v+272>>2])+Q(Q(U*N[v+264>>2])+Q(V*N[v+268>>2]))))+Q(V*Q(Q(T*N[v+288>>2])+Q(Q(U*N[v+280>>2])+Q(V*N[v+284>>2])))))));la=Q(R(o))>Q(1.1920928955078125e-7)?Q(Q(1)/o):Q(0);N[j+108>>2]=la;oa=Q(0);pa=Q(0);ra=Q(0);I=Q(0);L=Q(0);M=Q(0);if(J[m+240>>2]){L=N[m+228>>2];I=N[m+224>>2];pa=N[m+212>>2];ra=N[m+208>>2];oa=N[m+216>>2];M=N[m+232>>2]}W=Q(0);X=Q(0);Z=Q(0);_=Q(0);$=Q(0);if(J[c+240>>2]){_=N[c+228>>2];Z=N[c+224>>2];W=N[c+212>>2];X=N[c+208>>2];na=N[c+216>>2];$=N[c+232>>2]}aa=N[w+320>>2];D=N[w+312>>2];E=N[w+316>>2];x=N[w+336>>2];z=N[w+328>>2];y=N[w+332>>2];A=N[v+320>>2];B=N[v+312>>2];C=N[v+316>>2];t=N[v+336>>2];q=N[v+328>>2];u=N[v+332>>2];o=N[p+60>>2];J[j+100>>2]=0;N[j+112>>2]=Q(la*N[j+112>>2])+Q(la*Q(Q(0)-Q(o*Q(Q(Q(Q(da*Q(oa+aa))+Q(Q(ea*Q(ra+D))+Q(fa*Q(pa+E))))+Q(Q(F*Q(M+x))+Q(Q(O*Q(I+z))+Q(S*Q(L+y)))))+Q(Q(Q(ha*Q(na+A))+Q(Q(ja*Q(X+B))+Q(ka*Q(W+C))))+Q(Q(T*Q($+t))+Q(Q(U*Q(Z+q))+Q(V*Q(_+u)))))))));r=r+1|0;if((r|0)<J[k>>2]){continue}break}}i=J[a+176>>2];b=J[l+i>>2]}else{b=0}ma=b+ma|0;ca=ca+1|0;if((ca|0)!=(g|0)){continue}break}}ia[J[J[a>>2]+28>>2]](a,d,e,h);m=J[a+68>>2];j=J[a+28>>2];n=J[a+128>>2];l=J[a+48>>2];if(!((n|0)>=(l|0)|(l|0)<=J[a+132>>2])){h:{if(!l){i=0;break h}J[8369]=J[8369]+1;i=ia[J[6782]](l<<2,16)|0;n=J[a+128>>2]}f=J[a+136>>2];i:{j:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+140|0]){break j}break i}if(!f|!K[a+140|0]){break i}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+136>>2]=i;J[a+132>>2]=l;H[a+140|0]=1}J[a+128>>2]=l;k:{if(K[h+64|0]&16){n=J[a+108>>2];e=j<<1;if(!((n|0)>=(e|0)|(e|0)<=J[a+112>>2])){l:{if(!j){i=0;break l}J[8369]=J[8369]+1;i=ia[J[6782]](j<<3,16)|0;n=J[a+108>>2]}g=J[a+116>>2];m:{n:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){f=k<<2;J[f+i>>2]=J[f+g>>2];b=f|4;J[b+i>>2]=J[b+g>>2];b=f|8;J[b+i>>2]=J[b+g>>2];b=f|12;J[b+i>>2]=J[b+g>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+g>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+120|0]){break n}break m}if(!g|!K[a+120|0]){break m}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[a+116>>2]=i;J[a+112>>2]=e;H[a+120|0]=1}J[a+108>>2]=e;break k}n=J[a+108>>2];if(!((j|0)<=(n|0)|(j|0)<=J[a+112>>2])){o:{if(!j){i=0;break o}J[8369]=J[8369]+1;i=ia[J[6782]](j<<2,16)|0;n=J[a+108>>2]}f=J[a+116>>2];p:{q:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+120|0]){break q}break p}if(!f|!K[a+120|0]){break p}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+116>>2]=i;J[a+112>>2]=j;H[a+120|0]=1}J[a+108>>2]=j}n=J[a+148>>2];if(!((m|0)<=(n|0)|(m|0)<=J[a+152>>2])){r:{if(!m){i=0;break r}J[8369]=J[8369]+1;i=ia[J[6782]](m<<2,16)|0;n=J[a+148>>2]}f=J[a+156>>2];s:{t:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+160|0]){break t}break s}if(!f|!K[a+160|0]){break s}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+156>>2]=i;J[a+152>>2]=m;H[a+160|0]=1}J[a+148>>2]=m;u:{if((l|0)<=0){break u}e=J[a+136>>2];b=0;k=0;if(l-1>>>0>=7){d=l&-8;n=0;while(1){J[e+(k<<2)>>2]=k;c=k|1;J[e+(c<<2)>>2]=c;c=k|2;J[e+(c<<2)>>2]=c;c=k|3;J[e+(c<<2)>>2]=c;c=k|4;J[e+(c<<2)>>2]=c;c=k|5;J[e+(c<<2)>>2]=c;c=k|6;J[e+(c<<2)>>2]=c;c=k|7;J[e+(c<<2)>>2]=c;k=k+8|0;n=n+8|0;if((d|0)!=(n|0)){continue}break}}c=l&7;if(!c){break u}while(1){J[e+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}v:{if((j|0)<=0){break v}e=J[a+116>>2];b=0;k=0;if(j-1>>>0>=7){d=j&-8;n=0;while(1){J[e+(k<<2)>>2]=k;c=k|1;J[e+(c<<2)>>2]=c;c=k|2;J[e+(c<<2)>>2]=c;c=k|3;J[e+(c<<2)>>2]=c;c=k|4;J[e+(c<<2)>>2]=c;c=k|5;J[e+(c<<2)>>2]=c;c=k|6;J[e+(c<<2)>>2]=c;c=k|7;J[e+(c<<2)>>2]=c;k=k+8|0;n=n+8|0;if((d|0)!=(n|0)){continue}break}}c=j&7;if(!c){break v}while(1){J[e+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}w:{if((m|0)<=0){break w}d=J[a+156>>2];b=0;k=0;if(m-1>>>0>=7){c=m&-8;n=0;while(1){J[d+(k<<2)>>2]=k;a=k|1;J[d+(a<<2)>>2]=a;a=k|2;J[d+(a<<2)>>2]=a;a=k|3;J[d+(a<<2)>>2]=a;a=k|4;J[d+(a<<2)>>2]=a;a=k|5;J[d+(a<<2)>>2]=a;a=k|6;J[d+(a<<2)>>2]=a;a=k|7;J[d+(a<<2)>>2]=a;k=k+8|0;n=n+8|0;if((c|0)!=(n|0)){continue}break}}a=m&7;if(!a){break w}while(1){J[d+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((a|0)!=(b|0)){continue}break}}xa();ga=p+256|0;return Q(Q(0))}function eg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=0,p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=0,C=0,D=0,E=0;h=ga-144|0;ga=h;a:{if((c|0)<=0){b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;break a}H[h+112|0]=1;J[h+88>>2]=0;J[h+92>>2]=256;J[h+72>>2]=0;J[h+76>>2]=256;J[h+56>>2]=0;J[h+60>>2]=256;J[h+108>>2]=0;J[h+100>>2]=0;J[h+104>>2]=0;J[h+80>>2]=0;J[h+84>>2]=0;J[h+64>>2]=0;J[h+68>>2]=0;J[h+48>>2]=0;J[h+52>>2]=0;f=h+16|0;g=ga-48|0;ga=g;z=Q(-1.0000000150474662e30);A=Q(1.0000000150474662e30);k=c;b:{if((c|0)>0){c=b;m=Q(1.0000000150474662e30);s=Q(1.0000000150474662e30);t=Q(-1.0000000150474662e30);x=Q(-1.0000000150474662e30);while(1){u=N[c+8>>2];z=u>z?u:z;v=N[c+4>>2];t=t<v?v:t;w=N[c>>2];x=x<w?w:x;A=u<A?u:A;m=m>v?v:m;s=s>w?w:s;c=c+16|0;e=e+1|0;if((k|0)!=(e|0)){continue}break}break b}x=Q(-1.0000000150474662e30);t=Q(-1.0000000150474662e30);s=Q(1.0000000150474662e30);m=Q(1.0000000150474662e30)}u=Q(x-s);v=Q(t-m);d=u<v;w=Q(z-A);c=w>(d?v:u)?2:d;J[f+112>>2]=c;e=w>(d?u:v)?!d:2;if((c|0)==(e|0)){e=(c+1>>>0)%3|0}J[f+104>>2]=e;J[f+12>>2]=0;J[f+28>>2]=0;d=c+e|0;J[f+108>>2]=3-d;N[f+24>>2]=Q(z+A)*Q(.5);N[f+20>>2]=Q(t+m)*Q(.5);N[f+16>>2]=Q(x+s)*Q(.5);m=Q(w*Q(9788566967472434e-20));c=(c|0)==(((4-d&255)>>>0)%3|0);m=c?m:Q(-m);N[f+8>>2]=m;s=Q(v*Q(9788566967472434e-20));s=c?s:Q(-s);N[f+4>>2]=s;t=Q(u*Q(9788566967472434e-20));t=c?t:Q(-t);N[f>>2]=t;J[g+32>>2]=0;J[g+36>>2]=0;H[g+40|0]=1;c:{d:{if((k|0)>0){J[8369]=J[8369]+1;J[g+36>>2]=ia[J[6782]](k<<4,16);H[g+40|0]=1;J[g+32>>2]=k;J[g+28>>2]=k;if((k|0)<=0){break c}x=m!=Q(0)?Q(Q(1)/m):m;s=s!=Q(0)?Q(Q(1)/s):s;t=t!=Q(0)?Q(Q(1)/t):t;c=g+8|0;l=c+(J[f+104>>2]<<2)|0;r=c+(J[f+112>>2]<<2)|0;j=c+(J[f+108>>2]<<2)|0;z=N[f+24>>2];A=N[f+20>>2];u=N[f+16>>2];i=J[g+36>>2];e=0;while(1){m=N[b>>2];v=N[b+4>>2];w=N[b+8>>2];J[g+20>>2]=0;N[g+16>>2]=x*Q(w-z);N[g+12>>2]=s*Q(v-A);N[g+8>>2]=t*Q(m-u);c=i+(e<<4)|0;m=N[j>>2];e:{if(Q(R(m))<Q(2147483648)){d=~~m;break e}d=-2147483648}J[c>>2]=d;m=N[r>>2];f:{if(Q(R(m))<Q(2147483648)){d=~~m;break f}d=-2147483648}J[c+4>>2]=d;m=N[l>>2];J[c+12>>2]=e;if(Q(R(m))<Q(2147483648)){d=~~m}else{d=-2147483648}J[c+8>>2]=d;b=b+16|0;e=e+1|0;if((k|0)!=(e|0)){continue}break}break d}J[g+28>>2]=k;break c}if((k|0)<2){break c}Rj(g+24|0,g+8|0,0,k-1|0)}J[f+44>>2]=k;J[f+40>>2]=0;J[f+36>>2]=J[f+32>>2];b=J[f+84>>2];g:{if((k|0)<=(b|0)){break g}if((k|0)>J[f+88>>2]){if(k){J[8369]=J[8369]+1;p=ia[J[6782]](k<<2,16)|0;e=J[f+84>>2]}else{e=b}h:{if((e|0)<=0){break h}l=0;c=0;if(e-1>>>0>=3){j=e&-4;d=0;while(1){r=c<<2;J[r+p>>2]=J[r+J[f+92>>2]>>2];i=r|4;J[i+p>>2]=J[i+J[f+92>>2]>>2];i=r|8;J[i+p>>2]=J[i+J[f+92>>2]>>2];r=r|12;J[r+p>>2]=J[r+J[f+92>>2]>>2];c=c+4|0;d=d+4|0;if((j|0)!=(d|0)){continue}break}}d=e&3;if(!d){break h}while(1){e=c<<2;J[e+p>>2]=J[e+J[f+92>>2]>>2];c=c+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}c=J[f+92>>2];if(!(c?!c|!K[f+96|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+92>>2]=p;H[f+96|0]=1;J[f+88>>2]=k}d=k+(b^-1)|0;e=k-b&3;if(e){c=0;while(1){J[J[f+92>>2]+(b<<2)>>2]=0;b=b+1|0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}if(d>>>0<3){break g}while(1){c=b<<2;J[c+J[f+92>>2]>>2]=0;J[(c+J[f+92>>2]|0)+4>>2]=0;J[(c+J[f+92>>2]|0)+8>>2]=0;J[(c+J[f+92>>2]|0)+12>>2]=0;b=b+4|0;if((k|0)!=(b|0)){continue}break}}J[f+84>>2]=k;if((k|0)>0){p=0;while(1){d=J[f+40>>2];i:{if(d){break i}b=J[f+36>>2];j:{if(b){J[f+36>>2]=J[b+8>>2];break j}J[8369]=J[8369]+1;b=ia[J[6782]](12,16)|0;c=J[f+44>>2];J[b+8>>2]=0;J[b+4>>2]=c;J[8369]=J[8369]+1;J[b>>2]=ia[J[6782]](P(c,112),16);J[b+8>>2]=J[f+32>>2];J[f+32>>2]=b}d=J[b>>2];r=J[b+4>>2];if((r|0)<=0){break i}i=0;l=0;c=d;if(r-1>>>0>=3){q=r&-4;e=0;b=d;j=0;while(1){c=b+448|0;l=e+4|0;J[b+336>>2]=(r|0)>(l|0)?c:0;J[b+224>>2]=(r|0)>(e|3)?b+336|0:0;J[b+112>>2]=(r|0)>(e|2)?b+224|0:0;J[b>>2]=(r|0)>(e|1)?b+112|0:0;e=l;b=c;j=j+4|0;if((q|0)!=(j|0)){continue}break}}b=r&3;if(!b){break i}while(1){e=c;c=c+112|0;l=l+1|0;J[e>>2]=(r|0)>(l|0)?c:0;i=i+1|0;if((b|0)!=(i|0)){continue}break}}J[f+40>>2]=J[d>>2];J[d+16>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+104>>2]=-1;b=J[g+36>>2]+(p<<4)|0;c=J[b+4>>2];J[d+88>>2]=J[b>>2];J[d+92>>2]=c;c=J[b+12>>2];J[d+96>>2]=J[b+8>>2];J[d+100>>2]=c;J[J[f+92>>2]+(p<<2)>>2]=d;p=p+1|0;if((k|0)!=(p|0)){continue}break}}b=J[g+36>>2];if(!(b?!b|!K[g+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[g+36>>2]=0;H[g+40|0]=1;J[g+28>>2]=0;J[g+32>>2]=0;J[f+100>>2]=-3;J[f+56>>2]=0;J[f+60>>2]=P(k,6);J[f+116>>2]=0;J[f+120>>2]=0;J[f+52>>2]=J[f+48>>2];J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;fg(f,0,k,g+8|0);J[f+124>>2]=J[g+8>>2];b=J[g+36>>2];if(!(b?!b|!K[g+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=g+48|0;if((J[a+4>>2]&J[a+8>>2])<0){b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+16|0]=1;J[a+8>>2]=0;J[a+12>>2]=0}J[a+4>>2]=0;d=J[a+24>>2];k:{if((d|0)>=0){break k}if(J[a+28>>2]<0){b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+36|0]=1;J[a+28>>2]=0;J[a+32>>2]=0}b=0;c=d;l=0-c&3;if(l){while(1){e=J[a+32>>2]+P(c,12)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;c=c+1|0;b=b+1|0;if((l|0)!=(b|0)){continue}break}}if(d>>>0>4294967292){break k}while(1){b=P(c,12);d=b+J[a+32>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;d=b+J[a+32>>2]|0;J[d+20>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;d=b+J[a+32>>2]|0;J[d+32>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;b=b+J[a+32>>2]|0;J[b+44>>2]=0;J[b+36>>2]=0;J[b+40>>2]=0;c=c+4|0;if(c){continue}break}}J[a+24>>2]=0;c=J[a+44>>2];if((c|0)<0){b=J[a+52>>2];if(J[a+48>>2]<0){if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+56|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=0}d=b;b=c<<2;qa(d+b|0,0,0-b|0)}J[a+44>>2]=0;b=J[h+140>>2];l:{if(J[b+104>>2]>=0){break l}J[b+104>>2]=0;J[8369]=J[8369]+1;f=ia[J[6782]](4,16)|0;J[f>>2]=b;c=0;k=1;l=1;while(1){r=c;d=ga-16|0;ga=d;m:{n:{o:{p:{q=J[(c<<2)+f>>2];b=q;q:{if(J[b+100>>2]>=0){N[d+(J[h+124>>2]<<2)>>2]=J[b+88>>2];break q}m=dc(b+24|0);c=b+72|0;s=dc(c);e=J[b+100>>2];N[d+(J[h+124>>2]<<2)>>2]=m/s;if((e|0)<0){break p}}N[d+(J[h+128>>2]<<2)>>2]=J[b+92>>2];break o}m=dc(b+40|0);s=dc(c);c=J[b+100>>2];N[d+(J[h+128>>2]<<2)>>2]=m/s;if((c|0)<0){break n}}m=Q(J[b+96>>2]);break m}m=Q(dc(b+56|0)/dc(b+72|0))}N[d+(J[h+120>>2]<<2)>>2]=m;m=N[h+36>>2];s=N[h+40>>2];t=N[h+32>>2];x=N[h+16>>2];z=N[h+20>>2];A=N[h+24>>2];u=N[d>>2];v=N[d+4>>2];w=N[d+8>>2];J[h+12>>2]=0;N[h+8>>2]=s+Q(w*A);N[h+4>>2]=m+Q(v*z);N[h>>2]=t+Q(u*x);ga=d+16|0;b=J[a+4>>2];r:{if((b|0)!=J[a+8>>2]){break r}e=b?b<<1:1;if((e|0)<=(b|0)){break r}s:{if(!e){d=0;break s}J[8369]=J[8369]+1;d=ia[J[6782]](e<<4,16)|0;b=J[a+4>>2]}t:{if((b|0)<=0){break t}c=0;if((b|0)!=1){n=b&-2;p=0;while(1){j=c<<4;i=j+d|0;g=j+J[a+12>>2]|0;o=J[g+4>>2];J[i>>2]=J[g>>2];J[i+4>>2]=o;o=J[g+12>>2];J[i+8>>2]=J[g+8>>2];J[i+12>>2]=o;g=j|16;j=g+d|0;g=g+J[a+12>>2]|0;i=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=i;i=J[g+12>>2];J[j+8>>2]=J[g+8>>2];J[j+12>>2]=i;c=c+2|0;p=p+2|0;if((n|0)!=(p|0)){continue}break}}if(!(b&1)){break t}c=c<<4;b=c+d|0;c=c+J[a+12>>2]|0;g=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=g;g=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=g}b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=d;H[a+16|0]=1;J[a+8>>2]=e;b=J[a+4>>2]}c=J[h+4>>2];b=J[a+12>>2]+(b<<4)|0;J[b>>2]=J[h>>2];J[b+4>>2]=c;c=J[h+12>>2];J[b+8>>2]=J[h+8>>2];J[b+12>>2]=c;J[a+4>>2]=J[a+4>>2]+1;p=-1;g=-1;D=J[q+8>>2];c=D;if(c){while(1){if(J[c+20>>2]<0){d=J[a+24>>2];b=d;u:{if((b|0)!=J[a+28>>2]){break u}b=d;q=b?b<<1:1;if((b|0)>=(q|0)){break u}v:{if(!q){i=0;b=d;break v}J[8369]=J[8369]+1;i=ia[J[6782]](P(q,12),16)|0;b=J[a+24>>2]}j=b;w:{if((j|0)<=0){break w}b=0;if((j|0)!=1){B=j&-2;e=0;while(1){o=P(b,12);n=o+J[a+32>>2]|0;y=J[n+4>>2];o=i+o|0;J[o>>2]=J[n>>2];J[o+4>>2]=y;J[o+8>>2]=J[n+8>>2];o=P(b|1,12);n=o+J[a+32>>2]|0;y=J[n+4>>2];o=i+o|0;J[o>>2]=J[n>>2];J[o+4>>2]=y;J[o+8>>2]=J[n+8>>2];b=b+2|0;e=e+2|0;if((B|0)!=(e|0)){continue}break}}if(!(j&1)){break w}e=P(b,12);b=e+J[a+32>>2]|0;j=J[b+4>>2];e=e+i|0;J[e>>2]=J[b>>2];J[e+4>>2]=j;J[e+8>>2]=J[b+8>>2]}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=i;H[a+36|0]=1;J[a+28>>2]=q;b=J[a+24>>2]}b=J[a+32>>2]+P(b,12)|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;e=J[a+24>>2]+1|0;J[a+24>>2]=e;x:{if(J[a+28>>2]!=(e|0)){break x}j=e?e<<1:1;if((j|0)<=(e|0)){break x}y:{if(!j){i=0;break y}J[8369]=J[8369]+1;i=ia[J[6782]](P(j,12),16)|0;e=J[a+24>>2]}z:{if((e|0)<=0){break z}o=e&1;b=0;if((e|0)!=1){B=e&-2;e=0;while(1){n=P(b,12);q=n+J[a+32>>2]|0;y=J[q+4>>2];n=i+n|0;J[n>>2]=J[q>>2];J[n+4>>2]=y;J[n+8>>2]=J[q+8>>2];n=P(b|1,12);q=n+J[a+32>>2]|0;y=J[q+4>>2];n=i+n|0;J[n>>2]=J[q>>2];J[n+4>>2]=y;J[n+8>>2]=J[q+8>>2];b=b+2|0;e=e+2|0;if((B|0)!=(e|0)){continue}break}}if(!o){break z}e=P(b,12);b=e+J[a+32>>2]|0;q=J[b+4>>2];e=e+i|0;J[e>>2]=J[b>>2];J[e+4>>2]=q;J[e+8>>2]=J[b+8>>2]}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=i;H[a+36|0]=1;J[a+28>>2]=j;e=J[a+24>>2]}b=J[a+32>>2]+P(e,12)|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[a+24>>2]=J[a+24>>2]+1;i=J[a+32>>2];J[c+20>>2]=d;y=d+1|0;J[J[c+8>>2]+20>>2]=y;q=i+P(d,12)|0;J[q+16>>2]=-1;J[q+4>>2]=1;n=J[c+12>>2];d=J[n+104>>2];A:{if((d|0)>=0){b=k;k=d;break A}J[n+104>>2]=k;B:{C:{if((k|0)!=(l|0)){break C}e=l?l<<1:1;if((l|0)>=(e|0)){break C}if(e){J[8369]=J[8369]+1;d=ia[J[6782]](e<<2,16)|0}else{d=0}D:{if((l|0)>0){o=l&3;B=0;b=0;if(l-1>>>0>=3){E=l&-4;l=0;while(1){j=b<<2;J[j+d>>2]=J[f+j>>2];C=j|4;J[C+d>>2]=J[f+C>>2];C=j|8;J[C+d>>2]=J[f+C>>2];j=j|12;J[j+d>>2]=J[f+j>>2];b=b+4|0;l=l+4|0;if((E|0)!=(l|0)){continue}break}}if(!o){break D}while(1){l=b<<2;J[l+d>>2]=J[f+l>>2];b=b+1|0;B=B+1|0;if((o|0)!=(B|0)){continue}break}break D}if(!f){break B}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}break B}d=f;e=l}J[(k<<2)+d>>2]=n;b=k+1|0;f=d;l=e}J[q+8>>2]=k;J[(i+P(y,12)|0)+8>>2]=r;k=b}b=J[c+20>>2];d=b;if((p|0)>=0){J[J[a+32>>2]+P(b,12)>>2]=p-b;d=g}p=b;g=d;c=J[c>>2];if((D|0)!=(c|0)){continue}break}J[J[a+32>>2]+P(g,12)>>2]=p-g}c=r+1|0;if((k|0)>(c|0)){continue}break}l=0;while(1){q=J[J[(l<<2)+f>>2]+8>>2];b=q;if(b){while(1){c=J[b+20>>2];if((c|0)>=0){i=J[a+44>>2];E:{if((i|0)!=J[a+48>>2]){break E}p=i?i<<1:1;if((p|0)<=(i|0)){break E}F:{if(!p){d=0;break F}J[8369]=J[8369]+1;d=ia[J[6782]](p<<2,16)|0;i=J[a+44>>2]}k=J[a+52>>2];G:{H:{if((i|0)>0){e=0;c=0;if(i-1>>>0>=3){n=i&-4;j=0;while(1){g=c<<2;J[g+d>>2]=J[g+k>>2];o=g|4;J[o+d>>2]=J[k+o>>2];o=g|8;J[o+d>>2]=J[k+o>>2];g=g|12;J[g+d>>2]=J[g+k>>2];c=c+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}g=i&3;if(!g){break H}while(1){j=c<<2;J[j+d>>2]=J[k+j>>2];c=c+1|0;e=e+1|0;if((g|0)!=(e|0)){continue}break}break H}if(!k){break G}}if(k?K[a+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](k)}i=J[a+44>>2]}J[a+52>>2]=d;H[a+56|0]=1;J[a+48>>2]=p;c=J[b+20>>2]}J[J[a+52>>2]+(i<<2)>>2]=c;J[a+44>>2]=J[a+44>>2]+1;c=b;while(1){J[c+20>>2]=-1;c=J[J[c+8>>2]+4>>2];if((c|0)!=(b|0)){continue}break}}b=J[b>>2];if((q|0)!=(b|0)){continue}break}}b=(l|0)==(r|0);l=l+1|0;if(!b){continue}break}if(!f){break l}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}a=J[h+108>>2];if(!(a?!a|!K[h+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[h+108>>2]=0;H[h+112|0]=1;J[h+100>>2]=0;J[h+104>>2]=0;while(1){a=J[h+80>>2];if(a){J[h+80>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}break}while(1){a=J[h+64>>2];if(a){J[h+64>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}break}while(1){a=J[h+48>>2];if(!a){break a}J[h+48>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}}ga=h+144|0}function fg(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0;u=ga-16|0;ga=u;a:{b:{c:{d:{e:{f:{f=c-b|0;switch(f|0){case 1:break d;case 2:break e;case 0:break f;default:break b}}J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;break a}c=J[J[a+92>>2]+(b<<2)>>2];f=J[c+204>>2];b=c+112|0;k=J[c+88>>2];o=J[c+200>>2];i=(k|0)!=(o|0);g=J[c+92>>2];g:{if(!(i|(g|0)!=(f|0))){if(J[c+96>>2]==J[c+208>>2]){break c}f=J[c+96>>2]>J[c+208>>2];k=f?b:c;J[k+4>>2]=k;J[k>>2]=k;J[d+4>>2]=k;J[d>>2]=k;b=f?c:b;f=k;c=f;break g}J[c+4>>2]=b;J[c>>2]=b;J[c+116>>2]=c;J[c+112>>2]=c;n=(g-f|0)<0;j=n&(k|0)==(o|0);k=(k|0)<(o|0);o=j|k;J[d+4>>2]=o?b:c;J[d>>2]=o?c:b;if(n){k=c;f=b;break g}g=k&(i&(f|0)==(g|0));f=g?b:c;k=g?c:b}J[d+12>>2]=f;J[d+8>>2]=k;a=gg(a,c,b);J[a+4>>2]=a;J[a>>2]=a;J[c+8>>2]=a;a=J[a+8>>2];J[a+4>>2]=a;J[a>>2]=a;J[b+8>>2]=a;break a}c=J[J[a+92>>2]+(b<<2)>>2]}J[c+8>>2]=0;J[c+4>>2]=c;J[c>>2]=c;J[d+12>>2]=c;J[d+8>>2]=c;J[d+4>>2]=c;J[d>>2]=c;break a}f=((f|0)/2|0)+b|0;k=f;h:{if((c|0)<=(f|0)){break h}o=J[a+92>>2];g=J[(o+(f<<2)|0)-4>>2];i=J[g+88>>2];n=J[g+96>>2];j=J[g+92>>2];k=f;while(1){g=J[o+(k<<2)>>2];if((i|0)!=J[g+88>>2]|(j|0)!=J[g+92>>2]|(n|0)!=J[g+96>>2]){break h}k=k+1|0;if((k|0)<(c|0)){continue}break}k=c}fg(a,b,f,d);J[u+8>>2]=0;J[u+12>>2]=0;J[u>>2]=0;J[u+4>>2]=0;fg(a,k,c,u);r=a;k=0;h=ga-128|0;ga=h;i:{if(!J[u+4>>2]){break i}if(!J[d+4>>2]){a=J[u+4>>2];J[d>>2]=J[u>>2];J[d+4>>2]=a;a=J[u+12>>2];J[d+8>>2]=J[u+8>>2];J[d+12>>2]=a;break i}J[r+100>>2]=J[r+100>>2]-1;J[h+124>>2]=0;J[h+120>>2]=0;t=d;a=J[d+12>>2];d=J[u+8>>2];j:{k:{l:{if(J[a+88>>2]!=J[d+88>>2]|J[a+92>>2]!=J[d+92>>2]){break l}b=J[d+4>>2];if((b|0)==(d|0)){J[h+124>>2]=a;b=J[d+8>>2];a=0;if(!b){break k}J[h+120>>2]=J[b+12>>2];a=0;break j}c=J[d>>2];J[b>>2]=c;J[c+4>>2]=b;if(J[u>>2]==(d|0)){a=c;f=J[a+88>>2];g=J[b+88>>2];i=a;m:{if((f|0)<(g|0)){break m}if((f|0)==(g|0)){i=c;if(J[a+92>>2]<J[b+92>>2]){break m}}i=b}J[u>>2]=i}if(J[u+4>>2]!=(d|0)){break l}a=J[c+88>>2];d=J[b+88>>2];J[u+4>>2]=(a|0)>(d|0)|(a|0)==(d|0)&J[c+92>>2]>J[b+92>>2]?c:b}i=J[u>>2];n=J[t>>2];j=J[u+4>>2];p=J[t+4>>2];g=J[p+88>>2];b=J[j+88>>2]-g|0;n:{if((b|0)>0){a=j;c=p;while(1){d=a;f=J[a+92>>2];g=b;while(1){o:{b=J[c+92>>2];o=f-b|0;a=J[c+4>>2];if((a|0)==(c|0)){break o}e=J[a+92>>2]-b|0;if((e|0)>0){break o}b=J[a+88>>2];l=J[c+88>>2];if((b|0)!=(l|0)){l=b-l|0;if((l|0)>=0|(P(e,g)|0)>(P(o,l)|0)){break o}}g=J[d+88>>2]-b|0;c=a;continue}break}a=J[d+4>>2];if((d|0)==(a|0)){break n}e=J[a+88>>2];b=e-J[c+88>>2]|0;if((b|0)<=0){break n}f=J[a+92>>2]-f|0;if((f|0)>=0){break n}l=J[d+88>>2];if((l|0)==(e|0)){continue}e=e-l|0;if((e|0)>=0){break n}if((P(f,g)|0)<(P(e,o)|0)){continue}break}break n}if((b|0)<0){d=j;a=p;p:while(1){o=J[d+92>>2];f=J[d>>2];while(1){g=b;c=a;m=J[a+92>>2];e=o-m|0;q:{if((d|0)==(f|0)){break q}b=J[f+92>>2]-o|0;if((b|0)<0){break q}a=J[f+88>>2];l=J[d+88>>2];if((a|0)!=(l|0)){l=a-l|0;if((l|0)>=0|(P(b,g)|0)>(P(e,l)|0)){break q}}b=a-J[c+88>>2]|0;d=f;a=c;continue p}a=J[c>>2];if((c|0)==(a|0)){break n}l=J[a+88>>2];b=J[d+88>>2]-l|0;if((b|0)>=0){break n}m=J[a+92>>2]-m|0;if((m|0)<=0){break n}q=J[c+88>>2];if((q|0)==(l|0)){continue}l=l-q|0;if((l|0)>=0){break n}if((P(g,m)|0)<(P(e,l)|0)){continue}break}break}break n}b=J[p+92>>2];a=p;while(1){r:{c=a;a=J[a+4>>2];if((p|0)==(a|0)|(g|0)!=J[a+88>>2]){break r}d=b;b=J[a+92>>2];if((d|0)>=(b|0)){continue}}break}b=J[j+92>>2];a=j;while(1){d=a;a=J[a>>2];if((j|0)==(a|0)|(g|0)!=J[a+88>>2]){break n}f=b;b=J[a+92>>2];if((f|0)<=(b|0)){continue}break}}e=J[n+88>>2];g=e-J[i+88>>2]|0;s:{if((g|0)>0){b=i;a=n;while(1){f=b;e=J[b+92>>2];o=g;while(1){t:{g=J[a+92>>2];l=e-g|0;b=J[a>>2];if((b|0)==(a|0)){break t}m=J[b+92>>2]-g|0;if((m|0)>0){break t}q=J[a+88>>2];g=J[b+88>>2];if((q|0)!=(g|0)){q=q-g|0;if((q|0)>=0|(P(m,o)|0)>(P(l,q)|0)){break t}}o=g-J[f+88>>2]|0;a=b;continue}break}b=J[f>>2];if((f|0)==(b|0)){break s}m=J[b+88>>2];g=J[a+88>>2]-m|0;if((g|0)<=0){break s}e=J[b+92>>2]-e|0;if((e|0)>=0){break s}q=J[f+88>>2];if((q|0)==(m|0)){continue}m=q-m|0;if((m|0)>=0){break s}if((P(e,o)|0)<(P(m,l)|0)){continue}break}break s}if((g|0)<0){f=i;b=n;u:while(1){l=J[f+92>>2];o=J[f+4>>2];while(1){e=g;a=b;z=J[a+92>>2];m=l-z|0;v:{if((f|0)==(o|0)){break v}g=J[o+92>>2]-l|0;if((g|0)<0){break v}q=J[f+88>>2];b=J[o+88>>2];if((q|0)!=(b|0)){q=q-b|0;if((q|0)>=0|(P(e,g)|0)>(P(m,q)|0)){break v}}g=J[a+88>>2]-b|0;f=o;b=a;continue u}b=J[a+4>>2];if((b|0)==(a|0)){break s}q=J[b+88>>2];g=q-J[f+88>>2]|0;if((g|0)>=0){break s}z=J[b+92>>2]-z|0;if((z|0)<=0){break s}C=J[a+88>>2];if((C|0)==(q|0)){continue}q=C-q|0;if((q|0)>=0){break s}if((P(e,z)|0)<(P(m,q)|0)){continue}break}break}break s}g=J[n+92>>2];b=n;while(1){a=b;b=J[a>>2];if(!((n|0)==(b|0)|(e|0)!=J[b+88>>2])){f=g;g=J[b+92>>2];if((f|0)>=(g|0)){continue}}break}g=J[i+92>>2];b=i;while(1){f=b;b=J[b+4>>2];if((i|0)==(b|0)|(e|0)!=J[b+88>>2]){break s}o=g;g=J[b+92>>2];if((o|0)<=(g|0)){continue}break}}J[a+4>>2]=f;J[f>>2]=a;J[c>>2]=d;J[d+4>>2]=c;if(J[i+88>>2]<J[n+88>>2]){J[t>>2]=i}if(J[j+88>>2]>=J[p+88>>2]){J[t+4>>2]=j}J[t+12>>2]=J[u+12>>2];J[h+124>>2]=c;a=1}J[h+120>>2]=d}l=J[h+120>>2];w:{if(a){q=J[h+124>>2];i=J[q+96>>2];n=J[l+96>>2];j=J[q+92>>2];p=J[l+92>>2];b=J[q+8>>2];t=J[q+88>>2];m=J[l+88>>2];J[h+80>>2]=0;a=n-i|0;c=a;e=a>>31;a=p-j|0;d=a;f=a>>31;z=jI(c,e,a,f);C=ha;a=m-t|0;g=0-a|0;o=g>>31;a=jI(g,o,a,a>>31);B=ha;A=jI(d,f,d,f);D=a-A|0;B=B-(ha+(a>>>0<A>>>0)|0)|0;a=jI(g,o,c,e);A=0-a|0;H=0-(ha+((a|0)!=0)|0)|0;if(b){a=b;while(1){e=J[a+12>>2];v=J[e+92>>2];c=v-j|0;s=c>>31;w=jI(c,s,g,o);x=ha;E=w;w=J[e+88>>2];y=w-t|0;I=y>>31;K=jI(d,f,y,I);x:{if((E|0)!=(0-K|0)|(0-(ha+((K|0)!=0)|0)|0)!=(x|0)){break x}c=jI(z,C,c,s);x=ha;y=jI(A,H,y,I);s=y+c|0;c=ha+x|0;c=s>>>0<y>>>0?c+1|0:c;E=s;x=J[e+96>>2];e=x-i|0;s=jI(D,B,e,e>>31);e=E+s|0;c=ha+c|0;c=e>>>0<s>>>0?c+1|0:c;if(!e&(c|0)<=0|(c|0)<0){break x}y:{if(!k){break y}c=J[k+4>>2];if(J[k>>2]==(a|0)){if((a|0)!=(c|0)){break x}c=J[k+12>>2];e=J[J[a+8>>2]+12>>2];y=J[e+96>>2];s=J[c+96>>2]-y|0;I=J[e+92>>2];E=P(s,I-v|0);v=x-y|0;x=E+P(v,J[c+92>>2]-I|0)|0;x=jI(x,x>>31,d,f);y=ha;e=J[e+88>>2];c=P(v,e-J[c+88>>2]|0)+P(s,w-e|0)|0;s=jI(c,c>>31,g,o);e=s+x|0;c=ha+y|0;c=e>>>0<s>>>0?c+1|0:c;if(!e&(c|0)<=0|(c|0)<0){break y}break x}if((a|0)!=(c|0)){break x}}k=a}a=J[a>>2];if((b|0)!=(a|0)){continue}break}J[h+80>>2]=k}b=J[l+8>>2];e=0;J[h+56>>2]=0;if(b){a=b;while(1){i=J[a+12>>2];t=J[i+92>>2];c=t-p|0;j=c>>31;s=jI(c,j,g,o);v=ha;E=s;s=J[i+88>>2];w=s-m|0;x=w>>31;y=jI(d,f,w,x);z:{if((E|0)!=(0-y|0)|(0-(ha+((y|0)!=0)|0)|0)!=(v|0)){break z}c=jI(z,C,c,j);v=ha;w=jI(A,H,w,x);j=w+c|0;c=ha+v|0;c=j>>>0<w>>>0?c+1|0:c;w=j;v=J[i+96>>2];i=v-n|0;j=jI(D,B,i,i>>31);i=w+j|0;c=ha+c|0;c=j>>>0>i>>>0?c+1|0:c;if(!i&(c|0)<=0|(c|0)<0){break z}A:{if(!e){break A}if(J[e>>2]!=(a|0)){break z}if(J[e+4>>2]!=(a|0)){break A}c=J[e+12>>2];i=J[J[a+8>>2]+12>>2];w=J[i+96>>2];j=J[c+96>>2]-w|0;x=J[i+92>>2];E=P(j,x-t|0);t=v-w|0;v=E+P(t,J[c+92>>2]-x|0)|0;v=jI(v,v>>31,d,f);w=ha;i=J[i+88>>2];c=P(t,i-J[c+88>>2]|0)+P(j,s-i|0)|0;j=jI(c,c>>31,g,o);i=j+v|0;c=ha+w|0;c=j>>>0>i>>>0?c+1|0:c;if(!i&(c|0)<=0|(c|0)<0){break z}}e=a}a=J[a>>2];if((b|0)!=(a|0)){continue}break}J[h+56>>2]=e}B:{if(!(e|k)){break B}Tj(r,q,l,h+80|0,h+56|0);a=J[h+80>>2];if(a){q=J[a+12>>2];J[h+124>>2]=q}a=J[h+56>>2];if(!a){break B}l=J[a+12>>2];J[h+120>>2]=l}C=J[l+92>>2];z=J[l+88>>2];i=J[l+96>>2]+1|0;break w}C=J[l+92>>2];q=J[h+124>>2];z=J[l+88>>2]+1|0;i=J[l+96>>2]}a=q;c=l;n=0;g=0;o=0;j=1;f=0;b=0;t=0;while(1){k=J[c+96>>2];e=J[a+96>>2];m=J[a+92>>2];d=J[c+92>>2];D=J[a+88>>2];p=J[c+88>>2];J[h+116>>2]=-1;d=d-m|0;J[h+108>>2]=d;k=k-e|0;J[h+112>>2]=k;p=p-D|0;J[h+104>>2]=p;B=C-m|0;e=i-e|0;A=P(B,k)-P(e,d)|0;m=A>>31;J[h+80>>2]=A;J[h+84>>2]=m;s=P(e,p);e=z-D|0;H=s-P(e,k)|0;D=H>>31;J[h+88>>2]=H;J[h+92>>2]=D;e=P(d,e)-P(p,B)|0;B=e>>31;s=e;J[h+96>>2]=e;J[h+100>>2]=B;v=p>>31;e=jI(H,D,p,v);w=ha;x=d>>31;y=jI(A,m,d,x);J[h+72>>2]=e-y;J[h+76>>2]=w-(ha+(e>>>0<y>>>0)|0);e=m;m=k>>31;e=jI(A,e,k,m);A=ha;p=jI(s,B,p,v);J[h+64>>2]=e-p;J[h+68>>2]=A-(ha+(e>>>0<p>>>0)|0);d=jI(d,x,s,B);p=ha;k=jI(H,D,k,m);J[h+56>>2]=d-k;J[h+60>>2]=p-(ha+(d>>>0<k>>>0)|0);J[h+48>>2]=0;J[h+40>>2]=0;J[h+44>>2]=0;J[h+32>>2]=0;J[h+36>>2]=0;d=h+104|0;k=h+80|0;p=h+56|0;m=Sj(r,0,a,d,k,p,h+32|0);J[h+24>>2]=0;J[h+16>>2]=0;J[h+20>>2]=0;J[h+8>>2]=0;J[h+12>>2]=0;p=Sj(r,1,c,d,k,p,h+8|0);if(!(p|m)){b=gg(r,a,c);J[b+4>>2]=b;J[b>>2]=b;J[a+8>>2]=b;a=J[b+8>>2];J[a+4>>2]=a;J[a>>2]=a;J[c+8>>2]=a;break i}e=m?-1:1;if(!(!m|!p)){e=yc(h+32|0,h+8|0)}C:{D:{E:{if(j&1){break E}if((e|0)>=0){if(J[h+16>>2]|J[h+20>>2]|J[h+24>>2]>=0){break E}j=n;c=g;k=f;d=b;break D}if(J[h+40>>2]|J[h+44>>2]|J[h+48>>2]>=0){break E}J[h+4>>2]=m;k=f;d=b;break C}k=gg(r,a,c);d=k;if(f){J[f+4>>2]=k;d=b}J[k>>2]=f;j=J[k+8>>2];c=j;if(n){J[n>>2]=j;c=g}J[j+4>>2]=n}J[h+4>>2]=m;J[h>>2]=p;f=p;if(!e){Tj(r,J[h+124>>2],J[h+120>>2],h+4|0,h);f=J[h>>2]}if(!(!f|(e|0)<0)){F:{G:{if(F){a=J[F>>2];if((p|0)!=(a|0)){while(1){n=J[a+8>>2];b=0;i=0;g=J[a>>2];if((g|0)!=(a|0)){J[g+4>>2]=J[a+4>>2];J[J[a+4>>2]>>2]=g;i=g}J[J[n+12>>2]+8>>2]=i;i=J[n>>2];if((i|0)!=(n|0)){J[i+4>>2]=J[n+4>>2];J[J[n+4>>2]>>2]=i;b=i}J[J[a+12>>2]+8>>2]=b;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[n+16>>2]=0;J[n+8>>2]=0;J[n+12>>2]=0;J[n>>2]=0;J[n+4>>2]=0;J[n>>2]=J[r+56>>2];J[r+56>>2]=n;J[r+116>>2]=J[r+116>>2]-1;a=g;if((p|0)!=(a|0)){continue}break}}if(j){break G}break F}if(!j){o=p;break F}F=J[p+4>>2];o=c}J[F>>2]=c;J[c+4>>2]=F;J[j>>2]=p;J[p+4>>2]=j;f=J[h>>2];c=0}g=c;a=J[h+120>>2];i=J[a+96>>2];C=J[a+92>>2];z=J[a+88>>2];J[h+120>>2]=J[f+12>>2];F=J[f+8>>2];n=0;break C}n=j;g=c}H:{I:{if((e|0)<=0){e=J[h+4>>2];if(e){break I}}a=J[h+124>>2];break H}J:{K:{if(G){a=J[G+4>>2];if((m|0)!=(a|0)){while(1){j=J[a+8>>2];i=J[a+4>>2];b=0;c=0;f=J[a>>2];if((f|0)!=(a|0)){J[f+4>>2]=i;J[J[a+4>>2]>>2]=f;c=f}J[J[j+12>>2]+8>>2]=c;c=J[j>>2];if((c|0)!=(j|0)){J[c+4>>2]=J[j+4>>2];J[J[j+4>>2]>>2]=c;b=c}J[J[a+12>>2]+8>>2]=b;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[j+16>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[j>>2]=J[r+56>>2];J[r+56>>2]=j;J[r+116>>2]=J[r+116>>2]-1;a=i;if((m|0)!=(a|0)){continue}break}}if(!k){break J}J[d>>2]=G;a=G+4|0;break K}if(!k){t=m;break J}a=J[m>>2];J[d>>2]=a;t=d;a=a+4|0}J[a>>2]=d;J[m>>2]=k;J[k+4>>2]=m;d=0;e=J[h+4>>2]}a=J[h+124>>2];i=J[a+96>>2];C=J[a+92>>2];z=J[a+88>>2];a=J[e+12>>2];J[h+124>>2]=a;G=J[e+8>>2];k=0}c=J[h+120>>2];if((a|0)!=(q|0)|(l|0)!=(c|0)){j=0;f=k;b=d;continue}else{L:{if(!G){J[d>>2]=k;J[k+4>>2]=d;J[J[h+124>>2]+8>>2]=k;break L}a=J[G+4>>2];if((t|0)!=(a|0)){while(1){j=J[a+8>>2];f=J[a+4>>2];b=0;c=J[a>>2];if((c|0)!=(a|0)){J[c+4>>2]=f;J[J[a+4>>2]>>2]=c;b=c}J[J[j+12>>2]+8>>2]=b;i=J[j>>2];M:{if((j|0)==(i|0)){i=0;break M}J[i+4>>2]=J[j+4>>2];J[J[j+4>>2]>>2]=i}J[J[a+12>>2]+8>>2]=i;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[j+16>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[j>>2]=J[r+56>>2];J[r+56>>2]=j;J[r+116>>2]=J[r+116>>2]-1;a=f;if((t|0)!=(a|0)){continue}break}}if(!k){break L}J[d>>2]=G;J[G+4>>2]=d;J[t>>2]=k;J[k+4>>2]=t}if(!F){J[n>>2]=g;J[g+4>>2]=n;J[J[h+120>>2]+8>>2]=n;break i}a=J[F>>2];if((o|0)!=(a|0)){while(1){c=J[a+8>>2];i=0;b=J[a>>2];if((b|0)!=(a|0)){J[b+4>>2]=J[a+4>>2];J[J[a+4>>2]>>2]=b;i=b}J[J[c+12>>2]+8>>2]=i;i=J[c>>2];N:{if((c|0)==(i|0)){i=0;break N}J[i+4>>2]=J[c+4>>2];J[J[c+4>>2]>>2]=i}J[J[a+12>>2]+8>>2]=i;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;J[c>>2]=J[r+56>>2];J[r+56>>2]=c;J[r+116>>2]=J[r+116>>2]-1;a=b;if((o|0)!=(a|0)){continue}break}}if(!n){break i}J[F>>2]=g;J[g+4>>2]=F;J[n>>2]=o;J[o+4>>2]=n}break}}ga=h+128|0}ga=u+16|0}function Yg(a,b,c){var d=0,e=0,f=Q(0),g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=0,A=Q(0),B=0,C=0,D=0,E=Q(0),F=0,G=Q(0),M=Q(0);l=ga-32|0;ga=l;z=J[a+56>>2];a:{if((c-b|0)==1){b:{if(K[a+60|0]){b=J[a+116>>2]+(b<<4)|0;e=J[b+4>>2];c=J[a+136>>2]+(z<<4)|0;J[c>>2]=J[b>>2];J[c+4>>2]=e;break b}b=J[a+76>>2]+(b<<6)|0;e=J[b+4>>2];c=J[a+96>>2]+(z<<6)|0;J[c>>2]=J[b>>2];J[c+4>>2]=e;e=J[b+60>>2];J[c+56>>2]=J[b+56>>2];J[c+60>>2]=e;e=J[b+52>>2];J[c+48>>2]=J[b+48>>2];J[c+52>>2]=e;e=J[b+44>>2];J[c+40>>2]=J[b+40>>2];J[c+44>>2]=e;e=J[b+36>>2];J[c+32>>2]=J[b+32>>2];J[c+36>>2]=e;e=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=e;e=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=e}e=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=e;J[a+56>>2]=J[a+56>>2]+1;break a}p=c;e=b;g=c-e|0;c:{d:{e:{if((c|0)<=(e|0)){E=Q(g|0);break e}f:{if(!K[a+60|0]){d=J[a+76>>2];c=b;while(1){h=d+(c<<6)|0;y=Q(y+Q(Q(N[h+16>>2]+N[h>>2])*Q(.5)));s=Q(s+Q(Q(N[h+24>>2]+N[h+8>>2])*Q(.5)));t=Q(t+Q(Q(N[h+20>>2]+N[h+4>>2])*Q(.5)));c=c+1|0;if((p|0)!=(c|0)){continue}break}break f}v=N[a+12>>2];o=N[a+8>>2];q=N[a+44>>2];k=N[a+40>>2];d=J[a+116>>2];n=N[a+4>>2];f=N[a+36>>2];c=b;while(1){h=d+(c<<4)|0;y=Q(y+Q(Q(Q(Q(Q(L[h+6>>1])/f)+n)+Q(Q(Q(L[h>>1])/f)+n))*Q(.5)));s=Q(s+Q(Q(Q(Q(Q(L[h+10>>1])/q)+v)+Q(Q(Q(L[h+4>>1])/q)+v))*Q(.5)));t=Q(t+Q(Q(Q(Q(Q(L[h+8>>1])/k)+o)+Q(Q(Q(L[h+2>>1])/k)+o))*Q(.5)));c=c+1|0;if((p|0)!=(c|0)){continue}break}}E=Q(g|0);if((e|0)<(p|0)){break d}}s=Q(0);t=Q(0);break c}f=Q(Q(1)/E);G=Q(f*s);M=Q(f*t);y=Q(f*y);t=Q(0);if(!K[a+60|0]){c=J[a+76>>2];s=Q(0);while(1){d=c+(e<<6)|0;f=Q(Q(Q(N[d+16>>2]+N[d>>2])*Q(.5))-y);x=Q(x+Q(f*f));f=Q(Q(Q(N[d+24>>2]+N[d+8>>2])*Q(.5))-G);t=Q(t+Q(f*f));f=Q(Q(Q(N[d+20>>2]+N[d+4>>2])*Q(.5))-M);s=Q(s+Q(f*f));e=e+1|0;if((p|0)!=(e|0)){continue}break}break c}A=N[a+12>>2];v=N[a+8>>2];o=N[a+44>>2];q=N[a+40>>2];c=J[a+116>>2];k=N[a+4>>2];n=N[a+36>>2];s=Q(0);while(1){d=c+(e<<4)|0;f=Q(Q(Q(Q(Q(Q(L[d+6>>1])/n)+k)+Q(Q(Q(L[d>>1])/n)+k))*Q(.5))-y);x=Q(x+Q(f*f));f=Q(Q(Q(Q(Q(Q(L[d+10>>1])/o)+A)+Q(Q(Q(L[d+4>>1])/o)+A))*Q(.5))-G);t=Q(t+Q(f*f));f=Q(Q(Q(Q(Q(Q(L[d+8>>1])/q)+v)+Q(Q(Q(L[d+2>>1])/q)+v))*Q(.5))-M);s=Q(s+Q(f*f));e=e+1|0;if((p|0)!=(e|0)){continue}break}}k=Q(Q(1)/Q(E+Q(-1)));n=Q(k*x);f=Q(k*s);c=n<f;g=Q(k*t)>(c?f:n)?2:c;s=Q(0);t=Q(0);x=Q(0);i=ga-96|0;J[i+28>>2]=0;w=p-b|0;d=(b|0)>=(p|0);g:{if(d){break g}if(!K[a+60|0]){e=J[a+76>>2];c=b;while(1){h=e+(c<<6)|0;x=Q(Q(Q(N[h+16>>2]+N[h>>2])*Q(.5))+x);s=Q(Q(Q(N[h+24>>2]+N[h+8>>2])*Q(.5))+s);t=Q(Q(Q(N[h+20>>2]+N[h+4>>2])*Q(.5))+t);c=c+1|0;if((p|0)!=(c|0)){continue}break}break g}v=N[a+12>>2];o=N[a+8>>2];q=N[a+44>>2];k=N[a+40>>2];e=J[a+116>>2];n=N[a+4>>2];f=N[a+36>>2];c=b;while(1){h=e+(c<<4)|0;x=Q(Q(Q(Q(Q(Q(L[h+6>>1])/f)+n)+Q(Q(Q(L[h>>1])/f)+n))*Q(.5))+x);s=Q(Q(Q(Q(Q(Q(L[h+10>>1])/q)+v)+Q(Q(Q(L[h+4>>1])/q)+v))*Q(.5))+s);t=Q(Q(Q(Q(Q(Q(L[h+8>>1])/k)+o)+Q(Q(Q(L[h+2>>1])/k)+o))*Q(.5))+t);c=c+1|0;if((p|0)!=(c|0)){continue}break}}f=Q(Q(1)/Q(w|0));N[i+24>>2]=f*s;N[i+20>>2]=f*t;N[i+16>>2]=f*x;e=b;if(!d){c=g<<2;A=N[c+(i+16|0)>>2];m=c+i|0;c=b;e=c;while(1){d=K[a+60|0];h:{if(d){g=J[a+116>>2]+(c<<4)|0;v=N[a+44>>2];o=N[a+12>>2];s=Q(Q(Q(L[g+4>>1])/v)+o);q=N[a+40>>2];k=N[a+8>>2];t=Q(Q(Q(L[g+2>>1])/q)+k);n=N[a+36>>2];f=N[a+4>>2];x=Q(Q(Q(L[g>>1])/n)+f);y=Q(Q(Q(L[g+10>>1])/v)+o);E=Q(Q(Q(L[g+8>>1])/q)+k);f=Q(Q(Q(L[g+6>>1])/n)+f);break h}g=J[a+76>>2]+(c<<6)|0;s=N[g+8>>2];t=N[g+4>>2];x=N[g>>2];y=N[g+24>>2];E=N[g+20>>2];f=N[g+16>>2]}J[i+12>>2]=0;N[i+8>>2]=Q(y+s)*Q(.5);N[i+4>>2]=Q(E+t)*Q(.5);N[i>>2]=Q(f+x)*Q(.5);if(A<N[m>>2]){i:{if(d){g=J[a+116>>2];u=g+(c<<4)|0;h=u;d=J[h+12>>2];J[i+40>>2]=J[h+8>>2];J[i+44>>2]=d;d=J[h+4>>2];J[i+32>>2]=J[h>>2];J[i+36>>2]=d;h=g;g=e<<4;h=h+g|0;d=J[h+4>>2];J[u>>2]=J[h>>2];J[u+4>>2]=d;d=J[h+12>>2];J[u+8>>2]=J[h+8>>2];J[u+12>>2]=d;d=J[i+36>>2];g=g+J[a+116>>2]|0;J[g>>2]=J[i+32>>2];J[g+4>>2]=d;d=J[i+44>>2];J[g+8>>2]=J[i+40>>2];J[g+12>>2]=d;break i}h=J[a+76>>2];j=h+(c<<6)|0;d=J[j+60>>2];J[i+88>>2]=J[j+56>>2];J[i+92>>2]=d;d=J[j+52>>2];J[i+80>>2]=J[j+48>>2];J[i+84>>2]=d;d=J[j+44>>2];J[i+72>>2]=J[j+40>>2];J[i+76>>2]=d;d=J[j+36>>2];u=i- -64|0;g=u;J[g>>2]=J[j+32>>2];J[g+4>>2]=d;d=J[j+28>>2];J[i+56>>2]=J[j+24>>2];J[i+60>>2]=d;d=J[j+20>>2];J[i+48>>2]=J[j+16>>2];J[i+52>>2]=d;d=J[j+12>>2];J[i+40>>2]=J[j+8>>2];J[i+44>>2]=d;d=J[j+4>>2];J[i+32>>2]=J[j>>2];J[i+36>>2]=d;g=e<<6;h=g+h|0;d=J[h+4>>2];J[j>>2]=J[h>>2];J[j+4>>2]=d;d=J[h+12>>2];J[j+8>>2]=J[h+8>>2];J[j+12>>2]=d;d=J[h+20>>2];J[j+16>>2]=J[h+16>>2];J[j+20>>2]=d;d=J[h+28>>2];J[j+24>>2]=J[h+24>>2];J[j+28>>2]=d;d=J[h+36>>2];J[j+32>>2]=J[h+32>>2];J[j+36>>2]=d;d=J[h+44>>2];J[j+40>>2]=J[h+40>>2];J[j+44>>2]=d;d=J[h+52>>2];J[j+48>>2]=J[h+48>>2];J[j+52>>2]=d;d=J[h+60>>2];J[j+56>>2]=J[h+56>>2];J[j+60>>2]=d;d=J[i+36>>2];g=g+J[a+76>>2]|0;J[g>>2]=J[i+32>>2];J[g+4>>2]=d;d=J[i+44>>2];J[g+8>>2]=J[i+40>>2];J[g+12>>2]=d;d=J[i+52>>2];J[g+16>>2]=J[i+48>>2];J[g+20>>2]=d;d=J[i+60>>2];J[g+24>>2]=J[i+56>>2];J[g+28>>2]=d;d=J[u+4>>2];J[g+32>>2]=J[u>>2];J[g+36>>2]=d;d=J[i+76>>2];J[g+40>>2]=J[i+72>>2];J[g+44>>2]=d;d=J[i+84>>2];J[g+48>>2]=J[i+80>>2];J[g+52>>2]=d;d=J[i+92>>2];J[g+56>>2]=J[i+88>>2];J[g+60>>2]=d}e=e+1|0}c=c+1|0;if((p|0)!=(c|0)){continue}break}}c=(w>>1)+b|0;g=c;c=(w|0)/3|0;i=(b+c|0)>=(e|0)?g:(p+(c^-1)|0)<=(e|0)?g:e;F=J[a+56>>2];j:{if(K[a+60|0]){v=N[a+40>>2];o=N[a+8>>2];q=N[a+24>>2];k=N[a+44>>2];n=N[a+12>>2];f=N[a+28>>2];c=J[a+136>>2]+(F<<4)|0;A=Q(Q(N[a+20>>2]-N[a+4>>2])*N[a+36>>2]);k:{if(A<Q(4294967296)&A>=Q(0)){e=~~A>>>0;break k}e=0}I[c>>1]=e&65534;f=Q(Q(f-n)*k);l:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break l}e=0}I[c+4>>1]=e&65534;f=Q(Q(q-o)*v);m:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break m}e=0}I[c+2>>1]=e&65534;break j}c=J[a+24>>2];e=J[a+96>>2]+(F<<6)|0;J[e>>2]=J[a+20>>2];J[e+4>>2]=c;c=J[a+32>>2];J[e+8>>2]=J[a+28>>2];J[e+12>>2]=c}c=J[a+56>>2];n:{if(K[a+60|0]){k=N[a+40>>2];o=N[a+8>>2];n=N[a+44>>2];q=N[a+12>>2];c=J[a+136>>2]+(c<<4)|0;f=N[a+4>>2];f=Q(Q(Q(f-f)*N[a+36>>2])+Q(1));o:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break o}e=0}I[c+6>>1]=e|1;f=Q(Q(Q(q-q)*n)+Q(1));p:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break p}e=0}I[c+10>>1]=e|1;f=Q(Q(Q(o-o)*k)+Q(1));q:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break q}e=0}I[c+8>>1]=e|1;break n}e=J[a+96>>2]+(c<<6)|0;c=J[a+8>>2];J[e+16>>2]=J[a+4>>2];J[e+20>>2]=c;c=J[a+16>>2];J[e+24>>2]=J[a+12>>2];J[e+28>>2]=c}if((b|0)<(p|0)){c=b;while(1){r=J[a+56>>2];r:{if(K[a+60|0]){h=J[a+116>>2]+(c<<4)|0;g=L[h+4>>1];d=L[h+2>>1];e=L[h>>1];v=N[a+44>>2];o=N[a+40>>2];q=N[a+36>>2];J[l+28>>2]=0;k=N[a+4>>2];N[l+16>>2]=Q(Q(e>>>0)/q)+k;n=N[a+8>>2];N[l+20>>2]=Q(Q(d>>>0)/o)+n;f=N[a+12>>2];N[l+24>>2]=Q(Q(g>>>0)/v)+f;g=L[h+6>>1];d=L[h+8>>1];e=L[h+10>>1];J[l+12>>2]=0;N[l+8>>2]=f+Q(Q(e>>>0)/v);N[l+4>>2]=n+Q(Q(d>>>0)/o);N[l>>2]=k+Q(Q(g>>>0)/q);break r}d=J[a+76>>2]+(c<<6)|0;e=J[d+12>>2];J[l+24>>2]=J[d+8>>2];J[l+28>>2]=e;e=J[d+4>>2];J[l+16>>2]=J[d>>2];J[l+20>>2]=e;e=J[d+28>>2];J[l+8>>2]=J[d+24>>2];J[l+12>>2]=e;e=J[d+20>>2];J[l>>2]=J[d+16>>2];J[l+4>>2]=e}s:{if(K[a+60|0]){q=N[a+12>>2];k=N[a+44>>2];f=Q(Q(N[l+24>>2]-q)*k);t:{if(f<Q(4294967296)&f>=Q(0)){m=~~f>>>0;break t}m=0}n=N[a+8>>2];f=N[a+40>>2];o=Q(Q(N[l+20>>2]-n)*f);u:{if(o<Q(4294967296)&o>=Q(0)){h=~~o>>>0;break u}h=0}k=Q(Q(k*Q(N[l+8>>2]-q))+Q(1));v:{if(k<Q(4294967296)&k>=Q(0)){g=~~k>>>0;break v}g=0}f=Q(Q(f*Q(N[l+4>>2]-n))+Q(1));w:{if(f<Q(4294967296)&f>=Q(0)){d=~~f>>>0;break w}d=0}n=N[a+4>>2];f=N[a+36>>2];k=Q(Q(N[l+16>>2]-n)*f);x:{if(k<Q(4294967296)&k>=Q(0)){e=~~k>>>0;break x}e=0}w=e&65534;B=J[a+136>>2];j=B+(r<<4)|0;u=w>>>0>=L[j>>1];f=Q(Q(f*Q(N[l>>2]-n))+Q(1));y:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break y}e=0}if(!u){I[j>>1]=w}e=e|1;u=B+(r<<4)|0;if(e>>>0>L[u+6>>1]){I[u+6>>1]=e}e=h&65534;if(e>>>0<L[u+2>>1]){I[u+2>>1]=e}e=d|1;h=B+(r<<4)|0;if(e>>>0>L[h+8>>1]){I[h+8>>1]=e}e=m&65534;if(e>>>0<L[h+4>>1]){I[h+4>>1]=e}e=g|1;d=B+(r<<4)|0;if(e>>>0<=L[d+10>>1]){break s}I[d+10>>1]=e;break s}f=N[l+16>>2];d=J[a+96>>2];e=d+(r<<6)|0;if(f<N[e>>2]){N[e>>2]=f}f=N[l+20>>2];if(f<N[e+4>>2]){N[e+4>>2]=f}f=N[l+24>>2];e=d+(r<<6)|0;if(f<N[e+8>>2]){N[e+8>>2]=f}f=N[l+28>>2];if(f<N[e+12>>2]){N[e+12>>2]=f}f=N[l>>2];e=d+(r<<6)|0;if(f>N[e+16>>2]){N[e+16>>2]=f}f=N[l+4>>2];if(f>N[e+20>>2]){N[e+20>>2]=f}f=N[l+8>>2];e=d+(r<<6)|0;if(f>N[e+24>>2]){N[e+24>>2]=f}f=N[l+12>>2];if(!(f>N[e+28>>2])){break s}N[e+28>>2]=f}c=c+1|0;if((p|0)!=(c|0)){continue}break}}r=J[a+56>>2]+1|0;J[a+56>>2]=r;Yg(a,b,i);B=J[a+56>>2];Yg(a,i,p);c=K[a+60|0];i=J[a+56>>2]-z|0;if(!(!c|(i|0)<129)){z=0;p=0;j=J[a+136>>2];b=J[(j+(B<<4)|0)+12>>2];u=(b|0)>=0?1:0-b|0;b=J[(j+(r<<4)|0)+12>>2];h=(b|0)>=0?1:0-b|0;if(h>>>0<=128){c=J[a+152>>2];b=c;z:{if((c|0)!=J[a+156>>2]){break z}b=c;w=c?c<<1:1;if((c|0)>=(w|0)){break z}if(w){J[8369]=J[8369]+1;z=ia[J[6782]](w<<5,16)|0;b=J[a+152>>2]}else{b=c}A:{if((b|0)<=0){break A}if((b|0)!=1){g=b&-2;while(1){m=C<<5;d=m+z|0;D=m+J[a+160>>2]|0;e=J[D+4>>2];J[d>>2]=J[D>>2];J[d+4>>2]=e;e=J[D+28>>2];J[d+24>>2]=J[D+24>>2];J[d+28>>2]=e;e=J[D+20>>2];J[d+16>>2]=J[D+16>>2];J[d+20>>2]=e;e=J[D+12>>2];J[d+8>>2]=J[D+8>>2];J[d+12>>2]=e;e=m|32;d=e+z|0;m=e+J[a+160>>2]|0;e=J[m+4>>2];J[d>>2]=J[m>>2];J[d+4>>2]=e;e=J[m+12>>2];J[d+8>>2]=J[m+8>>2];J[d+12>>2]=e;e=J[m+20>>2];J[d+16>>2]=J[m+16>>2];J[d+20>>2]=e;e=J[m+28>>2];J[d+24>>2]=J[m+24>>2];J[d+28>>2]=e;C=C+2|0;p=p+2|0;if((g|0)!=(p|0)){continue}break}}if(!(b&1)){break A}b=C<<5;e=b+z|0;d=b+J[a+160>>2]|0;b=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=b;b=J[d+28>>2];J[e+24>>2]=J[d+24>>2];J[e+28>>2]=b;b=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=b;b=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=b}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=z;H[a+164|0]=1;J[a+156>>2]=w;b=J[a+152>>2]}J[a+152>>2]=b+1;c=J[a+160>>2]+(c<<5)|0;b=j+(r<<4)|0;I[c>>1]=L[b>>1];I[c+2>>1]=L[b+2>>1];I[c+4>>1]=L[b+4>>1];I[c+6>>1]=L[b+6>>1];I[c+8>>1]=L[b+8>>1];b=L[b+10>>1];J[c+16>>2]=h;J[c+12>>2]=r;I[c+10>>1]=b}if((u|0)<=128){e=J[a+152>>2];b=e;B:{if((e|0)!=J[a+156>>2]){break B}b=e;w=e?e<<1:1;if((e|0)>=(w|0)){break B}C:{if(!w){b=0;c=e;break C}J[8369]=J[8369]+1;b=ia[J[6782]](w<<5,16)|0;c=J[a+152>>2]}D:{if((c|0)<=0){break D}C=0;if((c|0)!=1){h=c&-2;p=0;while(1){m=C<<5;g=m+b|0;r=m+J[a+160>>2]|0;d=J[r+4>>2];J[g>>2]=J[r>>2];J[g+4>>2]=d;d=J[r+28>>2];J[g+24>>2]=J[r+24>>2];J[g+28>>2]=d;d=J[r+20>>2];J[g+16>>2]=J[r+16>>2];J[g+20>>2]=d;d=J[r+12>>2];J[g+8>>2]=J[r+8>>2];J[g+12>>2]=d;d=m|32;g=d+b|0;m=d+J[a+160>>2]|0;d=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=d;d=J[m+12>>2];J[g+8>>2]=J[m+8>>2];J[g+12>>2]=d;d=J[m+20>>2];J[g+16>>2]=J[m+16>>2];J[g+20>>2]=d;d=J[m+28>>2];J[g+24>>2]=J[m+24>>2];J[g+28>>2]=d;C=C+2|0;p=p+2|0;if((h|0)!=(p|0)){continue}break}}if(!(c&1)){break D}c=C<<5;d=c+b|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[d>>2]=J[g>>2];J[d+4>>2]=c;c=J[g+28>>2];J[d+24>>2]=J[g+24>>2];J[d+28>>2]=c;c=J[g+20>>2];J[d+16>>2]=J[g+16>>2];J[d+20>>2]=c;c=J[g+12>>2];J[d+8>>2]=J[g+8>>2];J[d+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=b;H[a+164|0]=1;J[a+156>>2]=w;b=J[a+152>>2]}J[a+152>>2]=b+1;c=J[a+160>>2]+(e<<5)|0;b=j+(B<<4)|0;I[c>>1]=L[b>>1];I[c+2>>1]=L[b+2>>1];I[c+4>>1]=L[b+4>>1];I[c+6>>1]=L[b+6>>1];I[c+8>>1]=L[b+8>>1];b=L[b+10>>1];J[c+16>>2]=u;J[c+12>>2]=B;I[c+10>>1]=b}J[a+168>>2]=J[a+152>>2];c=K[a+60|0]}if(c&255){J[(J[a+136>>2]+(F<<4)|0)+12>>2]=0-i;break a}J[(J[a+96>>2]+(F<<6)|0)+32>>2]=i}ga=l+32|0}function ud(a,b,c,d,e,f){var g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),S=0,T=Q(0),U=Q(0),V=0,W=0,X=0,Y=0,Z=0,_=0;i=ga-512|0;ga=i;a:{if((ia[J[J[d>>2]+80>>2]](d)|0)==2){g=(f?36:28)+a|0;j=J[d+152>>2];h=j-1|0;J[g>>2]=h;if(!j){break a}while(1){ud(a,b,c,J[J[d+160>>2]+(h<<2)>>2],e,f);j=J[g>>2];h=j-1|0;J[g>>2]=h;if(j){continue}break}break a}h=(ia[J[J[d>>2]+80>>2]](d)|0)!=1;g=J[e+4>>2];if(!(h|(g|0)!=28)){g=ga-144|0;ga=g;h=J[b+12>>2];j=J[h+12>>2];J[g+88>>2]=J[h+8>>2];J[g+92>>2]=j;j=J[h+4>>2];J[g+80>>2]=J[h>>2];J[g+84>>2]=j;j=J[h+28>>2];J[g+104>>2]=J[h+24>>2];J[g+108>>2]=j;j=J[h+20>>2];J[g+96>>2]=J[h+16>>2];J[g+100>>2]=j;j=J[h+44>>2];J[g+120>>2]=J[h+40>>2];J[g+124>>2]=j;j=J[h+36>>2];J[g+112>>2]=J[h+32>>2];J[g+116>>2]=j;j=J[h+60>>2];J[g+136>>2]=J[h+56>>2];J[g+140>>2]=j;j=J[h+52>>2];J[g+128>>2]=J[h+48>>2];J[g+132>>2]=j;h=J[c+12>>2];o=N[h+52>>2];p=N[h+56>>2];q=N[h+20>>2];r=N[h+24>>2];s=N[h+8>>2];t=N[h>>2];v=N[h+4>>2];w=N[h+48>>2];x=N[h+16>>2];k=N[e+56>>2];l=N[e+48>>2];m=N[e+52>>2];u=Q(Q(N[h+40>>2]*k)+Q(Q(N[h+32>>2]*l)+Q(N[h+36>>2]*m)));N[g+72>>2]=u;q=Q(Q(r*k)+Q(Q(x*l)+Q(q*m)));N[g+68>>2]=q;r=Q(Q(s*k)+Q(Q(t*l)+Q(v*m)));N[g+64>>2]=r;l=Q(Q(Q(p*k)+Q(Q(w*l)+Q(o*m)))+N[e+64>>2]);N[g+76>>2]=l;ia[J[J[d>>2]+8>>2]](d,g+80|0,g+32|0,g+48|0);k=Q(ia[J[J[e>>2]+48>>2]](e));m=Q(k+N[g+52>>2]);N[g+52>>2]=m;o=Q(k+N[g+56>>2]);N[g+56>>2]=o;s=Q(N[g+36>>2]-k);N[g+36>>2]=s;p=Q(k+N[g+48>>2]);N[g+48>>2]=p;t=Q(N[g+32>>2]-k);N[g+32>>2]=t;k=Q(N[g+40>>2]-k);N[g+40>>2]=k;k=Q(Q(k+o)*Q(.5));t=Q(Q(t+p)*Q(.5));s=Q(Q(s+m)*Q(.5));v=Q(Q(u*k)+Q(Q(r*t)+Q(s*q)));k=Q(Q(Q(o-k)*Q(R(u)))+Q(Q(Q(p-t)*Q(R(r)))+Q(Q(m-s)*Q(R(q)))));if(!(l>Q(Q(v+k)+Q(9.999999974752427e-7))|!(Q(l+Q(9.999999974752427e-7))>=Q(v-k)))){ia[J[J[d>>2]+112>>2]](d);k=Q(ia[J[J[d>>2]+48>>2]](d));l=Q(ia[J[J[e>>2]+48>>2]](e));h=J[d+184>>2];if(h){r=Q(k+l);while(1){h=h-1|0;e=J[d+180>>2]+P(h,J[d+192>>2])|0;b:{if(J[d+188>>2]==1){l=Q(O[e+8>>3]*+N[d+160>>2]);m=Q(O[e>>3]*+N[d+156>>2]);k=Q(O[e+16>>3]*+N[d+164>>2]);break b}m=Q(N[e>>2]*N[d+156>>2]);N[g+16>>2]=m;l=Q(N[e+4>>2]*N[d+160>>2]);N[g+20>>2]=l;k=Q(N[e+8>>2]*N[d+164>>2])}J[g+28>>2]=0;o=Q(Q(Q(k*N[g+104>>2])+Q(Q(m*N[g+96>>2])+Q(l*N[g+100>>2])))+N[g+132>>2]);N[g+20>>2]=o;u=N[g+68>>2];p=Q(Q(Q(k*N[g+88>>2])+Q(Q(m*N[g+80>>2])+Q(l*N[g+84>>2])))+N[g+128>>2]);N[g+16>>2]=p;q=N[g+64>>2];k=Q(Q(Q(k*N[g+120>>2])+Q(Q(m*N[g+112>>2])+Q(l*N[g+116>>2])))+N[g+136>>2]);N[g+24>>2]=k;l=N[g+72>>2];k=Q(Q(Q(Q(k*l)+Q(Q(p*q)+Q(o*u)))-N[g+76>>2])-r);c:{if(!(k<Q(0))){break c}if(f){J[g+12>>2]=0;N[g+8>>2]=-l;N[g+4>>2]=-u;N[g>>2]=-q;e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);e=J[a+12>>2];if(!e){e=J[a+4>>2];e=ia[J[J[e>>2]+12>>2]](e,J[c+8>>2],J[b+8>>2])|0;J[a+12>>2]=e}j=J[a+16>>2];J[j+4>>2]=e;ia[J[J[j>>2]+16>>2]](j,g,g+16|0,k);break c}e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);e=J[a+12>>2];if(!e){e=J[a+4>>2];e=ia[J[J[e>>2]+12>>2]](e,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=e}j=J[a+16>>2];J[j+4>>2]=e;ia[J[J[j>>2]+16>>2]](j,g- -64|0,g+16|0,k)}if(h){continue}break}}ia[J[J[d>>2]+116>>2]](d)}ga=g+144|0;break a}if((g|0)==31){g=ga-96|0;ga=g;y=J[e+16>>2];if(y){h=J[c+12>>2];T=N[h+56>>2];U=N[h+52>>2];k=N[h+40>>2];l=N[h+36>>2];m=N[h+24>>2];u=N[h+20>>2];G=N[h+48>>2];q=N[h+32>>2];r=N[h+16>>2];o=N[h+8>>2];p=N[h+4>>2];s=N[h>>2];n=J[a+16>>2];while(1){y=y-1|0;h=J[e+24>>2]+P(y,80)|0;F=J[h+64>>2];t=N[h+56>>2];v=N[h+48>>2];w=N[h+52>>2];x=N[h+32>>2];z=N[h>>2];A=N[h+16>>2];B=N[h+36>>2];C=N[h+4>>2];D=N[h+20>>2];I=N[h+40>>2];L=N[h+8>>2];M=N[h+24>>2];J[g+92>>2]=0;J[g+76>>2]=0;J[g+60>>2]=0;J[g+44>>2]=0;N[g+72>>2]=Q(I*k)+Q(Q(L*q)+Q(l*M));N[g+68>>2]=Q(B*k)+Q(Q(C*q)+Q(l*D));N[g+64>>2]=Q(x*k)+Q(Q(z*q)+Q(l*A));N[g+56>>2]=Q(I*m)+Q(Q(L*r)+Q(u*M));N[g+52>>2]=Q(B*m)+Q(Q(C*r)+Q(u*D));N[g+48>>2]=Q(x*m)+Q(Q(z*r)+Q(u*A));N[g+40>>2]=Q(I*o)+Q(Q(L*s)+Q(p*M));N[g+36>>2]=Q(B*o)+Q(Q(C*s)+Q(p*D));N[g+32>>2]=Q(x*o)+Q(Q(z*s)+Q(p*A));N[g+88>>2]=T+Q(Q(t*k)+Q(Q(v*q)+Q(l*w)));N[g+84>>2]=U+Q(Q(t*m)+Q(Q(v*r)+Q(u*w)));N[g+80>>2]=G+Q(Q(t*o)+Q(Q(v*s)+Q(p*w)));h=J[c+8>>2];J[g+28>>2]=y;J[g+24>>2]=-1;J[g+16>>2]=h;J[g+12>>2]=F;J[g+8>>2]=c;J[g+20>>2]=g+32;j=J[n+8>>2];if((h|0)==J[j+8>>2]){n=n+8|0}else{j=J[n+12>>2];n=n+12|0}h=g+8|0;J[n>>2]=h;ud(a,b,h,d,F,f);n=J[a+16>>2];J[n+(J[J[n+8>>2]+8>>2]==J[g+16>>2]?8:12)>>2]=j;if(y){continue}break}}ga=g+96|0;break a}if(g-21>>>0<=8){g=ga-128|0;ga=g;H[g+116|0]=f;J[g+112>>2]=d;J[g+100>>2]=a;J[g+96>>2]=17488;J[g+104>>2]=b;J[g+108>>2]=c;N[g+120>>2]=ia[J[J[e>>2]+48>>2]](e);a=J[c+12>>2];t=N[a+52>>2];v=N[a+56>>2];b=J[b+12>>2];w=N[b+52>>2];x=N[b+56>>2];k=N[a+20>>2];l=N[a+36>>2];z=N[b+20>>2];A=N[b+36>>2];B=N[b+24>>2];m=N[a+24>>2];C=N[b+40>>2];u=N[a+40>>2];D=N[b+32>>2];q=N[a+32>>2];I=N[b>>2];r=N[a>>2];L=N[b+16>>2];o=N[a+16>>2];G=N[a+48>>2];M=N[b+48>>2];p=N[a+4>>2];T=N[b+4>>2];U=N[b+8>>2];s=N[a+8>>2];J[g+92>>2]=0;J[g+76>>2]=0;J[g+60>>2]=0;N[g+72>>2]=Q(C*u)+Q(Q(U*s)+Q(m*B));N[g+68>>2]=Q(A*u)+Q(Q(T*s)+Q(m*z));N[g+56>>2]=Q(C*l)+Q(Q(U*p)+Q(k*B));N[g+52>>2]=Q(A*l)+Q(Q(T*p)+Q(k*z));G=Q(-G);N[g+88>>2]=Q(Q(Q(s*G)-Q(m*t))-Q(u*v))+Q(Q(x*u)+Q(Q(M*s)+Q(m*w)));N[g+84>>2]=Q(Q(Q(p*G)-Q(k*t))-Q(l*v))+Q(Q(x*l)+Q(Q(M*p)+Q(k*w)));J[g+44>>2]=0;N[g+32>>2]=Q(D*q)+Q(Q(I*r)+Q(o*L));N[g+64>>2]=Q(D*u)+Q(Q(I*s)+Q(m*L));N[g+48>>2]=Q(D*l)+Q(Q(I*p)+Q(k*L));N[g+40>>2]=Q(C*q)+Q(Q(U*r)+Q(o*B));N[g+36>>2]=Q(A*q)+Q(Q(T*r)+Q(o*z));N[g+80>>2]=Q(Q(Q(r*G)-Q(o*t))-Q(q*v))+Q(Q(x*q)+Q(Q(M*r)+Q(o*w)));a=g+16|0;ia[J[J[d>>2]+8>>2]](d,g+32|0,a,g);ia[J[J[e>>2]+64>>2]](e,g+96|0,a,g);ga=g+128|0;break a}g=J[b+12>>2];h=J[g+12>>2];J[i+456>>2]=J[g+8>>2];J[i+460>>2]=h;h=J[g+4>>2];J[i+448>>2]=J[g>>2];J[i+452>>2]=h;h=J[g+28>>2];J[i+472>>2]=J[g+24>>2];J[i+476>>2]=h;h=J[g+20>>2];J[i+464>>2]=J[g+16>>2];J[i+468>>2]=h;h=J[g+44>>2];J[i+488>>2]=J[g+40>>2];J[i+492>>2]=h;h=J[g+36>>2];J[i+480>>2]=J[g+32>>2];J[i+484>>2]=h;h=J[g+60>>2];J[i+504>>2]=J[g+56>>2];J[i+508>>2]=h;h=J[g+52>>2];J[i+496>>2]=J[g+48>>2];J[i+500>>2]=h;g=J[c+12>>2];h=J[g+12>>2];J[i+392>>2]=J[g+8>>2];J[i+396>>2]=h;h=J[g+4>>2];J[i+384>>2]=J[g>>2];J[i+388>>2]=h;h=J[g+28>>2];J[i+408>>2]=J[g+24>>2];J[i+412>>2]=h;h=J[g+20>>2];J[i+400>>2]=J[g+16>>2];J[i+404>>2]=h;h=J[g+44>>2];J[i+424>>2]=J[g+40>>2];J[i+428>>2]=h;h=J[g+36>>2];J[i+416>>2]=J[g+32>>2];J[i+420>>2]=h;h=J[g+60>>2];J[i+440>>2]=J[g+56>>2];J[i+444>>2]=h;h=J[g+52>>2];J[i+432>>2]=J[g+48>>2];J[i+436>>2]=h;J[i+372>>2]=0;H[i+376|0]=1;J[i+364>>2]=0;J[i+368>>2]=0;h=i+448|0;j=i+384|0;n=i+360|0;g=ga-96|0;ga=g;d:{if(J[d+68>>2]){k=N[h+20>>2];l=N[h+36>>2];t=N[h+52>>2];m=N[h+24>>2];v=N[h+56>>2];u=N[h+40>>2];q=N[h+32>>2];r=N[h>>2];o=N[h+16>>2];p=N[h+4>>2];s=N[h+8>>2];w=N[h+48>>2];J[g+60>>2]=0;w=Q(-w);x=N[j+56>>2];z=N[j+48>>2];A=N[j+52>>2];N[g+56>>2]=Q(Q(Q(s*w)-Q(m*t))-Q(u*v))+Q(Q(u*x)+Q(Q(s*z)+Q(m*A)));N[g+52>>2]=Q(Q(Q(p*w)-Q(k*t))-Q(l*v))+Q(Q(l*x)+Q(Q(p*z)+Q(k*A)));N[g+48>>2]=Q(Q(Q(r*w)-Q(o*t))-Q(q*v))+Q(Q(q*x)+Q(Q(r*z)+Q(o*A)));t=N[j+20>>2];v=N[j+36>>2];w=N[j+24>>2];x=N[j+40>>2];z=N[j+32>>2];A=N[j>>2];B=N[j+16>>2];C=N[j+4>>2];D=N[j+8>>2];J[g+44>>2]=0;J[g+28>>2]=0;N[g+40>>2]=Q(x*u)+Q(Q(D*s)+Q(m*w));N[g+36>>2]=Q(v*u)+Q(Q(C*s)+Q(m*t));N[g+24>>2]=Q(x*l)+Q(Q(D*p)+Q(k*w));N[g+20>>2]=Q(v*l)+Q(Q(C*p)+Q(k*t));J[g+12>>2]=0;N[g+32>>2]=Q(z*u)+Q(Q(A*s)+Q(m*B));N[g+16>>2]=Q(z*l)+Q(Q(A*p)+Q(k*B));N[g+8>>2]=Q(x*q)+Q(Q(D*r)+Q(o*w));N[g+4>>2]=Q(v*q)+Q(Q(C*r)+Q(o*t));N[g>>2]=Q(z*q)+Q(Q(A*r)+Q(o*B));h=g- -64|0;ia[J[J[e>>2]+8>>2]](e,g,h,g+80|0);Il(d+68|0,h,n);break d}ia[J[J[e>>2]+8>>2]](e,j,g- -64|0,g+80|0);S=ia[J[J[d>>2]+88>>2]](d)|0;if(!S){break d}Z=g+16|0;while(1){S=S-1|0;ia[J[J[d>>2]+120>>2]](d,S,h,g,Z);e:{if(N[g+80>>2]<N[g>>2]|N[g+64>>2]>N[g+16>>2]|(N[g+84>>2]<N[g+4>>2]|N[g+68>>2]>N[g+20>>2])){break e}if(N[g+88>>2]<N[g+8>>2]|N[g+72>>2]>N[g+24>>2]){break e}e=J[n+4>>2];f:{if((e|0)!=J[n+8>>2]){break f}W=e?e<<1:1;if((W|0)<=(e|0)){break f}g:{if(!W){F=0;break g}J[8369]=J[8369]+1;F=ia[J[6782]](W<<2,16)|0;e=J[n+4>>2]}y=J[n+12>>2];h:{i:{if((e|0)>0){X=0;j=0;if(e-1>>>0>=3){_=e&-4;Y=0;while(1){E=j<<2;J[E+F>>2]=J[y+E>>2];V=E|4;J[V+F>>2]=J[y+V>>2];V=E|8;J[V+F>>2]=J[y+V>>2];E=E|12;J[E+F>>2]=J[y+E>>2];j=j+4|0;Y=Y+4|0;if((_|0)!=(Y|0)){continue}break}}e=e&3;if(!e){break i}while(1){E=j<<2;J[E+F>>2]=J[y+E>>2];j=j+1|0;X=X+1|0;if((e|0)!=(X|0)){continue}break}break i}if(!y){break h}}if(y?K[n+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](y)}e=J[n+4>>2]}J[n+12>>2]=F;H[n+16|0]=1;J[n+8>>2]=W}J[J[n+12>>2]+(e<<2)>>2]=S;J[n+4>>2]=J[n+4>>2]+1}if(S){continue}break}}ga=g+96|0;if(J[i+364>>2]){ia[J[J[d>>2]+112>>2]](d);Bb(i- -64|4);J[i+124>>2]=0;J[i+128>>2]=0;J[i+72>>2]=1;J[i+132>>2]=0;J[i+136>>2]=0;J[i+140>>2]=0;J[i+144>>2]=0;J[i+148>>2]=0;J[i+152>>2]=0;J[i+156>>2]=0;J[i+160>>2]=0;J[i+164>>2]=0;J[i+168>>2]=0;J[i+68>>2]=1976;Se(i+172|0);J[i+264>>2]=4;J[i+348>>2]=17412;J[i+340>>2]=17332;J[i+332>>2]=17260;J[i+172>>2]=4488;J[i+64>>2]=d;if(ia[J[J[d>>2]+96>>2]](d)|0){e=i+340|0}else{e=J[i+64>>2];e=ia[J[J[e>>2]+100>>2]](e)|0?i+348|0:i+332|0}J[i+356>>2]=e;J[e+4>>2]=i- -64;g=ia[J[J[d>>2]+92>>2]](d)|0;e=J[i+364>>2];j:{if(!e){break j}e=e-1|0;if(f){while(1){f=e;e=J[J[i+372>>2]+(e<<2)>>2];J[a+32>>2]=e;h=J[i+356>>2];h=ia[J[J[h>>2]>>2]](h,e)|0;if(g){ia[J[J[d>>2]+132>>2]](i,d,e)}j=J[a+28>>2];n=J[a+24>>2];y=J[b+12>>2];e=J[b+8>>2];J[i+4>>2]=h;J[i+8>>2]=e;J[i+12>>2]=y;J[i>>2]=b;J[i+16>>2]=lI(n,j);J[i+20>>2]=ha;j=J[a+16>>2];h=J[j+8>>2];J[((e|0)==J[h+8>>2]?8:12)+j>>2]=i;Mg(a,c,i);J[J[a+16>>2]+8>>2]=h;e=f-1|0;if(f){continue}break j}}if(g){while(1){f=J[J[i+372>>2]+(e<<2)>>2];J[a+24>>2]=f;g=J[i+356>>2];g=ia[J[J[g>>2]>>2]](g,f)|0;ia[J[J[d>>2]+132>>2]](i,d,f);h=J[a+28>>2];j=J[a+24>>2];n=J[b+12>>2];f=J[b+8>>2];J[i+4>>2]=g;J[i+8>>2]=f;J[i+12>>2]=n;J[i>>2]=b;J[i+16>>2]=lI(j,h);J[i+20>>2]=ha;h=J[a+16>>2];g=J[h+8>>2];J[((f|0)==J[g+8>>2]?8:12)+h>>2]=i;Mg(a,i,c);J[J[a+16>>2]+8>>2]=g;f=e;e=e-1|0;if(f){continue}break j}}while(1){f=J[J[i+372>>2]+(e<<2)>>2];J[a+24>>2]=f;g=J[i+356>>2];g=ia[J[J[g>>2]>>2]](g,f)|0;h=J[a+28>>2];j=J[a+24>>2];n=J[b+12>>2];f=J[b+8>>2];J[i>>2]=b;J[i+4>>2]=g;J[i+8>>2]=f;J[i+12>>2]=n;J[i+16>>2]=lI(j,h);J[i+20>>2]=ha;h=J[a+16>>2];g=J[h+8>>2];J[((f|0)==J[g+8>>2]?8:12)+h>>2]=i;Mg(a,i,c);J[J[a+16>>2]+8>>2]=g;f=e;e=e-1|0;if(f){continue}break}}ia[J[J[d>>2]+116>>2]](d);Qa(i+172|0);Qa(i- -64|4)}a=J[i+372>>2];if(!a|!K[i+376|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}ga=i+512|0}function bg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ga-16|0;ga=l;a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{k:{if(a>>>0<=244){e=J[8387];g=a>>>0<11?16:a+11&-8;c=g>>>3|0;b=e>>>c|0;if(b&3){d=c+((b^-1)&1)|0;b=d<<3;f=J[b+33596>>2];a=f+8|0;c=J[f+8>>2];b=b+33588|0;l:{if((c|0)==(b|0)){J[8387]=kI(d)&e;break l}J[c+12>>2]=b;J[b+8>>2]=c}b=d<<3;J[f+4>>2]=b|3;b=b+f|0;J[b+4>>2]=J[b+4>>2]|1;break a}k=J[8389];if(k>>>0>=g>>>0){break k}if(b){a=2<<c;a=(0-a|a)&b<<c;b=(0-a&a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;c=(c|a)+(b>>>a|0)|0;a=c<<3;j=J[a+33596>>2];b=J[j+8>>2];a=a+33588|0;m:{if((b|0)==(a|0)){e=kI(c)&e;J[8387]=e;break m}J[b+12>>2]=a;J[a+8>>2]=b}a=j+8|0;J[j+4>>2]=g|3;d=g+j|0;b=c<<3;f=b-g|0;J[d+4>>2]=f|1;J[b+j>>2]=f;if(k){b=k>>>3|0;c=(b<<3)+33588|0;j=J[8392];b=1<<b;n:{if(!(b&e)){J[8387]=b|e;b=c;break n}b=J[c+8>>2]}J[c+8>>2]=j;J[b+12>>2]=j;J[j+12>>2]=c;J[j+8>>2]=b}J[8392]=d;J[8389]=f;break a}h=J[8388];if(!h){break k}b=(0-h&h)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;b=J[((c|a)+(b>>>a|0)<<2)+33852>>2];d=(J[b+4>>2]&-8)-g|0;c=b;while(1){o:{a=J[c+16>>2];if(!a){a=J[c+20>>2];if(!a){break o}}c=(J[a+4>>2]&-8)-g|0;f=c>>>0<d>>>0;d=f?c:d;b=f?a:b;c=a;continue}break}i=J[b+24>>2];f=J[b+12>>2];if((f|0)!=(b|0)){a=J[b+8>>2];J[a+12>>2]=f;J[f+8>>2]=a;break b}c=b+20|0;a=J[c>>2];if(!a){a=J[b+16>>2];if(!a){break j}c=b+16|0}while(1){j=c;f=a;c=a+20|0;a=J[c>>2];if(a){continue}c=f+16|0;a=J[f+16>>2];if(a){continue}break}J[j>>2]=0;break b}g=-1;if(a>>>0>4294967231){break k}a=a+11|0;g=a&-8;i=J[8388];if(!i){break k}d=0-g|0;e=0;p:{if(g>>>0<256){break p}e=31;if(g>>>0>16777215){break p}a=a>>>8|0;j=a+1048320>>>16&8;a=a<<j;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|j))|0;e=(a<<1|g>>>a+21&1)+28|0}c=J[(e<<2)+33852>>2];q:{r:{s:{if(!c){a=0;break s}a=0;b=g<<((e|0)==31?0:25-(e>>>1|0)|0);while(1){t:{h=J[c+4>>2]&-8;j=h-g|0;if(j>>>0>=d>>>0){break t}d=j;f=c;if((g|0)!=(h|0)){break t}d=0;a=c;break r}j=J[c+20>>2];c=J[((b>>>29&4)+c|0)+16>>2];a=j?(j|0)==(c|0)?a:j:a;b=b<<1;if(c){continue}break}}if(!(a|f)){f=0;a=2<<e;a=(0-a|a)&i;if(!a){break k}b=(a&0-a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;a=J[((c|a)+(b>>>a|0)<<2)+33852>>2]}if(!a){break q}}while(1){b=(J[a+4>>2]&-8)-g|0;c=b>>>0<d>>>0;d=c?b:d;f=c?a:f;b=J[a+16>>2];if(b){a=b}else{a=J[a+20>>2]}if(a){continue}break}}if(!f|J[8389]-g>>>0<=d>>>0){break k}e=J[f+24>>2];b=J[f+12>>2];if((f|0)!=(b|0)){a=J[f+8>>2];J[a+12>>2]=b;J[b+8>>2]=a;break c}c=f+20|0;a=J[c>>2];if(!a){a=J[f+16>>2];if(!a){break i}c=f+16|0}while(1){j=c;b=a;c=a+20|0;a=J[c>>2];if(a){continue}c=b+16|0;a=J[b+16>>2];if(a){continue}break}J[j>>2]=0;break c}c=J[8389];if(c>>>0>=g>>>0){d=J[8392];b=c-g|0;u:{if(b>>>0>=16){J[8389]=b;a=d+g|0;J[8392]=a;J[a+4>>2]=b|1;J[c+d>>2]=b;J[d+4>>2]=g|3;break u}J[8392]=0;J[8389]=0;J[d+4>>2]=c|3;a=c+d|0;J[a+4>>2]=J[a+4>>2]|1}a=d+8|0;break a}i=J[8390];if(i>>>0>g>>>0){b=i-g|0;J[8390]=b;c=J[8393];a=c+g|0;J[8393]=a;J[a+4>>2]=b|1;J[c+4>>2]=g|3;a=c+8|0;break a}a=0;h=g+47|0;if(J[8505]){c=J[8507]}else{J[8508]=-1;J[8509]=-1;J[8506]=4096;J[8507]=4096;J[8505]=l+12&-16^1431655768;J[8510]=0;J[8498]=0;c=4096}j=h+c|0;f=0-c|0;c=j&f;if(c>>>0<=g>>>0){break a}d=J[8497];if(d){b=J[8495];e=b+c|0;if(e>>>0>d>>>0|b>>>0>=e>>>0){break a}}if(K[33992]&4){break f}v:{w:{d=J[8393];if(d){a=33996;while(1){b=J[a>>2];if(b>>>0<=d>>>0&d>>>0<b+J[a+4>>2]>>>0){break w}a=J[a+8>>2];if(a){continue}break}}b=cc(0);if((b|0)==-1){break g}e=c;d=J[8506];a=d-1|0;if(a&b){e=(c-b|0)+(a+b&0-d)|0}if(e>>>0<=g>>>0|e>>>0>2147483646){break g}d=J[8497];if(d){a=J[8495];f=a+e|0;if(d>>>0<f>>>0|a>>>0>=f>>>0){break g}}a=cc(e);if((b|0)!=(a|0)){break v}break e}e=f&j-i;if(e>>>0>2147483646){break g}b=cc(e);if((b|0)==(J[a>>2]+J[a+4>>2]|0)){break h}a=b}if(!((a|0)==-1|g+48>>>0<=e>>>0)){b=J[8507];b=b+(h-e|0)&0-b;if(b>>>0>2147483646){b=a;break e}if((cc(b)|0)!=-1){e=b+e|0;b=a;break e}cc(0-e|0);break g}b=a;if((a|0)!=-1){break e}break g}f=0;break b}b=0;break c}if((b|0)!=-1){break e}}J[8498]=J[8498]|4}if(c>>>0>2147483646){break d}b=cc(c);a=cc(0);if((b|0)==-1|(a|0)==-1|a>>>0<=b>>>0){break d}e=a-b|0;if(e>>>0<=g+40>>>0){break d}}a=J[8495]+e|0;J[8495]=a;if(a>>>0>M[8496]){J[8496]=a}x:{y:{z:{h=J[8393];if(h){a=33996;while(1){d=J[a>>2];c=J[a+4>>2];if((d+c|0)==(b|0)){break z}a=J[a+8>>2];if(a){continue}break}break y}a=J[8391];if(!(a>>>0<=b>>>0?a:0)){J[8391]=b}a=0;J[8500]=e;J[8499]=b;J[8395]=-1;J[8396]=J[8505];J[8502]=0;while(1){d=a<<3;c=d+33588|0;J[d+33596>>2]=c;J[d+33600>>2]=c;a=a+1|0;if((a|0)!=32){continue}break}d=e-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;J[8390]=c;a=a+b|0;J[8393]=a;J[a+4>>2]=c|1;J[(b+d|0)+4>>2]=40;J[8394]=J[8509];break x}if(K[a+12|0]&8|d>>>0>h>>>0|b>>>0<=h>>>0){break y}J[a+4>>2]=c+e;a=h+8&7?-8-h&7:0;c=a+h|0;J[8393]=c;b=J[8390]+e|0;a=b-a|0;J[8390]=a;J[c+4>>2]=a|1;J[(b+h|0)+4>>2]=40;J[8394]=J[8509];break x}if(M[8391]>b>>>0){J[8391]=b}c=b+e|0;a=33996;A:{B:{C:{D:{E:{F:{while(1){if((c|0)!=J[a>>2]){a=J[a+8>>2];if(a){continue}break F}break}if(!(K[a+12|0]&8)){break E}}a=33996;while(1){c=J[a>>2];if(c>>>0<=h>>>0){f=c+J[a+4>>2]|0;if(f>>>0>h>>>0){break D}}a=J[a+8>>2];continue}}J[a>>2]=b;J[a+4>>2]=J[a+4>>2]+e;j=(b+8&7?-8-b&7:0)+b|0;J[j+4>>2]=g|3;e=c+(c+8&7?-8-c&7:0)|0;i=g+j|0;g=e-i|0;if((e|0)==(h|0)){J[8393]=i;a=J[8390]+g|0;J[8390]=a;J[i+4>>2]=a|1;break B}if(J[8392]==(e|0)){J[8392]=i;a=J[8389]+g|0;J[8389]=a;J[i+4>>2]=a|1;J[a+i>>2]=a;break B}a=J[e+4>>2];if((a&3)==1){f=a&-8;G:{if(a>>>0<=255){c=J[e+8>>2];a=a>>>3|0;b=J[e+12>>2];if((b|0)==(c|0)){J[8387]=J[8387]&kI(a);break G}J[c+12>>2]=b;J[b+8>>2]=c;break G}h=J[e+24>>2];b=J[e+12>>2];H:{if((e|0)!=(b|0)){a=J[e+8>>2];J[a+12>>2]=b;J[b+8>>2]=a;break H}I:{a=e+20|0;d=J[a>>2];if(d){break I}a=e+16|0;d=J[a>>2];if(d){break I}b=0;break H}while(1){c=a;b=d;a=b+20|0;d=J[a>>2];if(d){continue}a=b+16|0;d=J[b+16>>2];if(d){continue}break}J[c>>2]=0}if(!h){break G}c=J[e+28>>2];a=(c<<2)+33852|0;J:{if(J[a>>2]==(e|0)){J[a>>2]=b;if(b){break J}J[8388]=J[8388]&kI(c);break G}J[h+(J[h+16>>2]==(e|0)?16:20)>>2]=b;if(!b){break G}}J[b+24>>2]=h;a=J[e+16>>2];if(a){J[b+16>>2]=a;J[a+24>>2]=b}a=J[e+20>>2];if(!a){break G}J[b+20>>2]=a;J[a+24>>2]=b}g=f+g|0;e=e+f|0}J[e+4>>2]=J[e+4>>2]&-2;J[i+4>>2]=g|1;J[g+i>>2]=g;if(g>>>0<=255){a=g>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;K:{if(!(c&a)){J[8387]=a|c;a=b;break K}a=J[b+8>>2]}J[b+8>>2]=i;J[a+12>>2]=i;J[i+12>>2]=b;J[i+8>>2]=a;break B}a=31;if(g>>>0<=16777215){a=g>>>8|0;d=a+1048320>>>16&8;a=a<<d;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|d))|0;a=(a<<1|g>>>a+21&1)+28|0}J[i+28>>2]=a;J[i+16>>2]=0;J[i+20>>2]=0;d=(a<<2)+33852|0;c=J[8388];b=1<<a;L:{if(!(c&b)){J[8388]=b|c;J[d>>2]=i;J[i+24>>2]=d;break L}a=g<<((a|0)==31?0:25-(a>>>1|0)|0);b=J[d>>2];while(1){c=b;if((J[b+4>>2]&-8)==(g|0)){break C}b=a>>>29|0;a=a<<1;d=c+(b&4)|0;b=J[d+16>>2];if(b){continue}break}J[d+16>>2]=i;J[i+24>>2]=c}J[i+12>>2]=i;J[i+8>>2]=i;break B}d=e-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;J[8390]=c;a=a+b|0;J[8393]=a;J[a+4>>2]=c|1;J[(b+d|0)+4>>2]=40;J[8394]=J[8509];a=(f+(f-39&7?39-f&7:0)|0)-47|0;c=a>>>0<h+16>>>0?h:a;J[c+4>>2]=27;a=J[8502];J[c+16>>2]=J[8501];J[c+20>>2]=a;a=J[8500];J[c+8>>2]=J[8499];J[c+12>>2]=a;J[8501]=c+8;J[8500]=e;J[8499]=b;J[8502]=0;a=c+24|0;while(1){J[a+4>>2]=7;b=a+8|0;a=a+4|0;if(b>>>0<f>>>0){continue}break}if((c|0)==(h|0)){break x}J[c+4>>2]=J[c+4>>2]&-2;f=c-h|0;J[h+4>>2]=f|1;J[c>>2]=f;if(f>>>0<=255){a=f>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;M:{if(!(c&a)){J[8387]=a|c;a=b;break M}a=J[b+8>>2]}J[b+8>>2]=h;J[a+12>>2]=h;J[h+12>>2]=b;J[h+8>>2]=a;break x}a=31;J[h+16>>2]=0;J[h+20>>2]=0;if(f>>>0<=16777215){a=f>>>8|0;d=a+1048320>>>16&8;a=a<<d;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|d))|0;a=(a<<1|f>>>a+21&1)+28|0}J[h+28>>2]=a;d=(a<<2)+33852|0;c=J[8388];b=1<<a;N:{if(!(c&b)){J[8388]=b|c;J[d>>2]=h;J[h+24>>2]=d;break N}a=f<<((a|0)==31?0:25-(a>>>1|0)|0);b=J[d>>2];while(1){c=b;if((f|0)==(J[b+4>>2]&-8)){break A}b=a>>>29|0;a=a<<1;d=c+(b&4)|0;b=J[d+16>>2];if(b){continue}break}J[d+16>>2]=h;J[h+24>>2]=c}J[h+12>>2]=h;J[h+8>>2]=h;break x}a=J[c+8>>2];J[a+12>>2]=i;J[c+8>>2]=i;J[i+24>>2]=0;J[i+12>>2]=c;J[i+8>>2]=a}a=j+8|0;break a}a=J[c+8>>2];J[a+12>>2]=h;J[c+8>>2]=h;J[h+24>>2]=0;J[h+12>>2]=c;J[h+8>>2]=a}a=J[8390];if(a>>>0<=g>>>0){break d}b=a-g|0;J[8390]=b;c=J[8393];a=c+g|0;J[8393]=a;J[a+4>>2]=b|1;J[c+4>>2]=g|3;a=c+8|0;break a}J[8386]=48;a=0;break a}O:{if(!e){break O}c=J[f+28>>2];a=(c<<2)+33852|0;P:{if(J[a>>2]==(f|0)){J[a>>2]=b;if(b){break P}i=kI(c)&i;J[8388]=i;break O}J[e+(J[e+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break O}}J[b+24>>2]=e;a=J[f+16>>2];if(a){J[b+16>>2]=a;J[a+24>>2]=b}a=J[f+20>>2];if(!a){break O}J[b+20>>2]=a;J[a+24>>2]=b}Q:{if(d>>>0<=15){a=d+g|0;J[f+4>>2]=a|3;a=a+f|0;J[a+4>>2]=J[a+4>>2]|1;break Q}J[f+4>>2]=g|3;e=f+g|0;J[e+4>>2]=d|1;J[e+d>>2]=d;if(d>>>0<=255){a=d>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;R:{if(!(c&a)){J[8387]=a|c;a=b;break R}a=J[b+8>>2]}J[b+8>>2]=e;J[a+12>>2]=e;J[e+12>>2]=b;J[e+8>>2]=a;break Q}a=31;if(d>>>0<=16777215){a=d>>>8|0;j=a+1048320>>>16&8;a=a<<j;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|j))|0;a=(a<<1|d>>>a+21&1)+28|0}J[e+28>>2]=a;J[e+16>>2]=0;J[e+20>>2]=0;b=(a<<2)+33852|0;S:{c=1<<a;T:{if(!(c&i)){J[8388]=c|i;J[b>>2]=e;break T}a=d<<((a|0)==31?0:25-(a>>>1|0)|0);c=J[b>>2];while(1){b=c;if((J[b+4>>2]&-8)==(d|0)){break S}c=a>>>29|0;a=a<<1;j=(c&4)+b|0;c=J[j+16>>2];if(c){continue}break}J[j+16>>2]=e}J[e+24>>2]=b;J[e+12>>2]=e;J[e+8>>2]=e;break Q}a=J[b+8>>2];J[a+12>>2]=e;J[b+8>>2]=e;J[e+24>>2]=0;J[e+12>>2]=b;J[e+8>>2]=a}a=f+8|0;break a}U:{if(!i){break U}c=J[b+28>>2];a=(c<<2)+33852|0;V:{if(J[a>>2]==(b|0)){J[a>>2]=f;if(f){break V}J[8388]=kI(c)&h;break U}J[i+(J[i+16>>2]==(b|0)?16:20)>>2]=f;if(!f){break U}}J[f+24>>2]=i;a=J[b+16>>2];if(a){J[f+16>>2]=a;J[a+24>>2]=f}a=J[b+20>>2];if(!a){break U}J[f+20>>2]=a;J[a+24>>2]=f}W:{if(d>>>0<=15){a=d+g|0;J[b+4>>2]=a|3;a=a+b|0;J[a+4>>2]=J[a+4>>2]|1;break W}J[b+4>>2]=g|3;f=b+g|0;J[f+4>>2]=d|1;J[d+f>>2]=d;if(k){a=k>>>3|0;c=(a<<3)+33588|0;j=J[8392];a=1<<a;X:{if(!(a&e)){J[8387]=a|e;a=c;break X}a=J[c+8>>2]}J[c+8>>2]=j;J[a+12>>2]=j;J[j+12>>2]=c;J[j+8>>2]=a}J[8392]=f;J[8389]=d}a=b+8|0}ga=l+16|0;return a|0}function zg(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ia=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=Q(0),qa=0,ra=Q(0),sa=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=Q(0),xa=Q(0),ya=Q(0),za=Q(0),Aa=Q(0),Ba=Q(0),Ca=Q(0),Da=Q(0),Ea=Q(0),Fa=Q(0),Ia=Q(0),Ja=Q(0),Ka=Q(0),La=Q(0),Ma=Q(0),Oa=Q(0);l=ga-80|0;ga=l;H[a+525|0]=0;H[a+526|0]=0;J[a+500>>2]=0;J[a+504>>2]=0;a:{if(!(K[a+527|0]|!K[a+552|0])){Ia=N[c+52>>2];Ja=N[c+56>>2];q=N[a+412>>2];M=N[a+416>>2];S=N[a+420>>2];Ka=N[b+52>>2];La=N[b+56>>2];V=N[a+348>>2];W=N[a+352>>2];y=N[a+356>>2];i=N[c+20>>2];n=N[c+24>>2];o=N[b+20>>2];u=N[b+24>>2];v=N[a+308>>2];D=N[a+324>>2];E=N[a+340>>2];P=N[a+316>>2];F=N[a+332>>2];X=N[a+304>>2];p=N[b+36>>2];Z=N[a+320>>2];k=N[b+40>>2];_=N[a+336>>2];$=N[a+372>>2];aa=N[a+388>>2];ba=N[a+404>>2];ka=N[a+368>>2];la=N[a+384>>2];ma=N[a+400>>2];h=N[a+568>>2];j=N[a+564>>2];g=N[a+560>>2];G=N[c+36>>2];na=N[a+380>>2];I=N[c+40>>2];oa=N[a+396>>2];Ma=N[c+48>>2];L=N[c+8>>2];x=N[c+4>>2];r=N[c>>2];Oa=N[b+48>>2];t=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];C=N[c+16>>2];m=N[b+16>>2];pa=N[a+300>>2];w=N[b+32>>2];f=N[a+556>>2];s=N[c+32>>2];wa=N[a+364>>2];J[l+76>>2]=0;J[l+60>>2]=0;J[l+44>>2]=0;ra=Q(Q(E*k)+Q(Q(v*w)+Q(D*p)));B=Q(Q(2)/Q(Q(h*h)+Q(Q(j*j)+Q(Q(f*f)+Q(g*g)))));ca=Q(f*B);da=Q(f*ca);O=Q(g*B);ea=Q(g*O);xa=Q(Q(1)-Q(da+ea));sa=Q(Q(ba*I)+Q(Q($*s)+Q(aa*G)));B=Q(j*B);fa=Q(f*B);ha=Q(h*O);ya=Q(fa+ha);ta=Q(Q(oa*I)+Q(Q(wa*s)+Q(na*G)));ia=Q(g*B);ja=Q(h*ca);za=Q(ia-ja);g=Q(Q(ma*I)+Q(Q(ka*s)+Q(la*G)));ca=Q(Q(xa*sa)+Q(Q(ya*ta)+Q(za*g)));ua=Q(Q(F*k)+Q(Q(pa*w)+Q(P*p)));Aa=Q(fa-ha);j=Q(j*B);Ba=Q(Q(1)-Q(ea+j));O=Q(f*O);B=Q(h*B);Ca=Q(O+B);f=Q(Q(Aa*sa)+Q(Q(Ba*ta)+Q(Ca*g)));h=Q(Q(_*k)+Q(Q(X*w)+Q(Z*p)));Da=Q(ia+ja);Ea=Q(O-B);Fa=Q(Q(1)-Q(da+j));j=Q(Q(Da*sa)+Q(Q(Ea*ta)+Q(Fa*g)));N[l+56>>2]=Q(ra*ca)+Q(Q(ua*f)+Q(h*j));B=Q(Q(E*u)+Q(Q(v*m)+Q(D*o)));O=Q(Q(F*u)+Q(Q(pa*m)+Q(P*o)));da=Q(Q(_*u)+Q(Q(X*m)+Q(Z*o)));N[l+52>>2]=Q(B*ca)+Q(Q(O*f)+Q(da*j));ea=Q(Q(ba*n)+Q(Q($*C)+Q(aa*i)));fa=Q(Q(oa*n)+Q(Q(wa*C)+Q(na*i)));ha=Q(Q(ma*n)+Q(Q(ka*C)+Q(la*i)));ia=Q(Q(xa*ea)+Q(Q(ya*fa)+Q(za*ha)));ja=Q(Q(Aa*ea)+Q(Q(Ba*fa)+Q(Ca*ha)));va=Q(Q(Da*ea)+Q(Q(Ea*fa)+Q(Fa*ha)));N[l+40>>2]=Q(ra*ia)+Q(Q(ua*ja)+Q(h*va));N[l+36>>2]=Q(B*ia)+Q(Q(O*ja)+Q(da*va));v=Q(Q(E*t)+Q(Q(v*z)+Q(A*D)));D=Q(-Q(Oa+Q(Q(y*t)+Q(Q(V*z)+Q(A*W)))));m=Q(Ka+Q(Q(y*u)+Q(Q(V*m)+Q(o*W))));p=Q(La+Q(Q(y*k)+Q(Q(V*w)+Q(p*W))));k=Q(Q(Q(v*D)-Q(B*m))-Q(ra*p));o=Q(Q(F*t)+Q(Q(pa*z)+Q(P*A)));w=Q(Q(Q(o*D)-Q(O*m))-Q(ua*p));u=Q(Q(_*t)+Q(Q(X*z)+Q(A*Z)));t=Q(Q(Q(u*D)-Q(da*m))-Q(h*p));N[l+72>>2]=Q(Q(k*ca)+Q(Q(w*f)+Q(t*j)))+Q(Q(Q(sa*Q(0))+Q(Q(ta*Q(0))+Q(g*Q(0))))+Q(Ja+Q(Q(S*I)+Q(Q(q*s)+Q(G*M)))));N[l+68>>2]=Q(Q(k*ia)+Q(Q(w*ja)+Q(t*va)))+Q(Q(Q(ea*Q(0))+Q(Q(fa*Q(0))+Q(ha*Q(0))))+Q(Ia+Q(Q(S*n)+Q(Q(q*C)+Q(i*M)))));J[l+28>>2]=0;N[l+48>>2]=Q(v*ca)+Q(Q(o*f)+Q(u*j));N[l+32>>2]=Q(v*ia)+Q(Q(o*ja)+Q(u*va));f=Q(Q(ba*L)+Q(Q($*r)+Q(x*aa)));g=Q(Q(oa*L)+Q(Q(wa*r)+Q(na*x)));i=Q(Q(ma*L)+Q(Q(ka*r)+Q(x*la)));n=Q(Q(xa*f)+Q(Q(ya*g)+Q(za*i)));p=Q(Q(Aa*f)+Q(Q(Ba*g)+Q(Ca*i)));m=h;h=Q(Q(Da*f)+Q(Q(Ea*g)+Q(Fa*i)));N[l+24>>2]=Q(ra*n)+Q(Q(ua*p)+Q(m*h));N[l+20>>2]=Q(B*n)+Q(Q(O*p)+Q(da*h));N[l+16>>2]=Q(v*n)+Q(Q(o*p)+Q(u*h));N[l+64>>2]=Q(Q(k*n)+Q(Q(w*p)+Q(t*h)))+Q(Q(Q(f*Q(0))+Q(Q(g*Q(0))+Q(i*Q(0))))+Q(Ma+Q(Q(S*L)+Q(Q(q*r)+Q(x*M)))));Na(l+16|0,l);f=N[l+8>>2];h=N[l>>2];g=N[l+4>>2];i=Q(Q(f*f)+Q(Q(h*h)+Q(g*g)));if(Q(R(i))<Q(1.1920928955078125e-7)){break a}J[a+472>>2]=0;m=f;f=Q(Q(1)/Q(Y(i)));N[a+468>>2]=m*f;N[a+464>>2]=g*f;N[a+460>>2]=h*f;f=qb(Q(T(Q(U(N[l+12>>2],Q(-1))),Q(1))));f=Q(f+f);N[a+504>>2]=f;if(Q(R(f))<Q(1.1920928955078125e-7)){break a}H[a+526|0]=1;break a}qa=l+16|0;Na(b,qa);Na(a+300|0,l);f=N[l+24>>2];h=N[l+8>>2];p=N[l+4>>2];k=N[l+20>>2];j=N[l+12>>2];x=N[l+28>>2];r=N[l+16>>2];t=N[l>>2];Na(c,qa);Na(a+364|0,l);g=Q(-0);C=Q(1);z=N[l+16>>2];A=N[l+4>>2];m=N[l+28>>2];w=N[l+8>>2];s=N[l+12>>2];i=N[l+24>>2];q=N[l+20>>2];M=N[l>>2];o=Q(Q(Q(z*A)+Q(Q(m*w)+Q(s*i)))-Q(q*M));G=Q(Q(Q(r*p)+Q(Q(x*h)+Q(j*f)))-Q(k*t));u=Q(Q(Q(i*M)+Q(Q(m*A)+Q(s*q)))-Q(z*w));I=Q(Q(Q(f*t)+Q(Q(x*p)+Q(j*k)))-Q(r*h));n=Q(Q(Q(Q(m*s)-Q(M*z))-Q(q*A))-Q(i*w));L=Q(Q(Q(Q(x*j)-Q(t*r))-Q(k*p))-Q(f*h));x=Q(Q(Q(k*h)+Q(Q(x*t)+Q(r*j)))-Q(f*p));p=Q(Q(Q(q*w)+Q(Q(m*M)+Q(z*s)))-Q(i*A));t=Q(Q(o*G)+Q(Q(u*I)+Q(Q(n*L)+Q(x*p))));h=Q(t*Q(0));z=Q(Q(u*x)+Q(Q(Q(n*G)-Q(L*o))-Q(p*I)));A=Q(Q(o*I)+Q(Q(Q(n*x)-Q(L*p))-Q(u*G)));k=Q(A*Q(0));f=Q(Q(h+z)-k);r=Q(Q(p*G)+Q(Q(Q(n*I)-Q(L*u))-Q(o*x)));h=Q(Q(h+k)-r);j=Q(z*Q(-0));k=Q(j+Q(Q(r*Q(-0))-A));j=Q(j+Q(t+Q(r*Q(0))));m=Q(Q(f*A)+Q(Q(Q(t*h)-Q(k*z))-Q(j*r)));q=m;s=Q(m*m);m=Q(Q(h*r)+Q(Q(Q(t*j)-Q(k*A))-Q(f*z)));f=Q(Q(j*z)+Q(Q(Q(t*f)-Q(k*r))-Q(h*A)));h=Q(Q(1)/Q(Y(Q(s+Q(Q(m*m)+Q(f*f))))));k=Q(q*h);j=Q(m*h);f=Q(f*h);h=Q(Q(k*Q(0))+Q(j+Q(f*Q(0))));if(!(h<Q(-.9999998807907104))){h=Q(h+Q(1));g=Q(Y(Q(h+h)));h=Q(Q(1)/g);y=Q(Q(f+Q(j*Q(-0)))*h);C=Q(Q(Q(j*Q(0))-k)*h);v=Q(g*Q(.5));g=Q(Q(Q(k*Q(0))+Q(f*Q(-0)))*h)}S=Q(-o);V=Q(-u);W=Q(-p);f=Q(Q(1)/Q(Y(Q(Q(v*v)+Q(Q(y*y)+Q(Q(g*g)+Q(C*C)))))));C=Q(C*f);M=Q(v*f);m=Q(y*f);w=Q(g*f);h=N[a+444>>2];y=N[a+456>>2];qa=h>=y;j=N[a+448>>2];b:{if(!(!qa|!(y<=j))){g=qb(Q(T(Q(U(M,Q(-1))),Q(1))));s=Q(g+g);f=Q(0);c:{if(!(s>Q(1.1920928955078125e-7))){break c}g=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(w*w)+Q(C*C))))));k=Q(m*g);i=Q(w*g);g=Q(C*g);f=h;if(!(Q(R(g))>Q(1.1920928955078125e-7))){break c}f=Q(Q(k*k)/Q(g*g));f=Q(Y(Q(Q(f+Q(1))/Q(Q(Q(1)/Q(j*j))+Q(f/Q(h*h))))))}q=N[a+428>>2];y=Q(f*q);if(!(y<s)){break b}H[a+526|0]=1;v=Q(1);y=Q(s-y);N[a+504>>2]=y;N[a+528>>2]=!(f>s)|!(q<Q(.9999998807907104))?v:Q(y/Q(Q(Q(-f)*q)+f));if(Q(R(g))>Q(1.1920928955078125e-7)){f=Q(R(Q(g*Q(Q(j/h)*Q(Q(-k)/g)))));f=k<Q(0)?f:Q(-f);h=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(g*g))))));k=Q(h*Q(-f));i=Q(i*h);g=Q(g*h)}J[a+536>>2]=0;J[a+540>>2]=0;J[a+472>>2]=0;J[a+544>>2]=0;J[a+548>>2]=0;j=Q(Q(p*k)+Q(Q(n*Q(-g))-Q(o*i)));s=Q(Q(o*g)+Q(Q(n*Q(-i))-Q(u*k)));q=Q(Q(o*k)+Q(Q(p*i)+Q(u*g)));g=Q(Q(u*i)+Q(Q(n*Q(-k))-Q(p*g)));f=Q(Q(j*p)+Q(Q(s*V)+Q(Q(q*S)+Q(n*g))));N[a+468>>2]=f;h=Q(Q(s*o)+Q(Q(g*W)+Q(Q(q*V)+Q(n*j))));N[a+464>>2]=h;g=Q(Q(g*u)+Q(Q(j*S)+Q(Q(q*W)+Q(n*s))));N[a+460>>2]=g;N[a+492>>2]=Q(1)/Q(Q(Q(f*Q(Q(f*N[d+40>>2])+Q(Q(N[d+8>>2]*g)+Q(h*N[d+24>>2]))))+Q(Q(g*Q(Q(N[d+32>>2]*f)+Q(Q(g*N[d>>2])+Q(N[d+16>>2]*h))))+Q(h*Q(Q(N[d+36>>2]*f)+Q(Q(N[d+4>>2]*g)+Q(h*N[d+20>>2]))))))+Q(Q(f*Q(Q(f*N[e+40>>2])+Q(Q(N[e+8>>2]*g)+Q(h*N[e+24>>2]))))+Q(Q(g*Q(Q(N[e+32>>2]*f)+Q(Q(g*N[e>>2])+Q(h*N[e+16>>2]))))+Q(h*Q(Q(N[e+36>>2]*f)+Q(Q(N[e+4>>2]*g)+Q(h*N[e+20>>2])))))));break b}f=N[a+396>>2];g=N[a+364>>2];i=N[a+380>>2];k=Q(Q(N[c+40>>2]*f)+Q(Q(N[c+32>>2]*g)+Q(i*N[c+36>>2])));v=N[b+40>>2];q=N[a+340>>2];D=N[b+32>>2];E=N[a+308>>2];P=N[b+36>>2];F=N[a+324>>2];ka=Q(Q(v*q)+Q(Q(D*E)+Q(P*F)));s=Q(Q(N[c+8>>2]*f)+Q(Q(N[c>>2]*g)+Q(i*N[c+4>>2])));X=N[b+8>>2];Z=N[b>>2];_=N[b+4>>2];la=Q(Q(X*q)+Q(Q(Z*E)+Q(_*F)));$=N[b+24>>2];aa=N[b+16>>2];B=Q(aa*E);E=N[b+20>>2];ma=Q(Q($*q)+Q(B+Q(E*F)));q=Q(Q(N[c+24>>2]*f)+Q(Q(N[c+16>>2]*g)+Q(i*N[c+20>>2])));g=Q(Q(k*ka)+Q(Q(s*la)+Q(ma*q)));f=N[a+336>>2];i=N[a+304>>2];F=N[a+320>>2];na=Q(Q(v*f)+Q(Q(D*i)+Q(P*F)));oa=Q(Q(X*f)+Q(Q(Z*i)+Q(_*F)));pa=Q(Q($*f)+Q(Q(aa*i)+Q(E*F)));f=Q(Q(k*na)+Q(Q(s*oa)+Q(pa*q)));i=N[a+332>>2];F=N[a+300>>2];ba=N[a+316>>2];v=Q(Q(v*i)+Q(Q(D*F)+Q(ba*P)));D=Q(Q($*i)+Q(Q(aa*F)+Q(ba*E)));E=Q(Q(X*i)+Q(Q(Z*F)+Q(ba*_)));b=h<y;if(!(!b|!(j<y))){if(Q(R(f))<Q(1.1920928955078125e-7)&Q(R(g))<Q(1.1920928955078125e-7)){break b}H[a+526|0]=1;J[a+472>>2]=0;N[a+468>>2]=-Q(Q(s*D)-Q(E*q));N[a+464>>2]=-Q(Q(k*E)-Q(v*s));N[a+460>>2]=-Q(Q(q*v)-Q(D*k));break b}i=Q(Q(k*v)+Q(Q(s*E)+Q(D*q)));P=Q(R(i));d:{if(b){if(P<Q(1.1920928955078125e-7)&Q(R(g))<Q(1.1920928955078125e-7)){break d}H[a+526|0]=1;if(!(j>=y)){break d}h=$a(g,i);if(h>j){f=Q(0);g=Ga(j);i=Ha(j);break d}f=Q(0);if(!(h<Q(-j))){break d}g=Q(-Ga(j));i=Ha(j);break d}if(P<Q(1.1920928955078125e-7)&Q(R(f))<Q(1.1920928955078125e-7)){break d}H[a+526|0]=1;if(!qa){break d}j=$a(f,i);e:{if(j>h){g=Q(0);f=Ga(h);break e}g=Q(0);if(!(j<Q(-h))){break d}f=Q(-Ga(h))}i=Ha(h)}J[a+472>>2]=0;h=Q(Q(g*ka)+Q(Q(i*v)+Q(na*f)));j=Q(Q(g*la)+Q(Q(i*E)+Q(oa*f)));g=Q(Q(g*ma)+Q(Q(i*D)+Q(pa*f)));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(g*g))))));i=Q(g*f);j=Q(j*f);g=Q(Q(s*i)-Q(j*q));h=Q(h*f);f=Q(Q(q*h)-Q(i*k));h=Q(Q(k*j)-Q(h*s));i=Q(Y(Q(Q(g*g)+Q(Q(f*f)+Q(h*h)))));N[a+504>>2]=i;i=Q(Q(1)/i);N[a+468>>2]=i*Q(-g);N[a+464>>2]=i*Q(-h);N[a+460>>2]=i*Q(-f)}k=N[a+452>>2];if(k>=Q(0)){j=Q(Q(m*z)+Q(Q(C*r)+Q(Q(M*t)+Q(A*w))));f=Q(Q(C*A)+Q(Q(Q(M*z)-Q(t*m))-Q(w*r)));g=Q(Q(m*r)+Q(Q(Q(M*A)-Q(t*w))-Q(C*z)));h=Q(Q(w*z)+Q(Q(Q(M*r)-Q(t*C))-Q(m*A)));i=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(f*f)+Q(Q(g*g)+Q(h*h)))))));f=Q(f*i);h=Q(h*i);g=Q(g*i);j=Q(j*i);i=qb(Q(T(Q(U(j,Q(-1))),Q(1))));i=Q(i+i);if(i>Q(3.1415927410125732)){i=qb(Q(T(Q(U(Q(-j),Q(-1))),Q(1))));i=Q(i+i);h=Q(-h);g=Q(-g);f=Q(-f)}N[a+512>>2]=i;if(i>Q(1.1920928955078125e-7)){j=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(g*g)+Q(h*h))))));f=Q(f*j);g=Q(g*j);h=Q(h*j)}r=N[a+428>>2];j=Q(k*r);if(j<i){H[a+525|0]=1;t=Q(i-j);N[a+508>>2]=t;m=Q(1);f:{if(!(i<k)){break f}m=Q(1);if(!(r<Q(.9999998807907104))){break f}m=Q(t/Q(Q(Q(-k)*r)+k))}N[a+532>>2]=m;J[a+488>>2]=0;k=Q(Q(p*f)+Q(Q(n*Q(-h))-Q(o*g)));m=Q(k*p);j=Q(Q(o*h)+Q(Q(n*Q(-g))-Q(u*f)));r=Q(Q(o*f)+Q(Q(p*g)+Q(u*h)));p=Q(Q(u*g)+Q(Q(n*Q(-f))-Q(p*h)));i=Q(m+Q(Q(j*V)+Q(Q(r*S)+Q(n*p))));N[a+484>>2]=i;o=Q(Q(j*o)+Q(Q(p*W)+Q(Q(r*V)+Q(n*k))));N[a+480>>2]=o;n=Q(Q(p*u)+Q(Q(k*S)+Q(Q(r*W)+Q(n*j))));N[a+476>>2]=n;N[a+496>>2]=Q(1)/Q(Q(Q(i*Q(Q(i*N[d+40>>2])+Q(Q(N[d+8>>2]*n)+Q(o*N[d+24>>2]))))+Q(Q(n*Q(Q(N[d+32>>2]*i)+Q(Q(n*N[d>>2])+Q(N[d+16>>2]*o))))+Q(o*Q(Q(N[d+36>>2]*i)+Q(Q(N[d+4>>2]*n)+Q(o*N[d+20>>2]))))))+Q(Q(i*Q(Q(i*N[e+40>>2])+Q(Q(N[e+8>>2]*n)+Q(o*N[e+24>>2]))))+Q(Q(n*Q(Q(N[e+32>>2]*i)+Q(Q(n*N[e>>2])+Q(o*N[e+16>>2]))))+Q(o*Q(Q(N[e+36>>2]*i)+Q(Q(N[e+4>>2]*n)+Q(o*N[e+20>>2])))))))}if(!K[a+526|0]){break a}J[a+548>>2]=0;i=Q(Q(x*f)+Q(Q(L*Q(-h))-Q(G*g)));n=Q(Q(I*g)+Q(Q(L*Q(-f))-Q(x*h)));o=Q(Q(G*f)+Q(Q(x*g)+Q(I*h)));f=Q(Q(G*h)+Q(Q(L*Q(-g))-Q(I*f)));N[a+544>>2]=Q(i*x)+Q(Q(Q(L*n)-Q(o*G))-Q(f*I));N[a+540>>2]=Q(f*G)+Q(Q(Q(L*i)-Q(o*I))-Q(n*x));N[a+536>>2]=Q(n*I)+Q(Q(Q(L*f)-Q(o*x))-Q(i*G));break a}J[a+512>>2]=0}ga=l+80|0}function pl(a){var b=0,c=0,d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=0,X=0,Y=Q(0),Z=Q(0),_=0;k=ga-16|0;ga=k;a:{if(!K[a+356|0]){c=K[a+312|0];break a}H[a+356|0]=0;H[a+352|0]=0;J[a+344>>2]=0;J[a+348>>2]=0;J[a+336>>2]=0;J[a+340>>2]=0;d=K[a+332|0]&-16;H[a+332|0]=d;b=a+316|0;b:{c:{switch(J[a>>2]-1|0){case 0:c=J[a+168>>2];J[a+260>>2]=J[a+164>>2];J[a+264>>2]=c;c=J[a+88>>2];J[a+244>>2]=J[a+84>>2];J[a+248>>2]=c;c=J[a+176>>2];J[a+268>>2]=J[a+172>>2];J[a+272>>2]=c;c=J[a+96>>2];J[a+252>>2]=J[a+92>>2];J[a+256>>2]=c;H[a+352|0]=0;J[a+288>>2]=0;N[a+280>>2]=N[a+248>>2]-N[a+264>>2];N[a+276>>2]=N[a+244>>2]-N[a+260>>2];N[a+284>>2]=N[a+252>>2]-N[a+268>>2];J[a+344>>2]=0;J[a+348>>2]=0;J[a+336>>2]=1065353216;J[a+340>>2]=0;c=1;break b;case 1:g=1;j=N[a+8>>2];e=Q(N[a+24>>2]-j);i=N[a+12>>2];h=Q(N[a+28>>2]-i);l=Q(h*Q(Q(0)-i));m=N[a+4>>2];i=Q(N[a+20>>2]-m);j=Q(l+Q(Q(i*Q(Q(0)-m))+Q(Q(Q(0)-j)*e)));c=1;d:{if(!(j>Q(0))){break d}f=Q(Q(h*h)+Q(Q(i*i)+Q(e*e)));if(!(f>j)){f=Q(1);c=2;break d}f=Q(j/f);c=3}J[a+344>>2]=0;J[a+348>>2]=0;N[a+340>>2]=f;j=Q(Q(1)-f);N[a+336>>2]=j;H[a+332|0]=d|c;J[a+256>>2]=0;e=N[a+92>>2];m=Q(e+Q(f*Q(N[a+108>>2]-e)));N[a+252>>2]=m;e=N[a+88>>2];o=Q(e+Q(f*Q(N[a+104>>2]-e)));N[a+248>>2]=o;e=N[a+84>>2];p=Q(e+Q(f*Q(N[a+100>>2]-e)));N[a+244>>2]=p;l=N[a+180>>2];r=N[a+184>>2];e=N[a+168>>2];s=N[a+188>>2];h=N[a+172>>2];i=N[a+164>>2];J[a+288>>2]=0;h=Q(h+Q(f*Q(s-h)));N[a+284>>2]=m-h;e=Q(e+Q(f*Q(r-e)));N[a+280>>2]=o-e;i=Q(i+Q(f*Q(l-i)));N[a+276>>2]=p-i;J[a+272>>2]=0;N[a+268>>2]=h;N[a+264>>2]=e;N[a+260>>2]=i;if(!(c&2)){J[a>>2]=1;g=0}if(!(c&1)){J[a>>2]=g;c=(g<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=j>=Q(0)&f>=Q(0);break b;case 2:J[k+8>>2]=0;J[k+12>>2]=0;J[k>>2]=0;J[k+4>>2]=0;rd(k,a+4|0,a+20|0,a+36|0,b);J[a+256>>2]=0;h=N[a+336>>2];f=N[a+340>>2];e=N[a+344>>2];i=Q(Q(Q(h*N[a+92>>2])+Q(f*N[a+108>>2]))+Q(e*N[a+124>>2]));N[a+252>>2]=i;j=Q(Q(Q(h*N[a+88>>2])+Q(f*N[a+104>>2]))+Q(e*N[a+120>>2]));N[a+248>>2]=j;m=Q(Q(Q(h*N[a+84>>2])+Q(f*N[a+100>>2]))+Q(e*N[a+116>>2]));N[a+244>>2]=m;o=N[a+180>>2];p=N[a+196>>2];l=N[a+168>>2];r=N[a+184>>2];s=N[a+200>>2];u=N[a+172>>2];v=N[a+188>>2];w=N[a+204>>2];x=N[a+164>>2];J[a+288>>2]=0;n=i;i=Q(Q(Q(h*u)+Q(f*v))+Q(e*w));N[a+284>>2]=n-i;n=j;j=Q(Q(Q(h*l)+Q(f*r))+Q(e*s));N[a+280>>2]=n-j;h=Q(Q(Q(h*x)+Q(f*o))+Q(e*p));N[a+276>>2]=m-h;J[a+272>>2]=0;N[a+268>>2]=i;N[a+264>>2]=j;N[a+260>>2]=h;e:{f:{g:{h:{i:{b=J[a>>2];j:{if((b|0)>=4){g=K[a+332|0];if(g&8){c=b;break j}c=b-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+60>>2]=J[b+12>>2];J[a+64>>2]=d;d=J[b+8>>2];J[a+52>>2]=J[b+4>>2];J[a+56>>2]=d;d=J[b+88>>2];J[a+132>>2]=J[b+84>>2];J[a+136>>2]=d;d=J[b+96>>2];J[a+140>>2]=J[b+92>>2];J[a+144>>2]=d;d=J[b+176>>2];J[a+220>>2]=J[b+172>>2];J[a+224>>2]=d;d=J[b+168>>2];J[a+212>>2]=J[b+164>>2];J[a+216>>2]=d;break j}c=3;if((b|0)!=3){break i}g=K[a+332|0]}if(g&4){break h}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+44>>2]=J[b+12>>2];J[a+48>>2]=d;d=J[b+8>>2];J[a+36>>2]=J[b+4>>2];J[a+40>>2]=d;d=J[b+96>>2];J[a+124>>2]=J[b+92>>2];J[a+128>>2]=d;d=J[b+88>>2];J[a+116>>2]=J[b+84>>2];J[a+120>>2]=d;d=J[b+176>>2];J[a+204>>2]=J[b+172>>2];J[a+208>>2]=d;d=J[b+168>>2];J[a+196>>2]=J[b+164>>2];J[a+200>>2]=d;break h}c=2;if((b|0)<2){break g}g=K[a+332|0]}if(g&2){break f}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+28>>2]=J[b+12>>2];J[a+32>>2]=d;d=J[b+8>>2];J[a+20>>2]=J[b+4>>2];J[a+24>>2]=d;d=J[b+96>>2];J[a+108>>2]=J[b+92>>2];J[a+112>>2]=d;d=J[b+88>>2];J[a+100>>2]=J[b+84>>2];J[a+104>>2]=d;d=J[b+176>>2];J[a+188>>2]=J[b+172>>2];J[a+192>>2]=d;d=J[b+168>>2];J[a+180>>2]=J[b+164>>2];J[a+184>>2]=d;break f}c=1;if((b|0)!=1){break e}g=K[a+332|0]}if(g&1){break e}c=c-1|0;J[a>>2]=c;c=(c<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=0;if(!(e>=Q(0))|(!(N[a+336>>2]>=Q(0))|!(f>=Q(0)))){break b}c=N[a+348>>2]>=Q(0);break b;case 3:break c;default:break b}}J[k+8>>2]=0;J[k+12>>2]=0;J[k>>2]=0;J[k+4>>2]=0;g=ga-48|0;ga=g;H[g+24|0]=0;d=J[k+12>>2];J[b+8>>2]=J[k+8>>2];J[b+12>>2]=d;d=J[k+4>>2];J[b>>2]=J[k>>2];J[b+4>>2]=d;H[b+16|0]=K[b+16|0]|15;S=N[k+8>>2];d=a+4|0;f=N[d+8>>2];R=Q(S-f);A=a+36|0;n=N[A+8>>2];e=Q(n-f);B=a+52|0;t=N[B>>2];h=N[d>>2];i=Q(t-h);C=a+20|0;j=N[C+4>>2];m=N[d+4>>2];o=Q(j-m);p=N[C>>2];l=Q(p-h);F=N[B+4>>2];r=Q(F-m);D=Q(Q(i*o)-Q(l*r));G=N[A>>2];s=Q(G-h);u=N[C+8>>2];v=Q(u-f);T=N[B+8>>2];w=Q(T-f);E=Q(Q(r*v)-Q(o*w));I=N[A+4>>2];x=Q(I-m);L=Q(Q(w*l)-Q(v*i));y=Q(Q(e*D)+Q(Q(s*E)+Q(x*L)));M=Q(R*D);U=N[k>>2];D=Q(U-h);O=Q(D*E);V=N[k+4>>2];E=Q(V-m);W=Q(y*y)<Q(9.99999905104687e-9)?-1:Q(Q(M+Q(O+Q(E*L)))*y)<Q(0);L=Q(Q(l*x)-Q(s*o));M=Q(Q(o*e)-Q(x*v));O=Q(Q(v*s)-Q(e*l));y=Q(Q(w*L)+Q(Q(i*M)+Q(O*r)));Y=Q(f-u);f=Q(t-p);t=Q(I-j);G=Q(G-p);F=Q(F-j);I=Q(Q(f*t)-Q(G*F));Z=Q(h-p);h=Q(n-u);n=Q(T-u);t=Q(Q(F*h)-Q(t*n));h=Q(Q(n*G)-Q(h*f));f=Q(Q(Y*I)+Q(Q(Z*t)+Q(Q(m-j)*h)));m=Q(Q(s*r)-Q(i*x));n=l;l=Q(Q(x*w)-Q(r*e));i=Q(Q(e*i)-Q(w*s));e=Q(Q(v*m)+Q(Q(n*l)+Q(o*i)));z=Q(e*e)<Q(9.99999905104687e-9)?-1:Q(Q(Q(R*m)+Q(Q(D*l)+Q(E*i)))*e)<Q(0);X=Q(f*f)<Q(9.99999905104687e-9)?-1:Q(Q(Q(Q(S-u)*I)+Q(Q(Q(U-p)*t)+Q(Q(V-j)*h)))*f)<Q(0);q=Q(y*y)<Q(9.99999905104687e-9)?-1:Q(Q(Q(R*L)+Q(Q(D*M)+Q(E*O)))*y)<Q(0);P=z|(X|(q|W));k:{if((P|0)<0){H[b+36|0]=1;break k}if(!P){break k}f=Q(3.4028234663852886e38);l:{if(!q){break l}rd(k,d,C,A,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);f=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);l=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(f+Q(l+Q(e*e)));f=Q(3.4028234663852886e38);if(!(e<Q(3.4028234663852886e38))){break l}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;q=K[g+24|0];H[b+16|0]=q&1|K[b+16|0]&240|q&2|q&4;f=N[g+36>>2];q=J[g+32>>2];P=J[g+28>>2];J[b+32>>2]=0;N[b+28>>2]=f;J[b+20>>2]=P;J[b+24>>2]=q;f=e}m:{if(!z){break m}rd(k,d,A,B,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);l=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);n=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(l+Q(n+Q(e*e)));if(!(e<f)){break m}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;z=K[g+24|0];q=z<<1;H[b+16|0]=q&8|(q&4|(z&1|K[b+16|0]&240));q=J[g+36>>2];z=J[g+32>>2];f=N[g+28>>2];J[b+24>>2]=0;J[b+28>>2]=z;J[b+32>>2]=q;N[b+20>>2]=f;f=e}n:{if(!W){break n}rd(k,d,B,C,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);l=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);n=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(l+Q(n+Q(e*e)));if(!(e<f)){break n}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;d=K[g+24|0];H[b+16|0]=d&1|K[b+16|0]&240|d>>>1&2|d<<2&8;f=N[g+36>>2];h=N[g+28>>2];N[b+32>>2]=N[g+32>>2];J[b+28>>2]=0;N[b+24>>2]=f;N[b+20>>2]=h;f=e}_=1;if(!X){break k}rd(k,C,B,A,g+8|0);j=f;f=N[g+16>>2];e=Q(f-N[k+8>>2]);l=Q(e*e);e=N[g+8>>2];h=Q(e-N[k>>2]);n=Q(h*h);h=N[g+12>>2];i=Q(h-N[k+4>>2]);if(!(j>Q(l+Q(n+Q(i*i))))){break k}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=f;N[b+4>>2]=h;N[b>>2]=e;d=K[g+24|0];H[b+16|0]=d&4|K[b+16|0]&240|d<<1&2|d<<2&8;f=N[g+36>>2];e=N[g+28>>2];N[b+32>>2]=N[g+32>>2];N[b+28>>2]=f;N[b+24>>2]=e;J[b+20>>2]=0}ga=g+48|0;if(_){J[a+256>>2]=0;e=N[a+336>>2];h=N[a+340>>2];i=N[a+344>>2];f=N[a+348>>2];j=Q(Q(Q(Q(e*N[a+92>>2])+Q(h*N[a+108>>2]))+Q(i*N[a+124>>2]))+Q(f*N[a+140>>2]));N[a+252>>2]=j;m=Q(Q(Q(Q(e*N[a+88>>2])+Q(h*N[a+104>>2]))+Q(i*N[a+120>>2]))+Q(f*N[a+136>>2]));N[a+248>>2]=m;o=Q(Q(Q(Q(e*N[a+84>>2])+Q(h*N[a+100>>2]))+Q(i*N[a+116>>2]))+Q(f*N[a+132>>2]));N[a+244>>2]=o;J[a+288>>2]=0;J[a+272>>2]=0;p=Q(Q(Q(Q(e*N[a+164>>2])+Q(h*N[a+180>>2]))+Q(i*N[a+196>>2]))+Q(f*N[a+212>>2]));N[a+260>>2]=p;l=Q(Q(Q(Q(e*N[a+168>>2])+Q(h*N[a+184>>2]))+Q(i*N[a+200>>2]))+Q(f*N[a+216>>2]));N[a+264>>2]=l;e=Q(Q(Q(Q(e*N[a+172>>2])+Q(h*N[a+188>>2]))+Q(i*N[a+204>>2]))+Q(f*N[a+220>>2]));N[a+268>>2]=e;N[a+276>>2]=o-p;N[a+280>>2]=m-l;N[a+284>>2]=j-e;o:{p:{q:{r:{s:{b=J[a>>2];t:{if((b|0)>=4){g=K[a+332|0];if(g&8){c=b;break t}c=b-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+60>>2]=J[b+12>>2];J[a+64>>2]=d;d=J[b+8>>2];J[a+52>>2]=J[b+4>>2];J[a+56>>2]=d;d=J[b+96>>2];J[a+140>>2]=J[b+92>>2];J[a+144>>2]=d;d=J[b+88>>2];J[a+132>>2]=J[b+84>>2];J[a+136>>2]=d;d=J[b+176>>2];J[a+220>>2]=J[b+172>>2];J[a+224>>2]=d;d=J[b+168>>2];J[a+212>>2]=J[b+164>>2];J[a+216>>2]=d;break t}c=3;if((b|0)!=3){break s}g=K[a+332|0]}if(g&4){break r}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+44>>2]=J[b+12>>2];J[a+48>>2]=d;d=J[b+8>>2];J[a+36>>2]=J[b+4>>2];J[a+40>>2]=d;d=J[b+96>>2];J[a+124>>2]=J[b+92>>2];J[a+128>>2]=d;d=J[b+88>>2];J[a+116>>2]=J[b+84>>2];J[a+120>>2]=d;d=J[b+176>>2];J[a+204>>2]=J[b+172>>2];J[a+208>>2]=d;d=J[b+168>>2];J[a+196>>2]=J[b+164>>2];J[a+200>>2]=d;break r}c=2;if((b|0)<2){break q}g=K[a+332|0]}if(g&2){break p}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+28>>2]=J[b+12>>2];J[a+32>>2]=d;d=J[b+8>>2];J[a+20>>2]=J[b+4>>2];J[a+24>>2]=d;d=J[b+96>>2];J[a+108>>2]=J[b+92>>2];J[a+112>>2]=d;d=J[b+88>>2];J[a+100>>2]=J[b+84>>2];J[a+104>>2]=d;d=J[b+176>>2];J[a+188>>2]=J[b+172>>2];J[a+192>>2]=d;d=J[b+168>>2];J[a+180>>2]=J[b+164>>2];J[a+184>>2]=d;break p}c=1;if((b|0)!=1){break o}g=K[a+332|0]}if(g&1){break o}c=c-1|0;J[a>>2]=c;c=(c<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=N[a+336>>2]>=Q(0)&N[a+340>>2]>=Q(0)&N[a+344>>2]>=Q(0)&f>=Q(0);break b}if(K[a+352|0]){break b}J[a+276>>2]=0;J[a+280>>2]=0;c=1;H[a+312|0]=1;J[a+284>>2]=0;J[a+288>>2]=0;break a}H[a+312|0]=c}ga=k+16|0;return(c&255)!=0}function Iz(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=0,w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0);i=ga-96|0;ga=i;c=J[a+136>>2];a:{if(!c){break a}if(!((c|0)<=J[a+8>>2]|(c|0)<=J[a+12>>2])){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0;j=J[a+8>>2];b:{if((j|0)<=0){break b}if((j|0)!=1){t=j&-2;while(1){n=d<<4;k=n+h|0;g=n+J[a+16>>2]|0;v=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=v;v=J[g+12>>2];J[k+8>>2]=J[g+8>>2];J[k+12>>2]=v;g=n|16;n=g+h|0;g=g+J[a+16>>2]|0;k=J[g+4>>2];J[n>>2]=J[g>>2];J[n+4>>2]=k;k=J[g+12>>2];J[n+8>>2]=J[g+8>>2];J[n+12>>2]=k;d=d+2|0;e=e+2|0;if((t|0)!=(e|0)){continue}break}}if(!(j&1)){break b}e=d<<4;d=e+h|0;e=e+J[a+16>>2]|0;j=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=j;j=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=j}d=J[a+16>>2];if(!(d?!d|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=c}J[a+8>>2]=c;if(!((c|0)<=J[a+28>>2]|(c|0)<=J[a+32>>2])){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0;j=J[a+28>>2];c:{if((j|0)<=0){break c}d=0;if((j|0)!=1){t=j&-2;e=0;while(1){n=d<<4;k=n+h|0;g=n+J[a+36>>2]|0;v=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=v;v=J[g+12>>2];J[k+8>>2]=J[g+8>>2];J[k+12>>2]=v;g=n|16;n=g+h|0;g=g+J[a+36>>2]|0;k=J[g+4>>2];J[n>>2]=J[g>>2];J[n+4>>2]=k;k=J[g+12>>2];J[n+8>>2]=J[g+8>>2];J[n+12>>2]=k;d=d+2|0;e=e+2|0;if((t|0)!=(e|0)){continue}break}}if(!(j&1)){break c}e=d<<4;d=e+h|0;e=e+J[a+36>>2]|0;j=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=j;j=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=j}d=J[a+36>>2];if(!(d?!d|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+36>>2]=h;H[a+40|0]=1;J[a+32>>2]=c}J[a+28>>2]=c;v=J[a+48>>2];if((v|0)<(c|0)){d:{if((c|0)<=J[a+52>>2]){n=c<<2;e=J[a+56>>2];break d}J[8369]=J[8369]+1;n=c<<2;e=ia[J[6782]](n,16)|0;g=J[a+56>>2];e:{t=J[a+48>>2];if((t|0)>0){j=0;d=0;if(t-1>>>0>=3){F=t&-4;h=0;while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];x=k|4;N[x+e>>2]=N[g+x>>2];x=k|8;N[x+e>>2]=N[g+x>>2];k=k|12;N[k+e>>2]=N[g+k>>2];d=d+4|0;h=h+4|0;if((F|0)!=(h|0)){continue}break}}h=t&3;if(!h){break e}while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];d=d+1|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}break e}if(g){break e}J[a+56>>2]=e;J[a+52>>2]=c;H[a+60|0]=1;break d}if(g?K[a+60|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+56>>2]=e;H[a+60|0]=1;J[a+52>>2]=c}d=v<<2;qa(d+e|0,0,n-d|0)}J[a+48>>2]=c;v=J[a+68>>2];if((v|0)<(c|0)){f:{if((c|0)<=J[a+72>>2]){n=c<<2;e=J[a+76>>2];break f}J[8369]=J[8369]+1;n=c<<2;e=ia[J[6782]](n,16)|0;g=J[a+76>>2];g:{t=J[a+68>>2];if((t|0)>0){j=0;d=0;if(t-1>>>0>=3){F=t&-4;h=0;while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];x=k|4;N[x+e>>2]=N[g+x>>2];x=k|8;N[x+e>>2]=N[g+x>>2];k=k|12;N[k+e>>2]=N[g+k>>2];d=d+4|0;h=h+4|0;if((F|0)!=(h|0)){continue}break}}h=t&3;if(!h){break g}while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];d=d+1|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}break g}if(g){break g}J[a+76>>2]=e;J[a+72>>2]=c;H[a+80|0]=1;break f}if(g?K[a+80|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+76>>2]=e;H[a+80|0]=1;J[a+72>>2]=c}d=v<<2;qa(d+e|0,0,n-d|0)}J[a+68>>2]=c;j=J[a+136>>2];if((j|0)<=0){break a}c=J[a+56>>2];g=J[a+76>>2];e=0;d=0;if(j-1>>>0>=3){k=j&-4;h=0;while(1){n=d<<2;J[n+g>>2]=0;J[c+n>>2]=0;t=n|4;J[t+g>>2]=0;J[c+t>>2]=0;t=n|8;J[t+g>>2]=0;J[c+t>>2]=0;n=n|12;J[n+g>>2]=0;J[c+n>>2]=0;d=d+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}h=j&3;if(h){while(1){n=d<<2;J[n+g>>2]=0;J[c+n>>2]=0;d=d+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}if((j|0)<=0){break a}g=i- -64|0;e=0;while(1){h=J[a+144>>2]+P(e,284)|0;d=J[h+88>>2];if(d){c=J[h+104>>2];J[i+56>>2]=J[h+100>>2];J[i+60>>2]=c;c=J[h+96>>2];J[i+48>>2]=J[h+92>>2];J[i+52>>2]=c;c=J[h+120>>2];J[g+8>>2]=J[h+116>>2];J[g+12>>2]=c;c=J[h+112>>2];J[g>>2]=J[h+108>>2];J[g+4>>2]=c;c=J[h+136>>2];J[i+88>>2]=J[h+132>>2];J[i+92>>2]=c;c=J[h+128>>2];J[i+80>>2]=J[h+124>>2];J[i+84>>2]=c;c=(i+48|0)+(J[a+120>>2]<<2)|0;f=N[c>>2];l=N[c+16>>2];m=N[c+32>>2];j=e<<4;c=j+J[a+36>>2]|0;J[c+12>>2]=0;N[c+8>>2]=m;N[c+4>>2]=l;N[c>>2]=f;c=j+J[a+36>>2]|0;l=N[c+8>>2];m=N[h+8>>2];p=N[c>>2];o=N[h>>2];q=N[c+4>>2];s=N[h+4>>2];f=Q(Q(l*m)+Q(Q(p*o)+Q(q*s)));l=Q(l-Q(m*f));m=Q(p-Q(o*f));p=Q(q-Q(s*f));f=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(p*p))))));l=Q(l*f);N[c+8>>2]=l;p=Q(p*f);N[c+4>>2]=p;f=Q(m*f);N[c>>2]=f;m=N[h+8>>2];o=N[h>>2];q=N[h+4>>2];c=j+J[a+16>>2]|0;J[c+12>>2]=0;N[c+8>>2]=Q(o*p)-Q(f*q);N[c+4>>2]=Q(m*f)-Q(l*o);N[c>>2]=Q(q*l)-Q(p*m);c=j+J[a+16>>2]|0;f=N[c+8>>2];o=f;m=Q(f*f);f=N[c>>2];l=N[c+4>>2];m=Q(Q(1)/Q(Y(Q(m+Q(Q(f*f)+Q(l*l))))));N[c+8>>2]=o*m;N[c+4>>2]=l*m;N[c>>2]=f*m;c=J[a+116>>2];h=h+16|0;n=e<<2;k=n+J[a+76>>2]|0;j=j+J[a+36>>2]|0;f=N[j+8>>2];l=N[j>>2];m=N[j+4>>2];if(Q(Q(f*f)+Q(Q(l*l)+Q(m*m)))>Q(1.100000023841858)){f=Q(0)}else{r=N[h>>2];p=Q(r-N[c+52>>2]);s=N[h+4>>2];o=Q(s-N[c+56>>2]);w=Q(Q(p*m)-Q(l*o));u=N[h+8>>2];q=Q(u-N[c+60>>2]);A=Q(Q(o*f)-Q(m*q));y=Q(Q(q*l)-Q(f*p));C=Q(Q(N[c+44>>2]*w)+Q(Q(N[c+12>>2]*A)+Q(y*N[c+28>>2])));s=Q(s-N[d+56>>2]);r=Q(r-N[d+52>>2]);z=Q(Q(l*s)-Q(r*m));u=Q(u-N[d+60>>2]);D=Q(Q(m*u)-Q(s*f));G=Q(Q(f*r)-Q(u*l));I=Q(Q(N[d+44>>2]*z)+Q(Q(N[d+12>>2]*D)+Q(G*N[d+28>>2])));B=f;f=N[c+328>>2];E=N[c+332>>2];L=N[d+328>>2];M=N[d+332>>2];O=Q(B*Q(Q(Q(Q(f*o)-Q(p*E))+N[c+320>>2])-Q(Q(Q(L*s)-Q(r*M))+N[d+320>>2])));B=l;l=N[c+336>>2];E=Q(Q(Q(E*q)-Q(o*l))+N[c+312>>2]);o=N[d+336>>2];l=Q(Q(O+Q(Q(B*Q(E-Q(Q(Q(M*u)-Q(s*o))+N[d+312>>2])))+Q(m*Q(Q(Q(Q(l*p)-Q(q*f))+N[c+316>>2])-Q(Q(Q(o*r)-Q(u*L))+N[d+316>>2])))))*Q(-.20000000298023224));f=Q(Q(N[c+36>>2]*w)+Q(Q(N[c+4>>2]*A)+Q(y*N[c+20>>2])));o=Q(Q(f*N[c+396>>2])*f);f=Q(Q(N[c+40>>2]*w)+Q(Q(N[c+8>>2]*A)+Q(y*N[c+24>>2])));o=Q(N[d+344>>2]+Q(N[c+344>>2]+Q(Q(Q(C*N[c+404>>2])*C)+Q(o+Q(f*Q(f*N[c+400>>2]))))));f=Q(Q(N[d+36>>2]*z)+Q(Q(N[d+4>>2]*D)+Q(G*N[d+20>>2])));m=Q(Q(f*N[d+396>>2])*f);f=Q(Q(N[d+40>>2]*z)+Q(Q(N[d+8>>2]*D)+Q(G*N[d+24>>2])));f=Q(l*Q(Q(1)/Q(o+Q(Q(Q(I*N[d+404>>2])*I)+Q(m+Q(f*Q(f*N[d+400>>2])))))))}N[k>>2]=f;d=n+J[a+76>>2]|0;N[d>>2]=N[6781]*N[d>>2];j=J[a+136>>2]}e=e+1|0;if((j|0)>(e|0)){continue}break}if((j|0)<=0){break a}e=J[a+144>>2];h=0;d=0;while(1){h:{i:{j:{n=P(d,284);j=n+e|0;c=J[j+88>>2];if(c){f=N[j+252>>2];if(f==Q(0)){break j}f=Q(f*b);break i}J[J[a+56>>2]+(d<<2)>>2]=0;J[(e+n|0)+280>>2]=1065353216;break h}e=J[a+116>>2];g=J[a+16>>2]+(d<<4)|0;f=N[j+256>>2];J[i+52>>2]=c;J[i+48>>2]=e;k=J[j+20>>2];J[i+56>>2]=J[j+16>>2];J[i+60>>2]=k;k=J[j+28>>2];J[i+64>>2]=J[j+24>>2];J[i+68>>2]=k;k=J[g+4>>2];J[i+72>>2]=J[g>>2];J[i+76>>2]=k;k=J[g+12>>2];J[i+80>>2]=J[g+8>>2];J[i+84>>2]=k;N[i+92>>2]=f==Q(0)?Q(0):f;A=N[j+16>>2];p=Q(A-N[e+52>>2]);f=N[g+4>>2];l=N[g>>2];y=N[j+20>>2];o=Q(y-N[e+56>>2]);s=Q(Q(p*f)-Q(l*o));m=N[g+8>>2];C=N[j+24>>2];q=Q(C-N[e+60>>2]);r=Q(Q(o*m)-Q(f*q));u=Q(Q(q*l)-Q(m*p));w=Q(Q(N[e+296>>2]*s)+Q(Q(N[e+264>>2]*r)+Q(u*N[e+280>>2])));z=Q(Q(N[e+300>>2]*s)+Q(Q(N[e+268>>2]*r)+Q(u*N[e+284>>2])));D=Q(m*Q(Q(w*o)-Q(p*z)));B=o;o=Q(Q(N[e+304>>2]*s)+Q(Q(N[e+272>>2]*r)+Q(u*N[e+288>>2])));z=Q(N[e+344>>2]+Q(D+Q(Q(l*Q(Q(z*q)-Q(B*o)))+Q(f*Q(Q(o*p)-Q(q*w))))));B=m;p=Q(A-N[c+52>>2]);o=Q(y-N[c+56>>2]);s=Q(Q(p*f)-Q(l*o));q=Q(C-N[c+60>>2]);r=Q(Q(o*m)-Q(f*q));m=Q(Q(q*l)-Q(m*p));u=Q(Q(N[c+296>>2]*s)+Q(Q(N[c+264>>2]*r)+Q(m*N[c+280>>2])));w=Q(Q(N[c+300>>2]*s)+Q(Q(N[c+268>>2]*r)+Q(m*N[c+284>>2])));y=l;l=Q(Q(N[c+304>>2]*s)+Q(Q(N[c+272>>2]*r)+Q(m*N[c+288>>2])));N[i+88>>2]=Q(1)/Q(z+Q(N[c+344>>2]+Q(Q(B*Q(Q(u*o)-Q(p*w)))+Q(Q(y*Q(Q(w*q)-Q(o*l)))+Q(f*Q(Q(l*p)-Q(q*u)))))));f=N[i+92>>2];l=Q(-f);e=J[i+48>>2];m=N[e+328>>2];p=N[i+60>>2];o=Q(p-N[e+56>>2]);q=N[i+56>>2];s=Q(q-N[e+52>>2]);r=N[e+332>>2];c=J[i+52>>2];u=N[c+328>>2];p=Q(p-N[c+56>>2]);q=Q(q-N[c+52>>2]);w=N[c+332>>2];C=Q(N[i+80>>2]*Q(Q(Q(Q(m*o)-Q(s*r))+N[e+320>>2])-Q(Q(Q(u*p)-Q(q*w))+N[c+320>>2])));B=r;r=N[i+64>>2];A=Q(r-N[e+60>>2]);y=o;o=N[e+336>>2];r=Q(r-N[c+60>>2]);z=p;p=N[c+336>>2];m=Q(N[i+88>>2]*Q(-Q(C+Q(Q(N[i+72>>2]*Q(Q(Q(Q(B*A)-Q(y*o))+N[e+312>>2])-Q(Q(Q(w*r)-Q(z*p))+N[c+312>>2])))+Q(Q(Q(Q(Q(o*s)-Q(A*m))+N[e+316>>2])-Q(Q(Q(p*q)-Q(r*u))+N[c+316>>2]))*N[i+76>>2])))));f=f<m?f:m;f=f<l?l:f;e=J[a+144>>2]}g=d<<2;k=g+J[a+56>>2]|0;J[k>>2]=0;c=e+n|0;J[c+280>>2]=1065353216;l=N[j+228>>2];m=N[j+276>>2];N[k>>2]=f;f=Q(f*Q(.5));o=Q(f*f);f=N[g+J[a+76>>2]>>2];f=Q(o+Q(f*f));l=Q(l*Q(m*b));if(!(f>Q(l*l))){break h}N[c+280>>2]=Q(l/Q(Y(f)))*N[c+280>>2];h=1}d=d+1|0;c=J[a+136>>2];if((d|0)<(c|0)){continue}break}d=0;if((c|0)>0&h){h=J[a+56>>2];j=J[a+144>>2];g=J[a+76>>2];while(1){n=d<<2;e=n+g|0;k:{if(N[e>>2]==Q(0)){break k}k=j+P(d,284)|0;b=N[k+280>>2];if(!(b<Q(1))){break k}n=h+n|0;N[n>>2]=b*N[n>>2];N[e>>2]=N[k+280>>2]*N[e>>2]}d=d+1|0;if((c|0)!=(d|0)){continue}break}}if((c|0)<=0){break a}d=0;while(1){j=P(d,284);e=j+J[a+144>>2]|0;b=N[e+16>>2];c=J[a+116>>2];f=N[c+52>>2];l=N[e+20>>2];m=N[c+56>>2];p=N[e+24>>2];o=N[c+60>>2];J[i+60>>2]=0;N[i+56>>2]=p-o;N[i+52>>2]=l-m;N[i+48>>2]=b-f;g=d<<2;b=N[g+J[a+56>>2]>>2];if(b!=Q(0)){h=J[a+16>>2]+(d<<4)|0;f=N[h>>2];l=N[h+4>>2];m=N[h+8>>2];J[i+44>>2]=0;N[i+40>>2]=b*m;N[i+36>>2]=b*l;N[i+32>>2]=f*b;ub(c,i+32|0,i+48|0)}g=g+J[a+76>>2]|0;if(N[g>>2]!=Q(0)){c=J[(j+J[a+144>>2]|0)+88>>2];b=N[c+52>>2];f=N[c+56>>2];l=N[c+60>>2];m=N[e+16>>2];p=N[e+20>>2];o=N[e+24>>2];J[i+44>>2]=0;N[i+40>>2]=o-l;N[i+36>>2]=p-f;N[i+32>>2]=m-b;h=J[a+36>>2]+(d<<4)|0;f=N[h>>2];l=N[h+4>>2];m=N[h+8>>2];b=N[g>>2];J[i+28>>2]=0;N[i+24>>2]=b*m;N[i+20>>2]=b*l;N[i+16>>2]=f*b;j=J[a+116>>2];h=j+(J[a+124>>2]<<2)|0;f=N[h+36>>2];l=N[i+56>>2];m=N[h+4>>2];p=N[i+48>>2];o=N[h+20>>2];q=N[i+52>>2];b=Q(Q(Q(f*l)+Q(Q(m*p)+Q(o*q)))*Q(Q(1)-N[e+244>>2]));N[i+56>>2]=l-Q(f*b);N[i+52>>2]=q-Q(o*b);N[i+48>>2]=p-Q(m*b);ub(j,i+16|0,i+48|0);J[i+12>>2]=0;N[i+8>>2]=-N[i+24>>2];N[i+4>>2]=-N[i+20>>2];N[i>>2]=-N[i+16>>2];ub(c,i,i+32|0)}d=d+1|0;if((d|0)<J[a+136>>2]){continue}break}}ga=i+96|0}function Ul(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=Q(0),B=0,C=Q(0),D=0,E=0,F=0,G=0,O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0);g=ga-96|0;ga=g;H[g+52|0]=1;J[g+48>>2]=0;H[g+72|0]=1;J[g+40>>2]=0;J[g+44>>2]=0;J[g+68>>2]=0;H[g+92|0]=1;J[g+60>>2]=0;J[g+64>>2]=0;J[g+88>>2]=0;J[g+80>>2]=0;J[g+84>>2]=0;J[g+28>>2]=0;H[g+32|0]=1;J[g+20>>2]=0;J[g+24>>2]=0;J[a+72>>2]=0;J[a+76>>2]=0;J[a+64>>2]=0;J[a+68>>2]=0;f=J[a+28>>2];a:{if((f|0)<=0){break a}while(1){d=J[a+36>>2];E=P(y,36);F=J[(d+E|0)+4>>2];if((F|0)>0){z=0;while(1){b=J[(d+E|0)+12>>2];d=J[b+(z<<2)>>2];z=z+1|0;G=(F|0)==(z|0);e=J[b+((G?0:z)<<2)>>2];I[g+10>>1]=e;I[g+8>>1]=d;i=0;b=d<<16>>16;f=e<<16>>16;if((b|0)<(f|0)){I[g+10>>1]=d;I[g+8>>1]=e;f=d;b=e}e=f<<16;c=b<<16>>16;d=e+c&J[g+64>>2]-1;b:{if(d>>>0>=M[g+20>>2]){break b}d=J[J[g+28>>2]+(d<<2)>>2];if((d|0)==-1){break b}k=J[g+48>>2];o=J[g+88>>2];while(1){d=d<<2;j=d+o|0;if(!(L[j>>1]==(b&65535)&L[j+2>>1]==(f&65535))){d=J[d+k>>2];if((d|0)!=-1){continue}break b}break}i=d+J[g+68>>2]|0}d=J[a+16>>2];b=d+(e>>16<<4)|0;d=d+(c<<4)|0;m=Q(N[b+8>>2]-N[d+8>>2]);q=Q(N[b>>2]-N[d>>2]);n=Q(N[b+4>>2]-N[d+4>>2]);s=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(q*q)+Q(n*n))))));m=Q(m*s);n=Q(n*s);q=Q(q*s);b=J[a+48>>2];c:{if((b|0)>0){e=J[a+56>>2];d=0;while(1){f=e+(d<<4)|0;s=N[f+8>>2];u=N[f>>2];v=N[f+4>>2];if(!(+Q(R(Q(s-m)))>1e-6?1:+Q(R(Q(u-q)))>1e-6|+Q(R(Q(v-n)))>1e-6)|!(+Q(R(Q(m+s)))>1e-6?1:+Q(R(Q(q+u)))>1e-6|+Q(R(Q(n+v)))>1e-6)){break c}d=d+1|0;if((b|0)!=(d|0)){continue}break}}d:{if(J[a+52>>2]!=(b|0)){break d}e=b?b<<1:1;if((e|0)<=(b|0)){break d}e:{if(!e){f=0;break e}J[8369]=J[8369]+1;f=ia[J[6782]](e<<4,16)|0;b=J[a+48>>2]}f:{if((b|0)<=0){break f}j=b&1;d=0;if((b|0)!=1){l=b&-2;b=0;while(1){k=d<<4;o=k+f|0;c=k+J[a+56>>2]|0;t=J[c+4>>2];J[o>>2]=J[c>>2];J[o+4>>2]=t;t=J[c+12>>2];J[o+8>>2]=J[c+8>>2];J[o+12>>2]=t;c=k|16;k=c+f|0;c=c+J[a+56>>2]|0;o=J[c+4>>2];J[k>>2]=J[c>>2];J[k+4>>2]=o;o=J[c+12>>2];J[k+8>>2]=J[c+8>>2];J[k+12>>2]=o;d=d+2|0;b=b+2|0;if((l|0)!=(b|0)){continue}break}}if(!j){break f}d=d<<4;b=d+f|0;d=d+J[a+56>>2]|0;c=J[d+4>>2];J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[d+12>>2];J[b+8>>2]=J[d+8>>2];J[b+12>>2]=c}b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=f;H[a+60|0]=1;J[a+52>>2]=e;b=J[a+48>>2]}b=J[a+56>>2]+(b<<4)|0;J[b+12>>2]=0;N[b+8>>2]=m;N[b+4>>2]=n;N[b>>2]=q;J[a+48>>2]=J[a+48>>2]+1}g:{if(i){I[i+2>>1]=y;break g}I[g>>1]=y;I[g+2>>1]=65535;h:{i:{e=I[g+8>>1];f=L[g+10>>1];c=g+16|0;d=J[c+48>>2];o=e+(f<<16)&d-1;j:{if(o>>>0>=M[c+4>>2]){break j}b=J[J[c+12>>2]+(o<<2)>>2];if((b|0)==-1){break j}i=J[c+32>>2];k=J[c+72>>2];e=e&65535;while(1){j=b<<2;l=j+k|0;if((e|0)==L[l>>1]&(f|0)==L[l+2>>1]){break i}b=J[i+j>>2];if((b|0)!=-1){continue}break}}D=J[c+44>>2];b=D;k:{if((d|0)!=(b|0)){break k}b=d;i=b?b<<1:1;if((b|0)>=(i|0)){break k}l:{if(!i){f=0;e=d;break l}J[8369]=J[8369]+1;f=ia[J[6782]](i<<2,16)|0;e=J[c+44>>2]}m:{if((e|0)<=0){break m}k=0;b=0;if(e-1>>>0>=3){t=e&-4;j=0;while(1){l=b<<2;h=l+f|0;p=l+J[c+52>>2]|0;p=L[p>>1]|L[p+2>>1]<<16;I[h>>1]=p;I[h+2>>1]=p>>>16;h=l|4;p=h+f|0;h=h+J[c+52>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;h=l|8;p=h+f|0;h=h+J[c+52>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;l=l|12;h=l+f|0;l=l+J[c+52>>2]|0;l=L[l>>1]|L[l+2>>1]<<16;I[h>>1]=l;I[h+2>>1]=l>>>16;b=b+4|0;j=j+4|0;if((t|0)!=(j|0)){continue}break}}e=e&3;if(!e){break m}while(1){j=b<<2;l=j+f|0;j=j+J[c+52>>2]|0;j=L[j>>1]|L[j+2>>1]<<16;I[l>>1]=j;I[l+2>>1]=j>>>16;b=b+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}b=J[c+52>>2];if(!(b?!b|!K[c+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+52>>2]=f;H[c+56|0]=1;J[c+48>>2]=i;b=J[c+44>>2]}b=J[c+52>>2]+(b<<2)|0;f=L[g>>1]|L[g+2>>1]<<16;I[b>>1]=f;I[b+2>>1]=f>>>16;J[c+44>>2]=J[c+44>>2]+1;i=J[c- -64>>2];n:{if((i|0)!=J[c+68>>2]){break n}l=i?i<<1:1;if((l|0)<=(i|0)){break n}o:{if(!l){f=0;break o}J[8369]=J[8369]+1;f=ia[J[6782]](l<<2,16)|0;i=J[c+64>>2]}p:{if((i|0)<=0){break p}k=0;b=0;if(i-1>>>0>=3){t=i&-4;j=0;while(1){e=b<<2;h=e+f|0;p=e+J[c+72>>2]|0;p=L[p>>1]|L[p+2>>1]<<16;I[h>>1]=p;I[h+2>>1]=p>>>16;h=e|4;p=h+f|0;h=h+J[c+72>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;h=e|8;p=h+f|0;h=h+J[c+72>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;e=e|12;h=e+f|0;e=e+J[c+72>>2]|0;e=L[e>>1]|L[e+2>>1]<<16;I[h>>1]=e;I[h+2>>1]=e>>>16;b=b+4|0;j=j+4|0;if((t|0)!=(j|0)){continue}break}}e=i&3;if(!e){break p}while(1){i=b<<2;j=i+f|0;i=i+J[c+72>>2]|0;i=L[i>>1]|L[i+2>>1]<<16;I[j>>1]=i;I[j+2>>1]=i>>>16;b=b+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}b=J[c+72>>2];if(!(b?!b|!K[c+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+72>>2]=f;H[c+76|0]=1;J[c+68>>2]=l;i=J[c+64>>2]}b=J[c+72>>2]+(i<<2)|0;f=L[g+8>>1]|L[g+10>>1]<<16;I[b>>1]=f;I[b+2>>1]=f>>>16;J[c+64>>2]=J[c+64>>2]+1;if((d|0)<J[c+48>>2]){e=0;i=0;l=0;o=0;k=J[c+48>>2];d=J[c+4>>2];q:{if((k|0)<=(d|0)){break q}r:{if((k|0)<=J[c+8>>2]){e=J[c+12>>2];break r}if(k){J[8369]=J[8369]+1;e=ia[J[6782]](k<<2,16)|0;b=J[c+4>>2]}else{b=d}f=J[c+12>>2];s:{t:{if((b|0)>0){if(b-1>>>0>=3){t=b&-4;while(1){j=i<<2;J[j+e>>2]=J[f+j>>2];h=j|4;J[h+e>>2]=J[f+h>>2];h=j|8;J[h+e>>2]=J[f+h>>2];j=j|12;J[j+e>>2]=J[f+j>>2];i=i+4|0;l=l+4|0;if((t|0)!=(l|0)){continue}break}}b=b&3;if(!b){break t}while(1){j=i<<2;J[j+e>>2]=J[f+j>>2];i=i+1|0;o=o+1|0;if((b|0)!=(o|0)){continue}break}break t}if(f){break t}break s}if(f?K[c+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[c+12>>2]=e;H[c+16|0]=1;J[c+8>>2]=k}qa((d<<2)+e|0,0,k-d<<2);J[c+4>>2]=k;h=k<<2;f=J[c+24>>2];if((f|0)<(k|0)){u:{if((k|0)<=J[c+28>>2]){e=J[c+32>>2];break u}v:{if(!k){e=0;b=f;break v}J[8369]=J[8369]+1;e=ia[J[6782]](h,16)|0;b=J[c+24>>2]}j=J[c+32>>2];w:{if((b|0)>0){o=0;i=0;if(b-1>>>0>=3){p=b&-4;l=0;while(1){t=i<<2;J[t+e>>2]=J[j+t>>2];B=t|4;J[B+e>>2]=J[j+B>>2];B=t|8;J[B+e>>2]=J[j+B>>2];t=t|12;J[t+e>>2]=J[j+t>>2];i=i+4|0;l=l+4|0;if((p|0)!=(l|0)){continue}break}}b=b&3;if(!b){break w}while(1){l=i<<2;J[l+e>>2]=J[j+l>>2];i=i+1|0;o=o+1|0;if((b|0)!=(o|0)){continue}break}break w}if(j){break w}J[c+32>>2]=e;J[c+28>>2]=k;H[c+36|0]=1;break u}if(j?K[c+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+32>>2]=e;H[c+36|0]=1;J[c+28>>2]=k}qa((f<<2)+e|0,0,k-f<<2)}J[c+24>>2]=k;if((k|0)>0){qa(J[c+12>>2],255,h);qa(J[c+32>>2],255,h)}if((d|0)<=0){break q}f=J[c+32>>2];e=J[c+72>>2];k=J[c+12>>2];i=0;while(1){o=i<<2;b=o+e|0;b=k+(((L[b+2>>1]<<16)+I[b>>1]&J[c+48>>2]-1)<<2)|0;J[f+o>>2]=J[b>>2];J[b>>2]=i;i=i+1|0;if((d|0)!=(i|0)){continue}break}}o=I[g+8>>1]+(L[g+10>>1]<<16)&J[c+48>>2]-1}b=J[c+12>>2]+(o<<2)|0;J[J[c+32>>2]+(D<<2)>>2]=J[b>>2];J[b>>2]=D;break h}b=J[c+52>>2]+(b<<2)|0;d=L[g>>1]|L[g+2>>1]<<16;I[b>>1]=d;I[b+2>>1]=d>>>16}}if(!G){d=J[a+36>>2];continue}break}f=J[a+28>>2]}y=y+1|0;if((y|0)<(f|0)){continue}break}i=0;if((f|0)<=0){break a}i=(f|0)>0;b=J[a+16>>2];l=J[a+36>>2];y=0;while(1){d=l+P(y,36)|0;c=J[d+4>>2];if((c|0)>=3){z=c-1|0;k=J[d+12>>2];e=b+(J[k>>2]<<4)|0;n=N[a+72>>2];q=N[a+68>>2];s=N[a+64>>2];d=1;while(1){o=b+(J[k+(d<<2)>>2]<<4)|0;m=N[o+8>>2];d=d+1|0;j=b+(J[k+((d|0)%(c|0)<<2)>>2]<<4)|0;v=N[j+8>>2];u=N[e>>2];O=N[o>>2];S=Q(u-O);r=N[e+4>>2];T=N[j+4>>2];C=Q(r-T);U=N[j>>2];V=Q(u-U);W=N[o+4>>2];x=Q(r-W);A=Q(Q(S*C)-Q(V*x));_=x;x=N[e+8>>2];X=Q(x-v);Z=Q(x-m);C=Q(Q(_*X)-Q(C*Z));x=Q(Q(Q(x+m)+v)*Q(.3333333432674408));m=Q(Q(Z*V)-Q(X*S));m=Q(Q(Y(Q(Q(A*A)+Q(Q(C*C)+Q(m*m)))))*Q(.5));n=Q(n+Q(x*m));N[a+72>>2]=n;q=Q(q+Q(Q(Q(T+Q(r+W))*Q(.3333333432674408))*m));N[a+68>>2]=q;s=Q(s+Q(Q(Q(U+Q(u+O))*Q(.3333333432674408))*m));N[a+64>>2]=s;w=Q(w+m);if((d|0)!=(z|0)){continue}break}}y=y+1|0;if((y|0)!=(f|0)){continue}break}}J[a+96>>2]=2139095039;m=Q(Q(1)/w);q=Q(m*N[a+64>>2]);N[a+64>>2]=q;s=Q(m*N[a+68>>2]);N[a+68>>2]=s;w=Q(m*N[a+72>>2]);N[a+72>>2]=w;u=Q(3.4028234663852886e38);m=Q(3.4028234663852886e38);if(i){e=J[a+36>>2];b=0;while(1){d=e+P(b,36)|0;n=Q(R(Q(N[d+32>>2]+Q(Q(w*N[d+28>>2])+Q(Q(q*N[d+20>>2])+Q(N[d+24>>2]*s))))));if(n<m){N[a+96>>2]=n;m=n}b=b+1|0;if((f|0)!=(b|0)){continue}break}}f=J[a+8>>2];x:{if((f|0)<=0){v=Q(-3.4028234663852886e38);n=Q(3.4028234663852886e38);q=Q(-3.4028234663852886e38);s=Q(-3.4028234663852886e38);w=Q(3.4028234663852886e38);break x}e=J[a+16>>2];s=Q(-3.4028234663852886e38);d=0;w=Q(3.4028234663852886e38);q=Q(-3.4028234663852886e38);v=Q(-3.4028234663852886e38);n=Q(3.4028234663852886e38);while(1){b=e+(d<<4)|0;r=N[b+8>>2];s=s<r?r:s;n=n>r?r:n;r=N[b+4>>2];q=q<r?r:q;u=r<u?r:u;r=N[b>>2];v=r>v?r:v;w=r<w?r:w;d=d+1|0;if((f|0)!=(d|0)){continue}break}}d=0;J[a+128>>2]=0;x=Q(s-n);N[a+124>>2]=x;r=Q(q-u);N[a+120>>2]=r;A=Q(v-w);N[a+116>>2]=A;J[a+112>>2]=0;N[a+108>>2]=n+s;N[a+104>>2]=u+q;N[a+100>>2]=v+w;b=r>A;f=x>(b?r:A)?2:b;b=f<<2;n=N[b+(a+116|0)>>2];m=Q(m/Q(1.7320507764816284));N[a+84>>2]=m;N[a+88>>2]=m;N[a+80>>2]=m;b=b+(a+80|0)|0;n=Q(n*Q(.5));N[b>>2]=n;n=Q(Q(n-m)*Q(.0009765625));y:{z:{while(1){if(Vl(a)){break z}N[b>>2]=N[b>>2]-n;d=d+1|0;if((d|0)!=1024){continue}break}N[a+84>>2]=m;N[a+88>>2]=m;N[a+80>>2]=m;break y}d=a+80|0;b=1<<f&3;f=d+(b<<2)|0;d=d+((1<<b&3)<<2)|0;m=Q(Q(N[a+96>>2]-m)*Q(.0009765625));b=0;while(1){A:{n=N[d>>2];q=N[f>>2];N[f>>2]=m+q;N[d>>2]=m+N[d>>2];if(!Vl(a)){break A}b=b+1|0;if((b|0)!=1024){continue}break y}break}N[f>>2]=q;N[d>>2]=n}a=J[g+88>>2];if(!(a?!a|!K[g+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+88>>2]=0;H[g+92|0]=1;J[g+80>>2]=0;J[g+84>>2]=0;a=J[g+68>>2];if(!(a?!a|!K[g+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+68>>2]=0;H[g+72|0]=1;J[g+60>>2]=0;J[g+64>>2]=0;a=J[g+48>>2];if(!(a?!a|!K[g+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+48>>2]=0;H[g+52|0]=1;J[g+40>>2]=0;J[g+44>>2]=0;a=J[g+28>>2];if(!(a?!a|!K[g+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=g+96|0}function aB(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0,aa=0,ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ga=Q(0),ha=Q(0),ia=Q(0),ja=Q(0),ka=Q(0),la=0,ma=0;e=J[a+32>>2];$=e+328|0;c=J[a+28>>2];aa=c+328|0;e=e+4|0;c=c+4|0;if(K[a+739|0]){R=N[J[a+32>>2]+344>>2];T=N[J[a+28>>2]+344>>2];d=Q(R+T);i=d>Q(0)?Q(R/d):Q(.5);o=Q(Q(1)-i);d=N[a+672>>2];j=N[e+40>>2];t=N[a+664>>2];s=N[e+32>>2];p=N[e+36>>2];g=N[a+668>>2];m=N[e+56>>2];ga=Q(Q(Q(d*j)+Q(Q(t*s)+Q(p*g)))+m);y=Q(ga-m);M=y;m=N[a+592>>2];k=N[c+40>>2];n=N[a+560>>2];x=N[c+32>>2];h=N[a+576>>2];A=N[c+36>>2];U=Q(Q(m*k)+Q(Q(n*x)+Q(h*A)));q=N[a+656>>2];E=Q(q*j);j=N[a+624>>2];u=Q(j*s);s=N[a+640>>2];W=Q(E+Q(u+Q(s*p)));p=Q(Q(U*i)+Q(W*o));E=p;S=Q(p*p);u=N[c+8>>2];z=N[c>>2];C=N[c+4>>2];ba=Q(Q(m*u)+Q(Q(n*z)+Q(C*h)));w=N[e+8>>2];I=N[e>>2];X=N[e+4>>2];ca=Q(Q(q*w)+Q(Q(j*I)+Q(X*s)));p=Q(Q(ba*i)+Q(ca*o));D=N[c+24>>2];L=N[c+16>>2];G=N[c+20>>2];ea=Q(Q(m*D)+Q(Q(n*L)+Q(h*G)));Z=N[e+24>>2];h=j;j=N[e+16>>2];m=s;s=N[e+20>>2];fa=Q(Q(q*Z)+Q(Q(h*j)+Q(m*s)));h=Q(Q(ea*i)+Q(fa*o));q=Q(Q(1)/Q(Y(Q(S+Q(Q(p*p)+Q(h*h))))));m=Q(E*q);E=Q(y*m);n=N[e+48>>2];X=Q(n+Q(Q(d*w)+Q(Q(t*I)+Q(X*g))));y=Q(X-n);n=Q(p*q);j=Q(Q(d*Z)+Q(Q(t*j)+Q(s*g)));d=N[e+52>>2];Z=Q(j+d);j=Q(Z-d);t=Q(h*q);d=Q(E+Q(Q(y*n)+Q(j*t)));s=Q(m*d);I=Q(M-s);g=N[a+608>>2];h=N[a+600>>2];q=N[a+604>>2];p=N[c+56>>2];ha=Q(Q(Q(g*k)+Q(Q(h*x)+Q(A*q)))+p);p=Q(ha-p);w=N[c+48>>2];ia=Q(w+Q(Q(g*u)+Q(Q(h*z)+Q(C*q))));w=Q(ia-w);h=Q(Q(g*D)+Q(Q(h*L)+Q(G*q)));g=N[c+52>>2];ja=Q(h+g);h=Q(ja-g);g=Q(Q(m*p)+Q(Q(w*n)+Q(h*t)));E=Q(m*g);S=Q(E-s);q=Q(I-Q(o*S));s=j;j=Q(t*d);da=Q(s-j);_=Q(t*g);M=Q(_-j);j=Q(da-Q(o*M));d=Q(n*d);ka=Q(y-d);g=Q(n*g);d=Q(g-d);s=Q(ka-Q(o*d));E=Q(p-E);p=Q(E+Q(i*S));S=Q(h-_);y=Q(S+Q(i*M));g=Q(w-g);w=Q(g+Q(i*d));e=R<Q(1.1920928955078125e-7);c=T<Q(1.1920928955078125e-7);d=Q(Q(i*I)+Q(o*E));h=Q(Q(i*ka)+Q(o*g));I=Q(Q(i*da)+Q(o*S));g=Q(Q(d*d)+Q(Q(h*h)+Q(I*I)));a:{if(g>Q(1.1920928955078125e-7)){k=Q(Q(1)/Q(Y(g)));g=Q(d*k);d=Q(I*k);h=Q(h*k);break a}g=N[a+588>>2];d=Q(g*u);u=N[a+556>>2];h=Q(u*z);z=N[a+572>>2];h=Q(d+Q(h+Q(C*z)));d=Q(Q(g*D)+Q(Q(u*L)+Q(z*G)));g=Q(Q(g*k)+Q(Q(u*x)+Q(z*A)))}r=J[b+24>>2];l=c|e;f=J[b+12>>2];N[f+8>>2]=Q(w*d)-Q(h*y);N[f+4>>2]=Q(p*h)-Q(g*w);N[f>>2]=Q(y*g)-Q(d*p);c=J[b+20>>2];N[c+8>>2]=-Q(Q(s*d)-Q(h*j));N[c+4>>2]=-Q(Q(q*h)-Q(g*s));N[c>>2]=-Q(Q(j*g)-Q(d*q));k=Q(Q(m*h)-Q(g*n));x=Q(Q(t*g)-Q(d*m));u=Q(Q(s*k)-Q(x*j));A=Q(Q(n*d)-Q(h*t));z=Q(Q(q*x)-Q(A*s));C=Q(Q(j*A)-Q(k*q));D=Q(Q(w*k)-Q(x*y));L=Q(Q(p*x)-Q(A*w));G=Q(Q(y*A)-Q(k*p));I=Q(-j);E=Q(-s);S=Q(-q);da=Q(-y);_=Q(-w);M=Q(-p);B=K[a+716|0];if(!(!(T<Q(1.1920928955078125e-7)|R<Q(1.1920928955078125e-7))|!B)){D=Q(i*D);L=Q(i*L);G=Q(i*G);z=Q(o*z);C=Q(o*C);u=Q(o*u)}v=r<<2;e=v+f|0;N[e+8>>2]=D;N[e+4>>2]=L;N[e>>2]=G;N[c+v>>2]=-C;O=r+1|0;N[c+(O<<2)>>2]=-z;V=r+2|0;N[c+(V<<2)>>2]=-u;s=Q(Q(s*t)+Q(n*I));q=Q(Q(q*n)+Q(m*E));j=Q(Q(j*m)+Q(t*S));w=Q(Q(w*t)+Q(n*da));p=Q(Q(p*n)+Q(m*_));y=Q(Q(y*m)+Q(t*M));if(l){w=Q(i*w);p=Q(i*p);y=Q(i*y);s=Q(o*s);j=Q(o*j);q=Q(o*q)}i=Q(-t);o=Q(-n);R=Q(-m);l=r<<1;v=l<<2;e=v+f|0;N[e+8>>2]=w;N[e+4>>2]=p;N[e>>2]=y;N[c+v>>2]=-j;la=l|1;N[c+(la<<2)>>2]=-q;ma=l+2|0;N[c+(ma<<2)>>2]=-s;b:{if(K[a+736|0]){q=Q(-A);j=Q(-k);s=Q(-x);p=Q(-g);y=Q(-d);w=Q(-h);e=J[b+28>>2];break b}u=N[b+4>>2];z=N[b>>2];e=J[b+8>>2];N[e+8>>2]=g;N[e+4>>2]=d;N[e>>2]=h;v=r<<2;F=v+e|0;N[F+8>>2]=A;N[F+4>>2]=k;N[F>>2]=x;l=l<<2;e=l+e|0;N[e+8>>2]=m;N[e+4>>2]=t;N[e>>2]=n;e=J[b+16>>2];p=Q(-g);N[e+8>>2]=p;y=Q(-d);N[e+4>>2]=y;w=Q(-h);N[e>>2]=w;s=Q(-x);N[e+v>>2]=s;j=Q(-k);N[e+(O<<2)>>2]=j;q=Q(-A);N[e+(V<<2)>>2]=q;N[e+l>>2]=o;N[e+(la<<2)>>2]=i;N[e+(ma<<2)>>2]=R;e=J[b+28>>2];u=Q(z*u);z=Q(ga-ha);C=Q(X-ia);D=Q(Z-ja);N[e>>2]=u*Q(Q(g*z)+Q(Q(h*C)+Q(D*d)));N[e+v>>2]=u*Q(Q(A*z)+Q(Q(x*C)+Q(D*k)));N[e+l>>2]=u*Q(Q(m*z)+Q(Q(n*C)+Q(D*t)))}l=P(r,12);N[l+f>>2]=h;v=l+8|0;N[v+f>>2]=g;F=l+4|0;N[F+f>>2]=d;r=r<<4;N[r+f>>2]=x;O=r|4;N[O+f>>2]=k;V=r|8;N[V+f>>2]=A;N[c+l>>2]=w;N[c+v>>2]=p;N[c+F>>2]=y;N[c+r>>2]=s;N[c+O>>2]=j;N[c+V>>2]=q;q=Q(N[b>>2]*N[b+4>>2]);j=Q(Q(ba*fa)-Q(ca*ea));p=Q(j*g);g=Q(Q(ea*W)-Q(fa*U));s=Q(g*h);h=Q(Q(U*ca)-Q(W*ba));N[e+l>>2]=q*Q(p+Q(s+Q(h*d)));N[e+r>>2]=q*Q(Q(j*A)+Q(Q(g*x)+Q(h*k)));c:{d:{if(B){l=!K[a+737|0];d=Q(N[a+708>>2]*N[a+732>>2]);e=d>Q(0)?1:2;break d}if(!K[a+737|0]){break c}l=0;d=Q(0);e=0}r=P(J[b+24>>2],5);v=r<<2;N[v+f>>2]=n;F=v+8|0;N[F+f>>2]=m;O=f;f=v+4|0;N[O+f>>2]=t;N[c+F>>2]=R;N[c+f>>2]=i;N[c+v>>2]=o;c=a+688|0;i=xe(c);o=ye(c);c=J[b+28>>2];J[v+c>>2]=0;f=J[a+748>>2];g=N[(f&2?a+760|0:b+4|0)>>2];if(!(l|(B|0)!=0&i==o)){if(f&4){N[J[b+32>>2]+(r<<2)>>2]=N[a+752>>2]}h=od(N[a+728>>2],i,o,N[a+680>>2],Q(g*N[b>>2]));c=J[b+28>>2];f=r<<2;l=c+f|0;N[l>>2]=Q(Q(h*N[a+680>>2])*N[a+732>>2])+N[l>>2];N[f+J[b+36>>2]>>2]=-N[a+684>>2];N[f+J[b+40>>2]>>2]=N[a+684>>2]}if(!B){break c}f=r<<2;c=f+c|0;N[c>>2]=Q(Q(g*N[b>>2])*d)+N[c>>2];if(H[a+748|0]&1){N[f+J[b+32>>2]>>2]=N[a+756>>2]}e:{if(i==o){J[J[b+36>>2]+(r<<2)>>2]=-8388609;d=Q(3.4028234663852886e38);break e}f=J[b+36>>2]+(r<<2)|0;if((e|0)==1){J[f>>2]=0;e=1;d=Q(3.4028234663852886e38);break e}J[f>>2]=-8388609;d=Q(0)}N[J[b+40>>2]+(r<<2)>>2]=d;i=N[a+704>>2];f:{if(!(i>Q(0))){break f}d=Q(Q(Q(N[aa+8>>2]*m)+Q(Q(N[aa>>2]*n)+Q(N[aa+4>>2]*t)))-Q(Q(N[$+8>>2]*m)+Q(Q(N[$>>2]*n)+Q(t*N[$+4>>2]))));g:{if((e|0)==1){if(!(d<Q(0))){break f}d=Q(d*Q(-i));if(d>N[c>>2]){break g}break f}if(!(d>Q(0))){break f}d=Q(d*Q(-i));if(!(d<N[c>>2])){break f}}N[c>>2]=d}N[c>>2]=N[a+700>>2]*N[c>>2]}return}g=N[a+656>>2];z=N[e+40>>2];ea=Q(g*z);h=N[a+624>>2];C=N[e+32>>2];k=N[a+640>>2];D=N[e+36>>2];fa=Q(Q(h*C)+Q(k*D));L=N[e+24>>2];I=Q(g*L);G=N[e+16>>2];T=N[e+20>>2];ga=Q(Q(h*G)+Q(k*T));x=N[a+592>>2];d=N[c+40>>2];X=Q(x*d);A=N[a+560>>2];i=N[c+32>>2];q=N[a+576>>2];o=N[c+36>>2];Z=Q(Q(A*i)+Q(q*o));j=N[a+588>>2];ha=Q(j*d);s=N[a+556>>2];p=N[a+572>>2];ia=Q(Q(s*i)+Q(p*o));y=N[a+584>>2];ja=Q(y*d);w=N[a+552>>2];R=N[a+568>>2];E=Q(Q(w*i)+Q(R*o));m=N[c+24>>2];S=Q(x*m);n=N[c+16>>2];t=N[c+20>>2];da=Q(Q(A*n)+Q(q*t));u=N[a+672>>2];M=Q(u*z);z=N[a+664>>2];U=Q(z*C);C=N[a+668>>2];D=Q(Q(M+Q(U+Q(D*C)))+N[e+56>>2]);L=Q(Q(Q(u*L)+Q(Q(z*G)+Q(T*C)))+N[e+52>>2]);G=N[a+608>>2];T=N[a+600>>2];U=N[a+604>>2];W=N[c+56>>2];ba=Q(Q(Q(G*d)+Q(Q(T*i)+Q(o*U)))+W);d=N[c+52>>2];ca=Q(Q(Q(G*m)+Q(Q(T*n)+Q(t*U)))+d);M=h;h=N[e>>2];_=N[e+4>>2];M=Q(Q(M*h)+Q(_*k));k=N[e+8>>2];ka=Q(g*k);i=N[c>>2];o=N[c+4>>2];A=Q(Q(A*i)+Q(o*q));g=N[c+8>>2];q=Q(x*g);h=Q(N[e+48>>2]+Q(Q(u*k)+Q(Q(z*h)+Q(_*C))));k=N[c+48>>2];x=Q(k+Q(Q(G*g)+Q(Q(T*i)+Q(o*U))));r=J[b+24>>2];B=K[a+736|0];if(!B){f=J[b+8>>2];J[f>>2]=1065353216;l=(r<<2)+4|0;J[l+f>>2]=1065353216;v=(r<<3)+8|0;J[v+f>>2]=1065353216;f=J[b+16>>2];J[f>>2]=-1082130432;J[f+l>>2]=-1082130432;J[f+v>>2]=-1082130432;W=N[c+56>>2];k=N[c+48>>2];d=N[c+52>>2]}c=J[b+12>>2];J[c+12>>2]=0;u=Q(ba-W);N[c+4>>2]=u;J[c>>2]=0;d=Q(ca-d);N[c+8>>2]=-d;l=r<<2;f=l+c|0;J[f+12>>2]=0;k=Q(x-k);N[f+8>>2]=k;J[f+4>>2]=0;N[f>>2]=-u;v=r<<3;f=v+c|0;J[f+8>>2]=0;J[f+12>>2]=0;N[f+4>>2]=-k;N[f>>2]=d;d=N[e+48>>2];k=N[e+56>>2];u=N[e+52>>2];f=J[b+20>>2];J[f+12>>2]=0;J[f>>2]=0;u=Q(L-u);N[f+8>>2]=u;k=Q(D-k);N[f+4>>2]=-k;e=f+l|0;J[e+12>>2]=0;d=Q(h-d);N[e+8>>2]=-d;J[e+4>>2]=0;N[e>>2]=k;e=f+v|0;J[e+8>>2]=0;J[e+12>>2]=0;N[e+4>>2]=d;N[e>>2]=-u;d=Q(N[b>>2]*N[b+4>>2]);e=J[b+28>>2];if(!B){N[e>>2]=d*Q(h-x);N[e+l>>2]=d*Q(L-ca);N[e+(r<<3)>>2]=d*Q(D-ba)}l=P(r,12);h=Q(Q(y*g)+Q(Q(w*i)+Q(R*o)));N[l+c>>2]=h;v=l+8|0;k=Q(ja+E);N[v+c>>2]=k;F=l+4|0;x=Q(Q(y*m)+Q(Q(w*n)+Q(R*t)));N[F+c>>2]=x;B=r<<4;g=Q(Q(j*g)+Q(Q(s*i)+Q(o*p)));N[B+c>>2]=g;O=B|4;n=Q(Q(j*m)+Q(Q(s*n)+Q(p*t)));N[O+c>>2]=n;V=B|8;t=Q(ha+ia);N[V+c>>2]=t;N[f+l>>2]=-h;N[f+v>>2]=-k;N[f+F>>2]=-x;N[f+B>>2]=-g;N[f+O>>2]=-n;N[f+V>>2]=-t;i=Q(q+A);m=Q(I+ga);A=Q(ka+M);o=Q(S+da);q=Q(Q(i*m)-Q(A*o));p=Q(q*k);k=Q(ea+fa);j=m;m=Q(X+Z);j=Q(Q(o*k)-Q(j*m));s=Q(j*h);h=Q(Q(m*A)-Q(k*i));N[e+l>>2]=Q(p+Q(s+Q(x*h)))*d;N[e+B>>2]=Q(Q(q*t)+Q(Q(j*g)+Q(n*h)))*d;v=K[a+716|0];h:{i:{if(v){l=!K[a+737|0];t=Q(N[a+708>>2]*N[a+732>>2]);e=t>Q(0)?1:2;break i}if(!K[a+737|0]){break h}l=0;t=Q(0);e=0}r=P(r,5);B=r<<2;N[B+c>>2]=i;F=B+8|0;N[F+c>>2]=m;O=c;c=B+4|0;N[O+c>>2]=o;N[f+F>>2]=-m;N[c+f>>2]=-o;N[f+B>>2]=-i;c=a+688|0;d=xe(c);n=ye(c);c=J[b+28>>2];J[B+c>>2]=0;f=J[a+748>>2];g=N[(f&2?a+760|0:b+4|0)>>2];if(!(l|(v|0)!=0&d==n)){if(f&4){N[J[b+32>>2]+(r<<2)>>2]=N[a+752>>2]}h=od(N[a+728>>2],d,n,N[a+680>>2],Q(g*N[b>>2]));c=J[b+28>>2];f=r<<2;l=c+f|0;N[l>>2]=Q(Q(h*N[a+680>>2])*N[a+732>>2])+N[l>>2];N[f+J[b+36>>2]>>2]=-N[a+684>>2];N[f+J[b+40>>2]>>2]=N[a+684>>2]}if(!v){break h}f=r<<2;c=f+c|0;N[c>>2]=Q(Q(g*N[b>>2])*t)+N[c>>2];if(H[a+748|0]&1){N[f+J[b+32>>2]>>2]=N[a+756>>2]}j:{if(d==n){J[J[b+36>>2]+(r<<2)>>2]=-8388609;d=Q(3.4028234663852886e38);break j}f=J[b+36>>2]+(r<<2)|0;if((e|0)==1){J[f>>2]=0;e=1;d=Q(3.4028234663852886e38);break j}J[f>>2]=-8388609;d=Q(0)}N[J[b+40>>2]+(r<<2)>>2]=d;n=N[a+704>>2];k:{if(!(n>Q(0))){break k}d=Q(Q(Q(N[aa+8>>2]*m)+Q(Q(N[aa>>2]*i)+Q(o*N[aa+4>>2])))-Q(Q(N[$+8>>2]*m)+Q(Q(N[$>>2]*i)+Q(o*N[$+4>>2]))));l:{if((e|0)==1){if(!(d<Q(0))){break k}d=Q(d*Q(-n));if(d>N[c>>2]){break l}break k}if(!(d>Q(0))){break k}d=Q(d*Q(-n));if(!(d<N[c>>2])){break k}}N[c>>2]=d}N[c>>2]=N[a+700>>2]*N[c>>2]}}function mz(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0),i=0,j=Q(0),k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=0,x=0,y=0,z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=0,L=0,M=0,O=0,S=0,T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0);e=ga-176|0;ga=e;i=J[b+36>>2];a:{if(H[i+100|0]&1){break a}W=N[i+88>>2]>Q(0)?N[a+16>>2]:N[a+20>>2];x=ga-32|0;ga=x;F=J[a+8>>2];l=J[F+4>>2];g=J[J[a+4>>2]+684>>2];k=J[F+12>>2];n=N[k+20>>2];p=N[k+36>>2];h=N[k+24>>2];u=N[k+52>>2];d=N[k+40>>2];f=N[k+56>>2];r=N[k+32>>2];j=N[k>>2];s=N[k+16>>2];v=N[k+4>>2];z=N[k+8>>2];o=N[k+48>>2];C=N[i+8>>2];A=N[i+12>>2];E=N[i+16>>2];J[x+12>>2]=0;D=d;d=Q(E-f);f=Q(C-o);o=h;h=Q(A-u);N[x+8>>2]=Q(D*d)+Q(Q(z*f)+Q(o*h));N[x+4>>2]=Q(p*d)+Q(Q(v*f)+Q(h*n));N[x>>2]=Q(r*d)+Q(Q(j*f)+Q(h*s));d=Q(Q(1)/N[g+76>>2]);f=Q(Q(d*N[x>>2])/Q(3));b=f<Q(0);h=f;f=Q(Q(1)-f);b:{if(Q(R(f))<Q(2147483648)){c=~~f;break b}c=-2147483648}b=b?c:0;f=Q(h+Q(b|0));c:{if(Q(R(f))<Q(2147483648)){c=~~f;break c}c=-2147483648}q=c-b|0;b=(q&65535)+16|0;h=Q(Q(d*N[x+4>>2])/Q(3));m=h<Q(0);b=b^q>>>5&134215680^b<<16;o=h;h=Q(Q(1)-h);d:{if(Q(R(h))<Q(2147483648)){t=~~h;break d}t=-2147483648}m=m?t:0;h=Q(o+Q(m|0));e:{if(Q(R(h))<Q(2147483648)){w=~~h;break e}w=-2147483648}B=w-m|0;b=b+(B&65535)+(b>>>11)|0;d=Q(Q(d*N[x+8>>2])/Q(3));y=d<Q(0);m=J[g+68>>2];b=b^B>>>5&134215680^b<<16;o=d;d=Q(Q(1)-d);f:{if(Q(R(d))<Q(2147483648)){t=~~d;break f}t=-2147483648}y=y?t:0;d=Q(o+Q(y|0));g:{if(Q(R(d))<Q(2147483648)){t=~~d;break g}t=-2147483648}y=t-y|0;b=b+(y&65535)+(b>>>11)|0;b=b^y>>>5&134215680^b<<16;b=b+(l&65535)+(b>>>11)|0;b=b^l>>>5&134215680^b<<16;b=(b>>>11|0)+b|0;b=b<<3^b;b=(b>>>5|0)+b|0;b=b<<4^b;b=(b>>>17|0)+b|0;b=b<<25^b;G=(b>>>6|0)+b|0;I=J[g+60>>2];L=((G>>>0)%(I>>>0)<<2)+m|0;b=J[L>>2];J[g+96>>2]=J[g+96>>2]+1;d=Q(Q(d-Q(t|0))*Q(3));h:{if(Q(R(d))<Q(2147483648)){t=~~d;break h}t=-2147483648}O=t;n=Q(O|0);h=Q(Q(h-Q(w|0))*Q(3));i:{if(Q(R(h))<Q(2147483648)){t=~~h;break i}t=-2147483648}S=t;p=Q(S|0);f=Q(Q(f-Q(c|0))*Q(3));j:{if(Q(R(f))<Q(2147483648)){t=~~f;break j}t=-2147483648}u=Q(d-n);h=Q(h-p);f=Q(f-Q(t|0));c=J[g+92>>2];k:{if(b){while(1){c=c+1|0;J[g+92>>2]=c;if(!(J[b+272>>2]!=(G|0)|(q|0)!=J[b+256>>2]|((B|0)!=J[b+260>>2]|(y|0)!=J[b+264>>2]))&(l|0)==J[b+276>>2]){break k}b=J[b+280>>2];if(b){continue}break}}J[g+92>>2]=c+1;b=J[g+84>>2];J[g+84>>2]=b+1;if((b|0)>=J[g+88>>2]){w=0;J[8355]=J[8355]+1;l:{if((I|0)<=0){break l}while(1){c=(w<<2)+m|0;b=J[c>>2];J[c>>2]=0;if(b){while(1){c=J[b+280>>2];ta(b);b=c;if(c){continue}break}}w=w+1|0;if((I|0)==(w|0)){break l}m=J[g+68>>2];continue}}J[g+92>>2]=1;J[g+96>>2]=1;J[g+84>>2]=0;J[g+76>>2]=1048576e3;J[g+80>>2]=0}b=ua(284);m=qa(b,0,272);J[m+280>>2]=J[L>>2];J[L>>2]=m;J[m+272>>2]=G;J[m+276>>2]=l;J[m+264>>2]=y;J[m+260>>2]=B;J[m+256>>2]=q;B=0;r=Q(0);c=ga-144|0;ga=c;d=N[g+76>>2];n=Q(Q(Q(J[m+256>>2])*Q(3))*d);s=Q(d*Q(Q(J[m+264>>2])*Q(3)));v=Q(d*Q(Q(J[m+260>>2])*Q(3)));l=c+80|4;while(1){p=Q(Q(d*Q(B|0))+s);w=0;while(1){J[c+20>>2]=0;N[c+16>>2]=p;N[c+8>>2]=Q(d*Q(0))+n;j=Q(Q(d*Q(w|0))+v);N[c+12>>2]=j;q=J[m+276>>2];J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;m:{if(J[q+4>>2]>19){d=Q(0);break m}d=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}y=(m+(w<<4)|0)+(B<<2)|0;N[y>>2]=d;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=d+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;if(J[q+4>>2]<=19){r=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}N[y- -64>>2]=r;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=Q(d+d)+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;r=Q(0);n:{if(J[q+4>>2]>19){d=Q(0);break n}d=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}N[y+128>>2]=d;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=Q(d*Q(3))+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;if(J[q+4>>2]<=19){d=Ke(c+8|0,q,c+80|0,c+24|0)}else{d=Q(0)}N[y+192>>2]=d;w=w+1|0;if((w|0)!=4){d=N[g+76>>2];continue}break}B=B+1|0;if((B|0)!=4){d=N[g+76>>2];continue}break}ga=c+144|0}J[b+268>>2]=J[g+80>>2];g=(t<<6)+b|0;m=g- -64|0;l=S<<4;q=l+16|0;w=m+q|0;b=O<<2;c=b+4|0;j=N[w+c>>2];s=N[b+w>>2];q=g+q|0;d=N[q+c>>2];n=N[b+q>>2];p=Q(d-n);D=Q(Q(Q(Q(j-s)-p)*f)+p);m=l+m|0;v=N[m+c>>2];z=N[b+m>>2];t=c;c=g+l|0;p=N[t+c>>2];r=N[b+c>>2];o=Q(p-r);o=Q(Q(Q(Q(v-z)-o)*f)+o);o=Q(Q(Q(D-o)*h)+o);D=o;X=Q(o*o);E=Q(j-d);o=Q(v-p);T=Q(s-n);C=Q(z-r);A=Q(Q(Q(T-C)*h)+C);A=Q(Q(Q(Q(Q(Q(E-o)*h)+o)-A)*u)+A);v=Q(j-v);j=Q(d-p);v=Q(Q(Q(v-j)*f)+j);j=Q(n-r);j=Q(Q(Q(Q(s-z)-j)*f)+j);j=Q(Q(Q(v-j)*u)+j);s=Q(Q(1)/Q(Y(Q(X+Q(Q(A*A)+Q(j*j))))));N[x+24>>2]=D*s;N[x+20>>2]=j*s;N[x+16>>2]=A*s;s=Q(d+Q(E*f));d=Q(p+Q(o*f));o=Q(Q(Q(s-d)*h)+d);d=Q(r+Q(C*f));d=Q(Q(Q(Q(n+Q(T*f))-d)*h)+d);d=Q(Q(Q(Q(o-d)*u)+d)-W);b=d<Q(0);if(b){J[e+72>>2]=J[F+8>>2];r=N[k+8>>2];j=N[k>>2];s=N[k+4>>2];u=N[k+24>>2];v=N[k+16>>2];z=N[k+20>>2];p=N[k+40>>2];o=N[k+32>>2];C=N[k+36>>2];f=N[x+24>>2];h=N[x+16>>2];n=N[x+20>>2];J[e+88>>2]=0;p=Q(Q(p*f)+Q(Q(o*h)+Q(n*C)));N[e+84>>2]=p;u=Q(Q(u*f)+Q(Q(v*h)+Q(n*z)));N[e+80>>2]=u;f=Q(Q(r*f)+Q(Q(j*h)+Q(s*n)));N[e+76>>2]=f;N[e+92>>2]=-Q(Q(p*Q(N[i+16>>2]-Q(d*p)))+Q(Q(f*Q(N[i+8>>2]-Q(d*f)))+Q(u*Q(N[i+12>>2]-Q(d*u)))))}ga=x+32|0;if(!b){break a}d=N[i+88>>2];b=J[a+12>>2];o:{if(!b){if(!(Q(d+Q(0))>Q(0))){break a}c=J[J[a+8>>2]+8>>2]+4|0;break o}U=N[b+344>>2];if(!(Q(d+U)>Q(0))){break a}c=b+4|0}if(!(H[33412]&1)){J[8341]=0;J[8342]=0;H[33412]=1;J[8351]=0;J[8352]=0;J[8349]=0;J[8350]=0;J[8347]=0;J[8348]=0;J[8345]=0;J[8346]=0;J[8343]=0;J[8344]=0}f=N[c+52>>2];h=N[i+12>>2];r=N[c+56>>2];n=N[i+16>>2];u=N[c+48>>2];p=N[i+8>>2];J[e+68>>2]=0;u=Q(p-u);N[e+56>>2]=u;r=Q(n-r);N[e+64>>2]=r;j=Q(h-f);N[e+60>>2]=j;g=b?b+264|0:33364;p:{if(!b){c=J[a+4>>2];f=N[c+452>>2];s=Q(0);break p}s=N[b+328>>2];v=N[b+332>>2];c=J[a+4>>2];f=N[c+452>>2];Z=Q(Q(Q(Q(s*j)-Q(u*v))+N[b+320>>2])*f);z=N[b+336>>2];_=Q(Q(Q(Q(z*u)-Q(r*s))+N[b+316>>2])*f);s=Q(Q(Q(Q(v*r)-Q(j*z))+N[b+312>>2])*f)}v=N[c+316>>2];z=N[i+32>>2];o=N[i+28>>2];C=N[J[J[a+8>>2]+8>>2]+224>>2];A=N[i+24>>2];J[e+96>>2]=i;u=N[e+84>>2];r=N[e+80>>2];j=N[e+76>>2];hk(e+8|0,f,d,U,g,e+56|0);b=J[e+20>>2];J[e+108>>2]=J[e+16>>2];J[e+112>>2]=b;b=J[e+28>>2];J[e+116>>2]=J[e+24>>2];J[e+120>>2]=b;b=J[e+36>>2];J[e+124>>2]=J[e+32>>2];J[e+128>>2]=b;b=J[e+44>>2];J[e+132>>2]=J[e+40>>2];J[e+136>>2]=b;b=J[e+52>>2];J[e+140>>2]=J[e+48>>2];J[e+144>>2]=b;b=e- -64|0;c=J[b+4>>2];J[e+156>>2]=J[b>>2];J[e+160>>2]=c;b=J[e+12>>2];J[e+100>>2]=J[e+8>>2];J[e+104>>2]=b;b=J[e+60>>2];J[e+148>>2]=J[e+56>>2];J[e+152>>2]=b;g=J[a+4>>2];N[e+164>>2]=d*N[g+452>>2];n=Q(Q(n-z)-Z);p=Q(Q(p-A)-s);h=Q(Q(h-o)-_);d=Q(Q(n*u)+Q(Q(j*p)+Q(r*h)));f=Q(v*C);n=Q(n-Q(u*d));o=Q(n*n);n=Q(p-Q(j*d));h=Q(h-Q(r*d));N[e+168>>2]=Q(o+Q(Q(n*n)+Q(h*h)))<Q(f*Q(d*Q(d*f)))?Q(0):Q(Q(1)-f);N[e+172>>2]=N[g+(J[J[J[a+8>>2]+8>>2]+204>>2]&3?328:324)>>2];k=J[g+812>>2];q:{if((k|0)!=J[g+816>>2]){break q}l=k?k<<1:1;if((l|0)<=(k|0)){break q}if(l){J[8369]=J[8369]+1;V=ia[J[6782]](P(l,104),16)|0;k=J[g+812>>2]}if((k|0)>0){while(1){c=P(M,104);b=c+V|0;c=c+J[g+820>>2]|0;i=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=i;J[b+24>>2]=J[c+24>>2];i=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=i;i=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=i;i=J[c+40>>2];J[b+36>>2]=J[c+36>>2];J[b+40>>2]=i;i=J[c+32>>2];J[b+28>>2]=J[c+28>>2];J[b+32>>2]=i;i=J[c+56>>2];J[b+52>>2]=J[c+52>>2];J[b+56>>2]=i;i=J[c+48>>2];J[b+44>>2]=J[c+44>>2];J[b+48>>2]=i;i=J[c+64>>2];J[b+60>>2]=J[c+60>>2];J[b+64>>2]=i;i=J[c+72>>2];J[b+68>>2]=J[c+68>>2];J[b+72>>2]=i;i=J[c+80>>2];J[b+76>>2]=J[c+76>>2];J[b+80>>2]=i;i=J[c+88>>2];J[b+84>>2]=J[c+84>>2];J[b+88>>2]=i;i=J[c+96>>2];J[b+92>>2]=J[c+92>>2];J[b+96>>2]=i;J[b+100>>2]=J[c+100>>2];M=M+1|0;if((M|0)!=(k|0)){continue}break}}b=J[g+820>>2];if(!(b?!b|!K[g+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[g+820>>2]=V;H[g+824|0]=1;J[g+816>>2]=l;k=J[g+812>>2]}c=J[e+76>>2];b=J[g+820>>2]+P(k,104)|0;J[b>>2]=J[e+72>>2];J[b+4>>2]=c;J[b+24>>2]=J[e+96>>2];c=J[e+92>>2];J[b+16>>2]=J[e+88>>2];J[b+20>>2]=c;c=J[e+84>>2];J[b+8>>2]=J[e+80>>2];J[b+12>>2]=c;c=J[e+112>>2];J[b+36>>2]=J[e+108>>2];J[b+40>>2]=c;c=J[e+104>>2];J[b+28>>2]=J[e+100>>2];J[b+32>>2]=c;c=J[e+128>>2];J[b+52>>2]=J[e+124>>2];J[b+56>>2]=c;c=J[e+120>>2];J[b+44>>2]=J[e+116>>2];J[b+48>>2]=c;c=J[e+144>>2];J[b+68>>2]=J[e+140>>2];J[b+72>>2]=c;c=J[e+136>>2];J[b+60>>2]=J[e+132>>2];J[b+64>>2]=c;c=J[e+152>>2];J[b+76>>2]=J[e+148>>2];J[b+80>>2]=c;c=J[e+160>>2];J[b+84>>2]=J[e+156>>2];J[b+88>>2]=c;c=J[e+168>>2];J[b+92>>2]=J[e+164>>2];J[b+96>>2]=c;J[b+100>>2]=J[e+172>>2];J[g+812>>2]=J[g+812>>2]+1;a=J[a+12>>2];if(!a){break a}kb(a,0)}ga=e+176|0}function Tj(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;m=ga-48|0;ga=m;A=J[e>>2];h=b;s=J[d>>2];if(s){h=J[s+12>>2]}w=J[h+96>>2];x=J[h+92>>2];z=J[h+88>>2];l=J[b+96>>2];I=J[c+96>>2]-l|0;i=J[(s?s:A)+12>>2];j=J[b+92>>2];n=J[i+92>>2]-j|0;h=c;K=J[c+92>>2]-j|0;f=J[i+96>>2]-l|0;c=P(I,n)-P(K,f)|0;S=c;O=c>>31;g=I>>31;c=jI(c,O,I,g);o=ha;k=J[b+88>>2];i=J[i+88>>2]-k|0;L=J[h+88>>2]-k|0;b=P(i,K)-P(n,L)|0;T=b;Q=b>>31;n=L>>31;b=jI(b,Q,L,n);B=c-b|0;C=o-(ha+(b>>>0>c>>>0)|0)|0;c=jI(B,C,x,x>>31);o=ha;t=K>>31;b=jI(T,Q,K,t);v=ha;p=c;c=P(f,L)-P(i,I)|0;U=c;R=c>>31;c=jI(c,R,I,g);D=b-c|0;E=v-(ha+(b>>>0<c>>>0)|0)|0;c=jI(D,E,z,z>>31);b=p+c|0;f=ha+o|0;f=b>>>0<c>>>0?f+1|0:f;c=b;b=jI(L,n,U,R);i=ha;n=c;c=jI(K,t,S,O);F=b-c|0;G=i-(ha+(b>>>0<c>>>0)|0)|0;c=jI(F,G,w,w>>31);b=n+c|0;f=ha+f|0;n=b;i=b>>>0<c>>>0?f+1|0:f;b=jI(S,O,k,k>>31);c=ha;l=jI(T,Q,l,l>>31);b=l+b|0;g=ha+c|0;g=b>>>0<l>>>0?g+1|0:g;c=jI(U,R,j,j>>31);b=c+b|0;g=ha+g|0;N=b;r=b>>>0<c>>>0?g+1|0:g;h=A?J[A+12>>2]:h;t=J[h+96>>2];v=J[h+92>>2];y=J[h+88>>2];b=A;a:{if(!s){break a}b=A;if(!J[s+12>>2]){break a}b=J[J[s+8>>2]+4>>2];k=J[b+12>>2];h=k;c=J[h+92>>2];j=c;c=c>>31;l=jI(j,c,U,R);f=ha;p=l;h=J[h+88>>2];l=h;o=h>>31;g=jI(h,o,S,O);h=p+g|0;f=ha+f|0;f=g>>>0>h>>>0?f+1|0:f;u=h;h=J[k+96>>2];p=h;q=h>>31;g=jI(h,q,T,Q);h=u+g|0;k=ha+f|0;k=g>>>0>h>>>0?k+1|0:k;b:{if(h>>>0<N>>>0&(r|0)>=(k|0)|(k|0)<(r|0)){break b}h=b+12|0;u=J[a+100>>2];while(1){if((u|0)==J[b+20>>2]){break b}c=jI(j,c,B,C);j=ha;l=jI(l,o,D,E);c=l+c|0;f=ha+j|0;f=c>>>0<l>>>0?f+1|0:f;l=jI(p,q,F,G);c=l+c|0;f=ha+f|0;f=c>>>0<l>>>0?f+1|0:f;l=c;c=f;if(l>>>0<=n>>>0&(i|0)>=(c|0)|(c|0)<(i|0)){break b}J[d>>2]=b;i=J[h>>2];w=J[i+96>>2];x=J[i+92>>2];z=J[i+88>>2];if(i){b=J[J[b+8>>2]+4>>2];h=b+12|0;n=l;i=c;g=J[b+12>>2];c=J[g+92>>2];j=c;c=c>>31;f=jI(j,c,U,R);k=ha;l=J[g+88>>2];o=l>>31;p=jI(l,o,S,O);f=p+f|0;k=ha+k|0;k=f>>>0<p>>>0?k+1|0:k;M=f;f=J[g+96>>2];p=f;q=f>>31;H=jI(f,q,T,Q);f=M+H|0;g=ha+k|0;g=f>>>0<H>>>0?g+1|0:g;if(f>>>0<N>>>0&(r|0)>=(g|0)|(g|0)<(r|0)){break b}continue}break}n=l;i=c}b=J[e>>2]}c=jI(B,C,v,v>>31);h=ha;l=jI(D,E,y,y>>31);c=l+c|0;f=ha+h|0;f=c>>>0<l>>>0?f+1|0:f;h=jI(F,G,t,t>>31);c=h+c|0;k=ha+f|0;j=c;c=c>>>0<h>>>0?k+1|0:k;c:{if(!b){b=0;break c}if(!J[b+12>>2]){break c}h=J[J[b+8>>2]>>2];k=J[h+12>>2];f=k;l=J[f+92>>2];o=l>>31;g=jI(l,o,U,R);u=ha;f=J[f+88>>2];p=f;q=f>>31;H=jI(f,q,S,O);f=H+g|0;g=ha+u|0;g=f>>>0<H>>>0?g+1|0:g;M=f;f=J[k+96>>2];u=f;H=f>>31;k=jI(f,H,T,Q);f=M+k|0;g=ha+g|0;g=f>>>0<k>>>0?g+1|0:g;if(f>>>0<N>>>0&(r|0)>=(g|0)|(g|0)<(r|0)){break c}k=h+12|0;W=J[a+100>>2];while(1){f=h;if((W|0)==J[f+20>>2]){break c}h=jI(l,o,B,C);l=ha;o=jI(p,q,D,E);h=o+h|0;g=ha+l|0;g=h>>>0<o>>>0?g+1|0:g;l=jI(F,G,u,H);h=l+h|0;g=ha+g|0;g=h>>>0<l>>>0?g+1|0:g;o=h;l=g;if(h>>>0<=j>>>0&(c|0)>=(g|0)|(c|0)>(g|0)){break c}J[e>>2]=f;b=J[k>>2];t=J[b+96>>2];v=J[b+92>>2];y=J[b+88>>2];if(b){h=J[J[f+8>>2]>>2];k=h+12|0;j=o;c=l;b=f;u=J[h+12>>2];f=u;l=J[f+92>>2];o=l>>31;g=jI(l,o,U,R);H=ha;f=J[f+88>>2];p=f;q=f>>31;M=jI(f,q,S,O);f=M+g|0;g=ha+H|0;g=f>>>0<M>>>0?g+1|0:g;M=f;f=J[u+96>>2];u=f;H=f>>31;V=jI(f,H,T,Q);M=M+V|0;f=ha+g|0;f=M>>>0<V>>>0?f+1|0:f;if(N>>>0>M>>>0&(r|0)>=(f|0)|(f|0)<(r|0)){break c}continue}break}b=f;j=o;c=l}i=c-((j>>>0<n>>>0)+i|0)|0;d:{n=j-n|0;if(!!n&(i|0)>=0|(i|0)>0){while(1){b=J[d>>2];while(1){e:{A=(P(v-x|0,K)+P(y-z|0,L)|0)+P(t-w|0,I)|0;c=A;l=c;o=c>>31;if(!b|!J[b+12>>2]){break e}r=J[J[b>>2]+8>>2];if(J[r+20>>2]<=J[a+100>>2]){break e}h=J[r+12>>2];c=J[h+92>>2];f=c-x|0;k=J[h+88>>2];g=k-z|0;h=J[h+96>>2];p=h-w|0;j=(P(f,K)+P(g,L)|0)+P(p,I)|0;f=jI(B,C,f,f>>31);q=ha;N=jI(D,E,g,g>>31);f=N+f|0;g=ha+q|0;q=jI(F,G,p,p>>31);p=q+f|0;f=ha+(f>>>0<N>>>0?g+1|0:g)|0;g=p;f=g>>>0<q>>>0?f+1|0:f;f:{if(!(g|f)){if((j|0)<0){break f}break e}if((f|0)>0|(f|0)>=0){break e}J[m+32>>2]=0-g;J[m+36>>2]=0-(((g|0)!=0)+f|0);c=(j|0)>0;J[m+40>>2]=c?-1:j>>>31|0;b=j;h=(b|0)<0;J[m+24>>2]=c?b:h?0-b|0:0;j=b>>31;J[m+28>>2]=c?j:h?0-(((b|0)!=0)+j|0)|0:0;g:{if((A|0)>0){J[m+16>>2]=1;j=l;c=o;h=-1;break g}if((A|0)<0){J[m+16>>2]=-1;j=0-l|0;c=0-(((l|0)!=0)+o|0)|0;h=1;break g}J[m+16>>2]=0;j=0;c=0;h=0}J[m>>2]=j;J[m+4>>2]=c;b=n;c=i;h:{if(!!b&(c|0)>=0|(c|0)>0){break h}c=0;b=0;if((i|0)>0|(i|0)>=0){break h}J[m+16>>2]=h;c=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=c;if((yc(m+24|0,m)|0)<0){break e}i=J[r+12>>2];h=J[i+96>>2];c=J[i+92>>2];b=J[d>>2];k=J[i+88>>2]}b=(b|0)==(s|0)?0:r;J[d>>2]=b;i=v-c|0;i=jI(B,C,i,i>>31);n=ha;f=i;i=y-k|0;l=jI(D,E,i,i>>31);i=f+l|0;g=ha+n|0;g=i>>>0<l>>>0?g+1|0:g;f=i;i=t-h|0;n=jI(F,G,i,i>>31);i=f+n|0;f=ha+g|0;f=i>>>0<n>>>0?f+1|0:f;n=i;i=f;z=k;x=c;w=h;continue}break}b=J[e>>2];if(!b|!J[b+12>>2]){break d}r=J[J[b+8>>2]>>2];if(J[r+20>>2]<=J[a+100>>2]){break d}b=J[r+12>>2];h=J[b+92>>2];j=h-v|0;c=j;f=c>>31;c=jI(c,f,U,R);k=ha;g=c;v=J[b+88>>2];y=v-y|0;c=y;p=c>>31;q=jI(c,p,S,O);c=g+q|0;g=ha+k|0;g=c>>>0<q>>>0?g+1|0:g;k=c;c=J[b+96>>2];t=c-t|0;b=t;q=b>>31;b=jI(T,Q,b,q);if((k|0)!=(0-b|0)|(0-(ha+((b|0)!=0)|0)|0)!=(g|0)){break d}b=h-x|0;b=jI(B,C,b,b>>31);h=ha;k=b;b=v-z|0;g=jI(D,E,b,b>>31);b=k+g|0;k=ha+h|0;k=b>>>0<g>>>0?k+1|0:k;h=b;b=c-w|0;c=jI(F,G,b,b>>31);b=h+c|0;g=ha+k|0;h=b;g=b>>>0<c>>>0?g+1|0:g;b=g;if(!h&(b|0)<=0|(b|0)<0){break d}c=(P(j,K)+P(y,L)|0)+P(t,I)|0;j=jI(j,f,B,C);f=ha;k=jI(D,E,y,p);j=k+j|0;g=ha+f|0;g=j>>>0<k>>>0?g+1|0:g;k=jI(F,G,t,q);j=k+j|0;f=ha+g|0;f=j>>>0<k>>>0?f+1|0:f;i:{if(!(f|j)){if((c|0)<0){break i}break d}if((f|0)>0|(f|0)>=0){break d}J[m+32>>2]=0-j;J[m+36>>2]=0-(((j|0)!=0)+f|0);j=(c|0)>0;J[m+40>>2]=j?-1:c>>>31|0;f=(c|0)<0;J[m+24>>2]=j?c:f?0-c|0:0;k=c>>31;J[m+28>>2]=j?k:f?0-(((c|0)!=0)+k|0)|0:0;j:{if((A|0)>0){J[m+16>>2]=1;j=-1;break j}if((A|0)<0){J[m+16>>2]=-1;c=l;l=0-c|0;o=0-(((c|0)!=0)+o|0)|0;j=1;break j}J[m+16>>2]=0;l=0;o=0;j=0}J[m>>2]=l;J[m+4>>2]=o;l=i;c=n;k:{if(!!c&(i|0)>=0|(i|0)>0){break k}l=0;c=0;if((i|0)>0|(i|0)>=0){break k}J[m+16>>2]=j;l=0-(((n|0)!=0)+i|0)|0;c=0-n|0}J[m+8>>2]=c;J[m+12>>2]=l;if((yc(m+24|0,m)|0)<=0){break d}}J[e>>2]=r;c=J[r+12>>2];t=J[c+96>>2];v=J[c+92>>2];y=J[c+88>>2];n=h;i=b;continue}}if((i|0)>0|(i|0)>=0){break d}while(1){r=(P(v-x|0,K)+P(y-z|0,L)|0)+P(t-w|0,I)|0;c=r;l=c;o=c>>31;l:{if(!b|!J[b+12>>2]){break l}s=J[J[b+4>>2]+8>>2];if(J[s+20>>2]<=J[a+100>>2]){break l}j=J[s+12>>2];c=J[j+92>>2];f=c-v|0;h=J[j+88>>2];g=h-y|0;k=J[j+96>>2];p=k-t|0;j=(P(f,K)+P(g,L)|0)+P(p,I)|0;f=jI(B,C,f,f>>31);q=ha;N=jI(D,E,g,g>>31);g=N+f|0;f=ha+q|0;q=jI(F,G,p,p>>31);p=q+g|0;g=ha+(g>>>0<N>>>0?f+1|0:f)|0;f=p;g=f>>>0<q>>>0?g+1|0:g;m:{if(!(f|g)){if((j|0)>0){break m}break l}if((g|0)>0|(g|0)>=0){break l}J[m+32>>2]=0-f;J[m+36>>2]=0-(((f|0)!=0)+g|0);c=(j|0)>0;J[m+40>>2]=c?-1:j>>>31|0;b=j;h=(b|0)<0;J[m+24>>2]=c?b:h?0-b|0:0;j=b>>31;J[m+28>>2]=c?j:h?0-(((b|0)!=0)+j|0)|0:0;n:{if((r|0)>0){J[m+16>>2]=1;j=l;c=o;h=-1;break n}if((r|0)<0){J[m+16>>2]=-1;j=0-l|0;c=0-(((l|0)!=0)+o|0)|0;h=1;break n}J[m+16>>2]=0;j=0;c=0;h=0}J[m>>2]=j;J[m+4>>2]=c;b=n;c=i;o:{if(!!b&(c|0)>=0|(c|0)>0){break o}c=0;b=0;if((i|0)>0|(i|0)>=0){break o}J[m+16>>2]=h;c=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=c;if((yc(m+24|0,m)|0)>0){break l}i=J[s+12>>2];k=J[i+96>>2];c=J[i+92>>2];b=J[e>>2];h=J[i+88>>2]}b=(b|0)==(A|0)?0:s;J[e>>2]=b;i=c-x|0;i=jI(B,C,i,i>>31);n=ha;f=i;i=h-z|0;l=jI(D,E,i,i>>31);i=f+l|0;f=ha+n|0;f=i>>>0<l>>>0?f+1|0:f;l=i;i=k-w|0;n=jI(F,G,i,i>>31);i=l+n|0;g=ha+f|0;g=i>>>0<n>>>0?g+1|0:g;n=i;i=g;y=h;v=c;t=k;continue}b=J[d>>2];if(!b|!J[b+12>>2]){break d}s=J[J[b+8>>2]+4>>2];if(J[s+20>>2]<=J[a+100>>2]){break d}b=J[s+12>>2];h=J[b+92>>2];j=h-x|0;c=j;k=c>>31;c=jI(c,k,U,R);f=ha;u=c;g=J[b+88>>2];x=g-z|0;c=x;z=c>>31;p=jI(c,z,S,O);c=u+p|0;f=ha+f|0;f=c>>>0<p>>>0?f+1|0:f;u=c;c=J[b+96>>2];w=c-w|0;b=w;p=b>>31;b=jI(T,Q,b,p);if((u|0)!=(0-b|0)|(0-(ha+((b|0)!=0)|0)|0)!=(f|0)){break d}b=v-h|0;b=jI(B,C,b,b>>31);h=ha;u=b;b=y-g|0;f=jI(D,E,b,b>>31);b=u+f|0;g=ha+h|0;g=b>>>0<f>>>0?g+1|0:g;f=b;b=t-c|0;c=jI(F,G,b,b>>31);b=f+c|0;f=ha+g|0;f=b>>>0<c>>>0?f+1|0:f;c=b;if((f|0)>0|(f|0)>=0){break d}b=(P(j,K)+P(x,L)|0)+P(w,I)|0;h=jI(j,k,B,C);j=ha;g=jI(D,E,x,z);h=g+h|0;k=ha+j|0;k=g>>>0>h>>>0?k+1|0:k;j=jI(F,G,w,p);h=j+h|0;g=ha+k|0;g=h>>>0<j>>>0?g+1|0:g;p:{if(!(g|h)){if((b|0)<=0){break d}break p}if((g|0)>0|(g|0)>=0){break d}J[m+32>>2]=0-h;J[m+36>>2]=0-(((h|0)!=0)+g|0);h=(b|0)>0;J[m+40>>2]=h?-1:b>>>31|0;j=(b|0)<0;J[m+24>>2]=h?b:j?0-b|0:0;k=b>>31;J[m+28>>2]=h?k:j?0-(((b|0)!=0)+k|0)|0:0;q:{if((r|0)>0){J[m+16>>2]=1;j=-1;break q}if((r|0)<0){J[m+16>>2]=-1;b=l;l=0-b|0;o=0-(((b|0)!=0)+o|0)|0;j=1;break q}J[m+16>>2]=0;l=0;o=0;j=0}J[m>>2]=l;J[m+4>>2]=o;h=i;b=n;r:{if(!!b&(h|0)>=0|(h|0)>0){break r}h=0;b=0;if((i|0)>0|(i|0)>=0){break r}J[m+16>>2]=j;h=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=h;if((yc(m+24|0,m)|0)>=0){break d}}J[d>>2]=s;i=J[s+12>>2];w=J[i+96>>2];x=J[i+92>>2];b=J[e>>2];z=J[i+88>>2];n=c;i=f;continue}}ga=m+48|0}function dk(a,b,c,d,e){var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=0,D=0,E=Q(0),F=Q(0),G=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ia=0;p=ga-48|0;ga=p;ia=N[b+52>>2]<N[a+12>>2];if(ia){i=N[b+44>>2];q=N[b+36>>2];m=N[b+40>>2];h=Q(Q(i*i)+Q(Q(q*q)+Q(m*m)));E=N[b+48>>2];G=K[33296];if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;g=J[7380];J[7362]=J[7379];J[7363]=g;g=J[7384];J[7366]=J[7383];J[7367]=g;g=J[7388];J[7370]=J[7387];J[7371]=g;J[7376]=0;J[7377]=0;g=J[7382];J[7364]=J[7381];J[7365]=g;g=J[7386];J[7368]=J[7385];J[7369]=g;g=J[7390];J[7372]=J[7389];J[7373]=g}H[33296]=1;g=J[7363];J[8308]=J[7362];J[8309]=g;g=J[7367];J[8312]=J[7366];J[8313]=g;g=J[7371];J[8316]=J[7370];J[8317]=g;g=J[7375];J[8320]=J[7374];J[8321]=g;g=J[7365];J[8310]=J[7364];J[8311]=g;g=J[7369];J[8314]=J[7368];J[8315]=g;g=J[7373];J[8318]=J[7372];J[8319]=g;g=J[7377];J[8322]=J[7376];J[8323]=g;G=1}f=J[c+8>>2];g=J[c>>2];z=f?f+4|0:g?g+60|0:33232;j=N[z+48>>2];l=N[b+4>>2];n=N[z+56>>2];k=N[b+12>>2];A=N[z+52>>2];u=N[b+8>>2];if(!(G&1)){G=1;if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;f=J[7380];J[7362]=J[7379];J[7363]=f;f=J[7384];J[7366]=J[7383];J[7367]=f;f=J[7388];J[7370]=J[7387];J[7371]=f;J[7376]=0;J[7377]=0;f=J[7382];J[7364]=J[7381];J[7365]=f;f=J[7386];J[7368]=J[7385];J[7369]=f;f=J[7390];J[7372]=J[7389];J[7373]=f}H[33296]=1;f=J[7363];J[8308]=J[7362];J[8309]=f;f=J[7367];J[8312]=J[7366];J[8313]=f;f=J[7371];J[8316]=J[7370];J[8317]=f;f=J[7375];J[8320]=J[7374];J[8321]=f;f=J[7365];J[8310]=J[7364];J[8311]=f;f=J[7369];J[8314]=J[7368];J[8315]=f;f=J[7373];J[8318]=J[7372];J[8319]=f;f=J[7377];J[8322]=J[7376];J[8323]=f}j=Q(l-j);l=Q(k-n);n=Q(u-A);k=i;i=Q(Q(1)/Q(Y(h)));A=Q(k*i);u=Q(m*i);w=Q(q*i);v=J[d+8>>2];f=J[d>>2];v=v?v+4|0:f?f+60|0:33232;i=Q(N[b+20>>2]-N[v+48>>2]);q=Q(N[b+28>>2]-N[v+56>>2]);m=Q(N[b+24>>2]-N[v+52>>2]);a:{b:{C=J[c+4>>2];if(!C){if(g){break b}k=Q(0);h=Q(0);break a}h=N[C+328>>2];k=N[C+332>>2];r=Q(Q(h*n)-Q(j*k));o=N[C+336>>2];s=Q(Q(o*j)-Q(l*h));t=Q(Q(k*l)-Q(n*o));k=N[C+312>>2];o=N[C+320>>2];h=N[C+316>>2];break a}h=N[g+332>>2];k=N[g+336>>2];r=Q(Q(h*n)-Q(j*k));o=N[g+340>>2];s=Q(Q(o*j)-Q(l*h));t=Q(Q(k*l)-Q(n*o));k=N[g+316>>2];o=N[g+324>>2];h=N[g+320>>2]}x=Q(o+r);y=Q(h+s);B=Q(k+t);c:{d:{D=J[d+4>>2];if(!D){if(f){break d}s=Q(0);o=Q(0);h=Q(0);k=Q(0);t=Q(0);r=Q(0);break c}h=N[D+328>>2];r=N[D+332>>2];k=Q(Q(h*m)-Q(i*r));s=N[D+336>>2];h=Q(Q(s*i)-Q(q*h));o=Q(Q(r*q)-Q(m*s));s=N[D+316>>2];t=N[D+320>>2];r=N[D+312>>2];break c}h=N[f+332>>2];r=N[f+336>>2];k=Q(Q(h*m)-Q(i*r));s=N[f+340>>2];h=Q(Q(s*i)-Q(q*h));o=Q(Q(r*q)-Q(m*s));s=N[f+320>>2];t=N[f+324>>2];r=N[f+316>>2]}F=N[a+12>>2];R=N[b+52>>2];b=J[c+4>>2];J[e+4>>2]=J[c>>2];J[e+8>>2]=b;J[e+12>>2]=J[c+8>>2];b=J[d+4>>2];J[e+16>>2]=J[d>>2];J[e+20>>2]=b;J[e+24>>2]=J[d+8>>2];k=Q(x-Q(t+k));r=Q(B-Q(r+o));s=Q(y-Q(s+h));h=Q(Q(k*A)+Q(Q(r*w)+Q(u*s)));o=Q(A*h);if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}H[33296]=1;b=J[7363];J[8308]=J[7362];J[8309]=b;b=J[7367];J[8312]=J[7366];J[8313]=b;b=J[7371];J[8316]=J[7370];J[8317]=b;b=J[7375];J[8320]=J[7374];J[8321]=b;b=J[7365];J[8310]=J[7364];J[8311]=b;b=J[7369];J[8314]=J[7368];J[8315]=b;b=J[7373];J[8318]=J[7372];J[8319]=b;b=J[7377];J[8322]=J[7376];J[8323]=b;G=1}t=N[z+36>>2];x=N[z+20>>2];y=N[z+40>>2];B=N[z+24>>2];I=N[z+4>>2];L=N[z+8>>2];M=N[z+32>>2];O=N[z>>2];P=N[z+16>>2];J[e+40>>2]=0;N[e+28>>2]=Q(M*l)+Q(Q(O*j)+Q(n*P));N[e+36>>2]=Q(y*l)+Q(Q(L*j)+Q(n*B));N[e+32>>2]=Q(t*l)+Q(Q(I*j)+Q(n*x));if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}H[33296]=1;b=J[7363];J[8308]=J[7362];J[8309]=b;b=J[7367];J[8312]=J[7366];J[8313]=b;b=J[7371];J[8316]=J[7370];J[8317]=b;b=J[7375];J[8320]=J[7374];J[8321]=b;b=J[7365];J[8310]=J[7364];J[8311]=b;b=J[7369];J[8314]=J[7368];J[8315]=b;b=J[7373];J[8318]=J[7372];J[8319]=b;b=J[7377];J[8322]=J[7376];J[8323]=b}t=N[v+36>>2];x=N[v+20>>2];y=N[v+40>>2];B=N[v+24>>2];I=N[v+4>>2];L=N[v+8>>2];M=N[v+32>>2];O=N[v>>2];P=N[v+16>>2];J[e+192>>2]=0;N[e+188>>2]=q;N[e+184>>2]=m;c=e+180|0;N[c>>2]=i;J[e+176>>2]=0;N[e+172>>2]=l;N[e+168>>2]=n;N[e+164>>2]=j;J[e+56>>2]=0;J[e+156>>2]=0;J[e+160>>2]=0;J[e+60>>2]=1065353216;J[e+64>>2]=1065353216;N[e+208>>2]=E;N[e+204>>2]=A;N[e+200>>2]=u;N[e+196>>2]=w;J[e+84>>2]=0;j=Q(R-F);N[e+80>>2]=A*j;N[e+76>>2]=u*j;N[e+72>>2]=w*j;J[e+68>>2]=1065353216;N[e+44>>2]=Q(M*q)+Q(Q(O*i)+Q(m*P));N[e+52>>2]=Q(y*q)+Q(Q(L*i)+Q(m*B));N[e+48>>2]=Q(t*q)+Q(Q(I*i)+Q(m*x));H[e+152|0]=0;j=N[a+16>>2];l=Q(k-o);i=Q(l*l);l=Q(r-Q(w*h));r=Q(l*l);l=Q(s-Q(u*h));N[e+212>>2]=Q(i+Q(r+Q(l*l)))<Q(j*Q(h*Q(h*j)))?Q(1):j;e:{if(C){a=C+344|0}else{j=Q(0);if(!g){break e}a=g+128|0}j=N[a>>2]}b=K[33360];if(!(b&1)){J[8328]=0;J[8329]=0;H[33360]=1;J[8338]=0;J[8339]=0;J[8336]=0;J[8337]=0;J[8334]=0;J[8335]=0;J[8332]=0;J[8333]=0;J[8330]=0;J[8331]=0;b=1}f:{if(D){a=D+344|0}else{l=Q(0);if(!f){break f}a=f+128|0}l=N[a>>2]}if(!(b&1)){J[8328]=0;J[8329]=0;H[33360]=1;J[8338]=0;J[8339]=0;J[8336]=0;J[8337]=0;J[8334]=0;J[8335]=0;J[8332]=0;J[8333]=0;J[8330]=0;J[8331]=0}a=C?C+264|0:g?g+180|0:33312;u=N[a+40>>2];w=N[a+24>>2];o=N[a+36>>2];t=N[a+20>>2];b=D?D+264|0:f?f+180|0:33312;E=N[b+40>>2];x=N[b+24>>2];y=N[b+36>>2];B=N[b+20>>2];n=N[e+168>>2];F=N[a+8>>2];R=N[a+4>>2];I=N[a+32>>2];i=N[e+164>>2];L=N[a>>2];q=N[e+172>>2];M=N[a+16>>2];m=N[c+4>>2];O=N[b+8>>2];P=N[b+4>>2];T=N[b+32>>2];h=N[c>>2];U=N[b>>2];k=N[c+8>>2];V=N[b+16>>2];J[p+44>>2]=0;J[p+28>>2]=0;J[p+12>>2]=0;W=Q(Q(I*n)+Q(Q(L*Q(0))-Q(M*q)));X=Q(Q(o*n)+Q(Q(R*Q(0))-Q(t*q)));Z=Q(Q(u*n)+Q(Q(F*Q(0))-Q(w*q)));_=Q(Q(T*m)+Q(Q(U*Q(0))-Q(V*k)));$=Q(Q(y*m)+Q(Q(P*Q(0))-Q(B*k)));aa=Q(Q(E*m)+Q(Q(O*Q(0))-Q(x*k)));r=Q(Q(j-Q(Q(Q(W*Q(0))+Q(q*X))-Q(n*Z)))+Q(l-Q(Q(Q(_*Q(0))+Q(k*$))-Q(m*aa))));ba=Q(Q(Q(F*q)+Q(w*Q(0)))-Q(u*i));ca=Q(Q(Q(R*q)+Q(t*Q(0)))-Q(o*i));da=Q(Q(Q(L*q)+Q(M*Q(0)))-Q(I*i));ea=Q(Q(Q(O*k)+Q(x*Q(0)))-Q(E*h));fa=Q(Q(Q(P*k)+Q(B*Q(0)))-Q(y*h));ha=Q(Q(Q(U*k)+Q(V*Q(0)))-Q(T*h));s=Q(Q(j-Q(Q(i*ba)+Q(Q(ca*Q(0))-Q(q*da))))+Q(l-Q(Q(h*ea)+Q(Q(fa*Q(0))-Q(k*ha)))));A=Q(Q(Q(0)-Q(Q(Z*Q(0))+Q(Q(n*W)-Q(X*i))))+Q(Q(0)-Q(Q(aa*Q(0))+Q(Q(m*_)-Q($*h)))));S=Q(Q(Q(0)-Q(Q(Q(da*Q(0))+Q(q*ca))-Q(n*ba)))+Q(Q(0)-Q(Q(Q(ha*Q(0))+Q(k*fa))-Q(m*ea))));F=Q(Q(u*Q(0))+Q(Q(i*w)-Q(F*n)));o=Q(Q(o*Q(0))+Q(Q(i*t)-Q(R*n)));t=Q(Q(I*Q(0))+Q(Q(i*M)-Q(L*n)));E=Q(Q(E*Q(0))+Q(Q(h*x)-Q(O*m)));x=Q(Q(y*Q(0))+Q(Q(h*B)-Q(P*m)));y=Q(Q(T*Q(0))+Q(Q(h*V)-Q(U*m)));u=Q(Q(Q(0)-Q(Q(i*F)+Q(Q(o*Q(0))-Q(q*t))))+Q(Q(0)-Q(Q(h*E)+Q(Q(x*Q(0))-Q(k*y)))));w=Q(Q(Q(0)-Q(Q(Q(t*Q(0))+Q(q*o))-Q(n*F)))+Q(Q(0)-Q(Q(Q(y*Q(0))+Q(k*x))-Q(m*E))));B=Q(Q(S*u)-Q(w*s));o=Q(Q(j-Q(Q(F*Q(0))+Q(Q(n*t)-Q(o*i))))+Q(l-Q(Q(E*Q(0))+Q(Q(m*y)-Q(x*h)))));n=Q(Q(Q(0)-Q(Q(ba*Q(0))+Q(Q(n*da)-Q(ca*i))))+Q(Q(0)-Q(Q(ea*Q(0))+Q(Q(m*ha)-Q(fa*h)))));m=Q(Q(s*o)-Q(u*n));l=Q(Q(Q(0)-Q(Q(i*Z)+Q(Q(X*Q(0))-Q(q*W))))+Q(Q(0)-Q(Q(h*aa)+Q(Q($*Q(0))-Q(k*_)))));i=Q(Q(n*w)-Q(o*S));j=Q(Q(1)/Q(Q(A*B)+Q(Q(r*m)+Q(l*i))));N[p+40>>2]=Q(Q(r*s)-Q(S*l))*j;N[p+36>>2]=Q(Q(l*w)-Q(u*r))*j;N[p+32>>2]=B*j;N[p+24>>2]=Q(Q(A*S)-Q(n*r))*j;N[p+20>>2]=Q(Q(r*o)-Q(w*A))*j;N[p+16>>2]=i*j;N[p+8>>2]=Q(Q(l*n)-Q(s*A))*j;N[p+4>>2]=Q(Q(A*u)-Q(o*l))*j;N[p>>2]=m*j;a=J[p+12>>2];J[e+112>>2]=J[p+8>>2];J[e+116>>2]=a;a=J[p+4>>2];J[e+104>>2]=J[p>>2];J[e+108>>2]=a;a=J[p+20>>2];J[e+120>>2]=J[p+16>>2];J[e+124>>2]=a;a=J[p+28>>2];J[e+128>>2]=J[p+24>>2];J[e+132>>2]=a;a=J[p+36>>2];J[e+136>>2]=J[p+32>>2];J[e+140>>2]=a;a=J[p+44>>2];J[e+144>>2]=J[p+40>>2];J[e+148>>2]=a}ga=p+48|0;return ia}function Ac(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=0,x=0;p=ga-32|0;ga=p;Bd(a);H[a+280|0]=1;J[a>>2]=20932;J[a+276>>2]=0;H[a+408|0]=1;J[a+284>>2]=0;J[a+268>>2]=0;J[a+272>>2]=0;J[a+404>>2]=0;H[a+428|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;J[a+424>>2]=0;H[a+448|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;J[a+444>>2]=0;H[a+496|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;J[a+492>>2]=0;J[a+484>>2]=0;J[a+488>>2]=0;H[a+516|0]=1;J[a+512>>2]=0;H[a+704|0]=1;J[a+684>>2]=b;J[a+504>>2]=0;J[a+508>>2]=0;J[a+700>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;H[a+724|0]=1;J[a+720>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;H[a+744|0]=1;J[a+740>>2]=0;J[a+732>>2]=0;J[a+736>>2]=0;H[a+764|0]=1;J[a+760>>2]=0;J[a+752>>2]=0;J[a+756>>2]=0;H[a+784|0]=1;J[a+780>>2]=0;J[a+772>>2]=0;J[a+776>>2]=0;H[a+804|0]=1;H[a+824|0]=1;J[a+800>>2]=0;J[a+792>>2]=0;J[a+796>>2]=0;H[a+844|0]=1;J[a+820>>2]=0;J[a+812>>2]=0;J[a+816>>2]=0;H[a+864|0]=1;J[a+840>>2]=0;J[a+832>>2]=0;J[a+836>>2]=0;H[a+884|0]=1;J[a+860>>2]=0;J[a+852>>2]=0;J[a+856>>2]=0;J[a+880>>2]=0;J[a+872>>2]=0;J[a+876>>2]=0;x=jc(a+928|0);jc(a+988|0);jc(a+1048|0);J[a+1120>>2]=0;H[a+1124|0]=1;H[a+1144|0]=1;b=a+1112|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1140>>2]=0;H[a+1248|0]=1;b=a+1132|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1244>>2]=0;b=a+1236|0;J[b>>2]=0;J[b+4>>2]=0;J[a+288>>2]=0;J[a+292>>2]=1065353216;J[a+236>>2]=8;I[a+472>>1]=0;J[a+296>>2]=0;J[a+300>>2]=0;J[a+304>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;J[a+476>>2]=0;J[a+388>>2]=1;J[a+380>>2]=0;J[a+384>>2]=4;J[a+372>>2]=0;J[a+376>>2]=1;J[a+364>>2]=1065353216;J[a+368>>2]=1065353216;J[a+356>>2]=1056964608;J[a+360>>2]=1056964608;J[a+348>>2]=1056964608;J[a+352>>2]=1056964608;J[a+340>>2]=1036831949;J[a+344>>2]=1065353216;J[a+332>>2]=1065353216;J[a+336>>2]=1060320051;J[a+324>>2]=1065353216;J[a+328>>2]=1036831949;J[a+316>>2]=1045220557;J[a+320>>2]=0;J[a+528>>2]=0;J[a+532>>2]=0;J[a+520>>2]=0;J[a+524>>2]=0;J[a+536>>2]=1065353216;J[a+540>>2]=0;J[a+544>>2]=0;J[a+548>>2]=0;J[a+552>>2]=0;J[a+556>>2]=1065353216;J[a+560>>2]=0;J[a+564>>2]=0;J[a+568>>2]=0;J[a+572>>2]=0;J[a+576>>2]=1065353216;J[a+580>>2]=0;J[a+584>>2]=1065353216;J[a+588>>2]=0;J[a+592>>2]=0;J[a+596>>2]=0;J[a+600>>2]=0;J[a+604>>2]=1065353216;J[a+608>>2]=0;J[a+612>>2]=0;J[a+616>>2]=0;J[a+620>>2]=0;H[a+924|0]=1;J[a+888>>2]=0;J[a+624>>2]=1065353216;J[a+628>>2]=0;J[a+680>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0;J[a+892>>2]=0;J[a+896>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+4>>2]=1065353216;J[a+16>>2]=0;J[a+20>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+44>>2]=1065353216;J[a+56>>2]=0;J[a+60>>2]=0;J[a- -64>>2]=0;b=J[a+404>>2];if(!(b?!b|!K[a+408|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+404>>2]=0;H[a+408|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;b=J[a+424>>2];if(!(b?!b|!K[a+428|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+424>>2]=0;H[a+428|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;b=J[a+444>>2];if(!(b?!b|!K[a+448|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+444>>2]=0;H[a+448|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;b=J[a+420>>2];l=J[a+416>>2];a:{if((b|0)!=(l|0)){break a}b=l?l<<1:1;if((l|0)>=(b|0)){b=l;break a}if(b){J[8369]=J[8369]+1;h=ia[J[6782]](b<<2,16)|0;l=J[a+416>>2]}g=J[a+424>>2];b:{c:{if((l|0)>0){if(l-1>>>0>=3){t=l&-4;while(1){i=j<<2;J[i+h>>2]=J[g+i>>2];m=i|4;J[m+h>>2]=J[g+m>>2];m=i|8;J[m+h>>2]=J[g+m>>2];i=i|12;J[i+h>>2]=J[g+i>>2];j=j+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=l&3;if(k){while(1){i=j<<2;J[i+h>>2]=J[g+i>>2];j=j+1|0;f=f+1|0;if((k|0)!=(f|0)){continue}break}}if(K[a+428|0]){break c}break b}if(!g|!K[a+428|0]){break b}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}l=J[a+416>>2]}J[a+424>>2]=h;H[a+428|0]=1;J[a+420>>2]=b}g=J[a+424>>2];J[g+(l<<2)>>2]=1;h=l+1|0;J[a+416>>2]=h;d:{if((b|0)!=(h|0)){j=g;f=b;b=h;break d}f=b?b<<1:1;if((f|0)<=(b|0)){j=g;f=b;break d}e:{if(!f){j=0;break e}J[8369]=J[8369]+1;j=ia[J[6782]](f<<2,16)|0;g=J[a+424>>2];b=J[a+416>>2]}f:{g:{if((b|0)>0){l=0;h=0;if(b-1>>>0>=3){t=b&-4;k=0;while(1){i=h<<2;J[i+j>>2]=J[g+i>>2];m=i|4;J[m+j>>2]=J[g+m>>2];m=i|8;J[m+j>>2]=J[g+m>>2];i=i|12;J[i+j>>2]=J[g+i>>2];h=h+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=b&3;if(k){while(1){i=h<<2;J[i+j>>2]=J[g+i>>2];h=h+1|0;l=l+1|0;if((k|0)!=(l|0)){continue}break}}if(K[a+428|0]){break g}break f}if(!g|!K[a+428|0]){break f}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}b=J[a+416>>2]}J[a+424>>2]=j;H[a+428|0]=1;J[a+420>>2]=f}J[(b<<2)+j>>2]=2;g=b+1|0;J[a+416>>2]=g;h:{if((g|0)!=(f|0)){h=j;b=f;f=g;break h}b=f?f<<1:1;if((f|0)>=(b|0)){h=j;b=f;break h}i:{if(!b){h=0;break i}J[8369]=J[8369]+1;h=ia[J[6782]](b<<2,16)|0;j=J[a+424>>2];f=J[a+416>>2]}j:{k:{if((f|0)>0){l=0;g=0;if(f-1>>>0>=3){t=f&-4;k=0;while(1){i=g<<2;J[i+h>>2]=J[j+i>>2];m=i|4;J[m+h>>2]=J[j+m>>2];m=i|8;J[m+h>>2]=J[j+m>>2];i=i|12;J[i+h>>2]=J[j+i>>2];g=g+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=f&3;if(k){while(1){i=g<<2;J[i+h>>2]=J[j+i>>2];g=g+1|0;l=l+1|0;if((k|0)!=(l|0)){continue}break}}if(K[a+428|0]){break k}break j}if(!j|!K[a+428|0]){break j}}if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}f=J[a+416>>2]}J[a+424>>2]=h;H[a+428|0]=1;J[a+420>>2]=b}J[(f<<2)+h>>2]=3;f=f+1|0;J[a+416>>2]=f;l:{if((b|0)!=(f|0)){g=h;b=f;break l}i=b?b<<1:1;if((i|0)<=(b|0)){g=h;break l}m:{if(!i){g=0;break m}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;h=J[a+424>>2];b=J[a+416>>2]}n:{o:{if((b|0)>0){f=0;j=0;if(b-1>>>0>=3){t=b&-4;l=0;while(1){k=j<<2;J[k+g>>2]=J[h+k>>2];m=k|4;J[m+g>>2]=J[h+m>>2];m=k|8;J[m+g>>2]=J[h+m>>2];k=k|12;J[k+g>>2]=J[h+k>>2];j=j+4|0;l=l+4|0;if((t|0)!=(l|0)){continue}break}}l=b&3;if(l){while(1){k=j<<2;J[k+g>>2]=J[h+k>>2];j=j+1|0;f=f+1|0;if((l|0)!=(f|0)){continue}break}}if(K[a+428|0]){break o}break n}if(!h|!K[a+428|0]){break n}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}b=J[a+416>>2]}J[a+424>>2]=g;H[a+428|0]=1;J[a+420>>2]=i}J[(b<<2)+g>>2]=0;J[a+416>>2]=b+1;J[8369]=J[8369]+1;b=ia[J[6782]](20,16)|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=13324;J[b+16>>2]=a;J[b+4>>2]=32;J[b>>2]=21236;J[a+192>>2]=b;J[b+12>>2]=1048576e3;b=a+1152|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1148>>2]=1065353216;b=a+1160|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1172|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1168>>2]=1065353216;b=a+1180|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1192|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1188>>2]=1065353216;b=a+1200|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1208|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1216|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1224|0;J[b>>2]=0;J[b+4>>2]=1065353216;h=qk(a);b=h;J[b+12>>2]=1065353216;J[b+16>>2]=1;J[b+4>>2]=1065353216;J[b+8>>2]=1065353216;b=J[a+192>>2];n=Q(ia[J[J[b>>2]+48>>2]](b));b=J[a+712>>2];p:{if((c|0)<=(b|0)){break p}if(J[a+716>>2]<(c|0)){if(c){J[8369]=J[8369]+1;u=ia[J[6782]](P(c,104),16)|0;f=J[a+712>>2]}else{f=b}q:{if((f|0)<=0){break q}if((f|0)!=1){j=f&-2;while(1){g=P(o,104);sa(g+u|0,g+J[a+720>>2]|0,104);g=P(o|1,104);sa(g+u|0,g+J[a+720>>2]|0,104);o=o+2|0;w=w+2|0;if((j|0)!=(w|0)){continue}break}}if(!(f&1)){break q}f=P(o,104);sa(f+u|0,f+J[a+720>>2]|0,104)}f=J[a+720>>2];if(!(f?!f|!K[a+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[a+720>>2]=u;H[a+724|0]=1;J[a+716>>2]=c}f=(b^-1)+c|0;j=c-b&3;if(j){o=0;while(1){qa(J[a+720>>2]+P(b,104)|0,0,104);b=b+1|0;o=o+1|0;if((j|0)!=(o|0)){continue}break}}if(f>>>0<3){break p}while(1){f=P(b,104);qa(f+J[a+720>>2]|0,0,104);qa((f+J[a+720>>2]|0)+104|0,0,104);qa((f+J[a+720>>2]|0)+208|0,0,104);qa((f+J[a+720>>2]|0)+312|0,0,104);b=b+4|0;if((c|0)!=(b|0)){continue}break}}J[a+712>>2]=c;if((c|0)>0){o=0;while(1){b=qa(J[a+720>>2]+P(o,104)|0,0,104);r=Q(0);s=Q(0);v=Q(0);q=Q(0);u=0;if(d){q=N[d+12>>2];v=N[d+8>>2];r=N[d+4>>2];s=N[d>>2];u=d+16|0}N[b+8>>2]=s;N[b+12>>2]=r;N[b+20>>2]=q;N[b+16>>2]=v;d=J[b+12>>2];J[b+24>>2]=J[b+8>>2];J[b+28>>2]=d;d=J[b+20>>2];J[b+32>>2]=J[b+16>>2];J[b+36>>2]=d;r:{if(!e){q=Q(1);e=0;break r}q=N[e>>2];e=e+4|0}N[b+88>>2]=q>Q(0)?Q(Q(1)/q):Q(0);J[p+28>>2]=0;N[p+24>>2]=n+v;N[p+20>>2]=n+r;N[p+16>>2]=n+s;J[p+12>>2]=0;N[p+8>>2]=v-n;N[p+4>>2]=r-n;N[p>>2]=s-n;J[b+96>>2]=Db(x,p,b);J[b+4>>2]=h;d=u;o=o+1|0;if((o|0)!=(c|0)){continue}break}}b=a+892|0;c=J[a+928>>2];s:{if(c){d=J[a+192>>2];n=Q(ia[J[J[d>>2]+48>>2]](d));q=N[c>>2];r=N[c+4>>2];s=N[c+8>>2];J[a+904>>2]=0;N[a+900>>2]=s-n;N[a+896>>2]=r-n;N[a+892>>2]=q-n;q=N[c+20>>2];r=N[c+24>>2];s=N[c+16>>2];J[a+920>>2]=0;N[a+916>>2]=n+r;N[a+912>>2]=n+q;c=a+908|0;N[c>>2]=n+s;d=J[a+188>>2];if(!d){break s}e=J[a+684>>2];f=J[e+32>>2];ia[J[J[f>>2]+16>>2]](f,d,b,c,J[e+36>>2]);break s}J[b>>2]=0;J[b+4>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0}ga=p+32|0;return a}function eA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;u=ga-16|0;ga=u;ya(2495);c=J[a+180>>2];n=J[a+212>>2];a:{if((c|0)>=(n|0)){break a}if((n|0)>J[a+184>>2]){if(n){J[8369]=J[8369]+1;m=ia[J[6782]](n<<2,16)|0;e=J[a+180>>2]}else{e=c}b:{if((e|0)<=0){break b}if(e-1>>>0>=3){h=e&-4;while(1){i=g<<2;J[i+m>>2]=J[i+J[a+188>>2]>>2];f=i|4;J[f+m>>2]=J[f+J[a+188>>2]>>2];f=i|8;J[f+m>>2]=J[f+J[a+188>>2]>>2];i=i|12;J[i+m>>2]=J[i+J[a+188>>2]>>2];g=g+4|0;d=d+4|0;if((h|0)!=(d|0)){continue}break}}e=e&3;if(!e){break b}while(1){d=g<<2;J[d+m>>2]=J[d+J[a+188>>2]>>2];g=g+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}e=J[a+188>>2];if(!(e?!e|!K[a+192|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+188>>2]=m;H[a+192|0]=1;J[a+184>>2]=n}e=n+(c^-1)|0;d=n-c&3;if(d){g=0;while(1){J[J[a+188>>2]+(c<<2)>>2]=0;c=c+1|0;g=g+1|0;if((d|0)!=(g|0)){continue}break}}if(e>>>0<3){break a}while(1){e=c<<2;J[e+J[a+188>>2]>>2]=0;J[(e+J[a+188>>2]|0)+4>>2]=0;J[(e+J[a+188>>2]|0)+8>>2]=0;J[(e+J[a+188>>2]|0)+12>>2]=0;c=c+4|0;if((n|0)!=(c|0)){continue}break}}J[a+180>>2]=n;if((ia[J[J[a>>2]+104>>2]](a)|0)>0){c=0;while(1){e=c<<2;J[e+J[a+188>>2]>>2]=J[e+J[a+220>>2]>>2];c=c+1|0;if((ia[J[J[a>>2]+104>>2]](a)|0)>(c|0)){continue}break}}c=J[a+180>>2];if((c|0)>=2){Ek(a+176|0,u+8|0,0,c-1|0)}c=ia[J[J[a>>2]+104>>2]](a)|0;c=c?J[a+188>>2]:0;e=J[a+180>>2];g=J[a+196>>2];J[g+20>>2]=ia[J[J[a>>2]+20>>2]](a);J[g+16>>2]=e;J[g+12>>2]=c;J[g+4>>2]=b;e=J[g+32>>2];c:{if((e|0)>=0){break c}if(J[g+36>>2]<0){c=J[g+40>>2];if(!(c?!c|!K[g+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+44|0]=1;J[g+36>>2]=0;J[g+40>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+40>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break c}while(1){e=c<<2;J[e+J[g+40>>2]>>2]=0;J[(e+J[g+40>>2]|0)+4>>2]=0;J[(e+J[g+40>>2]|0)+8>>2]=0;J[(e+J[g+40>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+32>>2]=0;e=J[g+52>>2];d:{if((e|0)>=0){break d}if(J[g+56>>2]<0){c=J[g+60>>2];if(!(c?!c|!K[g- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+64|0]=1;J[g+56>>2]=0;J[g+60>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+60>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break d}while(1){e=c<<2;J[e+J[g+60>>2]>>2]=0;J[(e+J[g+60>>2]|0)+4>>2]=0;J[(e+J[g+60>>2]|0)+8>>2]=0;J[(e+J[g+60>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+52>>2]=0;e=J[g+72>>2];e:{if((e|0)>=0){break e}if(J[g+76>>2]<0){c=J[g+80>>2];if(!(c?!c|!K[g+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+84|0]=1;J[g+76>>2]=0;J[g+80>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+80>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break e}while(1){e=c<<2;J[e+J[g+80>>2]>>2]=0;J[(e+J[g+80>>2]|0)+4>>2]=0;J[(e+J[g+80>>2]|0)+8>>2]=0;J[(e+J[g+80>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+72>>2]=0;c=J[a+200>>2];e=J[a+24>>2];A=c,B=J[a+8>>2],C=ia[J[J[e>>2]+36>>2]](e)|0,z=J[J[c>>2]+8>>2],ia[z](A|0,B|0,C|0);f=J[a+204>>2];i=J[a+24>>2];t=J[a+196>>2];j=0;g=0;m=0;v=ga-16|0;ga=v;n=a;ya(2390);c=J[f+28>>2];f:{if((c|0)>=0){break f}if(J[f+32>>2]<0){a=J[f+36>>2];if(!(a?!a|!K[f+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[f+40|0]=1;J[f+32>>2]=0;J[f+36>>2]=0}a=c;e=0-c&3;if(e){while(1){J[J[f+36>>2]+(a<<2)>>2]=0;a=a+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}if(c>>>0>4294967292){break f}while(1){c=a<<2;J[c+J[f+36>>2]>>2]=0;J[(c+J[f+36>>2]|0)+4>>2]=0;J[(c+J[f+36>>2]|0)+8>>2]=0;J[(c+J[f+36>>2]|0)+12>>2]=0;a=a+4|0;if(a){continue}break}}J[f+28>>2]=0;a=0;l=ga-16|0;ga=l;o=f+4|0;h=J[o+4>>2];g:{if((h|0)<=0){break g}j=J[o+12>>2];while(1){c=a;k=j+(c<<3)|0;d=k;e=J[d>>2];if((c|0)!=(e|0)){while(1){c=j+(e<<3)|0;J[d>>2]=J[c>>2];c=J[c>>2];d=j+(c<<3)|0;e=J[d>>2];if((c|0)!=(e|0)){continue}break}}J[k>>2]=c;a=a+1|0;if((h|0)!=(a|0)){continue}break}if((h|0)<2){break g}Nk(o,l+8|0,0,h-1|0)}ga=l+16|0;p=J[f+8>>2];if((p|0)>0){c=0;while(1){a=c;e=c+1|0;h=(e|0)<(p|0)?p:e;d=h-1|0;j=J[f+16>>2];k=J[j+(c<<3)>>2];while(1){h:{e=c;if((c|0)==(d|0)){e=d;c=h;break h}c=e+1|0;if((k|0)==J[(c<<3)+j>>2]){continue}}break}i:{s=(a|0)>(e|0);if(s){break i}h=1;l=(e-a|0)+1|0;q=l&1;o=J[n+16>>2];d=a;if((a|0)!=(e|0)){w=l&-2;l=0;while(1){r=(d<<3)+j|0;y=J[(J[r+4>>2]<<2)+o>>2];if((k|0)==J[y+208>>2]){x=h;h=J[y+216>>2];h=x&((h|0)!=4&(h|0)!=1)}r=J[(J[r+12>>2]<<2)+o>>2];if((k|0)==J[r+208>>2]){x=h;h=J[r+216>>2];h=x&((h|0)!=4&(h|0)!=1)}d=d+2|0;l=l+2|0;if((w|0)!=(l|0)){continue}break}}j:{if(!q){break j}d=J[(J[((d<<3)+j|0)+4>>2]<<2)+o>>2];if((k|0)!=J[d+208>>2]){break j}d=J[d+216>>2];h=(d|0)!=4&(d|0)!=1&h}if(h&1){if(s){break i}while(1){d=J[J[n+16>>2]+(J[((a<<3)+j|0)+4>>2]<<2)>>2];if((k|0)==J[d+208>>2]&(J[d+216>>2]&-2)!=4){J[d+216>>2]=2}if((a|0)==(e|0)){break i}a=a+1|0;j=J[f+16>>2];continue}}while(1){d=J[(J[((a<<3)+j|0)+4>>2]<<2)+o>>2];if(!((k|0)!=J[d+208>>2]|J[d+216>>2]!=2)){if((J[d+216>>2]&-2)!=4){J[d+216>>2]=3}J[d+220>>2]=0}if((a|0)==(e|0)){break i}a=a+1|0;o=J[n+16>>2];j=J[f+16>>2];continue}}if((c|0)<(p|0)){continue}break}}c=i;p=ia[J[J[c>>2]+36>>2]](c)|0;if((p|0)>0){j=0;while(1){k=ia[J[J[c>>2]+40>>2]](c,j)|0;a=J[k+744>>2];e=J[k+740>>2];k:{if(!(J[e+216>>2]!=2?e:0)&(!a|J[a+216>>2]==2)){break k}d=J[e+204>>2];if(!(!(d&2)|J[e+216>>2]==2|d&4)){kb(a,0)}d=J[a+204>>2];if(!(!(d&2)|J[a+216>>2]==2|d&4)){kb(e,0)}if(!K[f+64|0]){break k}if(!(ia[J[J[c>>2]+28>>2]](c,e,a)|0)){break k}h=J[f+28>>2];l:{if((h|0)!=J[f+32>>2]){break l}i=h?h<<1:1;if((i|0)<=(h|0)){break l}m:{if(!i){e=0;break m}J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;h=J[f+28>>2]}n:{if((h|0)<=0){break n}o=0;a=0;if(h-1>>>0>=3){s=h&-4;l=0;while(1){d=a<<2;J[d+e>>2]=J[d+J[f+36>>2]>>2];q=d|4;J[q+e>>2]=J[q+J[f+36>>2]>>2];q=d|8;J[q+e>>2]=J[q+J[f+36>>2]>>2];d=d|12;J[d+e>>2]=J[d+J[f+36>>2]>>2];a=a+4|0;l=l+4|0;if((s|0)!=(l|0)){continue}break}}d=h&3;if(!d){break n}while(1){l=a<<2;J[l+e>>2]=J[l+J[f+36>>2]>>2];a=a+1|0;o=o+1|0;if((d|0)!=(o|0)){continue}break}}a=J[f+36>>2];if(!(!a|!K[f+40|0])){if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}h=J[f+28>>2]}J[f+36>>2]=e;H[f+40|0]=1;J[f+32>>2]=i}J[J[f+36>>2]+(h<<2)>>2]=k;J[f+28>>2]=h+1}j=j+1|0;if((p|0)!=(j|0)){continue}break}}xa();e=J[f+8>>2];ya(2731);o:{if(!K[f+64|0]){a=ia[J[J[c>>2]+44>>2]](c)|0;c=ia[J[J[c>>2]+36>>2]](c)|0;ia[J[J[t>>2]+8>>2]](t,J[n+16>>2],J[n+8>>2],a,c,-1);break o}j=J[f+28>>2];if((j|0)>=2){Mk(f+24|0,v+8|0,0,j-1|0)}if((e|0)<=0){break o}a=1;while(1){c=J[f+16>>2];o=J[c+(g<<3)>>2];l=1;p:{if((e|0)<=(g|0)){break p}while(1){s=J[J[n+16>>2]+(J[((g<<3)+c|0)+4>>2]<<2)>>2];d=J[f+48>>2];q:{if((d|0)!=J[f+52>>2]){break q}p=d?d<<1:1;if((p|0)<=(d|0)){break q}r:{if(!p){i=0;break r}J[8369]=J[8369]+1;i=ia[J[6782]](p<<2,16)|0;d=J[f+48>>2]}s:{if((d|0)<=0){break s}h=0;c=0;if(d-1>>>0>=3){w=d&-4;q=0;while(1){k=c<<2;J[k+i>>2]=J[k+J[f+56>>2]>>2];r=k|4;J[r+i>>2]=J[r+J[f+56>>2]>>2];r=k|8;J[r+i>>2]=J[r+J[f+56>>2]>>2];k=k|12;J[k+i>>2]=J[k+J[f+56>>2]>>2];c=c+4|0;q=q+4|0;if((w|0)!=(q|0)){continue}break}}k=d&3;if(!k){break s}while(1){q=c<<2;J[q+i>>2]=J[q+J[f+56>>2]>>2];c=c+1|0;h=h+1|0;if((k|0)!=(h|0)){continue}break}}c=J[f+56>>2];if(!(!c|!K[f+60|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[f+48>>2]}J[f+56>>2]=i;H[f+60|0]=1;J[f+52>>2]=p}J[J[f+56>>2]+(d<<2)>>2]=s;J[f+48>>2]=d+1;c=J[s+216>>2];l=((c|0)==2|(c|0)==5)&l;g=g+1|0;if((e|0)==(g|0)){g=e;break p}c=J[f+16>>2];if((o|0)==J[c+(g<<3)>>2]){continue}break}}h=0;c=0;t:{if((j|0)<=(m|0)){break t}k=J[f+36>>2];i=k+(m<<2)|0;c=J[i>>2];d=J[J[c+740>>2]+208>>2];if((d|0)<0){d=J[J[c+744>>2]+208>>2]}c=0;if((d|0)!=(o|0)){break t}a=m+1|0;d=(a|0)<(j|0)?j:a;h=d-1|0;a=m;while(1){u:{if((a|0)==(h|0)){a=d;break u}a=a+1|0;p=J[k+(a<<2)>>2];c=J[J[p+740>>2]+208>>2];if((c|0)<0){c=J[J[p+744>>2]+208>>2]}if((c|0)==(o|0)){continue}}break}h=a-m|0;c=i}if(!l){ia[J[J[t>>2]+8>>2]](t,J[f+56>>2],J[f+48>>2],c,h,o)}d=J[f+48>>2];v:{if((d|0)>=0){break v}if(J[f+52>>2]<0){c=J[f+56>>2];if(!(c?!c|!K[f+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[f+60|0]=1;J[f+52>>2]=0;J[f+56>>2]=0}i=0;c=d;l=0-c&3;if(l){while(1){J[J[f+56>>2]+(c<<2)>>2]=0;c=c+1|0;i=i+1|0;if((l|0)!=(i|0)){continue}break}}if(d>>>0>4294967292){break v}while(1){d=c<<2;J[d+J[f+56>>2]>>2]=0;J[(d+J[f+56>>2]|0)+4>>2]=0;J[(d+J[f+56>>2]|0)+8>>2]=0;J[(d+J[f+56>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}m=h?a:m;J[f+48>>2]=0;if((e|0)>(g|0)){continue}break}}xa();ga=v+16|0;Dk(J[n+196>>2]);a=J[n+200>>2];ia[J[J[a>>2]+16>>2]](a,b,J[n+72>>2]);xa();ga=u+16|0}function IB(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0;i=ga-80|0;ga=i;if(!(!K[a+171|0]&N[a+172>>2]<=Q(0))){H[a+168|0]=ia[J[J[a>>2]+48>>2]](a);g=Q(N[a+16>>2]-Q(N[a+44>>2]*c));N[a+16>>2]=g;a:{if(!(g>Q(0))){break a}f=N[a+28>>2];if(!(f<g)){break a}N[a+16>>2]=f;g=f}b:{if(!(g<Q(0))){break b}f=Q(R(N[a+24>>2]));if(!(f<Q(R(g)))){break b}g=Q(-f);N[a+16>>2]=g}N[a+20>>2]=g*c;h=J[a+8>>2];d=J[h+16>>2];J[i+24>>2]=J[h+12>>2];J[i+28>>2]=d;d=J[h+8>>2];J[i+16>>2]=J[h+4>>2];J[i+20>>2]=d;d=J[h+32>>2];J[i+40>>2]=J[h+28>>2];J[i+44>>2]=d;d=J[h+24>>2];J[i+32>>2]=J[h+20>>2];J[i+36>>2]=d;d=J[h+48>>2];J[i+56>>2]=J[h+44>>2];J[i+60>>2]=d;d=J[h+40>>2];J[i+48>>2]=J[h+36>>2];J[i+52>>2]=d;d=ga-240|0;ga=d;if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;n=h+31904|0;j=N[n>>2];m=h+31908|0;g=N[m>>2];l=h+31912|0;f=N[l>>2];J[a+124>>2]=0;k=f;f=N[a+20>>2];f=Q(N[a+52>>2]+(f>Q(0)?f:Q(0)));N[a+120>>2]=Q(k*f)+N[a+100>>2];N[a+116>>2]=Q(g*f)+N[a+96>>2];N[a+112>>2]=N[a+92>>2]+Q(j*f);J[d+144>>2]=0;J[d+148>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+132>>2]=1065353216;J[d+124>>2]=0;J[d+128>>2]=0;J[d+216>>2]=1065353216;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+196>>2]=1065353216;J[d+188>>2]=0;J[d+192>>2]=0;J[d+152>>2]=1065353216;J[d+156>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+112>>2]=1065353216;J[d+180>>2]=0;J[d+184>>2]=0;J[d+176>>2]=1065353216;h=J[a+12>>2];r=Q(ia[J[J[h>>2]+48>>2]](h));o=N[n>>2];s=N[a+96>>2];p=N[m>>2];k=N[a+100>>2];j=N[l>>2];g=N[a+92>>2];f=N[a+56>>2];J[d+236>>2]=0;f=Q(r+f);N[d+232>>2]=k+Q(j*f);N[d+228>>2]=s+Q(f*p);N[d+224>>2]=g+Q(o*f);h=J[a+124>>2];J[d+168>>2]=J[a+120>>2];J[d+172>>2]=h;h=J[a+116>>2];J[d+160>>2]=J[a+112>>2];J[d+164>>2]=h;l=J[a+8>>2];if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;j=N[h+31904>>2];g=N[h+31908>>2];f=N[h+31912>>2];J[d+28>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+104>>2]=0;J[d+108>>2]=1060439169;N[d+100>>2]=-f;N[d+96>>2]=-g;J[d+84>>2]=0;J[d+12>>2]=1065353216;J[d+20>>2]=0;J[d+24>>2]=0;J[d+8>>2]=19248;N[d+92>>2]=-j;J[d+88>>2]=l;h=J[l+188>>2];I[d+16>>1]=L[h+4>>1];I[d+18>>1]=L[h+6>>1];h=J[a+12>>2];c:{if(K[a+170|0]){$e(l,h,d+176|0,d+112|0,d+8|0,N[b+56>>2]);break c}ic(b,h,d+176|0,d+112|0,d+8|0,Q(0))}g=N[d+12>>2];d:{if(g<Q(1)){if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;e:{if(!(Q(Q(N[d+60>>2]*N[h+31912>>2])+Q(Q(N[d+52>>2]*N[h+31904>>2])+Q(N[d+56>>2]*N[h+31908>>2])))>Q(0))){break e}N[a+108>>2]=N[a+52>>2]*g;if(K[a+180|0]){f=Q(Q(1)-g);N[a+92>>2]=Q(f*N[a+92>>2])+Q(g*N[a+112>>2]);N[a+96>>2]=Q(f*N[a+96>>2])+Q(g*N[a+116>>2]);N[a+100>>2]=Q(f*N[a+100>>2])+Q(g*N[a+120>>2]);break e}h=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=h;h=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=h}J[a+16>>2]=0;J[a+20>>2]=0;break d}N[a+108>>2]=N[a+52>>2];h=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=h;h=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=h}ga=d+240|0;q=i- -64|0;f:{if(K[a+171|0]){il(a,b,a+60|0);break f}k=N[a+172>>2];N[a+172>>2]=k-c;j=N[a- -64>>2];g=N[a+68>>2];f=N[a+60>>2];J[i+12>>2]=0;o=g;g=c<k?c:k;N[i+8>>2]=o*g;N[i+4>>2]=g*j;N[i>>2]=g*f;il(a,b,i)}e=ga-416|0;ga=e;d=J[a+124>>2];J[e+216>>2]=J[a+120>>2];J[e+220>>2]=d;d=J[a+116>>2];J[e+208>>2]=J[a+112>>2];J[e+212>>2]=d;f=N[a+16>>2];g=Q((f<Q(0)?Q(-f):Q(0))*c);g:{if(!(g>Q(0))){break g}f=N[a+24>>2];if(!(f<g)){break g}g=K[a+168|0]?f:K[a+169|0]?g:f}if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}d=J[a+176>>2]<<4;n=d+31912|0;j=N[n>>2];f=N[d+31908>>2];m=d+31904|0;g=Q(g+N[a+108>>2]);r=Q(N[m>>2]*g);o=Q(N[a+112>>2]-r);N[a+112>>2]=o;s=Q(g*f);p=Q(N[a+116>>2]-s);N[a+116>>2]=p;k=Q(g*j);g=Q(N[a+120>>2]-k);N[a+120>>2]=g;f=N[a+40>>2];l=J[a+8>>2];J[e+124>>2]=0;J[e+128>>2]=0;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+180>>2]=0;J[e+108>>2]=1065353216;J[e+116>>2]=0;J[e+120>>2]=0;J[e+184>>2]=l;J[e+104>>2]=19248;d=J[n+4>>2];J[e+196>>2]=J[n>>2];J[e+200>>2]=d;d=J[m+4>>2];J[e+188>>2]=J[m>>2];J[e+192>>2]=d;N[e+204>>2]=f;h=J[l+188>>2];I[e+112>>1]=L[h+4>>1];I[e+114>>1]=L[h+6>>1];J[e+20>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+40>>2]=0;J[e+76>>2]=0;J[e+4>>2]=1065353216;J[e+12>>2]=0;J[e+16>>2]=0;J[e+80>>2]=l;J[e>>2]=19248;d=J[n+4>>2];J[e+92>>2]=J[n>>2];J[e+96>>2]=d;d=J[m+4>>2];J[e+84>>2]=J[m>>2];J[e+88>>2]=d;N[e+100>>2]=f;I[e+8>>1]=L[h+4>>1];I[e+10>>1]=L[h+6>>1];m=e+224|4;l=e+288|4;h=e+352|4;h:{while(1){J[e+352>>2]=1065353216;J[h+8>>2]=0;J[h+12>>2]=0;J[h>>2]=0;J[h+4>>2]=0;J[e+372>>2]=1065353216;J[e+384>>2]=0;J[e+388>>2]=0;J[e+376>>2]=0;J[e+380>>2]=0;J[e+392>>2]=1065353216;J[e+396>>2]=0;J[e+288>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[e+308>>2]=1065353216;J[e+320>>2]=0;J[e+324>>2]=0;J[e+312>>2]=0;J[e+316>>2]=0;J[e+328>>2]=1065353216;J[e+332>>2]=0;J[e+224>>2]=1065353216;J[m+8>>2]=0;J[m+12>>2]=0;J[m>>2]=0;J[m+4>>2]=0;J[e+244>>2]=1065353216;J[e+256>>2]=0;J[e+260>>2]=0;J[e+248>>2]=0;J[e+252>>2]=0;J[e+264>>2]=1065353216;J[e+268>>2]=0;d=J[a+104>>2];J[e+408>>2]=J[a+100>>2];J[e+412>>2]=d;d=J[a+96>>2];J[e+400>>2]=J[a+92>>2];J[e+404>>2]=d;d=J[a+124>>2];J[e+344>>2]=J[a+120>>2];J[e+348>>2]=d;d=J[a+116>>2];J[e+336>>2]=J[a+112>>2];J[e+340>>2]=d;N[e+276>>2]=p-s;N[e+280>>2]=g-k;J[e+284>>2]=0;N[e+272>>2]=o-r;i:{if(K[a+170|0]){$e(J[a+8>>2],J[a+12>>2],e+352|0,e+288|0,e+104|0,N[b+56>>2]);if(N[e+108>>2]<Q(1)){break i}$e(J[a+8>>2],J[a+12>>2],e+352|0,e+224|0,e,N[b+56>>2]);break i}ic(b,J[a+12>>2],e+352|0,e+288|0,e+104|0,N[b+56>>2]);if(N[e+108>>2]<Q(1)){break i}ic(b,J[a+12>>2],e+352|0,e+224|0,e,N[b+56>>2])}f=N[a+16>>2];f=Q((f<Q(0)?Q(-f):Q(0))*c);n=K[a+182|0];j:{if(n){d=1;if(N[e+108>>2]<Q(1)){break j}d=N[e+4>>2]<Q(1);break j}d=N[e+4>>2]<Q(1)}k:{l:{m:{if(!(f>Q(0))){break m}j=N[a+52>>2];if((j>f^-1|d^-1|t)&1){break m}if(K[a+168|0]|!K[a+169|0]){break l}t=0}g=N[e+108>>2];if(!(g<Q(1)|t)){break k}b=K[a+181|0];f=N[e+168>>2];H[a+181|0]=0;H[a+169|0]=0;J[a+16>>2]=0;J[a+20>>2]=0;c=N[a+96>>2];g=n?b?g:Q(Q(c-f)*Q(.5)):g;f=Q(Q(1)-g);N[a+92>>2]=Q(f*N[a+92>>2])+Q(g*N[a+112>>2]);N[a+96>>2]=Q(f*c)+Q(g*N[a+116>>2]);N[a+100>>2]=Q(f*N[a+100>>2])+Q(g*N[a+120>>2]);break h}d=J[e+212>>2];J[a+112>>2]=J[e+208>>2];J[a+116>>2]=d;d=J[e+220>>2];J[a+120>>2]=J[e+216>>2];J[a+124>>2]=d;if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}d=J[a+176>>2]<<4;g=N[d+31912>>2];f=N[d+31908>>2];j=Q(j+N[a+108>>2]);o=Q(N[a+112>>2]-Q(N[d+31904>>2]*j));N[a+112>>2]=o;p=Q(N[a+116>>2]-Q(j*f));N[a+116>>2]=p;g=Q(N[a+120>>2]-Q(j*g));N[a+120>>2]=g;t=1;continue}break}H[a+181|0]=1;n:{if(!n){break n}p=N[a+24>>2];if(!(p<f)|!(K[a+169|0]?K[a+168|0]:1)){break n}k=Q(k+N[a+120>>2]);j=Q(s+N[a+116>>2]);g=Q(r+N[a+112>>2]);if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}b=J[a+176>>2]<<4;f=N[b+31904>>2];c=N[b+31908>>2];o=k;k=Q(p+N[a+108>>2]);N[a+120>>2]=o-Q(k*N[b+31912>>2]);N[a+116>>2]=j-Q(k*c);N[a+112>>2]=g-Q(f*k)}b=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=b;b=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=b}ga=e+416|0;b=J[a+104>>2];J[q+8>>2]=J[a+100>>2];J[q+12>>2]=b;b=J[a+96>>2];J[q>>2]=J[a+92>>2];J[q+4>>2]=b;b=J[a+8>>2];J[b+260>>2]=J[b+260>>2]+1;a=J[i+28>>2];J[b+12>>2]=J[i+24>>2];J[b+16>>2]=a;a=J[i+20>>2];J[b+4>>2]=J[i+16>>2];J[b+8>>2]=a;a=J[i+44>>2];J[b+28>>2]=J[i+40>>2];J[b+32>>2]=a;a=J[i+36>>2];J[b+20>>2]=J[i+32>>2];J[b+24>>2]=a;a=J[i+52>>2];J[b+36>>2]=J[i+48>>2];J[b+40>>2]=a;a=J[i+60>>2];J[b+44>>2]=J[i+56>>2];J[b+48>>2]=a;a=J[q+4>>2];J[b+52>>2]=J[q>>2];J[b+56>>2]=a;a=J[q+12>>2];J[b+60>>2]=J[q+8>>2];J[b+64>>2]=a}ga=i+80|0}function zG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0);g=ga-176|0;ga=g;$=J[b+4>>2];aa=J[c+4>>2];if(!(J[$+68>>2]==J[a+40>>2]&J[aa+68>>2]==J[a+44>>2])){h=J[a+8>>2];r=J[h+8>>2];if((r|0)>0){while(1){i=J[(J[h+16>>2]+P(f,12)|0)+8>>2];if(i){ia[J[J[i>>2]>>2]](i)|0;j=J[a+4>>2];ia[J[J[j>>2]+60>>2]](j,i)}f=f+1|0;if((r|0)!=(f|0)){continue}break}h=J[a+8>>2]}Am(h)}J[g+20>>2]=0;J[g+12>>2]=0;J[g+16>>2]=0;H[g+24|0]=1;i=J[a+8>>2];s=J[i+8>>2];a:{if((s|0)<=0){break a}while(1){h=J[(J[i+16>>2]+P(l,12)|0)+8>>2];if(h){ia[J[J[h>>2]+16>>2]](h,g+8|0);f=0;j=J[g+12>>2];if((j|0)>0){while(1){k=J[J[g+20>>2]+(f<<2)>>2];if(J[k+748>>2]){J[e+4>>2]=k;h=J[k+740>>2];j=J[J[e+8>>2]+8>>2];r=(h|0)==(j|0);m=h;h=J[J[e+12>>2]+8>>2];ab(k,(r?m:h)+4|0,(r?h:j)+4|0);J[e+4>>2]=0;j=J[g+12>>2]}f=f+1|0;if((j|0)>(f|0)){continue}break}}b:{if((j|0)>=0){break b}if(J[g+16>>2]<0){h=J[g+20>>2];if(!(h?!h|!K[g+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](h)}H[g+24|0]=1;J[g+16>>2]=0;J[g+20>>2]=0}s=0;f=j;h=0-f&3;if(h){while(1){J[J[g+20>>2]+(f<<2)>>2]=0;f=f+1|0;s=s+1|0;if((h|0)!=(s|0)){continue}break}}if(j>>>0>4294967292){break b}while(1){h=f<<2;J[h+J[g+20>>2]>>2]=0;J[(h+J[g+20>>2]|0)+4>>2]=0;J[(h+J[g+20>>2]|0)+8>>2]=0;J[(h+J[g+20>>2]|0)+12>>2]=0;f=f+4|0;if(f){continue}break}}J[g+12>>2]=0;s=J[i+8>>2]}l=l+1|0;if((s|0)>(l|0)){continue}break}h=J[g+20>>2];if(!h|!K[g+24|0]){break a}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}}r=J[$+64>>2];j=J[aa+64>>2];f=J[a+4>>2];h=J[a+8>>2];J[g+168>>2]=J[a+32>>2];J[g+164>>2]=h;J[g+160>>2]=e;J[g+156>>2]=d;J[g+152>>2]=f;J[g+140>>2]=0;J[g+136>>2]=9936;J[g+148>>2]=c;J[g+144>>2]=b;h=J[r>>2];c:{if(!h){break c}d=J[j>>2];if(!d){break c}f=J[b+12>>2];w=N[f+8>>2];n=Q(-N[f+48>>2]);t=N[f+24>>2];p=N[f+52>>2];x=N[f+40>>2];u=N[f+56>>2];e=J[c+12>>2];v=N[e+56>>2];q=N[e+48>>2];o=N[e+52>>2];ea=Q(Q(Q(Q(w*n)-Q(t*p))-Q(x*u))+Q(Q(v*x)+Q(Q(q*w)+Q(t*o))));y=N[f+4>>2];C=N[f+20>>2];z=N[f+36>>2];fa=Q(Q(Q(Q(y*n)-Q(C*p))-Q(z*u))+Q(Q(v*z)+Q(Q(q*y)+Q(C*o))));I=N[e+40>>2];E=N[e+24>>2];L=N[e+8>>2];F=N[e+36>>2];M=N[e+20>>2];G=N[e+4>>2];W=N[f>>2];A=Q(W*n);n=N[f+16>>2];A=Q(A-Q(n*p));p=N[f+32>>2];ha=Q(Q(A-Q(p*u))+Q(Q(v*p)+Q(Q(q*W)+Q(n*o))));v=N[e+16>>2];q=N[e>>2];o=N[e+32>>2];J[8369]=J[8369]+1;e=ia[J[6782]](1024,16)|0;J[e+4>>2]=d;J[e>>2]=h;da=Q(Q(I*x)+Q(Q(L*w)+Q(t*E)));T=Q(R(da));A=Q(Q(F*x)+Q(Q(G*w)+Q(t*M)));U=Q(R(A));O=Q(Q(o*x)+Q(Q(q*w)+Q(t*v)));V=Q(R(O));S=Q(Q(I*z)+Q(Q(L*y)+Q(C*E)));w=Q(R(S));t=Q(Q(F*z)+Q(Q(G*y)+Q(C*M)));x=Q(R(t));y=Q(Q(o*z)+Q(Q(q*y)+Q(C*v)));C=Q(R(y));z=Q(Q(I*p)+Q(Q(L*W)+Q(n*E)));I=Q(R(z));E=Q(Q(F*p)+Q(Q(G*W)+Q(n*M)));L=Q(R(E));F=Q(Q(o*p)+Q(Q(q*W)+Q(n*v)));M=Q(R(F));X=124;f=128;l=128;j=1;while(1){d:{e:{f:{r=j-1|0;s=r<<3;d=s+e|0;D=J[d>>2];B=J[d+4>>2];G=N[B+24>>2];n=N[B+8>>2];ba=Q(Q(Q(G-n)*Q(.5))+Q(0));p=N[B+16>>2];u=N[B>>2];ca=Q(Q(Q(p-u)*Q(.5))+Q(0));v=N[B+20>>2];o=N[B+4>>2];W=Q(Q(Q(v-o)*Q(.5))+Q(0));q=Q(Q(ba*I)+Q(Q(ca*M)+Q(L*W)));n=Q(Q(G+n)*Q(.5));u=Q(Q(p+u)*Q(.5));v=Q(Q(v+o)*Q(.5));o=Q(ha+Q(Q(n*z)+Q(Q(u*F)+Q(E*v))));g:{if(!(N[D>>2]<=Q(q+o))|!(N[D+16>>2]>=Q(o-q))){break g}q=Q(Q(ba*w)+Q(Q(ca*C)+Q(x*W)));o=Q(fa+Q(Q(n*S)+Q(Q(u*y)+Q(t*v))));if(!(N[D+4>>2]<=Q(q+o))|!(N[D+20>>2]>=Q(o-q))){break g}q=Q(Q(ba*T)+Q(Q(ca*V)+Q(U*W)));o=Q(ea+Q(Q(n*da)+Q(Q(u*O)+Q(A*v))));if(!(N[D+8>>2]<=Q(q+o))|!(N[D+24>>2]>=Q(o-q))){break g}h:{if((r|0)<=(X|0)){d=f;h=e;break h}d=f<<1;i:{if((f|0)>=(d|0)){h=e;break i}if((d|0)<=(l|0)){h=e;break i}j:{if(!f){h=0;break j}J[8369]=J[8369]+1;h=ia[J[6782]](f<<4,16)|0;if((f|0)<=0){break j}l=0;X=0;if(f-1>>>0>=3){Z=f&-4;Y=0;while(1){_=X<<3;m=_+h|0;k=e+_|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|8;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|16;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|24;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;X=X+4|0;Y=Y+4|0;if((Z|0)!=(Y|0)){continue}break}}m=f&3;if(!m){break j}while(1){f=X<<3;k=f+h|0;i=e+f|0;f=J[i+4>>2];J[k>>2]=J[i>>2];J[k+4>>2]=f;X=X+1|0;l=l+1|0;if((m|0)!=(l|0)){continue}break}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}l=d}X=d-4|0}e=J[B+40>>2];if(J[D+40>>2]){f=J[D+36>>2];if(e){e=h+s|0;J[e+4>>2]=J[B+36>>2];J[e>>2]=f;e=J[D+40>>2];f=(j<<3)+h|0;J[f+4>>2]=J[B+36>>2];J[f>>2]=e;e=J[D+36>>2];J[f+12>>2]=J[B+40>>2];J[f+8>>2]=e;e=J[D+40>>2];J[f+20>>2]=J[B+40>>2];J[f+16>>2]=e;j=j+3|0;break e}e=h+s|0;J[e+4>>2]=B;J[e>>2]=f;f=J[D+40>>2];e=(j<<3)+h|0;J[e+4>>2]=B;J[e>>2]=f;break f}if(e){e=h+s|0;J[e+4>>2]=J[B+36>>2];J[e>>2]=D;e=(j<<3)+h|0;J[e+4>>2]=J[B+40>>2];J[e>>2]=D;break f}ia[J[J[g+136>>2]+8>>2]](g+136|0,D,B);f=d;e=h}j=r;break d}j=j+1|0}f=d;e=h}if(j){continue}break}if(!e){break c}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}}Y=J[a+8>>2];if(J[Y+8>>2]>0){j=0;while(1){h=P(j,12);d=h+J[Y+16>>2]|0;r=J[d+8>>2];k:{if(!r){break k}f=J[$+24>>2]+P(J[d>>2],80)|0;e=J[f+64>>2];d=J[b+12>>2];v=N[d+52>>2];q=N[d+56>>2];y=N[f+48>>2];C=N[f+52>>2];z=N[f+56>>2];I=N[f+4>>2];E=N[f+20>>2];L=N[f+36>>2];F=N[f+8>>2];M=N[f+24>>2];G=N[f+40>>2];T=N[d+20>>2];A=N[d+24>>2];n=N[f>>2];U=N[d+36>>2];p=N[f+16>>2];O=N[d+40>>2];u=N[f+32>>2];o=N[d+48>>2];V=N[d+8>>2];S=N[d>>2];w=N[d+4>>2];t=N[d+16>>2];x=N[d+32>>2];f=0;J[g+68>>2]=0;J[g+52>>2]=0;J[g+36>>2]=0;J[g+20>>2]=0;N[g+40>>2]=Q(u*O)+Q(Q(n*x)+Q(U*p));N[g+24>>2]=Q(u*A)+Q(Q(n*t)+Q(T*p));N[g+8>>2]=Q(u*V)+Q(Q(n*S)+Q(w*p));N[g+48>>2]=Q(G*O)+Q(Q(F*x)+Q(U*M));N[g+44>>2]=Q(L*O)+Q(Q(I*x)+Q(U*E));N[g+32>>2]=Q(G*A)+Q(Q(F*t)+Q(T*M));N[g+28>>2]=Q(L*A)+Q(Q(I*t)+Q(T*E));N[g+16>>2]=Q(G*V)+Q(Q(F*S)+Q(w*M));N[g+12>>2]=Q(L*V)+Q(Q(I*S)+Q(w*E));N[g+64>>2]=q+Q(Q(z*O)+Q(Q(y*x)+Q(U*C)));N[g+60>>2]=v+Q(Q(z*A)+Q(Q(y*t)+Q(T*C)));N[g+56>>2]=o+Q(Q(z*V)+Q(Q(y*S)+Q(w*C)));d=g+8|0;ia[J[J[e>>2]+8>>2]](e,d,g+120|0,g+104|0);i=J[aa+24>>2]+P(J[(h+J[Y+16>>2]|0)+4>>2],80)|0;e=J[i+64>>2];l=J[c+12>>2];v=N[l+52>>2];q=N[l+56>>2];y=N[i+48>>2];C=N[i+52>>2];z=N[i+56>>2];I=N[i+4>>2];E=N[i+20>>2];L=N[i+36>>2];F=N[i+8>>2];M=N[i+24>>2];G=N[i+40>>2];T=N[l+20>>2];A=N[l+24>>2];n=N[i>>2];U=N[l+36>>2];p=N[i+16>>2];O=N[l+40>>2];u=N[i+32>>2];o=N[l+48>>2];V=N[l+8>>2];S=N[l>>2];w=N[l+4>>2];t=N[l+16>>2];x=N[l+32>>2];J[g+68>>2]=0;J[g+52>>2]=0;J[g+36>>2]=0;J[g+20>>2]=0;N[g+40>>2]=Q(u*O)+Q(Q(n*x)+Q(U*p));N[g+24>>2]=Q(u*A)+Q(Q(n*t)+Q(T*p));N[g+8>>2]=Q(u*V)+Q(Q(n*S)+Q(w*p));N[g+48>>2]=Q(G*O)+Q(Q(F*x)+Q(U*M));N[g+44>>2]=Q(L*O)+Q(Q(I*x)+Q(U*E));N[g+32>>2]=Q(G*A)+Q(Q(F*t)+Q(T*M));N[g+28>>2]=Q(L*A)+Q(Q(I*t)+Q(T*E));N[g+16>>2]=Q(G*V)+Q(Q(F*S)+Q(w*M));N[g+12>>2]=Q(L*V)+Q(Q(I*S)+Q(w*E));N[g+64>>2]=q+Q(Q(z*O)+Q(Q(y*x)+Q(U*C)));N[g+60>>2]=v+Q(Q(z*A)+Q(Q(y*t)+Q(T*C)));N[g+56>>2]=o+Q(Q(z*V)+Q(Q(y*S)+Q(w*C)));ia[J[J[e>>2]+8>>2]](e,d,g+88|0,g+72|0);d=0;l:{if(N[g+120>>2]>N[g+72>>2]){break l}d=0;if(N[g+104>>2]<N[g+88>>2]){break l}d=1}if(!(N[g+124>>2]>N[g+76>>2])&(!(N[g+108>>2]<N[g+92>>2])&(N[g+112>>2]<N[g+96>>2]|N[g+128>>2]>N[g+80>>2]?f:d))){break k}ia[J[J[r>>2]>>2]](r)|0;d=J[a+4>>2];ia[J[J[d>>2]+60>>2]](d,r);d=h+J[Y+16>>2]|0;i=J[d+4>>2];l=J[d>>2];h=J[a+16>>2];m:{if((h|0)!=J[a+20>>2]){break m}Z=h?h<<1:1;if((Z|0)<=(h|0)){break m}n:{if(!Z){s=0;break n}J[8369]=J[8369]+1;s=ia[J[6782]](P(Z,12),16)|0;h=J[a+16>>2]}o:{if((h|0)<=0){break o}r=h&1;if((h|0)!=1){e=h&-2;h=0;while(1){d=P(f,12);m=d+s|0;k=d+J[a+24>>2]|0;d=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=d;J[m+8>>2]=J[k+8>>2];d=P(f|1,12);m=d+s|0;k=d+J[a+24>>2]|0;d=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=d;J[m+8>>2]=J[k+8>>2];f=f+2|0;h=h+2|0;if((e|0)!=(h|0)){continue}break}}if(!r){break o}d=P(f,12);h=d+s|0;e=d+J[a+24>>2]|0;d=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=d;J[h+8>>2]=J[e+8>>2]}d=J[a+24>>2];if(!(d?!d|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+24>>2]=s;H[a+28|0]=1;J[a+20>>2]=Z;h=J[a+16>>2]}d=J[a+24>>2]+P(h,12)|0;J[d+8>>2]=0;J[d+4>>2]=i;J[d>>2]=l;J[a+16>>2]=J[a+16>>2]+1}j=j+1|0;if((j|0)<J[Y+8>>2]){continue}break}}if(J[a+16>>2]>0){f=0;while(1){c=J[a+8>>2];b=J[a+24>>2]+P(f,12)|0;ia[J[J[c>>2]+8>>2]](c,J[b>>2],J[b+4>>2])|0;f=f+1|0;if((f|0)<J[a+16>>2]){continue}break}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;ga=g+176|0}function az(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=0,n=0,o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=0,F=Q(0),G=Q(0);f=ga-176|0;ga=f;i=J[a+48>>2];e=J[a+52>>2];a:{if(!e){break a}e=J[e+20>>2];if(!e){break a}if(!(ia[J[J[e>>2]+48>>2]](e)&1)){break a}J[f+40>>2]=0;J[f+44>>2]=0;J[f+32>>2]=1065353216;J[f+36>>2]=1065353216;g=J[J[a+52>>2]+20>>2];e=J[a+8>>2];u=N[e+52>>2];p=N[e+12>>2];s=N[e+8>>2];v=N[e+56>>2];w=N[e+28>>2];y=N[e+20>>2];z=N[e+24>>2];A=N[e+60>>2];B=N[e+44>>2];C=N[e+36>>2];t=N[e+40>>2];x=N[e+4>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(j*B)+Q(Q(k*C)+Q(l*t)));N[f+140>>2]=v+Q(Q(j*w)+Q(Q(k*y)+Q(l*z)));N[f+136>>2]=u+Q(Q(j*p)+Q(Q(k*x)+Q(l*s)));p=N[e+8>>2];s=N[e+12>>2];j=N[b+20>>2];k=N[b+24>>2];x=N[e+4>>2];l=N[b+16>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(k*B)+Q(Q(l*C)+Q(t*j)));N[f+12>>2]=v+Q(Q(k*w)+Q(Q(l*y)+Q(z*j)));N[f+8>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));o=f+136|0;h=f+8|0;n=f+32|0;ia[J[J[g>>2]+8>>2]](g,o,h,n);g=J[J[a+52>>2]+20>>2];u=N[e+52>>2];p=N[e+8>>2];s=N[e+12>>2];v=N[e+56>>2];w=N[e+20>>2];y=N[e+24>>2];z=N[e+28>>2];A=N[e+60>>2];B=N[e+36>>2];C=N[e+40>>2];j=N[b+20>>2];t=N[e+44>>2];k=N[b+24>>2];x=N[e+4>>2];l=N[b+16>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(j*C)));N[f+140>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(j*y)));N[f+136>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));p=N[e+8>>2];s=N[e+12>>2];j=N[b+36>>2];k=N[b+40>>2];x=N[e+4>>2];l=N[b+32>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(C*j)));N[f+12>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(y*j)));N[f+8>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));ia[J[J[g>>2]+8>>2]](g,o,h,n);g=J[J[a+52>>2]+20>>2];u=N[e+52>>2];p=N[e+8>>2];s=N[e+12>>2];v=N[e+56>>2];w=N[e+20>>2];y=N[e+24>>2];z=N[e+28>>2];A=N[e+60>>2];B=N[e+36>>2];C=N[e+40>>2];j=N[b+36>>2];t=N[e+44>>2];k=N[b+40>>2];x=N[e+4>>2];l=N[b+32>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(j*C)));N[f+140>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(j*y)));N[f+136>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));p=N[e+12>>2];s=N[e+8>>2];x=N[e+4>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(j*t)+Q(Q(k*B)+Q(C*l)));N[f+12>>2]=v+Q(Q(j*z)+Q(Q(k*w)+Q(y*l)));N[f+8>>2]=u+Q(Q(j*p)+Q(Q(k*x)+Q(l*s)));ia[J[J[g>>2]+8>>2]](g,o,h,n)}e=c<<21|d;J[f+168>>2]=e;J[f+160>>2]=e;b:{c:{g=e+(d<<15^-1)|0;g=P(g>>10^g,9);g=g>>6^g;g=(g<<11^-1)+g|0;g=J[a+108>>2]-1&(g>>16^g);if(g>>>0>=M[a- -64>>2]){break c}g=J[J[a+72>>2]+(g<<2)>>2];if((g|0)==-1){break c}o=J[a+92>>2];h=J[a+132>>2];while(1){n=g<<2;if((e|0)!=J[n+h>>2]){g=J[o+n>>2];if((g|0)!=-1){continue}break c}break}e=J[a+112>>2];if(!e){break c}g=J[(e+(g<<3)|0)+4>>2];b=J[a+8>>2];J[g+8>>2]=J[J[b+192>>2]+8>>2];e=J[a+4>>2];o=J[e+192>>2];J[f+48>>2]=-1;J[f+52>>2]=-1;J[f+44>>2]=e+4;J[f+40>>2]=e;J[f+36>>2]=o;J[f+32>>2]=0;J[f+156>>2]=d;J[f+152>>2]=c;J[f+148>>2]=b+4;J[f+144>>2]=b;J[f+140>>2]=g;J[f+136>>2]=0;c=f+32|0;d=f+136|0;b=ia[J[J[i>>2]+8>>2]](i,c,d,0)|0;ia[J[J[b>>2]+8>>2]](b,c,d,J[a+52>>2],J[a+44>>2]);ia[J[J[b>>2]>>2]](b)|0;ia[J[J[i>>2]+60>>2]](i,b);break b}l=N[b+20>>2];y=N[b+36>>2];z=N[b+24>>2];A=N[b+40>>2];u=N[b+4>>2];B=N[b+32>>2];v=N[b+8>>2];w=N[b>>2];C=N[b+16>>2];J[f+124>>2]=0;J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;J[f+60>>2]=0;k=Q(C-w);t=Q(y-u);p=Q(B-w);s=Q(l-u);j=Q(Q(k*t)-Q(p*s));x=j;F=Q(j*j);j=Q(A-v);G=Q(s*j);s=Q(z-v);t=Q(G-Q(t*s));k=Q(Q(s*p)-Q(j*k));p=Q(Q(1)/Q(Y(Q(F+Q(Q(t*t)+Q(k*k))))));j=Q(Q(x*p)*Q(.05999999865889549));N[f+120>>2]=A-j;k=Q(Q(k*p)*Q(.05999999865889549));N[f+116>>2]=y-k;N[f+104>>2]=z-j;N[f+100>>2]=l-k;N[f+88>>2]=v-j;N[f+84>>2]=u-k;N[f+72>>2]=A+j;N[f+68>>2]=y+k;N[f+56>>2]=z+j;N[f+52>>2]=l+k;J[f+44>>2]=0;l=Q(Q(t*p)*Q(.05999999865889549));N[f+112>>2]=B-l;N[f+96>>2]=C-l;N[f+80>>2]=w-l;N[f+64>>2]=B+l;N[f+48>>2]=C+l;N[f+40>>2]=v+j;N[f+36>>2]=u+k;N[f+32>>2]=w+l;J[8369]=J[8369]+1;e=ia[J[6782]](112,16)|0;Xe(e,f+32|0,6);b=J[a+8>>2];J[e+8>>2]=J[J[b+192>>2]+8>>2];g=J[a+4>>2];o=J[g+192>>2];J[f+152>>2]=-1;J[f+156>>2]=-1;J[f+148>>2]=g+4;J[f+144>>2]=g;J[f+140>>2]=o;J[f+136>>2]=0;J[f+28>>2]=d;J[f+24>>2]=c;J[f+20>>2]=b+4;J[f+16>>2]=b;J[f+12>>2]=e;J[f+8>>2]=0;c=f+136|0;d=f+8|0;b=ia[J[J[i>>2]+8>>2]](i,c,d,0)|0;ia[J[J[b>>2]+8>>2]](b,c,d,J[a+52>>2],J[a+44>>2]);ia[J[J[b>>2]>>2]](b)|0;ia[J[J[i>>2]+60>>2]](i,b);J[f+172>>2]=e;d:{e:{f:{g:{h:{i:{e=a+60|0;b=J[e+48>>2];c=J[f+160>>2];a=(c<<15^-1)+c|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;o=b-1&(a>>16^a);j:{if(o>>>0>=M[e+4>>2]){break j}a=J[J[e+12>>2]+(o<<2)>>2];if((a|0)==-1){break j}d=J[e+32>>2];i=J[e+72>>2];while(1){g=a<<2;if((c|0)==J[g+i>>2]){break i}a=J[d+g>>2];if((a|0)!=-1){continue}break}}E=J[e+44>>2];a=E;k:{if((b|0)!=(a|0)){break k}a=b;n=a?a<<1:1;if((a|0)>=(n|0)){break k}l:{if(!n){d=0;c=b;break l}J[8369]=J[8369]+1;d=ia[J[6782]](n<<3,16)|0;c=J[e+44>>2]}m:{if((c|0)<=0){break m}i=0;a=0;if(c-1>>>0>=3){q=c&-4;g=0;while(1){h=a<<3;m=h+d|0;r=h+J[e+52>>2]|0;D=J[r+4>>2];J[m>>2]=J[r>>2];J[m+4>>2]=D;m=h|8;r=m+d|0;m=m+J[e+52>>2]|0;D=J[m+4>>2];J[r>>2]=J[m>>2];J[r+4>>2]=D;m=h|16;r=m+d|0;m=m+J[e+52>>2]|0;D=J[m+4>>2];J[r>>2]=J[m>>2];J[r+4>>2]=D;h=h|24;m=h+d|0;h=h+J[e+52>>2]|0;r=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=r;a=a+4|0;g=g+4|0;if((q|0)!=(g|0)){continue}break}}c=c&3;if(!c){break m}while(1){g=a<<3;h=g+d|0;g=g+J[e+52>>2]|0;q=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=q;a=a+1|0;i=i+1|0;if((c|0)!=(i|0)){continue}break}}a=J[e+52>>2];if(!(a?!a|!K[e+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[e+52>>2]=d;H[e+56|0]=1;J[e+48>>2]=n;a=J[e+44>>2]}c=J[f+172>>2];a=J[e+52>>2]+(a<<3)|0;J[a>>2]=J[f+168>>2];J[a+4>>2]=c;J[e+44>>2]=J[e+44>>2]+1;i=J[e- -64>>2];if((i|0)!=J[e+68>>2]){break e}n=i?i<<1:1;if((n|0)<=(i|0)){break e}n:{if(!n){d=0;break n}J[8369]=J[8369]+1;d=ia[J[6782]](n<<2,16)|0;i=J[e+64>>2]}c=J[e+72>>2];if((i|0)<=0){break h}g=0;a=0;if(i-1>>>0>=3){m=i&-4;q=0;while(1){h=a<<2;J[h+d>>2]=J[c+h>>2];r=h|4;J[r+d>>2]=J[c+r>>2];r=h|8;J[r+d>>2]=J[c+r>>2];h=h|12;J[h+d>>2]=J[c+h>>2];a=a+4|0;q=q+4|0;if((m|0)!=(q|0)){continue}break}}i=i&3;if(!i){break g}while(1){h=a<<2;J[h+d>>2]=J[c+h>>2];a=a+1|0;g=g+1|0;if((i|0)!=(g|0)){continue}break}break g}b=J[f+172>>2];a=J[e+52>>2]+(a<<3)|0;J[a>>2]=J[f+168>>2];J[a+4>>2]=b;break d}if(!c){break f}}if(c?K[e+76|0]:0){J[8370]=J[8370]+1;ia[J[6783]](c)}i=J[e+64>>2]}J[e+72>>2]=d;J[e+68>>2]=n;H[e+76|0]=1}J[J[e+72>>2]+(i<<2)>>2]=J[f+160>>2];J[e+64>>2]=J[e+64>>2]+1;if((b|0)<J[e+48>>2]){d=0;i=0;n=0;o=0;g=J[e+48>>2];b=J[e+4>>2];o:{if((g|0)<=(b|0)){break o}p:{if((g|0)<=J[e+8>>2]){d=J[e+12>>2];break p}if(g){J[8369]=J[8369]+1;d=ia[J[6782]](g<<2,16)|0;a=J[e+4>>2]}else{a=b}c=J[e+12>>2];q:{r:{if((a|0)>0){if(a-1>>>0>=3){q=a&-4;while(1){h=i<<2;J[h+d>>2]=J[c+h>>2];m=h|4;J[m+d>>2]=J[c+m>>2];m=h|8;J[m+d>>2]=J[c+m>>2];h=h|12;J[h+d>>2]=J[c+h>>2];i=i+4|0;n=n+4|0;if((q|0)!=(n|0)){continue}break}}a=a&3;if(!a){break r}while(1){h=i<<2;J[h+d>>2]=J[c+h>>2];i=i+1|0;o=o+1|0;if((a|0)!=(o|0)){continue}break}break r}if(c){break r}break q}if(c?K[e+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[e+12>>2]=d;H[e+16|0]=1;J[e+8>>2]=g}qa((b<<2)+d|0,0,g-b<<2);J[e+4>>2]=g;m=g<<2;c=J[e+24>>2];if((c|0)<(g|0)){s:{if((g|0)<=J[e+28>>2]){d=J[e+32>>2];break s}t:{if(!g){d=0;a=c;break t}J[8369]=J[8369]+1;d=ia[J[6782]](m,16)|0;a=J[e+24>>2]}h=J[e+32>>2];u:{if((a|0)>0){o=0;i=0;if(a-1>>>0>=3){r=a&-4;n=0;while(1){q=i<<2;J[q+d>>2]=J[h+q>>2];D=q|4;J[D+d>>2]=J[h+D>>2];D=q|8;J[D+d>>2]=J[h+D>>2];q=q|12;J[q+d>>2]=J[h+q>>2];i=i+4|0;n=n+4|0;if((r|0)!=(n|0)){continue}break}}a=a&3;if(!a){break u}while(1){n=i<<2;J[n+d>>2]=J[h+n>>2];i=i+1|0;o=o+1|0;if((a|0)!=(o|0)){continue}break}break u}if(h){break u}J[e+32>>2]=d;J[e+28>>2]=g;H[e+36|0]=1;break s}if(h?K[e+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](h)}J[e+32>>2]=d;H[e+36|0]=1;J[e+28>>2]=g}qa((c<<2)+d|0,0,g-c<<2)}J[e+24>>2]=g;if((g|0)>0){qa(J[e+12>>2],255,m);qa(J[e+32>>2],255,m)}if((b|0)<=0){break o}c=J[e+32>>2];d=J[e+72>>2];g=J[e+12>>2];i=0;while(1){o=i<<2;a=J[o+d>>2];a=(a<<15^-1)+a|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;a=g+((J[e+48>>2]-1&(a>>16^a))<<2)|0;J[c+o>>2]=J[a>>2];J[a>>2]=i;i=i+1|0;if((b|0)!=(i|0)){continue}break}}a=J[f+160>>2];a=(a<<15^-1)+a|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;o=J[e+48>>2]-1&(a>>16^a)}a=J[e+12>>2]+(o<<2)|0;J[J[e+32>>2]+(E<<2)>>2]=J[a>>2];J[a>>2]=E}}ga=f+176|0}function Fg(a,b,c){var d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=0,X=Q(0),Z=Q(0),_=0;e=ga-96|0;ga=e;J[a+376>>2]=0;J[a+364>>2]=4;J[a+368>>2]=0;k=a+316|0;J[a+360>>2]=k;J[a+356>>2]=a+284;J[a+352>>2]=a+252;J[a+348>>2]=a+220;f=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=f;f=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=f;f=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=f;f=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=f;f=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=f;f=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=f;f=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=f;w=b- -64|0;f=J[w+4>>2];m=a- -64|0;J[m>>2]=J[w>>2];J[m+4>>2]=f;f=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=f;f=J[b+84>>2];J[a+80>>2]=J[b+80>>2];J[a+84>>2]=f;f=J[b+76>>2];J[a+72>>2]=J[b+72>>2];J[a+76>>2]=f;f=J[b+100>>2];J[a+96>>2]=J[b+96>>2];J[a+100>>2]=f;f=J[b+92>>2];J[a+88>>2]=J[b+88>>2];J[a+92>>2]=f;f=J[b+108>>2];J[a+104>>2]=J[b+104>>2];J[a+108>>2]=f;f=J[b+116>>2];J[a+112>>2]=J[b+112>>2];J[a+116>>2]=f;f=J[b+124>>2];b=J[b+120>>2];J[a+144>>2]=0;J[a+180>>2]=0;J[a+120>>2]=b;J[a+124>>2]=f;b=J[c+4>>2];J[a+128>>2]=J[c>>2];J[a+132>>2]=b;b=J[c+12>>2];J[a+136>>2]=J[c+8>>2];J[a+140>>2]=b;J[a+364>>2]=3;J[a+164>>2]=0;J[a+328>>2]=0;J[a+180>>2]=1;J[a+148>>2]=k;h=N[a+136>>2];i=N[a+128>>2];d=N[a+132>>2];g=Q(Q(h*h)+Q(Q(i*i)+Q(d*d)));b=g>Q(0);h=b?Q(-h):Q(0);i=b?Q(-i):Q(1);d=b?Q(-d):Q(0);j=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(i*i)+Q(d*d))))));N[a+324>>2]=h*j;N[a+320>>2]=d*j;N[k>>2]=i*j;Za(e+16|0,a,k);b=J[e+28>>2];J[a+340>>2]=J[e+24>>2];J[a+344>>2]=b;b=J[e+20>>2];J[a+332>>2]=J[e+16>>2];J[a+336>>2]=b;J[a+164>>2]=1065353216;c=J[a+148>>2];b=J[c+20>>2];J[a+128>>2]=J[c+16>>2];J[a+132>>2]=b;b=J[c+28>>2];J[a+136>>2]=J[c+24>>2];J[a+140>>2]=b;b=J[c+28>>2];J[e+72>>2]=J[c+24>>2];J[e+76>>2]=b;b=J[c+20>>2];J[e+64>>2]=J[c+16>>2];J[e+68>>2]=b;b=J[c+28>>2];J[e+56>>2]=J[c+24>>2];J[e+60>>2]=b;b=J[c+20>>2];J[e+48>>2]=J[c+16>>2];J[e+52>>2]=b;b=J[c+28>>2];J[e+40>>2]=J[c+24>>2];J[e+44>>2]=b;b=J[c+20>>2];J[e+32>>2]=J[c+16>>2];J[e+36>>2]=b;b=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=b;b=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=b;d=N[a+136>>2];n=N[a+132>>2];j=N[a+128>>2];u=J[a+368>>2];while(1){a:{b:{o=Q(Y(Q(Q(d*d)+Q(Q(j*j)+Q(n*n)))));c:{if(o<Q(9999999747378752e-20)){J[a+376>>2]=1;break c}v=P(u,36)+a|0;w=v+148|0;f=J[v+180>>2];c=w+(f<<2)|0;J[c+16>>2]=0;b=J[a+364>>2]-1|0;J[a+364>>2]=b;C=c;c=J[((b<<2)+a|0)+348>>2];J[C>>2]=c;J[v+180>>2]=f+1;J[c+12>>2]=0;i=Q(Q(1)/o);N[c+8>>2]=i*Q(-d);N[c+4>>2]=i*Q(-n);N[c>>2]=i*Q(-j);Za(e+80|0,a,c);b=J[e+92>>2];J[c+24>>2]=J[e+88>>2];J[c+28>>2]=b;b=J[e+84>>2];J[c+16>>2]=J[e+80>>2];J[c+20>>2]=b;d:{f=J[v+180>>2];m=J[(w+(f<<2)|0)-4>>2];j=N[m+24>>2];d=Q(j-N[e+24>>2]);s=Q(d*d);h=N[m+16>>2];d=Q(h-N[e+16>>2]);p=Q(d*d);i=N[m+20>>2];d=Q(i-N[e+20>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+40>>2]);s=Q(d*d);d=Q(h-N[e+32>>2]);p=Q(d*d);d=Q(i-N[e+36>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+56>>2]);s=Q(d*d);d=Q(h-N[e+48>>2]);p=Q(d*d);d=Q(i-N[e+52>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+72>>2]);s=Q(d*d);d=Q(h-N[e+64>>2]);p=Q(d*d);d=Q(i-N[e+68>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}b=J[m+28>>2];W=W+1&3;c=(e+16|0)+(W<<4)|0;J[c+8>>2]=J[m+24>>2];J[c+12>>2]=b;b=J[m+20>>2];J[c>>2]=J[m+16>>2];J[c+4>>2]=b;d=Q(Q(Q(N[a+136>>2]*j)+Q(Q(N[a+128>>2]*h)+Q(N[a+132>>2]*i)))/o);R=d>R?d:R;if(Q(Q(o*Q(-9999999747378752e-20))+Q(o-R))<=Q(0)){u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c;break c}J[e+12>>2]=0;e:{f:{g:{switch(f-2|0){case 0:c=J[v+152>>2];h=N[c+24>>2];b=J[w>>2];x=N[b+24>>2];n=Q(h-x);i=N[c+16>>2];q=N[b+16>>2];o=Q(i-q);g=N[c+20>>2];r=N[b+20>>2];j=Q(g-r);d=Q(Q(n*n)+Q(Q(o*o)+Q(j*j)));if(!(d>Q(0))){break e}t=Q(Q(-Q(Q(x*n)+Q(Q(q*o)+Q(r*j))))/d);if(t>=Q(1)){J[e+80>>2]=0;J[e+84>>2]=1065353216;J[e+12>>2]=2;g=Q(Q(h*h)+Q(Q(i*i)+Q(g*g)));break f}if(t<=Q(0)){J[e+80>>2]=1065353216;J[e+84>>2]=0;J[e+12>>2]=1;g=Q(Q(x*x)+Q(Q(q*q)+Q(r*r)));break f}J[e+12>>2]=3;N[e+84>>2]=t;N[e+80>>2]=Q(1)-t;d=Q(x+Q(n*t));p=Q(d*d);d=Q(q+Q(o*t));g=Q(d*d);d=Q(r+Q(j*t));g=Q(p+Q(g+Q(d*d)));break f;case 1:g=Me(J[w>>2]+16|0,J[v+152>>2]+16|0,J[v+156>>2]+16|0,e+80|0,e+12|0);break f;case 2:break g;default:break f}}l=ga-32|0;ga=l;d=Q(-1);m=J[v+152>>2]+16|0;s=N[m+4>>2];k=J[v+160>>2]+16|0;D=N[k+4>>2];E=Q(s-D);f=J[w>>2]+16|0;p=N[f+8>>2];F=N[k+8>>2];G=Q(p-F);X=Q(E*Q(-G));c=J[v+156>>2]+16|0;i=N[c>>2];H=N[k>>2];z=Q(i-H);S=N[f>>2];I=Q(S-H);Z=Q(I*E);t=N[c+8>>2];A=Q(t-F);h=N[m>>2];K=Q(h-H);T=N[f+4>>2];L=Q(T-D);x=Q(K*Q(-L));U=N[m+8>>2];M=Q(U-F);q=Q(M*Q(-I));g=N[c+4>>2];B=Q(g-D);r=Q(L*M);n=Q(G*K);y=Q(Q(X*z)+Q(Q(Z*A)+Q(Q(x*A)+Q(Q(q*B)+Q(Q(r*z)+Q(n*B))))));h:{if(!(y>Q(0)|y<Q(0))){break h}o=Q(h-i);j=Q(T-s);h=Q(S-h);g=Q(s-g);s=Q(p*Q(Q(o*j)-Q(h*g)));i=Q(p-U);p=Q(g*i);g=Q(U-t);if(!(Q(Q(s+Q(Q(S*Q(p-Q(j*g)))+Q(T*Q(Q(g*h)-Q(i*o)))))*y)<=Q(0))){break h}J[l+24>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;J[l+12>>2]=0;if(Q(y*Q(Q(F*Q(Z+x))+Q(Q(H*Q(r+X))+Q(D*Q(n+q)))))>Q(0)){d=Me(f,m,k,l+16|0,l+12|0);b=J[l+12>>2];J[e+12>>2]=b&2|b<<1&8|b&1;N[e+80>>2]=N[l+16>>2];g=N[l+20>>2];J[e+88>>2]=0;N[e+84>>2]=g;N[e+92>>2]=N[l+24>>2]}i:{if(!(Q(y*Q(Q(N[k+8>>2]*Q(Q(K*B)-Q(z*E)))+Q(Q(N[k>>2]*Q(Q(E*A)-Q(B*M)))+Q(N[k+4>>2]*Q(Q(M*z)-Q(A*K))))))>Q(0))){break i}g=Me(m,c,k,l+16|0,l+12|0);if(!(d<Q(0)|g<d)){break i}J[e+12>>2]=J[l+12>>2]<<1&14;N[e+84>>2]=N[l+16>>2];d=N[l+20>>2];J[e+80>>2]=0;N[e+88>>2]=d;N[e+92>>2]=N[l+24>>2];d=g}j:{if(!(Q(y*Q(Q(N[k+8>>2]*Q(Q(z*L)-Q(I*B)))+Q(Q(N[k>>2]*Q(Q(B*G)-Q(L*A)))+Q(N[k+4>>2]*Q(Q(A*I)-Q(G*z))))))>Q(0))){break j}g=Me(c,f,k,l+16|0,l+12|0);if(!(d<Q(0)|g<d)){break j}b=J[l+12>>2];J[e+12>>2]=b>>>1&1|b<<1&8|b<<2&4;N[e+88>>2]=N[l+16>>2];d=N[l+20>>2];J[e+84>>2]=0;N[e+80>>2]=d;N[e+92>>2]=N[l+24>>2];d=g}if(!(d<Q(0))){break h}J[e+12>>2]=15;q=N[c>>2];r=N[m+4>>2];n=N[k+8>>2];o=N[c+4>>2];j=N[m+8>>2];h=N[k>>2];i=N[c+8>>2];g=N[m>>2];d=N[k+4>>2];t=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+80>>2]=t;q=N[f>>2];r=N[c+4>>2];n=N[k+8>>2];o=N[f+4>>2];j=N[c+8>>2];h=N[k>>2];i=N[f+8>>2];g=N[c>>2];d=N[k+4>>2];x=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+84>>2]=x;q=N[m>>2];r=N[f+4>>2];n=N[k+8>>2];o=N[m+4>>2];j=N[f+8>>2];h=N[k>>2];i=N[m+8>>2];g=N[f>>2];d=N[k+4>>2];d=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+88>>2]=d;N[e+92>>2]=Q(1)-Q(Q(t+x)+d);d=Q(0)}ga=l+32|0;g=d}if(!(g>=Q(0))){break e}u=1-u|0;V=P(u,36)+a|0;J[V+180>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;J[a+368>>2]=u;k=J[v+180>>2];if(!k){d=Q(0);C=J[e+12>>2];n=Q(0);j=Q(0);break b}c=J[a+364>>2];d=Q(0);O=0;C=J[e+12>>2];n=Q(0);j=Q(0);b=0;while(1){m=b<<2;w=m+v|0;l=J[w+148>>2];k:{if(C>>>b&1){f=V+(O<<2)|0;J[f+148>>2]=l;h=N[m+(e+80|0)>>2];O=O+1|0;J[V+180>>2]=O;N[f+164>>2]=h;f=J[w+148>>2];i=N[f+24>>2];d=N[f+20>>2];j=Q(Q(h*N[f+16>>2])+N[a+128>>2]);N[a+128>>2]=j;n=Q(Q(h*d)+N[a+132>>2]);N[a+132>>2]=n;d=Q(Q(h*i)+N[a+136>>2]);N[a+136>>2]=d;break k}f=c+1|0;J[a+364>>2]=f;J[((c<<2)+a|0)+348>>2]=l;c=f}b=b+1|0;if((k|0)!=(b|0)){continue}break}break b}u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c;break c}u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c}b=J[a+376>>2];break a}_=_+1|0;b=_>>>0<128?(C|0)==15?1:J[a+376>>2]:2;J[a+376>>2]=b;if(!b){continue}}break}J[a+372>>2]=(P(u,36)+a|0)+148;d=Q(0);l:{switch(b|0){case 0:d=N[a+136>>2];p=Q(d*d);d=N[a+128>>2];g=Q(d*d);d=N[a+132>>2];d=Q(Y(Q(p+Q(g+Q(d*d)))));case 1:N[a+144>>2]=d;break;default:break l}}ga=e+96|0;return b}function rH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=0,G=0,H=0,I=0,K=0,L=Q(0),M=Q(0),O=Q(0);e=ga-144|0;ga=e;f=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[f>>2]+56>>2]](f,b,Q(1));a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{f=J[c+4>>2];switch(f|0){case 31:break j;case 28:break c;case 13:break d;case 11:break e;case 10:break f;case 9:break g;case 8:break h;case 0:break i;default:break b}}s=J[c+16>>2];if((s|0)<=0){break a}while(1){f=s-1|0;i=J[c+24>>2]+P(f,80)|0;B=J[i+64>>2];o=N[i+56>>2];p=N[i+48>>2];w=N[i+52>>2];x=N[i+32>>2];y=N[i>>2];z=N[i+16>>2];A=N[i+36>>2];q=N[i+4>>2];r=N[i+20>>2];t=N[i+40>>2];D=N[i+8>>2];E=N[i+24>>2];L=N[b+48>>2];M=N[b+52>>2];O=N[b+56>>2];g=N[b+8>>2];h=N[b>>2];j=N[b+4>>2];k=N[b+24>>2];l=N[b+16>>2];m=N[b+20>>2];u=N[b+40>>2];v=N[b+32>>2];n=N[b+36>>2];J[e+60>>2]=0;J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;N[e+40>>2]=Q(t*u)+Q(Q(D*v)+Q(E*n));N[e+36>>2]=Q(A*u)+Q(Q(q*v)+Q(r*n));N[e+32>>2]=Q(x*u)+Q(Q(y*v)+Q(z*n));N[e+24>>2]=Q(t*k)+Q(Q(D*l)+Q(E*m));N[e+20>>2]=Q(A*k)+Q(Q(q*l)+Q(r*m));N[e+16>>2]=Q(x*k)+Q(Q(y*l)+Q(z*m));N[e+8>>2]=Q(t*g)+Q(Q(D*h)+Q(E*j));N[e+4>>2]=Q(A*g)+Q(Q(q*h)+Q(r*j));N[e>>2]=Q(x*g)+Q(Q(y*h)+Q(z*j));N[e+56>>2]=O+Q(Q(o*u)+Q(Q(p*v)+Q(w*n)));N[e+52>>2]=M+Q(Q(o*k)+Q(Q(p*l)+Q(w*m)));N[e+48>>2]=L+Q(Q(o*g)+Q(Q(p*h)+Q(w*j)));ia[J[J[a>>2]+28>>2]](a,e,B,d);i=s>>>0>1;s=f;if(i){continue}break}break a}f=J[c+40>>2];J[e+8>>2]=J[c+36>>2];J[e+12>>2]=f;f=J[c+32>>2];J[e>>2]=J[c+28>>2];J[e+4>>2]=f;g=Q(ia[J[J[c>>2]+48>>2]](c));h=Q(ia[J[J[c>>2]+48>>2]](c));j=Q(Q(ia[J[J[c>>2]+48>>2]](c))+N[e+8>>2]);N[e+8>>2]=j;g=Q(g+N[e>>2]);N[e>>2]=g;h=Q(h+N[e+4>>2]);N[e+4>>2]=h;a=ia[J[J[a>>2]+20>>2]](a)|0;J[e+140>>2]=0;N[e+136>>2]=-j;N[e+132>>2]=-h;N[e+128>>2]=-g;ia[J[J[a>>2]+72>>2]](a,e+128|0,e,b,d);break a}g=Q(ia[J[J[c>>2]+48>>2]](c));a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+16>>2]](a,g,b,d);break a}f=J[c+92>>2];if((f|0)<=0){break a}while(1){i=f-1|0;s=J[c+100>>2]+(i<<4)|0;g=N[s+8>>2];h=N[s>>2];j=N[s+4>>2];s=ia[J[J[a>>2]+20>>2]](a)|0;x=N[J[c+120>>2]+(i<<2)>>2];y=N[b+48>>2];z=N[b+52>>2];A=N[b+56>>2];k=N[b+8>>2];l=N[b>>2];m=N[b+4>>2];u=N[b+24>>2];v=N[b+16>>2];n=N[b+20>>2];o=N[b+40>>2];p=N[b+32>>2];w=N[b+36>>2];J[e+60>>2]=0;J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;q=Q(p*Q(0));r=Q(w*Q(0));N[e+40>>2]=o+Q(q+r);t=Q(o*Q(0));N[e+36>>2]=t+Q(q+w);N[e+32>>2]=t+Q(p+r);q=Q(v*Q(0));r=Q(n*Q(0));N[e+24>>2]=u+Q(q+r);t=Q(u*Q(0));N[e+20>>2]=t+Q(q+n);N[e+16>>2]=t+Q(v+r);q=Q(l*Q(0));r=Q(m*Q(0));N[e+8>>2]=k+Q(q+r);t=Q(k*Q(0));N[e+4>>2]=t+Q(q+m);N[e>>2]=t+Q(l+r);N[e+56>>2]=A+Q(Q(g*o)+Q(Q(h*p)+Q(j*w)));N[e+52>>2]=z+Q(Q(g*u)+Q(Q(h*v)+Q(j*n)));N[e+48>>2]=y+Q(Q(g*k)+Q(Q(h*l)+Q(j*m)));ia[J[J[s>>2]+16>>2]](s,x,e,d);s=f>>>0>1;f=i;if(s){continue}break}break a}f=J[c+52>>2];c=c+28|0;g=N[(f<<2)+c>>2];h=N[c+((f+2|0)%3<<2)>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+76>>2]](a,h,g,f,b,d);break a}f=J[c+68>>2];g=N[c+56>>2];h=N[c+60>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+84>>2]](a,g,h,f,b,d);break a}f=J[c+52>>2];g=Q(ia[J[J[c>>2]+92>>2]](c));i=J[c+40>>2];J[e+8>>2]=J[c+36>>2];J[e+12>>2]=i;i=J[c+32>>2];J[e>>2]=J[c+28>>2];J[e+4>>2]=i;h=Q(ia[J[J[c>>2]+48>>2]](c));j=Q(ia[J[J[c>>2]+48>>2]](c));N[e+8>>2]=Q(ia[J[J[c>>2]+48>>2]](c))+N[e+8>>2];N[e>>2]=h+N[e>>2];N[e+4>>2]=j+N[e+4>>2];h=N[(f<<2)+e>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+80>>2]](a,g,h,f,b,d);break a}g=N[c- -64>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+88>>2]](a,c+48|0,g,b,d);break a}k:{if((f|0)>6){break k}B=J[c+52>>2];if(B){if(J[B+28>>2]<=0){break k}while(1){j=Q(0);l:{H=P(G,36);f=H+J[B+36>>2]|0;F=J[f+4>>2];if(!F){g=Q(0);h=Q(0);break l}g=Q(0);h=Q(0);if((F|0)<=0){break l}C=J[f+12>>2];f=J[(C+(F<<2)|0)-4>>2];s=0;while(1){i=J[(s<<2)+C>>2];I=i<<4;C=I+J[B+16>>2]|0;t=N[C>>2];D=N[C+4>>2];E=N[C+8>>2];C=ia[J[J[a>>2]+20>>2]](a)|0;K=J[B+16>>2];f=K+(f<<4)|0;k=N[f+8>>2];l=N[f>>2];m=N[f+4>>2];u=N[b+48>>2];v=N[b+8>>2];n=N[b>>2];o=N[b+4>>2];p=N[b+52>>2];w=N[b+24>>2];x=N[b+16>>2];y=N[b+20>>2];z=N[b+56>>2];A=N[b+40>>2];q=N[b+32>>2];r=N[b+36>>2];J[e+12>>2]=0;N[e+8>>2]=z+Q(Q(k*A)+Q(Q(l*q)+Q(m*r)));N[e+4>>2]=p+Q(Q(k*w)+Q(Q(l*x)+Q(m*y)));N[e>>2]=u+Q(Q(k*v)+Q(Q(l*n)+Q(m*o)));f=I+K|0;k=N[f+8>>2];l=N[f>>2];m=N[f+4>>2];J[e+140>>2]=0;N[e+136>>2]=z+Q(Q(k*A)+Q(Q(l*q)+Q(r*m)));N[e+132>>2]=p+Q(Q(k*w)+Q(Q(l*x)+Q(y*m)));N[e+128>>2]=u+Q(Q(k*v)+Q(Q(l*n)+Q(o*m)));ia[J[J[C>>2]+8>>2]](C,e,e+128|0,d);h=Q(h+E);g=Q(g+D);j=Q(j+t);s=s+1|0;f=J[B+36>>2]+H|0;if((s|0)>=J[f+4>>2]){break l}C=J[f+12>>2];f=i;continue}}f=ia[J[J[a>>2]+20>>2]](a)|0;if(ia[J[J[f>>2]+48>>2]](f)&16384){J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=1065353216;J[e+4>>2]=1065353216;f=J[B+36>>2]+H|0;q=N[f+28>>2];r=N[f+20>>2];t=N[f+24>>2];f=ia[J[J[a>>2]+20>>2]](a)|0;k=N[b+48>>2];l=N[b+8>>2];m=N[b>>2];u=N[b+4>>2];v=N[b+52>>2];n=N[b+24>>2];o=N[b+16>>2];p=N[b+20>>2];w=N[b+56>>2];x=N[b+40>>2];y=N[b+32>>2];z=N[b+36>>2];J[e+140>>2]=0;A=Q(Q(1)/Q(F|0));h=Q(A*h);j=Q(A*j);g=Q(A*g);N[e+136>>2]=w+Q(Q(x*h)+Q(Q(y*j)+Q(z*g)));N[e+132>>2]=v+Q(Q(h*n)+Q(Q(j*o)+Q(g*p)));N[e+128>>2]=k+Q(Q(h*l)+Q(Q(j*m)+Q(g*u)));J[e+124>>2]=0;h=Q(h+q);j=Q(j+r);g=Q(g+t);N[e+120>>2]=w+Q(Q(x*h)+Q(Q(y*j)+Q(z*g)));N[e+116>>2]=v+Q(Q(h*n)+Q(Q(j*o)+Q(g*p)));N[e+112>>2]=k+Q(Q(h*l)+Q(Q(j*m)+Q(g*u)));ia[J[J[f>>2]+8>>2]](f,e+128|0,e+112|0,e)}G=G+1|0;if((G|0)<J[B+28>>2]){continue}break}break k}if((ia[J[J[c>>2]+100>>2]](c)|0)<=0){break k}f=0;while(1){ia[J[J[c>>2]+104>>2]](c,f,e,e+128|0);g=N[b+48>>2];h=N[b+8>>2];j=N[b>>2];k=N[b+4>>2];l=N[b+52>>2];m=N[b+24>>2];u=N[b+16>>2];v=N[b+20>>2];n=N[b+56>>2];o=N[b+40>>2];p=N[b+32>>2];w=N[b+36>>2];J[e+124>>2]=0;x=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];N[e+120>>2]=n+Q(Q(o*x)+Q(Q(p*y)+Q(w*z)));N[e+116>>2]=l+Q(Q(x*m)+Q(Q(y*u)+Q(z*v)));N[e+112>>2]=g+Q(Q(x*h)+Q(Q(y*j)+Q(z*k)));J[e+108>>2]=0;q=n;n=N[e+136>>2];r=Q(o*n);o=N[e+128>>2];t=Q(p*o);p=N[e+132>>2];N[e+104>>2]=q+Q(r+Q(t+Q(w*p)));N[e+100>>2]=l+Q(Q(n*m)+Q(Q(o*u)+Q(v*p)));N[e+96>>2]=g+Q(Q(n*h)+Q(Q(o*j)+Q(k*p)));i=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[i>>2]+8>>2]](i,e+112|0,e+96|0,d);f=f+1|0;if((ia[J[J[c>>2]+100>>2]](c)|0)>(f|0)){continue}break}}f=J[c+4>>2];if(f-21>>>0<=8){J[e+136>>2]=1566444395;J[e+140>>2]=0;J[e+128>>2]=1566444395;J[e+132>>2]=1566444395;J[e+120>>2]=-581039253;J[e+124>>2]=0;J[e+112>>2]=-581039253;J[e+116>>2]=-581039253;J[e+8>>2]=ia[J[J[a>>2]+20>>2]](a);J[e+4>>2]=8552;J[e>>2]=8528;f=J[d+12>>2];J[e+20>>2]=J[d+8>>2];J[e+24>>2]=f;f=J[d+4>>2];J[e+12>>2]=J[d>>2];J[e+16>>2]=f;f=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=f;f=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=f;f=J[b+20>>2];J[e+44>>2]=J[b+16>>2];J[e+48>>2]=f;f=J[b+28>>2];J[e+52>>2]=J[b+24>>2];J[e+56>>2]=f;f=J[b+44>>2];J[e+68>>2]=J[b+40>>2];J[e+72>>2]=f;f=J[b+36>>2];J[e+60>>2]=J[b+32>>2];J[e+64>>2]=f;f=J[b+52>>2];J[e+76>>2]=J[b+48>>2];J[e+80>>2]=f;f=J[b+60>>2];J[e+84>>2]=J[b+56>>2];J[e+88>>2]=f;ia[J[J[c>>2]+64>>2]](c,e,e+112|0,e+128|0);f=J[c+4>>2]}if((f|0)!=3){break a}J[e+136>>2]=1566444395;J[e+140>>2]=0;J[e+128>>2]=1566444395;J[e+132>>2]=1566444395;J[e+120>>2]=-581039253;J[e+124>>2]=0;J[e+112>>2]=-581039253;J[e+116>>2]=-581039253;J[e+8>>2]=ia[J[J[a>>2]+20>>2]](a);J[e+4>>2]=8552;J[e>>2]=8528;a=J[d+12>>2];J[e+20>>2]=J[d+8>>2];J[e+24>>2]=a;a=J[d+4>>2];J[e+12>>2]=J[d>>2];J[e+16>>2]=a;a=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=a;a=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=a;a=J[b+20>>2];J[e+44>>2]=J[b+16>>2];J[e+48>>2]=a;a=J[b+28>>2];J[e+52>>2]=J[b+24>>2];J[e+56>>2]=a;a=J[b+44>>2];J[e+68>>2]=J[b+40>>2];J[e+72>>2]=a;a=J[b+36>>2];J[e+60>>2]=J[b+32>>2];J[e+64>>2]=a;a=J[b+52>>2];J[e+76>>2]=J[b+48>>2];J[e+80>>2]=a;a=J[b+60>>2];J[e+84>>2]=J[b+56>>2];J[e+88>>2]=a;a=J[c+92>>2];ia[J[J[a>>2]+8>>2]](a,e|4,e+112|0,e+128|0)}ga=e+144|0}function Xl(a,b,c,d,e){var f=0,g=Q(0),h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);k=ga-48|0;ga=k;H[a+60|0]=c;a:{if(c){g=N[d>>2];m=N[d+4>>2];n=N[d+8>>2];J[a+16>>2]=0;o=Q(n-Q(1));N[a+12>>2]=o;m=Q(m-Q(1));N[a+8>>2]=m;n=Q(g-Q(1));N[a+4>>2]=n;v=N[e>>2];q=N[e+4>>2];g=N[e+8>>2];H[a+60|0]=1;J[a+32>>2]=0;t=Q(g+Q(1));N[a+28>>2]=t;u=Q(q+Q(1));N[a+24>>2]=u;q=Q(v+Q(1));N[a+20>>2]=q;w=Q(Q(65533)/Q(t-o));N[a+44>>2]=w;x=Q(Q(65533)/Q(u-m));N[a+40>>2]=x;y=Q(Q(65533)/Q(q-n));N[a+36>>2]=y;g=Q(Q(o-o)*w);b:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break b}c=0}z=Q((c&65534)>>>0);g=Q(Q(m-m)*x);c:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break c}c=0}v=Q(m+Q(Q((c&65534)>>>0)/x));g=Q(Q(n-n)*y);d:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break d}c=0}g=Q(Q(n+Q(Q((c&65534)>>>0)/y))-Q(1));if(g<n){N[a+4>>2]=g;n=g}g=Q(v-Q(1));if(g<m){N[a+8>>2]=g;m=g}g=Q(Q(o+Q(z/w))-Q(1));if(g<o){N[a+12>>2]=g;o=g}g=Q(Q(w*Q(t-o))+Q(1));e:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break e}c=0}z=Q((c|1)>>>0);g=Q(Q(x*Q(u-m))+Q(1));f:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break f}c=0}v=Q(m+Q(Q((c|1)>>>0)/x));g=Q(Q(y*Q(q-n))+Q(1));g:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break g}c=0}g=Q(Q(n+Q(Q((c|1)>>>0)/y))+Q(1));if(g>q){N[a+20>>2]=g;q=g}g=Q(v+Q(1));if(g>u){N[a+24>>2]=g;u=g}g=Q(Q(o+Q(z/w))+Q(1));if(g>t){N[a+28>>2]=g;t=g}J[a+48>>2]=0;N[a+44>>2]=Q(65533)/Q(t-o);N[a+40>>2]=Q(65533)/Q(u-m);N[a+36>>2]=Q(65533)/Q(q-n);J[k+32>>2]=a;J[k+28>>2]=a+104;J[k+24>>2]=15472;ia[J[J[b>>2]+8>>2]](b,k+24|0,a+4|0,a+20|0);c=J[a+128>>2];r=J[a+108>>2];j=r<<1;h:{if((c|0)>=(j|0)){break h}if((j|0)>J[a+132>>2]){i:{if(!r){e=0;d=c;break i}J[8369]=J[8369]+1;e=ia[J[6782]](r<<5,16)|0;d=J[a+128>>2]}j:{if((d|0)<=0){break j}b=0;if((d|0)!=1){s=d&-2;while(1){i=b<<4;h=i+e|0;p=i+J[a+136>>2]|0;f=J[p+4>>2];J[h>>2]=J[p>>2];J[h+4>>2]=f;f=J[p+12>>2];J[h+8>>2]=J[p+8>>2];J[h+12>>2]=f;f=i|16;h=f+e|0;i=f+J[a+136>>2]|0;f=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=f;f=J[i+12>>2];J[h+8>>2]=J[i+8>>2];J[h+12>>2]=f;b=b+2|0;l=l+2|0;if((s|0)!=(l|0)){continue}break}}if(!(d&1)){break j}b=b<<4;d=b+e|0;f=b+J[a+136>>2]|0;b=J[f+4>>2];J[d>>2]=J[f>>2];J[d+4>>2]=b;b=J[f+12>>2];J[d+8>>2]=J[f+8>>2];J[d+12>>2]=b}b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=e;H[a+140|0]=1;J[a+132>>2]=j}e=j+(c^-1)|0;d=j-c&3;if(d){b=0;while(1){f=J[a+136>>2]+(c<<4)|0;J[f>>2]=0;J[f+4>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;c=c+1|0;b=b+1|0;if((d|0)!=(b|0)){continue}break}}if(e>>>0<3){break h}while(1){d=c<<4;b=d+J[a+136>>2]|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;b=d+J[a+136>>2]|0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;b=d+J[a+136>>2]|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;b=d+J[a+136>>2]|0;J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=0;c=c+4|0;if((j|0)!=(c|0)){continue}break}}J[a+128>>2]=j;break a}J[k+40>>2]=15604;J[k+44>>2]=a- -64;J[k+32>>2]=-581039253;J[k+36>>2]=0;J[k+24>>2]=-581039253;J[k+28>>2]=-581039253;J[k+16>>2]=1566444395;J[k+20>>2]=0;J[k+8>>2]=1566444395;J[k+12>>2]=1566444395;ia[J[J[b>>2]+8>>2]](b,k+40|0,k+24|0,k+8|0);b=J[a+88>>2];r=J[a+68>>2];l=r<<1;k:{if((b|0)>=(l|0)){break k}if((l|0)>J[a+92>>2]){if(r){J[8369]=J[8369]+1;p=ia[J[6782]](r<<7,16)|0;c=J[a+88>>2]}else{c=b}l:{if((c|0)<=0){break l}e=0;if((c|0)!=1){s=c&-2;while(1){i=e<<6;h=i+p|0;j=i+J[a+96>>2]|0;d=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=d;d=J[j+60>>2];J[h+56>>2]=J[j+56>>2];J[h+60>>2]=d;d=J[j+52>>2];J[h+48>>2]=J[j+48>>2];J[h+52>>2]=d;d=J[j+44>>2];J[h+40>>2]=J[j+40>>2];J[h+44>>2]=d;d=J[j+36>>2];J[h+32>>2]=J[j+32>>2];J[h+36>>2]=d;d=J[j+28>>2];J[h+24>>2]=J[j+24>>2];J[h+28>>2]=d;d=J[j+20>>2];J[h+16>>2]=J[j+16>>2];J[h+20>>2]=d;d=J[j+12>>2];J[h+8>>2]=J[j+8>>2];J[h+12>>2]=d;d=i|64;h=d+p|0;i=d+J[a+96>>2]|0;d=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=d;d=J[i+12>>2];J[h+8>>2]=J[i+8>>2];J[h+12>>2]=d;d=J[i+20>>2];J[h+16>>2]=J[i+16>>2];J[h+20>>2]=d;d=J[i+28>>2];J[h+24>>2]=J[i+24>>2];J[h+28>>2]=d;d=J[i+36>>2];J[h+32>>2]=J[i+32>>2];J[h+36>>2]=d;d=J[i+44>>2];J[h+40>>2]=J[i+40>>2];J[h+44>>2]=d;d=J[i+52>>2];J[h+48>>2]=J[i+48>>2];J[h+52>>2]=d;d=J[i+60>>2];J[h+56>>2]=J[i+56>>2];J[h+60>>2]=d;e=e+2|0;f=f+2|0;if((s|0)!=(f|0)){continue}break}}if(!(c&1)){break l}c=e<<6;d=c+p|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=p;H[a+100|0]=1;J[a+92>>2]=l}e=l+(b^-1)|0;c=l-b&3;if(c){d=0;while(1){f=J[a+96>>2]+(b<<6)|0;J[f>>2]=0;J[f+4>>2]=0;J[f+56>>2]=0;J[f+60>>2]=0;J[f+48>>2]=0;J[f+52>>2]=0;J[f+40>>2]=0;J[f+44>>2]=0;J[f+32>>2]=0;J[f+36>>2]=0;J[f+24>>2]=0;J[f+28>>2]=0;J[f+16>>2]=0;J[f+20>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;b=b+1|0;d=d+1|0;if((c|0)!=(d|0)){continue}break}}if(e>>>0<3){break k}while(1){d=b<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;b=b+4|0;if((l|0)!=(b|0)){continue}break}}J[a+88>>2]=l}J[a+56>>2]=0;Yg(a,0,r);if(!(J[a+152>>2]|!K[a+60|0])){if(J[a+156>>2]){b=1}else{J[8369]=J[8369]+1;s=ia[J[6782]](32,16)|0;h=J[a+152>>2];m:{if((h|0)<=0){break m}d=0;if((h|0)!=1){e=h&-2;l=0;while(1){f=d<<5;c=f+s|0;i=f+J[a+160>>2]|0;b=J[i+4>>2];J[c>>2]=J[i>>2];J[c+4>>2]=b;b=J[i+28>>2];J[c+24>>2]=J[i+24>>2];J[c+28>>2]=b;b=J[i+20>>2];J[c+16>>2]=J[i+16>>2];J[c+20>>2]=b;b=J[i+12>>2];J[c+8>>2]=J[i+8>>2];J[c+12>>2]=b;b=f|32;c=b+s|0;f=b+J[a+160>>2]|0;b=J[f+4>>2];J[c>>2]=J[f>>2];J[c+4>>2]=b;b=J[f+12>>2];J[c+8>>2]=J[f+8>>2];J[c+12>>2]=b;b=J[f+20>>2];J[c+16>>2]=J[f+16>>2];J[c+20>>2]=b;b=J[f+28>>2];J[c+24>>2]=J[f+24>>2];J[c+28>>2]=b;d=d+2|0;l=l+2|0;if((e|0)!=(l|0)){continue}break}}if(!(h&1)){break m}b=d<<5;c=b+s|0;d=b+J[a+160>>2]|0;b=J[d+4>>2];J[c>>2]=J[d>>2];J[c+4>>2]=b;b=J[d+28>>2];J[c+24>>2]=J[d+24>>2];J[c+28>>2]=b;b=J[d+20>>2];J[c+16>>2]=J[d+16>>2];J[c+20>>2]=b;b=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=b}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=s;H[a+164|0]=1;J[a+156>>2]=1;b=J[a+152>>2]+1|0}J[a+152>>2]=b;d=J[a+160>>2];c=J[a+136>>2];I[d>>1]=L[c>>1];I[d+2>>1]=L[c+2>>1];I[d+4>>1]=L[c+4>>1];I[d+6>>1]=L[c+6>>1];I[d+8>>1]=L[c+8>>1];b=L[c+10>>1];J[d+12>>2]=0;I[d+10>>1]=b;b=J[c+12>>2];J[d+16>>2]=(b|0)>=0?1:0-b|0}J[a+168>>2]=J[a+152>>2];b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;ga=k+48|0}function cB(a){a=a|0;var b=0,c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=0,X=0,Z=Q(0),_=Q(0),$=0;B=ga-48|0;ga=B;if(K[a+738|0]){J[a+744>>2]=0;J[a+36>>2]=0;a:{if(K[a+736|0]){break a}e=N[a+672>>2];b=J[a+32>>2];r=N[b+44>>2];g=N[a+664>>2];v=N[b+36>>2];f=N[a+668>>2];E=N[b+40>>2];C=N[b+60>>2];O=Q(Q(Q(e*r)+Q(Q(g*v)+Q(f*E)))+C);h=N[a+608>>2];c=J[a+28>>2];F=N[c+44>>2];s=N[a+600>>2];u=N[c+36>>2];x=N[a+604>>2];I=N[c+40>>2];d=N[c+60>>2];S=Q(Q(Q(h*F)+Q(Q(s*u)+Q(x*I)))+d);k=Q(O-S);w=N[b+12>>2];i=N[b+4>>2];m=N[b+8>>2];j=N[b+52>>2];T=Q(Q(Q(e*w)+Q(Q(g*i)+Q(f*m)))+j);n=N[c+12>>2];p=N[c+4>>2];l=N[c+8>>2];t=N[c+52>>2];U=Q(Q(Q(h*n)+Q(Q(s*p)+Q(x*l)))+t);o=Q(T-U);y=N[b+28>>2];z=N[b+20>>2];A=N[b+24>>2];G=N[b+56>>2];Z=Q(Q(Q(e*y)+Q(Q(g*z)+Q(f*A)))+G);H=N[c+28>>2];e=s;s=N[c+20>>2];f=x;x=N[c+24>>2];D=N[c+56>>2];_=Q(Q(Q(h*H)+Q(Q(e*s)+Q(f*x)))+D);e=Q(Z-_);g=Q(Q(k*k)+Q(Q(o*o)+Q(e*e)));b:{if(!(g>Q(1.1920928955078125e-7))){g=Q(0);f=Q(0);e=Q(1);break b}h=Q(Q(1)/Q(Y(g)));f=Q(k*h);g=Q(e*h);e=Q(o*h)}J[B+12>>2]=0;N[B+4>>2]=g;N[B>>2]=e;N[B+8>>2]=f;c:{if(Q(R(f))>Q(.7071067690849304)){k=Q(Q(g*g)+Q(f*f));h=Q(Q(1)/Q(Y(k)));k=Q(k*h);o=Q(h*Q(-f));L=Q(o*e);f=Q(g*h);g=Q(f*Q(-e));break c}k=Q(Q(e*e)+Q(g*g));h=Q(Q(1)/Q(Y(k)));L=Q(k*h);M=Q(h*Q(-g));g=Q(f*M);o=Q(e*h);k=Q(o*Q(-f));f=Q(0)}N[B+40>>2]=L;N[B+36>>2]=g;N[B+24>>2]=f;N[B+20>>2]=o;N[B+32>>2]=k;N[B+16>>2]=M;while(1){k=N[b+344>>2];o=N[c+344>>2];W=(V<<4)+B|0;$=J[W+12>>2];q=P(V,84)+a|0;X=q+56|0;J[X>>2]=J[W+8>>2];J[X+4>>2]=$;X=J[W+4>>2];J[q+48>>2]=J[W>>2];J[q+52>>2]=X;J[q+76>>2]=0;J[q+92>>2]=0;L=u;u=Q(U-t);e=N[q+52>>2];g=N[q+48>>2];f=Q(_-D);h=Q(Q(u*e)-Q(g*f));t=p;D=f;f=N[q+56>>2];p=Q(S-d);d=Q(Q(D*f)-Q(e*p));D=s;s=Q(Q(p*g)-Q(f*u));u=Q(Q(L*h)+Q(Q(t*d)+Q(D*s)));N[q- -64>>2]=u;l=Q(Q(I*h)+Q(Q(l*d)+Q(x*s)));N[q+68>>2]=l;d=Q(Q(F*h)+Q(Q(n*d)+Q(H*s)));N[q+72>>2]=d;n=Q(Z-G);h=Q(T-j);j=Q(Q(g*n)-Q(e*h));s=i;i=Q(O-C);e=Q(Q(e*i)-Q(n*f));g=Q(Q(h*f)-Q(i*g));f=Q(Q(v*j)+Q(Q(s*e)+Q(z*g)));N[q+80>>2]=f;i=Q(Q(E*j)+Q(Q(m*e)+Q(A*g)));N[q+84>>2]=i;e=Q(Q(r*j)+Q(Q(w*e)+Q(y*g)));N[q+88>>2]=e;g=N[c+404>>2];m=N[c+400>>2];j=N[c+396>>2];J[q+108>>2]=0;j=Q(u*j);N[q+96>>2]=j;m=Q(l*m);N[q+100>>2]=m;g=Q(d*g);N[q+104>>2]=g;n=N[b+404>>2];h=N[b+400>>2];r=N[b+396>>2];J[q+124>>2]=0;r=Q(f*r);N[q+112>>2]=r;h=Q(i*h);N[q+116>>2]=h;n=Q(e*n);N[q+120>>2]=n;N[q+128>>2]=Q(k+Q(o+Q(Q(g*d)+Q(Q(j*u)+Q(l*m)))))+Q(Q(n*e)+Q(Q(r*f)+Q(i*h)));V=V+1|0;if((V|0)==3){break a}C=N[b+60>>2];G=N[b+56>>2];j=N[b+52>>2];d=N[c+60>>2];D=N[c+56>>2];t=N[c+52>>2];r=N[b+44>>2];y=N[b+28>>2];w=N[b+12>>2];E=N[b+40>>2];A=N[b+24>>2];m=N[b+8>>2];v=N[b+36>>2];z=N[b+20>>2];i=N[b+4>>2];F=N[c+44>>2];H=N[c+28>>2];n=N[c+12>>2];I=N[c+40>>2];x=N[c+24>>2];l=N[c+8>>2];u=N[c+36>>2];s=N[c+20>>2];p=N[c+4>>2];continue}}e=N[a+576>>2];g=N[a+560>>2];f=N[a+592>>2];d:{if(Q(R(f))>Q(.7071067690849304)){d=Q(Q(e*e)+Q(f*f));j=Q(Q(1)/Q(Y(d)));i=Q(d*j);d=Q(j*Q(-f));m=Q(g*d);j=Q(e*j);n=Q(j*Q(-g));l=Q(0);break d}i=Q(Q(g*g)+Q(e*e));d=Q(Q(1)/Q(Y(i)));m=Q(i*d);l=Q(d*Q(-e));n=Q(f*l);d=Q(g*d);i=Q(d*Q(-f));j=Q(0)}b=J[a+32>>2];o=N[b+36>>2];y=N[b+20>>2];t=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];p=N[b+44>>2];G=N[b+12>>2];H=N[b+28>>2];c=J[a+28>>2];r=N[c+44>>2];v=N[c+36>>2];E=N[c+40>>2];C=N[c+12>>2];F=N[c+8>>2];s=N[c+28>>2];u=N[c+20>>2];x=N[c+24>>2];D=N[b+4>>2];I=N[c+4>>2];J[a+344>>2]=0;J[a+328>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;J[a+300>>2]=0;J[a+304>>2]=0;h=Q(Q(r*j)+Q(Q(v*l)+Q(d*E)));k=Q(Q(C*j)+Q(Q(I*l)+Q(d*F)));d=Q(Q(s*j)+Q(Q(u*l)+Q(d*x)));j=Q(Q(r*h)+Q(Q(C*k)+Q(s*d)));N[a+324>>2]=j;l=Q(Q(E*h)+Q(Q(F*k)+Q(x*d)));N[a+320>>2]=l;w=Q(Q(v*h)+Q(Q(I*k)+Q(u*d)));N[a+316>>2]=w;k=Q(-k);p=Q(Q(Q(G*k)-Q(H*d))-Q(p*h));N[a+340>>2]=p;t=Q(Q(Q(z*k)-Q(A*d))-Q(t*h));N[a+336>>2]=t;d=Q(Q(Q(D*k)-Q(y*d))-Q(o*h));N[a+332>>2]=d;h=N[c+400>>2];k=N[c+404>>2];o=N[c+396>>2];J[a+360>>2]=0;k=Q(j*k);N[a+356>>2]=k;h=Q(l*h);N[a+352>>2]=h;o=Q(w*o);N[a+348>>2]=o;y=N[b+400>>2];z=N[b+404>>2];A=N[b+396>>2];J[a+376>>2]=0;z=Q(p*z);N[a+372>>2]=z;y=Q(t*y);N[a+368>>2]=y;A=Q(d*A);N[a+364>>2]=A;N[a+380>>2]=Q(Q(k*j)+Q(Q(o*w)+Q(l*h)))+Q(Q(z*p)+Q(Q(A*d)+Q(t*y)));w=N[c+36>>2];p=N[c+20>>2];k=N[c+40>>2];t=N[c+8>>2];o=N[c+24>>2];h=N[c+44>>2];y=N[c+12>>2];z=N[c+28>>2];A=N[b+36>>2];G=N[b+20>>2];H=N[b+40>>2];D=N[b+8>>2];L=N[b+24>>2];M=N[b+44>>2];d=N[b+12>>2];O=N[b+28>>2];S=N[c+4>>2];T=N[b+4>>2];J[a+428>>2]=0;J[a+412>>2]=0;J[a+392>>2]=0;J[a+396>>2]=0;J[a+384>>2]=0;J[a+388>>2]=0;j=Q(Q(C*m)+Q(Q(I*i)+Q(n*F)));l=Q(-j);U=Q(d*l);d=Q(Q(s*m)+Q(Q(u*i)+Q(n*x)));i=Q(Q(r*m)+Q(Q(v*i)+Q(n*E)));m=Q(Q(U-Q(O*d))-Q(M*i));N[a+424>>2]=m;n=Q(Q(Q(D*l)-Q(L*d))-Q(H*i));N[a+420>>2]=n;l=Q(Q(Q(T*l)-Q(G*d))-Q(A*i));N[a+416>>2]=l;h=Q(Q(h*i)+Q(Q(y*j)+Q(d*z)));N[a+408>>2]=h;k=Q(Q(k*i)+Q(Q(t*j)+Q(d*o)));N[a+404>>2]=k;d=Q(Q(w*i)+Q(Q(S*j)+Q(d*p)));N[a+400>>2]=d;i=N[c+400>>2];j=N[c+404>>2];w=N[c+396>>2];J[a+444>>2]=0;j=Q(h*j);N[a+440>>2]=j;i=Q(k*i);N[a+436>>2]=i;w=Q(d*w);N[a+432>>2]=w;p=N[b+400>>2];t=N[b+404>>2];o=N[b+396>>2];J[a+460>>2]=0;t=Q(m*t);N[a+456>>2]=t;p=Q(n*p);N[a+452>>2]=p;o=Q(l*o);N[a+448>>2]=o;N[a+464>>2]=Q(Q(j*h)+Q(Q(w*d)+Q(k*i)))+Q(Q(t*m)+Q(Q(o*l)+Q(n*p)));l=N[c+36>>2];h=N[c+20>>2];n=N[c+40>>2];k=N[c+8>>2];w=N[c+24>>2];j=N[c+44>>2];p=N[c+12>>2];t=N[c+28>>2];o=N[b+36>>2];y=N[b+20>>2];z=N[b+40>>2];A=N[b+8>>2];G=N[b+24>>2];H=N[b+44>>2];d=N[b+12>>2];D=N[b+28>>2];L=N[c+4>>2];M=N[b+4>>2];J[a+512>>2]=0;J[a+496>>2]=0;J[a+476>>2]=0;J[a+480>>2]=0;J[a+468>>2]=0;J[a+472>>2]=0;i=Q(Q(C*f)+Q(Q(I*g)+Q(e*F)));m=Q(-i);C=Q(d*m);d=Q(Q(s*f)+Q(Q(u*g)+Q(e*x)));e=Q(Q(r*f)+Q(Q(v*g)+Q(e*E)));g=Q(Q(C-Q(D*d))-Q(H*e));N[a+508>>2]=g;f=Q(Q(Q(A*m)-Q(G*d))-Q(z*e));N[a+504>>2]=f;m=Q(Q(Q(M*m)-Q(y*d))-Q(o*e));N[a+500>>2]=m;j=Q(Q(j*e)+Q(Q(p*i)+Q(d*t)));N[a+492>>2]=j;n=Q(Q(n*e)+Q(Q(k*i)+Q(d*w)));N[a+488>>2]=n;e=Q(Q(l*e)+Q(Q(L*i)+Q(d*h)));N[a+484>>2]=e;d=N[c+400>>2];i=N[c+404>>2];l=N[c+396>>2];J[a+528>>2]=0;i=Q(j*i);N[a+524>>2]=i;d=Q(n*d);N[a+520>>2]=d;l=Q(e*l);N[a+516>>2]=l;h=N[b+400>>2];r=N[b+404>>2];v=N[b+396>>2];J[a+724>>2]=0;J[a+544>>2]=0;r=Q(g*r);N[a+540>>2]=r;h=Q(f*h);N[a+536>>2]=h;v=Q(m*v);N[a+532>>2]=v;N[a+548>>2]=Q(Q(i*j)+Q(Q(l*e)+Q(n*d)))+Q(Q(r*g)+Q(Q(v*m)+Q(f*h)));e=N[a+652>>2];g=N[a+620>>2];f=N[a+636>>2];j=Q(Q(N[b+44>>2]*e)+Q(Q(N[b+36>>2]*g)+Q(f*N[b+40>>2])));n=N[c+44>>2];d=N[a+584>>2];l=N[c+36>>2];i=N[a+552>>2];m=N[a+568>>2];h=N[c+40>>2];s=Q(j*Q(Q(n*d)+Q(Q(l*i)+Q(m*h))));r=Q(Q(N[b+12>>2]*e)+Q(Q(N[b+4>>2]*g)+Q(f*N[b+8>>2])));v=N[c+12>>2];E=N[c+4>>2];C=N[c+8>>2];p=Q(r*Q(Q(v*d)+Q(Q(E*i)+Q(m*C))));F=N[c+28>>2];u=Q(F*d);d=N[c+20>>2];x=Q(d*i);i=N[c+24>>2];u=Q(u+Q(x+Q(m*i)));m=Q(Q(N[b+28>>2]*e)+Q(Q(N[b+20>>2]*g)+Q(f*N[b+24>>2])));e=N[a+588>>2];g=N[a+556>>2];f=N[a+572>>2];e=Q($a(Q(s+Q(p+Q(u*m))),Q(Q(j*Q(Q(n*e)+Q(Q(l*g)+Q(h*f))))+Q(Q(r*Q(Q(v*e)+Q(Q(E*g)+Q(C*f))))+Q(Q(Q(F*e)+Q(Q(d*g)+Q(i*f)))*m))))*N[a+732>>2]);N[a+728>>2]=e;Pk(a+688|0,e);c=a;b=J[a+28>>2];f=N[a+592>>2];d=N[a+560>>2];i=N[a+576>>2];e=Q(Q(N[b+44>>2]*f)+Q(Q(N[b+36>>2]*d)+Q(i*N[b+40>>2])));g=Q(Q(N[b+12>>2]*f)+Q(Q(N[b+4>>2]*d)+Q(i*N[b+8>>2])));f=Q(Q(N[b+28>>2]*f)+Q(Q(N[b+20>>2]*d)+Q(i*N[b+24>>2])));a=J[a+32>>2];N[c+720>>2]=Q(1)/Q(Q(Q(e*Q(Q(e*N[b+304>>2])+Q(Q(N[b+272>>2]*g)+Q(f*N[b+288>>2]))))+Q(Q(g*Q(Q(N[b+296>>2]*e)+Q(Q(g*N[b+264>>2])+Q(f*N[b+280>>2]))))+Q(f*Q(Q(N[b+300>>2]*e)+Q(Q(N[b+268>>2]*g)+Q(f*N[b+284>>2]))))))+Q(Q(e*Q(Q(e*N[a+304>>2])+Q(Q(N[a+272>>2]*g)+Q(f*N[a+288>>2]))))+Q(Q(g*Q(Q(N[a+296>>2]*e)+Q(Q(g*N[a+264>>2])+Q(f*N[a+280>>2]))))+Q(f*Q(Q(N[a+300>>2]*e)+Q(Q(N[a+268>>2]*g)+Q(f*N[a+284>>2])))))))}ga=B+48|0}function Jn(a){a=a|0;var b=Q(0),c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0;s=ga-48|0;ga=s;J[s+44>>2]=a;p=J[s+44>>2];ia[J[J[p>>2]+112>>2]](p);c=ga-16|0;ga=c;J[c+12>>2]=p+68;a=ga-16|0;J[a+12>>2]=J[c+12>>2];ga=c+16|0;a:{if(!J[J[a+12>>2]>>2]){g=ga+-64|0;ga=g;H[g+56|0]=1;J[g+48>>2]=0;J[g+52>>2]=0;h=p+68|0;a=J[h+72>>2];i=ia[J[J[a>>2]+12>>2]](a)|0;J[g+32>>2]=0;J[g+36>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;b:{if((i|0)<=0){J[g+44>>2]=i;break b}J[8369]=J[8369]+1;c=ia[J[6782]](P(i,36),16)|0;J[g+52>>2]=c;J[g+48>>2]=i;H[g+56|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;a=J[g+28>>2];J[c+16>>2]=J[g+24>>2];J[c+20>>2]=a;a=J[g+36>>2];J[c+24>>2]=J[g+32>>2];J[c+28>>2]=a;J[c+32>>2]=0;c:{if((i|0)==1){break c}a=1;c=i-1|0;q=c&1;if((i|0)!=2){f=c&-2;while(1){d=P(a,36);j=d+J[g+52>>2]|0;c=j;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=J[g+28>>2];J[j+16>>2]=J[g+24>>2];J[j+20>>2]=c;c=J[g+36>>2];J[j+24>>2]=J[g+32>>2];J[j+28>>2]=c;J[j+32>>2]=0;d=d+J[g+52>>2]|0;c=d;J[c+44>>2]=0;J[c+48>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;c=J[g+28>>2];J[d+52>>2]=J[g+24>>2];J[d+56>>2]=c;c=J[g+36>>2];J[d+60>>2]=J[g+32>>2];J[d+64>>2]=c;J[d+68>>2]=0;a=a+2|0;k=k+2|0;if((f|0)!=(k|0)){continue}break}}if(!q){break c}c=J[g+52>>2]+P(a,36)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a=J[g+28>>2];J[c+16>>2]=J[g+24>>2];J[c+20>>2]=a;a=J[g+36>>2];J[c+24>>2]=J[g+32>>2];J[c+28>>2]=a;J[c+32>>2]=0}J[g+44>>2]=i;if((i|0)<=0){break b}a=0;j=J[g+52>>2];if((i|0)!=1){f=i&-2;k=0;while(1){d=J[h+72>>2];c=j+P(a,36)|0;ia[J[J[d>>2]+16>>2]](d,a,c);J[c+32>>2]=a;q=a|1;d=j+P(q,36)|0;c=J[h+72>>2];ia[J[J[c>>2]+16>>2]](c,q,d);J[d+32>>2]=q;a=a+2|0;k=k+2|0;if((f|0)!=(k|0)){continue}break}}if(!(i&1)){break b}d=J[h+72>>2];c=j+P(a,36)|0;ia[J[J[d>>2]+16>>2]](d,a,c);J[c+32>>2]=a}k=0;i=0;F=g+40|0;c=J[F+4>>2];d:{if((c|0)<=0){n=Q(-3.4028234663852886e38);o=Q(-3.4028234663852886e38);l=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);b=Q(3.4028234663852886e38);break d}a=J[F+12>>2];m=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);l=Q(3.4028234663852886e38);v=Q(3.4028234663852886e38);o=Q(-3.4028234663852886e38);n=Q(-3.4028234663852886e38);while(1){d=a+P(k,36)|0;b=N[d+16>>2];m=b>m?b:m;b=N[d+8>>2];v=b<v?b:v;b=N[d+4>>2];l=b<l?b:l;b=N[d>>2];r=b<r?b:r;b=N[d+24>>2];n=b>n?b:n;b=N[d+20>>2];o=b>o?b:o;k=k+1|0;if((c|0)!=(k|0)){continue}break}n=Q(n+Q(1));o=Q(o+Q(1));m=Q(m+Q(1));l=Q(l+Q(-1));r=Q(r+Q(-1));b=Q(v+Q(-1))}N[h+24>>2]=r;J[h>>2]=0;J[h+68>>2]=0;J[h+52>>2]=0;N[h+48>>2]=n;N[h+44>>2]=o;N[h+40>>2]=m;J[h+36>>2]=0;N[h+32>>2]=b;N[h+28>>2]=l;N[h- -64>>2]=Q(65535)/Q(n-b);N[h+60>>2]=Q(65535)/Q(o-l);N[h+56>>2]=Q(65535)/Q(m-r);a=J[h+8>>2];k=J[F+4>>2];E=k<<1;if((a|0)<(E|0)){if((E|0)>J[h+12>>2]){if(k){J[8369]=J[8369]+1;y=ia[J[6782]](k<<5,16)|0;c=J[h+8>>2]}else{c=a}e:{if((c|0)<=0){break e}k=0;if((c|0)!=1){q=c&-2;while(1){j=k<<4;f=j+y|0;e=j+J[h+16>>2]|0;d=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=d;d=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=d;d=j|16;f=d+y|0;j=d+J[h+16>>2]|0;d=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=d;d=J[j+12>>2];J[f+8>>2]=J[j+8>>2];J[f+12>>2]=d;k=k+2|0;i=i+2|0;if((q|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=k<<4;d=c+y|0;f=c+J[h+16>>2]|0;c=J[f+4>>2];J[d>>2]=J[f>>2];J[d+4>>2]=c;c=J[f+12>>2];J[d+8>>2]=J[f+8>>2];J[d+12>>2]=c}c=J[h+16>>2];if(!(c?!c|!K[h+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[h+16>>2]=y;H[h+20|0]=1;J[h+12>>2]=E}d=E+(a^-1)|0;c=E-a&3;if(c){k=0;while(1){J[(J[h+16>>2]+(a<<4)|0)+12>>2]=0;a=a+1|0;k=k+1|0;if((c|0)!=(k|0)){continue}break}}if(d>>>0>=3){while(1){c=a<<4;J[(c+J[h+16>>2]|0)+12>>2]=0;J[(c+J[h+16>>2]|0)+28>>2]=0;J[(c+J[h+16>>2]|0)+44>>2]=0;J[(c+J[h+16>>2]|0)+60>>2]=0;a=a+4|0;if((E|0)!=(a|0)){continue}break}}k=J[F+4>>2]}J[h+8>>2]=E;Jg(h,F,0,k);a=J[g+52>>2];if(!(a?!a|!K[g+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=g- -64|0;break a}j=ga-16|0;ga=j;J[j+12>>2]=p+68;i=ga-32|0;ga=i;e=J[j+12>>2];a=J[e>>2];if(a){y=J[e+16>>2];while(1){d=a;a=a-1|0;q=a<<4;c=q+y|0;f=J[c+12>>2];f:{if((f|0)>=0){c=J[e+72>>2];ia[J[J[c>>2]+16>>2]](c,f,i);n=N[e+56>>2];x=N[e+40>>2];t=N[e+24>>2];o=N[e+60>>2];z=N[e+44>>2];u=N[e+28>>2];l=N[i>>2];m=N[i+4>>2];y=J[e+16>>2];c=q+y|0;A=N[e+48>>2];w=N[e+32>>2];b=N[i+8>>2];b=b<w?w:b;v=N[e+64>>2];b=Q(Q(Q((b>A?A:b)-w)*v)+Q(.5));g:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break g}d=0}I[c+4>>1]=d;b=m<u?u:m;b=Q(Q(o*Q((b>z?z:b)-u))+Q(.5));h:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break h}d=0}I[c+2>>1]=d;b=l<t?t:l;b=Q(Q(Q((b>x?x:b)-t)*n)+Q(.5));i:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break i}d=0}I[c>>1]=d;l=N[i+16>>2];m=N[i+20>>2];b=N[i+24>>2];b=b<w?w:b;b=Q(Q(v*Q((b>A?A:b)-w))+Q(.5));j:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break j}d=0}I[c+10>>1]=d;b=m<u?u:m;b=Q(Q(o*Q((b>z?z:b)-u))+Q(.5));k:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break k}d=0}I[c+8>>1]=d;b=l<t?t:l;b=Q(Q(n*Q((b>x?x:b)-t))+Q(.5));if(b<Q(4294967296)&b>=Q(0)){I[c+6>>1]=~~b>>>0;break f}I[c+6>>1]=0;break f}B=N[e+24>>2];f=(d<<4)+y|0;t=N[e+56>>2];b=Q(B+Q(Q(L[f+6>>1])/t));r=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);u=N[e+64>>2];C=N[e+32>>2];b=Q(Q(Q(L[f+4>>1])/u)+C);w=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);x=N[e+60>>2];D=N[e+28>>2];b=Q(Q(Q(L[f+2>>1])/x)+D);z=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);b=Q(Q(Q(L[f>>1])/t)+B);A=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);b=Q(C+Q(Q(L[f+10>>1])/u));n=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);b=Q(D+Q(Q(L[f+8>>1])/x));o=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);f=J[f+12>>2];d=d+((f|0)>=0?1:0-f|0)|0;if(d){d=(d<<4)+y|0;b=Q(B+Q(Q(L[d+6>>1])/t));r=b>r?b:r;b=Q(Q(Q(L[d+4>>1])/u)+C);w=b<w?b:w;b=Q(Q(Q(L[d+2>>1])/x)+D);z=b<z?b:z;b=Q(Q(Q(L[d>>1])/t)+B);A=b<A?b:A;b=Q(C+Q(Q(L[d+10>>1])/u));n=b>n?b:n;b=Q(D+Q(Q(L[d+8>>1])/x));o=b>o?b:o}l=N[e+40>>2];m=N[e+44>>2];v=N[e+48>>2];b=n<C?C:n;b=Q(Q(u*Q((b>v?v:b)-C))+Q(.5));l:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break l}d=0}I[c+10>>1]=d;b=o<D?D:o;b=Q(Q(x*Q((b>m?m:b)-D))+Q(.5));m:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break m}d=0}I[c+8>>1]=d;b=r<B?B:r;b=Q(Q(t*Q((b>l?l:b)-B))+Q(.5));n:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break n}d=0}I[c+6>>1]=d;b=w<C?C:w;b=Q(Q(Q((b>v?v:b)-C)*u)+Q(.5));o:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break o}d=0}I[c+4>>1]=d;b=z<D?D:z;b=Q(Q(Q((b>m?m:b)-D)*x)+Q(.5));p:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break p}d=0}I[c+2>>1]=d;b=A<B?B:A;b=Q(Q(Q((b>l?l:b)-B)*t)+Q(.5));q:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break q}d=0}I[c>>1]=d}if(a){continue}break}}ga=i+32|0;ga=j+16|0}ia[J[J[p>>2]+116>>2]](p);j=ga-16|0;ga=j;c=s+8|0;J[j+12>>2]=c;J[j+8>>2]=p+68;a=J[j+8>>2];Nd(c);i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=0;J[i+4>>2]=c;c=J[i+8>>2];a=J[i+4>>2];e=ga-48|0;ga=e;J[e+44>>2]=J[i+12>>2];J[e+40>>2]=c;J[e+36>>2]=a;a=J[e+40>>2];c=ga-16|0;q=J[e+44>>2];J[c+12>>2]=q+4;J[c+8>>2]=a;a=J[J[c+12>>2]+12>>2]+(J[c+8>>2]<<4)|0;d=q+24|0;c=q+56|0;Dh(e+16|0,a,d,c);a=J[e+20>>2];f=J[e+36>>2];J[f>>2]=J[e+16>>2];J[f+4>>2]=a;a=J[e+28>>2];J[f+8>>2]=J[e+24>>2];J[f+12>>2]=a;a=J[e+40>>2];f=ga-16|0;J[f+12>>2]=q+4;J[f+8>>2]=a;Dh(e,(J[J[f+12>>2]+12>>2]+(J[f+8>>2]<<4)|0)+6|0,d,c);a=J[e+4>>2];c=J[e+36>>2];J[c+16>>2]=J[e>>2];J[c+20>>2]=a;a=J[e+12>>2];J[c+24>>2]=J[e+8>>2];J[c+28>>2]=a;ga=e+48|0;ga=i+16|0;ga=j+16|0;a=J[s+12>>2];J[p+16>>2]=J[s+8>>2];J[p+20>>2]=a;a=J[s+36>>2];J[p+40>>2]=J[s+32>>2];J[p+44>>2]=a;a=J[s+28>>2];J[p+32>>2]=J[s+24>>2];J[p+36>>2]=a;a=J[s+20>>2];J[p+24>>2]=J[s+16>>2];J[p+28>>2]=a;ga=s+48|0}function zb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0;e=ga-272|0;ga=e;J[a+56>>2]=0;J[e+264>>2]=0;J[e+268>>2]=0;J[e+256>>2]=0;J[e+260>>2]=0;g=J[b+12>>2];J[e+168>>2]=J[b+8>>2];J[e+172>>2]=g;g=J[b+4>>2];J[e+160>>2]=J[b>>2];J[e+164>>2]=g;g=J[b+28>>2];J[e+184>>2]=J[b+24>>2];J[e+188>>2]=g;g=J[b+20>>2];J[e+176>>2]=J[b+16>>2];J[e+180>>2]=g;g=J[b+44>>2];J[e+200>>2]=J[b+40>>2];J[e+204>>2]=g;g=J[b+36>>2];J[e+192>>2]=J[b+32>>2];J[e+196>>2]=g;g=J[b+60>>2];J[e+216>>2]=J[b+56>>2];J[e+220>>2]=g;g=J[b+52>>2];J[e+208>>2]=J[b+48>>2];J[e+212>>2]=g;g=J[b+76>>2];J[e+104>>2]=J[b+72>>2];J[e+108>>2]=g;g=J[b+68>>2];J[e+96>>2]=J[b+64>>2];J[e+100>>2]=g;g=J[b+92>>2];J[e+120>>2]=J[b+88>>2];J[e+124>>2]=g;g=J[b+84>>2];J[e+112>>2]=J[b+80>>2];J[e+116>>2]=g;g=J[b+108>>2];J[e+136>>2]=J[b+104>>2];J[e+140>>2]=g;g=J[b+100>>2];J[e+128>>2]=J[b+96>>2];J[e+132>>2]=g;g=J[b+124>>2];J[e+152>>2]=J[b+120>>2];J[e+156>>2]=g;g=J[b+116>>2];J[e+144>>2]=J[b+112>>2];J[e+148>>2]=g;f=N[e+212>>2];i=N[e+148>>2];z=Q(Q(f+i)*Q(.5));N[e+212>>2]=f-z;f=N[e+216>>2];h=N[e+152>>2];A=Q(Q(f+h)*Q(.5));N[e+216>>2]=f-A;N[e+148>>2]=i-z;N[e+152>>2]=h-A;f=N[e+208>>2];i=N[e+144>>2];B=Q(Q(f+i)*Q(.5));N[e+208>>2]=f-B;N[e+144>>2]=i-B;l=J[J[a+28>>2]+4>>2]-17>>>0<=1?J[J[a+32>>2]+4>>2]-17>>>0<2:l;f=N[a+44>>2];i=N[a+48>>2];J[7717]=J[7717]+1;J[a+68>>2]=0;J[a+12>>2]=0;J[a+16>>2]=0;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+60>>2]=-1;J[a+64>>2]=0;g=K[a+52|0];Ie(J[a+24>>2]);o=g?Q(0):f;p=g?Q(0):i;r=Q(o+p);g=a+4|0;v=N[e+136>>2];w=N[e+132>>2];x=N[e+120>>2];G=N[e+116>>2];H=N[e+200>>2];I=N[e+196>>2];L=N[e+184>>2];M=N[e+180>>2];i=Q(0xde0b6b000000000);O=N[e+148>>2];P=N[e+144>>2];R=N[e+128>>2];S=N[e+112>>2];T=N[e+104>>2];U=N[e+100>>2];V=N[e+96>>2];W=N[e+216>>2];X=N[e+212>>2];Z=N[e+208>>2];_=N[e+192>>2];$=N[e+176>>2];aa=N[e+168>>2];ba=N[e+164>>2];ca=N[e+160>>2];a:{b:{c:{while(1){m=N[b+32>>2];s=N[b>>2];t=N[b+16>>2];u=N[b+36>>2];C=N[b+4>>2];D=N[b+20>>2];E=N[b+40>>2];f=N[a+12>>2];j=N[b+8>>2];k=N[a+4>>2];F=N[b+24>>2];h=N[a+8>>2];J[e+252>>2]=0;q=j;j=Q(-k);N[e+248>>2]=Q(Q(q*j)-Q(F*h))-Q(E*f);N[e+244>>2]=Q(Q(C*j)-Q(D*h))-Q(u*f);N[e+240>>2]=Q(Q(s*j)-Q(t*h))-Q(m*f);j=N[b+96>>2];m=N[b+64>>2];s=N[b+80>>2];t=N[b+100>>2];u=N[b+68>>2];C=N[b+84>>2];D=N[b+104>>2];E=N[b+72>>2];F=N[b+88>>2];J[e+236>>2]=0;N[e+232>>2]=Q(D*f)+Q(Q(E*k)+Q(h*F));N[e+228>>2]=Q(t*f)+Q(Q(u*k)+Q(h*C));N[e+224>>2]=Q(j*f)+Q(Q(m*k)+Q(h*s));Ue(e+80|0,J[a+28>>2],e+240|0);Ue(e- -64|0,J[a+32>>2],e+224|0);J[e+60>>2]=0;f=N[e+88>>2];h=N[e+80>>2];j=N[e+84>>2];k=Q(Q(Q(f*H)+Q(Q(h*_)+Q(j*I)))+W);N[e+56>>2]=k;s=Q(Q(Q(f*L)+Q(Q(h*$)+Q(j*M)))+X);N[e+52>>2]=s;t=Q(Q(Q(f*aa)+Q(Q(h*ca)+Q(j*ba)))+Z);N[e+48>>2]=t;J[e+44>>2]=0;f=N[e+72>>2];h=N[e+64>>2];m=N[e+68>>2];j=Q(Q(Q(f*v)+Q(Q(h*R)+Q(m*w)))+N[e+152>>2]);N[e+40>>2]=j;u=Q(Q(Q(f*x)+Q(Q(h*S)+Q(m*G)))+O);N[e+36>>2]=u;f=Q(Q(Q(f*T)+Q(Q(h*V)+Q(m*U)))+P);N[e+32>>2]=f;if(l){J[e+40>>2]=0;J[e+56>>2]=0;j=Q(0);k=Q(0)}J[e+28>>2]=0;h=Q(k-j);N[e+24>>2]=h;f=Q(t-f);N[e+16>>2]=f;k=Q(s-u);N[e+20>>2]=k;f=Q(Q(N[a+12>>2]*h)+Q(Q(N[a+4>>2]*f)+Q(k*N[a+8>>2])));if(!(!(f>Q(0))|!(Q(f*f)>Q(i*N[b+128>>2])))){J[a+68>>2]=10;break c}if(nl(J[a+24>>2],e+16|0)){J[a+68>>2]=1;break c}f=Q(i-f);if(f<=Q(i*Q(9.999999974752427e-7))){J[a+68>>2]=f<=Q(0)?2:11;break c}rl(J[a+24>>2],e+16|0,e+48|0,e+32|0);d:{if(!ol(J[a+24>>2],e)){l=3;break d}f=N[e+8>>2];h=Q(f*f);f=N[e>>2];j=Q(f*f);f=N[e+4>>2];f=Q(h+Q(j+Q(f*f)));if(f<Q(9.999999974752427e-7)){l=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=l;l=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=l;l=6;break d}if(Q(i-f)<=Q(i*Q(1.1920928955078125e-7))){l=12;i=f;break d}n=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=n;n=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=n;n=J[a+64>>2];J[a+64>>2]=n+1;if((n|0)>1e3){break b}if(J[J[a+24>>2]>>2]==4){J[a+68>>2]=13;break b}i=f;continue}break}J[a+68>>2]=l}ml(J[a+24>>2],e+240|0,e+224|0);l=J[g+12>>2];J[e+264>>2]=J[g+8>>2];J[e+268>>2]=l;l=J[g+4>>2];J[e+256>>2]=J[g>>2];J[e+260>>2]=l;f=N[a+12>>2];h=N[a+4>>2];k=N[a+8>>2];j=Q(Q(f*f)+Q(Q(h*h)+Q(k*k)));if(+j<1e-4){J[a+68>>2]=5}if(j>Q(1.4210854715202004e-14)){j=Q(Q(1)/Q(Y(j)));N[e+256>>2]=j*N[e+256>>2];N[e+260>>2]=j*N[e+260>>2];N[e+264>>2]=j*N[e+264>>2];m=Q(Y(i));i=Q(o/m);N[e+240>>2]=N[e+240>>2]-Q(i*h);N[e+244>>2]=N[e+244>>2]-Q(i*k);N[e+248>>2]=N[e+248>>2]-Q(i*f);i=Q(p/m);N[e+224>>2]=Q(i*h)+N[e+224>>2];N[e+228>>2]=Q(i*k)+N[e+228>>2];N[e+232>>2]=Q(i*f)+N[e+232>>2];y=1;J[a+60>>2]=1;f=Q(Q(Q(1)/j)-r);break a}J[a+60>>2]=2}f=Q(0)}l=J[a+20>>2];da=!l;n=1;e:{if(!J[a+72>>2]){break e}n=1;if(!l){break e}n=1;if(!J[a+68>>2]){break e}n=!(+Q(r+f)<.01)}f:{g:{h:{if(da|n&y){break h}n=!y;J[7716]=J[7716]+1;J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=0;J[g+4>>2]=0;if(ia[J[J[l>>2]+8>>2]](l,J[a+24>>2],J[a+28>>2],J[a+32>>2],e+160|0,e+96|0,g,e+80|0,e- -64|0,d)|0){j=Q(0);l=9;h=N[e+72>>2];r=N[e+88>>2];o=Q(h-r);m=N[e+64>>2];v=N[e+80>>2];i=Q(m-v);w=N[e+68>>2];x=N[e+84>>2];p=Q(w-x);k=Q(Q(o*o)+Q(Q(i*i)+Q(p*p)));if(k<=Q(1.4210854715202004e-14)){j=N[a+16>>2];o=N[a+12>>2];i=N[a+4>>2];p=N[a+8>>2];k=Q(Q(o*o)+Q(Q(i*i)+Q(p*p)))}i:{if(!(k>Q(1.4210854715202004e-14))){break i}l=8;h=Q(r-h);q=Q(h*h);h=Q(v-m);m=Q(h*h);h=Q(x-w);h=Q(-Q(Y(Q(q+Q(m+Q(h*h))))));if(!(n|h<f)){break i}d=J[e+92>>2];J[e+248>>2]=J[e+88>>2];J[e+252>>2]=d;d=J[e+76>>2];J[e+232>>2]=J[e+72>>2];J[e+236>>2]=d;d=J[e+84>>2];J[e+240>>2]=J[e+80>>2];J[e+244>>2]=d;d=J[e+68>>2];J[e+224>>2]=J[e+64>>2];J[e+228>>2]=d;N[e+268>>2]=j;f=Q(Q(1)/Q(Y(k)));N[e+264>>2]=o*f;N[e+260>>2]=p*f;N[e+256>>2]=i*f;J[a+60>>2]=3;f=h;break g}J[a+60>>2]=l;if(y){break g}break f}h=N[a+12>>2];k=N[a+4>>2];j=N[a+8>>2];if(!(Q(Q(h*h)+Q(Q(k*k)+Q(j*j)))>Q(0))){break h}i=Q(N[e+88>>2]-N[e+72>>2]);q=Q(i*i);i=Q(N[e+80>>2]-N[e+64>>2]);m=Q(i*i);i=Q(N[e+84>>2]-N[e+68>>2]);i=Q(Q(Y(Q(q+Q(m+Q(i*i)))))-r);if(n|i<f){d=J[e+92>>2];J[e+248>>2]=J[e+88>>2];J[e+252>>2]=d;d=J[e+76>>2];J[e+232>>2]=J[e+72>>2];J[e+236>>2]=d;N[e+248>>2]=N[e+248>>2]-Q(o*h);N[e+232>>2]=Q(p*h)+N[e+232>>2];d=J[e+68>>2];J[e+224>>2]=J[e+64>>2];J[e+228>>2]=d;d=J[e+84>>2];J[e+240>>2]=J[e+80>>2];J[e+244>>2]=d;N[e+224>>2]=Q(p*k)+N[e+224>>2];N[e+228>>2]=Q(p*j)+N[e+228>>2];N[e+240>>2]=N[e+240>>2]-Q(o*k);N[e+244>>2]=N[e+244>>2]-Q(o*j);d=J[g+12>>2];J[e+264>>2]=J[g+8>>2];J[e+268>>2]=d;d=J[g+4>>2];J[e+256>>2]=J[g>>2];J[e+260>>2]=d;h=N[e+264>>2];k=N[e+256>>2];j=N[e+260>>2];f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(k*k)+Q(j*j))))));N[e+264>>2]=h*f;N[e+260>>2]=j*f;N[e+256>>2]=k*f;J[a+60>>2]=6;f=i;break g}J[a+60>>2]=5}if(!y){break f}}if(!(N[b+128>>2]>Q(f*f)?1:f<Q(0))){break f}j:{if(!J[a+76>>2]){break j}b=J[a+28>>2];d=e+80|0;l=e- -64|0;ia[J[J[b>>2]+8>>2]](b,e+160|0,d,l);i=N[e+88>>2];h=N[e+72>>2];k=N[e+80>>2];j=N[e+64>>2];o=N[e+84>>2];p=N[e+68>>2];b=J[a+32>>2];ia[J[J[b>>2]+8>>2]](b,e+96|0,d,l);q=Q(Q(Q(h+i)*Q(.5))-Q(Q(N[e+88>>2]+N[e+72>>2])*Q(.5)));i=N[e+264>>2];h=N[e+256>>2];j=Q(Q(Q(Q(j+k)*Q(.5))-Q(Q(N[e+80>>2]+N[e+64>>2])*Q(.5)))*h);k=N[e+260>>2];if(!(Q(Q(q*i)+Q(j+Q(Q(Q(Q(p+o)*Q(.5))-Q(Q(N[e+84>>2]+N[e+68>>2])*Q(.5)))*k)))<Q(0))){break j}N[e+264>>2]=-i;N[e+260>>2]=-k;N[e+256>>2]=-h}b=J[e+260>>2];J[g>>2]=J[e+256>>2];J[g+4>>2]=b;b=J[e+268>>2];J[g+8>>2]=J[e+264>>2];J[g+12>>2]=b;N[a+56>>2]=f;J[e+92>>2]=0;N[e+88>>2]=A+N[e+232>>2];N[e+84>>2]=z+N[e+228>>2];N[e+80>>2]=B+N[e+224>>2];ia[J[J[c>>2]+16>>2]](c,e+256|0,e+80|0,f)}ga=e+272|0}function ll(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=0,s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=0,L=0,M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0,V=0,W=0,X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0);l=ga+-64|0;ga=l;J[l+52>>2]=0;J[l+44>>2]=0;J[l+48>>2]=0;H[l+56|0]=1;h=J[d+4>>2];if((h|0)>0){J[8369]=J[8369]+1;J[l+52>>2]=ia[J[6782]](h<<4,16);H[l+56|0]=1;J[l+48>>2]=h}r=J[b+28>>2];a:{if((r|0)<=0){break a}w=N[c+40>>2];y=N[c+36>>2];v=N[c+24>>2];A=N[c+20>>2];L=J[b+36>>2];B=N[a+8>>2];z=N[a+4>>2];D=N[a>>2];E=N[c+32>>2];M=N[c+16>>2];O=N[c+8>>2];R=N[c+4>>2];C=N[c>>2];p=Q(3.4028234663852886e38);i=-1;while(1){h=L+P(m,36)|0;q=N[h+28>>2];s=N[h+20>>2];u=N[h+24>>2];q=Q(Q(Q(Q(w*q)+Q(Q(E*s)+Q(u*y)))*B)+Q(Q(Q(Q(O*q)+Q(Q(C*s)+Q(u*R)))*D)+Q(Q(Q(v*q)+Q(Q(M*s)+Q(u*A)))*z)));h=q<p;p=h?q:p;i=h?m:i;m=m+1|0;if((r|0)!=(m|0)){continue}break}if((i|0)<0){break a}F=J[b+36>>2]+P(i,36)|0;V=J[F+4>>2];b:{if((V|0)<=0){h=d;break b}r=l+40|0;L=0;while(1){h=L;L=h+1|0;W=(V|0)==(L|0);j=J[b+16>>2];i=J[F+12>>2];m=j+(J[i+((W?0:L)<<2)>>2]<<4)|0;C=N[m+8>>2];S=N[m>>2];T=N[m+4>>2];h=j+(J[i+(h<<2)>>2]<<4)|0;p=N[h+8>>2];q=N[h>>2];s=N[h+4>>2];aa=N[c+56>>2];ba=N[c+48>>2];ca=N[c+52>>2];u=N[c+40>>2];w=N[c+32>>2];y=N[c+36>>2];v=N[F+28>>2];A=N[c+8>>2];B=N[F+20>>2];z=N[c>>2];D=N[F+24>>2];E=N[c+4>>2];M=N[c+24>>2];O=N[c+16>>2];R=N[c+20>>2];J[l+36>>2]=0;C=Q(p-C);S=Q(q-S);T=Q(s-T);X=Q(Q(A*C)+Q(Q(z*S)+Q(E*T)));Y=Q(Q(M*v)+Q(Q(O*B)+Q(R*D)));Z=Q(Q(A*v)+Q(Q(z*B)+Q(E*D)));_=Q(Q(M*C)+Q(Q(O*S)+Q(T*R)));$=Q(Q(X*Y)-Q(Z*_));N[l+32>>2]=-$;C=Q(Q(u*C)+Q(Q(w*S)+Q(T*y)));v=Q(Q(u*v)+Q(Q(w*B)+Q(y*D)));B=Q(Q(C*Z)-Q(v*X));N[l+28>>2]=-B;v=Q(-Q(Q(_*v)-Q(Y*C)));N[l+24>>2]=v;h=r;B=Q(-Q(Q(Q(Q(ba+Q(Q(p*A)+Q(Q(q*z)+Q(s*E))))*v)-Q(Q(ca+Q(Q(p*M)+Q(Q(q*O)+Q(s*R))))*B))-Q(Q(aa+Q(Q(p*u)+Q(Q(q*w)+Q(s*y))))*$)));G=0;r=d;c:{U=J[d+4>>2];if((U|0)<2){break c}z=N[l+32>>2];i=J[r+12>>2];d=(i+(U<<4)|0)-16|0;q=N[d+8>>2];D=N[l+24>>2];s=N[d>>2];u=N[d+4>>2];E=N[l+28>>2];p=Q(Q(Q(z*q)+Q(Q(D*s)+Q(u*E)))+B);while(1){d=(G<<4)+i|0;w=N[d+8>>2];y=N[d>>2];v=N[d+4>>2];A=Q(Q(Q(z*w)+Q(Q(D*y)+Q(v*E)))+B);z=N[d+12>>2];d:{e:{if(p<Q(0)){if(A<Q(0)){d=J[h+4>>2];f:{if((d|0)!=J[h+8>>2]){break f}t=d?d<<1:1;if((t|0)<=(d|0)){break f}g:{if(!t){m=0;break g}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}h:{if((d|0)<=0){break h}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break h}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;N[d+12>>2]=z;N[d+8>>2]=w;N[d+4>>2]=v;N[d>>2]=y;break e}p=Q(p/Q(p-A));q=Q(Q(Q(w-q)*p)+q);u=Q(Q(Q(v-u)*p)+u);p=Q(Q(Q(y-s)*p)+s);d=J[h+4>>2];i:{if((d|0)!=J[h+8>>2]){break i}t=d?d<<1:1;if((t|0)<=(d|0)){break i}j:{if(!t){m=0;break j}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}k:{if((d|0)<=0){break k}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break k}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;J[d+12>>2]=0;N[d+8>>2]=q;N[d+4>>2]=u;N[d>>2]=p;break e}if(!(A<Q(0))){break d}p=Q(p/Q(p-A));q=Q(Q(Q(w-q)*p)+q);u=Q(Q(Q(v-u)*p)+u);p=Q(Q(Q(y-s)*p)+s);d=J[h+4>>2];l:{if((d|0)!=J[h+8>>2]){break l}t=d?d<<1:1;if((t|0)<=(d|0)){break l}m:{if(!t){m=0;break m}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}n:{if((d|0)<=0){break n}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break n}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;J[d+12>>2]=0;N[d+8>>2]=q;N[d+4>>2]=u;N[d>>2]=p;d=J[h+4>>2]+1|0;J[h+4>>2]=d;o:{if(J[h+8>>2]!=(d|0)){break o}t=d?d<<1:1;if((t|0)<=(d|0)){break o}p:{if(!t){m=0;break p}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}q:{if((d|0)<=0){break q}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break q}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;N[d+12>>2]=z;N[d+8>>2]=w;N[d+4>>2]=v;N[d>>2]=y}J[h+4>>2]=J[h+4>>2]+1}G=G+1|0;if((U|0)==(G|0)){break c}z=N[l+32>>2];E=N[l+28>>2];D=N[l+24>>2];i=J[r+12>>2];p=A;q=w;u=v;s=y;continue}}d=J[r+4>>2];r:{if((d|0)>=0){break r}if(J[r+8>>2]<0){m=J[r+12>>2];if(!(m?!m|!K[r+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](m)}H[r+16|0]=1;J[r+8>>2]=0;J[r+12>>2]=0}i=0;m=d;G=0-d&3;if(G){while(1){t=J[l+12>>2];j=J[r+12>>2]+(m<<4)|0;J[j>>2]=J[l+8>>2];J[j+4>>2]=t;t=J[l+20>>2];J[j+8>>2]=J[l+16>>2];J[j+12>>2]=t;m=m+1|0;i=i+1|0;if((G|0)!=(i|0)){continue}break}}if(d>>>0>4294967292){break r}while(1){j=J[l+12>>2];d=m<<4;i=d+J[r+12>>2]|0;J[i>>2]=J[l+8>>2];J[i+4>>2]=j;j=J[l+20>>2];J[i+8>>2]=J[l+16>>2];J[i+12>>2]=j;j=J[l+20>>2];i=d+J[r+12>>2]|0;J[i+24>>2]=J[l+16>>2];J[i+28>>2]=j;j=J[l+12>>2];J[i+16>>2]=J[l+8>>2];J[i+20>>2]=j;j=J[l+20>>2];i=d+J[r+12>>2]|0;J[i+40>>2]=J[l+16>>2];J[i+44>>2]=j;j=J[l+12>>2];J[i+32>>2]=J[l+8>>2];J[i+36>>2]=j;i=J[l+20>>2];d=d+J[r+12>>2]|0;J[d+56>>2]=J[l+16>>2];J[d+60>>2]=i;i=J[l+12>>2];J[d+48>>2]=J[l+8>>2];J[d+52>>2]=i;m=m+4|0;if(m){continue}break}}J[r+4>>2]=0;d=h;if(!W){continue}break}}i=J[h+4>>2];if((i|0)<=0){break a}p=N[F+28>>2];q=N[F+20>>2];s=N[F+24>>2];u=Q(Q(N[c+40>>2]*p)+Q(Q(N[c+32>>2]*q)+Q(s*N[c+36>>2])));w=Q(Q(N[c+8>>2]*p)+Q(Q(N[c>>2]*q)+Q(s*N[c+4>>2])));p=Q(Q(N[c+24>>2]*p)+Q(Q(N[c+16>>2]*q)+Q(s*N[c+20>>2])));q=Q(N[F+32>>2]-Q(Q(u*N[c+56>>2])+Q(Q(w*N[c+48>>2])+Q(p*N[c+52>>2]))));r=0;while(1){b=J[h+12>>2]+(r<<4)|0;s=Q(q+Q(Q(u*N[b+8>>2])+Q(Q(w*N[b>>2])+Q(p*N[b+4>>2]))));s=e>=s?e:s;if(s<=f){c=J[b+12>>2];J[l+32>>2]=J[b+8>>2];J[l+36>>2]=c;c=J[b+4>>2];J[l+24>>2]=J[b>>2];J[l+28>>2]=c;ia[J[J[g>>2]+16>>2]](g,a,l+24|0,s);i=J[h+4>>2]}r=r+1|0;if((r|0)<(i|0)){continue}break}}a=J[l+52>>2];if(!(a?!a|!K[l+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=l- -64|0}function GA(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=Q(0),D=0,E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=Q(0),O=Q(0),S=0,T=0,U=0,V=0,W=0,X=Q(0),Z=0,_=Q(0),$=Q(0),aa=Q(0),ba=0,ca=0,da=Q(0),ea=Q(0),fa=Q(0),ga=Q(0),ha=Q(0),ia=Q(0);V=J[a+28>>2];k=V;E=N[k+344>>2];W=J[a+32>>2];q=W;C=N[q+344>>2];h=Q(E+C);u=h>Q(0)?Q(C/h):Q(.5);v=Q(Q(1)-u);w=N[a+920>>2];x=N[a+904>>2];d=N[a+856>>2];i=N[a+840>>2];I=N[a+888>>2];r=N[a+824>>2];t=J[b+24>>2];Z=K[a+49|0];a:{if(Z){c=Q(Q(u*d)+Q(v*w));s=Q(Q(u*r)+Q(v*I));h=Q(Q(u*i)+Q(v*x));p=Q(Q(1)/Q(Y(Q(Q(c*c)+Q(Q(s*s)+Q(h*h))))));h=Q(h*p);s=Q(s*p);p=Q(c*p);if(Q(R(p))>Q(.7071067690849304)){c=Q(Q(h*h)+Q(p*p));m=Q(Q(1)/Q(Y(c)));l=Q(m*Q(-p));y=Q(s*l);n=Q(h*m);z=Q(n*Q(-s));c=Q(c*m);break a}g=Q(Q(s*s)+Q(h*h));c=Q(Q(1)/Q(Y(g)));y=Q(g*c);g=Q(c*Q(-h));z=Q(p*g);l=Q(s*c);c=Q(l*Q(-p));break a}y=N[a+864>>2];z=N[a+848>>2];n=N[a+860>>2];l=N[a+844>>2];g=N[a+828>>2];s=r;h=i;p=d;c=N[a+832>>2]}ca=K[a+180|0];da=N[a+880>>2];ea=N[a+944>>2];fa=N[a+876>>2];ga=N[a+940>>2];ha=N[a+872>>2];ia=N[a+936>>2];o=J[b+12>>2];N[o+8>>2]=n;N[o+4>>2]=l;N[o>>2]=g;e=t<<2;N[e+o>>2]=c;j=e+8|0;N[j+o>>2]=y;D=e+4|0;N[D+o>>2]=z;f=J[b+20>>2];M=Q(-n);N[f+8>>2]=M;G=Q(-l);N[f+4>>2]=G;O=Q(-g);N[f>>2]=O;X=Q(-y);N[f+j>>2]=X;_=Q(-z);N[f+D>>2]=_;$=Q(-c);N[f+e>>2]=$;m=N[a+280>>2];D=J[b+28>>2];j=D;T=J[a+300>>2];if(!(T&128)){m=Q(m*N[b+4>>2])}m=Q(m*N[b>>2]);aa=Q(Q(r*x)-Q(I*i));i=Q(Q(i*w)-Q(x*d));d=Q(Q(d*I)-Q(w*r));N[j>>2]=m*Q(Q(aa*n)+Q(Q(i*g)+Q(d*l)));N[e+D>>2]=m*Q(Q(aa*y)+Q(Q(i*c)+Q(d*z)));if(T&64){e=J[b+32>>2];N[e>>2]=N[a+292>>2];N[e+(t<<2)>>2]=N[a+292>>2]}ba=C<Q(1.1920928955078125e-7)|E<Q(1.1920928955078125e-7);U=P(t,3);j=t<<1;d=N[q+60>>2];i=N[q+56>>2];m=N[k+60>>2];r=N[k+56>>2];w=N[q+52>>2];x=N[k+52>>2];b:{if(Z){d=Q(N[a+944>>2]-d);l=Q(N[a+936>>2]-w);n=Q(N[a+940>>2]-i);c=Q(Q(d*p)+Q(Q(l*s)+Q(h*n)));g=Q(p*c);y=Q(d-g);m=Q(N[a+880>>2]-m);z=Q(N[a+872>>2]-x);r=Q(N[a+876>>2]-r);d=Q(Q(m*p)+Q(Q(z*s)+Q(h*r)));C=Q(p*d);i=Q(N[a+1080>>2]-N[a+1032>>2]);g=Q(Q(C+Q(p*i))-g);w=Q(y-Q(v*g));O=n;n=Q(h*c);G=Q(O-n);E=Q(h*d);n=Q(Q(E+Q(h*i))-n);x=Q(G-Q(v*n));c=Q(s*c);l=Q(l-c);d=Q(s*d);c=Q(Q(d+Q(s*i))-c);I=Q(l-Q(v*c));i=Q(m-C);C=Q(i+Q(u*g));r=Q(r-E);E=Q(r+Q(u*n));g=Q(z-d);M=Q(g+Q(u*c));c=Q(Q(u*y)+Q(v*i));g=Q(Q(u*l)+Q(v*g));d=Q(Q(u*G)+Q(v*r));i=Q(Q(c*c)+Q(Q(g*g)+Q(d*d)));c:{if(i>Q(1.1920928955078125e-7)){n=c;c=Q(Q(1)/Q(Y(i)));n=Q(n*c);l=Q(d*c);g=Q(g*c);break c}n=N[a+860>>2];l=N[a+844>>2];g=N[a+828>>2]}A=j<<2;e=A+o|0;N[e+8>>2]=Q(M*l)-Q(g*E);N[e+4>>2]=Q(C*g)-Q(n*M);N[e>>2]=Q(E*n)-Q(l*C);N[f+A>>2]=-Q(Q(x*n)-Q(l*w));B=(j|1)<<2;N[B+f>>2]=-Q(Q(w*g)-Q(n*I));F=j+2<<2;N[F+f>>2]=-Q(Q(I*l)-Q(g*x));z=Q(Q(p*g)-Q(n*s));c=Q(Q(h*n)-Q(l*p));G=Q(Q(I*z)-Q(c*x));y=Q(Q(s*l)-Q(g*h));d=Q(Q(w*c)-Q(y*I));O=Q(Q(x*y)-Q(z*w));i=Q(Q(M*z)-Q(c*E));r=Q(Q(C*c)-Q(y*M));m=Q(Q(E*y)-Q(z*C));if(K[a+297|0]!=0&ba){i=Q(u*i);r=Q(u*r);m=Q(u*m);G=Q(v*G);O=Q(v*O);d=Q(v*d)}q=U<<2;e=q+o|0;N[e+8>>2]=i;N[e+4>>2]=r;N[e>>2]=m;S=q+8|0;N[S+f>>2]=-G;L=q+4|0;N[f+L>>2]=-d;N[f+q>>2]=-O;k=J[b+8>>2];N[A+k>>2]=g;N[k+B>>2]=l;N[k+F>>2]=n;e=k+q|0;N[e+8>>2]=y;N[e+4>>2]=z;N[e>>2]=c;e=J[b+16>>2];N[A+e>>2]=-g;N[e+B>>2]=-l;N[e+F>>2]=-n;N[e+S>>2]=-y;N[e+L>>2]=-z;N[e+q>>2]=-c;i=Q(0);r=Q(0);m=Q(0);break b}q=j<<2;r=Q(i-r);m=Q(d-m);d=Q(Q(r*n)-Q(l*m));N[q+o>>2]=u*d;B=q|4;i=Q(w-x);w=Q(Q(m*g)-Q(n*i));N[B+o>>2]=u*w;F=q+8|0;x=Q(Q(i*l)-Q(g*r));N[F+o>>2]=u*x;N[f+q>>2]=v*d;N[f+B>>2]=v*w;N[f+F>>2]=v*x;A=U<<2;S=A+8|0;d=Q(Q(i*z)-Q(c*r));N[S+o>>2]=u*d;L=A+4|0;w=Q(Q(m*c)-Q(y*i));N[L+o>>2]=u*w;x=Q(Q(r*y)-Q(z*m));N[o+A>>2]=u*x;N[f+S>>2]=v*d;N[f+L>>2]=v*w;N[f+A>>2]=v*x;k=J[b+8>>2];N[q+k>>2]=g;N[k+B>>2]=l;N[k+F>>2]=n;N[k+S>>2]=y;N[k+L>>2]=z;N[k+A>>2]=c;e=J[b+16>>2];N[q+e>>2]=O;N[e+B>>2]=G;N[e+F>>2]=M;N[e+S>>2]=X;N[e+L>>2]=_;N[e+A>>2]=$;I=Q(0);x=Q(0);w=Q(0);M=Q(0);E=Q(0);C=Q(0)}d=N[a+264>>2];j=j<<2;q=j+D|0;if(!(T&32)){d=Q(d*N[b+4>>2])}d=Q(d*N[b>>2]);O=n;n=Q(ea-da);X=g;g=Q(ia-ha);G=Q(ga-fa);N[q>>2]=d*Q(Q(O*n)+Q(Q(X*g)+Q(G*l)));q=U<<2;N[q+D>>2]=d*Q(Q(y*n)+Q(Q(c*g)+Q(G*z)));if(T&16){L=j;j=J[b+32>>2];N[L+j>>2]=N[a+276>>2];N[j+q>>2]=N[a+276>>2]}g=ca?Q(1):Q(-1);d:{e:{U=K[a+296|0];f:{if(U){c=Q(g*N[a+1032>>2]);q=c>Q(0)?2:1;j=K[a+1096|0];break f}if(!K[a+1096|0]){break e}q=0;c=Q(0);j=1}F=t<<4;N[F+k>>2]=s;t=t<<2;S=t|1;A=S<<2;N[A+k>>2]=h;L=k;k=t|2;B=k<<2;N[L+B>>2]=p;N[e+F>>2]=-s;N[e+A>>2]=-h;N[e+B>>2]=-p;F=(U|0)!=0;e=f+(k<<2)|0;g:{h:{if(Z){if(ba){break g}A=t<<2;N[A+o>>2]=Q(E*p)-Q(h*C);B=S<<2;N[B+o>>2]=Q(C*s)-Q(p*M);N[o+(k<<2)>>2]=Q(M*h)-Q(s*E);N[f+A>>2]=-Q(Q(x*p)-Q(h*w));N[f+B>>2]=-Q(Q(w*s)-Q(p*I));d=Q(-Q(Q(I*h)-Q(s*x)));break h}k=t<<2;d=Q(Q(r*p)-Q(h*m));N[k+o>>2]=u*d;m=Q(Q(m*s)-Q(p*i));N[o+A>>2]=u*m;i=Q(Q(i*h)-Q(s*r));N[o+B>>2]=u*i;N[f+k>>2]=v*d;N[f+A>>2]=v*m;d=Q(v*i)}N[e>>2]=d}d=N[a+188>>2];i=N[a+184>>2];f=t<<2;J[f+D>>2]=0;e=J[b+36>>2];J[f+e>>2]=0;k=J[b+40>>2];J[f+k>>2]=0;r=N[(T&512?a+232|0:b+4|0)>>2];if(!(!j|F&d==i)){if(T&1){N[J[b+32>>2]+(t<<2)>>2]=N[a+212>>2]}m=od(N[a+1080>>2],N[a+184>>2],N[a+188>>2],N[a+1100>>2],Q(r*N[b>>2]));D=J[b+28>>2];j=t<<2;e=D+j|0;N[e>>2]=N[e>>2]-Q(Q(m*g)*N[a+1100>>2]);e=J[b+36>>2];f=j+e|0;N[f>>2]=N[f>>2]-Q(N[a+1104>>2]*N[b>>2]);k=J[b+40>>2];j=j+k|0;N[j>>2]=Q(N[a+1104>>2]*N[b>>2])+N[j>>2]}f=5;if(!U){break d}o=t<<2;j=o+D|0;N[j>>2]=Q(Q(r*N[b>>2])*c)+N[j>>2];if(H[a+301|0]&1){N[o+J[b+32>>2]>>2]=N[a+244>>2]}k=(t<<2)+k|0;i:{j:{if(d==i){J[(t<<2)+e>>2]=-8388609;break j}e=(t<<2)+e|0;if((q|0)==1){J[e>>2]=-8388609;q=1;c=Q(0);break i}J[e>>2]=0}c=Q(3.4028234663852886e38)}N[k>>2]=c;c=Q(Q(1)-N[a+240>>2]);k:{if(!(c>Q(0)|c<Q(0))){break k}d=Q(R(c));c=Q(g*Q(Q(Q(N[V+320>>2]*p)+Q(Q(N[V+312>>2]*s)+Q(h*N[V+316>>2])))-Q(Q(N[W+320>>2]*p)+Q(Q(N[W+312>>2]*s)+Q(h*N[W+316>>2])))));l:{if((q|0)==1){if(!(c<Q(0))){break k}l=Q(c*Q(-d));if(l>N[j>>2]){break l}break k}if(!(c>Q(0))){break k}l=Q(c*Q(-d));if(!(l<N[j>>2])){break k}}N[j>>2]=l}N[j>>2]=N[a+232>>2]*N[j>>2];break d}f=4}o=K[a+297|0];m:{n:{if(o){k=!K[a+1112|0];l=N[a+1088>>2];e=l>Q(0)?1:2;break n}if(!K[a+1112|0]){break m}k=0;l=Q(0);e=0}t=J[b+12>>2];j=P(J[b+24>>2],f);f=j<<2;N[t+f>>2]=s;T=f+8|0;N[T+t>>2]=p;q=f+4|0;N[q+t>>2]=h;t=J[b+20>>2];N[t+T>>2]=-p;N[q+t>>2]=-h;N[f+t>>2]=-s;f=J[a+300>>2];r=N[(f&2048?a+248|0:b+4|0)>>2];g=N[a+192>>2];i=N[a+196>>2];if(!(k|(o|0)!=0&g==i)){d=i;c=g;if(f&4){N[J[b+32>>2]+(j<<2)>>2]=N[a+228>>2];d=N[a+196>>2];c=N[a+192>>2]}c=od(N[a+1084>>2],c,d,N[a+1116>>2],Q(r*N[b>>2]));D=J[b+28>>2];f=j<<2;N[D+f>>2]=c*N[a+1116>>2];N[f+J[b+36>>2]>>2]=N[b>>2]*Q(-N[a+1120>>2]);N[f+J[b+40>>2]>>2]=N[a+1120>>2]*N[b>>2]}if(!o){break m}o=j<<2;f=o+D|0;N[f>>2]=Q(Q(r*N[b>>2])*l)+N[f>>2];if(K[a+301|0]&4){N[o+J[b+32>>2]>>2]=N[a+260>>2]}o:{if(g==i){J[J[b+36>>2]+(j<<2)>>2]=-8388609;c=Q(3.4028234663852886e38);break o}o=J[b+36>>2]+(j<<2)|0;if((e|0)==1){J[o>>2]=0;e=1;c=Q(3.4028234663852886e38);break o}J[o>>2]=-8388609;c=Q(0)}N[J[b+40>>2]+(j<<2)>>2]=c;c=Q(Q(1)-N[a+256>>2]);p:{if(!(c>Q(0)|c<Q(0))){break p}c=Q(R(c));b=J[a+28>>2];g=Q(Q(N[b+336>>2]*p)+Q(Q(N[b+328>>2]*s)+Q(h*N[b+332>>2])));b=J[a+32>>2];h=Q(g-Q(Q(N[b+336>>2]*p)+Q(Q(N[b+328>>2]*s)+Q(h*N[b+332>>2]))));q:{if((e|0)==1){if(!(h<Q(0))){break p}h=Q(h*Q(-c));if(h>N[f>>2]){break q}break p}if(!(h>Q(0))){break p}h=Q(h*Q(-c));if(!(h<N[f>>2])){break p}}N[f>>2]=h}N[f>>2]=N[a+248>>2]*N[f>>2]}}function OD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=ga-48|0;ga=h;e=N[a+40>>2];f=N[a+24>>2];j=Q(Q(1)/N[a+116>>2]);k=N[a+56>>2];g=Q(Q(j*N[d+8>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;a:{if(R(m)<2147483648){o=~~m;break a}o=-2147483648}o=o+1|0;j=Q(Q(j*N[c+8>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;b:{if(R(m)<2147483648){l=~~m;break b}l=-2147483648}q=l-1|0;e=N[a+36>>2];f=N[a+20>>2];j=Q(Q(1)/N[a+112>>2]);k=N[a+52>>2];g=Q(Q(j*N[d+4>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;c:{if(R(m)<2147483648){l=~~m;break c}l=-2147483648}r=l+1|0;j=Q(Q(j*N[c+4>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;d:{if(R(m)<2147483648){l=~~m;break d}l=-2147483648}s=l-1|0;e=N[a+32>>2];f=N[a+16>>2];j=Q(Q(1)/N[a+108>>2]);k=N[a+48>>2];g=Q(Q(j*N[d>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;e:{if(R(m)<2147483648){d=~~m;break e}d=-2147483648}d=d+1|0;j=Q(Q(j*N[c>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;f:{if(R(m)<2147483648){c=~~m;break f}c=-2147483648}c=c-1|0;l=J[a+68>>2]-1|0;p=J[a+64>>2]-1|0;g:{h:{switch(J[a+104>>2]){case 0:l=(o|0)<(l|0)?o:l;n=(q|0)>0?q:0;p=(p|0)>(r|0)?r:p;t=(s|0)>0?s:0;break g;case 1:l=(o|0)<(l|0)?o:l;n=(q|0)>0?q:0;p=(d|0)<(p|0)?d:p;t=(c|0)>0?c:0;break g;case 2:break h;default:break g}}l=(l|0)>(r|0)?r:l;n=(s|0)>0?s:0;p=(d|0)<(p|0)?d:p;t=(c|0)>0?c:0}if(!((p|0)<=(t|0)|(n|0)>=(l|0))){while(1){q=n&1;o=n+1|0;j=Q(o|0);k=Q(n|0);d=t;while(1){i:{j:{c=d;if(!(K[a+100|0]|(d+n&1?0:K[a+101|0])|(q?0:K[a+102|0]))){g=Q(ia[J[J[a>>2]+68>>2]](a,c,n));k:{l:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break k;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break k;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break k;default:break l}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,c,o));m:{n:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break m;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break m;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break m;default:break n}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];d=c+1|0;g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));o:{p:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break o;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break o;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break o;default:break p}}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));q:{r:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break q;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break q;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break q;default:break r}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));s:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break i;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break i;case 0:break s;default:break j}}e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break i}g=Q(ia[J[J[a>>2]+68>>2]](a,c,n));t:{u:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break t;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break t;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break t;default:break u}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];d=c+1|0;g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));v:{w:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break v;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break v;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break v;default:break w}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));x:{y:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break x;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break x;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break x;default:break y}}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));z:{A:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break z;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break z;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break z;default:break A}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,c,o));B:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break i;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break i;case 0:break B;default:break j}}e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break i}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);if((d|0)!=(p|0)){continue}break}n=o;if((l|0)!=(n|0)){continue}break}}ga=h+48|0}function bf(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=0,M=0,O=Q(0),R=Q(0),S=Q(0),T=Q(0);e=ga-704|0;ga=e;f=e+624|0;J[f+4>>2]=35;J[f+8>>2]=0;J[f>>2]=14268;J[f+44>>2]=1025758986;J[f+20>>2]=1065353216;J[f+24>>2]=0;J[f+12>>2]=1065353216;J[f+16>>2]=1065353216;J[f>>2]=13984;J[e+668>>2]=0;J[e+652>>2]=0;J[e+628>>2]=8;J[e+624>>2]=16132;f=J[c+12>>2];a:{m=J[c+4>>2];o=J[m+4>>2];if((o|0)<=19){J[e+616>>2]=0;J[e+620>>2]=0;J[e+448>>2]=6804;N[e+612>>2]=N[d+4>>2];H[e+420|0]=0;J[e+396>>2]=953267991;o=e+680|0;J[o+12>>2]=m;L=e+624|0;J[o+8>>2]=L;M=e+88|0;J[o+4>>2]=M;J[o>>2]=19004;y=e+72|0;J[y+12>>2]=m;J[y+8>>2]=L;J[y+4>>2]=M;J[y>>2]=18356;m=J[d+16>>2]&8?y:o;b:{if(!(ia[J[J[m>>2]+8>>2]](m,a,b,f,f,e+448|0)|0)){break b}g=N[e+588>>2];i=N[e+580>>2];h=N[e+584>>2];j=Q(Q(g*g)+Q(Q(i*i)+Q(h*h)));if(!(j>Q(9999999747378752e-20))){break b}k=N[e+612>>2];if(!(k<N[d+4>>2])){break b}l=g;g=Q(Q(1)/Q(Y(j)));N[e+588>>2]=l*g;N[e+584>>2]=h*g;N[e+580>>2]=i*g;a=J[c+8>>2];J[e+44>>2]=0;J[e+40>>2]=a;a=J[e+592>>2];J[e+56>>2]=J[e+588>>2];J[e+60>>2]=a;a=J[e+584>>2];J[e+48>>2]=J[e+580>>2];J[e+52>>2]=a;N[e+64>>2]=k;Q(ia[J[J[d>>2]+12>>2]](d,e+40|0,1))}break a}y=o-21|0;if(y>>>0<=8){u=N[f+20>>2];h=N[f+36>>2];r=N[f+24>>2];n=N[f+52>>2];j=N[f+56>>2];k=N[f+40>>2];s=N[f+32>>2];p=N[f+16>>2];l=N[f>>2];q=N[f+4>>2];t=N[f+48>>2];w=N[f+8>>2];i=N[a+52>>2];v=N[a+56>>2];g=N[a+48>>2];J[e+460>>2]=0;n=Q(-n);B=Q(r*n);x=Q(Q(B-Q(w*t))-Q(k*j));C=Q(v*k);D=Q(r*i);N[e+456>>2]=x+Q(C+Q(Q(g*w)+D));E=Q(u*n);z=Q(Q(E-Q(q*t))-Q(h*j));F=Q(v*h);G=Q(u*i);N[e+452>>2]=z+Q(F+Q(Q(g*q)+G));I=Q(p*n);O=Q(Q(I-Q(l*t))-Q(s*j));R=Q(v*s);S=Q(p*i);N[e+448>>2]=O+Q(R+Q(Q(g*l)+S));v=N[b+52>>2];n=N[b+56>>2];i=N[b+48>>2];J[e+52>>2]=0;A=x;x=Q(n*k);T=Q(i*w);w=Q(r*v);N[e+48>>2]=A+Q(x+Q(T+w));A=z;z=Q(n*h);r=Q(i*q);q=Q(u*v);N[e+44>>2]=A+Q(z+Q(r+q));n=Q(n*s);A=Q(i*l);l=Q(p*v);N[e+40>>2]=O+Q(n+Q(A+l));c:{switch(y|0){case 0:a=J[c+8>>2];c=e+88|0;o=e+448|0;y=e+40|0;Ag(c,o,y,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=6872;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];b=ga-16|0;ga=b;a=J[m+48>>2];J[b+8>>2]=c;J[b+4>>2]=a;J[b>>2]=12328;c=J[m+52>>2];a=ga-32|0;ga=a;J[a+24>>2]=0;J[a+28>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;d:{if(K[c+60|0]){um(c,b,o,y,a+16|0,a,J[c+56>>2]);break d}vm(c,b,o,y,a+16|0,a)}ga=a+32|0;ga=b+16|0;break a;case 4:a=J[c+8>>2];b=e+88|0;c=e+448|0;o=e+40|0;Ag(b,c,o,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=6872;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];ia[J[J[m>>2]+144>>2]](m,b,c,o);break a;default:break c}}u=N[f>>2];r=N[f+4>>2];j=Q(-j);A=Q(k*j);k=N[f+8>>2];t=Q(-t);p=Q(A+Q(Q(k*t)+B));N[e+688>>2]=Q(C+Q(Q(g*k)+D))+p;J[e+692>>2]=0;h=Q(Q(h*j)+Q(Q(r*t)+E));N[e+684>>2]=Q(F+Q(Q(g*r)+G))+h;A=Q(R+Q(Q(g*u)+S));g=Q(Q(s*j)+Q(Q(u*t)+I));N[e+680>>2]=A+g;J[e+84>>2]=0;N[e+80>>2]=Q(x+Q(Q(i*k)+w))+p;N[e+76>>2]=Q(z+Q(Q(i*r)+q))+h;N[e+72>>2]=Q(n+Q(Q(i*u)+l))+g;a=J[c+8>>2];Ag(e+88|0,e+680|0,e+72|0,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=7056;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];a=J[e+692>>2];J[e+32>>2]=J[e+688>>2];J[e+36>>2]=a;a=J[e+684>>2];J[e+24>>2]=J[e+680>>2];J[e+28>>2]=a;g=N[e+72>>2];if(g<N[e+24>>2]){N[e+24>>2]=g}i=N[e+76>>2];if(i<N[e+28>>2]){N[e+28>>2]=i}h=N[e+80>>2];if(h<N[e+32>>2]){N[e+32>>2]=h}j=N[e+84>>2];if(j<N[e+36>>2]){N[e+36>>2]=j}a=J[e+692>>2];J[e+16>>2]=J[e+688>>2];J[e+20>>2]=a;a=J[e+684>>2];J[e+8>>2]=J[e+680>>2];J[e+12>>2]=a;if(g>N[e+8>>2]){N[e+8>>2]=g}if(i>N[e+12>>2]){N[e+12>>2]=i}if(h>N[e+16>>2]){N[e+16>>2]=h}if(j>N[e+20>>2]){N[e+20>>2]=j}ia[J[J[m>>2]+64>>2]](m,e+88|0,e+24|0,e+8|0);break a}if((o|0)!=31){break a}o=J[m- -64>>2];c=J[c+8>>2];J[e+64>>2]=d;J[e+60>>2]=b;J[e+56>>2]=a;J[e+52>>2]=f;J[e+48>>2]=m;J[e+44>>2]=c;J[e+40>>2]=7244;if(o){g=N[f+20>>2];i=N[f+36>>2];h=N[f+24>>2];j=N[f+52>>2];q=N[a+52>>2];k=N[f+40>>2];s=N[f+56>>2];p=N[a+56>>2];w=N[f>>2];t=N[f+16>>2];u=N[f+32>>2];v=N[f+4>>2];l=N[f+8>>2];r=N[f+48>>2];n=N[a+48>>2];J[e+100>>2]=0;p=Q(p-s);x=l;l=Q(n-r);q=Q(q-j);N[e+96>>2]=Q(k*p)+Q(Q(x*l)+Q(h*q));N[e+92>>2]=Q(i*p)+Q(Q(v*l)+Q(q*g));N[e+88>>2]=Q(u*p)+Q(Q(w*l)+Q(q*t));p=N[b+52>>2];l=N[b+56>>2];q=N[f>>2];w=N[f+4>>2];v=N[f+8>>2];n=N[b+48>>2];J[e+460>>2]=0;x=k;k=Q(l-s);s=Q(n-r);l=h;h=Q(p-j);N[e+456>>2]=Q(x*k)+Q(Q(v*s)+Q(l*h));N[e+452>>2]=Q(i*k)+Q(Q(w*s)+Q(g*h));N[e+448>>2]=Q(u*k)+Q(Q(q*s)+Q(t*h));Vm(J[o>>2],e+88|0,e+448|0,e+40|0);break a}b=J[m+16>>2];if((b|0)<=0){break a}c=0;while(1){a=J[m+24>>2]+P(c,80)|0;d=J[a+64>>2];p=N[a+56>>2];l=N[a+48>>2];q=N[a+52>>2];w=N[a+32>>2];v=N[a>>2];n=N[a+16>>2];B=N[a+36>>2];x=N[a+4>>2];C=N[a+20>>2];D=N[a+40>>2];E=N[a+8>>2];z=N[a+24>>2];F=N[f+52>>2];G=N[f+56>>2];g=N[f+24>>2];i=N[f+20>>2];h=N[f+40>>2];j=N[f+36>>2];I=N[f+48>>2];k=N[f+8>>2];s=N[f>>2];t=N[f+4>>2];u=N[f+16>>2];r=N[f+32>>2];J[e+148>>2]=0;J[e+132>>2]=0;J[e+116>>2]=0;J[e+100>>2]=0;N[e+128>>2]=Q(D*h)+Q(Q(E*r)+Q(z*j));N[e+124>>2]=Q(B*h)+Q(Q(x*r)+Q(C*j));N[e+120>>2]=Q(w*h)+Q(Q(v*r)+Q(n*j));N[e+112>>2]=Q(D*g)+Q(Q(E*u)+Q(z*i));N[e+108>>2]=Q(B*g)+Q(Q(x*u)+Q(C*i));N[e+104>>2]=Q(w*g)+Q(Q(v*u)+Q(n*i));N[e+96>>2]=Q(D*k)+Q(Q(E*s)+Q(t*z));N[e+92>>2]=Q(B*k)+Q(Q(x*s)+Q(t*C));N[e+88>>2]=Q(w*k)+Q(Q(v*s)+Q(n*t));N[e+144>>2]=G+Q(Q(p*h)+Q(Q(l*r)+Q(j*q)));N[e+140>>2]=F+Q(Q(p*g)+Q(Q(l*u)+Q(i*q)));N[e+136>>2]=I+Q(Q(p*k)+Q(Q(l*s)+Q(t*q)));J[e+700>>2]=c;J[e+696>>2]=-1;J[e+688>>2]=J[e+44>>2];J[e+684>>2]=d;J[e+680>>2]=0;J[e+692>>2]=e+88;J[e+460>>2]=-65535;J[e+464>>2]=0;J[e+452>>2]=1065353216;J[e+456>>2]=0;J[e+472>>2]=c;J[e+448>>2]=7420;a=J[e+64>>2];J[e+468>>2]=a;N[e+452>>2]=N[a+4>>2];J[e+464>>2]=J[a+16>>2];bf(J[e+56>>2],J[e+60>>2],e+680|0,e+448|0);c=c+1|0;if((b|0)==(c|0)){break a}f=J[e+52>>2];m=J[e+48>>2];continue}}ga=e+704|0}function sp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=Q(0),v=0,w=0,x=0,y=Q(0),z=Q(0);t=ga-16|0;ga=t;J[t+12>>2]=a;J[t+8>>2]=b;J[t+4>>2]=c;j=J[t+12>>2];w=J[t+4>>2];a=0;v=J[t+8>>2];if((v|0)>=2){h=J[j+712>>2];b=P(h,h);m=ua((b|0)!=(b&1073741823)?-1:b<<2);if((h|0)>0){d=h&-2;f=h&1;while(1){c=P(a,h);k=(c+a<<2)+m|0;b=0;e=0;if((h|0)!=1){while(1){a:{if((a|0)!=(b|0)){J[(P(b,h)+a<<2)+m>>2]=2147483647;J[(b+c<<2)+m>>2]=2147483647;break a}J[k>>2]=0}g=b|1;b:{if((g|0)!=(a|0)){J[(P(h,g)+a<<2)+m>>2]=2147483647;J[(c+g<<2)+m>>2]=2147483647;break b}J[k>>2]=0}b=b+2|0;e=e+2|0;if((d|0)!=(e|0)){continue}break}}c:{if(!f){break c}if((a|0)!=(b|0)){J[(P(b,h)+a<<2)+m>>2]=2147483647;J[(b+c<<2)+m>>2]=2147483647;break c}J[k>>2]=0}a=a+1|0;if((h|0)!=(a|0)){continue}break}}a=J[j+732>>2];if((a|0)>0){c=J[j+720>>2];k=J[j+740>>2];b=0;while(1){e=k+P(b,52)|0;g=(J[e+12>>2]-c|0)/104|0;e=(J[e+8>>2]-c|0)/104|0;J[(P(g,h)+e<<2)+m>>2]=1;J[(g+P(e,h)<<2)+m>>2]=1;b=b+1|0;if((a|0)!=(b|0)){continue}break}}d:{e:{if((v|0)!=2){if((h|0)<=0){break d}while(1){n=P(h,i);c=0;while(1){a=c+1|0;if((a|0)<(h|0)){e=P(c,h);g=(e+i<<2)+m|0;b=a;while(1){k=J[g>>2]+J[(b+n<<2)+m>>2]|0;d=(b+e<<2)+m|0;if(k>>>0<M[d>>2]){J[(P(b,h)+c<<2)+m>>2]=k;J[d>>2]=k}b=b+1|0;if((h|0)!=(b|0)){continue}break}}c=a;if((a|0)!=(h|0)){continue}break}i=i+1|0;if((i|0)!=(h|0)){continue}break}break e}if(h){e=0;J[8369]=J[8369]+1;n=ia[J[6782]](P(h,20),16)|0;b=0;if(h-1>>>0>=3){k=h&2147483644;c=0;while(1){a=P(b,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|1,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|2,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|3,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;b=b+4|0;c=c+4|0;if((k|0)!=(c|0)){continue}break}}c=h&3;if(c){while(1){a=P(b,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;b=b+1|0;e=e+1|0;if((c|0)!=(e|0)){continue}break}}a=J[j+732>>2]}if((a|0)>0){k=0;while(1){a=J[j+740>>2]+P(k,52)|0;b=J[j+720>>2];p=(J[a+12>>2]-b|0)/104|0;r=(J[a+8>>2]-b|0)/104|0;e=P(r,20)+n|0;a=J[e+4>>2];f:{g:{if((a|0)<=0){break g}c=J[e+12>>2];b=0;while(1){if((p|0)!=J[c+(b<<2)>>2]){b=b+1|0;if((b|0)!=(a|0)){continue}break g}break}if((a|0)!=(b|0)){break f}}h:{if(J[e+8>>2]!=(a|0)){break h}q=a?a<<1:1;if((q|0)<=(a|0)){break h}i:{if(!q){g=0;break i}J[8369]=J[8369]+1;g=ia[J[6782]](q<<2,16)|0;a=J[e+4>>2]}d=J[e+12>>2];j:{k:{if((a|0)>0){c=0;b=0;if(a-1>>>0>=3){o=a&-4;i=0;while(1){f=b<<2;J[f+g>>2]=J[d+f>>2];s=f|4;J[s+g>>2]=J[d+s>>2];s=f|8;J[s+g>>2]=J[d+s>>2];f=f|12;J[f+g>>2]=J[d+f>>2];b=b+4|0;i=i+4|0;if((o|0)!=(i|0)){continue}break}}a=a&3;if(!a){break k}while(1){i=b<<2;J[i+g>>2]=J[d+i>>2];b=b+1|0;c=c+1|0;if((a|0)!=(c|0)){continue}break}break k}if(!d){break j}}if(d?K[e+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}a=J[e+4>>2]}H[e+16|0]=1;J[e+12>>2]=g;J[e+8>>2]=q}J[J[e+12>>2]+(a<<2)>>2]=p;J[e+4>>2]=J[e+4>>2]+1}g=P(p,20)+n|0;a=J[g+4>>2];l:{m:{if((a|0)<=0){break m}c=J[g+12>>2];b=0;while(1){if((r|0)!=J[c+(b<<2)>>2]){b=b+1|0;if((b|0)!=(a|0)){continue}break m}break}if((a|0)!=(b|0)){break l}}n:{if(J[g+8>>2]!=(a|0)){break n}f=a?a<<1:1;if((f|0)<=(a|0)){break n}o:{if(!f){e=0;break o}J[8369]=J[8369]+1;e=ia[J[6782]](f<<2,16)|0;a=J[g+4>>2]}d=J[g+12>>2];p:{q:{if((a|0)>0){p=0;b=0;if(a-1>>>0>=3){q=a&-4;c=0;while(1){i=b<<2;J[i+e>>2]=J[d+i>>2];o=i|4;J[o+e>>2]=J[d+o>>2];o=i|8;J[o+e>>2]=J[d+o>>2];i=i|12;J[i+e>>2]=J[d+i>>2];b=b+4|0;c=c+4|0;if((q|0)!=(c|0)){continue}break}}a=a&3;if(!a){break q}while(1){c=b<<2;J[c+e>>2]=J[c+d>>2];b=b+1|0;p=p+1|0;if((a|0)!=(p|0)){continue}break}break q}if(!d){break p}}if(d?K[g+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}a=J[g+4>>2]}H[g+16|0]=1;J[g+12>>2]=e;J[g+8>>2]=f}J[J[g+12>>2]+(a<<2)>>2]=r;J[g+4>>2]=J[g+4>>2]+1}k=k+1|0;if((k|0)<J[j+732>>2]){continue}break}}r:{if(h){e=0;while(1){g=P(e,20)+n|0;a=J[g+4>>2];if((a|0)>0){p=P(e,h);q=J[g+12>>2];k=0;while(1){d=J[q+(k<<2)>>2];i=P(d,20)+n|0;c=J[i+4>>2];if((c|0)>0){r=(P(d,h)+e<<2)+m|0;o=J[i+12>>2];b=0;while(1){a=J[o+(b<<2)>>2];s:{if((a|0)==(e|0)){break s}f=P(a,h);s=(f+e<<2)+m|0;f=J[(d+f<<2)+m>>2]+J[r>>2]|0;if(M[s>>2]<=f>>>0){break s}J[(a+p<<2)+m>>2]=f;J[s>>2]=f;c=J[i+4>>2]}b=b+1|0;if((c|0)>(b|0)){continue}break}a=J[g+4>>2]}k=k+1|0;if((k|0)<(a|0)){continue}break}}e=e+1|0;if((h|0)!=(e|0)){continue}break}if(!h){break r}a=0;while(1){b=P(a,20)+n|0;c=J[b+12>>2];if(!(c?!c|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;a=a+1|0;if((h|0)!=(a|0)){continue}break}break r}if(!n){break e}}if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}}if((h|0)<=0){i=0;break d}i=0;a=0;while(1){n=a;a=a+1|0;if((h|0)>(a|0)){s=P(h,n);c=a;while(1){if(J[(c+s<<2)+m>>2]==(v|0)){b=J[j+720>>2];k=w;if(!k){k=J[J[j+880>>2]>>2]}q=b+P(n,104)|0;r=b+P(c,104)|0;b=J[j+732>>2];t:{if((b|0)!=J[j+736>>2]){break t}o=b?b<<1:1;if((o|0)<=(b|0)){break t}u:{if(!o){g=0;break u}J[8369]=J[8369]+1;g=ia[J[6782]](P(o,52),16)|0;b=J[j+732>>2]}v:{if((b|0)<=0){break v}e=0;if((b|0)!=1){x=b&-2;p=0;while(1){d=P(e,52);f=d+g|0;d=d+J[j+740>>2]|0;l=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=l;J[f+48>>2]=J[d+48>>2];l=J[d+44>>2];J[f+40>>2]=J[d+40>>2];J[f+44>>2]=l;l=J[d+36>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=l;l=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=l;l=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=l;l=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=l;d=P(e|1,52);f=d+g|0;d=d+J[j+740>>2]|0;l=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=l;l=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=l;l=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=l;l=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=l;l=J[d+36>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=l;l=J[d+44>>2];J[f+40>>2]=J[d+40>>2];J[f+44>>2]=l;J[f+48>>2]=J[d+48>>2];e=e+2|0;p=p+2|0;if((x|0)!=(p|0)){continue}break}}if(!(b&1)){break v}e=P(e,52);b=e+g|0;e=e+J[j+740>>2]|0;d=J[e+4>>2];J[b>>2]=J[e>>2];J[b+4>>2]=d;J[b+48>>2]=J[e+48>>2];d=J[e+44>>2];J[b+40>>2]=J[e+40>>2];J[b+44>>2]=d;d=J[e+36>>2];J[b+32>>2]=J[e+32>>2];J[b+36>>2]=d;d=J[e+28>>2];J[b+24>>2]=J[e+24>>2];J[b+28>>2]=d;d=J[e+20>>2];J[b+16>>2]=J[e+16>>2];J[b+20>>2]=d;d=J[e+12>>2];J[b+8>>2]=J[e+8>>2];J[b+12>>2]=d}b=J[j+740>>2];if(!(b?!b|!K[j+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[j+740>>2]=g;H[j+744|0]=1;J[j+736>>2]=o;b=J[j+732>>2]}b=J[j+740>>2]+P(b,52)|0;J[b+8>>2]=0;J[b+12>>2]=0;J[b+4>>2]=k;J[b>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+48>>2]=0;b=J[j+732>>2];J[j+732>>2]=b+1;k=P(b,52);b=k+J[j+740>>2]|0;J[b+8>>2]=r;J[b+12>>2]=q;u=Q(N[r+16>>2]-N[q+16>>2]);y=Q(u*u);u=Q(N[r+8>>2]-N[q+8>>2]);z=Q(u*u);u=Q(N[r+12>>2]-N[q+12>>2]);N[b+16>>2]=Y(Q(y+Q(z+Q(u*u))));H[j+924|0]=1;b=k+J[j+740>>2]|0;H[b+20|0]=K[b+20|0]|1;i=i+1|0}c=c+1|0;if((h|0)!=(c|0)){continue}break}}if((a|0)!=(h|0)){continue}break}}ta(m)}ga=t+16|0;return i|0}function zF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;N[a+20>>2]=O[b+32>>3];N[a+24>>2]=O[b+40>>3];N[a+28>>2]=O[b+48>>3];N[a+32>>2]=O[b+56>>3];N[a+4>>2]=O[b>>3];N[a+8>>2]=O[b+8>>3];N[a+12>>2]=O[b+16>>3];N[a+16>>2]=O[b+24>>3];N[a+36>>2]=O[b+64>>3];N[a+40>>2]=O[b+72>>3];N[a+44>>2]=O[b+80>>3];N[a+48>>2]=O[b+88>>3];J[a+56>>2]=J[b+96>>2];H[a+60|0]=J[b+100>>2]!=0;f=J[a+88>>2];k=J[b+104>>2];a:{if((f|0)>=(k|0)){break a}if((k|0)>J[a+92>>2]){if(k){J[8369]=J[8369]+1;j=ia[J[6782]](k<<6,16)|0;c=J[a+88>>2]}else{c=f}b:{if((c|0)<=0){break b}if((c|0)!=1){m=c&-2;while(1){h=l<<6;g=h+j|0;i=h+J[a+96>>2]|0;e=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=e;e=J[i+60>>2];J[g+56>>2]=J[i+56>>2];J[g+60>>2]=e;e=J[i+52>>2];J[g+48>>2]=J[i+48>>2];J[g+52>>2]=e;e=J[i+44>>2];J[g+40>>2]=J[i+40>>2];J[g+44>>2]=e;e=J[i+36>>2];J[g+32>>2]=J[i+32>>2];J[g+36>>2]=e;e=J[i+28>>2];J[g+24>>2]=J[i+24>>2];J[g+28>>2]=e;e=J[i+20>>2];J[g+16>>2]=J[i+16>>2];J[g+20>>2]=e;e=J[i+12>>2];J[g+8>>2]=J[i+8>>2];J[g+12>>2]=e;e=h|64;g=e+j|0;h=e+J[a+96>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;e=J[h+20>>2];J[g+16>>2]=J[h+16>>2];J[g+20>>2]=e;e=J[h+28>>2];J[g+24>>2]=J[h+24>>2];J[g+28>>2]=e;e=J[h+36>>2];J[g+32>>2]=J[h+32>>2];J[g+36>>2]=e;e=J[h+44>>2];J[g+40>>2]=J[h+40>>2];J[g+44>>2]=e;e=J[h+52>>2];J[g+48>>2]=J[h+48>>2];J[g+52>>2]=e;e=J[h+60>>2];J[g+56>>2]=J[h+56>>2];J[g+60>>2]=e;l=l+2|0;d=d+2|0;if((m|0)!=(d|0)){continue}break}}if(!(c&1)){break b}c=l<<6;d=c+j|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=j;H[a+100|0]=1;J[a+92>>2]=k}d=k+(f^-1)|0;c=k-f&3;if(c){j=0;while(1){e=J[a+96>>2]+(f<<6)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+56>>2]=0;J[e+60>>2]=0;J[e+48>>2]=0;J[e+52>>2]=0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;f=f+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=f<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}J[a+88>>2]=k;if((k|0)>0){c=J[a+96>>2];d=J[b+112>>2];j=0;while(1){f=c+(j<<6)|0;N[f+16>>2]=O[d+32>>3];N[f+20>>2]=O[d+40>>3];N[f+24>>2]=O[d+48>>3];N[f+28>>2]=O[d+56>>3];N[f>>2]=O[d>>3];N[f+4>>2]=O[d+8>>3];N[f+8>>2]=O[d+16>>3];N[f+12>>2]=O[d+24>>3];J[f+32>>2]=J[d+64>>2];J[f+36>>2]=J[d+68>>2];J[f+40>>2]=J[d+72>>2];d=d+80|0;j=j+1|0;if((k|0)!=(j|0)){continue}break}}d=J[a+128>>2];n=J[b+108>>2];c:{if((d|0)>=(n|0)){break c}if((n|0)>J[a+132>>2]){d:{if(!n){l=0;c=d;break d}J[8369]=J[8369]+1;l=ia[J[6782]](n<<4,16)|0;c=J[a+128>>2]}e:{if((c|0)<=0){break e}f=0;if((c|0)!=1){m=c&-2;i=0;while(1){h=f<<4;g=h+l|0;k=h+J[a+136>>2]|0;e=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=e;e=J[k+12>>2];J[g+8>>2]=J[k+8>>2];J[g+12>>2]=e;e=h|16;g=e+l|0;h=e+J[a+136>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;f=f+2|0;i=i+2|0;if((m|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=f<<4;f=c+l|0;e=c+J[a+136>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+136>>2];if(!(c?!c|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+136>>2]=l;H[a+140|0]=1;J[a+132>>2]=n}e=n+(d^-1)|0;c=n-d&3;if(c){f=0;while(1){g=J[a+136>>2]+(d<<4)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;f=f+1|0;if((c|0)!=(f|0)){continue}break}}if(e>>>0<3){break c}while(1){f=d<<4;c=f+J[a+136>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=f+J[a+136>>2]|0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;c=f+J[a+136>>2]|0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;c=f+J[a+136>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}J[a+128>>2]=n;if((n|0)>0){c=J[a+136>>2];d=J[b+116>>2];j=0;while(1){f=c+(j<<4)|0;J[f+12>>2]=J[d+12>>2];I[f+6>>1]=L[d+6>>1];I[f+8>>1]=L[d+8>>1];I[f+10>>1]=L[d+10>>1];I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1];d=d+16|0;j=j+1|0;if((n|0)!=(j|0)){continue}break}}J[a+144>>2]=J[b+120>>2];d=J[a+152>>2];h=J[b+124>>2];if(!((d|0)>=(h|0)|(h|0)<=J[a+156>>2])){f:{if(!h){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](h<<5,16)|0;d=J[a+152>>2]}g:{if((d|0)<=0){break g}l=0;if((d|0)!=1){e=d&-2;j=0;while(1){g=l<<5;f=g+i|0;m=g+J[a+160>>2]|0;c=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=c;c=J[m+28>>2];J[f+24>>2]=J[m+24>>2];J[f+28>>2]=c;c=J[m+20>>2];J[f+16>>2]=J[m+16>>2];J[f+20>>2]=c;c=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=c;c=g|32;f=c+i|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=c;c=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=c;c=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=c;c=J[g+28>>2];J[f+24>>2]=J[g+24>>2];J[f+28>>2]=c;l=l+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(d&1)){break g}c=l<<5;f=c+i|0;d=c+J[a+160>>2]|0;c=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=c;c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;c=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=i;H[a+164|0]=1;J[a+156>>2]=h}J[a+152>>2]=h;if((h|0)>0){c=J[a+160>>2];d=J[b+128>>2];a=0;while(1){b=c+(a<<5)|0;I[b+6>>1]=L[d+14>>1];I[b+8>>1]=L[d+16>>1];I[b+10>>1]=L[d+18>>1];I[b>>1]=L[d+8>>1];I[b+2>>1]=L[d+10>>1];I[b+4>>1]=L[d+12>>1];J[b+12>>2]=J[d>>2];J[b+16>>2]=J[d+4>>2];d=d+20|0;a=a+1|0;if((h|0)!=(a|0)){continue}break}}}function AF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;N[a+20>>2]=N[b+16>>2];N[a+24>>2]=N[b+20>>2];N[a+28>>2]=N[b+24>>2];N[a+32>>2]=N[b+28>>2];N[a+4>>2]=N[b>>2];N[a+8>>2]=N[b+4>>2];N[a+12>>2]=N[b+8>>2];N[a+16>>2]=N[b+12>>2];N[a+36>>2]=N[b+32>>2];N[a+40>>2]=N[b+36>>2];N[a+44>>2]=N[b+40>>2];N[a+48>>2]=N[b+44>>2];J[a+56>>2]=J[b+48>>2];H[a+60|0]=J[b+52>>2]!=0;f=J[a+88>>2];k=J[b+56>>2];a:{if((f|0)>=(k|0)){break a}if((k|0)>J[a+92>>2]){if(k){J[8369]=J[8369]+1;j=ia[J[6782]](k<<6,16)|0;c=J[a+88>>2]}else{c=f}b:{if((c|0)<=0){break b}if((c|0)!=1){m=c&-2;while(1){h=l<<6;g=h+j|0;i=h+J[a+96>>2]|0;e=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=e;e=J[i+60>>2];J[g+56>>2]=J[i+56>>2];J[g+60>>2]=e;e=J[i+52>>2];J[g+48>>2]=J[i+48>>2];J[g+52>>2]=e;e=J[i+44>>2];J[g+40>>2]=J[i+40>>2];J[g+44>>2]=e;e=J[i+36>>2];J[g+32>>2]=J[i+32>>2];J[g+36>>2]=e;e=J[i+28>>2];J[g+24>>2]=J[i+24>>2];J[g+28>>2]=e;e=J[i+20>>2];J[g+16>>2]=J[i+16>>2];J[g+20>>2]=e;e=J[i+12>>2];J[g+8>>2]=J[i+8>>2];J[g+12>>2]=e;e=h|64;g=e+j|0;h=e+J[a+96>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;e=J[h+20>>2];J[g+16>>2]=J[h+16>>2];J[g+20>>2]=e;e=J[h+28>>2];J[g+24>>2]=J[h+24>>2];J[g+28>>2]=e;e=J[h+36>>2];J[g+32>>2]=J[h+32>>2];J[g+36>>2]=e;e=J[h+44>>2];J[g+40>>2]=J[h+40>>2];J[g+44>>2]=e;e=J[h+52>>2];J[g+48>>2]=J[h+48>>2];J[g+52>>2]=e;e=J[h+60>>2];J[g+56>>2]=J[h+56>>2];J[g+60>>2]=e;l=l+2|0;d=d+2|0;if((m|0)!=(d|0)){continue}break}}if(!(c&1)){break b}c=l<<6;d=c+j|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=j;H[a+100|0]=1;J[a+92>>2]=k}d=k+(f^-1)|0;c=k-f&3;if(c){j=0;while(1){e=J[a+96>>2]+(f<<6)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+56>>2]=0;J[e+60>>2]=0;J[e+48>>2]=0;J[e+52>>2]=0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;f=f+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=f<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}J[a+88>>2]=k;if((k|0)>0){c=J[a+96>>2];d=J[b+64>>2];j=0;while(1){f=c+(j<<6)|0;N[f+16>>2]=N[d+16>>2];N[f+20>>2]=N[d+20>>2];N[f+24>>2]=N[d+24>>2];N[f+28>>2]=N[d+28>>2];N[f>>2]=N[d>>2];N[f+4>>2]=N[d+4>>2];N[f+8>>2]=N[d+8>>2];N[f+12>>2]=N[d+12>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=J[d+36>>2];J[f+40>>2]=J[d+40>>2];d=d+48|0;j=j+1|0;if((k|0)!=(j|0)){continue}break}}d=J[a+128>>2];n=J[b+60>>2];c:{if((d|0)>=(n|0)){break c}if((n|0)>J[a+132>>2]){d:{if(!n){l=0;c=d;break d}J[8369]=J[8369]+1;l=ia[J[6782]](n<<4,16)|0;c=J[a+128>>2]}e:{if((c|0)<=0){break e}f=0;if((c|0)!=1){m=c&-2;i=0;while(1){h=f<<4;g=h+l|0;k=h+J[a+136>>2]|0;e=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=e;e=J[k+12>>2];J[g+8>>2]=J[k+8>>2];J[g+12>>2]=e;e=h|16;g=e+l|0;h=e+J[a+136>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;f=f+2|0;i=i+2|0;if((m|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=f<<4;f=c+l|0;e=c+J[a+136>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+136>>2];if(!(c?!c|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+136>>2]=l;H[a+140|0]=1;J[a+132>>2]=n}e=n+(d^-1)|0;c=n-d&3;if(c){f=0;while(1){g=J[a+136>>2]+(d<<4)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;f=f+1|0;if((c|0)!=(f|0)){continue}break}}if(e>>>0<3){break c}while(1){f=d<<4;c=f+J[a+136>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=f+J[a+136>>2]|0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;c=f+J[a+136>>2]|0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;c=f+J[a+136>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}J[a+128>>2]=n;if((n|0)>0){c=J[a+136>>2];d=J[b+68>>2];j=0;while(1){f=c+(j<<4)|0;J[f+12>>2]=J[d+12>>2];I[f+6>>1]=L[d+6>>1];I[f+8>>1]=L[d+8>>1];I[f+10>>1]=L[d+10>>1];I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1];d=d+16|0;j=j+1|0;if((n|0)!=(j|0)){continue}break}}J[a+144>>2]=J[b+76>>2];d=J[a+152>>2];h=J[b+80>>2];if(!((d|0)>=(h|0)|(h|0)<=J[a+156>>2])){f:{if(!h){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](h<<5,16)|0;d=J[a+152>>2]}g:{if((d|0)<=0){break g}l=0;if((d|0)!=1){e=d&-2;j=0;while(1){g=l<<5;f=g+i|0;m=g+J[a+160>>2]|0;c=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=c;c=J[m+28>>2];J[f+24>>2]=J[m+24>>2];J[f+28>>2]=c;c=J[m+20>>2];J[f+16>>2]=J[m+16>>2];J[f+20>>2]=c;c=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=c;c=g|32;f=c+i|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=c;c=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=c;c=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=c;c=J[g+28>>2];J[f+24>>2]=J[g+24>>2];J[f+28>>2]=c;l=l+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(d&1)){break g}c=l<<5;f=c+i|0;d=c+J[a+160>>2]|0;c=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=c;c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;c=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=i;H[a+164|0]=1;J[a+156>>2]=h}J[a+152>>2]=h;if((h|0)>0){c=J[a+160>>2];d=J[b+72>>2];a=0;while(1){b=c+(a<<5)|0;I[b+6>>1]=L[d+14>>1];I[b+8>>1]=L[d+16>>1];I[b+10>>1]=L[d+18>>1];I[b>>1]=L[d+8>>1];I[b+2>>1]=L[d+10>>1];I[b+4>>1]=L[d+12>>1];J[b+12>>2]=J[d>>2];J[b+16>>2]=J[d+4>>2];d=d+20|0;a=a+1|0;if((h|0)!=(a|0)){continue}break}}}function rG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=0,la=0,ma=Q(0),na=Q(0),oa=0,pa=Q(0);d=ga-48|0;ga=d;a:{if(!J[a+12>>2]){break a}m=K[a+16|0];k=m?c:b;f=J[k+12>>2];y=N[f+56>>2];z=N[f+52>>2];A=N[f+48>>2];o=m?b:c;m=J[o+12>>2];B=N[m+56>>2];fa=N[m+48>>2];C=N[m+52>>2];k=J[k+4>>2];w=N[f+32>>2];D=N[f+16>>2];E=N[f>>2];F=N[f+36>>2];n=N[f+20>>2];s=N[f+4>>2];h=N[m+40>>2];i=N[m+24>>2];g=N[m+8>>2];j=N[m+32>>2];p=N[m+16>>2];r=N[m>>2];t=N[m+36>>2];l=N[f+40>>2];u=N[m+20>>2];H=N[f+24>>2];x=N[m+4>>2];I=N[f+8>>2];m=J[o+4>>2];L=N[m+56>>2];v=N[m+48>>2];M=N[m+52>>2];J[d+28>>2]=0;X=Q(Q(j*l)+Q(Q(r*I)+Q(H*p)));v=Q(-v);Z=Q(Q(t*l)+Q(Q(x*I)+Q(H*u)));l=Q(Q(h*l)+Q(Q(g*I)+Q(H*i)));N[d+24>>2]=Q(Q(X*v)-Q(M*Z))-Q(L*l);H=Q(Q(j*F)+Q(Q(r*s)+Q(n*p)));I=Q(Q(t*F)+Q(Q(x*s)+Q(n*u)));_=Q(Q(h*F)+Q(Q(g*s)+Q(n*i)));N[d+20>>2]=Q(Q(H*v)-Q(M*I))-Q(L*_);$=Q(Q(j*w)+Q(Q(r*E)+Q(D*p)));q=M;M=Q(Q(t*w)+Q(Q(x*E)+Q(D*u)));ha=L;L=Q(Q(h*w)+Q(Q(g*E)+Q(D*i)));N[d+16>>2]=Q(Q($*v)-Q(q*M))-Q(ha*L);ia[J[J[k>>2]+64>>2]](d+32|0,k,d+16|0);f=J[o+12>>2];v=N[f+48>>2];U=N[f+32>>2];V=N[f+16>>2];q=N[f+8>>2];P=N[f+4>>2];O=N[f>>2];S=N[f+56>>2];G=N[f+52>>2];W=N[f+40>>2];aa=N[f+36>>2];ja=N[f+24>>2];ba=N[f+20>>2];ca=N[m+64>>2];F=N[m+56>>2];n=N[m+48>>2];s=N[m+52>>2];w=N[d+40>>2];D=N[d+32>>2];E=N[d+36>>2];f=J[a+12>>2];da=N[f+752>>2];J[e+4>>2]=f;ea=Q(Q(y*h)+Q(Q(A*g)+Q(z*i)));ha=g;g=Q(-fa);l=Q(Q(ea+Q(Q(Q(ha*g)-Q(i*C))-Q(h*B)))+Q(Q(w*l)+Q(Q(D*L)+Q(_*E))));p=Q(Q(Q(Q(y*j)+Q(Q(A*r)+Q(z*p)))+Q(Q(Q(r*g)-Q(p*C))-Q(j*B)))+Q(Q(w*X)+Q(Q(D*$)+Q(H*E))));r=Q(Q(Q(Q(y*t)+Q(Q(A*x)+Q(z*u)))+Q(Q(Q(x*g)-Q(u*C))-Q(t*B)))+Q(Q(w*Z)+Q(Q(D*M)+Q(I*E))));h=Q(Q(Q(F*l)+Q(Q(n*p)+Q(s*r)))-ca);if(h<da){f=J[o+12>>2];t=N[f+24>>2];u=N[f+20>>2];x=N[f+40>>2];y=N[f+36>>2];z=N[f+16>>2];A=N[f+32>>2];i=N[m+56>>2];B=N[f+8>>2];g=N[m+48>>2];C=N[f>>2];j=N[m+52>>2];w=N[f+4>>2];J[d+28>>2]=0;N[d+16>>2]=Q(B*i)+Q(Q(C*g)+Q(w*j));N[d+24>>2]=Q(x*i)+Q(Q(A*g)+Q(j*y));N[d+20>>2]=Q(t*i)+Q(Q(z*g)+Q(j*u));J[d+12>>2]=0;i=Q(l-Q(F*h));g=Q(p-Q(n*h));j=Q(r-Q(s*h));N[d+8>>2]=Q(Q(i*W)+Q(Q(g*U)+Q(j*aa)))+S;N[d+4>>2]=Q(Q(i*ja)+Q(Q(g*V)+Q(j*ba)))+G;N[d>>2]=Q(Q(i*q)+Q(Q(g*O)+Q(P*j)))+v;ia[J[J[e>>2]+16>>2]](e,d+16|0,d,h)}b:{if(J[k+4>>2]>6|J[J[e+4>>2]+748>>2]>=J[a+24>>2]){break b}i=N[m+56>>2];c:{if(Q(R(i))>Q(.7071067690849304)){h=N[m+52>>2];g=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(i*i)))));h=Q(h*g);i=Q(g*Q(-i));g=Q(0);break c}h=N[m+48>>2];g=N[m+52>>2];j=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(g*g)))));i=Q(h*j);h=Q(0);g=Q(j*Q(-g))}j=Q(ia[J[J[k>>2]+16>>2]](k));j=Q(Q(T(Q(N[6778]/j),Q(.39269909262657166)))*Q(.5));p=Ga(j);f=J[a+20>>2];H=Ha(j);if((f|0)<=0){break b}q=h;h=Q(p/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(i*i))))));I=Q(q*h);L=Q(i*h);M=Q(g*h);while(1){i=N[m+52>>2];j=N[m+48>>2];h=N[m+56>>2];g=Q(Q(Q(Q(6.2831854820251465)/Q(f|0))*Q(oa|0))*Q(.5));p=Q(Ga(g)/Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(i*i))))));h=Q(h*p);i=Q(i*p);g=Ha(g);j=Q(j*p);p=Q(Q(h*I)+Q(Q(i*L)+Q(Q(g*H)+Q(M*j))));r=Q(Q(h*L)+Q(Q(Q(g*M)-Q(H*j))-Q(i*I)));t=Q(Q(j*I)+Q(Q(Q(g*L)-Q(H*i))-Q(h*M)));u=Q(Q(i*M)+Q(Q(Q(g*I)-Q(H*h))-Q(j*L)));N[d+28>>2]=Q(Q(Q(p*g)-Q(j*r))-Q(t*i))-Q(u*h);N[d+24>>2]=Q(Q(r*i)+Q(Q(p*h)+Q(g*u)))-Q(t*j);N[d+20>>2]=Q(Q(u*j)+Q(Q(p*i)+Q(g*t)))-Q(r*h);N[d+16>>2]=Q(Q(t*h)+Q(Q(p*j)+Q(g*r)))-Q(u*i);f=ga-48|0;ga=f;o=K[a+16|0];ka=o?c:b;k=J[ka+12>>2];fa=N[k+56>>2];X=N[k+52>>2];Z=N[k+48>>2];la=o?b:c;o=J[la+12>>2];_=N[o+56>>2];aa=N[o+48>>2];$=N[o+52>>2];ka=J[ka+4>>2];h=N[o+40>>2];i=N[o+8>>2];g=N[o+24>>2];j=N[o+32>>2];p=N[o>>2];r=N[o+16>>2];t=N[o+36>>2];y=N[k+40>>2];z=N[k+32>>2];A=N[k+36>>2];u=N[o+4>>2];B=N[k+8>>2];C=N[k>>2];w=N[k+4>>2];x=N[o+20>>2];D=N[k+24>>2];E=N[k+16>>2];F=N[k+20>>2];s=N[d+28>>2];v=N[d+24>>2];n=N[d+16>>2];l=N[d+20>>2];o=J[la+4>>2];U=N[o+56>>2];ja=N[o+48>>2];V=N[o+52>>2];J[f+28>>2]=0;q=Q(Q(2)/Q(Q(s*s)+Q(Q(v*v)+Q(Q(n*n)+Q(l*l)))));G=Q(n*q);ba=Q(n*G);P=Q(l*q);ca=Q(l*P);O=Q(Q(1)-Q(ba+ca));q=Q(v*q);da=Q(n*q);ea=Q(s*P);S=Q(da+ea);ma=Q(l*q);na=Q(s*G);l=Q(ma-na);G=Q(Q(y*O)+Q(Q(z*S)+Q(A*l)));W=Q(Q(O*B)+Q(Q(S*C)+Q(w*l)));l=Q(Q(O*D)+Q(Q(S*E)+Q(F*l)));O=Q(-ja);N[f+24>>2]=Q(Q(Q(Q(j*G)+Q(Q(p*W)+Q(r*l)))*O)-Q(V*Q(Q(t*G)+Q(Q(u*W)+Q(x*l)))))-Q(U*Q(Q(h*G)+Q(Q(i*W)+Q(g*l))));l=Q(ma+na);P=Q(n*P);S=Q(s*q);n=Q(P-S);G=Q(v*q);s=Q(Q(1)-Q(ba+G));v=Q(Q(y*l)+Q(Q(z*n)+Q(A*s)));q=Q(Q(l*B)+Q(Q(n*C)+Q(w*s)));n=Q(Q(l*D)+Q(Q(n*E)+Q(F*s)));N[f+20>>2]=Q(Q(Q(Q(j*v)+Q(Q(p*q)+Q(r*n)))*O)-Q(V*Q(Q(t*v)+Q(Q(u*q)+Q(x*n)))))-Q(U*Q(Q(h*v)+Q(Q(i*q)+Q(g*n))));n=Q(da-ea);s=Q(Q(1)-Q(ca+G));l=Q(P+S);v=Q(Q(y*n)+Q(Q(z*s)+Q(A*l)));q=Q(Q(n*B)+Q(Q(s*C)+Q(w*l)));n=Q(Q(n*D)+Q(Q(s*E)+Q(F*l)));N[f+16>>2]=Q(Q(Q(Q(j*v)+Q(Q(p*q)+Q(r*n)))*O)-Q(V*Q(Q(t*v)+Q(Q(u*q)+Q(x*n)))))-Q(U*Q(Q(h*v)+Q(Q(i*q)+Q(g*n))));ia[J[J[ka>>2]+64>>2]](f+32|0,ka,f+16|0);k=J[la+12>>2];P=N[k+48>>2];O=N[k+32>>2];S=N[k+16>>2];G=N[k+8>>2];W=N[k+4>>2];ja=N[k>>2];ba=N[k+56>>2];ca=N[k+52>>2];da=N[k+40>>2];ea=N[k+36>>2];ma=N[k+24>>2];na=N[k+20>>2];pa=N[o+64>>2];v=N[o+56>>2];U=N[o+48>>2];V=N[o+52>>2];n=N[f+40>>2];s=N[f+32>>2];l=N[f+36>>2];k=J[a+12>>2];q=N[k+752>>2];J[e+4>>2]=k;ha=q;q=Q(-aa);aa=Q(Q(Q(Q(fa*h)+Q(Q(Z*i)+Q(X*g)))+Q(Q(Q(i*q)-Q(g*$))-Q(h*_)))+Q(Q(n*Q(Q(y*h)+Q(Q(B*i)+Q(D*g))))+Q(Q(s*Q(Q(z*h)+Q(Q(C*i)+Q(E*g))))+Q(l*Q(Q(A*h)+Q(Q(w*i)+Q(F*g)))))));p=Q(Q(Q(Q(fa*j)+Q(Q(Z*p)+Q(X*r)))+Q(Q(Q(p*q)-Q(r*$))-Q(j*_)))+Q(Q(n*Q(Q(y*j)+Q(Q(B*p)+Q(D*r))))+Q(Q(s*Q(Q(z*j)+Q(Q(C*p)+Q(E*r))))+Q(l*Q(Q(A*j)+Q(Q(w*p)+Q(F*r)))))));r=Q(Q(Q(Q(fa*t)+Q(Q(Z*u)+Q(X*x)))+Q(Q(Q(u*q)-Q(x*$))-Q(t*_)))+Q(Q(n*Q(Q(y*t)+Q(Q(B*u)+Q(D*x))))+Q(Q(s*Q(Q(z*t)+Q(Q(C*u)+Q(E*x))))+Q(l*Q(Q(A*t)+Q(Q(w*u)+Q(F*x)))))));h=Q(Q(Q(v*aa)+Q(Q(U*p)+Q(V*r)))-pa);if(ha>h){k=J[la+12>>2];t=N[k+24>>2];u=N[k+20>>2];x=N[k+40>>2];y=N[k+36>>2];z=N[k+16>>2];A=N[k+32>>2];i=N[o+56>>2];B=N[k+8>>2];g=N[o+48>>2];C=N[k>>2];j=N[o+52>>2];w=N[k+4>>2];J[f+28>>2]=0;N[f+16>>2]=Q(B*i)+Q(Q(C*g)+Q(w*j));N[f+24>>2]=Q(x*i)+Q(Q(A*g)+Q(j*y));N[f+20>>2]=Q(t*i)+Q(Q(z*g)+Q(j*u));J[f+12>>2]=0;i=Q(aa-Q(v*h));g=Q(p-Q(U*h));j=Q(r-Q(V*h));N[f+8>>2]=Q(Q(i*da)+Q(Q(g*O)+Q(j*ea)))+ba;N[f+4>>2]=Q(Q(i*ma)+Q(Q(g*S)+Q(j*na)))+ca;N[f>>2]=Q(Q(i*G)+Q(Q(g*ja)+Q(W*j)))+P;ia[J[J[e>>2]+16>>2]](e,f+16|0,f,h)}ga=f+48|0;f=J[a+20>>2];oa=oa+1|0;if((f|0)>(oa|0)){continue}break}}if(!K[a+8|0]|!J[J[a+12>>2]+748>>2]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];f=J[J[e+8>>2]+8>>2];b=(c|0)==(f|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:f)+4|0)}ga=d+48|0}function Eg(a,b,c,d,e,f,g){var h=Q(0),i=0,j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=0,x=0,y=0,z=0,A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),O=Q(0);k=ga-9824|0;ga=k;i=c;c=k+9696|0;Gg(a,b,i,d,f,c,g);a=k+9448|0;J[a>>2]=0;J[a+4>>2]=0;J[k+9440>>2]=0;J[k+9444>>2]=0;J[k+9676>>2]=0;J[k+9680>>2]=0;J[k+9688>>2]=2;a=0;J[k+9456>>2]=0;h=N[e>>2];j=N[e+4>>2];l=N[e+8>>2];J[k+28>>2]=0;N[k+24>>2]=-l;N[k+20>>2]=-j;N[k+16>>2]=-h;a:{b:{c:{switch(Fg(k+9312|0,c,k+16|0)-1|0){case 0:c=k- -64|0;J[c>>2]=0;J[c+4>>2]=0;J[k+72>>2]=0;J[k+9292>>2]=0;J[k+16>>2]=9;J[k+9296>>2]=0;J[k+9300>>2]=0;J[k+56>>2]=0;J[k+60>>2]=0;c=0;while(1){g=P(127-c|0,56);d=g+(k+16|0)|0;J[d+2156>>2]=a;J[d+2152>>2]=0;d=d+2108|0;if(a){J[a+44>>2]=d}J[k+9304>>2]=d;i=k+2124|0;a=i+P(126-c|0,56)|0;J[a+44>>2]=0;J[a+48>>2]=d;J[(g+i|0)+44>>2]=a;J[k+9304>>2]=a;c=c+2|0;if((c|0)!=128){continue}break};J[k+9308>>2]=128;h=N[e>>2];j=N[e+4>>2];l=N[e+8>>2];a=0;J[k+12>>2]=0;N[k+8>>2]=-l;N[k+4>>2]=-j;N[k>>2]=-h;g=k+16|0;u=ga-32|0;ga=u;d:{e:{B=k+9312|0;i=J[B+372>>2];if(M[i+32>>2]<2){break e}if(!eb(B)){break e}c=J[g+9280>>2];if(c){e=J[g+9292>>2];d=J[g+9284>>2];while(1){p=J[c+48>>2];if(p){J[p+44>>2]=J[c+44>>2]}p=J[c+44>>2];if(p){J[p+48>>2]=J[c+48>>2]}if(J[g+9280>>2]==(c|0)){J[g+9280>>2]=J[c+48>>2]}J[c+44>>2]=0;J[c+48>>2]=J[g+9288>>2];p=J[g+9288>>2];if(p){J[p+44>>2]=c}d=d-1|0;J[g+9288>>2]=c;e=e+1|0;c=J[g+9280>>2];if(c){continue}break}J[g+9292>>2]=e;J[g+9284>>2]=d}J[g+9276>>2]=0;J[g>>2]=0;e=J[i>>2];d=J[i+12>>2];h=N[d+16>>2];n=Q(N[e+16>>2]-h);c=J[i+4>>2];j=N[d+20>>2];m=Q(N[c+20>>2]-j);p=J[i+8>>2];l=N[d+24>>2];o=Q(N[p+24>>2]-l);q=Q(N[e+20>>2]-j);r=Q(N[c+24>>2]-l);s=Q(N[p+16>>2]-h);l=Q(N[e+24>>2]-l);h=Q(N[c+16>>2]-h);j=Q(N[p+20>>2]-j);f:{if(!(Q(Q(Q(Q(n*m)*o)+Q(Q(Q(Q(Q(q*r)*s)+Q(Q(l*h)*j))-Q(Q(r*n)*j))-Q(Q(h*q)*o)))-Q(Q(m*l)*s))<Q(0))){d=c;c=e;break f}J[i+4>>2]=e;J[i>>2]=c;J[i+16>>2]=lI(J[i+16>>2],J[i+20>>2]);J[i+20>>2]=ha;d=e}d=td(g,c,d,p,1);p=td(g,J[i+4>>2],J[i>>2],J[i+12>>2],1);t=td(g,J[i+8>>2],J[i+4>>2],J[i+12>>2],1);w=td(g,J[i>>2],J[i+8>>2],J[i+12>>2],1);if(J[g+9284>>2]!=4){break e}e=J[g+9280>>2];c=J[e+48>>2];if(c){h=N[e+16>>2];h=Q(h*h);while(1){j=N[c+16>>2];j=Q(j*j);i=j<h;e=i?c:e;h=i?j:h;c=J[c+48>>2];if(c){continue}break}}x=J[e+28>>2];y=J[e+24>>2];z=J[e+20>>2];h=N[e+16>>2];r=N[e+12>>2];n=N[e+8>>2];j=N[e+4>>2];l=N[e>>2];J[d+32>>2]=p;H[d+52|0]=0;J[p+32>>2]=d;H[p+52|0]=0;J[d+36>>2]=t;H[d+53|0]=0;J[t+32>>2]=d;H[t+52|0]=1;J[d+40>>2]=w;H[d+54|0]=0;J[w+32>>2]=d;H[w+52|0]=2;J[p+36>>2]=w;H[p+53|0]=2;J[w+40>>2]=p;H[w+54|0]=1;J[p+40>>2]=t;H[p+54|0]=1;J[t+36>>2]=p;H[t+53|0]=2;H[t+54|0]=1;J[t+40>>2]=w;J[w+36>>2]=t;H[w+53|0]=2;J[g>>2]=0;d=0;while(1){g:{h:{i=J[g+9276>>2];if(i>>>0<=63){c=0;J[u+8>>2]=0;J[u>>2]=0;J[u+4>>2]=0;J[g+9276>>2]=i+1;d=d+1|0;H[e+55|0]=d;m=N[e+8>>2];o=N[e>>2];q=N[e+4>>2];i=g+(i<<5)|0;J[i+72>>2]=0;v=m;m=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(o*o)+Q(q*q))))));N[i+68>>2]=v*m;N[i- -64>>2]=q*m;p=i+60|0;N[p>>2]=o*m;Za(u+16|0,B,p);t=J[u+28>>2];J[i+84>>2]=J[u+24>>2];J[i+88>>2]=t;t=J[u+20>>2];J[i+76>>2]=J[u+16>>2];J[i+80>>2]=t;if(!(Q(Q(Q(N[e+8>>2]*N[i+84>>2])+Q(Q(N[e>>2]*N[i+76>>2])+Q(N[e+4>>2]*N[i+80>>2])))-N[e+16>>2])>Q(9999999747378752e-20))){J[g>>2]=7;break g}while(1){i=Dg(g,d,p,J[((c<<2)+e|0)+32>>2],K[(c+e|0)+52|0],u);if(!i){break h}t=c>>>0<2;c=c+1|0;if(t){continue}break}break h}J[g>>2]=6;break g}if(!(i&M[u+8>>2]>2)){J[g>>2]=4;break g}c=J[u>>2];i=J[u+4>>2];J[c+36>>2]=i;H[c+53|0]=2;J[i+40>>2]=c;H[i+54|0]=1;c=J[e+48>>2];if(c){J[c+44>>2]=J[e+44>>2]}c=J[e+44>>2];if(c){J[c+48>>2]=J[e+48>>2]}if(J[g+9280>>2]==(e|0)){J[g+9280>>2]=J[e+48>>2]}J[g+9284>>2]=J[g+9284>>2]-1;J[e+44>>2]=0;J[e+48>>2]=J[g+9288>>2];c=J[g+9288>>2];if(c){J[c+44>>2]=e}J[g+9288>>2]=e;J[g+9292>>2]=J[g+9292>>2]+1;e=J[g+9280>>2];c=J[e+48>>2];if(c){h=N[e+16>>2];h=Q(h*h);while(1){j=N[c+16>>2];j=Q(j*j);i=j<h;e=i?c:e;h=i?j:h;c=J[c+48>>2];if(c){continue}break}}x=J[e+28>>2];y=J[e+24>>2];z=J[e+20>>2];h=N[e+16>>2];r=N[e+12>>2];n=N[e+8>>2];j=N[e+4>>2];l=N[e>>2];if((d|0)!=255){continue}}break}N[g+56>>2]=h;N[g+40>>2]=l;J[g+4>>2]=z;N[g+52>>2]=r;N[g+48>>2]=n;N[g+44>>2]=j;J[g+36>>2]=3;J[g+12>>2]=x;J[g+8>>2]=y;l=Q(l*h);m=Q(N[y+16>>2]-l);j=Q(j*h);o=Q(N[x+20>>2]-j);q=Q(N[x+16>>2]-l);r=Q(N[y+20>>2]-j);s=Q(Q(m*o)-Q(q*r));h=Q(n*h);n=Q(N[x+24>>2]-h);v=o;o=Q(N[y+24>>2]-h);r=Q(Q(r*n)-Q(v*o));n=Q(Q(o*q)-Q(n*m));n=Q(Y(Q(Q(s*s)+Q(Q(r*r)+Q(n*n)))));N[g+20>>2]=n;m=Q(N[x+16>>2]-l);o=Q(N[z+20>>2]-j);q=Q(N[z+16>>2]-l);r=Q(N[x+20>>2]-j);s=Q(Q(m*o)-Q(q*r));A=Q(s*s);v=r;r=Q(N[z+24>>2]-h);s=o;o=Q(N[x+24>>2]-h);s=Q(Q(v*r)-Q(s*o));m=Q(Q(o*q)-Q(r*m));m=Q(Y(Q(A+Q(Q(s*s)+Q(m*m)))));N[g+24>>2]=m;o=Q(N[z+16>>2]-l);q=Q(N[y+20>>2]-j);l=Q(N[y+16>>2]-l);j=Q(N[z+20>>2]-j);r=Q(Q(o*q)-Q(l*j));v=j;j=Q(N[y+24>>2]-h);h=Q(N[z+24>>2]-h);q=Q(Q(v*j)-Q(q*h));h=Q(Q(h*l)-Q(j*o));j=Q(Y(Q(Q(r*r)+Q(Q(q*q)+Q(h*h)))));h=Q(j+Q(n+m));N[g+28>>2]=j/h;N[g+24>>2]=m/h;N[g+20>>2]=n/h;c=J[g>>2];break d}c=8;J[g>>2]=8;h=Q(0);l=Q(1);j=Q(0);n=N[k+8>>2];m=N[k>>2];o=N[k+4>>2];q=Q(Y(Q(Q(n*n)+Q(Q(m*m)+Q(o*o)))));if(q>Q(0)){l=Q(Q(1)/q);j=Q(l*Q(-n));h=Q(l*Q(-o));l=Q(l*Q(-m))}J[g+52>>2]=0;J[g+56>>2]=0;N[g+48>>2]=j;N[g+44>>2]=h;N[g+40>>2]=l;J[g+36>>2]=1;d=J[i>>2];J[g+20>>2]=1065353216;J[g+4>>2]=d}ga=u+32|0;if((c|0)==9){break b}i:{if(!J[k+52>>2]){h=Q(0);j=Q(0);l=Q(0);break i}l=Q(0);j=Q(0);h=Q(0);while(1){c=J[k+9816>>2];d=J[k+9820>>2];e=J[k+9696>>2]+(d>>1)|0;g=(k+16|0)+(a<<2)|0;i=J[g+4>>2];if(d&1){c=J[c+J[e>>2]>>2]}ia[c|0](k,e,i);n=N[g+20>>2];l=Q(l+Q(n*N[k+8>>2]));j=Q(j+Q(n*N[k+4>>2]));h=Q(h+Q(N[k>>2]*n));a=a+1|0;if(a>>>0<M[k+52>>2]){continue}break}}a=1;J[f>>2]=1;n=N[b+52>>2];m=N[b+24>>2];o=N[b+20>>2];q=N[b+56>>2];r=N[b+40>>2];s=N[b+36>>2];v=N[b+48>>2];A=N[b+8>>2];C=N[b>>2];D=N[b+4>>2];E=N[b+16>>2];F=N[b+32>>2];J[f+16>>2]=0;N[f+12>>2]=q+Q(Q(l*r)+Q(Q(h*F)+Q(j*s)));N[f+8>>2]=n+Q(Q(l*m)+Q(Q(h*E)+Q(j*o)));N[f+4>>2]=v+Q(Q(l*A)+Q(Q(h*C)+Q(j*D)));r=N[b+52>>2];s=N[b+20>>2];v=N[b+24>>2];A=N[b+56>>2];C=N[b+36>>2];D=N[b+40>>2];E=N[b+48>>2];F=N[b+8>>2];G=N[b>>2];I=N[b+4>>2];L=N[b+16>>2];O=N[b+32>>2];m=N[k+60>>2];o=N[k- -64>>2];q=N[k+56>>2];n=N[k+72>>2];J[f+48>>2]=0;J[f+32>>2]=0;N[f+52>>2]=-n;N[f+44>>2]=-o;N[f+40>>2]=-m;N[f+36>>2]=-q;l=Q(l-Q(n*o));h=Q(h-Q(q*n));j=Q(j-Q(n*m));N[f+28>>2]=A+Q(Q(D*l)+Q(Q(O*h)+Q(C*j)));N[f+24>>2]=r+Q(Q(l*v)+Q(Q(h*L)+Q(j*s)));N[f+20>>2]=E+Q(Q(l*F)+Q(Q(h*G)+Q(j*I)));break a;case 1:break c;default:break a}}J[f>>2]=2;break a}J[f>>2]=3}ga=k+9824|0;return a}function hh(a,b,c,d,e,f){var g=0,h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=0;g=ga-640|0;ga=g;h=J[d+12>>2];y=J[d+4>>2];i=J[y+4>>2];a:{if((i|0)<=19){N[g+636>>2]=f;J[g+632>>2]=0;J[g+464>>2]=6804;N[g+628>>2]=N[e+4>>2];H[g+436|0]=0;J[g+412>>2]=953267991;J[g+16>>2]=18432;i=g+80|0;J[i+20>>2]=0;J[i+16>>2]=y;J[i+12>>2]=a;J[i+8>>2]=g+16;J[i+4>>2]=g+104;J[i>>2]=18208;b:{if(!(ia[J[J[i>>2]+8>>2]](i,b,c,h,h,g+464|0)|0)){break b}f=N[g+604>>2];j=N[g+596>>2];k=N[g+600>>2];m=Q(Q(f*f)+Q(Q(j*j)+Q(k*k)));if(!(m>Q(9999999747378752e-20))){break b}l=N[g+628>>2];if(!(l<N[e+4>>2])){break b}n=f;f=Q(Q(1)/Q(Y(m)));N[g+604>>2]=n*f;N[g+600>>2]=k*f;N[g+596>>2]=j*f;a=J[d+8>>2];J[g+36>>2]=0;J[g+32>>2]=a;a=J[g+608>>2];J[g+48>>2]=J[g+604>>2];J[g+52>>2]=a;a=J[g+596>>2];b=J[g+600>>2];d=J[g+624>>2];c=g- -64|0;J[c>>2]=J[g+620>>2];J[c+4>>2]=d;J[g+40>>2]=a;J[g+44>>2]=b;a=J[g+616>>2];J[g+56>>2]=J[g+612>>2];J[g+60>>2]=a;N[g+72>>2]=l;Q(ia[J[J[e>>2]+12>>2]](e,g+32|0,1))}break a}E=i-21|0;if(E>>>0<=8){c:{switch(E|0){case 0:j=N[h+20>>2];k=N[h+36>>2];p=N[h+52>>2];m=N[h+24>>2];t=N[h+56>>2];l=N[h+40>>2];n=N[h+32>>2];w=N[h>>2];x=N[h+16>>2];o=N[h+4>>2];q=N[h+8>>2];r=N[h+48>>2];u=N[b+52>>2];v=N[b+56>>2];z=N[b+48>>2];J[g+44>>2]=0;r=Q(-r);A=Q(Q(Q(q*r)-Q(m*p))-Q(l*t));N[g+40>>2]=A+Q(Q(v*l)+Q(Q(z*q)+Q(m*u)));B=Q(Q(Q(o*r)-Q(j*p))-Q(k*t));N[g+36>>2]=B+Q(Q(v*k)+Q(Q(z*o)+Q(j*u)));r=Q(Q(Q(w*r)-Q(x*p))-Q(n*t));N[g+32>>2]=r+Q(Q(v*n)+Q(Q(z*w)+Q(x*u)));p=N[c+52>>2];t=N[c+56>>2];u=N[c+48>>2];J[g+92>>2]=0;N[g+88>>2]=A+Q(Q(t*l)+Q(Q(u*q)+Q(m*p)));N[g+84>>2]=B+Q(Q(t*k)+Q(Q(u*o)+Q(j*p)));N[g+80>>2]=r+Q(Q(t*n)+Q(Q(u*w)+Q(x*p)));p=N[c+20>>2];t=N[c+36>>2];u=N[c+24>>2];v=N[c+40>>2];z=N[c+32>>2];r=N[c>>2];A=N[c+16>>2];B=N[c+4>>2];s=N[c+8>>2];J[g+508>>2]=0;J[g+512>>2]=0;J[g+492>>2]=0;J[g+516>>2]=0;J[g+520>>2]=0;J[g+524>>2]=0;N[g+504>>2]=Q(v*l)+Q(Q(s*q)+Q(m*u));N[g+500>>2]=Q(t*l)+Q(Q(B*q)+Q(m*p));N[g+488>>2]=Q(v*k)+Q(Q(s*o)+Q(j*u));N[g+484>>2]=Q(t*k)+Q(Q(B*o)+Q(j*p));J[g+476>>2]=0;N[g+496>>2]=Q(z*l)+Q(Q(r*q)+Q(m*A));N[g+480>>2]=Q(z*k)+Q(Q(r*o)+Q(j*A));N[g+472>>2]=Q(v*n)+Q(Q(s*w)+Q(x*u));N[g+468>>2]=Q(t*n)+Q(Q(B*w)+Q(x*p));N[g+464>>2]=Q(z*n)+Q(Q(r*w)+Q(x*A));d=J[d+8>>2];i=g+104|0;tl(i,a,b,c,h,Q(ia[J[J[y>>2]+48>>2]](y)));J[g+324>>2]=y;J[g+320>>2]=d;J[g+104>>2]=7592;J[g+316>>2]=e;j=N[e+4>>2];N[g+312>>2]=f;N[g+304>>2]=j;c=g+16|0;ia[J[J[a>>2]+8>>2]](a,g+464|0,c,g);a=ga-16|0;ga=a;b=J[y+48>>2];J[a+8>>2]=i;J[a+4>>2]=b;J[a>>2]=12496;d=g+32|0;e=g+80|0;b=J[y+52>>2];d:{if(K[b+60|0]){um(b,a,d,e,c,g,J[b+56>>2]);break d}vm(b,a,d,e,c,g)}ga=a+16|0;break a;case 7:N[g+276>>2]=f;J[g+272>>2]=0;J[g+104>>2]=6804;N[g+268>>2]=N[e+4>>2];i=g+32|0;J[i+20>>2]=y;J[i+16>>2]=0;J[i+12>>2]=a;J[i+4>>2]=0;J[i+8>>2]=0;J[i>>2]=18208;e:{if(!(ia[J[J[i>>2]+8>>2]](i,b,c,h,h,g+104|0)|0)){break e}f=N[g+244>>2];j=N[g+236>>2];k=N[g+240>>2];m=Q(Q(f*f)+Q(Q(j*j)+Q(k*k)));if(!(m>Q(9999999747378752e-20))){break e}l=N[g+268>>2];if(!(l<N[e+4>>2])){break e}n=f;f=Q(Q(1)/Q(Y(m)));N[g+244>>2]=n*f;N[g+240>>2]=k*f;N[g+236>>2]=j*f;a=J[d+8>>2];J[g+468>>2]=0;J[g+464>>2]=a;a=J[g+248>>2];J[g+480>>2]=J[g+244>>2];J[g+484>>2]=a;a=J[g+236>>2];b=J[g+240>>2];c=J[g+264>>2];J[g+496>>2]=J[g+260>>2];J[g+500>>2]=c;J[g+472>>2]=a;J[g+476>>2]=b;a=J[g+256>>2];J[g+488>>2]=J[g+252>>2];J[g+492>>2]=a;N[g+504>>2]=l;Q(ia[J[J[e>>2]+12>>2]](e,g+464|0,1))}break a;default:break c}}t=N[b+52>>2];u=N[b+56>>2];m=N[h+52>>2];v=N[h+56>>2];z=N[c+52>>2];r=N[c+56>>2];k=N[h+20>>2];l=N[h+36>>2];w=N[h+24>>2];x=N[h+40>>2];A=N[b+48>>2];R=N[h+48>>2];B=N[c+48>>2];j=N[h+32>>2];n=N[h>>2];o=N[h+16>>2];q=N[h+4>>2];p=N[h+8>>2];s=N[c+20>>2];C=N[c+36>>2];D=N[c+24>>2];F=N[c+40>>2];G=N[c+32>>2];I=N[c>>2];L=N[c+16>>2];M=N[c+4>>2];O=N[c+8>>2];J[g+508>>2]=0;J[g+512>>2]=0;J[g+492>>2]=0;J[g+516>>2]=0;J[g+520>>2]=0;J[g+524>>2]=0;N[g+504>>2]=Q(F*x)+Q(Q(O*p)+Q(w*D));N[g+500>>2]=Q(C*x)+Q(Q(M*p)+Q(w*s));N[g+488>>2]=Q(F*l)+Q(Q(O*q)+Q(k*D));N[g+484>>2]=Q(C*l)+Q(Q(M*q)+Q(k*s));J[g+476>>2]=0;N[g+496>>2]=Q(G*x)+Q(Q(I*p)+Q(w*L));N[g+480>>2]=Q(G*l)+Q(Q(I*q)+Q(k*L));N[g+472>>2]=Q(F*j)+Q(Q(O*n)+Q(o*D));N[g+468>>2]=Q(C*j)+Q(Q(M*n)+Q(o*s));N[g+464>>2]=Q(G*j)+Q(Q(I*n)+Q(o*L));d=J[d+8>>2];tl(g+104|0,a,b,c,h,Q(ia[J[J[y>>2]+48>>2]](y)));J[g+324>>2]=y;J[g+320>>2]=d;J[g+104>>2]=7804;J[g+316>>2]=e;s=N[e+4>>2];N[g+312>>2]=f;N[g+304>>2]=s;ia[J[J[a>>2]+8>>2]](a,g+464|0,g+32|0,g+80|0);J[g+28>>2]=0;s=Q(-R);C=Q(Q(Q(p*s)-Q(w*m))-Q(x*v));D=Q(Q(Q(q*s)-Q(k*m))-Q(l*v));f=Q(D+Q(Q(r*l)+Q(Q(B*q)+Q(k*z))));s=Q(Q(Q(n*s)-Q(o*m))-Q(j*v));v=Q(s+Q(Q(u*j)+Q(Q(A*n)+Q(o*t))));m=v;j=Q(s+Q(Q(r*j)+Q(Q(B*n)+Q(o*z))));if(m>j){N[g+16>>2]=j;m=j}q=Q(D+Q(Q(u*l)+Q(Q(A*q)+Q(k*t))));l=q;if(f<l){N[g+20>>2]=f;l=f}o=Q(C+Q(Q(u*x)+Q(Q(A*p)+Q(w*t))));n=o;k=Q(C+Q(Q(r*x)+Q(Q(B*p)+Q(w*z))));if(k<o){N[g+24>>2]=k;n=k}J[g+12>>2]=0;N[g+16>>2]=N[g+32>>2]+m;N[g+20>>2]=N[g+36>>2]+l;N[g+24>>2]=N[g+40>>2]+n;N[g>>2]=N[g+80>>2]+(j>v?j:v);N[g+4>>2]=N[g+84>>2]+(f>q?f:q);N[g+8>>2]=N[g+88>>2]+(k>o?k:o);ia[J[J[y>>2]+64>>2]](y,g+104|0,g+16|0,g);break a}if((i|0)!=31){break a}ya(3176);if(J[y+16>>2]>0){E=0;while(1){i=J[y+24>>2]+P(E,80)|0;S=J[i+64>>2];p=N[i+56>>2];t=N[i+48>>2];u=N[i+52>>2];v=N[i+32>>2];z=N[i>>2];r=N[i+16>>2];A=N[i+36>>2];B=N[i+4>>2];s=N[i+20>>2];C=N[i+40>>2];D=N[i+8>>2];F=N[i+24>>2];G=N[h+48>>2];I=N[h+52>>2];L=N[h+56>>2];j=N[h+8>>2];k=N[h>>2];m=N[h+4>>2];l=N[h+24>>2];n=N[h+16>>2];w=N[h+20>>2];x=N[h+40>>2];o=N[h+32>>2];q=N[h+36>>2];J[g+164>>2]=0;J[g+148>>2]=0;J[g+132>>2]=0;J[g+116>>2]=0;N[g+144>>2]=Q(C*x)+Q(Q(D*o)+Q(F*q));N[g+140>>2]=Q(A*x)+Q(Q(B*o)+Q(s*q));N[g+136>>2]=Q(v*x)+Q(Q(z*o)+Q(r*q));N[g+128>>2]=Q(C*l)+Q(Q(D*n)+Q(F*w));N[g+124>>2]=Q(A*l)+Q(Q(B*n)+Q(s*w));N[g+120>>2]=Q(v*l)+Q(Q(z*n)+Q(r*w));N[g+112>>2]=Q(C*j)+Q(Q(D*k)+Q(F*m));N[g+108>>2]=Q(A*j)+Q(Q(B*k)+Q(s*m));N[g+104>>2]=Q(v*j)+Q(Q(z*k)+Q(r*m));N[g+160>>2]=L+Q(Q(p*x)+Q(Q(t*o)+Q(u*q)));N[g+156>>2]=I+Q(Q(p*l)+Q(Q(t*n)+Q(u*w)));N[g+152>>2]=G+Q(Q(p*j)+Q(Q(t*k)+Q(u*m)));J[g+40>>2]=-65535;J[g+48>>2]=E;J[g+32>>2]=8020;J[g+44>>2]=e;N[g+36>>2]=N[e+4>>2];i=J[d+8>>2];J[g+484>>2]=E;J[g+480>>2]=-1;J[g+472>>2]=i;J[g+468>>2]=S;J[g+464>>2]=d;J[g+476>>2]=g+104;hh(a,b,c,g+464|0,g+32|0,f);E=E+1|0;if((E|0)<J[y+16>>2]){continue}break}}xa()}ga=g+640|0}function NA(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=0,n=0,o=0,p=0,q=0,r=0;a:{if(!(H[i+64|0]&1)){break a}p=J[a+68>>2];n=J[a+28>>2];m=J[a+48>>2];if((m|0)>0){e=P(J[a+192>>2],1664525)+1013904223|0;b:{if((m|0)==1){break b}d=J[a+136>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((m|0)==2){break b}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((m|0)==3){break b}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((m|0)==4){break b}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;r=J[j>>2];q=j;e=P(e,1664525)+1013904223|0;j=e;c:{if(f>>>0>65535){break c}o=e>>>16^e;j=o;if(f>>>0>255){break c}o=o^o>>>8;j=o;if(f>>>0>15){break c}j=o^o>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[q>>2]=J[f>>2];J[f>>2]=r;if((c|0)!=(m|0)){continue}break}}J[a+192>>2]=e}if(J[i+20>>2]<=(b|0)){break a}if((n|0)>0){e=P(J[a+192>>2],1664525)+1013904223|0;d:{if((n|0)==1){break d}d=J[a+116>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((n|0)==2){break d}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((n|0)==3){break d}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((n|0)==4){break d}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;o=J[j>>2];q=j;e=P(e,1664525)+1013904223|0;j=e;e:{if(f>>>0>65535){break e}m=e>>>16^e;j=m;if(f>>>0>255){break e}m=m^m>>>8;j=m;if(f>>>0>15){break e}j=m^m>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[q>>2]=J[f>>2];J[f>>2]=o;if((c|0)!=(n|0)){continue}break}}J[a+192>>2]=e}if((p|0)<=0){break a}e=P(J[a+192>>2],1664525)+1013904223|0;f:{if((p|0)==1){break f}d=J[a+156>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((p|0)==2){break f}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((p|0)==3){break f}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((p|0)==4){break f}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;m=J[j>>2];o=j;e=P(e,1664525)+1013904223|0;j=e;g:{if(f>>>0>65535){break g}n=e>>>16^e;j=n;if(f>>>0>255){break g}n=n^n>>>8;j=n;if(f>>>0>15){break g}j=n^n>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[o>>2]=J[f>>2];J[f>>2]=m;if((c|0)!=(p|0)){continue}break}}J[a+192>>2]=e}e=J[a+48>>2];h:{i:{if(H[i+65|0]&1){if((e|0)>0){c=0;while(1){d=J[a+56>>2]+P(J[J[a+136>>2]+(c<<2)>>2],152)|0;if(J[d+136>>2]>(b|0)){e=J[a+16>>2];Qb(e+P(J[d+144>>2],244)|0,e+P(J[d+148>>2],244)|0,d);e=J[a+48>>2]}c=c+1|0;if((e|0)>(c|0)){continue}break}}if(J[i+20>>2]<=(b|0)){break h}if((h|0)>0){e=0;while(1){b=(e<<2)+g|0;c=J[b>>2];if(K[c+20|0]){c=yb(a,J[c+28>>2],N[i+12>>2]);d=yb(a,J[J[b>>2]+32>>2],N[i+12>>2]);b=J[b>>2];f=P(c,244);c=J[a+16>>2];ia[J[J[b>>2]+24>>2]](b,f+c|0,c+P(d,244)|0,N[i+12>>2])}e=e+1|0;if((h|0)!=(e|0)){continue}break}}c=J[a+28>>2];b=J[i+64>>2];if(!(b&512)){break i}if((c|0)<=0){break h}f=b&16?2:1;e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);d=P(e,f)<<2;k=N[b+100>>2];g=k>Q(0);if(g){b=J[a+76>>2]+P(J[d+J[a+156>>2]>>2],152)|0;l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);h=J[a+16>>2];Qb(h+P(J[b+144>>2],244)|0,h+P(J[b+148>>2],244)|0,b)}if(!(!(K[i+64|0]&16)|!g)){b=J[a+76>>2]+P(J[(d+J[a+156>>2]|0)+4>>2],152)|0;l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);d=J[a+16>>2];Qb(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b)}e=e+1|0;if((c|0)!=(e|0)){continue}break}break h}if((e|0)>0){c=0;while(1){d=J[a+56>>2]+P(J[J[a+136>>2]+(c<<2)>>2],152)|0;if(J[d+136>>2]>(b|0)){e=J[a+16>>2];Qb(e+P(J[d+144>>2],244)|0,e+P(J[d+148>>2],244)|0,d);e=J[a+48>>2]}c=c+1|0;if((e|0)>(c|0)){continue}break}}if(J[i+20>>2]<=(b|0)){break h}if((h|0)>0){e=0;while(1){b=(e<<2)+g|0;c=J[b>>2];if(K[c+20|0]){c=yb(a,J[c+28>>2],N[i+12>>2]);d=yb(a,J[J[b>>2]+32>>2],N[i+12>>2]);b=J[b>>2];f=P(c,244);c=J[a+16>>2];ia[J[J[b>>2]+24>>2]](b,f+c|0,c+P(d,244)|0,N[i+12>>2])}e=e+1|0;if((h|0)!=(e|0)){continue}break}}c=J[a+28>>2];if((c|0)>0){e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);e=e+1|0;if((c|0)!=(e|0)){continue}break}}d=J[a+68>>2];if((d|0)>0){c=0;while(1){b=J[a+76>>2]+P(J[J[a+156>>2]+(c<<2)>>2],152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}d=J[a+88>>2];if((d|0)<=0){break h}c=0;while(1){b=J[a+96>>2]+P(c,152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=k;k=N[b+104>>2];l=Q(l*k);k=k<l?k:l;N[b+124>>2]=k;N[b+120>>2]=-k;e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}break h}if((c|0)>0){e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);e=e+1|0;if((c|0)!=(e|0)){continue}break}}d=J[a+68>>2];if((d|0)>0){c=0;while(1){b=J[a+76>>2]+P(J[J[a+156>>2]+(c<<2)>>2],152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}d=J[a+88>>2];if((d|0)<=0){break h}c=0;while(1){b=J[a+96>>2]+P(c,152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=k;k=N[b+104>>2];l=Q(l*k);k=k<l?k:l;N[b+124>>2]=k;N[b+120>>2]=-k;e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}return Q(Q(0))}
  function sm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[a+168>>2]=J[a+152>>2];H[b+80|0]=1;H[b+60|0]=0;J[b+52>>2]=282;J[b>>2]=12132;J[b+76>>2]=0;H[b+100|0]=1;J[b+68>>2]=0;J[b+72>>2]=0;J[b+96>>2]=0;H[b+120|0]=1;J[b+88>>2]=0;J[b+92>>2]=0;J[b+116>>2]=0;H[b+140|0]=1;J[b+108>>2]=0;J[b+112>>2]=0;J[b+136>>2]=0;H[b+164|0]=1;J[b+144>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;J[b+160>>2]=0;J[b+152>>2]=0;J[b+156>>2]=0;J[b+168>>2]=0;J[b+28>>2]=2139095039;J[b+32>>2]=0;J[b+20>>2]=2139095039;J[b+24>>2]=2139095039;J[b+12>>2]=-8388609;J[b+16>>2]=0;J[b+4>>2]=-8388609;J[b+8>>2]=-8388609;c=J[a+56>>2];a:{if(d){J[b+56>>2]=c<<8&16711680|c<<24|(c>>>8&65280|c>>>24);H[b+4|0]=K[a+7|0];H[b+5|0]=K[a+6|0];H[b+6|0]=K[a+5|0];H[b+7|0]=K[a+4|0];H[b+8|0]=K[a+11|0];H[b+9|0]=K[a+10|0];H[b+10|0]=K[a+9|0];H[b+11|0]=K[a+8|0];H[b+12|0]=K[a+15|0];H[b+13|0]=K[a+14|0];H[b+14|0]=K[a+13|0];H[b+15|0]=K[a+12|0];H[b+16|0]=K[a+19|0];H[b+17|0]=K[a+18|0];H[b+18|0]=K[a+17|0];H[b+19|0]=K[a+16|0];H[b+20|0]=K[a+23|0];H[b+21|0]=K[a+22|0];H[b+22|0]=K[a+21|0];H[b+23|0]=K[a+20|0];H[b+24|0]=K[a+27|0];H[b+25|0]=K[a+26|0];H[b+26|0]=K[a+25|0];H[b+27|0]=K[a+24|0];H[b+28|0]=K[a+31|0];H[b+29|0]=K[a+30|0];H[b+30|0]=K[a+29|0];H[b+31|0]=K[a+28|0];H[b+32|0]=K[a+35|0];H[b+33|0]=K[a+34|0];H[b+34|0]=K[a+33|0];H[b+35|0]=K[a+32|0];H[b+36|0]=K[a+39|0];H[b+37|0]=K[a+38|0];H[b+38|0]=K[a+37|0];H[b+39|0]=K[a+36|0];H[b+40|0]=K[a+43|0];H[b+41|0]=K[a+42|0];H[b+42|0]=K[a+41|0];H[b+43|0]=K[a+40|0];H[b+44|0]=K[a+47|0];H[b+45|0]=K[a+46|0];H[b+46|0]=K[a+45|0];H[b+47|0]=K[a+44|0];H[b+48|0]=K[a+51|0];H[b+49|0]=K[a+50|0];H[b+50|0]=K[a+49|0];H[b+51|0]=K[a+48|0];c=J[a+144>>2];J[b+144>>2]=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);c=J[a+168>>2];c=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);break a}J[b+56>>2]=c;c=J[a+16>>2];J[b+12>>2]=J[a+12>>2];J[b+16>>2]=c;c=J[a+8>>2];J[b+4>>2]=J[a+4>>2];J[b+8>>2]=c;c=J[a+32>>2];J[b+28>>2]=J[a+28>>2];J[b+32>>2]=c;c=J[a+24>>2];J[b+20>>2]=J[a+20>>2];J[b+24>>2]=c;c=J[a+48>>2];J[b+44>>2]=J[a+44>>2];J[b+48>>2]=c;c=J[a+40>>2];J[b+36>>2]=J[a+36>>2];J[b+40>>2]=c;J[b+144>>2]=J[a+144>>2];c=J[a+168>>2]}J[b+168>>2]=c;H[b+60|0]=K[a+60|0];i=b+172|0;j=J[a+56>>2];b:{if(K[a+60|0]){c=J[b+136>>2];if(!(c?!c|!K[b+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[b+136>>2]=i;H[b+140|0]=0;c:{if(!d){if((j|0)<=0){break c}h=J[a+136>>2];while(1){f=e<<4;c=f+i|0;f=f+h|0;I[c>>1]=L[f>>1];I[c+2>>1]=L[f+2>>1];I[c+4>>1]=L[f+4>>1];I[c+6>>1]=L[f+6>>1];I[c+8>>1]=L[f+8>>1];I[c+10>>1]=L[f+10>>1];J[c+12>>2]=J[f+12>>2];e=e+1|0;if((j|0)!=(e|0)){continue}break}break c}if((j|0)<=0){break c}h=J[a+136>>2];while(1){f=e<<4;c=f+i|0;f=f+h|0;g=L[f>>1];I[c>>1]=g<<8|g>>>8;g=L[f+2>>1];I[c+2>>1]=g<<8|g>>>8;g=L[f+4>>1];I[c+4>>1]=g<<8|g>>>8;g=L[f+6>>1];I[c+6>>1]=g<<8|g>>>8;g=L[f+8>>1];I[c+8>>1]=g<<8|g>>>8;g=L[f+10>>1];I[c+10>>1]=g<<8|g>>>8;g=c;c=J[f+12>>2];J[g+12>>2]=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);e=e+1|0;if((j|0)!=(e|0)){continue}break}}f=b+128|0;e=j<<4;break b}c=J[b+96>>2];if(!(c?!c|!K[b+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[b+96>>2]=i;H[b+100|0]=0;J[b+92>>2]=j;J[b+88>>2]=j;d:{e:{if(!d){if((j|0)>0){break e}c=i;break d}if((j|0)<=0){c=i;break d}g=J[a+96>>2];c=i;while(1){h=f<<6;c=h+c|0;e=g+h|0;H[c|0]=K[e+3|0];H[c+1|0]=K[e+2|0];H[c+2|0]=K[e+1|0];H[c+3|0]=K[e|0];H[c+4|0]=K[e+7|0];H[c+5|0]=K[e+6|0];H[c+6|0]=K[e+5|0];H[c+7|0]=K[e+4|0];H[c+8|0]=K[e+11|0];H[c+9|0]=K[e+10|0];H[c+10|0]=K[e+9|0];H[c+11|0]=K[e+8|0];H[c+12|0]=K[e+15|0];H[c+13|0]=K[e+14|0];H[c+14|0]=K[e+13|0];H[c+15|0]=K[e+12|0];c=h+J[b+96>>2]|0;e=h+J[a+96>>2]|0;H[c+16|0]=K[e+19|0];H[c+17|0]=K[e+18|0];H[c+18|0]=K[e+17|0];H[c+19|0]=K[e+16|0];H[c+20|0]=K[e+23|0];H[c+21|0]=K[e+22|0];H[c+22|0]=K[e+21|0];H[c+23|0]=K[e+20|0];H[c+24|0]=K[e+27|0];H[c+25|0]=K[e+26|0];H[c+26|0]=K[e+25|0];H[c+27|0]=K[e+24|0];H[c+28|0]=K[e+31|0];H[c+29|0]=K[e+30|0];H[c+30|0]=K[e+29|0];H[c+31|0]=K[e+28|0];c=J[b+96>>2];k=h+c|0;g=J[a+96>>2];h=h+g|0;e=J[h+32>>2];J[k+32>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);e=J[h+36>>2];J[k+36>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);e=J[h+40>>2];J[k+40>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);f=f+1|0;if((j|0)!=(f|0)){continue}break}break d}f=J[a+96>>2];c=i;while(1){h=e<<6;c=h+c|0;f=f+h|0;g=J[f+4>>2];J[c>>2]=J[f>>2];J[c+4>>2]=g;g=J[f+12>>2];J[c+8>>2]=J[f+8>>2];J[c+12>>2]=g;f=h+J[a+96>>2]|0;g=J[f+20>>2];c=h+J[b+96>>2]|0;J[c+16>>2]=J[f+16>>2];J[c+20>>2]=g;g=J[f+28>>2];J[c+24>>2]=J[f+24>>2];J[c+28>>2]=g;c=J[b+96>>2];g=h+c|0;f=J[a+96>>2];h=h+f|0;J[g+32>>2]=J[h+32>>2];J[g+36>>2]=J[h+36>>2];J[g+40>>2]=J[h+40>>2];e=e+1|0;if((j|0)!=(e|0)){continue}break}}f=b+88|0;e=j<<6;if(!K[b+100|0]){break b}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[f>>2]=0;J[f+4>>2]=0;H[f+5|0]=0;H[f+6|0]=0;H[f+7|0]=0;H[f+8|0]=0;H[f+9|0]=0;H[f+10|0]=0;H[f+11|0]=0;H[f+12|0]=0;i=e+i|0;c=J[a+168>>2];e=J[b+160>>2];if(!(e?!e|!K[b+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[b+160>>2]=i;H[b+164|0]=0;J[b+156>>2]=c;J[b+152>>2]=c;f=J[a+168>>2];f:{if(!d){if((f|0)<=0){break f}f=J[a+160>>2];e=0;while(1){d=e<<5;c=d+i|0;d=d+f|0;I[c>>1]=L[d>>1];I[c+2>>1]=L[d+2>>1];I[c+4>>1]=L[d+4>>1];I[c+6>>1]=L[d+6>>1];I[c+8>>1]=L[d+8>>1];I[c+10>>1]=L[d+10>>1];J[c+12>>2]=J[d+12>>2];d=J[d+16>>2];J[c+28>>2]=0;J[c+20>>2]=0;J[c+24>>2]=0;J[c+16>>2]=d;e=e+1|0;if((e|0)<J[a+168>>2]){continue}break}break f}if((f|0)<=0){break f}j=J[a+160>>2];e=0;while(1){c=e<<5;a=c+i|0;c=c+j|0;d=L[c>>1];I[a>>1]=d<<8|d>>>8;d=L[c+2>>1];I[a+2>>1]=d<<8|d>>>8;d=L[c+4>>1];I[a+4>>1]=d<<8|d>>>8;d=L[c+6>>1];I[a+6>>1]=d<<8|d>>>8;d=L[c+8>>1];I[a+8>>1]=d<<8|d>>>8;d=L[c+10>>1];I[a+10>>1]=d<<8|d>>>8;d=J[c+12>>2];J[a+12>>2]=d<<24|d<<8&16711680|(d>>>8&65280|d>>>24);d=a;a=J[c+16>>2];J[d+16>>2]=a<<24|a<<8&16711680|(a>>>8&65280|a>>>24);e=e+1|0;if((f|0)!=(e|0)){continue}break}}if(i?K[b+164|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}J[b>>2]=0;H[b+157|0]=0;H[b+158|0]=0;H[b+159|0]=0;H[b+160|0]=0;H[b+161|0]=0;H[b+162|0]=0;H[b+163|0]=0;H[b+164|0]=0;J[b+152>>2]=0;J[b+156>>2]=0;return 1}function eb(a){var b=0,c=0,d=0,e=Q(0),f=0,g=0,h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0);d=ga-32|0;ga=d;a:{b:{c:{d:{e:{f:{k=J[a+372>>2];switch(J[k+32>>2]-1|0){case 3:break c;case 2:break d;case 1:break e;case 0:break f;default:break b}}c=J[a+364>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d>>2]=1065353216;J[k+20>>2]=0;c=c-1|0;J[a+364>>2]=c;b=J[((c<<2)+a|0)+348>>2];J[k+32>>2]=2;J[k+4>>2]=b;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;g:{if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;c=J[b+(c<<2)>>2];g=J[a+364>>2];J[a+364>>2]=g+1;b=(g<<2)+a|0;J[b+348>>2]=c;f=J[a+372>>2];j=J[f+32>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+4>>2]=1065353216;c=f+(j<<2)|0;J[c+16>>2]=0;J[a+364>>2]=g;b=J[b+348>>2];J[c>>2]=b;J[f+32>>2]=j+1;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;c=J[b+(c<<2)>>2];g=J[a+364>>2];J[a+364>>2]=g+1;b=(g<<2)+a|0;J[b+348>>2]=c;f=J[a+372>>2];j=J[f+32>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d+8>>2]=1065353216;J[d>>2]=0;J[d+4>>2]=0;c=f+(j<<2)|0;J[c+16>>2]=0;J[a+364>>2]=g;b=J[b+348>>2];J[c>>2]=b;J[f+32>>2]=j+1;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b;break b}f=1;break a}b=J[k+4>>2];c=J[k>>2];p=Q(N[b+20>>2]-N[c+20>>2]);r=Q(-p);q=Q(N[b+24>>2]-N[c+24>>2]);n=Q(-q);o=Q(N[b+16>>2]-N[c+16>>2]);i=Q(-o);while(1){h:{J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+(g<<2)>>2]=1065353216;l=N[d+4>>2];h=N[d>>2];m=Q(Q(o*l)+Q(h*r));e=N[d+8>>2];l=Q(Q(p*e)+Q(l*n));h=Q(Q(q*h)+Q(e*i));e=Q(Q(m*m)+Q(Q(l*l)+Q(h*h)));if(e>Q(0)){f=J[a+372>>2];j=J[f+32>>2];b=(j<<2)+f|0;J[b+16>>2]=0;c=J[a+364>>2]-1|0;J[a+364>>2]=c;k=b;b=J[((c<<2)+a|0)+348>>2];J[k>>2]=b;J[f+32>>2]=j+1;J[b+12>>2]=0;e=Q(Q(1)/Q(Y(e)));N[b+8>>2]=m*e;N[b+4>>2]=h*e;N[b>>2]=l*e;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break h}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];k=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=k;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=k;J[f+32>>2]=b+1;J[k+12>>2]=0;N[k+8>>2]=e*Q(-m);N[k+4>>2]=e*Q(-h);N[k>>2]=e*Q(-l);Za(d+16|0,a,k);c=J[d+28>>2];J[k+24>>2]=J[d+24>>2];J[k+28>>2]=c;c=J[d+20>>2];J[k+16>>2]=J[d+16>>2];J[k+20>>2]=c;if(eb(a)){break h}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b}g=g+1|0;if((g|0)!=3){continue}break b}break}f=1;break a}j=J[k+4>>2];b=J[k>>2];h=N[b+16>>2];o=Q(N[j+16>>2]-h);c=J[k+8>>2];e=N[b+20>>2];i=Q(N[c+20>>2]-e);l=Q(N[c+16>>2]-h);e=Q(N[j+20>>2]-e);n=Q(Q(o*i)-Q(l*e));m=e;e=N[b+24>>2];h=Q(N[c+24>>2]-e);e=Q(N[j+24>>2]-e);i=Q(Q(m*h)-Q(i*e));h=Q(Q(e*l)-Q(h*o));e=Q(Q(n*n)+Q(Q(i*i)+Q(h*h)));if(!(e>Q(0))){break b}J[k+28>>2]=0;c=J[a+364>>2]-1|0;J[a+364>>2]=c;b=J[((c<<2)+a|0)+348>>2];J[k+32>>2]=4;J[k+12>>2]=b;J[b+12>>2]=0;e=Q(Q(1)/Q(Y(e)));N[b+8>>2]=n*e;N[b+4>>2]=h*e;N[b>>2]=i*e;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;f=1;if(eb(a)){break a}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;f=J[b+(c<<2)>>2];J[((J[a+364>>2]<<2)+a|0)+348>>2]=f;j=J[a+372>>2];b=J[j+32>>2];c=(b<<2)+j|0;J[c>>2]=f;J[c+16>>2]=0;J[j+32>>2]=b+1;J[f+12>>2]=0;N[f+8>>2]=e*Q(-n);N[f+4>>2]=e*Q(-h);N[f>>2]=e*Q(-i);Za(d+16|0,a,f);c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;f=1;if(eb(a)){break a}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b;break b}j=J[k>>2];b=J[k+12>>2];h=N[b+16>>2];p=Q(N[j+16>>2]-h);c=J[k+4>>2];m=N[b+20>>2];r=Q(N[c+20>>2]-m);a=J[k+8>>2];e=N[b+24>>2];q=Q(N[a+24>>2]-e);n=Q(N[j+20>>2]-m);o=Q(N[c+24>>2]-e);i=Q(N[a+16>>2]-h);l=Q(N[j+24>>2]-e);h=Q(N[c+16>>2]-h);e=Q(N[a+20>>2]-m);e=Q(Q(Q(Q(p*r)*q)+Q(Q(Q(Q(Q(n*o)*i)+Q(Q(l*h)*e))-Q(Q(o*p)*e))-Q(Q(h*n)*q)))-Q(Q(r*l)*i));f=1;if(e>Q(0)|e<Q(0)){break a}}f=0}ga=d+32|0;return f}function lk(a){var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=0,y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=0,E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=0,O=0,P=0,R=0,S=0,T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=0,_=Q(0),$=0;d=ga-192|0;ga=d;ya(2603);c=J[a+1112>>2];if((c|0)>0){P=a+1048|0;Z=J[5806];_=N[5805];w=d+144|4;while(1){b=J[J[a+1120>>2]+(L<<2)>>2];F=J[b+24>>2];if(F){J[w+40>>2]=0;J[w+32>>2]=0;J[w+36>>2]=0;J[w+24>>2]=0;J[w+28>>2]=0;J[w+16>>2]=0;J[w+20>>2]=0;J[w+8>>2]=0;J[w+12>>2]=0;J[w>>2]=0;J[w+4>>2]=0;J[d+184>>2]=966609233;J[d+164>>2]=961656599;J[d+144>>2]=953267991;x=J[b+24>>2];R=(x|0)<=0;a:{if(R){j=Q(0);f=Q(0);g=Q(0);break a}$=x&1;e=J[b+32>>2];z=J[b+12>>2];b:{if((x|0)==1){g=Q(0);c=0;f=Q(0);j=Q(0);break b}M=x&-2;g=Q(0);c=0;f=Q(0);j=Q(0);D=0;while(1){A=c<<2;O=J[A+e>>2];k=N[z+A>>2];S=A|4;A=J[e+S>>2];i=N[z+S>>2];j=Q(Q(j+Q(N[O+8>>2]*k))+Q(N[A+8>>2]*i));g=Q(Q(g+Q(k*N[O+16>>2]))+Q(i*N[A+16>>2]));f=Q(Q(f+Q(k*N[O+12>>2]))+Q(i*N[A+12>>2]));c=c+2|0;D=D+2|0;if((M|0)!=(D|0)){continue}break}}if(!$){break a}M=e;e=c<<2;c=J[M+e>>2];k=N[e+z>>2];j=Q(j+Q(N[c+8>>2]*k));g=Q(g+Q(k*N[c+16>>2]));f=Q(f+Q(k*N[c+12>>2]))}J[b+240>>2]=0;l=g;g=N[b+128>>2];q=Q(l*g);N[b+236>>2]=q;p=Q(f*g);N[b+232>>2]=p;u=Q(j*g);N[b+228>>2]=u;if(!R){D=J[b+52>>2];A=J[b+32>>2];c=0;m=Q(9999999747378752e-20);j=Q(.00019999999494757503);f=Q(0);g=Q(.00029999998514540493);i=N[d+168>>2];h=N[d+160>>2];n=N[d+152>>2];l=N[d+148>>2];k=Q(0);while(1){z=J[A+(c<<2)>>2];s=N[z+16>>2];v=N[z+12>>2];e=D+(c<<4)|0;r=N[e>>2];t=N[e+4>>2];o=Q(N[z+8>>2]-u);n=Q(Q(o*N[e+8>>2])+n);N[d+152>>2]=n;l=Q(Q(o*t)+l);N[d+148>>2]=l;m=Q(Q(o*r)+m);N[d+144>>2]=m;r=N[e>>2];t=N[e+4>>2];o=Q(v-p);i=Q(Q(o*N[e+8>>2])+i);N[d+168>>2]=i;j=Q(Q(o*t)+j);N[d+164>>2]=j;h=Q(Q(o*r)+h);N[d+160>>2]=h;v=N[e>>2];r=N[e+4>>2];o=Q(s-q);g=Q(Q(o*N[e+8>>2])+g);N[d+184>>2]=g;f=Q(Q(o*r)+f);N[d+180>>2]=f;k=Q(Q(o*v)+k);N[d+176>>2]=k;c=c+1|0;if((x|0)!=(c|0)){continue}break}}if(!K[33308]){J[8326]=Z;N[8325]=_;H[33308]=1}Qj(d+144|0,d+96|0,d+48|0);c=J[b+240>>2];J[b+116>>2]=J[b+236>>2];J[b+120>>2]=c;c=J[b+232>>2];J[b+108>>2]=J[b+228>>2];J[b+112>>2]=c;c=J[d+108>>2];J[b+68>>2]=J[d+104>>2];J[b+72>>2]=c;c=J[d+100>>2];J[b+60>>2]=J[d+96>>2];J[b+64>>2]=c;c=J[d+124>>2];J[b+84>>2]=J[d+120>>2];J[b+88>>2]=c;c=J[d+116>>2];J[b+76>>2]=J[d+112>>2];J[b+80>>2]=c;c=J[d+132>>2];J[b+92>>2]=J[d+128>>2];J[b+96>>2]=c;c=J[d+140>>2];J[b+100>>2]=J[d+136>>2];J[b+104>>2]=c;f=N[b+68>>2];g=N[b- -64>>2];j=N[b+84>>2];i=N[b+76>>2];k=N[b+80>>2];n=N[b+172>>2];l=N[b+140>>2];p=N[b+156>>2];u=N[b+148>>2];s=N[b+164>>2];m=N[b+100>>2];v=N[b+168>>2];o=N[b+92>>2];r=N[b+136>>2];q=N[b+96>>2];t=N[b+152>>2];h=N[b+60>>2];G=N[b+132>>2];J[b+316>>2]=0;J[b+320>>2]=0;J[b+224>>2]=0;J[b+208>>2]=0;J[b+192>>2]=0;J[b+324>>2]=0;J[b+328>>2]=0;J[b+332>>2]=0;J[b+336>>2]=0;J[b+340>>2]=0;J[b+344>>2]=0;y=Q(Q(n*m)+Q(Q(l*o)+Q(p*q)));B=Q(Q(s*m)+Q(Q(G*o)+Q(u*q)));C=Q(Q(v*m)+Q(Q(r*o)+Q(t*q)));T=Q(Q(m*y)+Q(Q(o*B)+Q(q*C)));N[b+220>>2]=T;U=Q(Q(j*y)+Q(Q(i*B)+Q(k*C)));N[b+216>>2]=U;V=Q(Q(f*y)+Q(Q(h*B)+Q(g*C)));N[b+212>>2]=V;y=Q(Q(n*j)+Q(Q(l*i)+Q(p*k)));B=Q(Q(s*j)+Q(Q(G*i)+Q(u*k)));C=Q(Q(v*j)+Q(Q(r*i)+Q(t*k)));W=Q(Q(m*y)+Q(Q(o*B)+Q(q*C)));N[b+204>>2]=W;X=Q(Q(j*y)+Q(Q(i*B)+Q(k*C)));N[b+200>>2]=X;y=Q(Q(f*y)+Q(Q(h*B)+Q(g*C)));N[b+196>>2]=y;n=Q(Q(n*f)+Q(Q(l*h)+Q(g*p)));l=Q(Q(s*f)+Q(Q(G*h)+Q(u*g)));p=Q(Q(v*f)+Q(Q(r*h)+Q(g*t)));v=Q(Q(m*n)+Q(Q(o*l)+Q(q*p)));N[b+188>>2]=v;r=Q(Q(j*n)+Q(Q(i*l)+Q(p*k)));N[b+184>>2]=r;t=Q(Q(f*n)+Q(Q(h*l)+Q(g*p)));N[b+180>>2]=t;c:{if((F|0)<=0){f=Q(0);g=Q(0);i=Q(0);h=Q(0);n=Q(0);l=Q(0);break c}x=J[b+32>>2];G=N[b+236>>2];B=N[b+232>>2];C=N[b+228>>2];z=J[b+12>>2];c=0;f=Q(0);g=Q(0);i=Q(0);h=Q(0);n=Q(0);l=Q(0);while(1){D=c<<2;e=J[D+x>>2];E=N[e+44>>2];s=N[e+48>>2];p=N[z+D>>2];u=Q(N[e+40>>2]*p);l=Q(u+l);N[b+316>>2]=l;s=Q(p*s);h=Q(s+h);N[b+324>>2]=h;p=Q(p*E);n=Q(p+n);N[b+320>>2]=n;E=N[e+16>>2];Y=Q(N[e+8>>2]-C);I=Q(N[e+12>>2]-B);f=Q(Q(Q(Y*p)-Q(u*I))+f);N[b+340>>2]=f;E=Q(E-G);g=Q(Q(Q(E*u)-Q(s*Y))+g);N[b+336>>2]=g;i=Q(i+Q(Q(I*s)-Q(p*E)));N[b+332>>2]=i;c=c+1|0;if((F|0)!=(c|0)){continue}break}}J[b+328>>2]=0;J[b+344>>2]=0;p=N[b+128>>2];I=Q(p*h);h=Q(Q(1)-N[b+356>>2]);N[b+324>>2]=I*h;N[b+320>>2]=Q(p*n)*h;N[b+316>>2]=Q(l*p)*h;h=Q(Q(1)-N[b+360>>2]);N[b+340>>2]=h*Q(Q(T*f)+Q(Q(V*i)+Q(g*U)));N[b+336>>2]=Q(Q(W*f)+Q(Q(y*i)+Q(g*X)))*h;N[b+332>>2]=Q(Q(v*f)+Q(Q(t*i)+Q(r*g)))*h;qa(b+244|0,0,72);d:{f=N[b+364>>2];if(!(f>Q(0))|J[b+24>>2]<=0){break d}c=0;while(1){e=J[b+52>>2]+(c<<4)|0;g=N[e+8>>2];i=N[e>>2];h=N[e+4>>2];n=N[b+108>>2];l=N[b+68>>2];p=N[b+60>>2];u=N[b+64>>2];s=N[b+112>>2];v=N[b+76>>2];r=N[b+116>>2];e=J[J[b+32>>2]+(c<<2)>>2];J[e+20>>2]=0;t=N[e+16>>2];N[e+16>>2]=t+Q(f*Q(Q(r+Q(Q(g*m)+Q(Q(i*o)+Q(h*q))))-t));m=N[e+12>>2];N[e+12>>2]=m+Q(f*Q(Q(s+Q(Q(g*j)+Q(Q(i*v)+Q(h*k))))-m));j=N[e+8>>2];N[e+8>>2]=j+Q(f*Q(Q(n+Q(Q(g*l)+Q(Q(i*p)+Q(h*u))))-j));c=c+1|0;if((c|0)>=J[b+24>>2]){break d}f=N[b+364>>2];m=N[b+100>>2];q=N[b+96>>2];o=N[b+92>>2];j=N[b+84>>2];k=N[b+80>>2];continue}}e:{if(!K[b+377|0]){break e}c=1;x=J[b+32>>2];e=J[x>>2];f=N[e+8>>2];g=f;i=N[e+12>>2];h=i;n=N[e+16>>2];l=n;k=N[e+20>>2];j=k;if((F|0)>1){while(1){e=J[x+(c<<2)>>2];m=N[e+8>>2];f=f<m?m:f;g=g>m?m:g;m=N[e+20>>2];k=k<m?m:k;o=N[e+16>>2];n=n<o?o:n;q=N[e+12>>2];i=i<q?q:i;j=j>m?m:j;l=l>o?o:l;h=h>q?q:h;c=c+1|0;if((F|0)!=(c|0)){continue}break}}N[d+44>>2]=k;N[d+40>>2]=n;N[d+36>>2]=i;N[d+32>>2]=f;N[d+28>>2]=j;N[d+24>>2]=l;N[d+20>>2]=h;N[d+16>>2]=g;c=J[b+348>>2];if(c){j=N[b+316>>2];g=N[b+320>>2];k=N[b+324>>2];f=N[a+452>>2];J[d+12>>2]=0;N[d+8>>2]=Q(f*k)*Q(3);N[d+4>>2]=Q(f*g)*Q(3);N[d>>2]=Q(j*f)*Q(3);Cd(P,c,d+16|0,d,N[a+464>>2]);break e}J[b+348>>2]=Db(P,d+16|0,b)}c=J[a+1112>>2]}L=L+1|0;if((L|0)<(c|0)){continue}break}}xa();ga=d+192|0}function yo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ga-800|0;ga=f;J[f+796>>2]=a;J[f+792>>2]=b;J[f+788>>2]=c;J[f+784>>2]=d;J[f+780>>2]=e;a=J[f+796>>2];c=J[f+784>>2];b=ga-16|0;J[b+12>>2]=J[f+792>>2];d=J[b+12>>2];J[b+12>>2]=J[f+792>>2];e=J[b+12>>2]+4|0;J[b+12>>2]=J[f+792>>2];g=f+744|0;na(g,d,e,J[b+12>>2]+8|0);b=f+760|0;za(b,c,g);c=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+712|0;na(h,d,e,J[g+12>>2]+8|0);d=f+728|0;za(d,c,h);ia[J[J[a>>2]+8>>2]](a,b,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+680|0;na(g,c,d,J[e+12>>2]+8|0);c=f+696|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+648|0;na(h,d,e,J[g+12>>2]+8|0);d=f+664|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+616|0;na(g,c,d,J[e+12>>2]+8|0);c=f+632|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+584|0;na(h,d,e,J[g+12>>2]+8|0);d=f+600|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+552|0;na(g,c,d,J[e+12>>2]+8|0);c=f+568|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+520|0;na(h,d,e,J[g+12>>2]+8|0);d=f+536|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+488|0;na(g,c,d,J[e+12>>2]+8|0);c=f+504|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+456|0;na(h,d,e,J[g+12>>2]+8|0);d=f+472|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+424|0;na(g,c,d,J[e+12>>2]+8|0);c=f+440|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+392|0;na(h,d,e,J[g+12>>2]+8|0);d=f+408|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+360|0;na(g,c,d,J[e+12>>2]+8|0);c=f+376|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+328|0;na(h,d,e,J[g+12>>2]+8|0);d=f+344|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+296|0;na(g,c,d,J[e+12>>2]+8|0);c=f+312|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+264|0;na(h,d,e,J[g+12>>2]+8|0);d=f+280|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+232|0;na(g,c,d,J[e+12>>2]+8|0);c=f+248|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+200|0;na(h,d,e,J[g+12>>2]+8|0);d=f+216|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+168|0;na(g,c,d,J[e+12>>2]+8|0);c=f+184|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+136|0;na(h,d,e,J[g+12>>2]+8|0);d=f+152|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+104|0;na(g,c,d,J[e+12>>2]+8|0);c=f+120|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+72|0;na(h,d,e,J[g+12>>2]+8|0);d=f+88|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+40|0;na(g,c,d,J[e+12>>2]+8|0);c=f+56|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+8|0;na(h,d,e,J[g+12>>2]+8|0);d=f+24|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);ga=f+800|0}function pd(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),E=Q(0),F=Q(0),G=Q(0),I=0,L=0,M=0,O=0,P=0,S=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0;f=N[b+52>>2];e=N[b+56>>2];p=N[a+96>>2];s=N[a+100>>2];t=N[a+104>>2];q=N[b+20>>2];r=N[b+24>>2];k=N[a- -64>>2];o=N[a+80>>2];u=N[a+52>>2];l=N[a+68>>2];v=N[a+84>>2];h=N[a+56>>2];w=N[b+36>>2];i=N[a+72>>2];y=N[b+40>>2];m=N[a+88>>2];d=N[b+48>>2];g=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];B=N[b+16>>2];n=N[a+48>>2];j=N[b+32>>2];J[a+1124>>2]=0;J[a+1108>>2]=0;J[a+1092>>2]=0;J[a+1076>>2]=0;M=a+1104|0;N[M>>2]=Q(m*y)+Q(Q(h*j)+Q(i*w));O=a+1100|0;N[O>>2]=Q(v*y)+Q(Q(u*j)+Q(l*w));P=a+1096|0;N[P>>2]=Q(o*y)+Q(Q(n*j)+Q(k*w));S=a+1088|0;N[S>>2]=Q(m*r)+Q(Q(h*B)+Q(i*q));V=a+1084|0;N[V>>2]=Q(v*r)+Q(Q(u*B)+Q(l*q));W=a+1080|0;N[W>>2]=Q(o*r)+Q(Q(n*B)+Q(k*q));X=a+1072|0;N[X>>2]=Q(m*g)+Q(Q(h*z)+Q(A*i));Z=a+1068|0;N[Z>>2]=Q(v*g)+Q(Q(u*z)+Q(A*l));N[a+1064>>2]=Q(o*g)+Q(Q(n*z)+Q(k*A));_=a+1120|0;N[_>>2]=e+Q(Q(t*y)+Q(Q(p*j)+Q(w*s)));$=a+1116|0;N[$>>2]=f+Q(Q(t*r)+Q(Q(p*B)+Q(q*s)));aa=a+1112|0;N[aa>>2]=d+Q(Q(t*g)+Q(Q(p*z)+Q(A*s)));f=N[c+52>>2];e=N[c+56>>2];p=N[a+160>>2];s=N[a+164>>2];t=N[a+168>>2];q=N[c+20>>2];r=N[c+24>>2];k=N[a+128>>2];o=N[a+144>>2];u=N[a+116>>2];l=N[a+132>>2];v=N[a+148>>2];h=N[a+120>>2];i=N[a+136>>2];w=N[c+36>>2];m=N[a+152>>2];y=N[c+40>>2];d=N[c+48>>2];g=N[c+8>>2];z=N[c>>2];A=N[c+4>>2];B=N[c+16>>2];n=N[a+112>>2];j=N[c+32>>2];J[a+1188>>2]=0;J[a+1172>>2]=0;J[a+1156>>2]=0;J[a+1140>>2]=0;N[a+1168>>2]=Q(m*y)+Q(Q(h*j)+Q(i*w));N[a+1164>>2]=Q(v*y)+Q(Q(u*j)+Q(l*w));N[a+1160>>2]=Q(o*y)+Q(Q(n*j)+Q(k*w));N[a+1152>>2]=Q(m*r)+Q(Q(h*B)+Q(i*q));N[a+1148>>2]=Q(v*r)+Q(Q(u*B)+Q(l*q));N[a+1144>>2]=Q(o*r)+Q(Q(n*B)+Q(k*q));N[a+1136>>2]=Q(m*g)+Q(Q(h*z)+Q(A*i));N[a+1132>>2]=Q(v*g)+Q(Q(u*z)+Q(A*l));N[a+1128>>2]=Q(o*g)+Q(Q(n*z)+Q(k*A));I=a+1184|0;N[I>>2]=e+Q(Q(t*y)+Q(Q(p*j)+Q(w*s)));c=a+1180|0;N[c>>2]=f+Q(Q(t*r)+Q(Q(p*B)+Q(q*s)));b=a+1176|0;N[b>>2]=d+Q(Q(t*g)+Q(Q(p*z)+Q(A*s)));J[a+1268>>2]=0;s=N[X>>2];o=N[W>>2];u=N[O>>2];l=N[P>>2];v=N[V>>2];f=Q(Q(o*u)-Q(l*v));t=N[a+1064>>2];h=N[M>>2];i=N[S>>2];e=Q(Q(v*h)-Q(u*i));k=N[Z>>2];d=Q(Q(i*l)-Q(h*o));j=Q(Q(1)/Q(Q(s*f)+Q(Q(t*e)+Q(k*d))));m=Q(N[I>>2]-N[_>>2]);n=Q(N[b>>2]-N[aa>>2]);g=Q(Q(f*j)*n);f=Q(N[c>>2]-N[$>>2]);p=Q(Q(Q(Q(Q(t*v)-Q(o*k))*j)*m)+Q(g+Q(f*Q(Q(Q(k*l)-Q(u*t))*j))));N[a+1264>>2]=p;l=Q(Q(Q(Q(Q(s*o)-Q(i*t))*j)*m)+Q(Q(Q(d*j)*n)+Q(f*Q(Q(Q(t*h)-Q(l*s))*j))));N[a+1260>>2]=l;f=Q(Q(Q(Q(Q(k*i)-Q(v*s))*j)*m)+Q(Q(Q(e*j)*n)+Q(f*Q(Q(Q(s*u)-Q(h*k))*j))));N[a+1256>>2]=f;N[a+840>>2]=f;e=N[a+680>>2];d=N[a+696>>2];a:{if(!(e>d)){if(e>f){J[a+856>>2]=2;d=Q(f-e);break a}if(d<f){J[a+856>>2]=1;d=Q(f-d);break a}}J[a+856>>2]=0;d=Q(0)}N[a+844>>2]=l;N[a+824>>2]=d;e=N[a+684>>2];d=N[a+700>>2];b:{if(!(e>d)){c:{if(!(e>l)){if(!(d<l)){break c}J[a+860>>2]=1;d=Q(l-d);break b}J[a+860>>2]=2;d=Q(l-e);break b}}J[a+860>>2]=0;d=Q(0)}N[a+848>>2]=p;N[a+828>>2]=d;e=N[a+688>>2];d=N[a+704>>2];d:{if(!(e>d)){e:{if(!(e>p)){if(!(d<p)){break e}J[a+864>>2]=1;d=Q(p-d);break d}J[a+864>>2]=2;d=Q(p-e);break d}}J[a+864>>2]=0;d=Q(0)}N[a+832>>2]=d;C=N[a+1072>>2];g=N[a+1080>>2];z=N[a+1100>>2];A=N[a+1096>>2];k=N[a+1084>>2];o=Q(Q(g*z)-Q(A*k));w=N[a+1064>>2];F=N[a+1104>>2];G=N[a+1088>>2];e=Q(Q(k*F)-Q(z*G));y=N[a+1068>>2];d=Q(Q(G*A)-Q(F*g));E=Q(Q(1)/Q(Q(C*o)+Q(Q(w*e)+Q(y*d))));B=N[a+1164>>2];u=Q(Q(Q(C*g)-Q(G*w))*E);j=N[a+1132>>2];l=Q(d*E);v=Q(Q(Q(w*F)-Q(A*C))*E);p=N[a+1148>>2];s=Q(Q(B*u)+Q(Q(j*l)+Q(v*p)));h=Q(Q(Q(y*G)-Q(k*C))*E);i=Q(e*E);m=Q(Q(Q(C*z)-Q(F*y))*E);t=Q(Q(B*h)+Q(Q(j*i)+Q(m*p)));n=Q(-C);f=Q(-G);q=N[a+1160>>2];k=Q(Q(Q(w*k)-Q(g*y))*E);r=N[a+1128>>2];o=Q(o*E);g=N[a+1144>>2];e=Q(Q(Q(y*A)-Q(z*w))*E);d=Q(Q(q*k)+Q(Q(r*o)+Q(g*e)));f:{g:{if(d<Q(1)){if(d>Q(-1)){N[a+1192>>2]=$a(Q(-Q(Q(B*k)+Q(Q(j*o)+Q(e*p)))),Q(Q(N[a+1168>>2]*k)+Q(Q(N[a+1136>>2]*o)+Q(e*N[a+1152>>2]))));c=a+1196|0;e=Q(T(Q(U(d,Q(-1))),Q(1)));b=(D(e),x(2));I=b&2147483647;h:{if(I>>>0>=1065353216){d=Q(+e*1.5707963267948966+7.52316384526264e-37);if((I|0)==1065353216){break h}d=Q(Q(0)/Q(e-e));break h}i:{if(I>>>0<=1056964607){if(I-8388608>>>0<956301312){break i}d=Q(e*e);d=Q(Q(e*Q(Q(Q(Q(d*Q(Q(d*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*d)/Q(Q(d*Q(-.7066296339035034))+Q(1))))+e);break h}d=Q(Q(Q(1)-Q(R(e)))*Q(.5));L=Y(+d);L=L+L*+Q(Q(Q(Q(d*Q(Q(d*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*d)/Q(Q(d*Q(-.7066296339035034))+Q(1)));d=Q(1.5707963267948966-(L+L));e=(b|0)>=0?d:Q(-d)}d=e}N[c>>2]=d;d=$a(Q(-Q(Q(q*u)+Q(Q(r*l)+Q(g*v)))),Q(Q(q*h)+Q(Q(r*i)+Q(g*m))));break f}J[a+1196>>2]=-1077342245;N[a+1192>>2]=-$a(t,s);break g}J[a+1196>>2]=1070141403;N[a+1192>>2]=$a(t,s)}d=Q(0)}J[a+1236>>2]=0;N[a+1200>>2]=d;J[a+1252>>2]=0;J[a+1220>>2]=0;h=Q(Q(C*g)+Q(r*f));i=Q(Q(G*q)-Q(g*F));m=Q(Q(F*r)+Q(q*n));d=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(i*i)+Q(m*m))))));N[a+1232>>2]=h*d;N[a+1228>>2]=m*d;N[a+1224>>2]=i*d;f=Q(Q(r*m)-Q(i*g));e=Q(Q(g*h)-Q(m*q));d=Q(Q(q*i)-Q(h*r));n=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(d*d))))));N[a+1248>>2]=f*n;N[a+1244>>2]=d*n;N[a+1240>>2]=e*n;f=Q(Q(i*G)-Q(C*m));e=Q(Q(m*F)-Q(G*h));d=Q(Q(h*C)-Q(F*i));n=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(d*d))))));N[a+1216>>2]=f*n;N[a+1212>>2]=d*n;N[a+1208>>2]=e*n;if(K[a+1301|0]){d=N[J[a+28>>2]+344>>2];e=N[J[a+32>>2]+344>>2];H[a+1280|0]=d<Q(1.1920928955078125e-7)|e<Q(1.1920928955078125e-7);d=Q(d+e);d=d>Q(0)?Q(e/d):Q(.5);N[a+1272>>2]=d;N[a+1276>>2]=Q(1)-d}}function TB(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=0,F=0;a=ga-4240|0;ga=a;F=J[c+4>>2]-17>>>0<=1?J[d+4>>2]-17>>>0<2:F;while(1){Je();q=w<<4;k=N[q+30888>>2];n=N[q+30880>>2];l=N[q+30884>>2];r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];z=N[e+40>>2];m=N[e+8>>2];A=N[e+24>>2];u=q+(a+1264|0)|0;J[u+12>>2]=0;B=m;m=Q(-n);N[u+8>>2]=Q(Q(B*m)-Q(A*l))-Q(z*k);N[u+4>>2]=Q(Q(x*m)-Q(y*l))-Q(p*k);N[u>>2]=Q(Q(s*m)-Q(t*l))-Q(r*k);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];q=q+(a+272|0)|0;J[q+12>>2]=0;N[q+8>>2]=Q(y*k)+Q(Q(z*n)+Q(l*A));N[q+4>>2]=Q(t*k)+Q(Q(p*n)+Q(l*x));N[q>>2]=Q(m*k)+Q(Q(r*n)+Q(l*s));w=w+1|0;if((w|0)!=42){continue}break}q=42;E=ia[J[J[c>>2]+84>>2]](c)|0;if((E|0)>0){u=a+3256|0;w=0;while(1){ia[J[J[c>>2]+88>>2]](c,w,a+3248|0);m=N[e+8>>2];r=N[e>>2];s=N[e+4>>2];t=N[e+24>>2];p=N[e+16>>2];x=N[e+20>>2];k=N[u>>2];l=N[a+3248>>2];n=N[a+3252>>2];N[u>>2]=Q(N[e+40>>2]*k)+Q(Q(N[e+32>>2]*l)+Q(n*N[e+36>>2]));J[a+3260>>2]=0;N[a+3252>>2]=Q(t*k)+Q(Q(p*l)+Q(n*x));N[a+3248>>2]=Q(m*k)+Q(Q(r*l)+Q(s*n));Je();C=J[u+4>>2];o=q<<4;v=o+30888|0;J[v>>2]=J[u>>2];J[v+4>>2]=C;C=J[a+3252>>2];v=o+30880|0;J[v>>2]=J[a+3248>>2];J[v+4>>2]=C;r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];l=N[e+40>>2];k=N[e+8>>2];z=N[e+24>>2];v=o+(a+1264|0)|0;J[v+12>>2]=0;n=N[a+3248>>2];m=Q(-n);D=Q(k*m);k=N[a+3252>>2];B=l;l=N[u>>2];N[v+8>>2]=Q(D-Q(z*k))-Q(B*l);N[v+4>>2]=Q(Q(x*m)-Q(y*k))-Q(p*l);N[v>>2]=Q(Q(s*m)-Q(t*k))-Q(r*l);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];o=o+(a+272|0)|0;J[o+12>>2]=0;N[o+8>>2]=Q(y*l)+Q(Q(z*n)+Q(k*A));N[o+4>>2]=Q(t*l)+Q(Q(p*n)+Q(k*x));N[o>>2]=Q(m*l)+Q(Q(r*n)+Q(k*s));q=q+1|0;w=w+1|0;if((E|0)!=(w|0)){continue}break}}E=ia[J[J[d>>2]+84>>2]](d)|0;if((E|0)>0){u=a+3256|0;w=0;while(1){ia[J[J[d>>2]+88>>2]](d,w,a+3248|0);m=N[f+8>>2];r=N[f>>2];s=N[f+4>>2];t=N[f+24>>2];p=N[f+16>>2];x=N[f+20>>2];k=N[u>>2];l=N[a+3248>>2];n=N[a+3252>>2];N[u>>2]=Q(N[f+40>>2]*k)+Q(Q(N[f+32>>2]*l)+Q(n*N[f+36>>2]));J[a+3260>>2]=0;N[a+3252>>2]=Q(t*k)+Q(Q(p*l)+Q(n*x));N[a+3248>>2]=Q(m*k)+Q(Q(r*l)+Q(s*n));Je();C=J[u+4>>2];o=q<<4;v=o+30888|0;J[v>>2]=J[u>>2];J[v+4>>2]=C;C=J[a+3252>>2];v=o+30880|0;J[v>>2]=J[a+3248>>2];J[v+4>>2]=C;r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];l=N[e+40>>2];k=N[e+8>>2];z=N[e+24>>2];v=o+(a+1264|0)|0;J[v+12>>2]=0;n=N[a+3248>>2];m=Q(-n);D=Q(k*m);k=N[a+3252>>2];B=l;l=N[u>>2];N[v+8>>2]=Q(D-Q(z*k))-Q(B*l);N[v+4>>2]=Q(Q(x*m)-Q(y*k))-Q(p*l);N[v>>2]=Q(Q(s*m)-Q(t*k))-Q(r*l);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];o=o+(a+272|0)|0;J[o+12>>2]=0;N[o+8>>2]=Q(y*l)+Q(Q(z*n)+Q(k*A));N[o+4>>2]=Q(t*l)+Q(Q(p*n)+Q(k*x));N[o>>2]=Q(m*l)+Q(Q(r*n)+Q(k*s));q=q+1|0;w=w+1|0;if((E|0)!=(w|0)){continue}break}}ia[J[J[c>>2]+76>>2]](c,a+1264|0,a+3248|0,q);ia[J[J[d>>2]+76>>2]](d,a+272|0,a+2256|0,q);a:{if((q|0)<=0){m=Q(0xde0b6b000000000);k=Q(0);l=Q(0);n=Q(0);x=Q(0);break a}w=0;m=Q(0xde0b6b000000000);x=Q(0);n=Q(0);l=Q(0);k=Q(0);while(1){Je();u=w<<4;r=F?Q(0):N[u+30888>>2];s=N[u+30880>>2];t=N[u+30884>>2];b:{if(!(+Q(Q(r*r)+Q(Q(s*s)+Q(t*t)))>.01)){break b}o=u+(a+2256|0)|0;p=N[o+8>>2];y=N[o>>2];z=N[o+4>>2];o=u+(a+3248|0)|0;A=N[o+8>>2];D=N[o>>2];B=N[o+4>>2];p=Q(Q(r*(F?Q(0):Q(Q(Q(Q(p*N[f+40>>2])+Q(Q(y*N[f+32>>2])+Q(z*N[f+36>>2])))+N[f+56>>2])-Q(Q(Q(A*N[e+40>>2])+Q(Q(D*N[e+32>>2])+Q(B*N[e+36>>2])))+N[e+56>>2]))))+Q(Q(s*Q(Q(Q(Q(p*N[f+8>>2])+Q(Q(y*N[f>>2])+Q(z*N[f+4>>2])))+N[f+48>>2])-Q(Q(Q(A*N[e+8>>2])+Q(Q(D*N[e>>2])+Q(B*N[e+4>>2])))+N[e+48>>2])))+Q(t*Q(Q(Q(Q(p*N[f+24>>2])+Q(Q(y*N[f+16>>2])+Q(z*N[f+20>>2])))+N[f+52>>2])-Q(Q(Q(A*N[e+24>>2])+Q(Q(D*N[e+16>>2])+Q(B*N[e+20>>2])))+N[e+52>>2])))));if(!(p<m)){break b}x=N[u+30892>>2];k=s;l=t;n=r;m=p}w=w+1|0;if((w|0)!=(q|0)){continue}break}}Dc(c);Dc(d);q=0;if(!(m<Q(0))){r=Dc(c);s=Dc(d);b=Bg(a+192|0,c,d,b,0);t=N[e+52>>2];p=N[e+56>>2];y=N[e+48>>2];d=J[e+12>>2];c=a- -64|0;J[c>>2]=J[e+8>>2];J[c+4>>2]=d;c=J[e+4>>2];J[a+56>>2]=J[e>>2];J[a+60>>2]=c;c=J[e+28>>2];J[a+80>>2]=J[e+24>>2];J[a+84>>2]=c;c=J[e+20>>2];J[a+72>>2]=J[e+16>>2];J[a+76>>2]=c;c=J[e+40>>2];d=J[e+44>>2];w=J[e+32>>2];e=J[e+36>>2];J[a+116>>2]=0;m=Q(m+Q(Q(r+s)+Q(.5)));N[a+112>>2]=p+Q(n*m);N[a+108>>2]=t+Q(l*m);J[a+96>>2]=c;J[a+100>>2]=d;N[a+104>>2]=y+Q(k*m);J[a+88>>2]=w;J[a+92>>2]=e;c=J[f+12>>2];J[a+128>>2]=J[f+8>>2];J[a+132>>2]=c;c=J[f+4>>2];J[a+120>>2]=J[f>>2];J[a+124>>2]=c;c=J[f+28>>2];J[a+144>>2]=J[f+24>>2];J[a+148>>2]=c;c=J[f+20>>2];J[a+136>>2]=J[f+16>>2];J[a+140>>2]=c;c=J[f+44>>2];J[a+160>>2]=J[f+40>>2];J[a+164>>2]=c;c=J[f+36>>2];J[a+152>>2]=J[f+32>>2];J[a+156>>2]=c;c=J[f+60>>2];J[a+176>>2]=J[f+56>>2];J[a+180>>2]=c;c=J[f+52>>2];J[a+168>>2]=J[f+48>>2];J[a+172>>2]=c;J[a+184>>2]=1566444395;H[a+48|0]=0;J[a+8>>2]=18660;J[b+16>>2]=0;N[b+12>>2]=-n;N[b+8>>2]=-l;N[b+4>>2]=-k;zb(b,a+56|0,a+8|0,j,0);b=K[a+48|0];if(b){r=N[a+44>>2];s=N[a+32>>2];t=N[a+36>>2];p=N[a+28>>2];J[h+12>>2]=0;m=Q(m-r);N[h>>2]=p-Q(k*m);N[h+8>>2]=t-Q(n*m);N[h+4>>2]=s-Q(l*m);c=J[a+40>>2];J[i+8>>2]=J[a+36>>2];J[i+12>>2]=c;c=J[a+32>>2];J[i>>2]=J[a+28>>2];J[i+4>>2]=c;N[g+12>>2]=x;N[g+8>>2]=n;N[g+4>>2]=l;N[g>>2]=k}q=(b|0)!=0}ga=a+4240|0;return q|0}function Jk(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=Q(0),h=0,i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=0,t=0,u=0,v=0,w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),M=0,O=Q(0),R=Q(0);ya(3024);c=J[a+84>>2];if(c){ia[c|0](a,b)}ia[J[J[a>>2]+140>>2]](a,b);J[a+32>>2]=0;N[a+28>>2]=b;J[a+48>>2]=ia[J[J[a>>2]+20>>2]](a);c=ga-464|0;ga=c;ya(2512);ya(2773);if(J[a+308>>2]>0){while(1){e=J[a+24>>2];ia[J[J[e>>2]+16>>2]](e,J[J[a+316>>2]+(k<<2)>>2]);k=k+1|0;if((k|0)<J[a+308>>2]){continue}break}}e=J[a+316>>2];if(!(e?!e|!K[a+320|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+316>>2]=0;H[a+320|0]=1;J[a+308>>2]=0;J[a+312>>2]=0;xa();if(J[a+232>>2]>0){s=c- -64|0;k=0;while(1){e=J[J[a+240>>2]+(k<<2)>>2];J[e+244>>2]=1065353216;a:{b:{switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(K[e+204|0]&3){break a}ve(e,b,c+400|0);if(!K[a+44|0]){break a}g=N[e+252>>2];g=Q(g*g);if(g==Q(0)){break a}i=Q(N[c+456>>2]-N[e+60>>2]);l=Q(i*i);i=Q(N[c+448>>2]-N[e+52>>2]);q=Q(i*i);i=Q(N[c+452>>2]-N[e+56>>2]);if(!(g<Q(l+Q(q+Q(i*i))))){break a}ya(2363);if(J[J[e+192>>2]+4>>2]<=19){J[8145]=J[8145]+1;d=J[a+68>>2];d=ia[J[J[d>>2]+36>>2]](d)|0;h=J[a+24>>2];J[c+308>>2]=1065353216;J[c+312>>2]=-65535;f=J[e+64>>2];J[c+324>>2]=J[e+60>>2];J[c+328>>2]=f;f=J[e+56>>2];J[c+316>>2]=J[e+52>>2];J[c+320>>2]=f;f=J[c+460>>2];J[c+340>>2]=J[c+456>>2];J[c+344>>2]=f;f=J[c+452>>2];J[c+332>>2]=J[c+448>>2];J[c+336>>2]=f;J[c+380>>2]=0;J[c+304>>2]=20664;J[c+392>>2]=d;J[c+396>>2]=h;J[c+388>>2]=0;J[c+384>>2]=e;g=N[e+248>>2];h=c+248|0;d=h;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+292>>2]=g;N[c+276>>2]=g;J[c+252>>2]=8;J[c+248>>2]=16132;N[c+388>>2]=N[a+56>>2];d=J[e+188>>2];I[c+312>>1]=L[d+4>>1];I[c+314>>1]=L[d+6>>1];d=J[c+412>>2];J[c+192>>2]=J[c+408>>2];J[c+196>>2]=d;d=J[c+404>>2];J[c+184>>2]=J[c+400>>2];J[c+188>>2]=d;d=J[c+428>>2];J[c+208>>2]=J[c+424>>2];J[c+212>>2]=d;d=J[c+420>>2];J[c+200>>2]=J[c+416>>2];J[c+204>>2]=d;d=J[c+444>>2];J[c+224>>2]=J[c+440>>2];J[c+228>>2]=d;d=J[c+436>>2];J[c+216>>2]=J[c+432>>2];J[c+220>>2]=d;d=J[c+460>>2];J[c+240>>2]=J[c+456>>2];J[c+244>>2]=d;d=J[c+452>>2];J[c+232>>2]=J[c+448>>2];J[c+236>>2]=d;d=e+4|0;f=J[d+12>>2];J[c+192>>2]=J[d+8>>2];J[c+196>>2]=f;f=J[d+4>>2];J[c+184>>2]=J[d>>2];J[c+188>>2]=f;f=J[e+32>>2];J[c+208>>2]=J[e+28>>2];J[c+212>>2]=f;f=J[e+24>>2];J[c+200>>2]=J[e+20>>2];J[c+204>>2]=f;f=J[e+48>>2];J[c+224>>2]=J[e+44>>2];J[c+228>>2]=f;f=J[e+40>>2];J[c+216>>2]=J[e+36>>2];J[c+220>>2]=f;ic(a,h,d,c+184|0,c+304|0,Q(0));g=N[c+308>>2];if(g<Q(1)){m=Q(g*Q(N[c+448>>2]-N[e+52>>2]));n=Q(g*Q(N[c+452>>2]-N[e+56>>2]));o=Q(g*Q(N[c+456>>2]-N[e+60>>2]));G=Q(Q(Q(m*Q(-N[c+348>>2]))-Q(n*N[c+352>>2]))-Q(o*N[c+356>>2]));d=J[a+24>>2];u=ia[J[J[d>>2]+12>>2]](d,e,J[c+380>>2])|0;d=J[a+308>>2];c:{if((d|0)!=J[a+312>>2]){break c}t=d?d<<1:1;if((t|0)<=(d|0)){break c}d:{if(!t){h=0;break d}J[8369]=J[8369]+1;h=ia[J[6782]](t<<2,16)|0;d=J[a+308>>2]}e:{if((d|0)<=0){break e}v=0;f=0;if(d-1>>>0>=3){M=d&-4;p=0;while(1){j=f<<2;J[j+h>>2]=J[j+J[a+316>>2]>>2];r=j|4;J[r+h>>2]=J[r+J[a+316>>2]>>2];r=j|8;J[r+h>>2]=J[r+J[a+316>>2]>>2];j=j|12;J[j+h>>2]=J[j+J[a+316>>2]>>2];f=f+4|0;p=p+4|0;if((M|0)!=(p|0)){continue}break}}j=d&3;if(!j){break e}while(1){p=f<<2;J[p+h>>2]=J[p+J[a+316>>2]>>2];f=f+1|0;v=v+1|0;if((j|0)!=(v|0)){continue}break}}f=J[a+316>>2];if(!(!f|!K[a+320|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}d=J[a+308>>2]}J[a+316>>2]=h;H[a+320|0]=1;J[a+312>>2]=t}J[J[a+316>>2]+(d<<2)>>2]=u;J[a+308>>2]=d+1;d=J[c+380>>2];y=N[d+20>>2];z=N[d+36>>2];A=N[d+40>>2];B=N[d+8>>2];C=N[d+24>>2];g=N[d+60>>2];O=N[d+52>>2];i=N[d+56>>2];D=N[d+44>>2];l=N[d+12>>2];E=N[d+28>>2];F=N[d+4>>2];q=N[e+60>>2];w=N[e+52>>2];R=N[e+56>>2];J[c+8>>2]=0;J[c+12>>2]=0;J[c+28>>2]=0;J[c>>2]=0;J[c+4>>2]=0;o=Q(o+q);m=Q(m+w);n=Q(n+R);w=Q(Q(D*o)+Q(Q(l*m)+Q(E*n)));q=l;l=Q(-O);N[c+24>>2]=w+Q(Q(Q(q*l)-Q(E*i))-Q(D*g));N[c+20>>2]=Q(Q(o*A)+Q(Q(m*B)+Q(n*C)))+Q(Q(Q(B*l)-Q(C*i))-Q(A*g));N[c+16>>2]=Q(Q(o*z)+Q(Q(m*F)+Q(n*y)))+Q(Q(Q(F*l)-Q(y*i))-Q(z*g));d=J[c+352>>2];J[s>>2]=J[c+348>>2];J[s+4>>2]=d;d=J[c+360>>2];J[s+8>>2]=J[c+356>>2];J[s+12>>2]=d;H[c+116|0]=0;J[c+112>>2]=0;J[c+92>>2]=0;J[c+84>>2]=0;J[c+88>>2]=0;N[c+80>>2]=G;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;J[c+120>>2]=0;J[c+124>>2]=0;d=P(ul(u,c),184)+u|0;J[d+96>>2]=0;N[d+88>>2]=T(Q(U(Q(N[e+224>>2]*N[J[c+380>>2]+224>>2]),Q(-10))),Q(10));h=J[e+56>>2];J[d+52>>2]=J[e+52>>2];J[d+56>>2]=h;h=J[e+64>>2];J[d+60>>2]=J[e+60>>2];J[d+64>>2]=h;J[d+48>>2]=0;N[d+44>>2]=o;N[d+40>>2]=n;N[d+36>>2]=m}}xa()}k=k+1|0;if((k|0)<J[a+232>>2]){continue}break}}xa();ga=c+464|0;ia[J[J[a>>2]+44>>2]](a);ia[J[J[a>>2]+148>>2]](a);N[a+104>>2]=b;ia[J[J[a>>2]+152>>2]](a,a+92|0);ia[J[J[a>>2]+144>>2]](a,b);ya(2618);if(J[a+280>>2]>0){while(1){c=J[J[a+288>>2]+(x<<2)>>2];ia[J[J[c>>2]+8>>2]](c,a,b);x=x+1|0;if((x|0)<J[a+280>>2]){continue}break}}xa();ia[J[J[a>>2]+156>>2]](a,b);c=J[a+80>>2];if(c){ia[c|0](a,b)}xa()}function KA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=0;c=J[d+64>>2];a:{if(!(c&4)){break a}b=J[a+28>>2];if((b|0)<=0){break a}l=J[a+76>>2];i=J[a+36>>2];if(c&16){c=0;while(1){e=i+P(c,152)|0;h=J[e+132>>2];N[h+120>>2]=N[e+100>>2];e=l+P(J[e+140>>2],152)|0;N[h+124>>2]=N[e+100>>2];N[h+128>>2]=N[e+252>>2];c=c+1|0;if((b|0)!=(c|0)){continue}break}break a}c=0;if((b|0)!=1){p=b&-2;while(1){h=i+P(c,152)|0;o=J[h+132>>2];N[o+120>>2]=N[h+100>>2];N[o+124>>2]=N[(l+P(J[h+140>>2],152)|0)+100>>2];h=i+P(c|1,152)|0;o=J[h+132>>2];N[o+120>>2]=N[h+100>>2];N[o+124>>2]=N[(l+P(J[h+140>>2],152)|0)+100>>2];c=c+2|0;e=e+2|0;if((p|0)!=(e|0)){continue}break}}if(!(b&1)){break a}b=i+P(c,152)|0;c=J[b+132>>2];N[c+120>>2]=N[b+100>>2];N[c+124>>2]=N[(l+P(J[b+140>>2],152)|0)+100>>2]}p=J[a+48>>2];if((p|0)>0){o=J[a+56>>2];l=0;while(1){c=o+P(l,152)|0;e=J[c+132>>2];b=J[e+44>>2];if(b){i=J[e+28>>2];j=N[i+356>>2];k=N[c+24>>2];m=N[i+352>>2];n=N[c+20>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b>>2]=N[b>>2]+Q(Q(Q(N[c+16>>2]*f)*N[i+348>>2])*g);N[b+4>>2]=Q(Q(m*Q(f*n))*g)+N[b+4>>2];N[b+8>>2]=Q(Q(j*Q(f*k))*g)+N[b+8>>2];h=J[e+32>>2];j=N[h+356>>2];k=N[c+56>>2];m=N[h+352>>2];n=N[c+52>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+32>>2]=N[b+32>>2]+Q(Q(Q(N[c+48>>2]*f)*N[h+348>>2])*g);N[b+36>>2]=Q(Q(m*Q(f*n))*g)+N[b+36>>2];N[b+40>>2]=Q(Q(j*Q(f*k))*g)+N[b+40>>2];j=N[i+552>>2];k=N[c+8>>2];m=N[i+548>>2];n=N[c+4>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+16>>2]=N[b+16>>2]+Q(Q(Q(N[c>>2]*N[i+544>>2])*f)*g);N[b+20>>2]=Q(Q(f*Q(n*m))*g)+N[b+20>>2];N[b+24>>2]=Q(Q(f*Q(k*j))*g)+N[b+24>>2];j=N[h+552>>2];k=N[c+40>>2];m=N[h+548>>2];n=N[c+36>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+48>>2]=N[b+48>>2]+Q(Q(Q(N[c+32>>2]*N[h+544>>2])*f)*g);N[b+52>>2]=Q(Q(f*Q(n*m))*g)+N[b+52>>2];N[b+56>>2]=Q(Q(f*Q(k*j))*g)+N[b+56>>2]}f=N[c+100>>2];N[e+36>>2]=f;if(N[e+16>>2]<=Q(R(f))){H[e+20|0]=0}l=l+1|0;if((p|0)!=(l|0)){continue}break}}l=J[a+8>>2];if((l|0)>0){e=J[a+16>>2];h=0;while(1){i=P(h,244);b=i+e|0;c=J[b+240>>2];if(c){b:{if(J[d+44>>2]){m=N[d+12>>2];j=N[d+52>>2];c=ga-80|0;ga=c;c:{if(!J[b+240>>2]){break c}N[b+176>>2]=N[b+64>>2]+N[b+176>>2];N[b+192>>2]=N[b+80>>2]+N[b+192>>2];N[b+180>>2]=N[b+68>>2]+N[b+180>>2];N[b+184>>2]=N[b+72>>2]+N[b+184>>2];N[b+196>>2]=N[b+84>>2]+N[b+196>>2];N[b+200>>2]=N[b+88>>2]+N[b+200>>2];k=N[b+160>>2];d:{if(!(!(N[b+144>>2]!=Q(0)|N[b+148>>2]!=Q(0))&N[b+152>>2]==Q(0))){f=N[b+168>>2];g=N[b+164>>2];break d}f=N[b+168>>2];g=N[b+164>>2];if(k!=Q(0)|g!=Q(0)){break d}if(f==Q(0)){break c}}J[c+12>>2]=0;N[c+8>>2]=f*j;N[c+4>>2]=g*j;N[c>>2]=k*j;Rb(b,b+144|0,c,m,c+16|0);e=J[c+28>>2];J[b+8>>2]=J[c+24>>2];J[b+12>>2]=e;e=J[c+20>>2];J[b>>2]=J[c+16>>2];J[b+4>>2]=e;e=J[c+44>>2];J[b+24>>2]=J[c+40>>2];J[b+28>>2]=e;e=J[c+36>>2];J[b+16>>2]=J[c+32>>2];J[b+20>>2]=e;e=J[c+52>>2];J[b+32>>2]=J[c+48>>2];J[b+36>>2]=e;e=J[c+60>>2];J[b+40>>2]=J[c+56>>2];J[b+44>>2]=e;e=J[c+68>>2];J[b+48>>2]=J[c+64>>2];J[b+52>>2]=e;e=J[c+76>>2];J[b+56>>2]=J[c+72>>2];J[b+60>>2]=e}ga=c+80|0;e=J[a+16>>2];b=i+e|0;j=N[b+176>>2];c=J[b+240>>2];f=N[b+184>>2];g=N[b+180>>2];break b}j=Q(N[b+64>>2]+N[b+176>>2]);N[b+176>>2]=j;N[b+192>>2]=N[b+80>>2]+N[b+192>>2];g=Q(N[b+68>>2]+N[b+180>>2]);N[b+180>>2]=g;f=Q(N[b+72>>2]+N[b+184>>2]);N[b+184>>2]=f;N[b+196>>2]=N[b+84>>2]+N[b+196>>2];N[b+200>>2]=N[b+88>>2]+N[b+200>>2]}b=e+i|0;k=N[b+212>>2];m=N[b+216>>2];n=N[b+208>>2];J[c+324>>2]=0;N[c+312>>2]=j+n;J[c+260>>2]=J[c+260>>2]+1;N[c+320>>2]=f+m;N[c+316>>2]=g+k;b=i+J[a+16>>2]|0;f=N[b+228>>2];g=N[b+196>>2];j=N[b+232>>2];k=N[b+200>>2];m=N[b+224>>2];n=N[b+192>>2];b=J[b+240>>2];J[b+340>>2]=0;N[b+328>>2]=n+m;N[b+336>>2]=k+j;N[b+332>>2]=g+f;J[b+260>>2]=J[b+260>>2]+1;if(J[d+44>>2]){c=i+J[a+16>>2]|0;b=J[c+240>>2];J[b+260>>2]=J[b+260>>2]+1;e=J[c+12>>2];J[b+12>>2]=J[c+8>>2];J[b+16>>2]=e;e=J[c+4>>2];J[b+4>>2]=J[c>>2];J[b+8>>2]=e;e=J[c+28>>2];J[b+28>>2]=J[c+24>>2];J[b+32>>2]=e;e=J[c+20>>2];J[b+20>>2]=J[c+16>>2];J[b+24>>2]=e;e=J[c+36>>2];J[b+36>>2]=J[c+32>>2];J[b+40>>2]=e;e=J[c+44>>2];J[b+44>>2]=J[c+40>>2];J[b+48>>2]=e;e=J[c+60>>2];J[b+60>>2]=J[c+56>>2];J[b+64>>2]=e;e=J[c+52>>2];J[b+52>>2]=J[c+48>>2];J[b+56>>2]=e}e=J[a+16>>2];J[J[(i+e|0)+240>>2]+212>>2]=-1;l=J[a+8>>2]}h=h+1|0;if((l|0)>(h|0)){continue}break}}if((J[a+28>>2]&J[a+32>>2])<0){b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+40|0]=1;J[a+32>>2]=0;J[a+36>>2]=0}J[a+28>>2]=0;if((J[a+48>>2]&J[a+52>>2])<0){b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+60|0]=1;J[a+52>>2]=0;J[a+56>>2]=0}J[a+48>>2]=0;if((J[a+68>>2]&J[a+72>>2])<0){b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+80|0]=1;J[a+72>>2]=0;J[a+76>>2]=0}J[a+68>>2]=0;if((J[a+88>>2]&J[a+92>>2])<0){b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+100|0]=1;J[a+92>>2]=0;J[a+96>>2]=0}J[a+88>>2]=0;if((J[a+8>>2]&J[a+12>>2])<0){b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+20|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}J[a+8>>2]=0;return Q(Q(0))}function ez(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),U=0,V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=0,fa=Q(0),ga=0;O=J[c+36>>2];c=J[O+12>>2];W=N[c+8>>2];y=J[b+36>>2];E=N[y+8>>2];F=Q(W-E);b=J[O+8>>2];X=N[b+8>>2];m=Q(X-E);p=Q(F-m);e=J[O+16>>2];Z=N[e+12>>2];G=N[y+12>>2];u=Q(Z-G);_=N[b+12>>2];l=Q(_-G);i=Q(u-l);$=N[e+8>>2];v=Q($-E);d=Q(v-m);aa=N[c+12>>2];I=Q(aa-G);n=Q(I-l);w=Q(Q(p*i)-Q(d*n));ba=N[e+16>>2];L=N[y+16>>2];x=Q(ba-L);ca=N[b+16>>2];o=Q(ca-L);f=Q(x-o);da=N[c+16>>2];M=Q(da-L);B=Q(M-o);C=Q(Q(n*f)-Q(i*B));D=Q(Q(B*d)-Q(f*p));d=Q(Q(w*w)+Q(Q(C*C)+Q(D*D)));a:{if(!(d>Q(1.1920928955078125e-7))){i=Q(3.4028234663852886e38);break a}i=Q(3.4028234663852886e38);d=Q(Q(1)/Q(Y(d)));z=Q(w*d);f=Q(C*d);A=Q(D*d);h=Q(Q(o*z)+Q(Q(m*f)+Q(l*A)));g=Q(h*h);if(!(g<Q(3.4028234663852886e38))){break a}d=Q(f*h);r=Q(m-d);f=Q(A*h);i=Q(I-f);s=Q(F-d);A=Q(l-f);h=Q(z*h);q=Q(M-h);z=Q(o-h);b:{c:{if(!(Q(Q(Q(Q(r*i)-Q(s*A))*w)+Q(Q(Q(Q(A*q)-Q(i*z))*C)+Q(D*Q(Q(z*s)-Q(q*r)))))>Q(0))){break c}R=Q(u-f);S=Q(v-d);fa=Q(Q(Q(s*R)-Q(S*i))*w);t=i;i=Q(x-h);if(!(Q(fa+Q(Q(Q(Q(t*i)-Q(R*q))*C)+Q(D*Q(Q(q*S)-Q(i*s)))))>Q(0))){break c}if(Q(Q(Q(Q(S*A)-Q(r*R))*w)+Q(Q(Q(Q(R*z)-Q(A*i))*C)+Q(D*Q(Q(i*r)-Q(z*S)))))>Q(0)){break b}}d=Q(Q(B*B)+Q(Q(p*p)+Q(n*n)));i=Q(3.4028234663852886e38);d:{if(!(d>Q(1.1920928955078125e-7))){break d}r=Q(Q(-Q(Q(o*B)+Q(Q(m*p)+Q(l*n))))/d);q=r<Q(0)?Q(0):Q(T(r,Q(1)));r=Q(o+Q(B*q));s=Q(m+Q(p*q));q=Q(l+Q(n*q));d=Q(Q(r*r)+Q(Q(s*s)+Q(q*q)));i=Q(3.4028234663852886e38);if(!(d<Q(3.4028234663852886e38))){break d}i=d}d=Q(x-M);f=Q(v-F);h=Q(u-I);g=Q(Q(d*d)+Q(Q(f*f)+Q(h*h)));e:{if(!(g>Q(1.1920928955078125e-7))){break e}t=d;d=Q(Q(-Q(Q(M*d)+Q(Q(F*f)+Q(I*h))))/g);g=d<Q(0)?Q(0):Q(T(d,Q(1)));d=Q(M+Q(t*g));f=Q(F+Q(f*g));h=Q(I+Q(h*g));g=Q(Q(d*d)+Q(Q(f*f)+Q(h*h)));if(!(g<i)){break e}i=g;s=f;q=h;r=d}d=Q(o-x);f=Q(m-v);g=Q(l-u);h=Q(Q(d*d)+Q(Q(f*f)+Q(g*g)));if(!(h>Q(1.1920928955078125e-7))){break a}t=d;d=Q(Q(-Q(Q(x*d)+Q(Q(v*f)+Q(u*g))))/h);m=d<Q(0)?Q(0):Q(T(d,Q(1)));h=Q(x+Q(t*m));d=Q(v+Q(f*m));f=Q(u+Q(g*m));g=Q(Q(h*h)+Q(Q(d*d)+Q(f*f)));if(!(g<i)){break a}}i=g;s=d;q=f;r=h}d=Q(L-N[y+32>>2]);g=Q(d*d);d=Q(E-N[y+24>>2]);f=Q(d*d);d=Q(G-N[y+28>>2]);d=Q(Y(Q(g+Q(f+Q(d*d)))));u=Q(Q(d+d)+N[a+12>>2]);f:{if(!(Q(u*u)>i)){break f}o=Q(E+s);d=Q(X-o);p=Q(G+q);f=Q(aa-p);h=Q(W-o);g=Q(_-p);v=Q(Q(d*f)-Q(h*g));n=Q(L+r);m=Q(da-n);l=Q(ca-n);w=Q(Q(g*m)-Q(f*l));o=Q($-o);p=Q(Z-p);x=Q(Q(o*g)-Q(d*p));t=g;g=Q(ba-n);n=Q(Q(p*l)-Q(t*g));t=Q(n*n);n=Q(Q(g*d)-Q(l*o));n=Q(Y(Q(Q(x*x)+Q(t+Q(n*n)))));d=Q(Q(l*h)-Q(m*d));l=Q(Y(Q(Q(v*v)+Q(Q(w*w)+Q(d*d)))));d=Q(Q(h*p)-Q(o*f));t=Q(d*d);d=Q(Q(f*g)-Q(p*m));f=Q(d*d);d=Q(Q(m*o)-Q(g*h));f=Q(Y(Q(t+Q(f+Q(d*d)))));d=Q(Q(1)/Q(n+Q(l+f)));h=N[y+88>>2];g=N[e+88>>2];m=Q(l*d);l=N[b+88>>2];f=Q(f*d);o=Q(n*d);d=N[c+88>>2];g=l<=Q(0)?Q(0):d<=Q(0)?Q(0):g<=Q(0)?Q(0):Q(Q(g*m)+Q(Q(l*f)+Q(o*d)));d=Q(h+g);if(!(d>Q(0))){break f}c=J[a+4>>2];l=N[c+316>>2];a=J[a+8>>2];p=N[a+316>>2];l=l>p?l:p;h=Q(Q(h/d)*N[c+332>>2]);d=Q(Q(g/d)*N[a+332>>2]);i=Q(Q(-1)/Q(Y(i)));r=Q(i*r);q=Q(i*q);i=Q(s*i);b=J[c+832>>2];g:{if((b|0)!=J[c+836>>2]){break g}U=b?b<<1:1;if((U|0)<=(b|0)){break g}if(U){J[8369]=J[8369]+1;V=ia[J[6782]](P(U,56),16)|0;b=J[c+832>>2]}h:{if((b|0)<=0){break h}a=0;if((b|0)!=1){ga=b&-2;while(1){e=P(a,56);j=e+V|0;e=e+J[c+840>>2]|0;k=J[e+4>>2];J[j>>2]=J[e>>2];J[j+4>>2]=k;k=J[e+52>>2];J[j+48>>2]=J[e+48>>2];J[j+52>>2]=k;k=J[e+44>>2];J[j+40>>2]=J[e+40>>2];J[j+44>>2]=k;k=J[e+36>>2];J[j+32>>2]=J[e+32>>2];J[j+36>>2]=k;k=J[e+28>>2];J[j+24>>2]=J[e+24>>2];J[j+28>>2]=k;k=J[e+20>>2];J[j+16>>2]=J[e+16>>2];J[j+20>>2]=k;k=J[e+12>>2];J[j+8>>2]=J[e+8>>2];J[j+12>>2]=k;e=P(a|1,56);j=e+V|0;e=e+J[c+840>>2]|0;k=J[e+4>>2];J[j>>2]=J[e>>2];J[j+4>>2]=k;k=J[e+12>>2];J[j+8>>2]=J[e+8>>2];J[j+12>>2]=k;k=J[e+20>>2];J[j+16>>2]=J[e+16>>2];J[j+20>>2]=k;k=J[e+28>>2];J[j+24>>2]=J[e+24>>2];J[j+28>>2]=k;k=J[e+36>>2];J[j+32>>2]=J[e+32>>2];J[j+36>>2]=k;k=J[e+44>>2];J[j+40>>2]=J[e+40>>2];J[j+44>>2]=k;k=J[e+52>>2];J[j+48>>2]=J[e+48>>2];J[j+52>>2]=k;a=a+2|0;ea=ea+2|0;if((ea|0)!=(ga|0)){continue}break}}if(!(b&1)){break h}a=P(a,56);b=a+V|0;a=a+J[c+840>>2]|0;e=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=e;e=J[a+52>>2];J[b+48>>2]=J[a+48>>2];J[b+52>>2]=e;e=J[a+44>>2];J[b+40>>2]=J[a+40>>2];J[b+44>>2]=e;e=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=e;e=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=e;e=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=e;e=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=e}a=J[c+840>>2];if(!(a?!a|!K[c+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+840>>2]=V;H[c+844|0]=1;J[c+836>>2]=U;b=J[c+832>>2]}a=J[c+840>>2]+P(b,56)|0;N[a+48>>2]=h;N[a+44>>2]=l;N[a+40>>2]=u;N[a+24>>2]=i;N[a+8>>2]=f;J[a+4>>2]=O;J[a>>2]=y;N[a+52>>2]=d;J[a+36>>2]=0;N[a+32>>2]=r;N[a+28>>2]=q;J[a+20>>2]=0;N[a+16>>2]=m;N[a+12>>2]=o;J[c+832>>2]=J[c+832>>2]+1}}function zm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),H=0,I=0;d=ga-144|0;ga=d;J[d+108>>2]=0;g=N[b+80>>2];f=N[b+96>>2];m=N[b+120>>2];y=N[b+56>>2];D=N[b+112>>2];G=N[b+116>>2];C=N[b+52>>2];i=N[b+68>>2];h=N[b+84>>2];r=N[b+100>>2];j=N[b+20>>2];t=N[b+36>>2];s=N[b+72>>2];l=N[b+88>>2];u=N[b+24>>2];n=N[b+104>>2];z=N[b+40>>2];o=N[b+64>>2];A=N[b+32>>2];v=N[b>>2];x=N[b+16>>2];F=N[b+48>>2];p=N[b+4>>2];B=N[b+8>>2];J[d+100>>2]=0;J[d+84>>2]=0;J[d+68>>2]=0;N[d+80>>2]=Q(n*z)+Q(Q(s*B)+Q(u*l));N[d+76>>2]=Q(n*t)+Q(Q(s*p)+Q(j*l));N[d- -64>>2]=Q(r*z)+Q(Q(i*B)+Q(u*h));N[d+60>>2]=Q(r*t)+Q(Q(i*p)+Q(j*h));m=Q(y-m);y=Q(F-D);D=Q(C-G);N[d+96>>2]=Q(n*m)+Q(Q(s*y)+Q(l*D));N[d+92>>2]=Q(r*m)+Q(Q(i*y)+Q(D*h));J[d+52>>2]=0;N[d+72>>2]=Q(n*A)+Q(Q(s*v)+Q(x*l));N[d+56>>2]=Q(r*A)+Q(Q(i*v)+Q(x*h));N[d+48>>2]=Q(f*z)+Q(Q(o*B)+Q(g*u));N[d+44>>2]=Q(f*t)+Q(Q(o*p)+Q(g*j));N[d+40>>2]=Q(f*A)+Q(Q(o*v)+Q(g*x));N[d+88>>2]=Q(f*m)+Q(Q(o*y)+Q(D*g));t=Q(0);u=Q(0);z=Q(0);q=ga-32|0;ga=q;k=J[a+4>>2];A=Q(N[k+28>>2]*N[k+12>>2]);r=Q(A+N[a+12>>2]);k=J[a+8>>2];g=N[k- -64>>2];p=Q(N[d+96>>2]-g);f=N[k+56>>2];s=Q(N[k+72>>2]-f);i=N[k+60>>2];l=Q(N[k+92>>2]-i);n=Q(N[k+88>>2]-f);o=Q(N[k+76>>2]-i);h=Q(Q(s*l)-Q(n*o));j=h;w=Q(h*h);h=Q(N[k+96>>2]-g);m=l;l=Q(N[k+80>>2]-g);g=Q(Q(o*h)-Q(m*l));h=Q(Q(l*n)-Q(h*s));n=Q(Q(1)/Q(Y(Q(w+Q(Q(g*g)+Q(h*h))))));s=Q(j*n);l=Q(g*n);n=Q(h*n);g=Q(Q(p*s)+Q(Q(Q(N[d+88>>2]-f)*l)+Q(Q(N[d+92>>2]-i)*n)));if(g<Q(0)){s=Q(-s);n=Q(-n);l=Q(-l);g=Q(-g)}a:{if(!(g<r)){break a}H=J[d+100>>2];J[q+24>>2]=J[d+96>>2];J[q+28>>2]=H;H=J[d+92>>2];J[q+16>>2]=J[d+88>>2];J[q+20>>2]=H;J[q+12>>2]=0;N[q+8>>2]=s;N[q+4>>2]=n;N[q>>2]=l;o=N[k+96>>2];j=N[k+80>>2];v=Q(o-j);x=N[k+88>>2];p=N[k+72>>2];C=Q(x-p);f=N[q+4>>2];i=N[q>>2];B=N[k+92>>2];m=N[k+76>>2];h=Q(B-m);y=N[q+24>>2];F=Q(Q(Q(C*f)-Q(i*h))*Q(y-j));w=h;h=N[q+8>>2];D=N[q+16>>2];G=N[q+20>>2];v=Q(F+Q(Q(Q(Q(w*h)-Q(f*v))*Q(D-p))+Q(Q(G-m)*Q(Q(v*i)-Q(h*C)))));w=j;j=N[k+64>>2];C=Q(w-j);w=p;p=N[k+56>>2];F=Q(w-p);w=m;m=N[k+60>>2];w=Q(w-m);C=Q(Q(Q(Q(F*f)-Q(i*w))*Q(y-j))+Q(Q(Q(Q(w*h)-Q(f*C))*Q(D-p))+Q(Q(G-m)*Q(Q(C*i)-Q(h*F)))));p=Q(p-x);m=Q(m-B);y=Q(Q(Q(p*f)-Q(i*m))*Q(y-o));w=f;f=Q(j-o);f=Q(y+Q(Q(Q(Q(m*h)-Q(w*f))*Q(D-x))+Q(Q(G-B)*Q(Q(f*i)-Q(h*p)))));b:{if(!(!(f>Q(0))|!(C>Q(0)))){k=1;if(v>Q(0)){break b}}k=C<=Q(0)&v<=Q(0)&f<=Q(0)}c:{if(k){i=N[d+96>>2];t=Q(i-Q(g*s));h=N[d+92>>2];u=Q(h-Q(g*n));f=N[d+88>>2];z=Q(f-Q(g*l));v=Q(r*r);break c}k=J[a+8>>2];if((ia[J[J[k>>2]+100>>2]](k)|0)<=0){break a}v=Q(r*r);k=0;while(1){E=J[a+8>>2];ia[J[J[E>>2]+104>>2]](E,k,q+16|0,q);f=Q(0);x=N[q+24>>2];r=Q(N[q+8>>2]-x);g=Q(N[d+96>>2]-x);p=N[q+16>>2];o=Q(N[q>>2]-p);i=Q(N[d+88>>2]-p);B=N[q+20>>2];h=Q(N[d+92>>2]-B);j=Q(N[q+4>>2]-B);m=Q(Q(r*g)+Q(Q(o*i)+Q(h*j)));d:{if(!(m>Q(0))){break d}f=Q(Q(r*r)+Q(Q(o*o)+Q(j*j)));if(f>m){f=Q(m/f);g=Q(g-Q(r*f));h=Q(h-Q(j*f));i=Q(i-Q(o*f));break d}g=Q(g-r);h=Q(h-j);i=Q(i-o);f=Q(1)}if(Q(Q(g*g)+Q(Q(i*i)+Q(h*h)))<v){z=Q(p+Q(o*f));u=Q(B+Q(j*f));I=1;t=Q(x+Q(r*f))}E=J[a+8>>2];k=k+1|0;if((ia[J[J[E>>2]+100>>2]](E)|0)>(k|0)){continue}break}E=0;if(!I){break a}i=N[d+96>>2];h=N[d+92>>2];f=N[d+88>>2]}g=Q(i-t);f=Q(f-z);i=Q(h-u);h=Q(Q(g*g)+Q(Q(f*f)+Q(i*i)));if(!(h<v)){break a}e:{if(h>Q(1.1920928955078125e-7)){J[d+124>>2]=0;l=g;h=Q(Y(h));g=Q(Q(1)/h);N[d+120>>2]=l*g;N[d+116>>2]=i*g;N[d+112>>2]=f*g;A=Q(A-h);break e}J[d+124>>2]=0;N[d+120>>2]=s;N[d+116>>2]=n;N[d+112>>2]=l}J[d+140>>2]=0;N[d+136>>2]=t;N[d+132>>2]=u;N[d+128>>2]=z;N[d+108>>2]=-A;E=1}ga=q+32|0;f:{if(!E){break f}if(e){h=N[b+72>>2];r=N[b+64>>2];s=N[b+68>>2];l=N[b+88>>2];n=N[b+80>>2];o=N[b+84>>2];j=N[b+104>>2];t=N[b+96>>2];u=N[b+100>>2];g=N[d+120>>2];f=N[d+112>>2];i=N[d+116>>2];J[d+36>>2]=0;z=Q(Q(j*g)+Q(Q(t*f)+Q(i*u)));N[d+32>>2]=-z;A=Q(Q(l*g)+Q(Q(n*f)+Q(i*o)));N[d+28>>2]=-A;v=Q(Q(h*g)+Q(Q(r*f)+Q(s*i)));N[d+24>>2]=-v;x=N[b+112>>2];p=N[b+116>>2];g=N[b+120>>2];J[d+20>>2]=0;f=N[d+136>>2];m=Q(j*f);i=N[d+128>>2];j=N[d+132>>2];m=Q(g+Q(m+Q(Q(t*i)+Q(u*j))));g=N[d+108>>2];N[d+16>>2]=m+Q(z*g);N[d+12>>2]=Q(p+Q(Q(f*l)+Q(Q(i*n)+Q(j*o))))+Q(A*g);N[d+8>>2]=Q(x+Q(Q(f*h)+Q(Q(i*r)+Q(j*s))))+Q(v*g);ia[J[J[c>>2]+16>>2]](c,d+24|0,d+8|0,g);break f}g=N[b+72>>2];f=N[b+64>>2];i=N[b+68>>2];h=N[b+88>>2];r=N[b+80>>2];s=N[b+84>>2];l=N[b+104>>2];n=N[b+96>>2];o=N[b+100>>2];J[d+36>>2]=0;j=N[d+120>>2];t=N[d+112>>2];u=N[d+116>>2];N[d+32>>2]=Q(l*j)+Q(Q(n*t)+Q(o*u));N[d+28>>2]=Q(h*j)+Q(Q(r*t)+Q(u*s));N[d+24>>2]=Q(g*j)+Q(Q(f*t)+Q(i*u));j=N[b+112>>2];t=N[b+116>>2];u=N[b+120>>2];J[d+20>>2]=0;m=l;l=N[d+136>>2];p=n;n=N[d+128>>2];w=o;o=N[d+132>>2];N[d+16>>2]=u+Q(Q(m*l)+Q(Q(p*n)+Q(w*o)));N[d+12>>2]=t+Q(Q(l*h)+Q(Q(n*r)+Q(o*s)));N[d+8>>2]=j+Q(Q(l*g)+Q(Q(n*f)+Q(o*i)));ia[J[J[c>>2]+16>>2]](c,d+24|0,d+8|0,N[d+108>>2])}ga=d+144|0}function Kp(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=Q(0),p=Q(0),q=Q(0);n=ga-16|0;ga=n;J[n+12>>2]=a;J[n+8>>2]=b;N[n+4>>2]=c;a=J[n+8>>2];c=N[n+4>>2];b=0;m=ga-32|0;ga=m;e=J[n+12>>2];if(J[e+716>>2]==J[e+712>>2]){d=J[e+720>>2];a:{f=J[e+712>>2];if((f|0)<=0){break a}g=d;while(1){g=J[(P(i,104)+g|0)+96>>2];if(g){J[g+36>>2]=i}i=i+1|0;if((f|0)==(i|0)){break a}g=J[e+720>>2];continue}}j=f?d:0;f=J[e+732>>2];if((f|0)>0){i=0;while(1){g=P(i,52);d=g+J[e+740>>2]|0;J[d+8>>2]=(J[d+8>>2]-j|0)/104;d=g+J[e+740>>2]|0;J[d+12>>2]=(J[d+12>>2]-j|0)/104;i=i+1|0;if((f|0)!=(i|0)){continue}break}}f=J[e+752>>2];if((f|0)>0){g=0;while(1){k=P(g,44);d=k+J[e+760>>2]|0;J[d+8>>2]=(J[d+8>>2]-j|0)/104;d=k+J[e+760>>2]|0;J[d+12>>2]=(J[d+12>>2]-j|0)/104;d=k+J[e+760>>2]|0;J[d+16>>2]=(J[d+16>>2]-j|0)/104;d=J[(k+J[e+760>>2]|0)+40>>2];if(d){J[d+36>>2]=g}g=g+1|0;if((f|0)!=(g|0)){continue}break}}l=J[e+792>>2];b:{if((l|0)<=0){break b}k=J[e+800>>2];i=0;if((l|0)!=1){g=l&-2;f=0;while(1){d=k+P(i,96)|0;J[d>>2]=(J[d>>2]-j|0)/104;d=k+P(i|1,96)|0;J[d>>2]=(J[d>>2]-j|0)/104;i=i+2|0;f=f+2|0;if((g|0)!=(f|0)){continue}break}}if(!(l&1)){break b}d=k+P(i,96)|0;J[d>>2]=(J[d>>2]-j|0)/104}f=J[e+692>>2];if((f|0)>0){g=J[e+700>>2];l=0;while(1){i=0;k=P(l,60);if(J[(k+g|0)+24>>2]>0){while(1){d=(g+k|0)+(i<<2)|0;J[d+28>>2]=(J[d+28>>2]-j|0)/104;i=i+1|0;g=J[e+700>>2];if((i|0)<J[(k+g|0)+24>>2]){continue}break}}l=l+1|0;if((f|0)!=(l|0)){continue}break}}f=J[e+712>>2]<<1|1;if((f|0)>J[e+716>>2]){J[8369]=J[8369]+1;l=ia[J[6782]](P(f,104),16)|0;k=J[e+712>>2];c:{if((k|0)<=0){break c}if((k|0)!=1){g=k&-2;while(1){d=P(h,104);sa(d+l|0,d+J[e+720>>2]|0,104);d=P(h|1,104);sa(d+l|0,d+J[e+720>>2]|0,104);h=h+2|0;b=b+2|0;if((g|0)!=(b|0)){continue}break}}if(!(k&1)){break c}b=P(h,104);sa(b+l|0,b+J[e+720>>2]|0,104)}b=J[e+720>>2];if(!(b?!b|!K[e+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+720>>2]=l;H[e+724|0]=1;J[e+716>>2]=f}h=0;d=J[e+720>>2];d:{f=J[e+712>>2];if((f|0)<=0){break d}b=d;while(1){g=P(h,104)+b|0;b=J[g+96>>2];if(b){J[b+36>>2]=g}h=h+1|0;if((f|0)==(h|0)){break d}b=J[e+720>>2];continue}}j=f?d:0;k=J[e+732>>2];e:{if((k|0)<=0){break e}h=0;if((k|0)!=1){f=k&-2;b=0;while(1){g=P(h,52);d=g+J[e+740>>2]|0;J[d+8>>2]=j+P(J[d+8>>2],104);d=g+J[e+740>>2]|0;J[d+12>>2]=j+P(J[d+12>>2],104);g=P(h|1,52);d=g+J[e+740>>2]|0;J[d+8>>2]=j+P(J[d+8>>2],104);d=g+J[e+740>>2]|0;J[d+12>>2]=j+P(J[d+12>>2],104);h=h+2|0;b=b+2|0;if((f|0)!=(b|0)){continue}break}}if(!(k&1)){break e}d=P(h,52);b=d+J[e+740>>2]|0;J[b+8>>2]=j+P(J[b+8>>2],104);b=d+J[e+740>>2]|0;J[b+12>>2]=j+P(J[b+12>>2],104)}g=J[e+752>>2];if((g|0)>0){h=0;while(1){d=P(h,44);b=d+J[e+760>>2]|0;J[b+8>>2]=j+P(J[b+8>>2],104);b=d+J[e+760>>2]|0;J[b+12>>2]=j+P(J[b+12>>2],104);b=d+J[e+760>>2]|0;J[b+16>>2]=j+P(J[b+16>>2],104);d=d+J[e+760>>2]|0;b=J[d+40>>2];if(b){J[b+36>>2]=d}h=h+1|0;if((g|0)!=(h|0)){continue}break}}g=J[e+792>>2];f:{if((g|0)<=0){break f}f=J[e+800>>2];l=0;h=0;if(g-1>>>0>=3){d=g&-4;i=0;while(1){b=f+P(h,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|1,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|2,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|3,96)|0;J[b>>2]=j+P(J[b>>2],104);h=h+4|0;i=i+4|0;if((d|0)!=(i|0)){continue}break}}d=g&3;if(!d){break f}while(1){b=f+P(h,96)|0;J[b>>2]=j+P(J[b>>2],104);h=h+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}g=J[e+692>>2];if((g|0)>0){h=J[e+700>>2];i=0;while(1){b=0;f=P(i,60);if(J[(f+h|0)+24>>2]>0){while(1){d=(f+h|0)+(b<<2)|0;J[d+28>>2]=j+P(J[d+28>>2],104);b=b+1|0;h=J[e+700>>2];if((b|0)<J[(f+h|0)+24>>2]){continue}break}}i=i+1|0;if((g|0)!=(i|0)){continue}break}}}b=J[e+192>>2];o=Q(ia[J[J[b>>2]+48>>2]](b));b=J[e+712>>2];g:{if((b|0)!=J[e+716>>2]){break g}l=b?b<<1:1;if((l|0)<=(b|0)){break g}h:{if(!l){g=0;break h}J[8369]=J[8369]+1;g=ia[J[6782]](P(l,104),16)|0;b=J[e+712>>2]}i:{if((b|0)<=0){break i}k=b&1;h=0;if((b|0)!=1){f=b&-2;b=0;while(1){d=P(h,104);sa(d+g|0,d+J[e+720>>2]|0,104);d=P(h|1,104);sa(d+g|0,d+J[e+720>>2]|0,104);h=h+2|0;b=b+2|0;if((f|0)!=(b|0)){continue}break}}if(!k){break i}b=P(h,104);sa(b+g|0,b+J[e+720>>2]|0,104)}b=J[e+720>>2];if(!(b?!b|!K[e+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+720>>2]=g;H[e+724|0]=1;J[e+716>>2]=l;b=J[e+712>>2]}qa(J[e+720>>2]+P(b,104)|0,0,104);b=J[e+712>>2];J[e+712>>2]=b+1;f=qa(J[e+720>>2]+P(b,104)|0,0,104);b=J[a+12>>2];J[f+16>>2]=J[a+8>>2];J[f+20>>2]=b;b=J[a+4>>2];J[f+8>>2]=J[a>>2];J[f+12>>2]=b;g=J[a>>2];d=J[a+4>>2];b=J[a+12>>2];J[f+32>>2]=J[a+8>>2];J[f+36>>2]=b;J[f+24>>2]=g;J[f+28>>2]=d;N[f+88>>2]=c>Q(0)?Q(Q(1)/c):Q(0);J[f+4>>2]=J[J[e+880>>2]>>2];p=N[f+8>>2];q=N[f+12>>2];c=N[f+16>>2];J[m+28>>2]=0;N[m+24>>2]=o+c;N[m+20>>2]=o+q;J[m+12>>2]=0;N[m+16>>2]=o+p;N[m+8>>2]=c-o;N[m+4>>2]=q-o;N[m>>2]=p-o;J[f+96>>2]=Db(e+928|0,m,f);ga=m+32|0;ga=n+16|0}function Jg(a,b,c,d){var e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0),D=0,E=0,F=0,G=0;x=J[a>>2];J[a>>2]=x+1;a:{if((d-c|0)==1){q=N[a+48>>2];j=N[a+32>>2];c=J[b+12>>2]+P(c,36)|0;e=N[c+8>>2];e=e<j?j:e;n=N[a- -64>>2];e=Q(Q(Q((e>q?q:e)-j)*n)+Q(.5));b:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break b}d=0}k=N[a+40>>2];i=N[c>>2];r=N[a+60>>2];p=N[a+44>>2];e=N[a+28>>2];o=N[c+4>>2];v=N[a+56>>2];g=N[a+24>>2];a=J[a+16>>2];b=a+(x<<4)|0;I[b+4>>1]=d;o=e>o?e:o;o=Q(Q(r*Q((p<o?p:o)-e))+Q(.5));c:{if(o<Q(4294967296)&o>=Q(0)){d=~~o>>>0;break c}d=0}I[b+2>>1]=d;i=g>i?g:i;i=Q(Q(Q((k<i?k:i)-g)*v)+Q(.5));d:{if(i<Q(4294967296)&i>=Q(0)){d=~~i>>>0;break d}d=0}I[b>>1]=d;i=N[c+16>>2];o=N[c+20>>2];w=n;n=N[c+24>>2];n=j>n?j:n;j=Q(Q(w*Q((q<n?q:n)-j))+Q(.5));e:{if(j<Q(4294967296)&j>=Q(0)){d=~~j>>>0;break e}d=0}I[b+10>>1]=d;j=e>o?e:o;e=Q(Q(r*Q((j>p?p:j)-e))+Q(.5));f:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break f}d=0}I[b+8>>1]=d;e=g>i?g:i;e=Q(Q(v*Q((e>k?k:e)-g))+Q(.5));g:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break g}d=0}I[b+6>>1]=d;b=J[c+32>>2];break a}u=b;b=c;h=d-b|0;h:{i:{j:{if((b|0)>=(d|0)){k=Q(h|0);break j}m=J[u+12>>2];f=b;while(1){l=m+P(f,36)|0;p=Q(p+Q(Q(N[l+16>>2]+N[l>>2])*Q(.5)));e=Q(e+Q(Q(N[l+24>>2]+N[l+8>>2])*Q(.5)));g=Q(g+Q(Q(N[l+20>>2]+N[l+4>>2])*Q(.5)));f=f+1|0;if((f|0)!=(d|0)){continue}break}k=Q(h|0);if((b|0)<(d|0)){break i}}e=Q(0);g=Q(0);break h}j=Q(Q(1)/k);q=Q(j*e);i=Q(j*g);p=Q(j*p);l=J[u+12>>2];g=Q(0);e=Q(0);j=Q(0);while(1){n=j;f=l+P(b,36)|0;j=Q(Q(Q(N[f+16>>2]+N[f>>2])*Q(.5))-p);j=Q(n+Q(j*j));n=g;g=Q(Q(Q(N[f+24>>2]+N[f+8>>2])*Q(.5))-q);g=Q(n+Q(g*g));n=e;e=Q(Q(Q(N[f+20>>2]+N[f+4>>2])*Q(.5))-i);e=Q(n+Q(e*e));b=b+1|0;if((d|0)!=(b|0)){continue}break}}k=Q(Q(1)/Q(k+Q(-1)));j=Q(k*j);e=Q(k*e);b=j<e;h=Q(k*g)>(b?e:j)?2:b;e=Q(0);g=Q(0);j=Q(0);l=ga+-64|0;J[l+28>>2]=0;m=(c|0)>=(d|0);if(!m){y=J[u+12>>2];b=c;while(1){f=y+P(b,36)|0;e=Q(Q(Q(N[f+16>>2]+N[f>>2])*Q(.5))+e);g=Q(Q(Q(N[f+24>>2]+N[f+8>>2])*Q(.5))+g);j=Q(Q(Q(N[f+20>>2]+N[f+4>>2])*Q(.5))+j);b=b+1|0;if((d|0)!=(b|0)){continue}break}}y=d-c|0;k=Q(Q(1)/Q(y|0));N[l+24>>2]=k*g;N[l+20>>2]=k*j;N[l+16>>2]=k*e;f=c;if(!m){b=h<<2;e=N[b+(l+16|0)>>2];D=b+l|0;b=c;f=b;while(1){m=J[u+12>>2];h=m+P(b,36)|0;g=N[h+4>>2];j=N[h+20>>2];k=N[h+8>>2];p=N[h+24>>2];q=N[h>>2];i=N[h+16>>2];J[l+12>>2]=0;N[l>>2]=Q(i+q)*Q(.5);N[l+8>>2]=Q(p+k)*Q(.5);N[l+4>>2]=Q(j+g)*Q(.5);if(e<N[D>>2]){s=J[h+12>>2];J[l+40>>2]=J[h+8>>2];J[l+44>>2]=s;s=J[h+4>>2];J[l+32>>2]=J[h>>2];J[l+36>>2]=s;s=J[h+28>>2];J[l+56>>2]=J[h+24>>2];J[l+60>>2]=s;s=J[h+20>>2];J[l+48>>2]=J[h+16>>2];J[l+52>>2]=s;s=J[h+32>>2];z=P(f,36);m=m+z|0;t=J[m+4>>2];J[h>>2]=J[m>>2];J[h+4>>2]=t;t=J[m+12>>2];J[h+8>>2]=J[m+8>>2];J[h+12>>2]=t;t=J[m+20>>2];J[h+16>>2]=J[m+16>>2];J[h+20>>2]=t;t=J[m+28>>2];J[h+24>>2]=J[m+24>>2];J[h+28>>2]=t;J[h+32>>2]=J[m+32>>2];m=J[l+36>>2];h=J[u+12>>2]+z|0;J[h>>2]=J[l+32>>2];J[h+4>>2]=m;m=J[l+56>>2];z=J[l+60>>2];t=J[l+48>>2];E=J[l+52>>2];F=J[l+44>>2];G=J[l+40>>2];J[h+32>>2]=s;J[h+8>>2]=G;J[h+12>>2]=F;J[h+16>>2]=t;J[h+20>>2]=E;J[h+24>>2]=m;J[h+28>>2]=z;f=f+1|0}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=(y>>1)+c|0;h=b;b=(y|0)/3|0;l=(b+c|0)>=(f|0)?h:((b^-1)+d|0)<=(f|0)?h:f;k:{if((c|0)>=(d|0)){e=Q(3.4028234663852886e38);g=Q(-3.4028234663852886e38);j=Q(-3.4028234663852886e38);p=Q(3.4028234663852886e38);k=Q(-3.4028234663852886e38);q=Q(3.4028234663852886e38);break k}h=J[u+12>>2];k=Q(-3.4028234663852886e38);q=Q(3.4028234663852886e38);b=c;p=Q(3.4028234663852886e38);e=Q(3.4028234663852886e38);j=Q(-3.4028234663852886e38);g=Q(-3.4028234663852886e38);while(1){f=h+P(b,36)|0;i=N[f+16>>2];k=k<i?i:k;i=N[f+8>>2];e=e>i?i:e;i=N[f+4>>2];p=i<p?i:p;i=N[f>>2];q=i<q?i:q;i=N[f+24>>2];g=g<i?i:g;i=N[f+20>>2];j=j<i?i:j;b=b+1|0;if((d|0)!=(b|0)){continue}break}}A=N[a+60>>2];v=N[a+44>>2];i=N[a+28>>2];B=N[a- -64>>2];n=N[a+48>>2];r=N[a+32>>2];b=J[a+16>>2]+(x<<4)|0;C=N[a+56>>2];w=N[a+40>>2];o=N[a+24>>2];k=k<o?o:k;k=Q(Q(C*Q((k>w?w:k)-o))+Q(.5));l:{if(k<Q(4294967296)&k>=Q(0)){f=~~k>>>0;break l}f=0}I[b+6>>1]=f;k=o>q?o:q;k=Q(Q(Q((k>w?w:k)-o)*C)+Q(.5));m:{if(k<Q(4294967296)&k>=Q(0)){f=~~k>>>0;break m}f=0}I[b>>1]=f;g=g<r?r:g;g=Q(Q(B*Q((g>n?n:g)-r))+Q(.5));n:{if(g<Q(4294967296)&g>=Q(0)){f=~~g>>>0;break n}f=0}I[b+10>>1]=f;g=j<i?i:j;g=Q(Q(A*Q((g>v?v:g)-i))+Q(.5));o:{if(g<Q(4294967296)&g>=Q(0)){f=~~g>>>0;break o}f=0}I[b+8>>1]=f;e=e<r?r:e;e=Q(Q(Q((e>n?n:e)-r)*B)+Q(.5));p:{if(e<Q(4294967296)&e>=Q(0)){f=~~e>>>0;break p}f=0}I[b+4>>1]=f;e=i>p?i:p;e=Q(Q(Q((e>v?v:e)-i)*A)+Q(.5));q:{if(e<Q(4294967296)&e>=Q(0)){f=~~e>>>0;break q}f=0}I[b+2>>1]=f;Jg(a,u,c,l);Jg(a,u,l,d);b=x-J[a>>2]|0;a=J[a+16>>2]}J[((x<<4)+a|0)+12>>2]=b}function By(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=0;g=J[a+24>>2];if((g|0)>0){while(1){a:{b:{e=J[J[a+32>>2]+(q<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}d=0;g=ga+-64|0;ga=g;ik(e,0);k=J[e+732>>2];if((k|0)>0){while(1){c=J[e+740>>2]+P(d,52)|0;f=J[c+8>>2];j=N[f+28>>2];h=J[c+12>>2];n=N[h+28>>2];i=N[f+32>>2];l=N[h+32>>2];b=N[f+24>>2];m=N[h+24>>2];J[c+48>>2]=0;b=Q(m-b);N[c+36>>2]=b;i=Q(l-i);N[c+44>>2]=i;j=Q(n-j);N[c+40>>2]=j;N[c+32>>2]=Q(1)/Q(N[c+24>>2]*Q(Q(i*i)+Q(Q(b*b)+Q(j*j))));d=d+1|0;if((k|0)!=(d|0)){continue}break}}h=J[e+792>>2];if((h|0)>0){f=0;while(1){d=J[e+800>>2]+P(f,96)|0;c=J[d+20>>2];n=N[c+12>>2];l=N[c+8>>2];m=N[c+4>>2];p=N[c+28>>2];s=N[c+20>>2];t=N[c+24>>2];b=N[d+12>>2];i=N[d+4>>2];j=N[d+8>>2];N[g+56>>2]=Q(N[c+44>>2]*b)+Q(Q(N[c+36>>2]*i)+Q(j*N[c+40>>2]));J[g+60>>2]=0;N[g+52>>2]=Q(p*b)+Q(Q(s*i)+Q(j*t));N[g+48>>2]=Q(n*b)+Q(Q(m*i)+Q(l*j));hk(g,N[e+452>>2],N[J[d>>2]+88>>2],N[c+344>>2],c+264|0,g+48|0);c=J[g+12>>2];J[d+36>>2]=J[g+8>>2];J[d+40>>2]=c;c=J[g+4>>2];J[d+28>>2]=J[g>>2];J[d+32>>2]=c;c=J[g+28>>2];J[d+52>>2]=J[g+24>>2];J[d+56>>2]=c;c=J[g+20>>2];J[d+44>>2]=J[g+16>>2];J[d+48>>2]=c;c=J[g+44>>2];J[d+68>>2]=J[g+40>>2];J[d+72>>2]=c;c=J[g+36>>2];J[d+60>>2]=J[g+32>>2];J[d+64>>2]=c;c=J[g+60>>2];J[d+84>>2]=J[g+56>>2];J[d+88>>2]=c;c=J[g+52>>2];J[d+76>>2]=J[g+48>>2];J[d+80>>2]=c;N[d+92>>2]=N[e+452>>2]*N[J[d>>2]+88>>2];kb(J[d+20>>2],0);f=f+1|0;if((h|0)!=(f|0)){continue}break}}h=J[e+372>>2];c:{if((h|0)<=0){break c}d=J[e+396>>2];if((d|0)>0){f=0;while(1){c=0;if((d|0)>0){while(1){ia[(J[J[e+404>>2]+(c<<2)>>2]?0:937)|0](e,Q(1));d=J[e+396>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}h=J[e+372>>2]}f=f+1|0;if((h|0)>(f|0)){continue}break}}f=J[e+712>>2];if((f|0)<=0){break c}d=0;while(1){b=N[e+452>>2];c=J[e+720>>2]+P(d,104)|0;J[c+20>>2]=0;N[c+8>>2]=Q(b*N[c+40>>2])+N[c+24>>2];N[c+16>>2]=Q(b*N[c+48>>2])+N[c+32>>2];N[c+12>>2]=Q(b*N[c+44>>2])+N[c+28>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}c=J[e+376>>2];d:{if((c|0)<=0){break d}d=J[e+416>>2];f=0;while(1){if((d|0)>0){b=Q(Q(f|0)/Q(c|0));c=0;while(1){ia[J[(J[J[e+424>>2]+(c<<2)>>2]<<2)+21872>>2]](e,Q(1),b);d=J[e+416>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}c=J[e+376>>2]}f=f+1|0;if((f|0)<(c|0)){continue}break}f=J[e+712>>2];if((f|0)<=0){break d}b=Q(N[e+456>>2]*Q(Q(1)-N[e+296>>2]));d=0;while(1){c=J[e+720>>2]+P(d,104)|0;J[c+52>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;N[c+40>>2]=b*Q(N[c+8>>2]-N[c+24>>2]);N[c+48>>2]=b*Q(N[c+16>>2]-N[c+32>>2]);N[c+44>>2]=b*Q(N[c+12>>2]-N[c+28>>2]);d=d+1|0;if((f|0)!=(d|0)){continue}break}}h=J[e+380>>2];e:{if((h|0)<=0){break e}b=N[e+456>>2];i=N[e+292>>2];k=J[e+712>>2];f:{if((k|0)>0){c=0;if((k|0)!=1){h=k&-2;f=0;while(1){d=J[e+720>>2]+P(c,104)|0;o=J[d+12>>2];J[d+24>>2]=J[d+8>>2];J[d+28>>2]=o;o=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=o;d=J[e+720>>2]+P(c|1,104)|0;o=J[d+12>>2];J[d+24>>2]=J[d+8>>2];J[d+28>>2]=o;o=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=o;c=c+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(k&1){d=J[e+720>>2]+P(c,104)|0;c=J[d+12>>2];f=J[d+8>>2];J[d+24>>2]=f;J[d+28>>2]=c;c=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=c}h=J[e+380>>2];if((h|0)<=0){break f}}f=0;d=J[e+436>>2];if((d|0)<=0){break f}while(1){c=0;if((d|0)>0){while(1){ia[J[(J[J[e+444>>2]+(c<<2)>>2]<<2)+21872>>2]](e,Q(1),Q(0));d=J[e+436>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}h=J[e+380>>2]}f=f+1|0;if((h|0)>(f|0)){continue}break}}f=J[e+712>>2];if((f|0)<=0){break e}b=Q(i*b);h=J[e+720>>2];d=0;while(1){c=h+P(d,104)|0;N[c+40>>2]=Q(b*Q(N[c+8>>2]-N[c+24>>2]))+N[c+40>>2];N[c+44>>2]=Q(b*Q(N[c+12>>2]-N[c+28>>2]))+N[c+44>>2];N[c+48>>2]=Q(b*Q(N[c+16>>2]-N[c+32>>2]))+N[c+48>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}f=0;k=J[e+1112>>2];if((k|0)>0){o=J[e+1120>>2];while(1){d=J[o+(f<<2)>>2];g:{if(!(N[d+352>>2]>Q(0))){break g}r=J[d+24>>2];if((r|0)<=0){break g}u=J[d+32>>2];h=0;while(1){c=J[u+(h<<2)>>2];h:{if(!(N[c+88>>2]>Q(0))){break h}b=N[d+332>>2];i=Q(N[c+28>>2]-N[d+232>>2]);j=Q(N[c+24>>2]-N[d+228>>2]);l=N[d+336>>2];n=Q(Q(Q(b*i)-Q(j*l))+N[d+324>>2]);m=Q(N[c+32>>2]-N[d+236>>2]);p=i;i=N[d+340>>2];l=Q(N[d+316>>2]+Q(Q(l*m)-Q(p*i)));m=Q(N[d+320>>2]+Q(Q(i*j)-Q(m*b)));b=N[c+48>>2];i=N[c+40>>2];j=N[c+44>>2];if(!(Q(Q(n*n)+Q(Q(l*l)+Q(m*m)))<=Q(Q(b*b)+Q(Q(i*i)+Q(j*j))))){break h}p=b;n=Q(n-b);b=N[d+352>>2];N[c+48>>2]=p+Q(n*b);N[c+44>>2]=j+Q(b*Q(m-j));N[c+40>>2]=i+Q(b*Q(l-i))}h=h+1|0;if((r|0)!=(h|0)){continue}break}}f=f+1|0;if((k|0)!=(f|0)){continue}break}}ik(e,1);ga=g- -64|0;g=J[a+24>>2]}q=q+1|0;if((q|0)<(g|0)){continue}break}}}function zo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=ga-400|0;ga=e;J[e+396>>2]=a;J[e+392>>2]=b;J[e+388>>2]=c;J[e+384>>2]=d;a=J[e+396>>2];b=ga-16|0;J[b+12>>2]=J[e+392>>2];c=J[b+12>>2];J[b+12>>2]=J[e+392>>2];d=J[b+12>>2]+4|0;J[b+12>>2]=J[e+392>>2];f=e+368|0;na(f,c,d,J[b+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+352|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+336|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+320|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+304|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+288|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+272|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+256|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+240|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+224|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+208|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+192|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+176|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+160|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+144|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+128|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+112|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+96|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+80|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e- -64|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+48|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+32|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+16|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];na(e,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,e,J[e+384>>2]);ga=e+400|0}function ul(a,b){var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0;k=J[a+748>>2];a:{if((k|0)==4){c=N[a+84>>2];d=N[b+80>>2];k=c<d;w=k?0:-1;g=N[a+268>>2];c=k?c:d;k=g<c;U=k?1:w;d=N[a+452>>2];c=k?g:c;k=d<c;w=N[a+636>>2]<(k?d:c);k=w?3:k?2:U;l=N[b>>2];b:{c:{d:{e:{if(K[27116]){if(!k){o=N[a+564>>2];s=N[a+380>>2];c=Q(o-s);h=N[a+560>>2];t=N[a+376>>2];e=Q(h-t);q=N[a+556>>2];x=N[a+372>>2];m=Q(q-x);g=N[b+8>>2];j=N[b+4>>2];break e}r=N[a+188>>2];d=Q(l-r);h=N[a+560>>2];t=N[a+376>>2];e=Q(h-t);q=N[a+556>>2];x=N[a+372>>2];m=Q(q-x);j=N[b+4>>2];u=N[a+192>>2];c=Q(j-u);g=Q(Q(d*e)-Q(m*c));n=Q(g*g);i=c;o=N[a+564>>2];s=N[a+380>>2];c=Q(o-s);g=N[b+8>>2];v=N[a+196>>2];p=Q(g-v);f=Q(Q(i*c)-Q(e*p));d=Q(Q(p*m)-Q(c*d));ca=Q(n+Q(Q(f*f)+Q(d*d)));if((k|0)!=1){break e}d=Q(l-N[a+4>>2]);f=Q(-d);j=Q(j-N[a+8>>2]);y=Q(-j);g=Q(g-N[a+12>>2]);z=Q(-g);m=Q(0);break d}f:{g:{h:{i:{if(!k){j=N[a+380>>2];c=N[a+564>>2];m=Q(j-c);g=N[a+376>>2];e=N[a+560>>2];i=Q(g-e);v=N[a+372>>2];p=N[a+556>>2];A=Q(v-p);u=N[b+4>>2];L=Q(u-e);Y=Q(-L);B=Q(l-p);Z=Q(-B);r=N[b+8>>2];M=Q(r-c);_=Q(-M);E=Q(l-v);D=Q(-E);F=Q(r-j);V=Q(-F);G=Q(u-g);d=Q(-G);break i}f=N[a+188>>2];s=Q(l-f);g=N[a+376>>2];e=N[a+560>>2];i=Q(g-e);v=N[a+372>>2];p=N[a+556>>2];A=Q(v-p);u=N[b+4>>2];y=N[a+192>>2];t=Q(u-y);c=Q(Q(s*i)-Q(A*t));h=Q(c*c);j=N[a+380>>2];c=N[a+564>>2];m=Q(j-c);r=N[b+8>>2];z=N[a+196>>2];x=Q(r-z);d=Q(Q(t*m)-Q(i*x));o=Q(d*d);d=Q(Q(x*A)-Q(m*s));o=Q(h+Q(o+Q(d*d)));E=Q(l-v);C=Q(y-e);d=Q(f-p);G=Q(u-g);h=Q(Q(E*C)-Q(d*G));q=Q(h*h);D=Q(z-c);F=Q(r-j);h=Q(Q(G*D)-Q(C*F));n=Q(h*h);h=Q(Q(F*d)-Q(D*E));h=Q(q+Q(n+Q(h*h)));o=h<o?o:h;B=Q(l-p);h=Q(y-g);q=Q(f-v);L=Q(u-e);n=Q(Q(B*h)-Q(q*L));H=Q(n*n);n=Q(z-j);M=Q(r-c);h=Q(Q(L*n)-Q(h*M));I=Q(h*h);h=Q(Q(M*q)-Q(n*B));h=Q(H+Q(I+Q(h*h)));ca=h<o?o:h;Y=Q(-L);Z=Q(-B);_=Q(-M);if((k|0)==1){break h}D=Q(-E);V=Q(-F);d=Q(-G)}o=N[a+4>>2];H=Q(l-o);h=N[a+8>>2];I=Q(u-h);f=Q(Q(H*i)-Q(A*I));n=Q(f*f);q=N[a+12>>2];O=Q(r-q);f=Q(Q(I*m)-Q(i*O));m=Q(Q(O*A)-Q(m*H));m=Q(n+Q(Q(f*f)+Q(m*m)));n=Q(h-e);S=Q(o-p);f=Q(Q(E*n)+Q(S*d));i=Q(f*f);T=Q(q-c);f=Q(Q(G*T)+Q(n*V));s=Q(f*f);f=Q(Q(F*S)+Q(T*D));f=Q(i+Q(s+Q(f*f)));m=f<m?m:f;i=Q(h-g);A=Q(o-v);f=Q(Q(B*i)+Q(A*Y));s=Q(f*f);C=Q(q-j);f=Q(Q(L*C)+Q(i*_));t=Q(f*f);f=Q(Q(M*A)+Q(C*Z));f=Q(s+Q(t+Q(f*f)));m=f<m?m:f;z=N[a+196>>2];x=Q(r-z);y=N[a+192>>2];t=Q(u-y);f=N[a+188>>2];s=Q(l-f);$=Q(-H);aa=Q(-I);ba=Q(-O);if((k|0)==2){p=Q(q-z);n=Q(h-y);B=Q(o-f);c=Q(-t);W=Q(-s);X=Q(-x);e=Q(0);break f}D=Q(z-c);C=Q(y-e);d=Q(f-p);W=Q(-s);X=Q(-x);c=Q(-t);break g}W=Q(-s);X=Q(-x);o=N[a+4>>2];S=Q(o-p);q=N[a+12>>2];T=Q(q-c);h=N[a+8>>2];n=Q(h-e);H=Q(l-o);$=Q(-H);I=Q(u-h);aa=Q(-I);O=Q(r-q);ba=Q(-O);m=Q(0);c=Q(-t)}e=Q(Q(H*C)+Q(d*aa));i=Q(e*e);e=Q(Q(I*D)+Q(C*ba));d=Q(Q(O*d)+Q(D*$));d=Q(i+Q(Q(e*e)+Q(d*d)));e=Q(Q(s*n)+Q(S*c));i=Q(e*e);e=Q(Q(t*T)+Q(n*X));p=Q(e*e);e=Q(Q(x*S)+Q(T*W));e=Q(i+Q(p+Q(e*e)));d=d>e?d:e;n=Q(h-y);i=Q(B*n);B=Q(o-f);e=Q(i+Q(B*Y));i=Q(e*e);p=Q(q-z);e=Q(Q(L*p)+Q(n*_));A=Q(e*e);e=Q(Q(M*B)+Q(p*Z));e=Q(i+Q(A+Q(e*e)));e=d>e?d:e;i=Q(0);if(w){break b}C=Q(q-j);i=Q(h-g);A=Q(o-v);G=Q(u-g);d=Q(-G);E=Q(l-v);D=Q(-E);F=Q(r-j);V=Q(-F)}g=Q(y-g);l=Q(f-v);r=Q(Q(H*g)+Q(l*aa));j=Q(z-j);g=Q(Q(I*j)+Q(g*ba));f=Q(g*g);g=Q(Q(O*l)+Q(j*$));g=Q(Q(r*r)+Q(f+Q(g*g)));c=Q(Q(s*i)+Q(A*c));j=Q(c*c);c=Q(Q(t*C)+Q(i*X));i=Q(c*c);c=Q(Q(x*A)+Q(C*W));c=Q(j+Q(i+Q(c*c)));c=c<g?g:c;d=Q(Q(E*n)+Q(B*d));j=Q(d*d);d=Q(Q(G*p)+Q(n*V));i=Q(d*d);d=Q(Q(F*B)+Q(p*D));d=Q(j+Q(i+Q(d*d)));i=c>d?c:d;break b}d=Q(l-N[a+4>>2]);j=Q(j-N[a+8>>2]);l=Q(Q(d*e)-Q(m*j));g=Q(g-N[a+12>>2]);e=Q(Q(j*c)-Q(e*g));c=Q(Q(g*m)-Q(c*d));m=Q(Q(l*l)+Q(Q(e*e)+Q(c*c)));v=N[a+196>>2];u=N[a+192>>2];r=N[a+188>>2];f=Q(-d);y=Q(-j);z=Q(-g);e=Q(0);if((k|0)==2){break c}}c=Q(h-u);e=Q(q-r);l=Q(Q(d*c)+Q(e*y));i=Q(l*l);l=Q(o-v);c=Q(Q(j*l)+Q(c*z));h=Q(c*c);c=Q(Q(g*e)+Q(l*f));e=Q(i+Q(h+Q(c*c)));i=Q(0);if(w){break b}}c=Q(t-u);i=Q(d*c);d=Q(x-r);l=Q(i+Q(d*y));i=j;j=Q(s-v);c=Q(Q(i*j)+Q(c*z));i=Q(c*c);c=Q(Q(g*d)+Q(j*f));i=Q(Q(l*l)+Q(i+Q(c*c)))}c=Q(R(ca));k=c>Q(-0xde0b6b000000000);w=k?0:-1;d=Q(R(m));c=k?c:Q(-0xde0b6b000000000);k=d>c;w=k?1:w;g=Q(R(e));c=k?d:c;k=g>c;k=Q(R(i))>(k?g:c)?3:k?2:w;w=P(k,184)+a|0;U=J[w+116>>2];if(!U){break a}da=J[7969];if(!da){break a}ia[da|0](U)|0;J[w+116>>2]=0;break a}J[a+748>>2]=k+1}w=a;a=(k|0)>0?k:0;sa((w+P(a,184)|0)+4|0,b,184);return a}function FG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=Q(0),L=Q(0),M=0,O=0,R=0;f=ga-176|0;ga=f;g=K[a+28|0];F=g?b:c;M=g?c:b;O=J[M+4>>2];if(J[O+68>>2]!=J[a+40>>2]){r=J[a+12>>2];if((r|0)>0){g=0;while(1){G=g<<2;h=J[G+J[a+20>>2]>>2];if(h){ia[J[J[h>>2]>>2]](h)|0;h=J[a+4>>2];ia[J[J[h>>2]+60>>2]](h,J[J[a+20>>2]+G>>2])}g=g+1|0;if((r|0)!=(g|0)){continue}break}}Km(a,b,c)}h=J[O+64>>2];g=J[a+20>>2];b=J[a+4>>2];J[f+172>>2]=J[a+32>>2];J[f+168>>2]=g;J[f+164>>2]=e;J[f+160>>2]=d;J[f+156>>2]=b;J[f+152>>2]=F;J[f+148>>2]=M;J[f+144>>2]=9780;J[f+60>>2]=0;J[f+52>>2]=0;J[f+56>>2]=0;H[f+64|0]=1;b=J[a+12>>2];a:{if((b|0)<=0){break a}c=0;while(1){d=J[(c<<2)+g>>2];if(d){ia[J[J[d>>2]+16>>2]](d,f+48|0);g=0;d=J[f+52>>2];if((d|0)>0){while(1){b=J[J[f+60>>2]+(g<<2)>>2];if(J[b+748>>2]){J[e+4>>2]=b;r=J[b+740>>2];G=J[J[e+8>>2]+8>>2];d=(r|0)==(G|0);R=b;b=J[J[e+12>>2]+8>>2];ab(R,(d?r:b)+4|0,(d?b:G)+4|0);J[e+4>>2]=0;d=J[f+52>>2]}g=g+1|0;if((g|0)<(d|0)){continue}break}}b:{if((d|0)>=0){break b}if(J[f+56>>2]<0){b=J[f+60>>2];if(!(b?!b|!K[f+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[f+64|0]=1;J[f+56>>2]=0;J[f+60>>2]=0}b=0;g=d;r=0-g&3;if(r){while(1){J[J[f+60>>2]+(g<<2)>>2]=0;g=g+1|0;b=b+1|0;if((r|0)!=(b|0)){continue}break}}if(d>>>0>4294967292){break b}while(1){b=g<<2;J[b+J[f+60>>2]>>2]=0;J[(b+J[f+60>>2]|0)+4>>2]=0;J[(b+J[f+60>>2]|0)+8>>2]=0;J[(b+J[f+60>>2]|0)+12>>2]=0;g=g+4|0;if(g){continue}break}}J[f+52>>2]=0;b=J[a+12>>2]}c=c+1|0;if((c|0)<(b|0)){g=J[a+20>>2];continue}break}b=J[f+60>>2];if(!b|!K[f+64|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}c:{d:{if(h){b=J[M+12>>2];s=N[b+52>>2];t=N[b+56>>2];c=J[F+12>>2];u=N[c+52>>2];v=N[c+56>>2];i=N[b+20>>2];j=N[b+36>>2];w=N[c+20>>2];x=N[c+36>>2];y=N[c+24>>2];k=N[b+24>>2];z=N[c+40>>2];l=N[b+40>>2];A=N[c+32>>2];m=N[b+32>>2];B=N[c>>2];n=N[b>>2];C=N[c+16>>2];o=N[b+16>>2];D=N[b+48>>2];E=N[c+48>>2];p=N[b+4>>2];I=N[c+4>>2];L=N[c+8>>2];q=N[b+8>>2];J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;N[f+88>>2]=Q(z*l)+Q(Q(L*q)+Q(k*y));N[f+84>>2]=Q(x*l)+Q(Q(I*q)+Q(k*w));N[f+72>>2]=Q(z*j)+Q(Q(L*p)+Q(i*y));N[f+68>>2]=Q(x*j)+Q(Q(I*p)+Q(i*w));D=Q(-D);N[f+104>>2]=Q(Q(Q(q*D)-Q(k*s))-Q(l*t))+Q(Q(v*l)+Q(Q(E*q)+Q(k*u)));N[f+100>>2]=Q(Q(Q(p*D)-Q(i*s))-Q(j*t))+Q(Q(v*j)+Q(Q(E*p)+Q(i*u)));J[f+60>>2]=0;N[f+48>>2]=Q(A*m)+Q(Q(B*n)+Q(o*C));N[f+80>>2]=Q(A*l)+Q(Q(B*q)+Q(k*C));N[f+64>>2]=Q(A*j)+Q(Q(B*p)+Q(i*C));N[f+56>>2]=Q(z*m)+Q(Q(L*n)+Q(o*y));N[f+52>>2]=Q(x*m)+Q(Q(I*n)+Q(o*w));N[f+96>>2]=Q(Q(Q(n*D)-Q(o*s))-Q(m*t))+Q(Q(v*m)+Q(Q(E*n)+Q(o*u)));b=J[F+4>>2];ia[J[J[b>>2]+8>>2]](b,f+48|0,f+128|0,f+112|0);b=J[f+140>>2];J[f+24>>2]=J[f+136>>2];J[f+28>>2]=b;b=J[f+124>>2];J[f+40>>2]=J[f+120>>2];J[f+44>>2]=b;b=J[f+116>>2];J[f+32>>2]=J[f+112>>2];J[f+36>>2]=b;b=J[f+132>>2];J[f+16>>2]=J[f+128>>2];J[f+20>>2]=b;Vb(h,J[h>>2],f+16|0,f+144|0);break d}g=0;b=J[a+12>>2];if((b|0)<=0){break c}while(1){Jm(f+144|0,J[(J[O+24>>2]+P(g,80)|0)+64>>2],g);g=g+1|0;if((b|0)!=(g|0)){continue}break}}h=J[a+12>>2];if((h|0)<=0){break c}e=0;while(1){d=e<<2;e:{if(!J[d+J[a+20>>2]>>2]){break e}b=J[O+24>>2]+P(e,80)|0;g=J[b+64>>2];c=J[M+12>>2];I=N[c+52>>2];L=N[c+56>>2];s=N[b+48>>2];t=N[b+52>>2];u=N[b+56>>2];v=N[b+4>>2];w=N[b+20>>2];x=N[b+36>>2];y=N[b+8>>2];z=N[b+24>>2];A=N[b+40>>2];i=N[c+20>>2];j=N[c+24>>2];B=N[b>>2];C=N[b+16>>2];k=N[c+36>>2];E=N[b+32>>2];l=N[c+40>>2];D=N[c+48>>2];m=N[c+8>>2];n=N[c>>2];o=N[c+4>>2];p=N[c+16>>2];q=N[c+32>>2];b=0;J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;J[f+60>>2]=0;N[f+80>>2]=Q(E*l)+Q(Q(B*q)+Q(k*C));N[f+64>>2]=Q(E*j)+Q(Q(B*p)+Q(i*C));N[f+48>>2]=Q(E*m)+Q(Q(B*n)+Q(o*C));N[f+88>>2]=Q(A*l)+Q(Q(y*q)+Q(k*z));N[f+84>>2]=Q(x*l)+Q(Q(v*q)+Q(k*w));N[f+72>>2]=Q(A*j)+Q(Q(y*p)+Q(i*z));N[f+68>>2]=Q(x*j)+Q(Q(v*p)+Q(i*w));N[f+56>>2]=Q(A*m)+Q(Q(y*n)+Q(o*z));N[f+52>>2]=Q(x*m)+Q(Q(v*n)+Q(o*w));N[f+104>>2]=L+Q(Q(u*l)+Q(Q(s*q)+Q(k*t)));N[f+100>>2]=I+Q(Q(u*j)+Q(Q(s*p)+Q(i*t)));N[f+96>>2]=D+Q(Q(u*m)+Q(Q(s*n)+Q(o*t)));ia[J[J[g>>2]+8>>2]](g,f+48|0,f+16|0,f+128|0);c=J[F+4>>2];ia[J[J[c>>2]+8>>2]](c,J[F+12>>2],f+112|0,f);c=0;f:{if(N[f+16>>2]>N[f>>2]){break f}c=0;if(N[f+128>>2]<N[f+112>>2]){break f}c=1}if(!(N[f+20>>2]>N[f+4>>2])&(!(N[f+132>>2]<N[f+116>>2])&(N[f+136>>2]<N[f+120>>2]|N[f+24>>2]>N[f+8>>2]?b:c))){break e}b=J[d+J[a+20>>2]>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[d+J[a+20>>2]>>2]);J[d+J[a+20>>2]>>2]=0}e=e+1|0;if((h|0)!=(e|0)){continue}break}}ga=f+176|0}function sl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0,ea=Q(0),fa=0;g=ga-96|0;ga=g;Ie(J[a+4>>2]);V=N[d+40>>2];W=N[d+36>>2];X=N[d+24>>2];Z=N[d+20>>2];G=N[b+20>>2];H=N[b+36>>2];I=N[b+24>>2];y=N[b+52>>2];m=N[c+52>>2];z=N[d+52>>2];l=N[e+52>>2];K=N[b+40>>2];A=N[b+56>>2];h=N[c+56>>2];B=N[d+56>>2];i=N[e+56>>2];_=N[d+32>>2];$=N[d+16>>2];aa=N[d+8>>2];ba=N[d+4>>2];ca=N[d>>2];L=N[b>>2];M=N[b+16>>2];O=N[b+32>>2];P=N[b+4>>2];R=N[b+8>>2];C=N[b+48>>2];j=N[c+48>>2];D=N[d+48>>2];p=N[e+48>>2];r=J[a+8>>2];J[g+60>>2]=0;x=Q(Q(j-C)-Q(p-D));j=Q(-x);t=Q(Q(m-y)-Q(l-z));u=Q(Q(h-A)-Q(i-B));N[g+56>>2]=Q(Q(R*j)-Q(I*t))-Q(K*u);N[g+52>>2]=Q(Q(P*j)-Q(G*t))-Q(H*u);N[g+48>>2]=Q(Q(L*j)-Q(M*t))-Q(O*u);ia[J[J[r>>2]+64>>2]](g+80|0,r,g+48|0);h=N[b+52>>2];i=N[b+24>>2];p=N[b+20>>2];j=N[b+56>>2];m=N[b+40>>2];l=N[b+36>>2];k=N[b+16>>2];n=N[b+48>>2];s=N[b+8>>2];o=N[b>>2];q=N[b+4>>2];v=N[b+32>>2];J[g+76>>2]=0;S=j;j=N[g+88>>2];w=Q(m*j);m=N[g+80>>2];T=l;l=N[g+84>>2];v=Q(S+Q(w+Q(Q(v*m)+Q(T*l))));N[g+72>>2]=v;n=Q(n+Q(Q(j*s)+Q(Q(m*o)+Q(l*q))));N[g+64>>2]=n;h=Q(h+Q(Q(j*i)+Q(Q(m*k)+Q(l*p))));N[g+68>>2]=h;r=J[a+12>>2];j=N[d+20>>2];m=N[d+36>>2];l=N[d+24>>2];i=N[d+40>>2];p=N[d>>2];k=N[d+16>>2];s=N[d+32>>2];o=N[d+4>>2];q=N[d+8>>2];J[g+28>>2]=0;N[g+24>>2]=Q(i*u)+Q(Q(q*x)+Q(t*l));N[g+20>>2]=Q(m*u)+Q(Q(o*x)+Q(t*j));N[g+16>>2]=Q(s*u)+Q(Q(p*x)+Q(t*k));ia[J[J[r>>2]+64>>2]](g+32|0,r,g+16|0);p=N[d+56>>2];k=N[d+40>>2];s=N[d+36>>2];j=N[d+52>>2];m=N[d+24>>2];l=N[d+20>>2];o=N[d+32>>2];i=N[d+48>>2];q=N[d+8>>2];w=N[d>>2];U=N[d+4>>2];F=N[d+16>>2];J[g+60>>2]=0;J[g+92>>2]=0;S=j;j=N[g+40>>2];ea=Q(m*j);m=N[g+32>>2];T=l;l=N[g+36>>2];F=Q(S+Q(ea+Q(Q(F*m)+Q(T*l))));N[g+52>>2]=F;h=Q(h-F);N[g+84>>2]=h;i=Q(i+Q(Q(j*q)+Q(Q(m*w)+Q(l*U))));N[g+48>>2]=i;i=Q(n-i);N[g+80>>2]=i;j=Q(p+Q(Q(j*k)+Q(Q(m*o)+Q(l*s))));N[g+56>>2]=j;k=Q(v-j);N[g+88>>2]=k;s=Q(0);j=Q(0);m=Q(0);l=Q(0);p=Q(0);n=Q(0);a:{b:{if(!(Q(Q(k*k)+Q(Q(i*i)+Q(h*h)))>Q(9999999747378752e-20))){break b}r=32;while(1){if(!r){break b}E=J[a+8>>2];J[g+12>>2]=0;h=Q(-N[g+80>>2]);i=N[g+84>>2];k=N[g+88>>2];N[g+8>>2]=Q(Q(R*h)-Q(I*i))-Q(K*k);N[g+4>>2]=Q(Q(P*h)-Q(G*i))-Q(H*k);N[g>>2]=Q(Q(L*h)-Q(M*i))-Q(O*k);da=g+16|0;ia[J[J[E>>2]+64>>2]](da,E,g);J[g+76>>2]=0;h=N[g+24>>2];i=N[g+16>>2];k=N[g+20>>2];N[g+72>>2]=A+Q(Q(h*K)+Q(Q(i*O)+Q(H*k)));N[g+68>>2]=y+Q(Q(h*I)+Q(Q(i*M)+Q(G*k)));N[g+64>>2]=C+Q(Q(h*R)+Q(Q(i*L)+Q(P*k)));E=J[a+12>>2];J[g+12>>2]=0;h=N[g+88>>2];i=N[g+80>>2];k=N[g+84>>2];N[g+8>>2]=Q(V*h)+Q(Q(aa*i)+Q(X*k));N[g+4>>2]=Q(W*h)+Q(Q(ba*i)+Q(Z*k));N[g>>2]=Q(_*h)+Q(Q(ca*i)+Q($*k));ia[J[J[E>>2]+64>>2]](da,E,g);J[g+60>>2]=0;J[g+44>>2]=0;k=N[g+24>>2];o=N[g+16>>2];q=N[g+20>>2];h=Q(z+Q(Q(k*X)+Q(Q(o*$)+Q(Z*q))));N[g+52>>2]=h;v=Q(N[g+68>>2]-h);N[g+36>>2]=v;h=N[g+84>>2];i=Q(D+Q(Q(k*aa)+Q(Q(o*ca)+Q(ba*q))));N[g+48>>2]=i;w=Q(N[g+64>>2]-i);N[g+32>>2]=w;i=N[g+80>>2];k=Q(B+Q(Q(k*V)+Q(Q(o*_)+Q(W*q))));N[g+56>>2]=k;o=Q(N[g+72>>2]-k);N[g+40>>2]=o;if(n>Q(1)){break a}k=N[g+88>>2];o=Q(Q(k*o)+Q(Q(i*w)+Q(v*h)));if(o>Q(0)){j=Q(Q(k*u)+Q(Q(i*x)+Q(t*h)));if(j>=Q(-1.4210854715202004e-14)){break a}m=N[b+48>>2];l=N[c+48>>2];p=N[b+52>>2];y=N[c+52>>2];A=N[b+56>>2];C=N[c+56>>2];D=N[d+48>>2];q=N[e+48>>2];z=N[d+52>>2];w=N[e+52>>2];B=N[d+56>>2];U=N[e+56>>2];J[g+44>>2]=0;N[g+36>>2]=v;n=Q(n-Q(o/j));j=Q(Q(1)-n);B=Q(Q(B*j)+Q(n*U));z=Q(Q(j*z)+Q(n*w));D=Q(Q(j*D)+Q(n*q));A=Q(Q(j*A)+Q(n*C));y=Q(Q(j*p)+Q(n*y));C=Q(Q(j*m)+Q(n*l));p=N[g+92>>2];m=h;l=k;j=i}if(!nl(J[a+4>>2],g+32|0)){rl(J[a+4>>2],g+32|0,g- -64|0,g+48|0)}if(!ol(J[a+4>>2],g+80|0)){break b}r=r-1|0;h=N[g+88>>2];i=Q(h*h);h=N[g+80>>2];k=Q(h*h);h=N[g+84>>2];if(Q(i+Q(k+Q(h*h)))>Q(9999999747378752e-20)){continue}break}}N[f+164>>2]=n;n=Q(0);i=Q(0);h=Q(0);k=Q(Q(l*l)+Q(Q(j*j)+Q(m*m)));if(k>=Q(1.4210854715202004e-14)){h=l;l=Q(Q(1)/Q(Y(k)));i=Q(h*l);n=Q(m*l);s=Q(j*l);h=p}N[f+132>>2]=s;N[f+144>>2]=h;N[f+140>>2]=i;N[f+136>>2]=n;if(Q(-N[f+172>>2])<=Q(Q(i*u)+Q(Q(s*x)+Q(t*n)))){break a}ml(J[a+4>>2],g+16|0,g);a=J[g+12>>2];J[f+156>>2]=J[g+8>>2];J[f+160>>2]=a;a=J[g+4>>2];J[f+148>>2]=J[g>>2];J[f+152>>2]=a;fa=1}ga=g+96|0;return fa|0}function Qj(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=0;w=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=w;w=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=w;w=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=w;w=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=w;w=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=w;w=J[a+44>>2];J[b+40>>2]=J[a+40>>2];J[b+44>>2]=w;e=N[a+8>>2];f=N[a+20>>2];l=N[a+40>>2];g=N[a+24>>2];i=N[a+36>>2];j=N[a+4>>2];m=N[a+32>>2];n=N[a+16>>2];h=N[a>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;p=Q(Q(n*i)-Q(m*f));k=Q(Q(f*l)-Q(i*g));o=Q(Q(g*m)-Q(l*n));d=Q(Q(1)/Q(Q(e*p)+Q(Q(h*k)+Q(j*o))));q=Q(Q(Q(e*i)-Q(l*j))*d);N[c+4>>2]=q;r=Q(Q(Q(j*g)-Q(f*e))*d);N[c+8>>2]=r;o=Q(o*d);N[c+16>>2]=o;s=Q(Q(Q(h*l)-Q(m*e))*d);N[c+20>>2]=s;t=Q(Q(Q(e*n)-Q(g*h))*d);N[c+24>>2]=t;p=Q(p*d);N[c+32>>2]=p;u=Q(Q(Q(j*m)-Q(i*h))*d);N[c+36>>2]=u;v=Q(Q(Q(h*f)-Q(n*j))*d);N[c+40>>2]=v;k=Q(k*d);N[c>>2]=k;a:{b:{if(!J[8326]){break b}while(1){d=Q(R(k));e=Q(R(o));j=Q(R(p));h=Q(Q(d+e)+j);f=Q(R(q));l=Q(R(s));g=Q(R(u));i=Q(Q(f+l)+g);h=h>i?h:i;i=Q(R(r));m=Q(R(t));n=Q(R(v));y=Q(Q(i+m)+n);d=Q(Q(d+f)+i);e=Q(Q(e+l)+m);d=d>e?d:e;e=Q(Q(j+g)+n);e=Q((h>y?h:y)*(d>e?d:e));if(e<Q(1.1920928955078125e-7)){break b}y=N[b>>2];f=Q(R(y));j=N[b+16>>2];g=Q(R(j));h=N[b+32>>2];n=Q(R(h));d=Q(Q(f+g)+n);z=N[b+4>>2];B=Q(R(z));m=N[b+20>>2];C=Q(R(m));l=N[b+36>>2];D=Q(R(l));i=Q(Q(B+C)+D);E=d>i?d:i;A=N[b+8>>2];F=Q(R(A));i=N[b+24>>2];G=Q(R(i));d=N[b+40>>2];H=Q(R(d));x=Q(Q(F+G)+H);E=E>x?E:x;f=Q(Q(f+B)+F);g=Q(Q(g+C)+G);f=f>g?f:g;g=Q(Q(n+D)+H);f=Q(E*(f>g?f:g));if(f<Q(1.1920928955078125e-7)){break b}J[b+44>>2]=0;J[b+28>>2]=0;J[b+12>>2]=0;x=d;e=cg(Q(e/f),Q(.25));d=Q(e+Q(-2));e=Q(Q(1)/e);B=Q(Q(Q(x*d)+Q(v*e))*Q(.5));f=Q(x+B);N[b+40>>2]=f;C=Q(Q(Q(l*d)+Q(t*e))*Q(.5));l=Q(l+C);N[b+36>>2]=l;D=Q(Q(Q(h*d)+Q(r*e))*Q(.5));g=Q(h+D);N[b+32>>2]=g;F=Q(Q(Q(i*d)+Q(u*e))*Q(.5));i=Q(i+F);N[b+24>>2]=i;G=Q(Q(Q(m*d)+Q(s*e))*Q(.5));m=Q(m+G);N[b+20>>2]=m;H=Q(Q(Q(j*d)+Q(q*e))*Q(.5));n=Q(j+H);N[b+16>>2]=n;x=A;A=Q(Q(Q(A*d)+Q(p*e))*Q(.5));j=Q(x+A);N[b+8>>2]=j;x=z;z=Q(Q(Q(z*d)+Q(o*e))*Q(.5));h=Q(x+z);N[b+4>>2]=h;x=y;y=Q(Q(Q(y*d)+Q(k*e))*Q(.5));e=Q(x+y);N[b>>2]=e;J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;q=Q(Q(n*l)-Q(g*m));k=Q(Q(m*f)-Q(l*i));r=Q(Q(i*g)-Q(f*n));d=Q(Q(1)/Q(Q(j*q)+Q(Q(e*k)+Q(h*r))));v=Q(Q(Q(e*m)-Q(n*h))*d);N[c+40>>2]=v;u=Q(Q(Q(h*g)-Q(l*e))*d);N[c+36>>2]=u;p=Q(q*d);N[c+32>>2]=p;t=Q(Q(Q(j*n)-Q(i*e))*d);N[c+24>>2]=t;s=Q(Q(Q(e*f)-Q(g*j))*d);N[c+20>>2]=s;o=Q(r*d);N[c+16>>2]=o;r=Q(Q(Q(h*i)-Q(m*j))*d);N[c+8>>2]=r;q=Q(Q(Q(j*l)-Q(f*h))*d);N[c+4>>2]=q;k=Q(k*d);N[c>>2]=k;d=Q(Q(R(D))+Q(Q(R(y))+Q(R(H))));e=Q(Q(R(C))+Q(Q(R(z))+Q(R(G))));d=d>e?d:e;e=Q(Q(R(B))+Q(Q(R(A))+Q(R(F))));if(Q(E*N[8325])>=(d>e?d:e)){break a}I=I+1|0;if(I>>>0<M[8326]){continue}break}}d=N[b+36>>2];e=N[b+20>>2];j=N[b+40>>2];h=N[b+24>>2];f=N[a+36>>2];l=N[a+20>>2];g=N[a+4>>2];i=N[b+4>>2];m=N[a+40>>2];n=N[a+24>>2];q=N[a+8>>2];r=N[b+8>>2];o=N[a+32>>2];s=N[b+32>>2];t=N[a>>2];p=N[b>>2];u=N[a+16>>2];v=N[b+16>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;k=Q(Q(o*s)+Q(Q(t*p)+Q(v*u)));N[c>>2]=Q(k+k)*Q(.5);k=Q(Q(m*j)+Q(Q(q*r)+Q(h*n)));N[c+40>>2]=Q(k+k)*Q(.5);k=Q(Q(Q(Q(f*j)+Q(Q(g*r)+Q(h*l)))+Q(Q(m*d)+Q(Q(q*i)+Q(e*n))))*Q(.5));N[c+36>>2]=k;j=Q(Q(Q(Q(o*j)+Q(Q(t*r)+Q(h*u)))+Q(Q(m*s)+Q(Q(q*p)+Q(v*n))))*Q(.5));N[c+32>>2]=j;N[c+24>>2]=k;h=Q(Q(f*d)+Q(Q(g*i)+Q(e*l)));N[c+20>>2]=Q(h+h)*Q(.5);d=Q(Q(Q(Q(o*d)+Q(Q(t*i)+Q(e*u)))+Q(Q(f*s)+Q(Q(g*p)+Q(v*l))))*Q(.5));N[c+16>>2]=d;N[c+8>>2]=j;N[c+4>>2]=d;return}d=N[a+32>>2];e=N[a>>2];j=N[a+16>>2];h=N[b+32>>2];f=N[b>>2];l=N[b+16>>2];g=N[a+36>>2];i=N[a+4>>2];m=N[a+20>>2];n=N[b+36>>2];q=N[b+4>>2];r=N[b+20>>2];o=N[a+40>>2];s=N[b+40>>2];t=N[a+8>>2];p=N[b+8>>2];u=N[a+24>>2];v=N[b+24>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;k=Q(Q(o*s)+Q(Q(t*p)+Q(v*u)));N[c+40>>2]=Q(k+k)*Q(.5);k=Q(Q(Q(Q(g*s)+Q(Q(i*p)+Q(v*m)))+Q(Q(o*n)+Q(Q(t*q)+Q(r*u))))*Q(.5));N[c+36>>2]=k;o=Q(Q(Q(Q(d*s)+Q(Q(e*p)+Q(v*j)))+Q(Q(o*h)+Q(Q(t*f)+Q(l*u))))*Q(.5));N[c+32>>2]=o;N[c+24>>2]=k;s=Q(Q(g*n)+Q(Q(i*q)+Q(r*m)));N[c+20>>2]=Q(s+s)*Q(.5);g=Q(Q(Q(Q(d*n)+Q(Q(e*q)+Q(r*j)))+Q(Q(g*h)+Q(Q(i*f)+Q(l*m))))*Q(.5));N[c+16>>2]=g;N[c+8>>2]=o;N[c+4>>2]=g;d=Q(Q(d*h)+Q(Q(e*f)+Q(l*j)));N[c>>2]=Q(d+d)*Q(.5)}function vg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0;B=K[a+180|0];C=K[a+48|0];a:{if(C?B:1){x=N[b+52>>2];z=N[b+56>>2];j=N[a+100>>2];k=N[a+104>>2];l=N[a+108>>2];d=N[b+20>>2];g=N[b+24>>2];y=N[a+68>>2];p=N[a+84>>2];q=N[a+56>>2];r=N[a+72>>2];s=N[a+88>>2];t=N[a+60>>2];h=N[b+36>>2];u=N[a+76>>2];m=N[b+40>>2];v=N[a+92>>2];A=N[b+48>>2];n=N[b+8>>2];o=N[b>>2];e=N[b+4>>2];f=N[b+16>>2];w=N[a+52>>2];i=N[b+32>>2];J[a+884>>2]=0;J[a+868>>2]=0;J[a+852>>2]=0;J[a+836>>2]=0;N[a+864>>2]=Q(v*m)+Q(Q(t*i)+Q(u*h));N[a+860>>2]=Q(s*m)+Q(Q(q*i)+Q(r*h));N[a+856>>2]=Q(p*m)+Q(Q(w*i)+Q(y*h));N[a+848>>2]=Q(v*g)+Q(Q(t*f)+Q(u*d));N[a+844>>2]=Q(s*g)+Q(Q(q*f)+Q(r*d));N[a+840>>2]=Q(p*g)+Q(Q(w*f)+Q(y*d));N[a+832>>2]=Q(v*n)+Q(Q(t*o)+Q(e*u));N[a+828>>2]=Q(s*n)+Q(Q(q*o)+Q(e*r));N[a+824>>2]=Q(p*n)+Q(Q(w*o)+Q(y*e));N[a+880>>2]=z+Q(Q(l*m)+Q(Q(j*i)+Q(h*k)));N[a+876>>2]=x+Q(Q(l*g)+Q(Q(j*f)+Q(d*k)));N[a+872>>2]=A+Q(Q(l*n)+Q(Q(j*o)+Q(e*k)));j=N[a+172>>2];d=N[c+40>>2];k=N[a+164>>2];g=N[c+32>>2];h=N[c+36>>2];l=N[a+168>>2];y=Q(Q(j*d)+Q(Q(k*g)+Q(h*l)));e=N[c+24>>2];f=N[c+16>>2];i=N[c+20>>2];m=Q(Q(j*e)+Q(Q(k*f)+Q(i*l)));p=N[a+156>>2];q=N[a+124>>2];r=N[a+140>>2];n=Q(Q(p*d)+Q(Q(q*g)+Q(r*h)));s=N[a+152>>2];t=N[a+120>>2];u=N[a+136>>2];o=Q(Q(s*d)+Q(Q(t*g)+Q(u*h)));v=N[a+148>>2];w=N[a+116>>2];x=N[a+132>>2];z=Q(Q(v*d)+Q(Q(w*g)+Q(x*h)));g=Q(Q(p*e)+Q(Q(q*f)+Q(r*i)));h=Q(Q(s*e)+Q(Q(t*f)+Q(u*i)));i=Q(Q(v*e)+Q(Q(w*f)+Q(x*i)));d=N[c+8>>2];e=N[c>>2];f=N[c+4>>2];j=Q(Q(j*d)+Q(Q(k*e)+Q(f*l)));k=Q(Q(p*d)+Q(Q(q*e)+Q(f*r)));l=Q(Q(s*d)+Q(Q(t*e)+Q(f*u)));d=Q(Q(v*d)+Q(Q(w*e)+Q(x*f)));break a}x=N[c+52>>2];z=N[c+56>>2];j=N[a+164>>2];k=N[a+168>>2];l=N[a+172>>2];d=N[c+20>>2];g=N[c+24>>2];y=N[a+132>>2];p=N[a+148>>2];q=N[a+120>>2];r=N[a+136>>2];s=N[a+152>>2];t=N[a+124>>2];h=N[c+36>>2];u=N[a+140>>2];m=N[c+40>>2];v=N[a+156>>2];A=N[c+48>>2];n=N[c+8>>2];o=N[c>>2];e=N[c+4>>2];f=N[c+16>>2];w=N[a+116>>2];i=N[c+32>>2];J[a+884>>2]=0;J[a+868>>2]=0;J[a+852>>2]=0;J[a+836>>2]=0;N[a+864>>2]=Q(v*m)+Q(Q(t*i)+Q(u*h));N[a+860>>2]=Q(s*m)+Q(Q(q*i)+Q(r*h));N[a+856>>2]=Q(p*m)+Q(Q(w*i)+Q(y*h));N[a+848>>2]=Q(v*g)+Q(Q(t*f)+Q(u*d));N[a+844>>2]=Q(s*g)+Q(Q(q*f)+Q(r*d));N[a+840>>2]=Q(p*g)+Q(Q(w*f)+Q(y*d));N[a+832>>2]=Q(v*n)+Q(Q(t*o)+Q(e*u));N[a+828>>2]=Q(s*n)+Q(Q(q*o)+Q(e*r));N[a+824>>2]=Q(p*n)+Q(Q(w*o)+Q(y*e));N[a+880>>2]=z+Q(Q(l*m)+Q(Q(j*i)+Q(h*k)));N[a+876>>2]=x+Q(Q(l*g)+Q(Q(j*f)+Q(d*k)));N[a+872>>2]=A+Q(Q(l*n)+Q(Q(j*o)+Q(e*k)));j=N[a+108>>2];d=N[b+40>>2];k=N[a+100>>2];g=N[b+32>>2];h=N[b+36>>2];l=N[a+104>>2];y=Q(Q(j*d)+Q(Q(k*g)+Q(h*l)));e=N[b+24>>2];f=N[b+16>>2];i=N[b+20>>2];m=Q(Q(j*e)+Q(Q(k*f)+Q(i*l)));p=N[a+92>>2];q=N[a+60>>2];r=N[a+76>>2];n=Q(Q(p*d)+Q(Q(q*g)+Q(r*h)));s=N[a+88>>2];t=N[a+56>>2];u=N[a+72>>2];o=Q(Q(s*d)+Q(Q(t*g)+Q(u*h)));v=N[a+84>>2];w=N[a+52>>2];x=N[a+68>>2];z=Q(Q(v*d)+Q(Q(w*g)+Q(x*h)));g=Q(Q(p*e)+Q(Q(q*f)+Q(r*i)));h=Q(Q(s*e)+Q(Q(t*f)+Q(u*i)));i=Q(Q(v*e)+Q(Q(w*f)+Q(x*i)));d=N[b+8>>2];e=N[b>>2];f=N[b+4>>2];j=Q(Q(j*d)+Q(Q(k*e)+Q(f*l)));k=Q(Q(p*d)+Q(Q(q*e)+Q(f*r)));l=Q(Q(s*d)+Q(Q(t*e)+Q(f*u)));c=b;d=Q(Q(v*d)+Q(Q(w*e)+Q(x*f)))}e=N[c+56>>2];f=N[c+52>>2];N[a+936>>2]=N[c+48>>2]+j;J[a+932>>2]=0;N[a+928>>2]=n;N[a+924>>2]=o;N[a+920>>2]=z;J[a+916>>2]=0;N[a+912>>2]=g;N[a+908>>2]=h;N[a+904>>2]=i;J[a+900>>2]=0;N[a+896>>2]=k;N[a+892>>2]=l;N[a+888>>2]=d;J[a+948>>2]=0;N[a+940>>2]=m+f;N[a+944>>2]=y+e;b=J[a+876>>2];J[a+968>>2]=J[a+872>>2];J[a+972>>2]=b;b=J[a+884>>2];J[a+976>>2]=J[a+880>>2];J[a+980>>2]=b;b=J[a+948>>2];J[a+992>>2]=J[a+944>>2];J[a+996>>2]=b;b=J[a+940>>2];J[a+984>>2]=J[a+936>>2];J[a+988>>2]=b;e=N[a+840>>2];f=N[a+856>>2];i=N[a+824>>2];J[a+964>>2]=0;N[a+960>>2]=f;N[a+956>>2]=e;N[a+952>>2]=i;b:{if(B|C){n=N[a+972>>2];g=Q(N[a+988>>2]-n);o=N[a+968>>2];h=Q(N[a+984>>2]-o);m=N[a+976>>2];d=Q(N[a+992>>2]-m);break b}n=N[a+972>>2];g=Q(n-N[a+988>>2]);o=N[a+968>>2];h=Q(o-N[a+984>>2]);m=N[a+976>>2];d=Q(m-N[a+992>>2])}N[a+1016>>2]=h;J[a+1028>>2]=0;N[a+1024>>2]=d;N[a+1020>>2]=g;J[a+1012>>2]=0;j=Q(Q(f*d)+Q(Q(i*h)+Q(e*g)));N[a+1032>>2]=j;N[a+1008>>2]=Q(f*j)+m;N[a+1004>>2]=n+Q(e*j);N[a+1e3>>2]=o+Q(i*j);N[a+1036>>2]=Q(d*N[a+860>>2])+Q(Q(h*N[a+828>>2])+Q(N[a+844>>2]*g));N[a+1040>>2]=Q(d*N[a+864>>2])+Q(Q(h*N[a+832>>2])+Q(N[a+848>>2]*g))}function Dn(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=0,g=0,h=0;f=ga-96|0;ga=f;J[f+92>>2]=a;J[f+88>>2]=b;J[f+84>>2]=c;a=J[f+92>>2];b=f+8|0;_i(b);ia[J[J[a>>2]+20>>2]](a,J[f+88>>2],b);d=N[f+72>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[f+84>>2];J[a+24>>2]=b;J[a+20>>2]=b+16;J[a+16>>2]=b+32;N[a+12>>2]=d;c=J[a+28>>2];b=ga-16|0;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];a:{if(N[J[b+12>>2]>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break a}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}b:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];c:{if(N[J[b+12>>2]>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break c}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}break b}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];d:{if(N[J[b+12>>2]+4>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break d}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}e:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];f:{if(N[J[b+12>>2]+4>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break f}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}break e}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]+4>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];g:{if(N[J[b+12>>2]+8>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break g}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}h:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];i:{if(N[J[b+12>>2]+8>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break i}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}break h}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+8>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]+8>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];j:{if(N[J[b+12>>2]>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break j}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}k:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];l:{if(N[J[b+12>>2]>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break l}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}break k}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=c+16;N[J[b+12>>2]>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];m:{if(N[J[b+12>>2]+4>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break m}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}n:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];o:{if(N[J[b+12>>2]+4>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break o}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}break n}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=c+16;N[J[b+12>>2]+4>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];p:{if(N[J[b+12>>2]+8>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break p}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}q:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];r:{if(N[J[b+12>>2]+8>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break r}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}break q}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+8>>2]}b=ga-16|0;h=c+16|0;J[b+12>>2]=h;N[J[b+12>>2]+8>>2]=d;d=N[a+12>>2];J[b+12>>2]=c;g=J[b+12>>2];N[g>>2]=N[g>>2]-d;d=N[a+12>>2];J[b+12>>2]=c;g=J[b+12>>2];N[g+4>>2]=N[g+4>>2]-d;d=N[a+12>>2];J[b+12>>2]=c;c=J[b+12>>2];N[c+8>>2]=N[c+8>>2]-d;d=N[a+12>>2];J[b+12>>2]=h;c=J[b+12>>2];N[c>>2]=N[c>>2]+d;d=N[a+12>>2];J[b+12>>2]=h;c=J[b+12>>2];N[c+4>>2]=N[c+4>>2]+d;d=N[a+12>>2];J[b+12>>2]=h;b=J[b+12>>2];N[b+8>>2]=N[b+8>>2]+d;ga=a+32|0;ga=f+96|0}function cA(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0);c=ga-288|0;ga=c;ya(2666);if(J[a+232>>2]>0){while(1){e=J[J[a+240>>2]+(h<<2)>>2];J[e+244>>2]=1065353216;a:{b:{switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(K[e+204|0]&3){break a}ve(e,b,c+224|0);c:{d:{if(!K[a+44|0]){break d}f=N[e+252>>2];f=Q(f*f);if(f==Q(0)){break d}i=Q(N[c+280>>2]-N[e+60>>2]);m=Q(i*i);i=Q(N[c+272>>2]-N[e+52>>2]);j=Q(i*i);i=Q(N[c+276>>2]-N[e+56>>2]);if(!(f<Q(m+Q(j+Q(i*i))))){break d}ya(3079);if(J[J[e+192>>2]+4>>2]<=19){J[8145]=J[8145]+1;d=J[a+68>>2];d=ia[J[J[d>>2]+36>>2]](d)|0;k=J[a+24>>2];J[c+132>>2]=1065353216;J[c+136>>2]=-65535;g=J[e+64>>2];J[c+148>>2]=J[e+60>>2];J[c+152>>2]=g;g=J[e+56>>2];J[c+140>>2]=J[e+52>>2];J[c+144>>2]=g;g=J[c+284>>2];J[c+164>>2]=J[c+280>>2];J[c+168>>2]=g;g=J[c+276>>2];J[c+156>>2]=J[c+272>>2];J[c+160>>2]=g;J[c+204>>2]=0;J[c+128>>2]=20664;J[c+216>>2]=d;J[c+220>>2]=k;J[c+212>>2]=0;J[c+208>>2]=e;f=N[e+248>>2];k=c+72|0;d=k;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+116>>2]=f;N[c+100>>2]=f;J[c+76>>2]=8;J[c+72>>2]=16132;N[c+212>>2]=N[a+56>>2];d=J[e+188>>2];I[c+136>>1]=L[d+4>>1];I[c+138>>1]=L[d+6>>1];d=J[c+236>>2];J[c+16>>2]=J[c+232>>2];J[c+20>>2]=d;d=J[c+228>>2];J[c+8>>2]=J[c+224>>2];J[c+12>>2]=d;d=J[c+252>>2];J[c+32>>2]=J[c+248>>2];J[c+36>>2]=d;d=J[c+244>>2];J[c+24>>2]=J[c+240>>2];J[c+28>>2]=d;d=J[c+268>>2];J[c+48>>2]=J[c+264>>2];J[c+52>>2]=d;d=J[c+260>>2];J[c+40>>2]=J[c+256>>2];J[c+44>>2]=d;d=J[c+284>>2];J[c+64>>2]=J[c+280>>2];J[c+68>>2]=d;d=J[c+276>>2];J[c+56>>2]=J[c+272>>2];J[c+60>>2]=d;d=e+4|0;g=J[d+12>>2];J[c+16>>2]=J[d+8>>2];J[c+20>>2]=g;g=J[d+4>>2];J[c+8>>2]=J[d>>2];J[c+12>>2]=g;g=J[e+32>>2];J[c+32>>2]=J[e+28>>2];J[c+36>>2]=g;g=J[e+24>>2];J[c+24>>2]=J[e+20>>2];J[c+28>>2]=g;g=J[e+48>>2];J[c+48>>2]=J[e+44>>2];J[c+52>>2]=g;g=J[e+40>>2];J[c+40>>2]=J[e+36>>2];J[c+44>>2]=g;ic(a,k,d,c+8|0,c+128|0,Q(0));f=N[c+132>>2];if(f<Q(1)){break c}}xa()}xk(e,c+224|0);break a}N[e+244>>2]=f;d=c+224|0;ve(e,Q(f*b),d);J[e+244>>2]=0;xk(e,d);xa()}h=h+1|0;if((h|0)<J[a+232>>2]){continue}break}}if(K[a+275|0]){ya(2862);h=J[a+308>>2];if((h|0)>0){while(1){k=J[J[a+316>>2]+(v<<2)>>2];if(J[k+748>>2]>0){e=J[k+744>>2];e=J[e+236>>2]<<30>>31&e;d=J[k+740>>2];d=J[d+236>>2]<<30>>31&d;g=0;while(1){b=Q(N[d+228>>2]*N[e+228>>2]);e:{if(!(b>Q(0))){break e}h=k+P(g,184)|0;f=N[h+124>>2];if(f==Q(0)){break e}s=N[h+44>>2];y=N[e+60>>2];t=N[h+40>>2];z=N[e+56>>2];u=N[h+36>>2];A=N[e+52>>2];i=Q(b*Q(f*Q(-N[h+76>>2])));j=Q(b*Q(f*Q(-N[h+72>>2])));f=Q(b*Q(f*Q(-N[h+68>>2])));b=N[d+344>>2];if(b!=Q(0)){o=N[h+60>>2];w=N[d+60>>2];n=N[h+56>>2];p=N[d+56>>2];q=N[h+52>>2];x=N[d+52>>2];r=Q(f*N[d+348>>2]);N[d+312>>2]=Q(b*r)+N[d+312>>2];l=Q(j*N[d+352>>2]);N[d+316>>2]=Q(b*l)+N[d+316>>2];m=b;b=Q(i*N[d+356>>2]);N[d+320>>2]=Q(m*b)+N[d+320>>2];m=N[d+552>>2];B=N[d+304>>2];C=N[d+296>>2];D=N[d+300>>2];E=N[d+548>>2];F=N[d+288>>2];G=N[d+280>>2];H=N[d+284>>2];q=Q(q-x);p=Q(n-p);n=Q(Q(q*l)-Q(r*p));o=Q(o-w);l=Q(Q(p*b)-Q(l*o));b=Q(Q(o*r)-Q(b*q));N[d+328>>2]=Q(Q(Q(N[d+272>>2]*n)+Q(Q(N[d+264>>2]*l)+Q(b*N[d+268>>2])))*N[d+544>>2])+N[d+328>>2];N[d+332>>2]=Q(E*Q(Q(F*n)+Q(Q(G*l)+Q(b*H))))+N[d+332>>2];N[d+336>>2]=Q(m*Q(Q(B*n)+Q(Q(C*l)+Q(b*D))))+N[d+336>>2]}b=N[e+344>>2];if(b==Q(0)){break e}f=Q(N[e+348>>2]*Q(-f));N[e+312>>2]=Q(b*f)+N[e+312>>2];j=Q(N[e+352>>2]*Q(-j));N[e+316>>2]=Q(b*j)+N[e+316>>2];m=b;b=Q(N[e+356>>2]*Q(-i));N[e+320>>2]=Q(m*b)+N[e+320>>2];r=N[e+552>>2];l=N[e+304>>2];n=N[e+296>>2];o=N[e+300>>2];w=N[e+548>>2];p=N[e+288>>2];q=N[e+280>>2];x=N[e+284>>2];u=Q(u-A);t=Q(t-z);i=Q(Q(u*j)-Q(f*t));s=Q(s-y);j=Q(Q(t*b)-Q(j*s));b=Q(Q(s*f)-Q(b*u));N[e+328>>2]=Q(Q(Q(N[e+272>>2]*i)+Q(Q(N[e+264>>2]*j)+Q(b*N[e+268>>2])))*N[e+544>>2])+N[e+328>>2];N[e+332>>2]=Q(w*Q(Q(p*i)+Q(Q(q*j)+Q(b*x))))+N[e+332>>2];N[e+336>>2]=Q(r*Q(Q(l*i)+Q(Q(n*j)+Q(b*o))))+N[e+336>>2]}g=g+1|0;if((g|0)<J[k+748>>2]){continue}break}h=J[a+308>>2]}v=v+1|0;if((v|0)<(h|0)){continue}break}}xa()}xa();ga=c+288|0}function aj(a,b,c,d,e){var f=0,g=Q(0);f=ga-32|0;ga=f;J[f+24>>2]=a;J[f+20>>2]=b;J[f+16>>2]=c;J[f+12>>2]=d;N[f+8>>2]=e;a=J[f+24>>2];J[f+28>>2]=a;b=ga-16|0;J[b+12>>2]=a;J[b+12>>2]=a+16;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];a:{if(N[J[b+12>>2]>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break a}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}b:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];c:{if(N[J[b+12>>2]>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break c}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}break b}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];d:{if(N[J[b+12>>2]+4>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break d}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}e:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];f:{if(N[J[b+12>>2]+4>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break f}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}break e}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];g:{if(N[J[b+12>>2]+8>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break g}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}h:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];i:{if(N[J[b+12>>2]+8>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break i}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}break h}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+8>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];j:{if(N[J[b+12>>2]>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break j}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}k:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];l:{if(N[J[b+12>>2]>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break l}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}break k}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=a+16;N[J[b+12>>2]>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];m:{if(N[J[b+12>>2]+4>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break m}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}n:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];o:{if(N[J[b+12>>2]+4>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break o}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}break n}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=a+16;N[J[b+12>>2]+4>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];p:{if(N[J[b+12>>2]+8>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break p}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}q:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];r:{if(N[J[b+12>>2]+8>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break r}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}break q}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+8>>2]}b=ga-16|0;c=a+16|0;J[b+12>>2]=c;N[J[b+12>>2]+8>>2]=e;e=N[f+8>>2];J[b+12>>2]=a;d=J[b+12>>2];N[d>>2]=N[d>>2]-e;e=N[f+8>>2];J[b+12>>2]=a;d=J[b+12>>2];N[d+4>>2]=N[d+4>>2]-e;e=N[f+8>>2];J[b+12>>2]=a;a=J[b+12>>2];N[a+8>>2]=N[a+8>>2]-e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a>>2]=N[a>>2]+e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a+4>>2]=N[a+4>>2]+e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a+8>>2]=N[a+8>>2]+e;ga=f+32|0}function Ab(a,b,c,d,e,f,g){var h=0,i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0);i=ga+-64|0;ga=i;r=e<<4;h=r+J[a+16>>2]|0;s=L[h>>1];l=L[h+2>>1];u=L[h+4>>1];m=N[a+28>>2];n=N[a+60>>2];o=N[a+32>>2];p=N[a- -64>>2];k=N[a+24>>2];j=N[a+56>>2];J[i+44>>2]=0;N[i+40>>2]=o+Q(Q(u>>>0)/p);N[i+36>>2]=m+Q(Q(l>>>0)/n);N[i+32>>2]=k+Q(Q(s>>>0)/j);s=L[h+6>>1];l=L[h+8>>1];h=L[h+10>>1];J[i+60>>2]=0;N[i+56>>2]=o+Q(Q(h>>>0)/p);N[i+52>>2]=m+Q(Q(l>>>0)/n);N[i+48>>2]=k+Q(Q(s>>>0)/j);s=f<<4;h=s+J[b+16>>2]|0;l=L[h>>1];u=L[h+2>>1];F=L[h+4>>1];m=N[b+28>>2];n=N[b+60>>2];o=N[b+32>>2];p=N[b- -64>>2];k=N[b+24>>2];j=N[b+56>>2];J[i+12>>2]=0;N[i+8>>2]=o+Q(Q(F>>>0)/p);N[i+4>>2]=m+Q(Q(u>>>0)/n);N[i>>2]=k+Q(Q(l>>>0)/j);l=L[h+6>>1];u=L[h+8>>1];h=L[h+10>>1];J[i+28>>2]=0;N[i+24>>2]=o+Q(Q(h>>>0)/p);N[i+20>>2]=m+Q(Q(u>>>0)/n);N[i+16>>2]=k+Q(Q(l>>>0)/j);h=0;G=N[d+24>>2];n=N[i+24>>2];j=Q(Q(n+N[i+8>>2])*Q(.5));I=N[d+16>>2];o=N[i+16>>2];q=Q(Q(o+N[i>>2])*Q(.5));p=N[i+20>>2];t=Q(Q(p+N[i+4>>2])*Q(.5));M=N[d+20>>2];m=N[i+48>>2];k=Q(Q(m+N[i+32>>2])*Q(.5));v=Q(Q(N[d>>2]+Q(Q(G*j)+Q(Q(I*q)+Q(t*M))))-k);m=Q(m-k);y=N[d+72>>2];n=Q(n-j);z=N[d+64>>2];o=Q(o-q);p=Q(p-t);A=N[d+68>>2];a:{if(Q(R(v))>Q(m+Q(Q(y*n)+Q(Q(z*o)+Q(p*A))))){break a}O=N[d+40>>2];P=N[d+32>>2];S=N[d+36>>2];k=N[i+52>>2];w=Q(Q(k+N[i+36>>2])*Q(.5));x=Q(Q(N[d+4>>2]+Q(Q(O*j)+Q(Q(P*q)+Q(t*S))))-w);k=Q(k-w);w=N[d+88>>2];B=N[d+80>>2];C=N[d+84>>2];if(Q(R(x))>Q(k+Q(Q(w*n)+Q(Q(B*o)+Q(p*C))))){break a}T=N[d+56>>2];U=N[d+48>>2];V=N[d+52>>2];q=Q(N[d+8>>2]+Q(Q(T*j)+Q(Q(U*q)+Q(t*V))));j=N[i+56>>2];t=Q(Q(j+N[i+40>>2])*Q(.5));q=Q(q-t);j=Q(j-t);t=N[d+104>>2];D=N[d+96>>2];E=N[d+100>>2];if(Q(R(q))>Q(j+Q(Q(t*n)+Q(Q(D*o)+Q(p*E))))|Q(R(Q(Q(q*U)+Q(Q(v*I)+Q(x*P)))))>Q(o+Q(Q(j*D)+Q(Q(m*z)+Q(k*B))))|Q(R(Q(Q(q*V)+Q(Q(v*M)+Q(x*S)))))>Q(p+Q(Q(j*E)+Q(Q(m*A)+Q(k*C))))){break a}l=Q(R(Q(Q(q*T)+Q(Q(v*G)+Q(x*O)))))>Q(n+Q(Q(j*t)+Q(Q(m*y)+Q(k*w))));h=!l;if(!g|l){break a}b:{if(Q(R(Q(Q(q*P)-Q(U*x))))>Q(Q(n*A)+Q(Q(p*y)+Q(Q(k*D)+Q(j*B))))){break b}W=Q(-x);if(Q(R(Q(Q(q*S)+Q(V*W))))>Q(Q(n*z)+Q(Q(o*y)+Q(Q(k*E)+Q(j*C))))|Q(R(Q(Q(q*O)+Q(T*W))))>Q(Q(p*z)+Q(Q(o*A)+Q(Q(k*t)+Q(j*w))))|Q(R(Q(Q(v*U)-Q(I*q))))>Q(Q(n*C)+Q(Q(p*w)+Q(Q(m*D)+Q(j*z))))){break b}q=Q(-q);if(Q(R(Q(Q(v*V)+Q(M*q))))>Q(Q(n*B)+Q(Q(o*w)+Q(Q(m*E)+Q(j*A))))|Q(R(Q(Q(v*T)+Q(G*q))))>Q(Q(p*B)+Q(Q(o*C)+Q(Q(m*t)+Q(j*y))))|Q(R(Q(Q(x*I)-Q(P*v))))>Q(Q(n*E)+Q(Q(p*t)+Q(Q(m*B)+Q(k*z))))){break b}j=Q(-v);if(Q(R(Q(Q(x*M)+Q(S*j))))>Q(Q(n*D)+Q(Q(o*t)+Q(Q(m*C)+Q(k*A))))){break b}h=1;if(!(Q(R(Q(Q(x*G)+Q(O*j))))>Q(Q(p*D)+Q(Q(o*E)+Q(Q(m*w)+Q(k*y)))))){break a}}h=0}c:{if(!h){break c}h=J[(s+J[b+16>>2]|0)+12>>2];s=J[(r+J[a+16>>2]|0)+12>>2];if((s|0)>=0){if((h|0)>=0){f=J[c+4>>2];d:{if((f|0)!=J[c+8>>2]){break d}e=f?f<<1:1;if((e|0)<=(f|0)){break d}e:{if(!e){d=0;break e}J[8369]=J[8369]+1;d=ia[J[6782]](e<<3,16)|0;f=J[c+4>>2]}a=J[c+12>>2];f:{g:{if((f|0)>0){b=0;if((f|0)!=1){l=f&-2;g=0;while(1){r=b<<3;u=r+d|0;F=a+r|0;J[u>>2]=J[F>>2];J[u+4>>2]=J[F+4>>2];r=r|8;u=r+d|0;r=a+r|0;J[u>>2]=J[r>>2];J[u+4>>2]=J[r+4>>2];b=b+2|0;g=g+2|0;if((l|0)!=(g|0)){continue}break}}if(f&1){b=b<<3;g=b+d|0;b=a+b|0;J[g>>2]=J[b>>2];J[g+4>>2]=J[b+4>>2]}if(K[c+16|0]){break g}break f}if(!a|!K[c+16|0]){break f}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}f=J[c+4>>2]}J[c+12>>2]=d;H[c+16|0]=1;J[c+8>>2]=e}a=J[c+12>>2]+(f<<3)|0;J[a+4>>2]=h;J[a>>2]=s;J[c+4>>2]=f+1;break c}g=f+1|0;Ab(a,b,c,d,e,g,0);l=a;a=J[(J[b+16>>2]+(g<<4)|0)+12>>2];Ab(l,b,c,d,e,(a|0)>=0?f+2|0:g-a|0,0);break c}g=e+1|0;if((h|0)>=0){Ab(a,b,c,d,g,f,0);l=a;a=J[(J[a+16>>2]+(g<<4)|0)+12>>2];Ab(l,b,c,d,(a|0)>=0?e+2|0:g-a|0,f,0);break c}h=f+1|0;Ab(a,b,c,d,g,h,0);f=f+2|0;r=h<<4;s=J[(r+J[b+16>>2]|0)+12>>2];Ab(a,b,c,d,g,(s|0)>=0?f:h-s|0,0);e=e+2|0;s=g<<4;l=J[(s+J[a+16>>2]|0)+12>>2];Ab(a,b,c,d,(l|0)>=0?e:g-l|0,h,0);l=a;a=J[(s+J[a+16>>2]|0)+12>>2];e=(a|0)>=0?e:g-a|0;a=J[(r+J[b+16>>2]|0)+12>>2];Ab(l,b,c,d,e,(a|0)>=0?f:h-a|0,0)}ga=i- -64|0}function $e(a,b,c,d,e,f){var g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=0,u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,O=0;g=ga-272|0;ga=g;i=J[c+12>>2];J[g+216>>2]=J[c+8>>2];J[g+220>>2]=i;i=J[c+4>>2];J[g+208>>2]=J[c>>2];J[g+212>>2]=i;i=J[c+28>>2];J[g+232>>2]=J[c+24>>2];J[g+236>>2]=i;i=J[c+20>>2];J[g+224>>2]=J[c+16>>2];J[g+228>>2]=i;i=J[c+44>>2];J[g+248>>2]=J[c+40>>2];J[g+252>>2]=i;i=J[c+36>>2];J[g+240>>2]=J[c+32>>2];J[g+244>>2]=i;i=J[c+60>>2];J[g+264>>2]=J[c+56>>2];J[g+268>>2]=i;i=J[c+52>>2];J[g+256>>2]=J[c+48>>2];J[g+260>>2]=i;i=J[d+12>>2];J[g+152>>2]=J[d+8>>2];J[g+156>>2]=i;i=J[d+4>>2];J[g+144>>2]=J[d>>2];J[g+148>>2]=i;i=J[d+28>>2];J[g+168>>2]=J[d+24>>2];J[g+172>>2]=i;i=J[d+20>>2];J[g+160>>2]=J[d+16>>2];J[g+164>>2]=i;i=J[d+44>>2];J[g+184>>2]=J[d+40>>2];J[g+188>>2]=i;i=J[d+36>>2];J[g+176>>2]=J[d+32>>2];J[g+180>>2]=i;i=J[d+60>>2];J[g+200>>2]=J[d+56>>2];J[g+204>>2]=i;i=J[d+52>>2];J[g+192>>2]=J[d+48>>2];J[g+196>>2]=i;J[g+108>>2]=0;N[g+104>>2]=N[g+200>>2]-N[g+264>>2];N[g+100>>2]=N[g+196>>2]-N[g+260>>2];N[g+96>>2]=N[g+192>>2]-N[g+256>>2];t=g+208|0;u=g+16|0;i=g+128|0;hc(t,g+144|0,u,i);J[g+92>>2]=0;k=N[g+128>>2];N[g+88>>2]=k*N[g+24>>2];N[g+84>>2]=k*N[g+20>>2];N[g+80>>2]=k*N[g+16>>2];J[g+72>>2]=0;J[g+76>>2]=0;r=g- -64|0;J[r>>2]=0;J[r+4>>2]=0;Na(t,i);J[g+60>>2]=0;J[g+44>>2]=0;h=N[g+140>>2];l=N[g+136>>2];k=N[g+128>>2];j=N[g+132>>2];m=Q(Q(2)/Q(Q(h*h)+Q(Q(l*l)+Q(Q(k*k)+Q(j*j)))));n=Q(l*m);o=Q(j*n);p=Q(k*m);q=Q(h*p);N[g+52>>2]=o+q;N[g+40>>2]=o-q;o=Q(k*p);v=j;j=Q(j*m);m=Q(v*j);N[g+56>>2]=Q(1)-Q(o+m);l=Q(l*n);N[g+36>>2]=Q(1)-Q(o+l);J[g+28>>2]=0;o=Q(k*n);p=Q(h*j);N[g+48>>2]=o-p;k=Q(k*j);h=Q(h*n);N[g+32>>2]=k+h;N[g+24>>2]=o+p;N[g+20>>2]=k-h;N[g+16>>2]=Q(1)-Q(m+l);nm(b,u,g+96|0,g+80|0,i,g+112|0);if(J[a+268>>2]>0){t=d+48|0;u=c+48|0;d=0;while(1){i=J[J[a+276>>2]+(d<<2)>>2];a:{if(!(ia[J[J[e>>2]+8>>2]](e,J[i+188>>2])|0)){break a}w=J[i+192>>2];C=i+4|0;c=g+16|0;r=g+96|0;ia[J[J[w>>2]+8>>2]](w,C,c,r);J[g+28>>2]=0;J[g+108>>2]=0;N[g+24>>2]=N[g+24>>2]+N[g+136>>2];N[g+20>>2]=N[g+20>>2]+N[g+132>>2];N[g+16>>2]=N[g+16>>2]+N[g+128>>2];N[g+96>>2]=N[g+96>>2]+N[g+112>>2];N[g+100>>2]=N[g+100>>2]+N[g+116>>2];N[g+104>>2]=N[g+104>>2]+N[g+120>>2];J[g+12>>2]=1065353216;w=0;h=N[r>>2];j=N[c>>2];l=Q(Q(h+j)*Q(.5));k=Q(N[t>>2]-l);h=Q(Q(h-j)*Q(.5));D=k>h;j=N[r+4>>2];m=N[c+4>>2];p=Q(Q(j+m)*Q(.5));n=Q(N[t+4>>2]-p);o=Q(N[u>>2]-l);E=h<o;y=Q(-h);F=k<y;j=Q(Q(j-m)*Q(.5));z=Q(-j);G=n<z;H=j<n;l=N[r+8>>2];m=N[c+8>>2];q=Q(Q(l+m)*Q(.5));s=Q(N[t+8>>2]-q);x=Q(Q(l-m)*Q(.5));A=Q(-x);c=s<A;r=F|D<<3|G<<1|H<<4|c<<2|(s>x)<<5;I=o<y;p=Q(N[u+4>>2]-p);K=z>p;L=j<p;q=Q(N[u+8>>2]-q);M=A>q;O=I|E<<3|K<<1|L<<4|M<<2|(q>x)<<5;b:{if(r&O){break b}B=Q(k-o);k=N[g+12>>2];c:{d:{if(I){m=Q(0);l=Q(Q(Q(-o)-h)/B);if(!(l>=Q(0))){break d}m=Q(1);break c}m=Q(0);if(!F){break d}h=Q(Q(Q(-o)-h)/B);if(!(h<k)){break d}k=h}l=Q(0)}v=Q(n-p);e:{f:{if(K){n=Q(0);h=Q(Q(Q(-p)-j)/v);if(!(l<=h)){break f}m=Q(0);n=Q(1);break e}n=Q(0);if(!G){break f}h=Q(Q(Q(-p)-j)/v);if(!(h<k)){break f}k=h}h=l}s=Q(s-q);g:{h:{if(M){l=Q(0);j=Q(Q(Q(-q)-x)/s);if(!(j>=h)){break h}n=Q(0);l=Q(1);m=Q(0);break g}l=Q(0);if(!c){break h}j=Q(Q(Q(-q)-x)/s);if(!(j<k)){break h}k=j}j=h}i:{j:{if(E){h=Q(Q(Q(-y)-o)/B);if(!(j<=h)){break j}m=Q(-1);l=Q(0);n=Q(0);break i}if(!D){break j}h=Q(Q(Q(-y)-o)/B);if(!(h<k)){break j}k=h}h=j}k:{l:{if(L){j=Q(Q(Q(-z)-p)/v);if(!(j>=h)){break l}n=Q(-1);l=Q(0);m=Q(0);break k}if(!H){break l}j=Q(Q(Q(-z)-p)/v);if(!(j<k)){break l}k=j}j=h}m:{n:{if(O&32){h=Q(Q(Q(-A)-q)/s);if(!(j<=h)){break n}n=Q(0);l=Q(-1);m=Q(0);break m}if(!(r&32)){break n}h=Q(Q(Q(-A)-q)/s);if(!(h<k)){break n}k=h}h=j}if(!(h<=k)){break b}N[g+12>>2]=h;J[g+92>>2]=0;N[g+88>>2]=l;N[g+84>>2]=n;N[g+80>>2]=m;w=1}if(!w){break a}r=J[i+192>>2];c=ga-32|0;ga=c;J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=C;J[c+16>>2]=i;J[c+12>>2]=r;J[c+8>>2]=0;hh(b,g+208|0,g+144|0,c+8|0,e,f);ga=c+32|0}d=d+1|0;if((d|0)<J[a+268>>2]){continue}break}}ga=g+272|0}function Qe(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);a:{b:{if(K[a+165|0]){d=J[a+88>>2];if(!(!c|(d|0)<=0)){e=J[a+96>>2];n=N[a+168>>2];o=N[b+8>>2];p=N[b+4>>2];q=N[b>>2];c=0;while(1){f=e+(c<<4)|0;k=Q(N[f+8>>2]-o);r=Q(k*k);k=Q(N[f>>2]-q);s=Q(k*k);k=Q(N[f+4>>2]-p);if(n>=Q(r+Q(s+Q(k*k)))){break b}c=c+1|0;if((d|0)!=(c|0)){continue}break}}c=J[a+32>>2];J[c+12>>2]=J[c+12>>2]+1;c:{if(J[a+92>>2]!=(d|0)){break c}h=d?d<<1:1;if((h|0)<=(d|0)){break c}if(h){J[8369]=J[8369]+1;g=ia[J[6782]](h<<4,16)|0;d=J[a+88>>2]}d:{if((d|0)<=0){break d}i=d&1;c=0;if((d|0)!=1){l=d&-2;d=0;while(1){j=c<<4;f=j+g|0;m=j+J[a+96>>2]|0;e=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=e;e=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=e;e=j|16;f=e+g|0;j=e+J[a+96>>2]|0;e=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=e;e=J[j+12>>2];J[f+8>>2]=J[j+8>>2];J[f+12>>2]=e;c=c+2|0;d=d+2|0;if((l|0)!=(d|0)){continue}break}}if(!i){break d}c=c<<4;f=c+g|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=g;H[a+100|0]=1;J[a+92>>2]=h;d=J[a+88>>2]}c=J[b+4>>2];e=J[a+96>>2]+(d<<4)|0;J[e>>2]=J[b>>2];J[e+4>>2]=c;c=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=c;b=J[a+88>>2];J[a+88>>2]=b+1;J[J[a+32>>2]+16>>2]=J[a+96>>2];return b}d=J[a+108>>2];if(!(!c|(d|0)<=0)){e=J[a+116>>2];n=N[a+168>>2];o=N[b+8>>2];p=N[b+4>>2];q=N[b>>2];c=0;while(1){f=e+(c<<2)|0;k=Q(N[f+8>>2]-o);r=Q(k*k);k=Q(N[f>>2]-q);s=Q(k*k);k=Q(N[f+4>>2]-p);if(n>=Q(r+Q(s+Q(k*k)))){break a}c=c+3|0;if((d|0)>(c|0)){continue}break}}e=J[a+112>>2];e:{if((e|0)!=(d|0)){break e}e=d?d<<1:1;if((e|0)<=(d|0)){e=d;break e}if(e){J[8369]=J[8369]+1;h=ia[J[6782]](e<<2,16)|0;d=J[a+108>>2]}i=J[a+116>>2];f:{g:{if((d|0)>0){c=0;if(d-1>>>0>=3){g=d&-4;while(1){l=c<<2;N[l+h>>2]=N[i+l>>2];f=l|4;N[f+h>>2]=N[f+i>>2];f=l|8;N[f+h>>2]=N[f+i>>2];f=l|12;N[f+h>>2]=N[f+i>>2];c=c+4|0;j=j+4|0;if((g|0)!=(j|0)){continue}break}}g=d&3;if(g){while(1){f=c<<2;N[f+h>>2]=N[f+i>>2];c=c+1|0;m=m+1|0;if((g|0)!=(m|0)){continue}break}}if(K[a+120|0]){break g}break f}if(!i|!K[a+120|0]){break f}}if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}d=J[a+108>>2]}J[a+116>>2]=h;J[a+112>>2]=e;H[a+120|0]=1}g=J[a+116>>2];N[g+(d<<2)>>2]=N[b>>2];d=d+1|0;J[a+108>>2]=d;h:{if((d|0)!=(e|0)){c=g;f=e;e=d;break h}f=e?e<<1:1;if((e|0)>=(f|0)){c=g;f=e;break h}i:{if(!f){c=0;break i}J[8369]=J[8369]+1;c=ia[J[6782]](f<<2,16)|0;g=J[a+116>>2];e=J[a+108>>2]}j:{k:{if((e|0)>0){m=0;h=0;if(e-1>>>0>=3){l=e&-4;j=0;while(1){i=h<<2;N[i+c>>2]=N[g+i>>2];d=i|4;N[d+c>>2]=N[d+g>>2];d=i|8;N[d+c>>2]=N[d+g>>2];d=i|12;N[d+c>>2]=N[d+g>>2];h=h+4|0;j=j+4|0;if((l|0)!=(j|0)){continue}break}}l=e&3;if(l){while(1){d=h<<2;N[d+c>>2]=N[d+g>>2];h=h+1|0;m=m+1|0;if((l|0)!=(m|0)){continue}break}}if(K[a+120|0]){break k}break j}if(!g|!K[a+120|0]){break j}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[a+108>>2]}J[a+116>>2]=c;J[a+112>>2]=f;H[a+120|0]=1}N[(e<<2)+c>>2]=N[b+4>>2];e=e+1|0;J[a+108>>2]=e;l:{if((e|0)!=(f|0)){d=c;f=e;break l}i=f?f<<1:1;if((i|0)<=(f|0)){d=c;break l}m:{if(!i){d=0;break m}J[8369]=J[8369]+1;d=ia[J[6782]](i<<2,16)|0;c=J[a+116>>2];f=J[a+108>>2]}n:{o:{if((f|0)>0){e=0;h=0;if(f-1>>>0>=3){l=f&-4;m=0;while(1){j=h<<2;N[j+d>>2]=N[c+j>>2];g=j|4;N[g+d>>2]=N[c+g>>2];g=j|8;N[g+d>>2]=N[c+g>>2];g=j|12;N[g+d>>2]=N[c+g>>2];h=h+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}l=f&3;if(l){while(1){g=h<<2;N[g+d>>2]=N[c+g>>2];h=h+1|0;e=e+1|0;if((l|0)!=(e|0)){continue}break}}if(K[a+120|0]){break o}break n}if(!c|!K[a+120|0]){break n}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}f=J[a+108>>2]}J[a+116>>2]=d;J[a+112>>2]=i;H[a+120|0]=1}N[(f<<2)+d>>2]=N[b+8>>2];b=f+1|0;J[a+108>>2]=b;a=J[a+32>>2];J[a+16>>2]=d;J[a+12>>2]=J[a+12>>2]+1;c=((b|0)/3|0)-1|0}return c}return(c>>>0)/3|0}function AB(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0);g=J[a+28>>2];d=g+4|0;f=J[a+32>>2];e=f+4|0;zg(a,d,e,g+264|0,f+264|0);g=J[b+8>>2];J[g>>2]=1065353216;w=J[b+24>>2];j=w<<2;h=j+4|0;J[h+g>>2]=1065353216;m=w<<3;o=m+8|0;J[o+g>>2]=1065353216;n=N[d+20>>2];t=N[d+24>>2];c=N[a+348>>2];k=N[d+36>>2];l=N[a+352>>2];p=N[d+40>>2];i=N[a+356>>2];q=N[d+8>>2];x=N[d>>2];r=N[d+4>>2];u=N[d+16>>2];v=N[d+32>>2];g=J[b+12>>2];J[g+12>>2]=0;J[g>>2]=0;k=Q(Q(p*i)+Q(Q(v*c)+Q(l*k)));N[g+4>>2]=k;n=Q(Q(t*i)+Q(Q(u*c)+Q(l*n)));N[g+8>>2]=-n;f=g+j|0;J[f+12>>2]=0;l=Q(Q(q*i)+Q(Q(x*c)+Q(r*l)));N[f+8>>2]=l;J[f+4>>2]=0;N[f>>2]=-k;f=g+m|0;J[f+8>>2]=0;J[f+12>>2]=0;N[f+4>>2]=-l;N[f>>2]=n;f=J[b+16>>2];J[f>>2]=-1082130432;J[f+h>>2]=-1082130432;J[f+o>>2]=-1082130432;q=N[e+36>>2];x=N[e+40>>2];c=N[a+412>>2];p=N[e+20>>2];i=N[a+416>>2];r=N[e+24>>2];t=N[a+420>>2];u=N[e+8>>2];v=N[e>>2];z=N[e+4>>2];A=N[e+32>>2];B=N[e+16>>2];f=J[b+20>>2];J[f+12>>2]=0;J[f>>2]=0;p=Q(Q(r*t)+Q(Q(B*c)+Q(i*p)));N[f+8>>2]=p;q=Q(Q(x*t)+Q(Q(A*c)+Q(i*q)));N[f+4>>2]=-q;h=f+j|0;J[h+12>>2]=0;i=Q(Q(u*t)+Q(Q(v*c)+Q(z*i)));N[h+8>>2]=-i;J[h+4>>2]=0;N[h>>2]=q;h=f+m|0;J[h+8>>2]=0;J[h+12>>2]=0;N[h+4>>2]=i;N[h>>2]=-p;C=J[a+592>>2];c=Q(N[(C&2?a+600|0:b+4|0)>>2]*N[b>>2]);h=J[b+40>>2];o=J[b+36>>2];s=J[b+28>>2];a:{if(!(C&1)){N[s>>2]=c*Q(Q(Q(i+N[e+48>>2])-l)-N[d+48>>2]);J[o>>2]=-8388609;J[h>>2]=2139095039;N[j+s>>2]=c*Q(Q(Q(p+N[e+52>>2])-n)-N[d+52>>2]);J[j+o>>2]=-8388609;J[h+j>>2]=2139095039;N[m+s>>2]=c*Q(Q(Q(q+N[e+56>>2])-k)-N[d+56>>2]);J[m+o>>2]=-8388609;J[h+m>>2]=2139095039;break a}y=J[b+32>>2];N[s>>2]=c*Q(Q(Q(i+N[e+48>>2])-l)-N[d+48>>2]);J[o>>2]=-8388609;J[h>>2]=2139095039;N[y>>2]=N[a+596>>2];N[j+s>>2]=c*Q(Q(Q(p+N[e+52>>2])-n)-N[d+52>>2]);J[j+o>>2]=-8388609;J[h+j>>2]=2139095039;N[j+y>>2]=N[a+596>>2];N[m+s>>2]=c*Q(Q(Q(q+N[e+56>>2])-k)-N[d+56>>2]);J[m+o>>2]=-8388609;J[h+m>>2]=2139095039;N[m+y>>2]=N[a+596>>2]}e=P(w,3);b:{if(!K[a+526|0]){break b}c=N[a+456>>2];if(!(!(c>N[a+444>>2])|!(c>N[a+448>>2]))){c=N[a+340>>2];l=N[a+308>>2];i=N[a+324>>2];k=N[d+8>>2];n=N[d>>2];t=N[d+4>>2];p=N[d+24>>2];q=N[d+16>>2];x=N[d+20>>2];e=e<<2;h=e+8|0;r=N[a+336>>2];B=N[d+40>>2];u=N[a+304>>2];D=N[d+32>>2];v=N[a+320>>2];E=N[d+36>>2];z=Q(Q(r*B)+Q(Q(u*D)+Q(v*E)));N[h+g>>2]=z;j=e+4|0;A=Q(Q(r*p)+Q(Q(u*q)+Q(v*x)));N[j+g>>2]=A;r=Q(Q(r*k)+Q(Q(u*n)+Q(t*v)));N[e+g>>2]=r;d=w<<4;k=Q(Q(c*k)+Q(Q(l*n)+Q(t*i)));N[d+g>>2]=k;m=d|4;n=Q(Q(c*p)+Q(Q(l*q)+Q(i*x)));N[m+g>>2]=n;y=d|8;c=Q(Q(c*B)+Q(Q(l*D)+Q(i*E)));N[y+g>>2]=c;N[f+h>>2]=-z;N[f+j>>2]=-A;N[e+f>>2]=-r;N[d+f>>2]=-k;N[f+m>>2]=-n;N[f+y>>2]=-c;l=Q(N[b>>2]*N[a+436>>2]);N[e+s>>2]=l*Q(Q(N[a+468>>2]*z)+Q(Q(N[a+460>>2]*r)+Q(A*N[a+464>>2])));N[d+s>>2]=l*Q(Q(N[a+468>>2]*c)+Q(Q(N[a+460>>2]*k)+Q(n*N[a+464>>2])));J[e+o>>2]=-8388609;h=J[b+40>>2];J[e+h>>2]=2139095039;J[d+o>>2]=-8388609;J[d+h>>2]=2139095039;e=P(w,5);break b}l=N[a+464>>2];i=N[a+468>>2];e=e<<2;c=N[a+436>>2];k=Q(c*Q(c*N[a+460>>2]));N[e+g>>2]=k;d=e+8|0;i=Q(c*Q(c*i));N[d+g>>2]=i;j=e+4|0;c=Q(c*Q(c*l));N[j+g>>2]=c;N[d+f>>2]=-i;N[f+j>>2]=-c;N[e+f>>2]=-k;N[e+s>>2]=Q(N[b>>2]*N[a+432>>2])*N[a+504>>2];if(C&4){N[e+J[b+32>>2]>>2]=N[a+604>>2]}J[e+o>>2]=0;J[e+h>>2]=2139095039;e=w<<2}if(K[a+525|0]){l=N[a+480>>2];i=N[a+484>>2];d=e<<2;c=N[a+436>>2];k=Q(c*Q(c*N[a+476>>2]));N[d+g>>2]=k;j=d+8|0;i=Q(c*Q(c*i));N[j+g>>2]=i;m=g;g=d+4|0;c=Q(c*Q(c*l));N[m+g>>2]=c;N[f+j>>2]=-i;N[f+g>>2]=-c;N[d+f>>2]=-k;N[d+J[b+28>>2]>>2]=Q(N[b>>2]*N[a+432>>2])*N[a+508>>2];if(C&4){N[d+J[b+32>>2]>>2]=N[a+604>>2]}g=(e<<2)+h|0;c:{d:{if(N[a+452>>2]>Q(0)){b=J[b+36>>2]+(e<<2)|0;if(N[a+508>>2]>Q(0)){J[b>>2]=0;break d}J[b>>2]=-8388609;c=Q(0);break c}J[J[b+36>>2]+(e<<2)>>2]=-8388609}c=Q(3.4028234663852886e38)}N[g>>2]=c}}function $C(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0,s=0;c=ga-80|0;ga=c;s=ia[J[J[a>>2]+28>>2]](a)|0;if((s|0)>0){i=N[a+12>>2];j=N[a+8>>2];k=N[a+4>>2];while(1){ia[J[J[a>>2]+16>>2]](a,c+76|0,c+52|0,c- -64|0,c+56|0,c+72|0,c+68|0,c+48|0,c+60|0,r);a:{b:{switch(J[c+64>>2]){case 0:c:{switch(J[c+60>>2]-2|0){case 0:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,J[e>>2])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,J[e+4>>2])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,J[e+8>>2])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,L[e>>1])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,L[e+2>>1])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,L[e+4>>1])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 3:break c;default:break a}}d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,K[e|0])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,K[e+1|0])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,K[e+2|0])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:break b;default:break a}}d:{switch(J[c+60>>2]-2|0){case 0:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,J[e>>2])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,J[e+4>>2])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,J[e+8>>2])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,L[e>>1])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,L[e+2>>1])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,L[e+4>>1])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 3:break d;default:break a}}d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,K[e|0])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,K[e+1|0])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,K[e+2|0])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break}}ia[J[J[a>>2]+24>>2]](a,r);r=r+1|0;if((s|0)!=(r|0)){continue}break}}ga=c+80|0}function Ao(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=Q(g);h=Q(h);i=Q(i);j=j|0;k=Q(k);l=l|0;var m=0;m=ga-2720|0;ga=m;J[m+2716>>2]=a;J[m+2712>>2]=b;J[m+2708>>2]=c;J[m+2704>>2]=d;N[m+2700>>2]=e;N[m+2696>>2]=f;N[m+2692>>2]=g;N[m+2688>>2]=h;N[m+2684>>2]=i;J[m+2680>>2]=j;N[m+2676>>2]=k;H[m+2675|0]=l;b=J[m+2716>>2];a=m+1488|0;c=a+1184|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}a=m+304|0;c=a+1184|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}J[m+300>>2]=m+1488;J[m+296>>2]=m+304;a=J[m+2712>>2];c=m+256|0;d=m+2700|0;Ia(c,J[m+2708>>2],d);va(m+272|0,a,c);a=J[m+2712>>2];c=m+224|0;Ia(c,J[m+2708>>2],d);Ma(m+240|0,a,c);J[(ga-16|0)+12>>2]=m+208;N[m+204>>2]=N[m+2676>>2]*Q(.01745329238474369);J[m+200>>2]=J[m+2708>>2];J[m+196>>2]=J[m+2704>>2];Ub(m+176|0,J[m+200>>2],J[m+196>>2]);H[m+175|0]=0;H[m+174|0]=0;if(N[m+2696>>2]<=Q(-1.5707963705062866)){N[m+2696>>2]=N[m+204>>2]+Q(-1.5707963705062866);H[m+175|0]=1}if(N[m+2692>>2]>=Q(1.5707963705062866)){N[m+2692>>2]=Q(1.5707963705062866)-N[m+204>>2];H[m+174|0]=1}if(N[m+2696>>2]>N[m+2692>>2]){N[m+2696>>2]=N[m+204>>2]+Q(-1.5707963705062866);N[m+2692>>2]=Q(1.5707963705062866)-N[m+204>>2];H[m+174|0]=1;H[m+175|0]=1}e=Q(Q(N[m+2692>>2]-N[m+2696>>2])/N[m+204>>2]);a:{if(Q(R(e))<Q(2147483648)){a=~~e;break a}a=-2147483648}J[m+168>>2]=a+1;if(J[m+168>>2]<2){J[m+168>>2]=2}N[m+164>>2]=Q(N[m+2692>>2]-N[m+2696>>2])/Q(J[m+168>>2]-1|0);H[m+163|0]=0;b:{if(N[m+2688>>2]>N[m+2684>>2]){N[m+2688>>2]=N[m+204>>2]+Q(-3.1415927410125732);N[m+2684>>2]=3.1415927410125732;H[m+163|0]=1;break b}c:{if(Q(N[m+2684>>2]-N[m+2688>>2])>=Q(6.2831854820251465)){H[m+163|0]=1;break c}H[m+163|0]=0}}e=Q(Q(N[m+2684>>2]-N[m+2688>>2])/N[m+204>>2]);d:{if(Q(R(e))<Q(2147483648)){a=~~e;break d}a=-2147483648}J[m+156>>2]=a+1;if(J[m+156>>2]<2){J[m+156>>2]=2}N[m+152>>2]=Q(N[m+2684>>2]-N[m+2688>>2])/Q(J[m+156>>2]-1|0);J[m+148>>2]=0;while(1){if(J[m+148>>2]<J[m+168>>2]){N[m+144>>2]=Q(Q(J[m+148>>2])*N[m+164>>2])+N[m+2696>>2];N[m+140>>2]=N[m+2700>>2]*Sa(N[m+144>>2]);N[m+136>>2]=N[m+2700>>2]*Ta(N[m+144>>2]);J[m+132>>2]=0;while(1){if(J[m+132>>2]<J[m+156>>2]){N[m+128>>2]=Q(Q(J[m+132>>2])*N[m+152>>2])+N[m+2688>>2];N[m+124>>2]=Sa(N[m+128>>2]);N[m+120>>2]=Ta(N[m+128>>2]);a=J[m+2712>>2];N[m+52>>2]=N[m+136>>2]*N[m+120>>2];c=m+56|0;Xb(c,m+52|0,J[m+196>>2]);d=m+72|0;va(d,a,c);N[m+28>>2]=N[m+136>>2]*N[m+124>>2];a=m+32|0;Xb(a,m+28|0,m+176|0);c=m+88|0;va(c,d,a);a=m+8|0;Xb(a,m+140|0,J[m+200>>2]);va(m+104|0,c,a);c=J[m+108>>2];a=J[m+296>>2]+(J[m+132>>2]<<4)|0;J[a>>2]=J[m+104>>2];J[a+4>>2]=c;c=J[m+116>>2];J[a+8>>2]=J[m+112>>2];J[a+12>>2]=c;e:{if(J[m+148>>2]){a=J[m+132>>2]<<4;ia[J[J[b>>2]+8>>2]](b,a+J[m+300>>2]|0,a+J[m+296>>2]|0,J[m+2680>>2]);break e}if(H[m+174|0]&1){ia[J[J[b>>2]+8>>2]](b,m+240|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}}f:{if(J[m+132>>2]){c=J[m+296>>2];a=J[m+132>>2];ia[J[J[b>>2]+8>>2]](b,c+(a-1<<4)|0,c+(a<<4)|0,J[m+2680>>2]);break f}a=J[m+296>>2]+(J[m+132>>2]<<4)|0;c=J[a+4>>2];J[m+208>>2]=J[a>>2];J[m+212>>2]=c;c=J[a+12>>2];J[m+216>>2]=J[a+8>>2];J[m+220>>2]=c}if(!(!(H[m+175|0]&1)|J[m+148>>2]!=(J[m+168>>2]-1|0))){ia[J[J[b>>2]+8>>2]](b,m+272|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}if(H[m+2675|0]&1){g:{if(H[m+163|0]&1){if(J[m+132>>2]==(J[m+156>>2]-1|0)){ia[J[J[b>>2]+8>>2]](b,m+208|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}break g}if(!((J[m+148>>2]!=(J[m+168>>2]-1|0)?J[m+148>>2]:0)|(J[m+132>>2]!=(J[m+156>>2]-1|0)?J[m+132>>2]:0))){ia[J[J[b>>2]+8>>2]](b,J[m+2712>>2],J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}}}J[m+132>>2]=J[m+132>>2]+1;continue}break}J[m+292>>2]=J[m+300>>2];J[m+300>>2]=J[m+296>>2];J[m+296>>2]=J[m+292>>2];J[m+148>>2]=J[m+148>>2]+1;continue}break}ga=m+2720|0}function yb(a,b,c){var d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);k=ga-256|0;ga=k;g=J[b+212>>2];a:{if((g|0)>=0){break a}b:{d=J[b+236>>2];if(!(d&2)){break b}d=d<<30>>31&b;if(K[d+204|0]&2?0:N[d+344>>2]==Q(0)){break b}g=J[a+8>>2];d=k+8|0;qa(d,0,244);d=Sk(a+4|0,d);a=b?J[b+236>>2]<<30>>31&b:0;J[d+64>>2]=0;J[d+68>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+152>>2]=0;J[d+156>>2]=0;J[d+160>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+172>>2]=0;c:{if(a){e=J[a+8>>2];J[d>>2]=J[a+4>>2];J[d+4>>2]=e;e=J[a+16>>2];J[d+8>>2]=J[a+12>>2];J[d+12>>2]=e;e=J[a+32>>2];J[d+24>>2]=J[a+28>>2];J[d+28>>2]=e;e=J[a+24>>2];J[d+16>>2]=J[a+20>>2];J[d+20>>2]=e;e=J[a+48>>2];J[d+40>>2]=J[a+44>>2];J[d+44>>2]=e;e=J[a+40>>2];J[d+32>>2]=J[a+36>>2];J[d+36>>2]=e;e=J[a+64>>2];J[d+56>>2]=J[a+60>>2];J[d+60>>2]=e;e=J[a+56>>2];J[d+48>>2]=J[a+52>>2];J[d+52>>2]=e;h=N[a+352>>2];i=N[a+356>>2];j=N[a+348>>2];f=N[a+344>>2];J[d+240>>2]=a;J[d+140>>2]=0;N[d+136>>2]=f*i;N[d+132>>2]=f*h;N[d+128>>2]=f*j;e=J[a+556>>2];J[d+104>>2]=J[a+552>>2];J[d+108>>2]=e;e=J[a+548>>2];J[d+96>>2]=J[a+544>>2];J[d+100>>2]=e;e=J[a+360>>2];J[d+120>>2]=J[a+356>>2];J[d+124>>2]=e;e=J[a+352>>2];J[d+112>>2]=J[a+348>>2];J[d+116>>2]=e;e=J[a+324>>2];J[d+184>>2]=J[a+320>>2];J[d+188>>2]=e;e=J[a+316>>2];J[d+176>>2]=J[a+312>>2];J[d+180>>2]=e;e=J[a+340>>2];J[d+200>>2]=J[a+336>>2];J[d+204>>2]=e;e=J[a+332>>2];J[d+192>>2]=J[a+328>>2];J[d+196>>2]=e;h=N[a+416>>2];i=N[a+420>>2];j=N[a+412>>2];f=N[a+344>>2];J[d+220>>2]=0;N[d+216>>2]=Q(f*i)*c;N[d+212>>2]=Q(f*h)*c;N[d+208>>2]=Q(f*j)*c;j=N[a+280>>2];l=N[a+296>>2];m=N[a+268>>2];n=N[a+284>>2];o=N[a+300>>2];p=N[a+264>>2];f=N[a+436>>2];h=N[a+428>>2];i=N[a+432>>2];N[d+232>>2]=Q(Q(N[a+304>>2]*f)+Q(Q(N[a+272>>2]*h)+Q(i*N[a+288>>2])))*c;N[d+228>>2]=Q(Q(o*f)+Q(Q(m*h)+Q(i*n)))*c;N[d+224>>2]=Q(Q(l*f)+Q(Q(p*h)+Q(j*i)))*c;break c}J[d+4>>2]=0;J[d+8>>2]=0;J[d>>2]=1065353216;J[d+240>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;J[d+112>>2]=1065353216;J[d+116>>2]=1065353216;J[d+96>>2]=1065353216;J[d+100>>2]=1065353216;J[d+176>>2]=0;J[d+180>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+20>>2]=1065353216;J[d+32>>2]=0;J[d+36>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+40>>2]=1065353216;J[d+52>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+120>>2]=1065353216;J[d+124>>2]=0;J[d+104>>2]=1065353216;J[d+108>>2]=0;J[d+232>>2]=0;J[d+224>>2]=0;J[d+228>>2]=0;J[d+216>>2]=0;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+192>>2]=0;J[d+196>>2]=0;J[d+184>>2]=0;J[d+188>>2]=0}J[d+236>>2]=0;J[b+212>>2]=g;break a}g=J[a+188>>2];if((g|0)>=0){break a}J[a+188>>2]=J[a+8>>2];b=k+8|0;qa(b,0,244);b=Sk(a+4|0,b);J[b+88>>2]=0;J[b+92>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+64>>2]=0;J[b+68>>2]=0;J[b+144>>2]=0;J[b+148>>2]=0;J[b+152>>2]=0;J[b+156>>2]=0;J[b+160>>2]=0;J[b+164>>2]=0;J[b+168>>2]=0;J[b+172>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[b>>2]=1065353216;J[b+12>>2]=0;J[b+16>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+20>>2]=1065353216;J[b+32>>2]=0;J[b+36>>2]=0;J[b+44>>2]=0;J[b+48>>2]=0;J[b+40>>2]=1065353216;J[b+52>>2]=0;J[b+56>>2]=0;J[b+60>>2]=0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+240>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;J[b+120>>2]=1065353216;J[b+124>>2]=0;J[b+112>>2]=1065353216;J[b+116>>2]=1065353216;J[b+104>>2]=1065353216;J[b+108>>2]=0;J[b+96>>2]=1065353216;J[b+100>>2]=1065353216;J[b+232>>2]=0;J[b+236>>2]=0;J[b+224>>2]=0;J[b+228>>2]=0;J[b+216>>2]=0;J[b+220>>2]=0;J[b+208>>2]=0;J[b+212>>2]=0;J[b+200>>2]=0;J[b+204>>2]=0;J[b+192>>2]=0;J[b+196>>2]=0;J[b+184>>2]=0;J[b+188>>2]=0;J[b+176>>2]=0;J[b+180>>2]=0;g=J[a+188>>2]}ga=k+256|0;return g}function gh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=ga-96|0;ga=d;l=J[a+8>>2];if((l|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];if(J[e+236>>2]==1){ia[J[J[e>>2]+24>>2]](e,b);l=J[a+8>>2]}c=c+1|0;if((l|0)>(c|0)){continue}break}}H[d+52|0]=1;J[d+48>>2]=0;H[d+72|0]=1;J[d+40>>2]=0;J[d+44>>2]=0;J[d+68>>2]=0;H[d+92|0]=1;J[d+60>>2]=0;J[d+64>>2]=0;J[d+88>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;a:{if((l|0)<=0){break a}c=0;while(1){e=J[J[J[a+16>>2]+(s<<2)>>2]+192>>2];J[d+12>>2]=e;o=c;c=e+(e<<15^-1)|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;c=f-1&(c>>16^c);b:{c:{if(o>>>0<=c>>>0){break c}c=J[J[d+28>>2]+(c<<2)>>2];if((c|0)==-1){break c}f=J[d+48>>2];h=J[d+88>>2];while(1){if((e|0)!=J[h+(c<<3)>>2]){c=J[f+(c<<2)>>2];if((c|0)!=-1){continue}break c}break}if(J[d+68>>2]){break b}}J[d>>2]=e;j=0;d:{e:{e=d+16|0;l=J[e+48>>2];c=J[d>>2];f=(c<<15^-1)+c|0;f=P(f>>10^f,9);f=f>>6^f;f=(f<<11^-1)+f|0;r=l-1&(f>>16^f);f:{if(r>>>0>=M[e+4>>2]){break f}f=J[J[e+12>>2]+(r<<2)>>2];if((f|0)==-1){break f}h=J[e+32>>2];n=J[e+72>>2];while(1){if((c|0)==J[n+(f<<3)>>2]){break e}f=J[h+(f<<2)>>2];if((f|0)!=-1){continue}break}}o=J[e+44>>2];c=o;g:{if((l|0)!=(c|0)){break g}c=l;i=c?c<<1:1;if((c|0)>=(i|0)){break g}h:{if(!i){h=0;c=l;break h}J[8369]=J[8369]+1;h=ia[J[6782]](i<<2,16)|0;c=J[e+44>>2]}i:{if((c|0)<=0){break i}n=0;f=0;if(c-1>>>0>=3){p=c&-4;while(1){k=f<<2;J[k+h>>2]=J[k+J[e+52>>2]>>2];g=k|4;J[g+h>>2]=J[g+J[e+52>>2]>>2];g=k|8;J[g+h>>2]=J[g+J[e+52>>2]>>2];k=k|12;J[k+h>>2]=J[k+J[e+52>>2]>>2];f=f+4|0;j=j+4|0;if((p|0)!=(j|0)){continue}break}}j=c&3;if(!j){break i}while(1){k=f<<2;J[k+h>>2]=J[k+J[e+52>>2]>>2];f=f+1|0;n=n+1|0;if((j|0)!=(n|0)){continue}break}}f=J[e+52>>2];if(!(!f|!K[e+56|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}c=J[e+44>>2]}J[e+52>>2]=h;H[e+56|0]=1;J[e+48>>2]=i}J[J[e+52>>2]+(c<<2)>>2]=J[d+12>>2];J[e+44>>2]=c+1;c=J[e- -64>>2];j:{if((c|0)!=J[e+68>>2]){break j}k=c?c<<1:1;if((k|0)<=(c|0)){break j}k:{if(!k){h=0;break k}J[8369]=J[8369]+1;h=ia[J[6782]](k<<3,16)|0;c=J[e+64>>2]}l:{if((c|0)<=0){break l}n=0;f=0;if(c-1>>>0>=3){p=c&-4;j=0;while(1){i=f<<3;g=i+h|0;m=i+J[e+72>>2]|0;q=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=q;g=i|8;m=g+h|0;g=g+J[e+72>>2]|0;q=J[g+4>>2];J[m>>2]=J[g>>2];J[m+4>>2]=q;g=i|16;m=g+h|0;g=g+J[e+72>>2]|0;q=J[g+4>>2];J[m>>2]=J[g>>2];J[m+4>>2]=q;i=i|24;g=i+h|0;i=i+J[e+72>>2]|0;m=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=m;f=f+4|0;j=j+4|0;if((p|0)!=(j|0)){continue}break}}c=c&3;if(!c){break l}while(1){j=f<<3;i=j+h|0;j=j+J[e+72>>2]|0;p=J[j+4>>2];J[i>>2]=J[j>>2];J[i+4>>2]=p;f=f+1|0;n=n+1|0;if((c|0)!=(n|0)){continue}break}}c=J[e+72>>2];if(!(c?!c|!K[e+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[e+72>>2]=h;H[e+76|0]=1;J[e+68>>2]=k;c=J[e+64>>2]}f=J[d+4>>2];c=J[e+72>>2]+(c<<3)|0;J[c>>2]=J[d>>2];J[c+4>>2]=f;J[e+64>>2]=J[e+64>>2]+1;if((l|0)<J[e+48>>2]){Sm(e);c=J[d>>2];c=(c<<15^-1)+c|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;r=J[e+48>>2]-1&(c>>16^c)}c=J[e+12>>2]+(r<<2)|0;J[J[e+32>>2]+(o<<2)>>2]=J[c>>2];J[c>>2]=o;break d}J[J[e+52>>2]+(f<<2)>>2]=J[d+12>>2]}c=J[d+12>>2];ia[J[J[c>>2]+60>>2]](c,b);l=J[a+8>>2]}s=s+1|0;if((s|0)<(l|0)){c=J[d+20>>2];f=J[d+64>>2];continue}break}a=J[d+88>>2];if(!a|!K[d+92|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}J[d+88>>2]=0;H[d+92|0]=1;J[d+80>>2]=0;J[d+84>>2]=0;a=J[d+68>>2];if(!(a?!a|!K[d+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+68>>2]=0;H[d+72|0]=1;J[d+60>>2]=0;J[d+64>>2]=0;a=J[d+48>>2];if(!(a?!a|!K[d+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+48>>2]=0;H[d+52|0]=1;J[d+40>>2]=0;J[d+44>>2]=0;a=J[d+28>>2];if(!(a?!a|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+96|0}function Mj(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,A=0;o=ga-16|0;ga=o;s=(D(a),x(2));c=s&2147483647;a:{if(c>>>0<=1305022426){i=+a;d=i*.6366197723675814+6755399441055744+-6755399441055744;q=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;O[b>>3]=q;c=q<-.7853981852531433;if(R(d)<2147483648){e=~~d}else{e=-2147483648}if(c){d=d+-1;O[b>>3]=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;e=e-1|0;break a}if(!(q>.7853981852531433)){break a}d=d+1;O[b>>3]=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;e=e+1|0;break a}if(c>>>0>=2139095040){O[b>>3]=Q(a-a);break a}e=c;c=(c>>>23|0)-150|0;O[o+8>>3]=(z(2,e-(c<<23)|0),E());t=o+8|0;g=ga-560|0;ga=g;e=(c-3|0)/24|0;r=(e|0)>0?e:0;j=c+P(r,-24)|0;l=J[5824];if((l|0)>=0){e=l+1|0;c=r;while(1){O[(g+320|0)+(f<<3)>>3]=(c|0)<0?0:+J[(c<<2)+23312>>2];c=c+1|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}k=j-24|0;e=0;f=(l|0)>0?l:0;while(1){c=0;d=0;while(1){d=O[(c<<3)+t>>3]*O[(g+320|0)+(e-c<<3)>>3]+d;c=c+1|0;if((c|0)!=1){continue}break}O[(e<<3)+g>>3]=d;c=(e|0)==(f|0);e=e+1|0;if(!c){continue}break}y=47-j|0;u=48-j|0;A=j-25|0;e=l;b:{while(1){d=O[(e<<3)+g>>3];c=0;f=e;n=(e|0)<=0;if(!n){while(1){m=(g+480|0)+(c<<2)|0;i=d*5.960464477539063e-8;c:{if(R(i)<2147483648){h=~~i;break c}h=-2147483648}i=+(h|0);d=i*-16777216+d;d:{if(R(d)<2147483648){h=~~d;break d}h=-2147483648}J[m>>2]=h;f=f-1|0;d=O[(f<<3)+g>>3]+i;c=c+1|0;if((e|0)!=(c|0)){continue}break}}d=le(d,k);d=d+V(d*.125)*-8;e:{if(R(d)<2147483648){m=~~d;break e}m=-2147483648}d=d-+(m|0);f:{g:{h:{v=(k|0)<=0;i:{if(!v){f=(e<<2)+g|0;h=J[f+476>>2];c=h>>u;p=f;f=h-(c<<u)|0;J[p+476>>2]=f;m=c+m|0;h=f>>y;break i}if(k){break h}h=J[((e<<2)+g|0)+476>>2]>>23}if((h|0)<=0){break f}break g}h=2;if(d>=.5){break g}h=0;break f}c=0;f=0;if(!n){while(1){p=(g+480|0)+(c<<2)|0;n=J[p>>2];w=16777215;j:{k:{if(f){break k}w=16777216;if(n){break k}f=0;break j}J[p>>2]=w-n;f=1}c=c+1|0;if((e|0)!=(c|0)){continue}break}}l:{if(v){break l}c=8388607;m:{switch(A|0){case 1:c=4194303;break;case 0:break m;default:break l}}n=(e<<2)+g|0;J[n+476>>2]=J[n+476>>2]&c}m=m+1|0;if((h|0)!=2){break f}d=1-d;h=2;if(!f){break f}d=d-le(1,k)}if(d==0){f=0;n:{c=e;if((l|0)>=(c|0)){break n}while(1){c=c-1|0;f=J[(g+480|0)+(c<<2)>>2]|f;if((c|0)>(l|0)){continue}break}if(!f){break n}j=k;while(1){j=j-24|0;e=e-1|0;if(!J[(g+480|0)+(e<<2)>>2]){continue}break}break b}c=1;while(1){f=c;c=c+1|0;if(!J[(g+480|0)+(l-f<<2)>>2]){continue}break}f=e+f|0;while(1){e=e+1|0;O[(g+320|0)+(e<<3)>>3]=J[(e+r<<2)+23312>>2];c=0;d=0;while(1){d=O[(c<<3)+t>>3]*O[(g+320|0)+(e-c<<3)>>3]+d;c=c+1|0;if((c|0)!=1){continue}break}O[(e<<3)+g>>3]=d;if((e|0)<(f|0)){continue}break}e=f;continue}break}d=le(d,24-j|0);o:{if(d>=16777216){k=(g+480|0)+(e<<2)|0;i=d*5.960464477539063e-8;p:{if(R(i)<2147483648){c=~~i;break p}c=-2147483648}d=+(c|0)*-16777216+d;q:{if(R(d)<2147483648){f=~~d;break q}f=-2147483648}J[k>>2]=f;e=e+1|0;break o}if(R(d)<2147483648){c=~~d}else{c=-2147483648}j=k}J[(g+480|0)+(e<<2)>>2]=c}d=le(1,j);r:{if((e|0)<0){break r}c=e;while(1){f=c;O[(c<<3)+g>>3]=d*+J[(g+480|0)+(c<<2)>>2];c=c-1|0;d=d*5.960464477539063e-8;if(f){continue}break}if((e|0)<0){break r}c=e;while(1){f=c;j=e-c|0;d=0;c=0;while(1){s:{d=O[(c<<3)+26080>>3]*O[(c+f<<3)+g>>3]+d;if((c|0)>=(l|0)){break s}k=c>>>0<j>>>0;c=c+1|0;if(k){continue}}break}O[(g+160|0)+(j<<3)>>3]=d;c=f-1|0;if((f|0)>0){continue}break}}d=0;if((e|0)>=0){while(1){c=e;e=c-1|0;d=d+O[(g+160|0)+(c<<3)>>3];if(c){continue}break}}O[o>>3]=h?-d:d;ga=g+560|0;e=m&7;d=O[o>>3];if((s|0)<0){O[b>>3]=-d;e=0-e|0;break a}O[b>>3]=d}ga=o+16|0;return e}function Wz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:{b:{c:{if((f|0)>=0){i=J[a+16>>2];if((i|0)>0){break c}break b}f=J[a+8>>2];Q(ia[J[J[f>>2]+12>>2]](f,b,c,d,e,J[a+12>>2],J[a+16>>2],J[a+4>>2],J[a+20>>2],J[a+24>>2]));return}m=J[a+12>>2];while(1){q=m+(g<<2)|0;j=J[q>>2];h=J[J[j+28>>2]+208>>2];if((h|0)<0){h=J[J[j+32>>2]+208>>2]}if((f|0)==(h|0)){break b}g=g+1|0;if((i|0)!=(g|0)){continue}break}q=0;break a}if((g|0)>=(i|0)){break a}h=i-g|0;k=h&1;j=J[a+12>>2];if((i|0)!=(g+1|0)){i=h&-2;m=0;while(1){l=j+(g<<2)|0;n=J[l>>2];h=J[J[n+28>>2]+208>>2];if((h|0)<0){h=J[J[n+32>>2]+208>>2]}g=g+2|0;o=((f|0)==(h|0))+o|0;l=J[l+4>>2];h=J[J[l+28>>2]+208>>2];if((h|0)<0){h=J[J[l+32>>2]+208>>2]}o=((f|0)==(h|0))+o|0;m=m+2|0;if((i|0)!=(m|0)){continue}break}}if(!k){break a}h=J[j+(g<<2)>>2];g=J[J[h+28>>2]+208>>2];if((g|0)<0){g=J[J[h+32>>2]+208>>2]}o=((f|0)==(g|0))+o|0}f=J[a+4>>2];if(J[f+72>>2]>=2){if((c|0)>0){g=J[a+36>>2];h=J[a+32>>2];j=0;while(1){n=(j<<2)+b|0;d:{if((g|0)!=(h|0)){break d}i=g?g<<1:1;if((i|0)<=(g|0)){h=g;break d}e:{if(!i){f=0;break e}J[8369]=J[8369]+1;f=ia[J[6782]](i<<2,16)|0;g=J[a+32>>2]}h=g;f:{if((g|0)<=0){break f}m=0;g=0;if(h-1>>>0>=3){r=h&-4;k=0;while(1){l=g<<2;J[l+f>>2]=J[l+J[a+40>>2]>>2];p=l|4;J[p+f>>2]=J[p+J[a+40>>2]>>2];p=l|8;J[p+f>>2]=J[p+J[a+40>>2]>>2];l=l|12;J[l+f>>2]=J[l+J[a+40>>2]>>2];g=g+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}k=h&3;if(!k){break f}while(1){l=g<<2;J[l+f>>2]=J[l+J[a+40>>2]>>2];g=g+1|0;m=m+1|0;if((k|0)!=(m|0)){continue}break}}g=J[a+40>>2];if(!(!g|!K[a+44|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}h=J[a+32>>2]}J[a+40>>2]=f;H[a+44|0]=1;J[a+36>>2]=i;g=i}J[J[a+40>>2]+(h<<2)>>2]=J[n>>2];h=h+1|0;J[a+32>>2]=h;j=j+1|0;if((j|0)!=(c|0)){continue}break}}if((e|0)>0){g=J[a+56>>2];h=J[a+52>>2];j=0;while(1){i=(j<<2)+d|0;g:{if((g|0)!=(h|0)){break g}b=g?g<<1:1;if((b|0)<=(g|0)){h=g;break g}h:{if(!b){f=0;break h}J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0;g=J[a+52>>2]}h=g;i:{if((g|0)<=0){break i}m=0;g=0;if(h-1>>>0>=3){l=h&-4;k=0;while(1){c=g<<2;J[c+f>>2]=J[c+J[a+60>>2]>>2];n=c|4;J[n+f>>2]=J[n+J[a+60>>2]>>2];n=c|8;J[n+f>>2]=J[n+J[a+60>>2]>>2];c=c|12;J[c+f>>2]=J[c+J[a+60>>2]>>2];g=g+4|0;k=k+4|0;if((l|0)!=(k|0)){continue}break}}c=h&3;if(!c){break i}while(1){k=g<<2;J[k+f>>2]=J[k+J[a+60>>2]>>2];g=g+1|0;m=m+1|0;if((c|0)!=(m|0)){continue}break}}c=J[a+60>>2];if(!(!c|!K[a+64|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}h=J[a+52>>2]}J[a+60>>2]=f;H[a+64|0]=1;J[a+56>>2]=b;g=b}J[J[a+60>>2]+(h<<2)>>2]=J[i>>2];h=h+1|0;J[a+52>>2]=h;j=j+1|0;if((j|0)!=(e|0)){continue}break}}j:{if(!o){h=J[a+72>>2];break j}g=J[a+76>>2];h=J[a+72>>2];j=0;while(1){d=(j<<2)+q|0;k:{if((g|0)!=(h|0)){break k}b=g?g<<1:1;if((b|0)<=(g|0)){h=g;break k}l:{if(!b){f=0;break l}J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0;g=J[a+72>>2]}h=g;m:{if((g|0)<=0){break m}m=0;g=0;if(h-1>>>0>=3){e=h&-4;k=0;while(1){c=g<<2;J[c+f>>2]=J[c+J[a+80>>2]>>2];i=c|4;J[i+f>>2]=J[i+J[a+80>>2]>>2];i=c|8;J[i+f>>2]=J[i+J[a+80>>2]>>2];c=c|12;J[c+f>>2]=J[c+J[a+80>>2]>>2];g=g+4|0;k=k+4|0;if((e|0)!=(k|0)){continue}break}}c=h&3;if(!c){break m}while(1){e=g<<2;J[e+f>>2]=J[e+J[a+80>>2]>>2];g=g+1|0;m=m+1|0;if((c|0)!=(m|0)){continue}break}}c=J[a+80>>2];if(!(!c|!K[a+84|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}h=J[a+72>>2]}J[a+80>>2]=f;H[a+84|0]=1;J[a+76>>2]=b;g=b}J[J[a+80>>2]+(h<<2)>>2]=J[d>>2];h=h+1|0;J[a+72>>2]=h;j=j+1|0;if((o|0)!=(j|0)){continue}break}}if(J[J[a+4>>2]+72>>2]<(J[a+52>>2]+h|0)){Dk(a)}return}g=J[a+8>>2];Q(ia[J[J[g>>2]+12>>2]](g,b,c,d,e,q,o,f,J[a+20>>2],J[a+24>>2]))}function Bc(a,b,c,d,e,f,g,h,i,j,k){var l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=0,I=0,L=0,M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Y=0,Z=Q(0),_=Q(0);l=J[a+68>>2];m=l;a:{if((l|0)!=J[a+72>>2]){break a}m=l;G=l?l<<1:1;if((l|0)>=(G|0)){break a}if(G){J[8369]=J[8369]+1;I=ia[J[6782]](P(G,152),16)|0;m=J[a+68>>2]}else{m=l}L=m;b:{if((L|0)<=0){break b}m=0;if((L|0)!=1){Y=L&-2;while(1){B=P(m,152);sa(B+I|0,B+J[a+76>>2]|0,152);B=P(m|1,152);sa(B+I|0,B+J[a+76>>2]|0,152);m=m+2|0;U=U+2|0;if((U|0)!=(Y|0)){continue}break}}if(!(L&1)){break b}m=P(m,152);sa(m+I|0,m+J[a+76>>2]|0,152)}m=J[a+76>>2];if(!(m?!m|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](m)}J[a+76>>2]=I;H[a+80|0]=1;J[a+72>>2]=G;m=J[a+68>>2]}J[a+68>>2]=m+1;l=J[a+76>>2]+P(l,152)|0;J[l+140>>2]=e;m=J[a+16>>2];a=J[(m+P(d,244)|0)+240>>2];e=J[(m+P(c,244)|0)+240>>2];J[l+148>>2]=d;J[l+144>>2]=c;M=N[f+84>>2];J[l+132>>2]=0;N[l+104>>2]=M;J[l+96>>2]=0;J[l+100>>2]=0;c:{if(e){f=J[b+4>>2];J[l+16>>2]=J[b>>2];J[l+20>>2]=f;f=J[b+12>>2];J[l+24>>2]=J[b+8>>2];J[l+28>>2]=f;p=N[g+8>>2];n=N[g>>2];o=N[g+4>>2];J[l+12>>2]=0;O=N[l+20>>2];R=N[l+16>>2];C=Q(Q(n*O)-Q(o*R));N[l+8>>2]=C;S=N[l+24>>2];D=Q(Q(p*R)-Q(n*S));N[l+4>>2]=D;E=Q(Q(o*S)-Q(O*p));N[l>>2]=E;p=N[e+552>>2];n=N[e+304>>2];o=N[e+296>>2];v=N[e+300>>2];q=N[e+548>>2];z=N[e+288>>2];r=N[e+280>>2];u=N[e+284>>2];s=N[e+272>>2];w=N[e+268>>2];A=N[e+544>>2];T=N[e+264>>2];J[l+76>>2]=0;s=Q(A*Q(Q(s*C)+Q(Q(T*E)+Q(D*w))));N[l+64>>2]=s;q=Q(q*Q(Q(z*C)+Q(Q(r*E)+Q(D*u))));N[l+68>>2]=q;v=Q(p*Q(Q(n*C)+Q(Q(o*E)+Q(D*v))));N[l+72>>2]=v;break c}J[l+64>>2]=0;J[l+68>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[l+72>>2]=0;J[l+76>>2]=0;J[l+8>>2]=0;J[l+12>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;J[l+24>>2]=0;J[l+28>>2]=0}d:{if(a){p=N[b>>2];n=N[b+4>>2];o=N[b+8>>2];J[l+60>>2]=0;V=Q(-o);N[l+56>>2]=V;W=Q(-n);N[l+52>>2]=W;X=Q(-p);N[l+48>>2]=X;t=N[h+8>>2];x=N[h+4>>2];y=N[h>>2];J[l+44>>2]=0;F=Q(Q(p*x)-Q(y*n));N[l+40>>2]=F;y=Q(Q(o*y)-Q(t*p));N[l+36>>2]=y;x=Q(Q(n*t)-Q(x*o));N[l+32>>2]=x;p=N[a+272>>2];o=N[a+268>>2];n=N[a+548>>2];z=N[a+288>>2];r=N[a+280>>2];u=N[a+284>>2];t=N[a+552>>2];w=N[a+304>>2];A=N[a+296>>2];T=N[a+300>>2];Z=N[a+544>>2];_=N[a+264>>2];J[l+92>>2]=0;t=Q(t*Q(Q(w*F)+Q(Q(A*x)+Q(y*T))));N[l+88>>2]=t;n=Q(n*Q(Q(z*F)+Q(Q(r*x)+Q(y*u))));N[l+84>>2]=n;o=Q(Z*Q(Q(p*F)+Q(Q(_*x)+Q(y*o))));N[l+80>>2]=o;break d}J[l+80>>2]=0;J[l+84>>2]=0;J[l+32>>2]=0;J[l+36>>2]=0;J[l+88>>2]=0;J[l+92>>2]=0;J[l+40>>2]=0;J[l+44>>2]=0;J[l+48>>2]=0;J[l+52>>2]=0;J[l+56>>2]=0;J[l+60>>2]=0;n=Q(0);o=Q(0)}z=Q(0);p=i;if(e){i=N[g+4>>2];r=N[g>>2];w=Q(N[b+8>>2]*Q(Q(s*i)-Q(r*q)));u=q;q=N[g+8>>2];i=Q(N[e+344>>2]+Q(w+Q(Q(N[b>>2]*Q(Q(u*q)-Q(i*v)))+Q(Q(Q(v*r)-Q(q*s))*N[b+4>>2]))))}else{i=Q(0)}if(a){s=N[h>>2];q=N[h+4>>2];r=Q(N[b+8>>2]*Q(Q(n*s)-Q(o*q)));u=n;n=N[h+8>>2];n=Q(N[a+344>>2]+Q(r+Q(Q(N[b>>2]*Q(Q(t*q)-Q(u*n)))+Q(Q(Q(o*n)-Q(t*s))*N[b+4>>2]))))}else{n=Q(0)}A=Q(p/Q(i+n));N[l+108>>2]=A;i=Q(0);s=Q(0);q=Q(0);v=Q(0);t=Q(0);n=Q(0);if(e){b=m+P(c,244)|0;q=Q(N[b+176>>2]+N[b+208>>2]);n=N[b+192>>2];v=N[b+200>>2];s=Q(N[b+180>>2]+N[b+212>>2]);t=N[b+196>>2];i=Q(N[b+184>>2]+N[b+216>>2])}o=Q(0);p=Q(0);r=Q(0);u=Q(0);w=Q(0);if(a){a=m+P(d,244)|0;z=Q(N[a+176>>2]+N[a+208>>2]);o=Q(N[a+180>>2]+N[a+212>>2]);r=N[a+200>>2];u=N[a+196>>2];w=N[a+192>>2];p=Q(N[a+184>>2]+N[a+216>>2])}N[l+124>>2]=M;N[l+116>>2]=k;N[l+120>>2]=-M;N[l+112>>2]=A*Q(j-Q(Q(Q(Q(S*i)+Q(Q(R*q)+Q(s*O)))+Q(Q(C*v)+Q(Q(E*n)+Q(t*D))))+Q(Q(Q(V*p)+Q(Q(X*z)+Q(o*W)))+Q(Q(F*r)+Q(Q(x*w)+Q(u*y))))))}function iI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0);h=ga-32|0;ga=h;e=a+4|0;Hc(e,((P(J[a+152>>2],J[a+16>>2])|0)/100|0)+1|0);if(J[a+164>>2]){c=((P(J[a+148>>2],J[a+76>>2])|0)/100|0)+1|0;Hc(a- -64|0,c);c=J[a+164>>2]-c|0;J[a+164>>2]=(c|0)>0?c:0}c=(J[a+144>>2]+1|0)%2|0;J[a+144>>2]=c;c=J[((c<<2)+a|0)+124>>2];if(c){g=a- -64|0;while(1){d=J[c+52>>2];f=d?d+56|0:((J[c+60>>2]<<2)+a|0)+124|0;d=J[c+56>>2];J[f>>2]=d;f=J[c+56>>2];if(f){J[f+52>>2]=J[c+52>>2]}J[c+52>>2]=0;J[c+56>>2]=J[a+132>>2];f=J[a+132>>2];if(f){J[f+52>>2]=c}J[a+132>>2]=c;Fc(e,J[c+48>>2]);f=J[c+28>>2];J[h+8>>2]=J[c+24>>2];J[h+12>>2]=f;f=J[c+20>>2];J[h>>2]=J[c+16>>2];J[h+4>>2]=f;f=J[c+44>>2];J[h+24>>2]=J[c+40>>2];J[h+28>>2]=f;f=J[c+36>>2];J[h+16>>2]=J[c+32>>2];J[h+20>>2]=f;f=Db(g,h,c);J[c+60>>2]=2;J[c+48>>2]=f;c=d;if(c){continue}break}H[a+194|0]=1;J[a+164>>2]=J[a+76>>2]}J[h>>2]=5764;J[h+4>>2]=a;a:{if(!K[a+193|0]){break a}cf(e,J[a+4>>2],J[a- -64>>2],h);if(!K[a+193|0]){break a}c=J[e>>2];cf(e,c,c,h)}b:{if(!K[a+194|0]){break b}c=J[a+136>>2];f=ia[J[J[c>>2]+28>>2]](c)|0;e=J[f+4>>2];if((e|0)<=0){break b}c:{c=J[a+160>>2];d=(P(J[a+156>>2],e)|0)/100|0;c=(c|0)>(d|0)?c:d;g=(c|0)>(e|0)?e:c;if((g|0)>0){c=0;while(1){e=J[f+12>>2]+((J[a+184>>2]+c|0)%(e|0)<<4)|0;i=J[e>>2];d=J[i+48>>2];j=J[e+4>>2];e=J[j+48>>2];d:{e:{if(!(N[d>>2]<=N[e+16>>2])|!(N[d+16>>2]>=N[e>>2])|(!(N[d+4>>2]<=N[e+20>>2])|!(N[d+20>>2]>=N[e+4>>2]))){break e}if(!(N[d+8>>2]<=N[e+24>>2])){break e}if(N[d+24>>2]>=N[e+8>>2]){break d}}d=J[a+136>>2];ia[J[J[d>>2]+12>>2]](d,i,j,b)|0;c=c-1|0;g=g-1|0}e=J[f+4>>2];c=c+1|0;if((g|0)>(c|0)){continue}break}if((e|0)<=0){break c}}J[a+184>>2]=(J[a+184>>2]+g|0)%(e|0);break b}J[a+184>>2]=0}H[a+194|0]=0;J[a+160>>2]=1;J[a+180>>2]=J[a+180>>2]+1;c=J[a+172>>2];d=J[a+168>>2];if(d){m=Q(Q(c>>>0)/Q(d>>>0))}else{m=Q(0)}N[a+176>>2]=m;J[a+172>>2]=c>>>1;J[a+168>>2]=d>>>1;ga=h+32|0;d=0;c=0;j=0;l=ga-16|0;ga=l;e=a;a=J[a+136>>2];if(ia[J[J[a>>2]+56>>2]](a)|0){a=J[e+136>>2];g=ia[J[J[a>>2]+28>>2]](a)|0;a=J[g+4>>2];if((a|0)>=2){lc(g,l+8|0,0,a-1|0);a=J[g+4>>2]}if((a|0)>0){while(1){i=J[g+12>>2]+(j<<4)|0;h=J[i+4>>2];f=d;d=J[i>>2];f:{g:{if((f|0)==(d|0)&(c|0)==(h|0)){break g}c=J[d+48>>2];f=J[h+48>>2];if(!(N[c>>2]<=N[f+16>>2])|!(N[c+16>>2]>=N[f>>2])|(!(N[c+4>>2]<=N[f+20>>2])|!(N[c+20>>2]>=N[f+4>>2]))){break g}if(!(N[c+8>>2]<=N[f+24>>2])){break g}if(N[c+24>>2]>=N[f+8>>2]){break f}}a=J[e+136>>2];ia[J[J[a>>2]+32>>2]](a,i,b);J[i>>2]=0;J[i+4>>2]=0;k=k+1|0;a=J[g+4>>2]}c=h;j=j+1|0;if((j|0)<(a|0)){continue}break}if((a|0)>=2){lc(g,l,0,a-1|0);a=J[g+4>>2]}b=a-k|0;h:{if((k|0)>=0){break h}if((b|0)>J[g+8>>2]){d=0;i:{if((a|0)==(k|0)){break i}J[8369]=J[8369]+1;d=ia[J[6782]](b<<4,16)|0;f=J[g+4>>2];if((f|0)<=0){break i}e=0;while(1){h=e<<4;c=h+d|0;h=h+J[g+12>>2]|0;J[c>>2]=J[h>>2];J[c+4>>2]=J[h+4>>2];J[c+8>>2]=J[h+8>>2];J[c+12>>2]=J[h+12>>2];e=e+1|0;if((f|0)!=(e|0)){continue}break}}c=J[g+12>>2];if(!(c?!c|!K[g+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[g+12>>2]=d;H[g+16|0]=1;J[g+8>>2]=b}e=0;d=0-k&3;if(d){while(1){c=J[g+12>>2]+(a<<4)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a=a+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(k>>>0>4294967292){break h}while(1){c=a<<4;d=c+J[g+12>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;d=c+J[g+12>>2]|0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;d=c+J[g+12>>2]|0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;c=c+J[g+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;a=a+4|0;if((b|0)!=(a|0)){continue}break}}a=b}J[g+4>>2]=a}ga=l+16|0}function fz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=Q(0),k=Q(0),l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0);d=ga-448|0;ga=d;c=J[c+36>>2];e=J[b+36>>2];b=J[a+24>>2];a:{if(K[J[b+1140>>2]+(J[e+380>>2]+P(J[c+380>>2],J[b+1112>>2])|0)|0]?(b|0)!=J[a+28>>2]|!J[b+1132>>2]:1){b=d+392|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[d+444>>2]=e;J[d+392>>2]=21564;J[d+436>>2]=0;b=d+336|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[d+388>>2]=c;J[d+336>>2]=21564;J[d+380>>2]=0;b=H[29512]&1;b:{c:{d:{if(!b){if(!(H[29564]&1)){break d}break c}if(b){break b}if(H[29564]&1){break c}}J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}j=N[c+232>>2];k=N[e+232>>2];p=N[c+236>>2];q=N[e+236>>2];r=N[c+228>>2];s=N[e+228>>2];J[d+76>>2]=0;N[d+64>>2]=s-r;N[d+72>>2]=q-p;N[d+68>>2]=k-j;e:{if(!vl(d+392|0,d+336|0,29448,d- -64|0,d+280|0)){break e}J[d+84>>2]=0;J[d+88>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+24>>2]=0;J[d+8>>2]=0;J[d+52>>2]=0;J[d+56>>2]=0;J[d+48>>2]=e;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=c;J[d+68>>2]=0;J[d+72>>2]=0;H[d+216|0]=0;J[d+64>>2]=21096;b=J[d+52>>2];J[d+16>>2]=J[d+48>>2];J[d+20>>2]=b;b=J[d+36>>2];J[d>>2]=J[d+32>>2];J[d+4>>2]=b;if(!dk(a,d+280|0,d+16|0,d,d- -64|0)){break e}J[8369]=J[8369]+1;b=ia[J[6782]](216,16)|0;c=qa(b+4|0,0,212);J[b>>2]=21096;sa(c,d- -64|4,100);c=J[d+180>>2];J[b+112>>2]=J[d+176>>2];J[b+116>>2]=c;c=J[d+172>>2];J[b+104>>2]=J[d+168>>2];J[b+108>>2]=c;c=J[d+196>>2];J[b+128>>2]=J[d+192>>2];J[b+132>>2]=c;c=J[d+188>>2];J[b+120>>2]=J[d+184>>2];J[b+124>>2]=c;c=J[d+204>>2];J[b+136>>2]=J[d+200>>2];J[b+140>>2]=c;c=J[d+212>>2];J[b+144>>2]=J[d+208>>2];J[b+148>>2]=c;H[b+152|0]=K[d+216|0];J[b+212>>2]=J[d+276>>2];c=J[d+272>>2];J[b+204>>2]=J[d+268>>2];J[b+208>>2]=c;c=J[d+264>>2];J[b+196>>2]=J[d+260>>2];J[b+200>>2]=c;c=J[d+256>>2];J[b+188>>2]=J[d+252>>2];J[b+192>>2]=c;c=J[d+248>>2];J[b+180>>2]=J[d+244>>2];J[b+184>>2]=c;c=J[d+240>>2];J[b+172>>2]=J[d+236>>2];J[b+176>>2]=c;c=J[d+232>>2];J[b+164>>2]=J[d+228>>2];J[b+168>>2]=c;c=J[d+224>>2];J[b+156>>2]=J[d+220>>2];J[b+160>>2]=c;c=J[a+24>>2];e=J[c+852>>2];f:{if((e|0)!=J[c+856>>2]){break f}l=e?e<<1:1;if((l|0)<=(e|0)){break f}if(l){J[8369]=J[8369]+1;h=ia[J[6782]](l<<2,16)|0;e=J[c+852>>2]}g:{if((e|0)<=0){break g}if(e-1>>>0>=3){m=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[c+860>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[c+860>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[c+860>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+860>>2]>>2];g=g+4|0;n=n+4|0;if((m|0)!=(n|0)){continue}break}}f=e&3;if(!f){break g}while(1){m=g<<2;J[m+h>>2]=J[m+J[c+860>>2]>>2];g=g+1|0;o=o+1|0;if((f|0)!=(o|0)){continue}break}}g=J[c+860>>2];if(!(!g|!K[c+864|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[c+852>>2]}J[c+860>>2]=h;H[c+864|0]=1;J[c+856>>2]=l}J[J[c+860>>2]+(e<<2)>>2]=b;J[c+852>>2]=e+1;c=J[a+24>>2];j=N[c+348>>2];a=J[a+28>>2];k=N[a+348>>2];N[b+64>>2]=N[b+64>>2]*(j>k?j:k);N[b+68>>2]=N[b+68>>2]*Q(Q(N[c+360>>2]+N[a+360>>2])*Q(.5))}break a}J[8354]=J[8354]+1}ga=d+448|0}function Iy(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=0,g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=0,x=0,y=0,z=0,A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=0,L=Q(0);g=J[a+216>>2];D=N[g+4>>2];a:{if(D==Q(0)){break a}f=J[b>>2];if(!(ia[J[J[g>>2]+8>>2]](g,J[f+188>>2])|0)){break a}v=a+68|0;w=a+132|0;g=f+4|0;z=J[a+216>>2];a=ga+-64|0;ga=a;d=J[f+192>>2];b:{if(J[d+4>>2]==32){if(!f|J[f+236>>2]!=8){break b}g=v+48|0;d=w+48|0;if(!(J[f+988>>2]|!J[f+752>>2])){kk(f)}J[a+60>>2]=1065353216;J[a+48>>2]=f;J[a+52>>2]=0;J[a+56>>2]=-1;b=ga-80|0;ga=b;c=N[g>>2];k=N[d>>2];e=N[g+4>>2];j=N[d+4>>2];h=N[g+8>>2];l=N[d+8>>2];J[b+76>>2]=0;h=Q(l-h);N[b+72>>2]=h;e=Q(j-e);N[b+68>>2]=e;c=Q(k-c);N[b+64>>2]=c;n=J[f+988>>2];c:{if(!n){i=J[f+752>>2];if((i|0)<=0){break c}d=0;while(1){n=J[f+760>>2]+P(d,44)|0;c=jk(g,b- -64|0,J[n+8>>2]+8|0,J[n+12>>2]+8|0,J[n+16>>2]+8|0,N[a+60>>2]);if(c>Q(0)){J[a+52>>2]=3;J[a+56>>2]=d;N[a+60>>2]=c;x=x+1|0}d=d+1|0;if((i|0)!=(d|0)){continue}break}break c}k=N[a+60>>2];J[b>>2]=20972;i=J[g+12>>2];J[b+12>>2]=J[g+8>>2];J[b+16>>2]=i;i=J[g+4>>2];y=J[g>>2];J[b+48>>2]=0;N[b+44>>2]=h;N[b+40>>2]=e;J[b+4>>2]=y;J[b+8>>2]=i;N[b+36>>2]=c;i=J[d+12>>2];J[b+28>>2]=J[d+8>>2];J[b+32>>2]=i;i=J[d+4>>2];J[b+20>>2]=J[d>>2];J[b+24>>2]=i;J[b+56>>2]=0;J[b+60>>2]=0;N[b+52>>2]=k;Vm(n,g,d,b);d=J[b+56>>2];if(!d){break c}N[a+60>>2]=N[b+52>>2];J[a+52>>2]=3;J[a+56>>2]=(d-J[f+760>>2]|0)/44;x=1}if(J[f+772>>2]>0){K=J[f+780>>2];n=0;E=N[b+72>>2];F=N[b+68>>2];G=N[b+64>>2];while(1){d=0;while(1){y=(P(n,104)+K|0)+8|0;i=P(d,12);B=J[y+(J[i+21012>>2]<<2)>>2];u=N[B+8>>2];C=J[y+(J[i+21008>>2]<<2)>>2];h=N[C+8>>2];c=Q(u-h);i=J[y+(J[i+21016>>2]<<2)>>2];H=N[i+12>>2];l=N[C+12>>2];e=Q(H-l);A=N[i+8>>2];j=Q(A-h);o=N[B+12>>2];p=Q(o-l);k=Q(Q(c*e)-Q(j*p));q=p;I=N[i+16>>2];p=N[C+16>>2];r=Q(I-p);s=N[B+16>>2];m=Q(s-p);e=Q(Q(q*r)-Q(e*m));j=Q(Q(m*j)-Q(r*c));c=Q(Q(E*k)+Q(Q(G*e)+Q(F*j)));d:{if(Q(R(c))<Q(1.1920928955078125e-7)){break d}r=N[g+8>>2];m=N[g>>2];q=N[g+4>>2];c=Q(Q(-Q(Q(Q(r*k)+Q(Q(m*e)+Q(j*q)))-Q(Q(p*k)+Q(Q(h*e)+Q(l*j)))))/c);if(!(c>Q(11920928955078125e-22))|!(c<N[a+60>>2])){break d}t=Q(m+Q(G*c));h=Q(h-t);m=Q(q+Q(F*c));o=Q(o-m);u=Q(u-t);l=Q(l-m);q=s;s=Q(r+Q(E*c));r=Q(q-s);p=Q(p-s);if(!(Q(Q(k*Q(Q(h*o)-Q(u*l)))+Q(Q(e*Q(Q(l*r)-Q(o*p)))+Q(j*Q(Q(p*u)-Q(r*h)))))>Q(-11920928955078125e-22))){break d}m=Q(H-m);t=Q(A-t);A=Q(k*Q(Q(u*m)-Q(t*o)));q=o;o=Q(I-s);if(!(c>Q(0))|(!(Q(A+Q(Q(e*Q(Q(q*o)-Q(m*r)))+Q(j*Q(Q(r*t)-Q(o*u)))))>Q(-11920928955078125e-22))|!(Q(Q(k*Q(Q(t*l)-Q(h*m)))+Q(Q(e*Q(Q(m*p)-Q(l*o)))+Q(j*Q(Q(o*h)-Q(p*t)))))>Q(-11920928955078125e-22)))){break d}x=x+1|0;J[a+52>>2]=4;J[a+56>>2]=n;N[a+60>>2]=c}d=d+1|0;if((d|0)!=4){continue}break}n=n+1|0;if((n|0)<J[f+772>>2]){continue}break}}ga=b+80|0;if(!x){break b}l=N[a+60>>2];if(!(l<=N[z+4>>2])){break b}J[a+40>>2]=0;b=J[a+56>>2];J[a+44>>2]=b;c=Q(N[w+52>>2]-N[v+52>>2]);k=Q(N[w+48>>2]-N[v+48>>2]);e=Q(N[w+56>>2]-N[v+56>>2]);e:{if(J[a+52>>2]!=3){h=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(k*k)+Q(c*c))))));j=Q(h*Q(-e));c=Q(h*Q(-c));e=Q(h*Q(-k));break e}b=J[f+760>>2]+P(b,44)|0;j=N[b+28>>2];s=Q(j*e);e=N[b+20>>2];q=c;c=N[b+24>>2];if(!(Q(s+Q(Q(e*k)+Q(q*c)))>Q(0))){L=N[b+32>>2];break e}j=Q(-j);c=Q(-c);e=Q(-e)}N[a+28>>2]=L;N[a+24>>2]=j;N[a+20>>2]=c;N[a+32>>2]=l;N[a+16>>2]=e;J[a+8>>2]=f;J[a+12>>2]=a+40;Q(ia[J[J[z>>2]+12>>2]](z,a+8|0,1));break b}b=ga-32|0;ga=b;J[b+24>>2]=-1;J[b+28>>2]=-1;J[b+20>>2]=g;J[b+16>>2]=f;J[b+12>>2]=d;J[b+8>>2]=0;bf(v,w,b+8|0,z);ga=b+32|0}ga=a- -64|0}return D!=Q(0)|0}function qB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=0,L=0;f=ga-96|0;ga=f;h=J[a+32>>2];l=J[a+28>>2];q=J[b+8>>2];J[q>>2]=1065353216;u=J[b+24>>2];o=u+1<<2;J[o+q>>2]=1065353216;K=u<<1;L=K+2<<2;J[q+L>>2]=1065353216;s=N[l+8>>2];m=N[l+12>>2];n=N[l+20>>2];p=N[l+24>>2];k=N[l+28>>2];i=N[l+36>>2];d=N[l+40>>2];c=N[a+52>>2];r=N[l+44>>2];e=N[a+56>>2];v=N[l+4>>2];g=N[a+48>>2];q=J[b+12>>2];J[q+12>>2]=0;J[q>>2]=0;i=Q(Q(r*e)+Q(Q(i*g)+Q(c*d)));N[q+4>>2]=i;n=Q(Q(k*e)+Q(Q(n*g)+Q(c*p)));N[q+8>>2]=-n;w=u<<2;j=w+q|0;J[j+12>>2]=0;m=Q(Q(m*e)+Q(Q(v*g)+Q(s*c)));N[j+8>>2]=m;J[j+4>>2]=0;N[j>>2]=-i;D=u<<3;j=q+D|0;J[j+8>>2]=0;J[j+12>>2]=0;N[j+4>>2]=-m;N[j>>2]=n;j=J[b+16>>2];if(j){J[j>>2]=-1082130432;J[j+o>>2]=-1082130432;J[j+L>>2]=-1082130432}s=N[h+8>>2];d=N[h+12>>2];k=N[h+36>>2];r=N[h+40>>2];v=N[h+44>>2];p=N[h+20>>2];z=N[h+24>>2];c=N[a+68>>2];A=N[h+28>>2];e=N[a+72>>2];B=N[h+4>>2];g=N[a+64>>2];j=J[b+20>>2];J[j+12>>2]=0;J[j>>2]=0;p=Q(Q(A*e)+Q(Q(p*g)+Q(c*z)));N[j+8>>2]=p;k=Q(Q(v*e)+Q(Q(k*g)+Q(c*r)));N[j+4>>2]=-k;o=j+w|0;J[o+12>>2]=0;c=Q(Q(d*e)+Q(Q(B*g)+Q(s*c)));N[o+8>>2]=-c;J[o+4>>2]=0;N[o>>2]=k;o=j+(K<<2)|0;J[o+8>>2]=0;J[o+12>>2]=0;N[o+4>>2]=c;N[o>>2]=-p;e=N[l+60>>2];g=N[h+60>>2];d=N[l+56>>2];r=N[h+56>>2];o=J[b+28>>2];s=Q(N[b>>2]*N[b+4>>2]);N[o>>2]=s*Q(Q(Q(c+N[h+52>>2])-m)-N[l+52>>2]);N[o+w>>2]=s*Q(Q(Q(p+r)-n)-d);N[o+D>>2]=s*Q(Q(Q(k+g)-i)-e);o=P(u,12);J[o+q>>2]=1065353216;w=u<<4|4;J[w+q>>2]=1065353216;D=q;q=P(u,20)+8|0;J[D+q>>2]=1065353216;J[j+o>>2]=-1082130432;J[j+w>>2]=-1082130432;J[j+q>>2]=-1082130432;e=N[h+12>>2];n=N[h+24>>2];m=N[h+40>>2];g=N[h+8>>2];p=N[h+36>>2];k=N[h+28>>2];d=N[h+20>>2];r=N[h+44>>2];v=N[l+12>>2];z=N[l+4>>2];A=N[l+8>>2];B=N[l+28>>2];E=N[l+20>>2];F=N[l+24>>2];G=N[l+44>>2];H=N[l+36>>2];I=N[l+40>>2];i=N[h+4>>2];J[f+68>>2]=0;J[f+52>>2]=0;x=Q(Q(d*m)-Q(p*n));y=Q(Q(n*r)-Q(m*k));t=Q(Q(k*p)-Q(r*d));c=Q(Q(1)/Q(Q(e*x)+Q(Q(i*y)+Q(g*t))));C=Q(Q(Q(i*n)-Q(d*g))*c);n=Q(Q(Q(g*k)-Q(n*e))*c);k=Q(Q(Q(e*d)-Q(k*i))*c);N[f- -64>>2]=Q(G*C)+Q(Q(H*n)+Q(I*k));d=Q(Q(Q(g*p)-Q(m*i))*c);g=Q(Q(Q(e*m)-Q(r*g))*c);e=Q(Q(Q(i*r)-Q(p*e))*c);N[f+60>>2]=Q(G*d)+Q(Q(H*g)+Q(I*e));N[f+48>>2]=Q(C*B)+Q(Q(n*E)+Q(k*F));N[f+44>>2]=Q(d*B)+Q(Q(g*E)+Q(e*F));J[f+36>>2]=0;i=Q(x*c);m=Q(y*c);c=Q(t*c);N[f+56>>2]=Q(G*i)+Q(Q(H*m)+Q(I*c));N[f+40>>2]=Q(i*B)+Q(Q(m*E)+Q(c*F));N[f+32>>2]=Q(C*v)+Q(Q(n*z)+Q(A*k));N[f+28>>2]=Q(d*v)+Q(Q(g*z)+Q(A*e));N[f+24>>2]=Q(i*v)+Q(Q(m*z)+Q(A*c));h=f+8|0;Na(f+24|0,h);n=N[a+92>>2];c=N[h+12>>2];e=Q(n-c);x=Q(e*e);m=N[a+88>>2];e=N[h+8>>2];g=Q(m-e);y=Q(g*g);p=N[a+80>>2];g=N[h>>2];i=Q(p-g);t=Q(i*i);k=N[a+84>>2];i=N[h+4>>2];d=Q(k-i);C=Q(x+Q(y+Q(t+Q(d*d))));d=Q(n+c);x=Q(d*d);d=Q(m+e);y=Q(d*d);d=Q(p+g);t=Q(d*d);d=Q(k+i);if(!(C<Q(x+Q(y+Q(t+Q(d*d)))))){e=Q(-e);i=Q(-i);g=Q(-g);c=Q(-c)}d=qb(Q(T(Q(U(Q(Q(e*m)+Q(Q(i*k)+Q(Q(c*n)+Q(p*g)))),Q(-1))),Q(1))));N[f+76>>2]=d+d;J[f+92>>2]=0;d=Q(Q(i*p)+Q(Q(Q(n*e)-Q(c*m))-Q(g*k)));r=Q(Q(e*k)+Q(Q(Q(n*g)-Q(c*p))-Q(i*m)));c=Q(Q(g*m)+Q(Q(Q(n*i)-Q(c*k))-Q(e*p)));e=Q(Q(d*d)+Q(Q(r*r)+Q(c*c)));a:{if(e<Q(1.4210854715202004e-14)){J[f+80>>2]=1065353216;J[f+84>>2]=0;N[f+88>>2]=0;break a}t=c;c=Q(Q(1)/Q(Y(e)));N[f+84>>2]=t*c;N[f+80>>2]=r*c;N[f+88>>2]=d*c}c=Q(-N[f+76>>2]);N[f+84>>2]=N[f+84>>2]*c;N[f+88>>2]=N[f+88>>2]*c;a=J[b+24>>2];b=J[b+28>>2];N[P(a,12)+b>>2]=s*Q(N[f+80>>2]*c);N[b+(a<<4)>>2]=s*N[f+84>>2];N[b+P(a,20)>>2]=s*N[f+88>>2];ga=f+96|0}function yl(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),I=Q(0),K=Q(0),L=Q(0),M=0,O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=0,$=0,aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0);e=ga-240|0;ga=e;a:{if(J[a+16>>2]){Ie(J[a+4>>2]);f=J[a+12>>2];D=J[f+4>>2];M=J[a+16>>2];_=J[M+4>>2];h=Q(ia[J[J[f>>2]+48>>2]](f));B=J[a+16>>2];j=Q(ia[J[J[B>>2]+48>>2]](B));B=J[a+4>>2];$=J[a+8>>2];a=e+160|0;J[a+72>>2]=1;J[a+76>>2]=1;J[a+60>>2]=-1;H[a+52|0]=0;N[a+48>>2]=j;N[a+44>>2]=h;J[a+40>>2]=_;J[a+36>>2]=D;J[a+32>>2]=M;J[a+28>>2]=f;J[a+24>>2]=B;J[a+20>>2]=$;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a+16>>2]=0;J[a>>2]=18540;J[e+152>>2]=1566444395;f=J[b+12>>2];J[e+32>>2]=J[b+8>>2];J[e+36>>2]=f;f=J[b+4>>2];J[e+24>>2]=J[b>>2];J[e+28>>2]=f;f=J[b+28>>2];J[e+48>>2]=J[b+24>>2];J[e+52>>2]=f;f=J[b+20>>2];J[e+40>>2]=J[b+16>>2];J[e+44>>2]=f;D=J[b+44>>2];f=e- -64|0;J[f>>2]=J[b+40>>2];J[f+4>>2]=D;f=J[b+36>>2];J[e+56>>2]=J[b+32>>2];J[e+60>>2]=f;f=J[b+60>>2];J[e+80>>2]=J[b+56>>2];J[e+84>>2]=f;f=J[b+52>>2];J[e+72>>2]=J[b+48>>2];J[e+76>>2]=f;b=J[c+12>>2];J[e+96>>2]=J[c+8>>2];J[e+100>>2]=b;b=J[c+4>>2];J[e+88>>2]=J[c>>2];J[e+92>>2]=b;b=J[c+20>>2];J[e+104>>2]=J[c+16>>2];J[e+108>>2]=b;b=J[c+28>>2];J[e+112>>2]=J[c+24>>2];J[e+116>>2]=b;b=J[c+44>>2];J[e+128>>2]=J[c+40>>2];J[e+132>>2]=b;b=J[c+36>>2];J[e+120>>2]=J[c+32>>2];J[e+124>>2]=b;b=J[c+52>>2];J[e+136>>2]=J[c+48>>2];J[e+140>>2]=b;b=J[c+60>>2];J[e+144>>2]=J[c+56>>2];J[e+148>>2]=b;zb(a,e+24|0,d,0,0);break a}E=N[b+52>>2];F=N[b+56>>2];G=N[c+52>>2];I=N[c+56>>2];k=N[b+20>>2];l=N[b+36>>2];h=N[c+20>>2];j=N[c+36>>2];g=N[c+24>>2];m=N[b+24>>2];i=N[c+40>>2];p=N[b+40>>2];K=N[b+48>>2];aa=N[c+48>>2];f=J[a+12>>2];q=N[b+32>>2];r=N[b+16>>2];s=N[b>>2];t=N[b+4>>2];x=N[c+32>>2];y=N[c+16>>2];z=N[c>>2];A=N[c+4>>2];n=N[c+8>>2];u=N[b+8>>2];a=J[a+20>>2];v=N[a+52>>2];w=N[a+56>>2];o=N[a+48>>2];J[e+172>>2]=0;O=Q(Q(p*x)+Q(Q(u*z)+Q(m*y)));o=Q(-o);P=Q(Q(p*j)+Q(Q(u*A)+Q(m*h)));C=Q(Q(p*i)+Q(Q(u*n)+Q(m*g)));N[e+168>>2]=Q(Q(O*o)-Q(v*P))-Q(w*C);R=Q(Q(l*x)+Q(Q(t*z)+Q(k*y)));S=Q(Q(l*j)+Q(Q(t*A)+Q(k*h)));T=Q(Q(l*i)+Q(Q(t*n)+Q(k*g)));N[e+164>>2]=Q(Q(R*o)-Q(v*S))-Q(w*T);U=Q(Q(q*x)+Q(Q(s*z)+Q(r*y)));V=Q(Q(q*j)+Q(Q(s*A)+Q(r*h)));W=Q(Q(q*i)+Q(Q(s*n)+Q(r*g)));N[e+160>>2]=Q(Q(U*o)-Q(v*V))-Q(w*W);b=e+160|0;ia[J[J[f>>2]+64>>2]](e+24|0,f,b);k=N[a+52>>2];l=N[a+56>>2];ba=N[a+64>>2];m=N[a+48>>2];p=N[e+24>>2];q=N[e+28>>2];r=N[e+32>>2];ca=N[c+52>>2];s=N[c+24>>2];t=N[c+20>>2];da=N[c+56>>2];u=N[c+40>>2];v=N[c+36>>2];ea=N[c+48>>2];w=N[c+8>>2];o=N[c>>2];X=N[c+4>>2];Y=N[c+16>>2];Z=N[c+32>>2];J[e+172>>2]=0;fa=Q(Q(F*i)+Q(Q(K*n)+Q(E*g)));L=n;n=Q(-aa);g=Q(Q(fa+Q(Q(Q(L*n)-Q(g*G))-Q(i*I)))+Q(Q(r*C)+Q(Q(p*W)+Q(T*q))));L=g;C=Q(l*g);g=Q(Q(Q(Q(F*x)+Q(Q(K*z)+Q(E*y)))+Q(Q(Q(z*n)-Q(y*G))-Q(x*I)))+Q(Q(r*O)+Q(Q(p*U)+Q(R*q))));i=Q(Q(Q(Q(F*j)+Q(Q(K*A)+Q(E*h)))+Q(Q(Q(A*n)-Q(h*G))-Q(j*I)))+Q(Q(r*P)+Q(Q(p*V)+Q(S*q))));h=Q(Q(C+Q(Q(m*g)+Q(k*i)))-ba);j=Q(L-Q(l*h));g=Q(g-Q(m*h));i=Q(i-Q(k*h));N[e+168>>2]=da+Q(Q(u*j)+Q(Q(Z*g)+Q(v*i)));N[e+164>>2]=ca+Q(Q(j*s)+Q(Q(g*Y)+Q(i*t)));N[e+160>>2]=ea+Q(Q(j*w)+Q(Q(g*o)+Q(i*X)));J[e+20>>2]=0;N[e+16>>2]=Q(u*l)+Q(Q(Z*m)+Q(k*v));N[e+12>>2]=Q(s*l)+Q(Q(Y*m)+Q(k*t));N[e+8>>2]=Q(w*l)+Q(Q(o*m)+Q(k*X));ia[J[J[d>>2]+16>>2]](d,e+8|0,b,h)}ga=e+240|0}function zk(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);J[a+312>>2]=0;J[a+316>>2]=0;J[a+236>>2]=2;J[a+544>>2]=1065353216;J[a+548>>2]=1065353216;J[a+348>>2]=1065353216;J[a+352>>2]=1065353216;J[a+412>>2]=0;J[a+416>>2]=0;J[a+320>>2]=0;J[a+324>>2]=0;J[a+328>>2]=0;J[a+332>>2]=0;J[a+336>>2]=0;J[a+340>>2]=0;J[a+552>>2]=1065353216;J[a+556>>2]=0;J[a+360>>2]=0;J[a+364>>2]=0;J[a+356>>2]=1065353216;J[a+368>>2]=0;J[a+372>>2]=0;J[a+376>>2]=0;J[a+380>>2]=0;J[a+384>>2]=0;J[a+388>>2]=0;J[a+392>>2]=0;J[a+420>>2]=0;J[a+424>>2]=0;J[a+428>>2]=0;J[a+432>>2]=0;J[a+436>>2]=0;J[a+440>>2]=0;h=N[b+92>>2];d=N[b+96>>2];N[a+448>>2]=d<Q(0)?Q(0):Q(T(d,Q(1)));N[a+444>>2]=h<Q(0)?Q(0):Q(T(h,Q(1)));N[a+472>>2]=N[b+112>>2];N[a+476>>2]=N[b+116>>2];g=J[b+4>>2];J[a+608>>2]=0;J[a+612>>2]=0;J[a+480>>2]=g;H[a+452|0]=K[b+120|0];N[a+456>>2]=N[b+124>>2];N[a+460>>2]=N[b+128>>2];N[a+464>>2]=N[b+132>>2];N[a+468>>2]=N[b+136>>2];a:{if(g){c=a+4|0;ia[J[J[g>>2]+8>>2]](g,c);break a}c=J[b+12>>2];J[a+4>>2]=J[b+8>>2];J[a+8>>2]=c;c=J[b+20>>2];J[a+12>>2]=J[b+16>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+28>>2]=J[b+32>>2];J[a+32>>2]=c;c=J[b+28>>2];J[a+20>>2]=J[b+24>>2];J[a+24>>2]=c;c=J[b+44>>2];J[a+36>>2]=J[b+40>>2];J[a+40>>2]=c;c=J[b+52>>2];J[a+44>>2]=J[b+48>>2];J[a+48>>2]=c;c=b- -64|0;g=J[c+4>>2];J[a+60>>2]=J[c>>2];J[a+64>>2]=g;c=J[b+60>>2];J[a+52>>2]=J[b+56>>2];J[a+56>>2]=c;c=a+4|0}g=J[c+4>>2];J[a+68>>2]=J[c>>2];J[a+72>>2]=g;g=J[c+12>>2];J[a+76>>2]=J[c+8>>2];J[a+80>>2]=g;c=J[a+32>>2];J[a+92>>2]=J[a+28>>2];J[a+96>>2]=c;c=J[a+24>>2];J[a+84>>2]=J[a+20>>2];J[a+88>>2]=c;c=J[a+40>>2];J[a+100>>2]=J[a+36>>2];J[a+104>>2]=c;c=J[a+48>>2];J[a+108>>2]=J[a+44>>2];J[a+112>>2]=c;c=J[a+56>>2];J[a+116>>2]=J[a+52>>2];J[a+120>>2]=c;c=J[a+64>>2];J[a+124>>2]=J[a+60>>2];J[a+128>>2]=c;J[a+132>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;J[a+160>>2]=0;N[a+224>>2]=N[b+100>>2];N[a+232>>2]=N[b+104>>2];N[a+228>>2]=N[b+108>>2];ia[J[J[a>>2]+12>>2]](a,J[b+72>>2]);c=J[8147];J[8147]=c+1;J[a+508>>2]=c;h=Q(0);c=J[a+204>>2];d=N[b>>2];b:{if(d==Q(0)){J[a+204>>2]=c|1;break b}J[a+204>>2]=c&-2;h=Q(Q(1)/d)}N[a+344>>2]=h;J[a+376>>2]=0;N[a+364>>2]=d*N[a+380>>2];N[a+372>>2]=d*N[a+388>>2];N[a+368>>2]=d*N[a+384>>2];e=N[b+84>>2];f=N[b+80>>2];d=N[b+76>>2];J[a+504>>2]=0;J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;J[a+408>>2]=0;d=d!=Q(0)?Q(Q(1)/d):Q(0);N[a+396>>2]=d;f=f!=Q(0)?Q(Q(1)/f):Q(0);N[a+400>>2]=f;e=e!=Q(0)?Q(Q(1)/e):Q(0);N[a+404>>2]=e;n=N[a+12>>2];i=Q(e*n);o=N[a+4>>2];j=Q(d*o);p=N[a+8>>2];k=Q(f*p);N[a+264>>2]=Q(n*i)+Q(Q(o*j)+Q(p*k));q=N[a+28>>2];r=N[a+20>>2];s=N[a+24>>2];N[a+268>>2]=Q(q*i)+Q(Q(r*j)+Q(k*s));t=N[a+44>>2];l=Q(t*i);i=N[a+36>>2];m=Q(i*j);j=N[a+40>>2];N[a+272>>2]=l+Q(m+Q(k*j));k=Q(e*q);l=Q(d*r);m=Q(f*s);N[a+280>>2]=Q(n*k)+Q(Q(o*l)+Q(p*m));N[a+284>>2]=Q(q*k)+Q(Q(r*l)+Q(s*m));N[a+288>>2]=Q(t*k)+Q(Q(i*l)+Q(m*j));e=Q(e*t);d=Q(d*i);f=Q(f*j);N[a+296>>2]=Q(n*e)+Q(Q(o*d)+Q(p*f));N[a+300>>2]=Q(q*e)+Q(Q(r*d)+Q(s*f));N[a+304>>2]=Q(t*e)+Q(Q(i*d)+Q(j*f));J[a+536>>2]=0;J[a+540>>2]=0;J[a+528>>2]=0;J[a+532>>2]=0;J[a+520>>2]=0;J[a+524>>2]=0;J[a+512>>2]=0;J[a+516>>2]=0;J[a+604>>2]=0;J[a+596>>2]=0;J[a+600>>2]=0;J[a+588>>2]=0;J[a+592>>2]=0;J[a+580>>2]=0;J[a+584>>2]=0;J[a+572>>2]=0;J[a+576>>2]=0;N[a+568>>2]=h*N[a+356>>2];N[a+564>>2]=h*N[a+352>>2];N[a+560>>2]=h*N[a+348>>2]}function xG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=0,E=Q(0),F=Q(0),G=Q(0),H=0,I=0;d=ga-240|0;ga=d;J[a+4>>2]=J[a+4>>2]+1;B=J[c+36>>2];D=P(B,80);H=J[a+12>>2];I=J[H+4>>2];n=J[(D+J[I+24>>2]|0)+64>>2];c=J[a+8>>2];C=J[b+36>>2];b=J[J[c+4>>2]+24>>2]+P(C,80)|0;o=J[b+64>>2];c=J[c+12>>2];E=N[c+52>>2];F=N[c+56>>2];e=N[c+24>>2];f=N[c+20>>2];g=N[c+40>>2];h=N[c+36>>2];G=N[c+48>>2];i=N[c+8>>2];j=N[c>>2];k=N[c+4>>2];l=N[c+16>>2];m=N[c+32>>2];p=N[b+32>>2];q=N[b>>2];r=N[b+16>>2];s=N[b+56>>2];t=N[b+48>>2];u=N[b+52>>2];v=N[b+36>>2];w=N[b+4>>2];x=N[b+20>>2];y=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];c=0;J[d+236>>2]=0;J[d+220>>2]=0;J[d+204>>2]=0;N[d+216>>2]=Q(y*g)+Q(Q(z*m)+Q(h*A));N[d+212>>2]=Q(v*g)+Q(Q(w*m)+Q(h*x));N[d+200>>2]=Q(y*e)+Q(Q(z*l)+Q(f*A));N[d+196>>2]=Q(v*e)+Q(Q(w*l)+Q(f*x));N[d+232>>2]=F+Q(Q(s*g)+Q(Q(t*m)+Q(h*u)));N[d+228>>2]=E+Q(Q(s*e)+Q(Q(t*l)+Q(f*u)));J[d+188>>2]=0;N[d+208>>2]=Q(p*g)+Q(Q(q*m)+Q(h*r));N[d+192>>2]=Q(p*e)+Q(Q(q*l)+Q(f*r));N[d+184>>2]=Q(y*i)+Q(Q(z*j)+Q(k*A));N[d+180>>2]=Q(v*i)+Q(Q(w*j)+Q(k*x));N[d+176>>2]=Q(p*i)+Q(Q(q*j)+Q(k*r));N[d+224>>2]=G+Q(Q(s*i)+Q(Q(t*j)+Q(k*u)));b=J[H+12>>2];E=N[b+52>>2];F=N[b+56>>2];e=N[b+24>>2];f=N[b+20>>2];g=N[b+40>>2];h=N[b+36>>2];G=N[b+48>>2];i=N[b+8>>2];j=N[b>>2];k=N[b+4>>2];l=N[b+16>>2];m=N[b+32>>2];b=J[I+24>>2]+D|0;p=N[b+32>>2];q=N[b>>2];r=N[b+16>>2];s=N[b+56>>2];t=N[b+48>>2];u=N[b+52>>2];v=N[b+36>>2];w=N[b+4>>2];x=N[b+20>>2];y=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];J[d+172>>2]=0;J[d+156>>2]=0;J[d+140>>2]=0;N[d+152>>2]=Q(y*g)+Q(Q(z*m)+Q(h*A));N[d+148>>2]=Q(v*g)+Q(Q(w*m)+Q(h*x));N[d+136>>2]=Q(y*e)+Q(Q(z*l)+Q(f*A));N[d+132>>2]=Q(v*e)+Q(Q(w*l)+Q(f*x));N[d+168>>2]=F+Q(Q(s*g)+Q(Q(t*m)+Q(h*u)));N[d+164>>2]=E+Q(Q(s*e)+Q(Q(t*l)+Q(f*u)));J[d+124>>2]=0;N[d+144>>2]=Q(p*g)+Q(Q(q*m)+Q(h*r));N[d+128>>2]=Q(p*e)+Q(Q(q*l)+Q(f*r));N[d+120>>2]=Q(y*i)+Q(Q(z*j)+Q(k*A));N[d+116>>2]=Q(v*i)+Q(Q(w*j)+Q(k*x));N[d+112>>2]=Q(p*i)+Q(Q(q*j)+Q(k*r));N[d+160>>2]=G+Q(Q(s*i)+Q(Q(t*j)+Q(k*u)));ia[J[J[o>>2]+8>>2]](o,d+176|0,d+96|0,d+80|0);ia[J[J[n>>2]+8>>2]](n,d+112|0,d- -64|0,d+48|0);b=J[7399];a:{if(b){if(!(ia[b|0](o,n)|0)){break a}}c=N[d+80>>2]<N[d+64>>2]|N[d+96>>2]>N[d+48>>2]?c:1;b=0;if((N[d+88>>2]<N[d+72>>2]|N[d+104>>2]>N[d+56>>2]?b:c)^1|N[d+84>>2]<N[d+68>>2]|N[d+100>>2]>N[d+52>>2]){break a}b=J[a+8>>2];c=J[b+8>>2];J[d+44>>2]=C;J[d+40>>2]=-1;J[d+32>>2]=c;J[d+28>>2]=o;J[d+24>>2]=b;J[d+36>>2]=d+176;b=J[a+12>>2];c=J[b+8>>2];J[d+20>>2]=B;J[d+16>>2]=-1;J[d+8>>2]=c;J[d+4>>2]=n;J[d>>2]=b;J[d+12>>2]=d+112;b=J[a+28>>2];J[7402]=J[7402]+1;c=B<<16|C;c=(c<<15^-1)+c|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;c=J[b+12>>2]-1&(c>>16^c);b:{c:{if((c|0)>=J[b+32>>2]){break c}c=J[J[b+40>>2]+(c<<2)>>2];if((c|0)==-1){break c}n=J[b+60>>2];o=J[b+16>>2];while(1){b=o+P(c,12)|0;if(J[b>>2]==(C|0)&J[b+4>>2]==(B|0)){break b}c=J[n+(c<<2)>>2];if((c|0)!=-1){continue}break}}b=0}d:{if(b){c=J[b+8>>2];break d}b=J[a+16>>2];c=ia[J[J[b>>2]+8>>2]](b,d+24|0,d,J[a+32>>2])|0;b=J[a+28>>2];J[(ia[J[J[b>>2]+12>>2]](b,C,B)|0)+8>>2]=c}b=J[a+24>>2];n=J[b+12>>2];o=J[b+8>>2];J[b+12>>2]=d;D=d+24|0;J[b+8>>2]=D;ia[J[J[b>>2]+8>>2]](b,-1,C);b=J[a+24>>2];ia[J[J[b>>2]+12>>2]](b,-1,B);ia[J[J[c>>2]+8>>2]](c,D,d,J[a+20>>2],J[a+24>>2]);a=J[a+24>>2];J[a+8>>2]=o;J[a+12>>2]=n}ga=d+240|0}function mw(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=ga-16|0;ga=m;J[m+12>>2]=a;N[m+8>>2]=b;a=0;c=ga-1120|0;ga=c;j=42;f=J[m+12>>2];e=J[f+44>>2];e=ia[J[J[e>>2]+84>>2]](e)|0;if((e|0)>0){while(1){d=J[f+44>>2];ia[J[J[d>>2]+88>>2]](d,a,c+128|0);Rl();h=J[c+140>>2];d=j<<4;g=d+29864|0;J[g>>2]=J[c+136>>2];J[g+4>>2]=h;g=J[c+132>>2];d=d+29856|0;J[d>>2]=J[c+128>>2];J[d+4>>2]=g;j=j+1|0;a=a+1|0;if((e|0)!=(a|0)){continue}break}}a=0;while(1){e=J[f+44>>2];Rl();d=a<<4;ia[J[J[e>>2]+64>>2]](c,e,d+29856|0);e=d+(c+128|0)|0;d=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=d;d=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=d;a=a+1|0;if((j|0)!=(a|0)){continue}break}J[c+116>>2]=4096;J[c+120>>2]=4096;J[c+108>>2]=16;J[c+112>>2]=981668463;J[c+100>>2]=j;J[c+96>>2]=1;J[c+104>>2]=c+128;H[c+92|0]=1;J[c+88>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+68>>2]=0;H[c+72|0]=1;J[c+60>>2]=0;J[c+64>>2]=0;J[c+20>>2]=0;H[c+24|0]=1;H[c+52|0]=1;J[c+12>>2]=0;J[c+16>>2]=0;J[c+48>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+28>>2]=0;J[c+32>>2]=0;J[c+4>>2]=0;H[c|0]=1;p=Vj(c+56|0,c+96|0,c);if((p|0)!=1){e=J[c+4>>2];a=e;h=J[f+4>>2];if((a|0)>(h|0)){if((e|0)>J[f+8>>2]){a:{if(!e){j=0;break a}J[8369]=J[8369]+1;j=ia[J[6782]](e<<4,16)|0;h=J[f+4>>2]}b:{if((h|0)<=0){break b}a=0;if((h|0)!=1){k=h&-2;while(1){g=a<<4;i=g+j|0;d=g+J[f+12>>2]|0;n=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=n;n=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=n;d=g|16;g=d+j|0;d=d+J[f+12>>2]|0;i=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=i;i=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=i;a=a+2|0;l=l+2|0;if((k|0)!=(l|0)){continue}break}}if(!(h&1)){break b}a=a<<4;d=a+j|0;a=a+J[f+12>>2]|0;g=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=g;g=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=g}a=J[f+12>>2];if(!(a?!a|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[f+12>>2]=j;H[f+16|0]=1;J[f+8>>2]=e}a=J[c+4>>2]}J[f+4>>2]=e;if((a|0)>0){a=0;while(1){e=a<<4;d=e+J[f+12>>2]|0;e=e+J[c+20>>2]|0;g=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=g;g=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=g;a=a+1|0;if((a|0)<J[c+4>>2]){continue}break}}e=J[c+32>>2];J[f+40>>2]=e;a=e;d=J[f+24>>2];if((a|0)>(d|0)){c:{if((e|0)<=J[f+28>>2]){h=J[f+32>>2];break c}d:{if(!e){h=0;a=d;break d}J[8369]=J[8369]+1;h=ia[J[6782]](e<<2,16)|0;a=J[f+24>>2]}i=J[f+32>>2];e:{g=a;if((a|0)>0){j=0;a=0;if(g-1>>>0>=3){n=g&-4;l=0;while(1){k=a<<2;J[k+h>>2]=J[i+k>>2];o=k|4;J[o+h>>2]=J[i+o>>2];o=k|8;J[o+h>>2]=J[i+o>>2];k=k|12;J[k+h>>2]=J[i+k>>2];a=a+4|0;l=l+4|0;if((n|0)!=(l|0)){continue}break}}g=g&3;if(!g){break e}while(1){l=a<<2;J[l+h>>2]=J[i+l>>2];a=a+1|0;j=j+1|0;if((g|0)!=(j|0)){continue}break}break e}if(i){break e}J[f+32>>2]=h;J[f+28>>2]=e;H[f+36|0]=1;break c}if(i?K[f+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}J[f+32>>2]=h;H[f+36|0]=1;J[f+28>>2]=e}qa((d<<2)+h|0,0,e-d<<2);a=J[f+40>>2]}J[f+24>>2]=e;if((a|0)>0){e=J[f+32>>2];a=0;d=J[c+48>>2];while(1){g=a<<2;J[g+e>>2]=J[d+g>>2];a=a+1|0;if((a|0)<J[f+40>>2]){continue}break}}Uj(c)}a=J[c+48>>2];if(!(a?!a|!K[c+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+48>>2]=0;H[c+52|0]=1;J[c+40>>2]=0;J[c+44>>2]=0;a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}a=J[c+88>>2];if(!(a?!a|!K[c+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+88>>2]=0;H[c+92|0]=1;J[c+80>>2]=0;J[c+84>>2]=0;a=J[c+68>>2];if(!(a?!a|!K[c+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=c+1120|0;ga=m+16|0;return(p|0)!=1|0}function Ke(a,b,c,d){var e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0;e=ga-672|0;ga=e;g=e+456|0;J[g+4>>2]=35;J[g+8>>2]=0;J[g>>2]=14268;J[g+44>>2]=1025758986;J[g+20>>2]=1065353216;J[g+24>>2]=0;J[g+12>>2]=1065353216;J[g+16>>2]=1065353216;J[g>>2]=13984;N[e+500>>2]=0;N[e+484>>2]=0;J[e+460>>2]=8;J[e+456>>2]=16132;J[e+404>>2]=0;J[e+408>>2]=0;J[e+416>>2]=0;J[e+420>>2]=0;J[e+412>>2]=1065353216;J[e+424>>2]=0;J[e+428>>2]=0;J[e+432>>2]=1065353216;J[e+436>>2]=0;J[e+396>>2]=0;J[e+400>>2]=0;J[e+392>>2]=1065353216;n=J[a+12>>2];J[e+448>>2]=J[a+8>>2];J[e+452>>2]=n;n=J[a+4>>2];J[e+440>>2]=J[a>>2];J[e+444>>2]=n;a=e+512|0;Gg(b,c,g,e+392|0,d,a,0);J[e+144>>2]=0;J[e+148>>2]=0;J[e+136>>2]=0;J[e+140>>2]=0;J[e+372>>2]=0;J[e+376>>2]=0;J[e+384>>2]=2;J[e+152>>2]=0;J[e+664>>2]=1065353216;J[e+668>>2]=0;J[e+656>>2]=1065353216;J[e+660>>2]=1065353216;f=Q(3.4028234663852886e38);a:{b:{c:{switch(Fg(e+8|0,a,e+656|0)|0){case 0:g=J[e+380>>2];if(!J[g+32>>2]){f=Q(0);break b}a=0;f=Q(0);while(1){A=a<<2;n=A+g|0;h=N[n+16>>2];g=J[e+632>>2];u=e+656|0;B=J[e+636>>2];C=J[e+512>>2]+(B>>1)|0;n=J[n>>2];if(B&1){g=J[g+J[C>>2]>>2]}ia[g|0](u,C,n);u=J[e+636>>2];n=J[e+516>>2]+(u>>1)|0;r=Q(h*N[e+664>>2]);s=Q(h*N[e+660>>2]);t=Q(h*N[e+656>>2]);g=J[J[e+380>>2]+A>>2];k=Q(-N[g+8>>2]);o=Q(-N[g+4>>2]);l=Q(-N[g>>2]);g=J[e+632>>2];g=u&1?J[J[n>>2]+g>>2]:g;j=Q(j+r);i=Q(i+s);m=Q(m+t);J[e+652>>2]=0;N[e+648>>2]=Q(N[e+560>>2]*k)+Q(Q(N[e+552>>2]*l)+Q(N[e+556>>2]*o));N[e+644>>2]=Q(N[e+544>>2]*k)+Q(Q(N[e+536>>2]*l)+Q(N[e+540>>2]*o));N[e+640>>2]=Q(N[e+528>>2]*k)+Q(Q(N[e+520>>2]*l)+Q(N[e+524>>2]*o));ia[g|0](e+656|0,n,e+640|0);k=N[e+664>>2];o=N[e+656>>2];l=N[e+660>>2];p=Q(p+Q(h*Q(Q(Q(k*N[e+608>>2])+Q(Q(o*N[e+600>>2])+Q(l*N[e+604>>2])))+N[e+624>>2])));q=Q(q+Q(h*Q(Q(Q(k*N[e+592>>2])+Q(Q(o*N[e+584>>2])+Q(l*N[e+588>>2])))+N[e+620>>2])));f=Q(f+Q(h*Q(Q(Q(k*N[e+576>>2])+Q(Q(o*N[e+568>>2])+Q(l*N[e+572>>2])))+N[e+616>>2])));a=a+1|0;g=J[e+380>>2];if(a>>>0<M[g+32>>2]){continue}break};break b;case 1:break c;default:break a}}if(!Eg(b,c,e+456|0,e+392|0,e+136|0,d,1)){break a}f=Q(N[d+12>>2]-N[d+28>>2]);h=Q(N[d+4>>2]-N[d+20>>2]);j=Q(N[d+8>>2]-N[d+24>>2]);i=Q(Y(Q(Q(f*f)+Q(Q(h*h)+Q(j*j)))));if(i>=Q(1.1920928955078125e-7)){J[d+48>>2]=0;k=f;f=Q(Q(1)/i);N[d+44>>2]=k*f;N[d+40>>2]=j*f;N[d+36>>2]=h*f}f=Q(-i);break a}h=N[c+52>>2];k=N[c+24>>2];o=N[c+20>>2];l=N[c+56>>2];r=N[c+40>>2];s=N[c+36>>2];t=N[c+16>>2];w=N[c+32>>2];v=N[c+48>>2];x=N[c+8>>2];y=N[c>>2];z=N[c+4>>2];J[d+16>>2]=0;v=Q(v+Q(Q(j*x)+Q(Q(m*y)+Q(i*z))));N[d+4>>2]=v;l=Q(l+Q(Q(j*r)+Q(Q(m*w)+Q(i*s))));N[d+12>>2]=l;i=Q(h+Q(Q(j*k)+Q(Q(m*t)+Q(i*o))));N[d+8>>2]=i;h=N[c+52>>2];j=N[c+24>>2];m=N[c+20>>2];k=N[c+56>>2];o=N[c+40>>2];r=N[c+36>>2];s=N[c+48>>2];t=N[c+8>>2];w=N[c>>2];x=N[c+4>>2];y=N[c+16>>2];z=N[c+32>>2];J[d+32>>2]=0;k=Q(k+Q(Q(p*o)+Q(Q(f*z)+Q(q*r))));N[d+28>>2]=k;m=Q(h+Q(Q(p*j)+Q(Q(f*y)+Q(q*m))));N[d+24>>2]=m;f=Q(s+Q(Q(p*t)+Q(Q(f*w)+Q(q*x))));N[d+20>>2]=f;p=Dc(b);q=Dc(e+456|0);J[d+48>>2]=0;h=Q(k-l);j=Q(f-v);i=Q(m-i);m=Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(i*i)))));f=Q(Q(1)/m);h=Q(h*f);N[d+44>>2]=h;i=Q(i*f);N[d+40>>2]=i;j=Q(j*f);N[d+36>>2]=j;f=Q(p+q);N[d+4>>2]=Q(f*j)+N[d+4>>2];N[d+8>>2]=Q(f*i)+N[d+8>>2];N[d+12>>2]=Q(f*h)+N[d+12>>2];f=Q(m-f)}ga=e+672|0;return f}function ZC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=ga-32|0;ga=e;d=ia[J[J[a>>2]+28>>2]](a)|0;J[b>>2]=0;J[b+20>>2]=d;if(d){q=ia[J[J[c>>2]+16>>2]](c,32,d)|0;l=J[q+8>>2];J[b>>2]=ia[J[J[c>>2]+28>>2]](c,l);r=ia[J[J[a>>2]+28>>2]](a)|0;if((r|0)>0){while(1){ia[J[J[a>>2]+16>>2]](a,e+28|0,e+4|0,e+16|0,e+8|0,e+24|0,e+20|0,e,e+12|0,p);d=J[e>>2];J[l+24>>2]=d;f=J[e+4>>2];J[l>>2]=0;J[l+4>>2]=0;J[l+28>>2]=f;J[l+8>>2]=0;J[l+12>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;a:{b:{switch(J[e+12>>2]-2|0){case 0:if(!d){break a}f=ia[J[J[c>>2]+16>>2]](c,4,P(d,3))|0;k=J[f+8>>2];J[l+8>>2]=ia[J[J[c>>2]+28>>2]](c,k);if(J[e>>2]>0){d=0;m=J[e+24>>2];while(1){i=k+P(d,12)|0;j=m+P(J[e+20>>2],d)|0;J[i>>2]=J[j>>2];J[i+4>>2]=J[j+4>>2];J[i+8>>2]=J[j+8>>2];d=d+1|0;if((d|0)<J[e>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,f,3211,1497453121,J[f+8>>2]);break a;case 1:if(!d){break a}n=ia[J[J[c>>2]+16>>2]](c,8,d)|0;i=J[n+8>>2];J[l+12>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e>>2];c:{if((j|0)<=0){break c}d=0;k=J[e+20>>2];m=J[e+24>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<3)|0;g=m+P(d,k)|0;I[h>>1]=L[g>>1];I[h+2>>1]=L[g+2>>1];I[h+4>>1]=L[g+4>>1];g=d|1;h=i+(g<<3)|0;g=m+P(g,k)|0;I[h>>1]=L[g>>1];I[h+2>>1]=L[g+2>>1];I[h+4>>1]=L[g+4>>1];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break c}f=i+(d<<3)|0;d=m+P(d,k)|0;I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1]}ia[J[J[c>>2]+20>>2]](c,n,3372,1497453121,J[n+8>>2]);break a;case 3:break b;default:break a}}if(!d){break a}f=ia[J[J[c>>2]+16>>2]](c,4,d)|0;k=J[f+8>>2];J[l+16>>2]=ia[J[J[c>>2]+28>>2]](c,k);d=0;if(J[e>>2]>0){while(1){i=k+(d<<2)|0;j=J[e+24>>2]+P(J[e+20>>2],d)|0;H[i|0]=K[j|0];H[i+1|0]=K[j+1|0];H[i+2|0]=K[j+2|0];d=d+1|0;if((d|0)<J[e>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,f,3399,1497453121,J[f+8>>2])}d:{e:{switch(J[e+16>>2]){case 0:d=J[e+4>>2];if(!d){break d}n=ia[J[J[c>>2]+16>>2]](c,16,d)|0;i=J[n+8>>2];J[l>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e+4>>2];f:{if((j|0)<=0){break f}d=0;k=J[e+8>>2];m=J[e+28>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<4)|0;g=m+P(d,k)|0;N[h>>2]=N[g>>2];N[h+4>>2]=N[g+4>>2];N[h+8>>2]=N[g+8>>2];g=d|1;h=i+(g<<4)|0;g=m+P(g,k)|0;N[h>>2]=N[g>>2];N[h+4>>2]=N[g+4>>2];N[h+8>>2]=N[g+8>>2];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break f}f=i+(d<<4)|0;d=m+P(d,k)|0;N[f>>2]=N[d>>2];N[f+4>>2]=N[d+4>>2];N[f+8>>2]=N[d+8>>2]}ia[J[J[c>>2]+20>>2]](c,n,3626,1497453121,J[n+8>>2]);break d;case 1:break e;default:break d}}d=J[e+4>>2];if(!d){break d}n=ia[J[J[c>>2]+16>>2]](c,32,d)|0;i=J[n+8>>2];J[l+4>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e+4>>2];g:{if((j|0)<=0){break g}d=0;k=J[e+8>>2];m=J[e+28>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<5)|0;g=m+P(d,k)|0;O[h>>3]=O[g>>3];O[h+8>>3]=O[g+8>>3];O[h+16>>3]=O[g+16>>3];g=d|1;h=i+(g<<5)|0;g=m+P(g,k)|0;O[h>>3]=O[g>>3];O[h+8>>3]=O[g+8>>3];O[h+16>>3]=O[g+16>>3];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break g}f=i+(d<<5)|0;d=m+P(d,k)|0;O[f>>3]=O[d>>3];O[f+8>>3]=O[d+8>>3];O[f+16>>3]=O[d+16>>3]}ia[J[J[c>>2]+20>>2]](c,n,3998,1497453121,J[n+8>>2])}ia[J[J[a>>2]+24>>2]](a,p);l=l+32|0;p=p+1|0;if((r|0)!=(p|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,q,3226,1497453121,J[q+8>>2])}N[b+4>>2]=N[a+4>>2];N[b+8>>2]=N[a+8>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];ga=e+32|0;return 4081}function vo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=ga-752|0;ga=g;J[g+748>>2]=a;N[g+744>>2]=b;N[g+740>>2]=c;J[g+736>>2]=d;J[g+732>>2]=e;J[g+728>>2]=f;a=J[g+748>>2];J[g+724>>2]=30;d=ga-16|0;J[d+12>>2]=J[g+732>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+704>>2]=J[d>>2];J[g+708>>2]=e;e=J[d+12>>2];J[g+712>>2]=J[d+8>>2];J[g+716>>2]=e;N[g+684>>2]=0;N[g+680>>2]=0;N[g+676>>2]=0;d=g+688|0;na(d,g+684|0,g+680|0,g+676|0);N[g+672>>2]=N[g+740>>2]*Q(.5);b=N[g+672>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+736>>2]<<2)>>2]=b;N[g+652>>2]=0;N[g+648>>2]=0;N[g+644>>2]=0;d=g+656|0;na(d,g+652|0,g+648|0,g+644|0);b=N[g+744>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=b;N[g+620>>2]=0;N[g+616>>2]=0;N[g+612>>2]=0;d=g+624|0;na(d,g+620|0,g+616|0,g+612|0);b=N[g+744>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+2|0)%3<<2)>>2]=b;N[g+588>>2]=0;N[g+584>>2]=0;N[g+580>>2]=0;d=g+592|0;na(d,g+588|0,g+584|0,g+580|0);b=Q(-N[g+672>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+736>>2]<<2)>>2]=b;J[g+576>>2]=0;while(1){if(J[g+576>>2]<360){b=Q(Sa(Q(Q(J[g+576>>2])*Q(.01745329238474369)))*N[g+744>>2]);e=ga-16|0;d=g+592|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+576>>2])*Q(.01745329238474369)))*N[g+744>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+2|0)%3<<2)>>2]=b;e=ga-16|0;J[e+12>>2]=J[g+732>>2];f=g+544|0;wa(f,J[e+12>>2],g+688|0);e=g+560|0;h=g+704|0;va(e,h,f);f=ga-16|0;J[f+12>>2]=J[g+732>>2];i=g+512|0;wa(i,J[f+12>>2],d);d=g+528|0;va(d,h,i);ia[J[J[a>>2]+8>>2]](a,e,d,J[g+728>>2]);J[g+576>>2]=J[g+724>>2]+J[g+576>>2];continue}break}d=ga-16|0;J[d+12>>2]=J[g+732>>2];f=g+480|0;e=J[d+12>>2];d=g+688|0;wa(f,e,d);h=g+496|0;e=g+704|0;va(h,e,f);f=ga-16|0;J[f+12>>2]=J[g+732>>2];f=J[f+12>>2];i=g+416|0;$b(i,d);k=g+432|0;j=i;i=g+656|0;va(k,j,i);j=g+448|0;wa(j,f,k);f=g+464|0;va(f,e,j);ia[J[J[a>>2]+8>>2]](a,h,f,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+384|0;wa(h,J[f+12>>2],d);f=g+400|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];k=g+320|0;$b(k,d);j=g+336|0;Ma(j,k,i);i=g+352|0;wa(i,h,j);h=g+368|0;va(h,e,i);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+288|0;wa(h,J[f+12>>2],d);f=g+304|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];i=g+224|0;$b(i,d);k=g+240|0;j=i;i=g+624|0;va(k,j,i);j=g+256|0;wa(j,h,k);h=g+272|0;va(h,e,j);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+192|0;wa(h,J[f+12>>2],d);f=g+208|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];k=g+128|0;$b(k,d);j=g+144|0;Ma(j,k,i);i=g+160|0;wa(i,h,j);h=g+176|0;va(h,e,i);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);N[g+108>>2]=0;N[g+104>>2]=0;N[g+100>>2]=0;f=g+112|0;na(f,g+108|0,g+104|0,g+100|0);h=ga-16|0;J[h+12>>2]=f;N[J[h+12>>2]+(J[g+736>>2]<<2)>>2]=1;N[g+76>>2]=0;N[g+72>>2]=0;N[g+68>>2]=0;h=g+80|0;na(h,g+76|0,g+72|0,g+68|0);i=ga-16|0;J[i+12>>2]=h;N[J[i+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=1;i=ga-16|0;J[i+12>>2]=J[g+732>>2];k=g+32|0;wa(k,J[i+12>>2],d);d=g+48|0;Ma(d,e,k);e=ga-16|0;J[e+12>>2]=J[g+732>>2];i=g+16|0;wa(i,J[e+12>>2],f);e=ga-16|0;J[e+12>>2]=J[g+732>>2];wa(g,J[e+12>>2],h);b=N[g+744>>2];ia[J[J[a>>2]+60>>2]](a,d,i,g,b,b,Q(0),Q(6.2831854820251465),J[g+728>>2],0,Q(10));ga=g+752|0}
  function VF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0;e=ga-192|0;ga=e;a:{if(N[J[a+4>>2]+752>>2]<d){break a}o=N[c+8>>2];k=Q(Q(N[b+8>>2]*d)+o);r=N[c+4>>2];m=Q(Q(N[b+4>>2]*d)+r);s=N[c>>2];l=Q(Q(N[b>>2]*d)+s);h=J[J[a+8>>2]+8>>2];n=J[a+4>>2];f=J[n+740>>2];p=(h|0)==(f|0);b:{if(!p){f=J[J[a+12>>2]+8>>2];g=Q(k-N[f+60>>2]);i=Q(l-N[f+52>>2]);j=Q(m-N[f+56>>2]);t=Q(Q(N[f+44>>2]*g)+Q(Q(N[f+12>>2]*i)+Q(j*N[f+28>>2])));u=Q(Q(N[f+40>>2]*g)+Q(Q(N[f+8>>2]*i)+Q(j*N[f+24>>2])));g=Q(Q(N[f+36>>2]*g)+Q(Q(N[f+4>>2]*i)+Q(j*N[f+20>>2])));break b}g=Q(k-N[f+60>>2]);i=Q(l-N[f+52>>2]);j=Q(m-N[f+56>>2]);t=Q(Q(N[f+44>>2]*g)+Q(Q(N[f+12>>2]*i)+Q(j*N[f+28>>2])));u=Q(Q(N[f+40>>2]*g)+Q(Q(N[f+8>>2]*i)+Q(j*N[f+24>>2])));h=J[J[a+12>>2]+8>>2];g=Q(Q(N[f+36>>2]*g)+Q(Q(N[f+4>>2]*i)+Q(j*N[f+20>>2])))}v=N[h+20>>2];w=N[h+36>>2];x=N[h+40>>2];y=N[h+8>>2];z=N[h+24>>2];i=N[h+44>>2];j=N[h+60>>2];A=N[h+12>>2];B=N[h+52>>2];C=N[h+28>>2];D=N[h+56>>2];E=N[h+4>>2];J[e+36>>2]=0;q=i;i=Q(o-j);j=Q(s-B);o=Q(r-D);N[e+32>>2]=Q(q*i)+Q(Q(A*j)+Q(C*o));N[e+28>>2]=Q(x*i)+Q(Q(y*j)+Q(o*z));J[e+20>>2]=0;N[e+16>>2]=t;N[e+12>>2]=u;N[e+8>>2]=g;N[e+24>>2]=Q(w*i)+Q(Q(E*j)+Q(o*v));h=J[b+12>>2];J[e+80>>2]=J[b+8>>2];J[e+84>>2]=h;h=J[b>>2];b=J[b+4>>2];J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+148>>2]=0;J[e+152>>2]=0;J[e+156>>2]=0;N[e+60>>2]=m;N[e- -64>>2]=k;J[e+68>>2]=0;J[e+72>>2]=h;J[e+76>>2]=b;J[e+128>>2]=0;J[e+132>>2]=0;H[e+124|0]=0;J[e+120>>2]=0;J[e+100>>2]=0;J[e+92>>2]=0;J[e+96>>2]=0;N[e+88>>2]=d;N[e+56>>2]=l;b=J[c+12>>2];J[e+48>>2]=J[c+8>>2];J[e+52>>2]=b;b=J[c+4>>2];J[e+40>>2]=J[c>>2];J[e+44>>2]=b;f=J[n+748>>2];c:{if((f|0)<=0){h=-1;break c}d=N[e+16>>2];m=N[e+12>>2];l=N[e+8>>2];k=N[n+752>>2];k=Q(k*k);b=0;h=-1;while(1){c=n+P(b,184)|0;g=Q(N[c+12>>2]-d);i=Q(g*g);g=Q(N[c+4>>2]-l);q=Q(g*g);g=Q(N[c+8>>2]-m);g=Q(i+Q(q+Q(g*g)));c=g<k;k=c?g:k;h=c?b:h;b=b+1|0;if((f|0)!=(b|0)){continue}break}}b=J[J[a+8>>2]+8>>2];c=J[J[a+12>>2]+8>>2];N[e+92>>2]=T(Q(U(Q(N[b+224>>2]*N[c+224>>2]),Q(-10))),Q(10));N[e+100>>2]=N[b+228>>2]*N[c+228>>2];N[e+96>>2]=T(Q(U(Q(N[b+232>>2]*N[c+232>>2]),Q(-10))),Q(10));d=N[e+80>>2];d:{if(Q(R(d))>Q(.7071067690849304)){l=N[e+76>>2];k=Q(Q(l*l)+Q(d*d));m=Q(Q(1)/Q(Y(k)));g=Q(k*m);i=Q(m*Q(-d));j=N[e+72>>2];k=Q(i*j);d=Q(l*m);l=Q(d*Q(-j));j=Q(0);break d}g=N[e+72>>2];l=N[e+76>>2];k=Q(Q(g*g)+Q(l*l));m=Q(Q(1)/Q(Y(k)));k=Q(k*m);j=Q(m*Q(-l));l=Q(d*j);i=Q(g*m);g=Q(i*Q(-d));d=Q(0)}N[e+184>>2]=k;N[e+180>>2]=l;N[e+168>>2]=d;N[e+164>>2]=i;N[e+176>>2]=g;N[e+160>>2]=j;e:{if(!p){c=a+16|0;f=a+20|0;n=a+28|0;b=a+24|0;break e}c=a+20|0;f=a+16|0;n=a+24|0;b=a+28|0}f=J[f>>2];c=J[c>>2];n=J[n>>2];J[e+116>>2]=J[b>>2];J[e+112>>2]=n;J[e+108>>2]=c;J[e+104>>2]=f;b=J[a+4>>2];f:{if((h|0)>=0){b=b+P(h,184)|0;c=J[b+116>>2];f=J[b+124>>2];n=J[b+128>>2];d=N[b+132>>2];F=J[b+152>>2];sa(b+4|0,e+8|0,184);J[b+152>>2]=F;N[b+132>>2]=d;J[b+124>>2]=f;J[b+128>>2]=n;J[b+116>>2]=c;break f}h=ul(b,e+8|0)}f=J[7403];if(!f){break a}c=J[a+8>>2];b=J[a+12>>2];if(!(K[J[b+8>>2]+204|0]&8?1:K[J[c+8>>2]+204|0]&8)){break a}ia[f|0]((J[a+4>>2]+P(h,184)|0)+4|0,p?c:b,J[e+104>>2],J[e+112>>2],p?b:c,J[e+108>>2],J[e+116>>2])|0}ga=e+192|0}function yz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0);d=ga-80|0;ga=d;l=a+4|0;m=a+16|0;a:{b:{e=J[a+8>>2];if(!e){e=J[l>>2];if(e){break b}b=Q(0);break a}b=N[e+332>>2];h=N[a+172>>2];f=N[a+168>>2];g=N[e+336>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+328>>2];k=N[a+164>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+316>>2];j=N[e+312>>2];b=N[e+320>>2];break a}b=N[e+336>>2];h=N[a+172>>2];f=N[a+168>>2];g=N[e+340>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+332>>2];k=N[a+164>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+320>>2];j=N[e+316>>2];b=N[e+324>>2]}r=Q(b+f);s=Q(h+g);t=Q(j+i);c:{d:{e=J[a+20>>2];if(!e){e=J[m>>2];if(e){break d}h=Q(0);j=Q(0);i=Q(0);g=Q(0);f=Q(0);b=Q(0);break c}b=N[e+332>>2];h=N[a+188>>2];f=N[a+184>>2];g=N[e+336>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+328>>2];k=N[a+180>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+316>>2];j=N[e+312>>2];b=N[e+320>>2];break c}b=N[e+336>>2];h=N[a+188>>2];f=N[a+184>>2];g=N[e+340>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+332>>2];k=N[a+180>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+320>>2];j=N[e+316>>2];b=N[e+324>>2]}k=N[a+200>>2];o=N[a+204>>2];p=N[a+196>>2];e=d- -64|0;J[e>>2]=0;J[e+4>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;H[d+72|0]=1;e=J[a+84>>2];J[d+48>>2]=J[a+80>>2];J[d+52>>2]=e;e=J[a+76>>2];J[d+40>>2]=J[a+72>>2];J[d+44>>2]=e;b=Q(r-Q(b+f));j=Q(t-Q(j+i));h=Q(s-Q(h+g));i=Q(Q(o*b)+Q(Q(p*j)+Q(k*h)));e:{if(!(i<Q(0))){b=N[d+48>>2];h=N[d+44>>2];i=N[d+40>>2];break e}f=Q(o*i);g=f;b=Q(b-f);f=N[a+212>>2];b=Q(Q(g+Q(b*f))+N[d+48>>2]);g=Q(k*i);h=Q(Q(g+Q(Q(h-g)*f))+N[d+44>>2]);i=Q(p*i);i=Q(N[d+40>>2]+Q(i+Q(Q(j-i)*f)))}e=a+164|0;q=a+180|0;j=N[a+112>>2];k=N[a+108>>2];g=N[a+128>>2];o=N[a+120>>2];p=N[a+124>>2];f=N[a+144>>2];r=N[a+136>>2];s=N[a+140>>2];t=N[a+104>>2];J[d+52>>2]=0;f=Q(Q(Q(f*b)+Q(Q(r*i)+Q(h*s)))*c);N[d+48>>2]=f;g=Q(Q(Q(g*b)+Q(Q(o*i)+Q(h*p)))*c);N[d+44>>2]=g;b=Q(Q(Q(j*b)+Q(Q(t*i)+Q(k*h)))*c);N[d+40>>2]=b;n=J[a+4>>2];f:{if((n|0)==J[a+16>>2]){if(b!=b|g!=g|(f!=f|N[n+368>>2]>Q(Y(Q(Q(f*f)+Q(Q(b*b)+Q(g*g))))))){break f}c=N[n+372>>2];J[d+28>>2]=0;i=Q(c*Q(-0));N[d+24>>2]=i;N[d+20>>2]=i;a=J[d+72>>2];J[d+32>>2]=a;J[d+12>>2]=0;N[d+16>>2]=i;N[d+8>>2]=c*Q(-f);N[d+4>>2]=c*Q(-g);N[d>>2]=c*Q(-b);if(a&1){re(l,d,e);a=K[d+32|0]}if(a&2){zc(l,d+16|0,e)}b=N[J[l>>2]+372>>2];a=J[d+52>>2];J[d+8>>2]=J[d+48>>2];J[d+12>>2]=a;a=J[d+60>>2];J[d+16>>2]=J[d+56>>2];J[d+20>>2]=a;J[d+32>>2]=J[d+72>>2];a=d- -64|0;l=J[a+4>>2];J[d+24>>2]=J[a>>2];J[d+28>>2]=l;N[d+8>>2]=b*N[d+8>>2];N[d+16>>2]=b*N[d+16>>2];a=J[d+44>>2];J[d>>2]=J[d+40>>2];J[d+4>>2]=a;N[d>>2]=b*N[d>>2];N[d+4>>2]=b*N[d+4>>2];N[d+20>>2]=b*N[d+20>>2];N[d+24>>2]=b*N[d+24>>2];a=K[d+32|0];if(a&1){re(m,d,q);a=K[d+32|0]}if(!(a&2)){break f}zc(m,d+16|0,q);break f}a=J[d+52>>2];J[d+8>>2]=J[d+48>>2];J[d+12>>2]=a;a=J[d+60>>2];J[d+16>>2]=J[d+56>>2];J[d+20>>2]=a;a=d- -64|0;n=J[a+4>>2];J[d+24>>2]=J[a>>2];J[d+28>>2]=n;J[d+32>>2]=J[d+72>>2];N[d+8>>2]=-N[d+8>>2];N[d+16>>2]=-N[d+16>>2];a=J[d+44>>2];J[d>>2]=J[d+40>>2];J[d+4>>2]=a;N[d>>2]=-N[d>>2];N[d+4>>2]=-N[d+4>>2];J[d+12>>2]=0;b=N[d+20>>2];c=N[d+24>>2];J[d+28>>2]=0;N[d+24>>2]=-c;N[d+20>>2]=-b;a=K[d+32|0];if(a&1){re(l,d,e);a=K[d+32|0]}if(a&2){zc(l,d+16|0,e)}re(m,d+40|0,q);if(!(K[d+72|0]&2)){break f}zc(m,d+56|0,q)}ga=d+80|0}function Hw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=0,p=0;l=ga-16|0;ga=l;J[l+12>>2]=a;J[l+8>>2]=b;J[l+4>>2]=c;c=ra(128);n=J[l+12>>2];o=J[l+8>>2];g=J[l+4>>2];b=0;J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;H[c+84|0]=0;J[c+76>>2]=-1082130432;J[c+80>>2]=0;J[c+68>>2]=-1082130432;J[c+72>>2]=-1082130432;J[c+60>>2]=1065353216;J[c+64>>2]=0;J[c+52>>2]=1065353216;J[c+56>>2]=1065353216;J[c>>2]=14084;H[c+104|0]=1;J[c>>2]=15264;J[c+100>>2]=0;H[c+124|0]=1;J[c+92>>2]=0;J[c+96>>2]=0;J[c+120>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+4>>2]=9;if((g|0)>0){J[8369]=J[8369]+1;a=ia[J[6782]](g<<4,16)|0;d=J[c+92>>2];a:{if((d|0)<=0){break a}if((d|0)!=1){p=d&-2;while(1){f=b<<4;i=f+a|0;e=f+J[c+100>>2]|0;k=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=k;k=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=k;e=f|16;f=e+a|0;e=e+J[c+100>>2]|0;i=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=i;i=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=i;b=b+2|0;h=h+2|0;if((p|0)!=(h|0)){continue}break}}if(!(d&1)){break a}b=b<<4;d=b+a|0;b=b+J[c+100>>2]|0;e=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=e;e=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=e}b=J[c+100>>2];if(!(b?!b|!K[c+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+100>>2]=a;H[c+104|0]=1;J[c+96>>2]=g;d=J[c+112>>2]}J[c+92>>2]=g;if((d|0)<(g|0)){b:{if(J[c+116>>2]>=(g|0)){j=J[c+120>>2];break b}if(g){J[8369]=J[8369]+1;j=ia[J[6782]](g<<2,16)|0;a=J[c+112>>2]}else{a=d}e=J[c+120>>2];c:{d:{if((a|0)>0){i=0;b=0;if(a-1>>>0>=3){p=a&-4;h=0;while(1){f=b<<2;N[f+j>>2]=N[e+f>>2];k=f|4;N[k+j>>2]=N[e+k>>2];k=f|8;N[k+j>>2]=N[e+k>>2];f=f|12;N[f+j>>2]=N[e+f>>2];b=b+4|0;h=h+4|0;if((p|0)!=(h|0)){continue}break}}a=a&3;if(!a){break d}while(1){h=b<<2;N[h+j>>2]=N[e+h>>2];b=b+1|0;i=i+1|0;if((a|0)!=(i|0)){continue}break}break d}if(e){break d}break c}if(e?K[c+124|0]:0){J[8370]=J[8370]+1;ia[J[6783]](e)}}J[c+120>>2]=j;H[c+124|0]=1;J[c+116>>2]=g}qa((d<<2)+j|0,0,g-d<<2)}J[c+112>>2]=g;e:{if((g|0)<=0){break e}b=0;if((g|0)!=1){e=g&-2;j=0;while(1){a=b<<4;d=a+J[c+100>>2]|0;a=a+n|0;h=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=h;h=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=h;a=b<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2];h=b|1;a=h<<4;d=a+J[c+100>>2]|0;a=a+n|0;f=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=f;f=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=f;a=h<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2];b=b+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(g&1)){break e}a=b<<4;d=a+J[c+100>>2]|0;a=a+n|0;g=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=g;g=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=g;a=b<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2]}a=ga-96|0;ga=a;H[c+84|0]=1;if(!K[29728]){J[7409]=0;J[7410]=0;J[7408]=1065353216;J[7411]=0;J[7412]=0;J[7414]=0;J[7415]=0;J[7413]=1065353216;J[7416]=0;J[7417]=0;J[7421]=0;J[7422]=0;J[7420]=-1082130432;J[7418]=1065353216;J[7419]=0;J[7423]=0;J[7424]=0;J[7426]=0;J[7427]=0;J[7425]=-1082130432;J[7428]=0;J[7429]=0;J[7430]=-1082130432;J[7431]=0;H[29728]=1}a=qa(a,0,96);ia[J[J[c>>2]+76>>2]](c,29632,a,6);m=N[c+44>>2];N[c+68>>2]=N[a>>2]+m;N[c+52>>2]=N[a+48>>2]-m;N[c+72>>2]=m+N[a+20>>2];N[c+56>>2]=N[a+68>>2]-m;N[c+76>>2]=m+N[a+40>>2];N[c+60>>2]=N[a+88>>2]-m;ga=a+96|0;ga=l+16|0;return c|0}function Ue(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);e=ga-48|0;ga=e;a:{b:{switch(J[b+4>>2]){case 8:J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;break a;case 0:d=N[b+28>>2];f=N[b+32>>2];h=N[b+36>>2];i=N[c>>2];g=N[c+4>>2];l=N[c+8>>2];J[a+12>>2]=0;N[a+8>>2]=l>=Q(0)?h:Q(-h);N[a+4>>2]=g>=Q(0)?f:Q(-f);N[a>>2]=i>=Q(0)?d:Q(-d);break a;case 1:d=N[c+8>>2];f=N[c>>2];h=N[c+4>>2];i=Q(Q(d*N[b- -64>>2])+Q(Q(f*N[b+56>>2])+Q(h*N[b+60>>2])));g=Q(Q(d*N[b+80>>2])+Q(Q(f*N[b+72>>2])+Q(h*N[b+76>>2])));c=i<g;b=(b+56|0)+((Q(Q(d*N[b+96>>2])+Q(Q(f*N[b+88>>2])+Q(h*N[b+92>>2])))>(c?g:i)?2:c)<<4)|0;c=J[b+4>>2];j=J[b>>2];d=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=d;J[a>>2]=j;J[a+4>>2]=c;break a;case 13:k=J[b+40>>2];J[e+40>>2]=J[b+36>>2];J[e+44>>2]=k;k=J[b+32>>2];J[e+32>>2]=J[b+28>>2];J[e+36>>2]=k;N[e+16>>2]=N[c>>2];f=N[c+4>>2];N[e+20>>2]=f;d=N[c+8>>2];J[e+28>>2]=0;N[e+24>>2]=d;c=1;k=2;c:{d:{e:{b=J[b+52>>2];switch(b-1|0){case 0:break d;case 1:break e;default:break c}}k=1;d=f}c=0;j=b}n=b<<2;b=e+32|0;f=N[n+b>>2];n=b;b=c<<2;h=N[(n|b)>>2];i=N[(b|e+16)>>2];g=Q(Y(Q(Q(i*i)+Q(d*d))));f:{if(g!=Q(0)){h=Q(h/g);N[(c<<2|e)>>2]=i*h;b=j<<2;N[b+e>>2]=N[b+(e+16|0)>>2]<Q(0)?Q(-f):f;N[(k<<2)+e>>2]=d*h;break f}N[(c<<2|e)>>2]=h;b=j<<2;N[b+e>>2]=N[b+(e+16|0)>>2]<Q(0)?Q(-f):f;J[(k<<2)+e>>2]=0}d=N[e>>2];b=J[e+8>>2];J[a+4>>2]=J[e+4>>2];J[a+8>>2]=b;J[a+12>>2]=0;N[a>>2]=d;break a;case 10:k=b+28|0;j=J[b+52>>2];n=j<<2;p=N[k+n>>2];o=N[k+((j+2|0)%3<<2)>>2];d=Q(1);f=N[c+8>>2];h=N[c>>2];i=N[c+4>>2];g=Q(Q(f*f)+Q(Q(h*h)+Q(i*i)));if(!(g<Q(9999999747378752e-20))){d=Q(Q(1)/Q(Y(g)));q=Q(f*d);r=Q(i*d);d=Q(h*d)}J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;N[n+(e+32|0)>>2]=p;f=Q(-0xde0b6b000000000);h=Q(0);i=Q(0);s=Q(o*q);m=N[b+44>>2];t=Q(q*m);g=Q(Q(s+N[e+40>>2])-t);u=Q(o*d);v=Q(d*m);l=Q(Q(u+N[e+32>>2])-v);w=Q(o*r);x=Q(r*m);o=Q(Q(w+N[e+36>>2])-x);m=Q(Q(q*g)+Q(Q(d*l)+Q(r*o)));if(m>Q(-0xde0b6b000000000)){h=o;i=g;y=l;f=m}J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;N[(e+32|0)+(j<<2)>>2]=-p;g=N[e+40>>2];l=N[e+32>>2];o=N[e+36>>2];J[a+12>>2]=0;m=f;f=Q(Q(s+g)-t);p=d;d=Q(Q(u+l)-v);g=Q(Q(w+o)-x);b=m<Q(Q(q*f)+Q(Q(p*d)+Q(r*g)));N[a+8>>2]=b?f:i;N[a+4>>2]=b?g:h;N[a>>2]=b?d:y;break a;case 5:f=N[b+12>>2];h=N[b+20>>2];i=N[b+16>>2];k=J[b+92>>2];j=-1;n=J[b+96>>2];if((n|0)>0){g=Q(N[c>>2]*f);l=Q(N[c+8>>2]*h);o=Q(N[c+4>>2]*i);b=0;d=Q(-3.4028234663852886e38);while(1){c=k+(b<<4)|0;m=Q(Q(N[c+8>>2]*l)+Q(Q(N[c>>2]*g)+Q(o*N[c+4>>2])));c=m>d;d=c?m:d;j=c?b:j;b=b+1|0;if((n|0)!=(b|0)){continue}break}}b=k+(j<<4)|0;d=N[b>>2];g=N[b+4>>2];l=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=h*l;N[a+4>>2]=i*g;N[a>>2]=f*d;break a;case 4:f=N[b+12>>2];h=N[b+20>>2];i=N[b+16>>2];k=J[b+104>>2];j=-1;n=J[b+96>>2];if((n|0)>0){g=Q(N[c>>2]*f);l=Q(N[c+8>>2]*h);o=Q(N[c+4>>2]*i);b=0;d=Q(-3.4028234663852886e38);while(1){c=k+(b<<4)|0;m=Q(Q(N[c+8>>2]*l)+Q(Q(N[c>>2]*g)+Q(o*N[c+4>>2])));c=m>d;d=c?m:d;j=c?b:j;b=b+1|0;if((n|0)!=(b|0)){continue}break}}b=k+(j<<4)|0;d=N[b>>2];g=N[b+4>>2];l=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=h*l;N[a+4>>2]=i*g;N[a>>2]=f*d;break a;default:break b}}ia[J[J[b>>2]+68>>2]](a,b,c)}ga=e+48|0}function Pq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);k=ga-32|0;ga=k;J[k+28>>2]=a;J[k+24>>2]=b;J[k+20>>2]=c;J[k+16>>2]=d;N[k+12>>2]=e;N[k+8>>2]=f;J[k+4>>2]=g;H[k+3|0]=h;l=J[k+28>>2];c=J[k+24>>2];b=J[k+20>>2];a=J[k+16>>2];n=N[k+12>>2];o=N[k+8>>2];h=H[k+3|0]&1;i=ga-288|0;ga=i;j=J[k+4>>2];m=N[j+16>>2];f=N[j+20>>2];e=N[j+12>>2];g=J[j+4>>2];d=J[j>>2];N[i+224>>2]=N[j+8>>2];J[i+216>>2]=d;J[i+220>>2]=g;N[i+212>>2]=o;N[i+208>>2]=e;N[i+204>>2]=n;d=J[c+12>>2];J[i+164>>2]=J[c+8>>2];J[i+168>>2]=d;d=J[c+4>>2];J[i+156>>2]=J[c>>2];J[i+160>>2]=d;c=J[b+12>>2];J[i+180>>2]=J[b+8>>2];J[i+184>>2]=c;c=J[b+4>>2];J[i+172>>2]=J[b>>2];J[i+176>>2]=c;b=J[a+12>>2];J[i+196>>2]=J[a+8>>2];J[i+200>>2]=b;b=J[a+4>>2];J[i+188>>2]=J[a>>2];J[i+192>>2]=b;H[i+260|0]=h;N[i+248>>2]=f;J[i+244>>2]=1036831949;J[i+236>>2]=0;J[i+240>>2]=0;N[i+228>>2]=m;J[i+252>>2]=0;J[i+256>>2]=0;J[i+232>>2]=0;h=0;g=0;d=J[l+136>>2];a:{if((d|0)!=J[l+140>>2]){break a}c=d?d<<1:1;if((c|0)<=(d|0)){break a}if(c){J[8369]=J[8369]+1;h=ia[J[6782]](P(c,284),16)|0;d=J[l+136>>2]}if((d|0)>0){while(1){a=P(g,284);j=a+J[l+144>>2]|0;b=sa(a+h|0,j,92);a=J[j+104>>2];J[b+100>>2]=J[j+100>>2];J[b+104>>2]=a;a=J[j+96>>2];J[b+92>>2]=J[j+92>>2];J[b+96>>2]=a;a=J[j+120>>2];J[b+116>>2]=J[j+116>>2];J[b+120>>2]=a;a=J[j+112>>2];J[b+108>>2]=J[j+108>>2];J[b+112>>2]=a;a=J[j+136>>2];J[b+132>>2]=J[j+132>>2];J[b+136>>2]=a;a=J[j+128>>2];J[b+124>>2]=J[j+124>>2];J[b+128>>2]=a;a=J[j+144>>2];J[b+140>>2]=J[j+140>>2];J[b+144>>2]=a;a=J[j+152>>2];J[b+148>>2]=J[j+148>>2];J[b+152>>2]=a;sa(b+156|0,j+156|0,128);g=g+1|0;if((g|0)!=(d|0)){continue}break}}a=J[l+144>>2];if(!(a?!a|!K[l+148|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+144>>2]=h;H[l+148|0]=1;J[l+140>>2]=c;d=J[l+136>>2]}b=sa(J[l+144>>2]+P(d,284)|0,i,92);a=J[i+104>>2];J[b+100>>2]=J[i+100>>2];J[b+104>>2]=a;a=J[i+96>>2];J[b+92>>2]=J[i+92>>2];J[b+96>>2]=a;a=J[i+120>>2];J[b+116>>2]=J[i+116>>2];J[b+120>>2]=a;a=J[i+112>>2];J[b+108>>2]=J[i+108>>2];J[b+112>>2]=a;a=J[i+128>>2];J[b+124>>2]=J[i+124>>2];J[b+128>>2]=a;a=J[i+136>>2];J[b+132>>2]=J[i+132>>2];J[b+136>>2]=a;a=J[i+152>>2];J[b+148>>2]=J[i+148>>2];J[b+152>>2]=a;a=J[i+144>>2];J[b+140>>2]=J[i+140>>2];J[b+144>>2]=a;sa(b+156|0,i+156|0,128);J[l+136>>2]=J[l+136>>2]+1;b=J[l+144>>2]+P(J[l+136>>2],284)|0;H[b-200|0]=0;a=J[l+116>>2];m=N[a+52>>2];p=N[a+12>>2];q=N[a+8>>2];f=N[a+56>>2];r=N[a+28>>2];s=N[a+20>>2];t=N[a+24>>2];e=N[a+60>>2];u=N[a+44>>2];v=N[a+36>>2];w=N[a+40>>2];x=N[a+4>>2];J[b-236>>2]=0;y=e;n=N[b-120>>2];o=N[b-128>>2];e=N[b-124>>2];N[b-240>>2]=y+Q(Q(u*n)+Q(Q(v*o)+Q(w*e)));N[b-244>>2]=f+Q(Q(n*r)+Q(Q(o*s)+Q(t*e)));N[b-248>>2]=m+Q(Q(n*p)+Q(Q(o*x)+Q(q*e)));J[b-220>>2]=0;m=N[b-104>>2];f=N[b-112>>2];e=N[b-108>>2];N[b-224>>2]=Q(u*m)+Q(Q(v*f)+Q(w*e));N[b-228>>2]=Q(r*m)+Q(Q(s*f)+Q(t*e));N[b-232>>2]=Q(p*m)+Q(Q(x*f)+Q(q*e));m=N[b-88>>2];f=N[b-96>>2];e=N[b-92>>2];J[b-204>>2]=0;N[b-208>>2]=Q(u*m)+Q(Q(v*f)+Q(w*e));N[b-212>>2]=Q(r*m)+Q(Q(s*f)+Q(t*e));N[b-216>>2]=Q(p*m)+Q(Q(x*f)+Q(q*e));pg(l,J[l+136>>2]-1|0,0);ga=i+288|0;ga=k+32|0;return b-284|0}function De(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=0,A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=0,H=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0;z=J[i+24>>2];H=K[b+44|0];G=J[b+56>>2];a:{if(!(G?1:H)){break a}s=J[(l?20:16)+i>>2];w=J[(l?12:8)+i>>2];j=P(j,z);A=j<<2;N[w+A>>2]=N[k>>2];z=j+1|0;B=z<<2;N[B+w>>2]=N[k+4>>2];U=w;w=j+2|0;C=w<<2;N[U+C>>2]=N[k+8>>2];N[s+A>>2]=-N[k>>2];N[s+B>>2]=-N[k+4>>2];N[s+C>>2]=-N[k+8>>2];if(!l){o=N[a+1176>>2];b:{if(K[a+1301|0]){D=Q(N[a+1184>>2]-N[d+56>>2]);n=N[k+8>>2];q=Q(o-N[d+48>>2]);o=N[k>>2];u=Q(N[a+1180>>2]-N[d+52>>2]);r=N[k+4>>2];p=Q(Q(D*n)+Q(Q(q*o)+Q(u*r)));I=Q(N[a+1120>>2]-N[c+56>>2]);L=Q(N[a+1112>>2]-N[c+48>>2]);M=Q(N[a+1116>>2]-N[c+52>>2]);t=Q(Q(I*n)+Q(Q(o*L)+Q(r*M)));O=Q(o*t);x=Q(N[b+52>>2]-N[b+48>>2]);v=Q(o*p);y=Q(Q(O+Q(o*x))-v);R=Q(r*t);E=Q(r*p);F=Q(Q(R+Q(r*x))-E);v=Q(q-v);q=N[a+1276>>2];S=Q(v-Q(q*y));E=Q(Q(u-E)-Q(q*F));u=Q(Q(S*r)-Q(o*E));T=Q(n*t);p=Q(n*p);v=Q(Q(T+Q(n*x))-p);p=Q(Q(D-p)-Q(q*v));t=Q(Q(p*o)-Q(n*S));x=Q(Q(E*n)-Q(r*p));p=N[a+1272>>2];D=Q(Q(L-O)+Q(p*y));F=Q(Q(M-R)+Q(p*F));y=Q(Q(D*r)-Q(o*F));v=Q(Q(I-T)+Q(p*v));o=Q(Q(v*o)-Q(n*D));n=Q(Q(F*n)-Q(r*v));if(!(!K[a+1280|0]|m)){u=Q(q*u);t=Q(q*t);x=Q(q*x);y=Q(p*y);o=Q(p*o);n=Q(p*n)}c=j<<2;a=c+J[i+12>>2]|0;N[a+8>>2]=y;N[a+4>>2]=o;N[a>>2]=n;s=J[i+20>>2];N[c+s>>2]=-x;N[(z<<2)+s>>2]=-t;n=Q(-u);break b}r=N[c+48>>2];n=N[k>>2];m=J[i+12>>2];A=j<<2;B=a+1180|0;q=Q(N[B>>2]-N[c+52>>2]);p=N[k+8>>2];u=N[k+4>>2];C=a+1184|0;t=Q(N[C>>2]-N[c+56>>2]);N[m+A>>2]=Q(q*p)-Q(u*t);c=z<<2;o=Q(o-r);N[c+m>>2]=Q(t*n)-Q(p*o);N[m+(w<<2)>>2]=Q(o*u)-Q(n*q);o=N[d+48>>2];r=N[a+1176>>2];n=N[k>>2];s=J[i+20>>2];q=Q(N[B>>2]-N[d+52>>2]);p=N[k+8>>2];u=N[k+4>>2];t=Q(N[C>>2]-N[d+56>>2]);N[A+s>>2]=-Q(Q(q*p)-Q(u*t));o=Q(r-o);N[c+s>>2]=-Q(Q(t*n)-Q(p*o));n=Q(-Q(Q(o*u)-Q(n*q)))}N[(w<<2)+s>>2]=n}c:{d:{if(G){n=N[b+4>>2];o=N[b>>2];a=J[i+28>>2];J[a+(j<<2)>>2]=0;if(!(!H|n==o)){N[J[i+32>>2]+(j<<2)>>2]=N[b+28>>2]}n=Q(N[i>>2]*N[b+32>>2]);if(l){break d}c=a+(j<<2)|0;N[c>>2]=Q(n*N[b+48>>2])+N[c>>2];break c}a=j<<2;J[a+J[i+28>>2]>>2]=0;s=1;if(!H){break a}N[a+J[i+32>>2]>>2]=N[b+28>>2];n=N[b+8>>2];n=od(N[b+52>>2],N[b>>2],N[b+4>>2],l?n:Q(-n),Q(N[i>>2]*N[b+32>>2]));c=a+J[i+28>>2]|0;N[c>>2]=Q(n*N[b+8>>2])+N[c>>2];N[a+J[i+36>>2]>>2]=-N[b+12>>2];N[a+J[i+40>>2]>>2]=N[b+12>>2];return 1}c=a+(j<<2)|0;N[c>>2]=N[c>>2]-Q(n*N[b+48>>2])}c=j<<2;N[c+J[i+32>>2]>>2]=N[b+36>>2];if(N[b>>2]==N[b+4>>2]){J[c+J[i+36>>2]>>2]=-8388609;J[c+J[i+40>>2]>>2]=2139095039;return 1}s=1;d=(G|0)==1;N[c+J[i+36>>2]>>2]=d?Q(0):Q(-3.4028234663852886e38);N[c+J[i+40>>2]>>2]=d?Q(3.4028234663852886e38):Q(0);r=N[b+40>>2];if(!(r>Q(0))){break a}e:{if(l){n=N[k+8>>2];o=N[k>>2];q=N[k+4>>2];p=Q(Q(N[g+8>>2]*n)+Q(Q(N[g>>2]*o)+Q(N[g+4>>2]*q)));break e}h=f;n=N[k+8>>2];o=N[k>>2];q=N[k+4>>2];p=Q(Q(N[e+8>>2]*n)+Q(Q(N[e>>2]*o)+Q(N[e+4>>2]*q)))}n=Q(p-Q(Q(N[h+8>>2]*n)+Q(Q(N[h>>2]*o)+Q(q*N[h+4>>2]))));if((G|0)==1){if(!(n<Q(0))){break a}n=Q(n*Q(-r));a=a+(j<<2)|0;if(!(n>N[a>>2])){break a}N[a>>2]=n;return 1}if(!(n>Q(0))){break a}n=Q(n*Q(-r));a=a+(j<<2)|0;if(!(n<N[a>>2])){break a}N[a>>2]=n}return s}function lz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c=ga-400|0;ga=c;d=J[b+36>>2];b=c+344|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[c+396>>2]=d;J[c+344>>2]=21564;J[c+388>>2]=0;b=J[a+28>>2];e=J[b+4>>2];a:{if(K[d+376|0]?K[J[b+8>>2]+204|0]&3:0){break a}if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7388];J[7370]=J[7387];J[7371]=b;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;J[7376]=0;J[7377]=0;b=J[7390];J[7372]=J[7389];J[7373]=b;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[a+28>>2]}b=J[b+12>>2];J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=1065353216;J[c+76>>2]=0;if(!vl(c+344|0,e,b,c+72|0,c+288|0)){break a}J[c+92>>2]=0;J[c+96>>2]=0;J[c+84>>2]=0;J[c+88>>2]=0;J[c+76>>2]=0;J[c+80>>2]=0;H[c+224|0]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+56>>2]=d;J[c+72>>2]=21096;b=J[J[a+28>>2]+8>>2];J[c+48>>2]=b;J[c+40>>2]=0;d=J[b+236>>2];J[c+32>>2]=0;J[c+16>>2]=b;J[c+44>>2]=b&d<<30>>31;b=J[c+60>>2];J[c+24>>2]=J[c+56>>2];J[c+28>>2]=b;b=J[c+44>>2];J[c+8>>2]=J[c+40>>2];J[c+12>>2]=b;if(!dk(a,c+288|0,c+24|0,c+8|0,c+72|0)){break a}J[8369]=J[8369]+1;b=ia[J[6782]](216,16)|0;d=qa(b+4|0,0,212);J[b>>2]=21096;sa(d,c+72|4,100);d=J[c+188>>2];J[b+112>>2]=J[c+184>>2];J[b+116>>2]=d;d=J[c+180>>2];J[b+104>>2]=J[c+176>>2];J[b+108>>2]=d;d=J[c+204>>2];J[b+128>>2]=J[c+200>>2];J[b+132>>2]=d;d=J[c+196>>2];J[b+120>>2]=J[c+192>>2];J[b+124>>2]=d;d=J[c+212>>2];J[b+136>>2]=J[c+208>>2];J[b+140>>2]=d;d=J[c+220>>2];J[b+144>>2]=J[c+216>>2];J[b+148>>2]=d;H[b+152|0]=K[c+224|0];J[b+212>>2]=J[c+284>>2];d=J[c+280>>2];J[b+204>>2]=J[c+276>>2];J[b+208>>2]=d;d=J[c+272>>2];J[b+196>>2]=J[c+268>>2];J[b+200>>2]=d;d=J[c+264>>2];J[b+188>>2]=J[c+260>>2];J[b+192>>2]=d;d=J[c+256>>2];J[b+180>>2]=J[c+252>>2];J[b+184>>2]=d;d=J[c+248>>2];J[b+172>>2]=J[c+244>>2];J[b+176>>2]=d;d=J[c+240>>2];J[b+164>>2]=J[c+236>>2];J[b+168>>2]=d;d=J[c+232>>2];J[b+156>>2]=J[c+228>>2];J[b+160>>2]=d;d=J[a+24>>2];e=J[d+852>>2];b:{if((e|0)!=J[d+856>>2]){break b}j=e?e<<1:1;if((j|0)<=(e|0)){break b}if(j){J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;e=J[d+852>>2]}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){k=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[d+860>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[d+860>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[d+860>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[d+860>>2]>>2];g=g+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}f=e&3;if(!f){break c}while(1){k=g<<2;J[k+h>>2]=J[k+J[d+860>>2]>>2];g=g+1|0;m=m+1|0;if((f|0)!=(m|0)){continue}break}}g=J[d+860>>2];if(!(!g|!K[d+864|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[d+852>>2]}J[d+860>>2]=h;H[d+864|0]=1;J[d+856>>2]=j}J[J[d+860>>2]+(e<<2)>>2]=b;J[d+852>>2]=e+1;d=J[a+24>>2];d:{if(K[J[J[a+28>>2]+8>>2]+204|0]&3){N[b+64>>2]=N[d+344>>2]*N[b+64>>2];a=d+356|0;break d}N[b+64>>2]=N[d+340>>2]*N[b+64>>2];a=d+352|0}N[b+68>>2]=N[a>>2]*N[b+68>>2]}ga=c+400|0}function wn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=J[a+108>>2];if(d){ia[J[J[d>>2]+12>>2]](d,J[b+60>>2],c)}j=L[b+12>>1];b=a;h=J[a+60>>2];a=J[a+92>>2];if(!(ia[J[J[a>>2]+56>>2]](a)|0)){a=J[b+92>>2];ia[J[J[a>>2]+16>>2]](a,h+(j<<6)|0,c)}i=L[b+56>>1];d=J[b+60>>2];I[d+54>>1]=L[d+54>>1]-2;I[d+56>>1]=L[d+56>>1]-2;I[d+58>>1]=L[d+58>>1]-2;c=J[b+68>>2];k=h+(j<<6)|0;g=L[k+54>>1]<<2;a=c+g|0;e=L[b+6>>1];I[a>>1]=e;f=L[a+6>>1];if(f){g=d+(L[(c+g|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d>>1]=L[d>>1]-1;I[g+54>>1]=L[g+54>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+68>>2]}else{a=c}g=L[k+48>>1];f=g<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){g=J[b+60>>2]+(L[(d+(g<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d>>1]=L[d>>1]-1;I[g+48>>1]=L[g+48>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}g=(i<<1)-1|0;a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;c=J[b+72>>2];k=h+(j<<6)|0;d=L[k+56>>1]<<2;a=c+d|0;I[a>>1]=e;f=L[a+6>>1];if(f){i=J[b+60>>2]+(L[(c+d|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+2>>1]=L[d+2>>1]-1;I[i+56>>1]=L[i+56>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+72>>2]}else{a=c}i=L[k+50>>1];f=i<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){i=J[b+60>>2]+(L[(d+(i<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+2>>1]=L[d+2>>1]-1;I[i+50>>1]=L[i+50>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;c=J[b+76>>2];i=h+(j<<6)|0;d=L[i+58>>1]<<2;a=c+d|0;I[a>>1]=e;f=L[a+6>>1];if(f){h=J[b+60>>2]+(L[(c+d|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+4>>1]=L[d+4>>1]-1;I[h+58>>1]=L[h+58>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+76>>2]}else{a=c}h=L[i+52>>1];f=h<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){h=J[b+60>>2]+(L[(d+(h<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+4>>1]=L[d+4>>1]-1;I[h+52>>1]=L[h+52>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;I[(J[b+60>>2]+(j<<6)|0)+48>>1]=L[b+64>>1];I[b+64>>1]=j;I[b+56>>1]=L[b+56>>1]-1}function zB(a){a=a|0;var b=Q(0),c=0,d=Q(0),e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0;k=ga-48|0;ga=k;if(K[a+527|0]){J[a+36>>2]=0;J[a+576>>2]=0;J[a+580>>2]=0;J[a+516>>2]=0;J[a+520>>2]=0;J[a+584>>2]=0;J[a+588>>2]=0;a:{if(K[a+524|0]){break a}d=N[a+420>>2];c=J[a+32>>2];s=N[c+44>>2];b=N[a+412>>2];l=N[c+36>>2];e=N[a+416>>2];t=N[c+40>>2];m=N[c+60>>2];T=Q(Q(Q(d*s)+Q(Q(b*l)+Q(e*t)))+m);g=N[a+356>>2];f=J[a+28>>2];n=N[f+44>>2];i=N[a+348>>2];u=N[f+36>>2];o=N[a+352>>2];A=N[f+40>>2];p=N[f+60>>2];U=Q(Q(Q(g*n)+Q(Q(i*u)+Q(o*A)))+p);j=Q(T-U);B=N[c+12>>2];C=N[c+4>>2];D=N[c+8>>2];E=N[c+52>>2];V=Q(Q(Q(d*B)+Q(Q(b*C)+Q(e*D)))+E);F=N[f+12>>2];G=N[f+4>>2];H=N[f+8>>2];v=N[f+52>>2];W=Q(Q(Q(g*F)+Q(Q(i*G)+Q(o*H)))+v);q=Q(V-W);I=N[c+28>>2];L=N[c+20>>2];M=N[c+24>>2];O=N[c+56>>2];X=Q(Q(Q(d*I)+Q(Q(b*L)+Q(e*M)))+O);S=N[f+28>>2];e=i;i=N[f+20>>2];d=o;o=N[f+24>>2];r=N[f+56>>2];Z=Q(Q(Q(g*S)+Q(Q(e*i)+Q(d*o)))+r);d=Q(X-Z);b=Q(Q(j*j)+Q(Q(q*q)+Q(d*d)));b:{if(!(b>Q(1.1920928955078125e-7))){b=Q(0);e=Q(0);d=Q(1);break b}g=Q(Q(1)/Q(Y(b)));e=Q(j*g);b=Q(d*g);d=Q(q*g)}J[k+12>>2]=0;N[k+4>>2]=b;N[k>>2]=d;N[k+8>>2]=e;c:{if(Q(R(e))>Q(.7071067690849304)){j=Q(Q(b*b)+Q(e*e));g=Q(Q(1)/Q(Y(j)));j=Q(j*g);q=Q(g*Q(-e));w=Q(q*d);e=Q(b*g);b=Q(e*Q(-d));break c}j=Q(Q(d*d)+Q(b*b));g=Q(Q(1)/Q(Y(j)));w=Q(j*g);_=Q(g*Q(-b));b=Q(e*_);q=Q(d*g);j=Q(q*Q(-e));e=Q(0)}N[k+40>>2]=w;N[k+36>>2]=b;N[k+24>>2]=e;N[k+20>>2]=q;N[k+32>>2]=j;N[k+16>>2]=_;while(1){j=N[c+344>>2];q=N[f+344>>2];y=(x<<4)+k|0;$=J[y+12>>2];h=P(x,84)+a|0;z=h+56|0;J[z>>2]=J[y+8>>2];J[z+4>>2]=$;z=J[y+4>>2];J[h+48>>2]=J[y>>2];J[h+52>>2]=z;J[h+76>>2]=0;J[h+92>>2]=0;v=Q(W-v);d=N[h+52>>2];b=N[h+48>>2];e=Q(Z-r);g=Q(Q(v*d)-Q(b*e));w=Q(u*g);r=e;e=N[h+56>>2];p=Q(U-p);u=Q(Q(r*e)-Q(d*p));r=i;i=Q(Q(p*b)-Q(e*v));p=Q(w+Q(Q(G*u)+Q(r*i)));N[h- -64>>2]=p;o=Q(Q(A*g)+Q(Q(H*u)+Q(o*i)));N[h+68>>2]=o;g=Q(Q(n*g)+Q(Q(F*u)+Q(S*i)));N[h+72>>2]=g;r=l;n=Q(X-O);i=Q(V-E);l=Q(Q(b*n)-Q(d*i));m=Q(T-m);d=Q(Q(d*m)-Q(n*e));b=Q(Q(i*e)-Q(m*b));e=Q(Q(r*l)+Q(Q(C*d)+Q(L*b)));N[h+80>>2]=e;t=Q(Q(t*l)+Q(Q(D*d)+Q(M*b)));N[h+84>>2]=t;d=Q(Q(s*l)+Q(Q(B*d)+Q(I*b)));N[h+88>>2]=d;b=N[f+404>>2];s=N[f+400>>2];l=N[f+396>>2];J[h+108>>2]=0;l=Q(p*l);N[h+96>>2]=l;s=Q(o*s);N[h+100>>2]=s;b=Q(g*b);N[h+104>>2]=b;m=N[c+404>>2];n=N[c+400>>2];i=N[c+396>>2];J[h+124>>2]=0;i=Q(e*i);N[h+112>>2]=i;n=Q(t*n);N[h+116>>2]=n;m=Q(d*m);N[h+120>>2]=m;N[h+128>>2]=Q(j+Q(q+Q(Q(b*g)+Q(Q(l*p)+Q(o*s)))))+Q(Q(m*d)+Q(Q(i*e)+Q(t*n)));x=x+1|0;if((x|0)==3){break a}m=N[c+60>>2];O=N[c+56>>2];E=N[c+52>>2];p=N[f+60>>2];r=N[f+56>>2];v=N[f+52>>2];s=N[c+44>>2];I=N[c+28>>2];B=N[c+12>>2];t=N[c+40>>2];M=N[c+24>>2];D=N[c+8>>2];l=N[c+36>>2];L=N[c+20>>2];C=N[c+4>>2];n=N[f+44>>2];S=N[f+28>>2];F=N[f+12>>2];A=N[f+40>>2];o=N[f+24>>2];H=N[f+8>>2];u=N[f+36>>2];i=N[f+20>>2];G=N[f+4>>2];continue}}f=a;c=J[a+28>>2];a=J[a+32>>2];zg(f,c+4|0,a+4|0,c+264|0,a+264|0)}ga=k+48|0}function vF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=0;m=ga+-64|0;ga=m;g=J[a+48>>2];J[m+8>>2]=b;J[m+4>>2]=g;J[m>>2]=12644;g=ga-16|0;ga=g;f=J[a+52>>2];a:{if(K[f+60|0]){x=N[f+40>>2];t=N[f+24>>2];h=N[f+8>>2];y=N[f+36>>2];u=N[f+20>>2];s=N[f+4>>2];n=N[c>>2];o=N[c+4>>2];v=N[f+28>>2];k=N[f+12>>2];i=N[c+8>>2];i=k>i?k:i;z=N[f+44>>2];i=Q(Q((i>v?v:i)-k)*z);b:{if(i<Q(4294967296)&i>=Q(0)){a=~~i>>>0;break b}a=0}l=a&65534;I[g+14>>1]=l;o=h>o?h:o;o=Q(x*Q((o>t?t:o)-h));c:{if(o<Q(4294967296)&o>=Q(0)){a=~~o>>>0;break c}a=0}p=a&65534;I[g+12>>1]=p;n=n<s?s:n;n=Q(Q((n>u?u:n)-s)*y);d:{if(n<Q(4294967296)&n>=Q(0)){a=~~n>>>0;break d}a=0}q=a&65534;I[g+10>>1]=q;n=N[d>>2];o=N[d+4>>2];i=N[d+8>>2];i=k>i?k:i;k=Q(Q(z*Q((i>v?v:i)-k))+Q(1));e:{if(k<Q(4294967296)&k>=Q(0)){a=~~k>>>0;break e}a=0}d=a|1;I[g+8>>1]=d;k=h>o?h:o;h=Q(Q(x*Q((k>t?t:k)-h))+Q(1));f:{if(h<Q(4294967296)&h>=Q(0)){a=~~h>>>0;break f}a=0}r=a|1;I[g+6>>1]=r;h=n<s?s:n;h=Q(Q(y*Q((h>u?u:h)-s))+Q(1));g:{if(h<Q(4294967296)&h>=Q(0)){a=~~h>>>0;break g}a=0}w=a|1;I[g+4>>1]=w;h:{switch(J[f+144>>2]){case 0:A=J[f+56>>2];if((A|0)>0){a=J[f+136>>2];while(1){c=J[a+12>>2];f=(c|0)<0;b=q>>>0<=L[a+6>>1]&w>>>0>=L[a>>1]&l>>>0<=L[a+10>>1]&d>>>0>=L[a+4>>1]&p>>>0<=L[a+8>>1]&r>>>0>=L[a+2>>1];if(!(f|!b)){ia[J[J[m>>2]+8>>2]](m,c>>>21|0,c&2097151)}i:{if(!(f&(b^-1))){e=e+1|0;a=a+16|0;break i}b=J[a+12>>2];e=e-b|0;a=a-(b<<4)|0}j=j+1|0;if((e|0)<(A|0)){continue}break}}if(J[7404]>=(j|0)){break a}J[7404]=j;break a;case 1:l=0;if(J[f+152>>2]>0){while(1){a=L[g+10>>1];b=J[f+160>>2]+(l<<5)|0;j:{if(a>>>0>L[b+6>>1]){break j}j=L[g+4>>1];if(j>>>0<L[b>>1]){break j}p=L[g+14>>1];if(p>>>0>L[b+10>>1]){break j}q=L[g+8>>1];if(q>>>0<L[b+4>>1]){break j}r=L[g+12>>1];if(r>>>0>L[b+8>>1]){break j}d=L[g+6>>1];if(d>>>0<L[b+2>>1]){break j}k:{e=J[b+16>>2];if((e|0)<=0){b=0;break k}c=J[b+12>>2];w=e+c|0;e=J[f+136>>2]+(c<<4)|0;b=0;while(1){a=L[e>>1]<=j>>>0&L[e+6>>1]>=a>>>0&L[e+10>>1]>=p>>>0&L[e+4>>1]<=q>>>0&L[e+8>>1]>=r>>>0&L[e+2>>1]<=d>>>0;d=J[e+12>>2];j=(d|0)<0;if(!(j|!a)){ia[J[J[m>>2]+8>>2]](m,d>>>21|0,d&2097151)}l:{if(!(j&(a^-1))){c=c+1|0;e=e+16|0;break l}a=J[e+12>>2];c=c-a|0;e=e-(a<<4)|0}b=b+1|0;if((c|0)>=(w|0)){break k}d=L[g+6>>1];r=L[g+12>>1];q=L[g+8>>1];p=L[g+14>>1];j=L[g+4>>1];a=L[g+10>>1];continue}}if(J[7404]>=(b|0)){break j}J[7404]=b}l=l+1|0;if((l|0)<J[f+152>>2]){continue}break}}break a;case 2:break h;default:break a}}wm(f,J[f+136>>2],m,g+10|0,g+4|0);break a}q=J[f+56>>2];if((q|0)>0){a=J[f+96>>2];while(1){e=0;m:{if(N[c>>2]>N[a+16>>2]){break m}e=0;if(N[d>>2]<N[a>>2]){break m}e=1}b=0;b=N[d+8>>2]<N[a+8>>2]|N[c+8>>2]>N[a+24>>2]?b:e;n:{o:{p:{if(N[d+4>>2]<N[a+4>>2]?1:N[c+4>>2]>N[a+20>>2]){l=J[a+32>>2];r=(l|0)==-1;b=0;break p}l=J[a+32>>2];r=(l|0)==-1;if(!(r&b)){break p}ia[J[J[m>>2]+8>>2]](m,J[a+36>>2],J[a+40>>2]);q=J[f+56>>2];break o}if(b|r){break o}j=j+l|0;a=(l<<6)+a|0;break n}j=j+1|0;a=a- -64|0}p=p+1|0;if((j|0)<(q|0)){continue}break}}if(J[7404]>=(p|0)){break a}J[7404]=p}ga=g+16|0;ga=m- -64|0}function ic(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0);g=ga-400|0;ga=g;ya(2374);h=J[c+12>>2];J[g+344>>2]=J[c+8>>2];J[g+348>>2]=h;h=J[c+4>>2];J[g+336>>2]=J[c>>2];J[g+340>>2]=h;h=J[c+28>>2];J[g+360>>2]=J[c+24>>2];J[g+364>>2]=h;h=J[c+20>>2];J[g+352>>2]=J[c+16>>2];J[g+356>>2]=h;h=J[c+44>>2];J[g+376>>2]=J[c+40>>2];J[g+380>>2]=h;h=J[c+36>>2];J[g+368>>2]=J[c+32>>2];J[g+372>>2]=h;h=J[c+60>>2];J[g+392>>2]=J[c+56>>2];J[g+396>>2]=h;h=J[c+52>>2];J[g+384>>2]=J[c+48>>2];J[g+388>>2]=h;h=J[d+12>>2];J[g+280>>2]=J[d+8>>2];J[g+284>>2]=h;h=J[d+4>>2];J[g+272>>2]=J[d>>2];J[g+276>>2]=h;h=J[d+28>>2];J[g+296>>2]=J[d+24>>2];J[g+300>>2]=h;h=J[d+20>>2];J[g+288>>2]=J[d+16>>2];J[g+292>>2]=h;h=J[d+44>>2];J[g+312>>2]=J[d+40>>2];J[g+316>>2]=h;h=J[d+36>>2];J[g+304>>2]=J[d+32>>2];J[g+308>>2]=h;h=J[d+60>>2];J[g+328>>2]=J[d+56>>2];J[g+332>>2]=h;h=J[d+52>>2];J[g+320>>2]=J[d+48>>2];J[g+324>>2]=h;r=g+336|0;s=g+8|0;h=g+256|0;hc(r,g+272|0,s,h);J[g+236>>2]=0;i=N[g+256>>2];N[g+232>>2]=i*N[g+16>>2];N[g+228>>2]=i*N[g+12>>2];N[g+224>>2]=i*N[g+8>>2];J[g+216>>2]=0;J[g+220>>2]=0;J[g+208>>2]=0;J[g+212>>2]=0;j=g- -64|0;J[j>>2]=0;J[j+4>>2]=0;J[g+56>>2]=0;J[g+60>>2]=0;Na(r,h);J[g+52>>2]=0;J[g+36>>2]=0;k=N[g+268>>2];m=N[g+264>>2];i=N[g+256>>2];l=N[g+260>>2];o=Q(Q(2)/Q(Q(k*k)+Q(Q(m*m)+Q(Q(i*i)+Q(l*l)))));q=Q(m*o);n=Q(l*q);p=Q(i*o);t=Q(k*p);N[g+44>>2]=n+t;N[g+32>>2]=n-t;n=Q(i*p);p=l;l=Q(l*o);o=Q(p*l);N[g+48>>2]=Q(1)-Q(n+o);m=Q(m*q);N[g+28>>2]=Q(1)-Q(n+m);J[g+20>>2]=0;n=Q(i*q);p=Q(k*l);N[g+40>>2]=n-p;i=Q(i*l);k=Q(k*q);N[g+24>>2]=i+k;N[g+16>>2]=n+p;N[g+12>>2]=i-k;N[g+8>>2]=Q(1)-Q(o+m);r=g+240|0;nm(b,s,g+208|0,g+224|0,h,r);J[g+8>>2]=8344;j=J[c+12>>2];J[g+52>>2]=J[c+8>>2];J[g+56>>2]=j;j=J[c+4>>2];J[g+44>>2]=J[c>>2];J[g+48>>2]=j;j=J[c+28>>2];J[g+68>>2]=J[c+24>>2];J[g+72>>2]=j;j=J[c+20>>2];J[g+60>>2]=J[c+16>>2];J[g+64>>2]=j;j=J[c+44>>2];J[g+84>>2]=J[c+40>>2];J[g+88>>2]=j;j=J[c+36>>2];J[g+76>>2]=J[c+32>>2];J[g+80>>2]=j;j=J[c+60>>2];J[g+100>>2]=J[c+56>>2];J[g+104>>2]=j;j=J[c+52>>2];J[g+92>>2]=J[c+48>>2];J[g+96>>2]=j;c=J[d+12>>2];J[g+116>>2]=J[d+8>>2];J[g+120>>2]=c;c=J[d+4>>2];J[g+108>>2]=J[d>>2];J[g+112>>2]=c;c=J[d+20>>2];J[g+124>>2]=J[d+16>>2];J[g+128>>2]=c;c=J[d+28>>2];J[g+132>>2]=J[d+24>>2];J[g+136>>2]=c;c=J[d+44>>2];J[g+148>>2]=J[d+40>>2];J[g+152>>2]=c;c=J[d+36>>2];J[g+140>>2]=J[d+32>>2];J[g+144>>2]=c;c=J[d+52>>2];J[g+156>>2]=J[d+48>>2];J[g+160>>2]=c;c=J[d+60>>2];J[g+164>>2]=J[d+56>>2];J[g+168>>2]=c;J[g+192>>2]=e;N[g+196>>2]=f;J[g+200>>2]=b;J[g+188>>2]=a;f=Q(N[g+164>>2]-N[g+100>>2]);i=Q(N[g+156>>2]-N[g+92>>2]);k=Q(N[g+160>>2]-N[g+96>>2]);l=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(k*k))))));m=Q(f*l);q=m==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/m);N[g+20>>2]=q;o=Q(k*l);n=o==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/o);N[g+16>>2]=n;J[g+36>>2]=q<Q(0);J[g+32>>2]=n<Q(0);p=Q(m*f);f=Q(i*l);N[g+40>>2]=p+Q(Q(f*i)+Q(k*o));f=f==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/f);N[g+12>>2]=f;J[g+28>>2]=f<Q(0);a=J[a+68>>2];ia[J[J[a>>2]+24>>2]](a,g+384|0,g+320|0,s,h,r);xa();ga=g+400|0}function pk(a){a=a|0;var b=0,c=0;J[a>>2]=20932;b=J[a+192>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}if(J[a+1112>>2]>0){while(1){ng(a,0);if(J[a+1112>>2]>0){continue}break}}if(J[a+872>>2]>0){b=0;while(1){c=J[J[a+880>>2]+(b<<2)>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}b=b+1|0;if((b|0)<J[a+872>>2]){continue}break}}if(J[a+852>>2]>0){b=0;while(1){c=J[J[a+860>>2]+(b<<2)>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}b=b+1|0;if((b|0)<J[a+852>>2]){continue}break}}b=J[a+1244>>2];if(!(b?!b|!K[a+1248|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1244>>2]=0;H[a+1248|0]=1;b=a+1236|0;J[b>>2]=0;J[b+4>>2]=0;b=J[a+1140>>2];if(!(b?!b|!K[a+1144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1140>>2]=0;H[a+1144|0]=1;b=a+1132|0;J[b>>2]=0;J[b+4>>2]=0;b=J[a+1120>>2];if(!(b?!b|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1120>>2]=0;H[a+1124|0]=1;J[a+1112>>2]=0;J[a+1116>>2]=0;sb(a+1048|0);sb(a+988|0);sb(a+928|0);b=J[a+880>>2];if(!(b?!b|!K[a+884|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+880>>2]=0;H[a+884|0]=1;J[a+872>>2]=0;J[a+876>>2]=0;b=J[a+860>>2];if(!(b?!b|!K[a+864|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+860>>2]=0;H[a+864|0]=1;J[a+852>>2]=0;J[a+856>>2]=0;b=J[a+840>>2];if(!(b?!b|!K[a+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+840>>2]=0;H[a+844|0]=1;J[a+832>>2]=0;J[a+836>>2]=0;b=J[a+820>>2];if(!(b?!b|!K[a+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+820>>2]=0;H[a+824|0]=1;J[a+812>>2]=0;J[a+816>>2]=0;b=J[a+800>>2];if(!(b?!b|!K[a+804|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+800>>2]=0;H[a+804|0]=1;J[a+792>>2]=0;J[a+796>>2]=0;b=J[a+780>>2];if(!(b?!b|!K[a+784|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+780>>2]=0;H[a+784|0]=1;J[a+772>>2]=0;J[a+776>>2]=0;b=J[a+760>>2];if(!(b?!b|!K[a+764|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+760>>2]=0;H[a+764|0]=1;J[a+752>>2]=0;J[a+756>>2]=0;b=J[a+740>>2];if(!(b?!b|!K[a+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+740>>2]=0;H[a+744|0]=1;J[a+732>>2]=0;J[a+736>>2]=0;b=J[a+720>>2];if(!(b?!b|!K[a+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+720>>2]=0;H[a+724|0]=1;J[a+712>>2]=0;J[a+716>>2]=0;b=J[a+700>>2];if(!(b?!b|!K[a+704|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+700>>2]=0;H[a+704|0]=1;J[a+692>>2]=0;J[a+696>>2]=0;b=J[a+512>>2];if(!(b?!b|!K[a+516|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+512>>2]=0;H[a+516|0]=1;J[a+504>>2]=0;J[a+508>>2]=0;b=J[a+492>>2];if(!(b?!b|!K[a+496|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+492>>2]=0;H[a+496|0]=1;J[a+484>>2]=0;J[a+488>>2]=0;b=J[a+444>>2];if(!(b?!b|!K[a+448|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+444>>2]=0;H[a+448|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;b=J[a+424>>2];if(!(b?!b|!K[a+428|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+424>>2]=0;H[a+428|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;b=J[a+404>>2];if(!(b?!b|!K[a+408|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+404>>2]=0;H[a+408|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function bl(a,b,c,d){var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=Q(0),D=Q(0),E=Q(0);xb(a,6,Rk(),b);J[a>>2]=19508;e=J[c+12>>2];J[a+120>>2]=J[c+8>>2];J[a+124>>2]=e;e=J[c+4>>2];J[a+112>>2]=J[c>>2];J[a+116>>2]=e;e=J[c+28>>2];J[a+136>>2]=J[c+24>>2];J[a+140>>2]=e;e=J[c+20>>2];J[a+128>>2]=J[c+16>>2];J[a+132>>2]=e;e=J[c+44>>2];J[a+152>>2]=J[c+40>>2];J[a+156>>2]=e;e=J[c+36>>2];J[a+144>>2]=J[c+32>>2];J[a+148>>2]=e;e=J[c+56>>2];A=J[c+60>>2];B=J[c+48>>2];c=J[c+52>>2];J[a+784>>2]=0;J[a+776>>2]=0;J[a+780>>2]=0;J[a+768>>2]=0;J[a+772>>2]=0;J[a+764>>2]=1045220557;J[a+756>>2]=1045220557;J[a+760>>2]=1045220557;J[a+740>>2]=0;J[a+744>>2]=0;J[a+748>>2]=0;J[a+752>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+704>>2]=0;J[a+708>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+680>>2]=0;J[a+684>>2]=0;J[a+168>>2]=e;J[a+172>>2]=A;J[a+160>>2]=B;J[a+164>>2]=c;J[a+728>>2]=1060320051;J[a+732>>2]=1065353216;J[a+736>>2]=1056964608;H[a+790|0]=0;I[a+788>>1]=0;J[a+792>>2]=0;J[a+796>>2]=0;J[a+800>>2]=0;J[a+808>>2]=0;J[a+812>>2]=0;J[a+816>>2]=0;J[a+876>>2]=0;J[a+880>>2]=1036831949;J[a+884>>2]=1133903872;J[a+868>>2]=1065353216;J[a+872>>2]=-1082130432;J[a+896>>2]=0;J[a+900>>2]=1045220557;J[a+904>>2]=0;J[a+908>>2]=0;J[a+924>>2]=0;J[a+928>>2]=0;J[a+888>>2]=1065353216;J[a+892>>2]=1056964608;J[a+916>>2]=0;J[a+992>>2]=0;H[a+912|0]=0;J[a+940>>2]=0;J[a+944>>2]=1036831949;J[a+948>>2]=1133903872;J[a+968>>2]=0;J[a+972>>2]=0;J[a+960>>2]=0;J[a+964>>2]=1045220557;J[a+932>>2]=1065353216;J[a+936>>2]=-1082130432;J[a+952>>2]=1065353216;J[a+956>>2]=1056964608;J[a+988>>2]=0;J[a+980>>2]=0;H[a+976|0]=0;J[a+1004>>2]=0;J[a+1008>>2]=1036831949;J[a+1012>>2]=1133903872;c=a+1032|0;J[c>>2]=0;J[c+4>>2]=0;c=a+1024|0;J[c>>2]=0;J[c+4>>2]=1045220557;J[a+996>>2]=1065353216;J[a+1e3>>2]=-1082130432;J[a+1016>>2]=1065353216;J[a+1020>>2]=1056964608;c=a+1052|0;J[c>>2]=0;J[c+4>>2]=0;J[a+1044>>2]=0;H[a+1040|0]=0;H[a+1301|0]=1;H[a+1308|0]=0;J[a+1304>>2]=0;H[a+1300|0]=d;C=N[b+52>>2];D=N[b+56>>2];E=N[b+60>>2];o=N[a+168>>2];p=N[a+160>>2];q=N[a+164>>2];f=N[b+8>>2];g=N[b+12>>2];h=N[b+28>>2];i=N[b+20>>2];j=N[b+24>>2];r=N[a+128>>2];s=N[a+144>>2];t=N[a+148>>2];u=N[a+116>>2];v=N[a+132>>2];k=N[b+44>>2];w=N[a+152>>2];l=N[b+36>>2];x=N[a+120>>2];m=N[b+40>>2];y=N[a+136>>2];n=N[b+4>>2];z=N[a+112>>2];J[a+108>>2]=0;J[a+92>>2]=0;J[a+76>>2]=0;J[a+60>>2]=0;N[a+88>>2]=Q(w*k)+Q(Q(x*l)+Q(y*m));N[a+84>>2]=Q(t*k)+Q(Q(u*l)+Q(v*m));N[a+80>>2]=Q(s*k)+Q(Q(z*l)+Q(r*m));N[a+72>>2]=Q(w*h)+Q(Q(x*i)+Q(y*j));N[a+68>>2]=Q(t*h)+Q(Q(u*i)+Q(v*j));N[a- -64>>2]=Q(s*h)+Q(Q(z*i)+Q(r*j));N[a+56>>2]=Q(w*g)+Q(Q(x*n)+Q(f*y));N[a+52>>2]=Q(t*g)+Q(Q(u*n)+Q(f*v));N[a+48>>2]=Q(s*g)+Q(Q(z*n)+Q(r*f));N[a+104>>2]=E+Q(Q(o*k)+Q(Q(p*l)+Q(m*q)));N[a+100>>2]=D+Q(Q(o*h)+Q(Q(p*i)+Q(j*q)));N[a+96>>2]=C+Q(Q(o*g)+Q(Q(p*n)+Q(f*q)));pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function Ae(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0);h=J[a+88>>2];l=h;a:{if((h|0)!=J[a+92>>2]){break a}l=h;t=h?h<<1:1;if((h|0)>=(t|0)){break a}if(t){J[8369]=J[8369]+1;u=ia[J[6782]](P(t,152),16)|0;g=J[a+88>>2]}else{g=h}b:{if((g|0)<=0){break b}l=0;if((g|0)!=1){A=g&-2;while(1){s=P(l,152);sa(s+u|0,s+J[a+96>>2]|0,152);s=P(l|1,152);sa(s+u|0,s+J[a+96>>2]|0,152);l=l+2|0;z=z+2|0;if((z|0)!=(A|0)){continue}break}}if(!(g&1)){break b}g=P(l,152);sa(g+u|0,g+J[a+96>>2]|0,152)}g=J[a+96>>2];if(!(g?!g|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+96>>2]=u;H[a+100|0]=1;J[a+92>>2]=t;l=J[a+88>>2]}J[a+88>>2]=l+1;g=J[a+96>>2]+P(h,152)|0;J[g+140>>2]=e;J[g+48>>2]=-2147483648;J[g+52>>2]=-2147483648;J[g+16>>2]=0;J[g+20>>2]=0;J[g+56>>2]=-2147483648;J[g+60>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;a=J[a+16>>2];h=J[(a+P(c,244)|0)+240>>2];e=J[(a+P(d,244)|0)+240>>2];J[g+148>>2]=d;J[g+144>>2]=c;y=N[f+88>>2];J[g+132>>2]=0;N[g+104>>2]=y;J[g+96>>2]=0;J[g+100>>2]=0;i=N[b>>2];j=N[b+4>>2];v=N[b+8>>2];J[g+12>>2]=0;m=Q(-v);N[g+8>>2]=m;n=Q(-j);N[g+4>>2]=n;o=Q(-i);N[g>>2]=o;i=Q(0);j=Q(0);if(h){j=Q(Q(Q(N[h+304>>2]*m)+Q(Q(N[h+296>>2]*o)+Q(N[h+300>>2]*n)))*N[h+552>>2]);i=Q(Q(Q(N[h+288>>2]*m)+Q(Q(N[h+280>>2]*o)+Q(N[h+284>>2]*n)))*N[h+548>>2]);k=Q(Q(Q(N[h+272>>2]*m)+Q(Q(N[h+264>>2]*o)+Q(N[h+268>>2]*n)))*N[h+544>>2])}else{k=Q(0)}N[g+64>>2]=k;J[g+76>>2]=0;N[g+72>>2]=j;N[g+68>>2]=i;j=N[b>>2];k=N[b+4>>2];p=N[b+8>>2];N[g+44>>2]=N[b+12>>2];N[g+40>>2]=p;N[g+36>>2]=k;N[g+32>>2]=j;if(e){q=Q(Q(Q(N[e+304>>2]*p)+Q(Q(N[e+296>>2]*j)+Q(k*N[e+300>>2])))*N[e+552>>2]);r=Q(Q(Q(N[e+288>>2]*p)+Q(Q(N[e+280>>2]*j)+Q(k*N[e+284>>2])))*N[e+548>>2]);i=Q(Q(Q(N[e+272>>2]*p)+Q(Q(N[e+264>>2]*j)+Q(k*N[e+268>>2])))*N[e+544>>2])}else{i=Q(0)}N[g+80>>2]=i;J[g+92>>2]=0;N[g+88>>2]=q;N[g+84>>2]=r;r=Q(0);q=Q(0);if(h){r=Q(Q(N[h+272>>2]*m)+Q(Q(N[h+264>>2]*o)+Q(N[h+268>>2]*n)));q=Q(Q(N[h+288>>2]*m)+Q(Q(N[h+280>>2]*o)+Q(N[h+284>>2]*n)));i=Q(Q(N[h+304>>2]*m)+Q(Q(N[h+296>>2]*o)+Q(N[h+300>>2]*n)))}else{i=Q(0)}q=Q(Q(Q(i*m)+Q(Q(r*o)+Q(q*n)))+Q(0));if(e){w=Q(Q(N[e+288>>2]*p)+Q(Q(N[e+280>>2]*j)+Q(k*N[e+284>>2])));x=Q(Q(N[e+272>>2]*p)+Q(Q(N[e+264>>2]*j)+Q(N[e+268>>2]*k)));i=Q(Q(N[e+304>>2]*p)+Q(Q(N[e+296>>2]*j)+Q(k*N[e+300>>2])))}else{i=Q(0)}v=Q(Q(1)/Q(q+Q(Q(i*p)+Q(Q(x*j)+Q(w*k)))));N[g+108>>2]=v;x=Q(0);r=Q(0);q=Q(0);w=Q(0);if(h){b=a+P(c,244)|0;x=Q(N[b+176>>2]+N[b+208>>2]);B=N[b+200>>2];w=N[b+196>>2];r=Q(Q(N[b+180>>2]+N[b+212>>2])*Q(0));q=Q(N[b+184>>2]+N[b+216>>2]);C=N[b+192>>2]}i=Q(-0);if(e){a=a+P(d,244)|0;D=Q(N[a+176>>2]+N[a+208>>2]);E=Q(N[a+184>>2]+N[a+216>>2]);F=N[a+192>>2];G=N[a+200>>2];i=Q(Q(N[a+180>>2]+N[a+212>>2])*Q(-0));I=N[a+196>>2]}N[g+124>>2]=y;N[g+116>>2]=0;N[g+120>>2]=-y;N[g+112>>2]=v*Q(Q(0)-Q(Q(Q(Q(q*Q(0))+Q(Q(x*Q(0))+r))+Q(Q(m*B)+Q(Q(o*C)+Q(w*n))))+Q(Q(Q(E*Q(-0))+Q(Q(D*Q(-0))+i))+Q(Q(p*G)+Q(Q(j*F)+Q(k*I))))))}function Al(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=0;g=ga-528|0;ga=g;k=N[a+20>>2];d=Q(k-N[a+4>>2]);e=N[a+56>>2];h=N[a+52>>2];m=N[a+24>>2];l=Q(m-N[a+8>>2]);f=Q(Q(d*e)-Q(h*l));q=f;n=N[a+16>>2];p=Q(n-N[a>>2]);r=Q(p*h);h=N[a+48>>2];d=Q(r-Q(h*d));r=Q(f*f);f=Q(Q(l*h)-Q(e*p));e=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(r+Q(f*f))))));h=Q(q*e);N[g+256>>2]=h;f=Q(f*e);N[g+260>>2]=f;d=Q(d*e);N[g+264>>2]=d;N[g+268>>2]=Q(m*d)+Q(Q(n*h)+Q(k*f));o=g+272|0;d=N[g+264>>2];e=N[g+256>>2];k=N[g+260>>2];h=N[g+268>>2];f=Q(Q(Q(N[b+8>>2]*d)+Q(Q(N[b>>2]*e)+Q(N[b+4>>2]*k)))-h);i=f>Q(1.1920928955078125e-7);if(!i){j=J[b+4>>2];J[o>>2]=J[b>>2];J[o+4>>2]=j;j=J[b+12>>2];J[o+8>>2]=J[b+8>>2];J[o+12>>2]=j;h=N[g+268>>2];d=N[g+264>>2];k=N[g+260>>2];e=N[g+256>>2];j=1}m=N[b+24>>2];l=N[b+16>>2];n=N[b+20>>2];d=Q(Q(Q(m*d)+Q(Q(l*e)+Q(n*k)))-h);if((i|0)!=(d>Q(1.1920928955078125e-7)|0)){h=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];i=o+(j<<4)|0;J[i+12>>2]=0;e=Q(Q(-f)/Q(d-f));k=Q(Q(1)-e);N[i+8>>2]=Q(m*e)+Q(q*k);N[i+4>>2]=Q(n*e)+Q(k*p);N[i>>2]=Q(l*e)+Q(k*h);j=j+1|0}t=d>Q(1.1920928955078125e-7);if(!t){s=J[b+20>>2];i=o+(j<<4)|0;J[i>>2]=J[b+16>>2];J[i+4>>2]=s;s=J[b+28>>2];J[i+8>>2]=J[b+24>>2];J[i+12>>2]=s;j=j+1|0}h=N[b+40>>2];m=N[b+32>>2];l=N[b+36>>2];e=Q(Q(Q(h*N[g+264>>2])+Q(Q(m*N[g+256>>2])+Q(l*N[g+260>>2])))-N[g+268>>2]);if((t|0)!=(e>Q(1.1920928955078125e-7)|0)){n=N[b+16>>2];p=N[b+20>>2];q=N[b+24>>2];i=o+(j<<4)|0;J[i+12>>2]=0;d=Q(Q(-d)/Q(e-d));k=Q(Q(1)-d);N[i+8>>2]=Q(h*d)+Q(q*k);N[i+4>>2]=Q(l*d)+Q(k*p);N[i>>2]=Q(m*d)+Q(k*n);j=j+1|0}t=e>Q(1.1920928955078125e-7);if(!t){s=J[b+36>>2];i=o+(j<<4)|0;J[i>>2]=J[b+32>>2];J[i+4>>2]=s;s=J[b+44>>2];J[i+8>>2]=J[b+40>>2];J[i+12>>2]=s;j=j+1|0}if((t|0)!=(f>Q(1.1920928955078125e-7)|0)){k=N[b+32>>2];h=N[b>>2];m=N[b+36>>2];l=N[b+4>>2];d=N[b+40>>2];n=N[b+8>>2];i=o+(j<<4)|0;J[i+12>>2]=0;q=d;d=Q(Q(-e)/Q(f-e));e=Q(Q(1)-d);N[i+8>>2]=Q(q*e)+Q(d*n);N[i+4>>2]=Q(e*m)+Q(d*l);N[i>>2]=Q(e*k)+Q(d*h);j=j+1|0}if(f>Q(1.1920928955078125e-7)){b=j}else{i=J[b+4>>2];o=o+(j<<4)|0;J[o>>2]=J[b>>2];J[o+4>>2]=i;i=J[b+12>>2];J[o+8>>2]=J[b+8>>2];J[o+12>>2]=i;b=j+1|0}j=0;a:{if(!b){break a}k=N[a+40>>2];e=Q(k-N[a+24>>2]);d=N[a+48>>2];h=N[a+56>>2];m=N[a+32>>2];l=Q(m-N[a+16>>2]);f=Q(Q(e*d)-Q(h*l));q=f;r=l;l=N[a+52>>2];n=N[a+36>>2];p=Q(n-N[a+20>>2]);d=Q(Q(r*l)-Q(d*p));e=Q(Q(p*h)-Q(l*e));f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f))))));h=Q(q*f);N[g+260>>2]=h;e=Q(e*f);N[g+256>>2]=e;f=Q(d*f);N[g+264>>2]=f;N[g+268>>2]=Q(k*f)+Q(Q(m*e)+Q(n*h));b=zl(g+256|0,g+272|0,b,g);j=0;if(!b){break a}k=N[a+8>>2];e=Q(k-N[a+40>>2]);d=N[a+48>>2];h=N[a+56>>2];m=N[a>>2];l=Q(m-N[a+32>>2]);f=Q(Q(e*d)-Q(h*l));q=f;r=l;l=N[a+52>>2];n=N[a+4>>2];p=Q(n-N[a+36>>2]);d=Q(Q(r*l)-Q(d*p));e=Q(Q(p*h)-Q(l*e));f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f))))));h=Q(q*f);N[g+260>>2]=h;e=Q(e*f);N[g+256>>2]=e;f=Q(d*f);N[g+264>>2]=f;N[g+268>>2]=Q(k*f)+Q(Q(m*e)+Q(n*h));j=zl(g+256|0,g,b,c)}ga=g+528|0;return j}function ta(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;a:{if(!a){break a}d=a-8|0;b=J[a-4>>2];a=b&-8;f=d+a|0;b:{if(b&1){break b}if(!(b&3)){break a}b=J[d>>2];d=d-b|0;if(d>>>0<M[8391]){break a}a=a+b|0;if(J[8392]!=(d|0)){if(b>>>0<=255){e=J[d+8>>2];b=b>>>3|0;c=J[d+12>>2];if((c|0)==(e|0)){J[8387]=J[8387]&kI(b);break b}J[e+12>>2]=c;J[c+8>>2]=e;break b}h=J[d+24>>2];b=J[d+12>>2];c:{if((d|0)!=(b|0)){c=J[d+8>>2];J[c+12>>2]=b;J[b+8>>2]=c;break c}d:{e=d+20|0;c=J[e>>2];if(c){break d}e=d+16|0;c=J[e>>2];if(c){break d}b=0;break c}while(1){g=e;b=c;e=b+20|0;c=J[e>>2];if(c){continue}e=b+16|0;c=J[b+16>>2];if(c){continue}break}J[g>>2]=0}if(!h){break b}e=J[d+28>>2];c=(e<<2)+33852|0;e:{if(J[c>>2]==(d|0)){J[c>>2]=b;if(b){break e}J[8388]=J[8388]&kI(e);break b}J[h+(J[h+16>>2]==(d|0)?16:20)>>2]=b;if(!b){break b}}J[b+24>>2]=h;c=J[d+16>>2];if(c){J[b+16>>2]=c;J[c+24>>2]=b}c=J[d+20>>2];if(!c){break b}J[b+20>>2]=c;J[c+24>>2]=b;break b}b=J[f+4>>2];if((b&3)!=3){break b}J[8389]=a;J[f+4>>2]=b&-2;J[d+4>>2]=a|1;J[a+d>>2]=a;return}if(d>>>0>=f>>>0){break a}b=J[f+4>>2];if(!(b&1)){break a}f:{if(!(b&2)){if(J[8393]==(f|0)){J[8393]=d;a=J[8390]+a|0;J[8390]=a;J[d+4>>2]=a|1;if(J[8392]!=(d|0)){break a}J[8389]=0;J[8392]=0;return}if(J[8392]==(f|0)){J[8392]=d;a=J[8389]+a|0;J[8389]=a;J[d+4>>2]=a|1;J[a+d>>2]=a;return}a=(b&-8)+a|0;g:{if(b>>>0<=255){e=J[f+8>>2];b=b>>>3|0;c=J[f+12>>2];if((c|0)==(e|0)){J[8387]=J[8387]&kI(b);break g}J[e+12>>2]=c;J[c+8>>2]=e;break g}h=J[f+24>>2];b=J[f+12>>2];h:{if((f|0)!=(b|0)){c=J[f+8>>2];J[c+12>>2]=b;J[b+8>>2]=c;break h}i:{e=f+20|0;c=J[e>>2];if(c){break i}e=f+16|0;c=J[e>>2];if(c){break i}b=0;break h}while(1){g=e;b=c;e=b+20|0;c=J[e>>2];if(c){continue}e=b+16|0;c=J[b+16>>2];if(c){continue}break}J[g>>2]=0}if(!h){break g}e=J[f+28>>2];c=(e<<2)+33852|0;j:{if(J[c>>2]==(f|0)){J[c>>2]=b;if(b){break j}J[8388]=J[8388]&kI(e);break g}J[h+(J[h+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break g}}J[b+24>>2]=h;c=J[f+16>>2];if(c){J[b+16>>2]=c;J[c+24>>2]=b}c=J[f+20>>2];if(!c){break g}J[b+20>>2]=c;J[c+24>>2]=b}J[d+4>>2]=a|1;J[a+d>>2]=a;if(J[8392]!=(d|0)){break f}J[8389]=a;return}J[f+4>>2]=b&-2;J[d+4>>2]=a|1;J[a+d>>2]=a}if(a>>>0<=255){a=a>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;k:{if(!(c&a)){J[8387]=a|c;a=b;break k}a=J[b+8>>2]}J[b+8>>2]=d;J[a+12>>2]=d;J[d+12>>2]=b;J[d+8>>2]=a;return}e=31;J[d+16>>2]=0;J[d+20>>2]=0;if(a>>>0<=16777215){b=a>>>8|0;g=b+1048320>>>16&8;b=b<<g;e=b+520192>>>16&4;b=b<<e;c=b+245760>>>16&2;b=(b<<c>>>15|0)-(c|(e|g))|0;e=(b<<1|a>>>b+21&1)+28|0}J[d+28>>2]=e;g=(e<<2)+33852|0;l:{m:{c=J[8388];b=1<<e;n:{if(!(c&b)){J[8388]=b|c;J[g>>2]=d;J[d+24>>2]=g;break n}e=a<<((e|0)==31?0:25-(e>>>1|0)|0);b=J[g>>2];while(1){c=b;if((J[b+4>>2]&-8)==(a|0)){break m}b=e>>>29|0;e=e<<1;g=c+(b&4)|0;b=J[g+16>>2];if(b){continue}break}J[g+16>>2]=d;J[d+24>>2]=c}J[d+12>>2]=d;J[d+8>>2]=d;break l}a=J[c+8>>2];J[a+12>>2]=d;J[c+8>>2]=d;J[d+24>>2]=0;J[d+12>>2]=c;J[d+8>>2]=a}a=J[8395]-1|0;J[8395]=a?a:-1}}function oh(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=0,x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0);o=ga-32|0;ga=o;if(b){k=J[a+44>>2];a:{if((k|0)>127){break a}if(J[a+48>>2]<=127){J[8369]=J[8369]+1;r=ia[J[6782]](512,16)|0;w=J[a+44>>2];b:{if((w|0)<=0){break b}if(w-1>>>0>=3){x=w&-4;while(1){s=j<<2;J[s+r>>2]=J[s+J[a+52>>2]>>2];l=s|4;J[l+r>>2]=J[l+J[a+52>>2]>>2];l=s|8;J[l+r>>2]=J[l+J[a+52>>2]>>2];l=s|12;J[l+r>>2]=J[l+J[a+52>>2]>>2];j=j+4|0;p=p+4|0;if((x|0)!=(p|0)){continue}break}}x=w&3;if(!x){break b}while(1){l=j<<2;J[l+r>>2]=J[l+J[a+52>>2]>>2];j=j+1|0;m=m+1|0;if((x|0)!=(m|0)){continue}break}}j=J[a+52>>2];if(!(j?!j|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](j)}J[a+52>>2]=r;H[a+56|0]=1;J[a+48>>2]=128}j=k;l=0-j&3;if(l){while(1){J[J[a+52>>2]+(j<<2)>>2]=0;j=j+1|0;y=y+1|0;if((l|0)!=(y|0)){continue}break}}if(k-125>>>0<3){break a}while(1){k=j<<2;J[k+J[a+52>>2]>>2]=0;J[(k+J[a+52>>2]|0)+4>>2]=0;J[(k+J[a+52>>2]|0)+8>>2]=0;J[(k+J[a+52>>2]|0)+12>>2]=0;j=j+4|0;if((j|0)!=128){continue}break}}J[a+44>>2]=128;J[J[a+52>>2]>>2]=b;m=126;y=1;while(1){j=J[a+52>>2];b=y-1|0;x=b<<2;t=J[j+x>>2];A=N[t>>2];B=N[t+4>>2];u=N[t+8>>2];v=N[h>>2];q=N[h+4>>2];n=N[h+8>>2];J[o+12>>2]=0;N[o+8>>2]=u-n;N[o+4>>2]=B-q;N[o>>2]=A-v;u=N[t+16>>2];v=N[t+20>>2];q=N[g>>2];n=N[g+4>>2];N[o+24>>2]=N[t+24>>2]-N[g+8>>2];N[o+20>>2]=v-n;N[o+16>>2]=u-q;l=J[e>>2];u=N[c>>2];v=N[d>>2];C=Q(Q(N[(l<<4)+o>>2]-u)*v);q=N[d+4>>2];k=J[e+4>>2];n=N[c+4>>2];A=Q(q*Q(N[((1-k<<4)+o|0)+4>>2]-n));c:{if(C>A){break c}n=Q(Q(N[((k<<4)+o|0)+4>>2]-n)*q);B=Q(v*Q(N[(1-l<<4)+o>>2]-u));if(n>B){break c}u=n>C?n:C;q=N[d+8>>2];k=J[e+8>>2];n=N[c+8>>2];v=Q(q*Q(N[((1-k<<4)+o|0)+8>>2]-n));if(u>v){break c}q=Q(Q(N[((k<<4)+o|0)+8>>2]-n)*q);n=A<B?A:B;if(q>n|!((q>u?q:u)<f)|!((n>v?v:n)>Q(0))){break c}if(J[t+40>>2]){if((b|0)>(m|0)){m=J[a+44>>2];z=m<<1;d:{if((m|0)>=(z|0)){break d}if((z|0)>J[a+48>>2]){e:{if(!m){j=0;break e}J[8369]=J[8369]+1;j=ia[J[6782]](m<<3,16)|0;s=J[a+44>>2];if((s|0)<=0){break e}w=0;p=0;if(s-1>>>0>=3){k=s&-4;l=0;while(1){r=p<<2;J[r+j>>2]=J[r+J[a+52>>2]>>2];b=r|4;J[b+j>>2]=J[b+J[a+52>>2]>>2];b=r|8;J[b+j>>2]=J[b+J[a+52>>2]>>2];b=r|12;J[b+j>>2]=J[b+J[a+52>>2]>>2];p=p+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}k=s&3;if(!k){break e}while(1){b=p<<2;J[b+j>>2]=J[b+J[a+52>>2]>>2];p=p+1|0;w=w+1|0;if((k|0)!=(w|0)){continue}break}}b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=j;H[a+56|0]=1;J[a+48>>2]=z}k=m-1|0;p=0;b=m&3;if(b){while(1){J[(m<<2)+j>>2]=0;m=m+1|0;j=J[a+52>>2];p=p+1|0;if((b|0)!=(p|0)){continue}break}}if(k>>>0<3){break d}while(1){b=m<<2;J[b+j>>2]=0;J[(b+J[a+52>>2]|0)+4>>2]=0;J[(b+J[a+52>>2]|0)+8>>2]=0;J[(b+J[a+52>>2]|0)+12>>2]=0;j=J[a+52>>2];m=m+4|0;if((z|0)!=(m|0)){continue}break}}J[a+44>>2]=z;m=z-2|0}J[j+x>>2]=J[t+36>>2];J[J[a+52>>2]+(y<<2)>>2]=J[t+40>>2];b=y+1|0;break c}ia[J[J[i>>2]+12>>2]](i,t)}y=b;if(b){continue}break}}ga=o+32|0}function xn(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=h;q=ga-16|0;ga=q;Jd(a,q+10|0,b,0);Jd(a,q+4|0,c,1);h=J[a+60>>2];p=a;r=L[a+64>>1];o=h+(r<<6)|0;I[a+64>>1]=L[o+48>>1];j=L[a+56>>1]+1|0;I[a+56>>1]=j;J[o+8>>2]=i;I[o+6>>1]=g;I[o+4>>1]=f;J[o>>2]=e;J[o+12>>2]=r;I[h+54>>1]=L[h+54>>1]+2;h=J[a+68>>2];i=j<<1;l=i&65534;j=l<<2;k=j|4;m=h+k|0;n=h;l=l-1|0;h=l<<2;n=n+h|0;n=L[n>>1]|L[n+2>>1]<<16;I[m>>1]=n;I[m+2>>1]=n>>>16;m=L[q+10>>1];n=J[a+68>>2];s=n+h|0;I[s+2>>1]=r;I[s>>1]=m;m=L[q+4>>1];n=j+n|0;I[n+2>>1]=r;I[n>>1]=m;I[o+54>>1]=i;I[o+48>>1]=l;m=J[a+60>>2];I[m+56>>1]=L[m+56>>1]+2;m=J[a+72>>2];n=m+k|0;m=h+m|0;m=L[m>>1]|L[m+2>>1]<<16;I[n>>1]=m;I[n+2>>1]=m>>>16;m=L[q+12>>1];n=J[a+72>>2];s=n+h|0;I[s+2>>1]=r;I[s>>1]=m;m=L[q+6>>1];n=j+n|0;I[n+2>>1]=r;I[n>>1]=m;I[o+56>>1]=i;I[o+50>>1]=l;m=J[a+60>>2];I[m+58>>1]=L[m+58>>1]+2;n=k;k=J[a+76>>2];m=n+k|0;k=h+k|0;k=L[k>>1]|L[k+2>>1]<<16;I[m>>1]=k;I[m+2>>1]=k>>>16;k=L[q+14>>1];n=h;h=J[a+76>>2];m=n+h|0;I[m+2>>1]=r;I[m>>1]=k;k=L[q+8>>1];h=h+j|0;I[h+2>>1]=r;I[h>>1]=k;I[o+58>>1]=i;I[o+52>>1]=l;h=J[a+68>>2];k=L[o+48>>1]<<2;a=h+k|0;i=a-4|0;j=L[i>>1];if(j>>>0>L[a>>1]){l=J[p+60>>2];k=l+(L[(h+k|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j>>1]=L[j>>1]+1;I[k+48>>1]=L[k+48>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0>L[h>>1]){l=J[p+60>>2];a=h;continue}break}h=J[p+68>>2]}a:{k=L[o+54>>1];a=(k<<2)+h|0;i=a-4|0;j=L[i>>1];if(j>>>0<=L[a>>1]){break a}l=J[p+60>>2];k=l+(L[((k<<2)+h|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j>>1]=L[j>>1]+1;I[k+54>>1]=L[k+54>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0<=L[h>>1]){break a}l=J[p+60>>2];a=h;continue}}h=J[p+72>>2];k=L[o+50>>1]<<2;a=h+k|0;i=a-4|0;j=L[i>>1];if(j>>>0>L[a>>1]){l=J[p+60>>2];k=l+(L[(h+k|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j+2>>1]=L[j+2>>1]+1;I[k+50>>1]=L[k+50>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0>L[h>>1]){l=J[p+60>>2];a=h;continue}break}h=J[p+72>>2]}b:{k=L[o+56>>1];a=(k<<2)+h|0;i=a-4|0;j=L[i>>1];if(j>>>0<=L[a>>1]){break b}l=J[p+60>>2];k=l+(L[((k<<2)+h|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j+2>>1]=L[j+2>>1]+1;I[k+56>>1]=L[k+56>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0<=L[h>>1]){break b}l=J[p+60>>2];a=h;continue}}Id(p,2,L[o+52>>1]);Hd(p,2,L[o+58>>1],t);ga=q+16|0;a=J[p+60>>2];h=J[p+108>>2];if(h){J[(a+(r<<6)|0)+60>>2]=ia[J[J[h>>2]+8>>2]](h,b,c,d,e,f,g,t,0)}return a+(r<<6)|0}function yA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c=J[b+8>>2];a:{if((c|0)<=0){break a}d=J[b+16>>2];if((c|0)!=1){g=c&-2;while(1){i=e<<2;h=J[i+d>>2];if(!(K[h+204|0]&3)){J[h+208>>2]=f;f=f+1|0}J[h+244>>2]=1065353216;J[h+212>>2]=-1;h=J[d+(i|4)>>2];if(!(K[h+204|0]&3)){J[h+208>>2]=f;f=f+1|0}J[h+244>>2]=1065353216;J[h+212>>2]=-1;e=e+2|0;k=k+2|0;if((g|0)!=(k|0)){continue}break}}if(!(c&1)){break a}c=J[d+(e<<2)>>2];if(!(K[c+204|0]&3)){J[c+208>>2]=f;f=f+1|0}J[c+244>>2]=1065353216;J[c+212>>2]=-1}d=0;h=0;i=0;k=0;c=J[a+8>>2];b:{if((f|0)<=(c|0)){break b}if(J[a+12>>2]<(f|0)){if(f){J[8369]=J[8369]+1;h=ia[J[6782]](f<<3,16)|0;e=J[a+8>>2]}else{e=c}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){n=e&-4;while(1){g=d<<3;j=g+h|0;l=g+J[a+16>>2]|0;m=J[l+4>>2];J[j>>2]=J[l>>2];J[j+4>>2]=m;j=g|8;l=j+h|0;j=j+J[a+16>>2]|0;m=J[j+4>>2];J[l>>2]=J[j>>2];J[l+4>>2]=m;j=g|16;l=j+h|0;j=j+J[a+16>>2]|0;m=J[j+4>>2];J[l>>2]=J[j>>2];J[l+4>>2]=m;g=g|24;j=g+h|0;g=g+J[a+16>>2]|0;l=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=l;d=d+4|0;i=i+4|0;if((n|0)!=(i|0)){continue}break}}e=e&3;if(!e){break c}while(1){g=d<<3;i=g+h|0;g=g+J[a+16>>2]|0;n=J[g+4>>2];J[i>>2]=J[g>>2];J[i+4>>2]=n;d=d+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}e=J[a+16>>2];if(!(e?!e|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=f}e=(c^-1)+f|0;h=f-c&3;if(h){d=0;while(1){k=J[a+16>>2]+(c<<3)|0;J[k>>2]=0;J[k+4>>2]=0;c=c+1|0;d=d+1|0;if((h|0)!=(d|0)){continue}break}}if(e>>>0<3){break b}while(1){e=c<<3;d=e+J[a+16>>2]|0;J[d>>2]=0;J[d+4>>2]=0;d=e+J[a+16>>2]|0;J[d+8>>2]=0;J[d+12>>2]=0;d=e+J[a+16>>2]|0;J[d+16>>2]=0;J[d+20>>2]=0;e=e+J[a+16>>2]|0;J[e+24>>2]=0;J[e+28>>2]=0;c=c+4|0;if((f|0)!=(c|0)){continue}break}}J[a+8>>2]=f;d:{if((f|0)<=0){break d}e=J[a+16>>2];d=0;c=0;if(f-1>>>0>=3){k=f&-4;h=0;while(1){g=e+(c<<3)|0;J[g+4>>2]=1;J[g>>2]=c;g=c|1;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;g=c|2;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;g=c|3;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;c=c+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}f=f&3;if(!f){break d}while(1){h=e+(c<<3)|0;J[h+4>>2]=1;J[h>>2]=c;c=c+1|0;d=d+1|0;if((f|0)!=(d|0)){continue}break}}e=0;b=J[b+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;h=ia[J[J[b>>2]+36>>2]](b)|0;e:{if(!h){break e}k=ia[J[J[b>>2]+20>>2]](b)|0;if((h|0)<=0){break e}a=J[a+16>>2];while(1){b=k+(e<<4)|0;c=J[J[b>>2]>>2];f:{if(!c|K[c+204|0]&7){break f}b=J[J[b+4>>2]>>2];if(!b|K[b+204|0]&7){break f}b=J[b+208>>2];c=J[c+208>>2];f=a+(c<<3)|0;d=J[f>>2];if((c|0)!=(d|0)){while(1){c=a+(d<<3)|0;J[f>>2]=J[c>>2];c=J[c>>2];f=a+(c<<3)|0;d=J[f>>2];if((c|0)!=(d|0)){continue}break}}f=a+(b<<3)|0;d=J[f>>2];if((d|0)!=(b|0)){while(1){b=a+(d<<3)|0;J[f>>2]=J[b>>2];b=J[b>>2];f=a+(b<<3)|0;d=J[f>>2];if((b|0)!=(d|0)){continue}break}}if((b|0)==(c|0)){break f}c=a+(c<<3)|0;J[c>>2]=b;b=a+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}e=e+1|0;if((h|0)!=(e|0)){continue}break}}}function Rl(){if(!K[30848]){J[7630]=1062847606;J[7631]=0;J[7628]=1042701022;J[7629]=1056964440;J[7626]=1062847606;J[7627]=0;J[7624]=-1093024784;J[7625]=1050556081;J[7622]=1062847606;J[7623]=0;J[7620]=-1093024784;J[7621]=-1096927567;J[7618]=1062847606;J[7619]=0;J[7616]=1042701022;J[7617]=-1090519208;J[7614]=1062847572;J[7615]=0;J[7612]=1057396286;J[7613]=0;J[7610]=1057396386;J[7611]=0;J[7608]=1060121912;J[7609]=1056964507;J[7606]=1057396420;J[7607]=0;J[7604]=-1098475836;J[7605]=1062148969;J[7602]=1057396386;J[7603]=0;J[7600]=-1084636143;J[7601]=0;J[7598]=1057396420;J[7599]=0;J[7596]=-1098475836;J[7597]=-1085334679;J[7594]=1057396386;J[7595]=0;J[7592]=1060121912;J[7593]=-1090519141;J[7590]=-2147483648;J[7591]=0;J[7588]=1058437413;J[7589]=1062149053;J[7586]=-2147483648;J[7587]=0;J[7584]=-2147483648;J[7585]=1065353216;J[7582]=-2147483648;J[7583]=0;J[7580]=-1089046235;J[7581]=1062149053;J[7578]=-2147483648;J[7579]=0;J[7576]=-1082951543;J[7577]=1050556148;J[7574]=-2147483648;J[7575]=0;J[7572]=-1082951543;J[7573]=-1096927500;J[7570]=0;J[7571]=0;J[7568]=-1089046235;J[7569]=-1085334595;J[7566]=0;J[7567]=0;J[7564]=0;J[7565]=-1082130432;J[7562]=0;J[7563]=0;J[7560]=1058437413;J[7561]=-1085334595;J[7558]=0;J[7559]=0;J[7556]=1064532105;J[7557]=-1096927500;J[7554]=0;J[7555]=0;J[7552]=1064532105;J[7553]=1050556148;J[7550]=-1090087228;J[7551]=0;J[7548]=1049007812;J[7549]=1062148969;J[7546]=-1090087262;J[7547]=0;J[7544]=-1087361736;J[7545]=1056964507;J[7542]=-1084636042;J[7543]=0;J[7540]=-1104782626;J[7541]=1056964440;J[7538]=-1090087262;J[7539]=0;J[7536]=-1087361736;J[7537]=-1090519141;J[7534]=-1084636076;J[7535]=0;J[7532]=-1090087362;J[7533]=-2147483648;J[7530]=-1090087262;J[7531]=0;J[7528]=1062847505;J[7529]=-2147483648;J[7526]=-1084636042;J[7527]=0;J[7524]=1054458864;J[7525]=1050556081;J[7522]=-1090087228;J[7523]=0;J[7520]=1049007812;J[7521]=-1085334679;J[7518]=-1084636042;J[7519]=0;J[7516]=-1104782626;J[7517]=-1090519208;J[7514]=-1084636042;J[7515]=0;J[7512]=1054458864;J[7513]=-1096927567;J[7510]=1065353216;J[7511]=0;J[7508]=-2147483648;J[7509]=0;J[7506]=1055193471;J[7507]=0;J[7504]=1063581978;J[7505]=0;J[7502]=1055193572;J[7503]=0;J[7500]=1049461434;J[7501]=1062847522;J[7498]=1055193572;J[7499]=0;J[7496]=-1086767520;J[7497]=1057396202;J[7494]=1055193572;J[7495]=0;J[7492]=-1086767520;J[7493]=-1090087446;J[7490]=1055193605;J[7491]=0;J[7488]=1049461434;J[7489]=-1084636126;J[7486]=-1092290076;J[7487]=0;J[7484]=1060716128;J[7485]=1057396202;J[7482]=-1092290043;J[7483]=0;J[7480]=-1098022214;J[7481]=1062847522;J[7478]=-1092290177;J[7479]=0;J[7476]=-1083901670;J[7477]=-2147483648;J[7474]=-1092290076;J[7475]=0;J[7472]=-1098022214;J[7473]=-1084636126;J[7470]=-1092290076;J[7471]=0;J[7468]=1060716128;J[7469]=-1090087446;J[7466]=-1082130432;J[7467]=0;J[7464]=0;J[7465]=-2147483648;H[30848]=1}}function Je(){if(!K[31872]){J[7886]=1062847606;J[7887]=0;J[7884]=1042701022;J[7885]=1056964440;J[7882]=1062847606;J[7883]=0;J[7880]=-1093024784;J[7881]=1050556081;J[7878]=1062847606;J[7879]=0;J[7876]=-1093024784;J[7877]=-1096927567;J[7874]=1062847606;J[7875]=0;J[7872]=1042701022;J[7873]=-1090519208;J[7870]=1062847572;J[7871]=0;J[7868]=1057396286;J[7869]=0;J[7866]=1057396386;J[7867]=0;J[7864]=1060121912;J[7865]=1056964507;J[7862]=1057396420;J[7863]=0;J[7860]=-1098475836;J[7861]=1062148969;J[7858]=1057396386;J[7859]=0;J[7856]=-1084636143;J[7857]=0;J[7854]=1057396420;J[7855]=0;J[7852]=-1098475836;J[7853]=-1085334679;J[7850]=1057396386;J[7851]=0;J[7848]=1060121912;J[7849]=-1090519141;J[7846]=-2147483648;J[7847]=0;J[7844]=1058437413;J[7845]=1062149053;J[7842]=-2147483648;J[7843]=0;J[7840]=-2147483648;J[7841]=1065353216;J[7838]=-2147483648;J[7839]=0;J[7836]=-1089046235;J[7837]=1062149053;J[7834]=-2147483648;J[7835]=0;J[7832]=-1082951543;J[7833]=1050556148;J[7830]=-2147483648;J[7831]=0;J[7828]=-1082951543;J[7829]=-1096927500;J[7826]=0;J[7827]=0;J[7824]=-1089046235;J[7825]=-1085334595;J[7822]=0;J[7823]=0;J[7820]=0;J[7821]=-1082130432;J[7818]=0;J[7819]=0;J[7816]=1058437413;J[7817]=-1085334595;J[7814]=0;J[7815]=0;J[7812]=1064532105;J[7813]=-1096927500;J[7810]=0;J[7811]=0;J[7808]=1064532105;J[7809]=1050556148;J[7806]=-1090087228;J[7807]=0;J[7804]=1049007812;J[7805]=1062148969;J[7802]=-1090087262;J[7803]=0;J[7800]=-1087361736;J[7801]=1056964507;J[7798]=-1084636042;J[7799]=0;J[7796]=-1104782626;J[7797]=1056964440;J[7794]=-1090087262;J[7795]=0;J[7792]=-1087361736;J[7793]=-1090519141;J[7790]=-1084636076;J[7791]=0;J[7788]=-1090087362;J[7789]=-2147483648;J[7786]=-1090087262;J[7787]=0;J[7784]=1062847505;J[7785]=-2147483648;J[7782]=-1084636042;J[7783]=0;J[7780]=1054458864;J[7781]=1050556081;J[7778]=-1090087228;J[7779]=0;J[7776]=1049007812;J[7777]=-1085334679;J[7774]=-1084636042;J[7775]=0;J[7772]=-1104782626;J[7773]=-1090519208;J[7770]=-1084636042;J[7771]=0;J[7768]=1054458864;J[7769]=-1096927567;J[7766]=1065353216;J[7767]=0;J[7764]=-2147483648;J[7765]=0;J[7762]=1055193471;J[7763]=0;J[7760]=1063581978;J[7761]=0;J[7758]=1055193572;J[7759]=0;J[7756]=1049461434;J[7757]=1062847522;J[7754]=1055193572;J[7755]=0;J[7752]=-1086767520;J[7753]=1057396202;J[7750]=1055193572;J[7751]=0;J[7748]=-1086767520;J[7749]=-1090087446;J[7746]=1055193605;J[7747]=0;J[7744]=1049461434;J[7745]=-1084636126;J[7742]=-1092290076;J[7743]=0;J[7740]=1060716128;J[7741]=1057396202;J[7738]=-1092290043;J[7739]=0;J[7736]=-1098022214;J[7737]=1062847522;J[7734]=-1092290177;J[7735]=0;J[7732]=-1083901670;J[7733]=-2147483648;J[7730]=-1092290076;J[7731]=0;J[7728]=-1098022214;J[7729]=-1084636126;J[7726]=-1092290076;J[7727]=0;J[7724]=1060716128;J[7725]=-1090087446;J[7722]=-1082130432;J[7723]=0;J[7720]=0;J[7721]=-2147483648;H[31872]=1}}function mg(a,b){var c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=0,B=Q(0),C=Q(0);i=ga-32|0;ga=i;c=J[a+192>>2];d=Q(ia[J[J[c>>2]+48>>2]](c));j=J[a+712>>2];if((j|0)>0){k=a+928|0;while(1){l=N[b+48>>2];m=N[b+8>>2];n=N[b+4>>2];o=N[b>>2];p=N[b+52>>2];q=N[b+24>>2];r=N[b+20>>2];s=N[b+16>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+36>>2];t=N[b+32>>2];c=J[a+720>>2]+P(e,104)|0;J[c+20>>2]=0;w=f;f=N[c+16>>2];u=Q(h*f);h=N[c+8>>2];v=g;g=N[c+12>>2];t=Q(w+Q(u+Q(Q(t*h)+Q(v*g))));N[c+16>>2]=t;p=Q(p+Q(Q(f*q)+Q(Q(h*s)+Q(g*r))));N[c+12>>2]=p;l=Q(l+Q(Q(f*m)+Q(Q(h*o)+Q(g*n))));N[c+8>>2]=l;m=N[b+48>>2];n=N[b+8>>2];o=N[b>>2];q=N[b+4>>2];r=N[b+52>>2];s=N[b+24>>2];v=N[b+16>>2];u=N[b+20>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+32>>2];x=N[b+36>>2];J[c+36>>2]=0;w=f;f=N[c+32>>2];B=Q(h*f);h=N[c+24>>2];C=Q(g*h);g=N[c+28>>2];N[c+32>>2]=w+Q(B+Q(C+Q(x*g)));N[c+28>>2]=r+Q(Q(f*s)+Q(Q(h*v)+Q(g*u)));N[c+24>>2]=m+Q(Q(f*n)+Q(Q(h*o)+Q(g*q)));f=N[c+80>>2];h=N[c+72>>2];g=N[c+76>>2];m=N[b+8>>2];n=N[b>>2];o=N[b+4>>2];q=N[b+24>>2];r=N[b+16>>2];s=N[b+20>>2];v=N[b+40>>2];u=N[b+32>>2];x=N[b+36>>2];J[c+84>>2]=0;N[c+80>>2]=Q(v*f)+Q(Q(u*h)+Q(g*x));N[c+76>>2]=Q(q*f)+Q(Q(r*h)+Q(g*s));N[c+72>>2]=Q(m*f)+Q(Q(n*h)+Q(o*g));J[i+28>>2]=0;N[i+24>>2]=d+t;N[i+20>>2]=d+p;N[i+16>>2]=d+l;J[i+12>>2]=0;N[i+8>>2]=t-d;N[i+4>>2]=p-d;N[i>>2]=l-d;Gc(k,J[c+96>>2],i);e=e+1|0;if((j|0)!=(e|0)){continue}break}}lg(a);c=J[a+928>>2];a:{if(c){e=J[a+192>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));f=N[c>>2];h=N[c+4>>2];g=N[c+8>>2];J[a+904>>2]=0;N[a+900>>2]=g-d;N[a+896>>2]=h-d;N[a+892>>2]=f-d;f=N[c+20>>2];h=N[c+24>>2];g=N[c+16>>2];J[a+920>>2]=0;N[a+916>>2]=d+h;N[a+912>>2]=d+f;c=a+908|0;N[c>>2]=d+g;e=J[a+188>>2];if(!e){break a}j=J[a+684>>2];k=J[j+32>>2];ia[J[J[k>>2]+16>>2]](k,e,a+892|0,c,J[j+36>>2]);break a}J[a+892>>2]=0;J[a+896>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0}k=J[a+732>>2];if((k|0)>0){A=J[a+740>>2];e=0;c=0;while(1){j=P(c,52)+A|0;y=J[j+8>>2];z=J[j+12>>2];d=Q(N[y+16>>2]-N[z+16>>2]);f=Q(d*d);d=Q(N[y+8>>2]-N[z+8>>2]);g=Q(d*d);d=Q(N[y+12>>2]-N[z+12>>2]);d=Q(Y(Q(f+Q(g+Q(d*d)))));N[j+16>>2]=d;N[j+28>>2]=d*d;c=c+1|0;if((k|0)!=(c|0)){continue}break}while(1){c=P(e,52)+A|0;N[c+24>>2]=Q(N[J[c+8>>2]+88>>2]+N[J[c+12>>2]+88>>2])/N[J[c+4>>2]+4>>2];e=e+1|0;if((k|0)!=(e|0)){continue}break}}kg(a);e=J[b+12>>2];c=a+1156|0;J[c>>2]=J[b+8>>2];J[c+4>>2]=e;c=J[b+4>>2];J[a+1148>>2]=J[b>>2];J[a+1152>>2]=c;e=J[b+28>>2];c=a+1172|0;J[c>>2]=J[b+24>>2];J[c+4>>2]=e;e=J[b+20>>2];c=a+1164|0;J[c>>2]=J[b+16>>2];J[c+4>>2]=e;e=J[b+36>>2];c=a+1180|0;J[c>>2]=J[b+32>>2];J[c+4>>2]=e;e=J[b+44>>2];c=a+1188|0;J[c>>2]=J[b+40>>2];J[c+4>>2]=e;e=J[b+60>>2];c=a+1204|0;J[c>>2]=J[b+56>>2];J[c+4>>2]=e;c=J[b+52>>2];a=a+1196|0;J[a>>2]=J[b+48>>2];J[a+4>>2]=c;ga=i+32|0}function xo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=ga-496|0;ga=g;J[g+492>>2]=a;N[g+488>>2]=b;N[g+484>>2]=c;J[g+480>>2]=d;J[g+476>>2]=e;J[g+472>>2]=f;a=J[g+492>>2];J[g+468>>2]=30;N[g+444>>2]=0;N[g+440>>2]=0;N[g+436>>2]=0;e=g+448|0;na(e,g+444|0,g+440|0,g+436|0);b=Q(-N[g+484>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+(J[g+480>>2]<<2)>>2]=b;N[g+412>>2]=0;N[g+408>>2]=0;N[g+404>>2]=0;h=g+416|0;na(h,g+412|0,g+408|0,g+404|0);b=N[g+484>>2];d=ga-16|0;J[d+12>>2]=h;N[J[d+12>>2]+(J[g+480>>2]<<2)>>2]=b;d=g+336|0;_b(d,J[g+476>>2]);za(g+320|0,J[g+476>>2],e);e=ga-16|0;J[e+12>>2]=d;f=J[g+324>>2];e=J[e+12>>2]+48|0;J[e>>2]=J[g+320>>2];J[e+4>>2]=f;f=J[g+332>>2];J[e+8>>2]=J[g+328>>2];J[e+12>>2]=f;f=ga-16|0;J[f+12>>2]=d;f=J[f+12>>2]+48|0;i=J[f+4>>2];e=g+304|0;J[e>>2]=J[f>>2];J[e+4>>2]=i;i=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=i;f=ga-16|0;J[f+12>>2]=d;i=g+288|0;pc(i,J[f+12>>2],(J[g+480>>2]+1|0)%3|0);f=ga-16|0;J[f+12>>2]=d;d=g+256|0;pc(d,J[f+12>>2],J[g+480>>2]);f=g+272|0;$b(f,d);N[g+252>>2]=-1.5707963705062866;N[g+248>>2]=1.5707963705062866;N[g+244>>2]=-1.5707963705062866;N[g+240>>2]=1.5707963705062866;ia[J[J[a>>2]+64>>2]](a,e,i,f,N[g+488>>2],N[g+252>>2],N[g+248>>2],N[g+244>>2],N[g+240>>2],J[g+472>>2],Q(J[g+468>>2]),0);d=g+176|0;_b(d,J[g+476>>2]);za(g+160|0,J[g+476>>2],h);e=ga-16|0;J[e+12>>2]=d;f=J[g+164>>2];e=J[e+12>>2]+48|0;J[e>>2]=J[g+160>>2];J[e+4>>2]=f;f=J[g+172>>2];J[e+8>>2]=J[g+168>>2];J[e+12>>2]=f;f=ga-16|0;J[f+12>>2]=d;f=J[f+12>>2]+48|0;h=J[f+4>>2];e=g+144|0;J[e>>2]=J[f>>2];J[e+4>>2]=h;h=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=h;f=ga-16|0;J[f+12>>2]=d;h=g+128|0;pc(h,J[f+12>>2],(J[g+480>>2]+1|0)%3|0);f=ga-16|0;J[f+12>>2]=d;d=g+112|0;pc(d,J[f+12>>2],J[g+480>>2]);N[g+108>>2]=-1.5707963705062866;N[g+104>>2]=1.5707963705062866;N[g+100>>2]=-1.5707963705062866;N[g+96>>2]=1.5707963705062866;ia[J[J[a>>2]+64>>2]](a,e,h,d,N[g+488>>2],N[g+108>>2],N[g+104>>2],N[g+100>>2],N[g+96>>2],J[g+472>>2],Q(J[g+468>>2]),0);d=ga-16|0;J[d+12>>2]=J[g+476>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+80>>2]=J[d>>2];J[g+84>>2]=e;e=J[d+12>>2];J[g+88>>2]=J[d+8>>2];J[g+92>>2]=e;J[g+76>>2]=0;while(1){if(J[g+76>>2]<360){b=Q(Sa(Q(Q(J[g+76>>2])*Q(.01745329238474369)))*N[g+488>>2]);d=ga-16|0;e=g+448|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+480>>2]+1|0)%3<<2)>>2]=b;f=g+416|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+480>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+76>>2])*Q(.01745329238474369)))*N[g+488>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+480>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+480>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=J[g+476>>2];h=g+40|0;wa(h,J[d+12>>2],e);d=g+56|0;e=g+80|0;va(d,e,h);h=ga-16|0;J[h+12>>2]=J[g+476>>2];i=g+8|0;wa(i,J[h+12>>2],f);f=g+24|0;va(f,e,i);ia[J[J[a>>2]+8>>2]](a,d,f,J[g+472>>2]);J[g+76>>2]=J[g+468>>2]+J[g+76>>2];continue}break}ga=g+496|0}function Me(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0;f=Q(-1);l=N[a>>2];i=N[b>>2];g=Q(l-i);k=N[b+4>>2];u=N[c+4>>2];z=Q(k-u);v=N[c>>2];A=Q(i-v);q=N[a+4>>2];j=Q(q-k);m=Q(Q(g*z)-Q(A*j));h=N[b+8>>2];w=N[c+8>>2];B=Q(h-w);r=N[a+8>>2];o=Q(r-h);x=Q(Q(j*B)-Q(z*o));y=Q(Q(o*A)-Q(B*g));D=Q(Q(m*m)+Q(Q(x*x)+Q(y*y)));a:{if(!(D>Q(0))){break a}b:{if(!(Q(Q(r*Q(Q(g*y)+Q(x*Q(-j))))+Q(Q(l*Q(Q(j*m)+Q(y*Q(-o))))+Q(q*Q(Q(o*x)+Q(m*Q(-g))))))>Q(0))){j=Q(-1);g=Q(0);break b}j=Q(-1);o=Q(h-r);n=Q(i-l);p=Q(k-q);f=Q(Q(o*o)+Q(Q(n*n)+Q(p*p)));c:{if(!(f>Q(0))){g=Q(0);s=0;break c}g=Q(1);f=Q(Q(-Q(Q(r*o)+Q(Q(l*n)+Q(q*p))))/f);if(f>=Q(1)){j=Q(Q(h*h)+Q(Q(i*i)+Q(k*k)));s=2;break c}g=Q(0);if(f<=Q(0)){j=Q(Q(r*r)+Q(Q(l*l)+Q(q*q)));t=Q(1);s=1;break c}g=Q(r+Q(o*f));j=Q(g*g);g=Q(l+Q(n*f));i=Q(g*g);g=Q(q+Q(p*f));j=Q(j+Q(i+Q(g*g)));t=Q(Q(1)-f);g=f;s=3}J[e>>2]=s;J[d+8>>2]=0;N[d+4>>2]=g;N[d>>2]=t;h=N[b+8>>2];k=N[b+4>>2];i=N[b>>2]}r=Q(w-r);q=Q(u-q);o=Q(v-l);d:{if(!(Q(Q(h*Q(Q(A*y)-Q(x*z)))+Q(Q(i*Q(Q(z*m)-Q(y*B)))+Q(k*Q(Q(B*x)-Q(m*A)))))>Q(0))){f=j;break d}E=j<Q(0);u=N[c+8>>2];l=Q(u-h);v=N[c>>2];n=Q(v-i);w=N[c+4>>2];p=Q(w-k);C=Q(Q(l*l)+Q(Q(n*n)+Q(p*p)));f=Q(-1);e:{if(!(C>Q(0))){break e}g=Q(1);f=Q(Q(-Q(Q(h*l)+Q(Q(i*n)+Q(k*p))))/C);if(f>=Q(1)){t=Q(0);s=2;f=Q(Q(u*u)+Q(Q(v*v)+Q(w*w)));break e}g=Q(0);if(f<=Q(0)){t=Q(1);s=1;f=Q(Q(h*h)+Q(Q(i*i)+Q(k*k)));break e}t=Q(Q(1)-f);s=3;g=f;h=Q(h+Q(l*f));i=Q(i+Q(n*f));f=Q(k+Q(p*f));f=Q(Q(h*h)+Q(Q(i*i)+Q(f*f)))}if(!(E|j>f)){f=j;break d}J[e>>2]=s<<1;N[d+8>>2]=g;N[d+4>>2]=t;J[d>>2]=0}k=N[c+8>>2];h=N[c>>2];l=N[c+4>>2];f:{if(!(Q(Q(k*Q(Q(o*y)-Q(x*q)))+Q(Q(h*Q(Q(q*m)-Q(y*r)))+Q(l*Q(Q(r*x)-Q(m*o)))))>Q(0))){break f}i=Q(-1);v=N[a+8>>2];n=Q(v-k);w=N[a>>2];p=Q(w-h);C=N[a+4>>2];u=Q(C-l);j=Q(Q(n*n)+Q(Q(p*p)+Q(u*u)));g:{if(!(j>Q(0))){break g}g=Q(1);j=Q(Q(-Q(Q(k*n)+Q(Q(h*p)+Q(l*u))))/j);if(j>=Q(1)){i=Q(Q(v*v)+Q(Q(w*w)+Q(C*C)));t=Q(0);s=2;break g}g=Q(0);if(j<=Q(0)){i=Q(Q(k*k)+Q(Q(h*h)+Q(l*l)));t=Q(1);s=1;break g}g=Q(k+Q(n*j));i=Q(g*g);g=Q(h+Q(p*j));h=Q(g*g);g=Q(l+Q(u*j));i=Q(i+Q(h+Q(g*g)));t=Q(Q(1)-j);s=3;g=j}if(!(f<Q(0)|f>i)){break f}J[e>>2]=s<<2&4|s>>>1;J[d+4>>2]=0;N[d>>2]=g;N[d+8>>2]=t;f=i}if(!(f<Q(0))){break a}f=N[a+8>>2];g=N[a>>2];j=N[a+4>>2];J[e>>2]=7;j=Q(Q(Q(f*m)+Q(Q(g*x)+Q(y*j)))/D);f=Q(y*j);i=Q(N[b+4>>2]-f);g=Q(x*j);k=Q(N[b>>2]-g);h=Q(Q(A*i)+Q(k*Q(-z)));l=Q(h*h);j=Q(m*j);h=Q(N[b+8>>2]-j);i=Q(Q(z*h)+Q(i*Q(-B)));m=Q(i*i);i=Q(Q(B*k)+Q(h*Q(-A)));h=Q(Y(Q(l+Q(m+Q(i*i)))));i=Q(Y(D));k=Q(h/i);N[d>>2]=k;h=Q(N[c+4>>2]-f);t=Q(N[c>>2]-g);m=Q(Q(o*h)+Q(t*Q(-q)));l=Q(m*m);m=Q(N[c+8>>2]-j);h=Q(Q(q*m)+Q(h*Q(-r)));n=Q(h*h);h=Q(Q(r*t)+Q(m*Q(-o)));i=Q(Q(Y(Q(l+Q(n+Q(h*h)))))/i);N[d+4>>2]=i;N[d+8>>2]=Q(1)-Q(k+i);f=Q(Q(j*j)+Q(Q(g*g)+Q(f*f)))}return f}function _y(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0);e=ga-240|0;ga=e;h=Q(1);a=K[a+8|0];d=a?c:b;k=N[d+60>>2];g=Q(N[d+124>>2]-k);f=Q(g*g);u=N[d+52>>2];g=Q(N[d+116>>2]-u);s=Q(g*g);w=N[d+56>>2];g=Q(N[d+120>>2]-w);f=Q(f+Q(s+Q(g*g)));g=N[d+252>>2];a:{if(f<Q(g*g)){break a}a=a?b:c;b=J[a+192>>2];if(J[b+4>>2]-21>>>0>8){break a}i=N[a+28>>2];h=N[d+92>>2];V=Q(i*h);g=N[d+76>>2];f=N[a+12>>2];W=Q(g*f);x=N[d+108>>2];y=N[d+88>>2];X=Q(i*y);z=N[d+72>>2];Y=Q(z*f);A=N[d+104>>2];B=N[d+100>>2];C=N[d+84>>2];Z=Q(i*C);D=N[d+68>>2];_=Q(D*f);l=N[a+24>>2];$=Q(l*h);m=N[a+8>>2];aa=Q(g*m);n=N[a+36>>2];o=N[a+20>>2];ba=Q(o*h);p=N[a+4>>2];ca=Q(g*p);E=N[d+28>>2];da=Q(i*E);F=N[d+12>>2];ea=Q(F*f);G=N[d+44>>2];H=N[d+24>>2];fa=Q(i*H);I=N[d+8>>2];ha=Q(I*f);L=N[d+40>>2];M=N[d+36>>2];O=N[d+20>>2];ja=Q(i*O);P=N[d+4>>2];ka=Q(P*f);h=Q(-N[a+52>>2]);j=N[a+56>>2];q=N[a+44>>2];s=N[a+60>>2];T=Q(Q(Q(f*h)-Q(i*j))-Q(q*s));t=N[d+124>>2];R=N[d+116>>2];S=N[d+120>>2];la=Q(Q(t*q)+Q(Q(R*f)+Q(i*S)));r=N[a+40>>2];U=Q(Q(Q(m*h)-Q(l*j))-Q(r*s));g=Q(U+Q(Q(t*r)+Q(Q(R*m)+Q(l*S))));J[e+236>>2]=0;h=Q(Q(Q(p*h)-Q(o*j))-Q(n*s));v=Q(h+Q(Q(k*n)+Q(Q(u*p)+Q(o*w))));s=v;j=Q(h+Q(Q(t*n)+Q(Q(R*p)+Q(o*S))));if(j<v){N[e+224>>2]=j;s=j}t=Q(U+Q(Q(k*r)+Q(Q(u*m)+Q(l*w))));h=t;if(g<h){N[e+228>>2]=g;h=g}k=Q(T+Q(Q(k*q)+Q(Q(u*f)+Q(i*w))));f=k;i=Q(T+la);if(f>i){N[e+232>>2]=i;f=i}J[e+220>>2]=0;u=f;f=N[d+248>>2];N[e+232>>2]=u-f;N[e+228>>2]=h-f;N[e+224>>2]=s-f;N[e+216>>2]=f+(i>k?i:k);N[e+212>>2]=f+(g>t?g:t);N[e+208>>2]=f+(j>v?j:v);J[e+128>>2]=0;N[e+124>>2]=i;N[e+120>>2]=g;N[e+116>>2]=j;J[e+112>>2]=0;N[e+108>>2]=Q(x*q)+Q(W+V);N[e+104>>2]=Q(A*q)+Q(Y+X);N[e+100>>2]=Q(B*q)+Q(_+Z);J[e+96>>2]=0;N[e+92>>2]=Q(x*r)+Q(aa+$);N[e+88>>2]=Q(A*r)+Q(Q(z*m)+Q(l*y));N[e+84>>2]=Q(B*r)+Q(Q(D*m)+Q(l*C));J[e+80>>2]=0;N[e+76>>2]=Q(x*n)+Q(ca+ba);N[e+72>>2]=Q(A*n)+Q(Q(z*p)+Q(o*y));J[e- -64>>2]=0;N[e+60>>2]=k;N[e+56>>2]=t;N[e+52>>2]=v;J[e+48>>2]=0;N[e+44>>2]=Q(G*q)+Q(ea+da);N[e+40>>2]=Q(L*q)+Q(ha+fa);N[e+36>>2]=Q(M*q)+Q(ka+ja);J[e+32>>2]=0;N[e+28>>2]=Q(G*r)+Q(Q(F*m)+Q(l*E));N[e+24>>2]=Q(L*r)+Q(Q(I*m)+Q(l*H));N[e+20>>2]=Q(M*r)+Q(Q(P*m)+Q(l*O));J[e+16>>2]=0;N[e+12>>2]=Q(G*n)+Q(Q(F*p)+Q(o*E));N[e+8>>2]=Q(L*n)+Q(Q(I*p)+Q(o*H));N[e+196>>2]=f;N[e+68>>2]=Q(B*n)+Q(Q(D*p)+Q(o*C));N[e+4>>2]=Q(M*n)+Q(Q(P*p)+Q(o*O));J[e>>2]=22040;N[e+200>>2]=N[d+244>>2];ia[J[J[b>>2]+64>>2]](b,e,e+224|0,e+208|0);h=N[e+200>>2];if(h<N[d+244>>2]){N[d+244>>2]=h;break a}h=Q(1)}ga=e+240|0;return Q(h)}function IG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0);e=ga-240|0;ga=e;h=Q(1);a=K[a+8|0];d=a?c:b;k=N[d+60>>2];g=Q(N[d+124>>2]-k);f=Q(g*g);u=N[d+52>>2];g=Q(N[d+116>>2]-u);s=Q(g*g);w=N[d+56>>2];g=Q(N[d+120>>2]-w);f=Q(f+Q(s+Q(g*g)));g=N[d+252>>2];a:{if(f<Q(g*g)){break a}a=a?b:c;b=J[a+192>>2];if(J[b+4>>2]-21>>>0>8){break a}i=N[a+28>>2];h=N[d+92>>2];V=Q(i*h);g=N[d+76>>2];f=N[a+12>>2];W=Q(g*f);x=N[d+108>>2];y=N[d+88>>2];X=Q(i*y);z=N[d+72>>2];Y=Q(z*f);A=N[d+104>>2];B=N[d+100>>2];C=N[d+84>>2];Z=Q(i*C);D=N[d+68>>2];_=Q(D*f);l=N[a+24>>2];$=Q(l*h);m=N[a+8>>2];aa=Q(g*m);n=N[a+36>>2];o=N[a+20>>2];ba=Q(o*h);p=N[a+4>>2];ca=Q(g*p);E=N[d+28>>2];da=Q(i*E);F=N[d+12>>2];ea=Q(F*f);G=N[d+44>>2];H=N[d+24>>2];fa=Q(i*H);I=N[d+8>>2];ha=Q(I*f);L=N[d+40>>2];M=N[d+36>>2];O=N[d+20>>2];ja=Q(i*O);P=N[d+4>>2];ka=Q(P*f);h=Q(-N[a+52>>2]);j=N[a+56>>2];q=N[a+44>>2];s=N[a+60>>2];T=Q(Q(Q(f*h)-Q(i*j))-Q(q*s));t=N[d+124>>2];R=N[d+116>>2];S=N[d+120>>2];la=Q(Q(t*q)+Q(Q(R*f)+Q(i*S)));r=N[a+40>>2];U=Q(Q(Q(m*h)-Q(l*j))-Q(r*s));g=Q(U+Q(Q(t*r)+Q(Q(R*m)+Q(l*S))));J[e+236>>2]=0;h=Q(Q(Q(p*h)-Q(o*j))-Q(n*s));v=Q(h+Q(Q(k*n)+Q(Q(u*p)+Q(o*w))));s=v;j=Q(h+Q(Q(t*n)+Q(Q(R*p)+Q(o*S))));if(j<v){N[e+224>>2]=j;s=j}t=Q(U+Q(Q(k*r)+Q(Q(u*m)+Q(l*w))));h=t;if(g<h){N[e+228>>2]=g;h=g}k=Q(T+Q(Q(k*q)+Q(Q(u*f)+Q(i*w))));f=k;i=Q(T+la);if(f>i){N[e+232>>2]=i;f=i}J[e+220>>2]=0;u=f;f=N[d+248>>2];N[e+232>>2]=u-f;N[e+228>>2]=h-f;N[e+224>>2]=s-f;N[e+216>>2]=f+(i>k?i:k);N[e+212>>2]=f+(g>t?g:t);N[e+208>>2]=f+(j>v?j:v);J[e+128>>2]=0;N[e+124>>2]=i;N[e+120>>2]=g;N[e+116>>2]=j;J[e+112>>2]=0;N[e+108>>2]=Q(x*q)+Q(W+V);N[e+104>>2]=Q(A*q)+Q(Y+X);N[e+100>>2]=Q(B*q)+Q(_+Z);J[e+96>>2]=0;N[e+92>>2]=Q(x*r)+Q(aa+$);N[e+88>>2]=Q(A*r)+Q(Q(z*m)+Q(l*y));N[e+84>>2]=Q(B*r)+Q(Q(D*m)+Q(l*C));J[e+80>>2]=0;N[e+76>>2]=Q(x*n)+Q(ca+ba);N[e+72>>2]=Q(A*n)+Q(Q(z*p)+Q(o*y));J[e- -64>>2]=0;N[e+60>>2]=k;N[e+56>>2]=t;N[e+52>>2]=v;J[e+48>>2]=0;N[e+44>>2]=Q(G*q)+Q(ea+da);N[e+40>>2]=Q(L*q)+Q(ha+fa);N[e+36>>2]=Q(M*q)+Q(ka+ja);J[e+32>>2]=0;N[e+28>>2]=Q(G*r)+Q(Q(F*m)+Q(l*E));N[e+24>>2]=Q(L*r)+Q(Q(I*m)+Q(l*H));N[e+20>>2]=Q(M*r)+Q(Q(P*m)+Q(l*O));J[e+16>>2]=0;N[e+12>>2]=Q(G*n)+Q(Q(F*p)+Q(o*E));N[e+8>>2]=Q(L*n)+Q(Q(I*p)+Q(o*H));N[e+196>>2]=f;N[e+68>>2]=Q(B*n)+Q(Q(D*p)+Q(o*C));N[e+4>>2]=Q(M*n)+Q(Q(P*p)+Q(o*O));J[e>>2]=9516;N[e+200>>2]=N[d+244>>2];ia[J[J[b>>2]+64>>2]](b,e,e+224|0,e+208|0);h=N[e+200>>2];if(h<N[d+244>>2]){N[d+244>>2]=h;break a}h=Q(1)}ga=e+240|0;return Q(h)}function cf(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(!(!b|!c)){if(!(J[a+24>>2]>127|J[a+28>>2]>127)){J[8369]=J[8369]+1;l=ia[J[6782]](1024,16)|0;g=J[a+24>>2];a:{if((g|0)<=0){break a}if(g-1>>>0>=3){p=g&-4;while(1){f=n<<3;i=f+l|0;h=f+J[a+32>>2]|0;m=J[h+4>>2];J[i>>2]=J[h>>2];J[i+4>>2]=m;i=f|8;h=i+l|0;i=i+J[a+32>>2]|0;m=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=m;i=f|16;h=i+l|0;i=i+J[a+32>>2]|0;m=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=m;f=f|24;i=f+l|0;f=f+J[a+32>>2]|0;h=J[f+4>>2];J[i>>2]=J[f>>2];J[i+4>>2]=h;n=n+4|0;e=e+4|0;if((p|0)!=(e|0)){continue}break}}e=g&3;if(!e){break a}while(1){f=n<<3;g=f+l|0;f=f+J[a+32>>2]|0;p=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=p;n=n+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}e=J[a+32>>2];if(!(e?!e|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+32>>2]=l;H[a+36|0]=1;J[a+28>>2]=128}J[a+24>>2]=128;e=J[a+32>>2];J[e+4>>2]=c;J[e>>2]=b;b=124;e=1;while(1){j=J[a+32>>2];l=e;e=e-1|0;i=e<<3;c=j+i|0;g=J[c+4>>2];f=J[c>>2];if((b|0)<(e|0)){b=J[a+24>>2];p=b<<1;if(!((p|0)<=J[a+28>>2]|(b|0)>=(p|0))){b:{if(!b){j=0;break b}J[8369]=J[8369]+1;j=ia[J[6782]](b<<4,16)|0;m=J[a+24>>2];if((m|0)<=0){break b}b=0;n=0;if(m-1>>>0>=3){r=m&-4;c=0;while(1){h=n<<3;k=h+j|0;o=h+J[a+32>>2]|0;q=J[o+4>>2];J[k>>2]=J[o>>2];J[k+4>>2]=q;k=h|8;o=k+j|0;k=k+J[a+32>>2]|0;q=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=q;k=h|16;o=k+j|0;k=k+J[a+32>>2]|0;q=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=q;h=h|24;k=h+j|0;h=h+J[a+32>>2]|0;o=J[h+4>>2];J[k>>2]=J[h>>2];J[k+4>>2]=o;n=n+4|0;c=c+4|0;if((r|0)!=(c|0)){continue}break}}c=m&3;if(!c){break b}while(1){h=n<<3;m=h+j|0;h=h+J[a+32>>2]|0;r=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=r;n=n+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=j;H[a+36|0]=1;J[a+28>>2]=p}J[a+24>>2]=p;b=p-4|0}c:{if((f|0)==(g|0)){if(!J[f+40>>2]){break c}c=j+i|0;e=J[f+36>>2];J[c+4>>2]=e;J[c>>2]=e;c=l<<3;e=c+J[a+32>>2]|0;g=J[f+40>>2];J[e+4>>2]=g;J[e>>2]=g;e=J[f+40>>2];c=c+J[a+32>>2]|0;J[c+8>>2]=J[f+36>>2];J[c+12>>2]=e;e=l+2|0;break c}if(!(N[f>>2]<=N[g+16>>2])|!(N[f+16>>2]>=N[g>>2])|(!(N[f+4>>2]<=N[g+20>>2])|!(N[f+20>>2]>=N[g+4>>2]))){break c}if(!(N[f+8>>2]<=N[g+24>>2])|!(N[f+24>>2]>=N[g+8>>2])){break c}c=J[g+40>>2];if(J[f+40>>2]){e=J[f+36>>2];if(c){c=j+i|0;J[c+4>>2]=J[g+36>>2];J[c>>2]=e;e=J[f+40>>2];c=l<<3;j=c+J[a+32>>2]|0;J[j+4>>2]=J[g+36>>2];J[j>>2]=e;e=J[f+36>>2];j=c+J[a+32>>2]|0;J[j+12>>2]=J[g+40>>2];J[j+8>>2]=e;e=J[f+40>>2];c=c+J[a+32>>2]|0;J[c+20>>2]=J[g+40>>2];J[c+16>>2]=e;e=l+3|0;break c}c=j+i|0;J[c+4>>2]=g;J[c>>2]=e;c=J[f+40>>2];e=J[a+32>>2]+(l<<3)|0;J[e+4>>2]=g;J[e>>2]=c;e=l+1|0;break c}if(c){c=j+i|0;J[c+4>>2]=J[g+36>>2];J[c>>2]=f;c=J[a+32>>2]+(l<<3)|0;J[c+4>>2]=J[g+40>>2];J[c>>2]=f;e=l+1|0;break c}ia[J[J[d>>2]+8>>2]](d,f,g)}if(e){continue}break}}}function eh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[a>>2]=10268;J[8369]=J[8369]+1;c=ia[J[6782]](360,16)|0;J[c+308>>2]=953267991;H[c+332|0]=K[c+332|0]&240;J[a+24>>2]=c;c=J[b+20>>2];J[8369]=J[8369]+1;e=ia[J[6782]](4,16)|0;J[e>>2]=(c?18424:18584)+8;J[a+28>>2]=e;J[8369]=J[8369]+1;c=ia[J[6782]](24,16)|0;e=J[a+24>>2];f=J[a+28>>2];J[c+16>>2]=0;J[c+20>>2]=3;H[c+4|0]=0;J[c+12>>2]=e;J[c+8>>2]=f;J[c>>2]=8756;J[a+32>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10384;H[c+4|0]=0;J[a+36>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10508;H[c+4|0]=0;J[a+40>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10600;H[c+4|0]=0;J[a+44>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10680;H[c+4|0]=0;J[a+48>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10768;H[c+4|0]=0;J[a+52>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10852;H[c+4|0]=0;J[a+56>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10920;H[c+4|0]=0;J[a+60>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11004;H[c+4|0]=0;J[a+76>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11004;J[a+80>>2]=c;H[c+4|0]=1;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11088;H[c+4|0]=0;J[a+72>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](16,16)|0;J[c+8>>2]=1;J[c+12>>2]=0;J[c>>2]=11164;H[c+4|0]=0;J[a+88>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](16,16)|0;J[c+8>>2]=1;J[c+12>>2]=0;J[c>>2]=11164;J[a+84>>2]=c;H[c+4|0]=1;i=J[b+16>>2];c=J[b>>2];a:{if(c){J[a+8>>2]=c;H[a+12|0]=0;break a}H[a+12|0]=1;J[8369]=J[8369]+1;g=ia[J[6782]](20,16)|0;c=J[b+8>>2];J[g+4>>2]=c;J[g>>2]=772;J[8369]=J[8369]+1;c=ia[J[6782]](P(c,772),16)|0;J[g+12>>2]=c;J[g+16>>2]=c;j=J[g+4>>2];J[g+8>>2]=j;e=j-1|0;b:{if(!e){break b}f=J[g>>2];k=e&7;if(k){while(1){d=c;c=c+f|0;J[d>>2]=c;e=e-1|0;h=h+1|0;if((k|0)!=(h|0)){continue}break}}if(j-2>>>0<7){break b}while(1){d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;e=e-8|0;if(e){continue}break}}J[c>>2]=0;J[a+8>>2]=g}c=J[b+4>>2];if(c){J[a+16>>2]=c;H[a+20|0]=0;return}H[a+20|0]=1;J[8369]=J[8369]+1;f=ia[J[6782]](20,16)|0;b=J[b+12>>2];J[f+4>>2]=b;c=(i|0)>36?i:36;c=c>>>0>80?c:80;J[f>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](P(b,c),16)|0;J[f+12>>2]=c;J[f+16>>2]=c;g=J[f+4>>2];J[f+8>>2]=g;e=g-1|0;c:{if(!e){break c}b=J[f>>2];i=e&7;if(i){h=0;while(1){d=c;c=b+c|0;J[d>>2]=c;e=e-1|0;h=h+1|0;if((i|0)!=(h|0)){continue}break}}if(g-2>>>0<7){break c}while(1){d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;e=e-8|0;if(e){continue}break}}J[c>>2]=0;J[a+16>>2]=f}function Hg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0);g=ga-288|0;ga=g;Ie(J[a+4>>2]);j=N[b+52>>2];i=N[c+52>>2];n=N[d+52>>2];k=N[e+52>>2];l=N[b+56>>2];m=N[c+56>>2];o=N[d+56>>2];p=N[e+56>>2];q=N[b+48>>2];t=N[c+48>>2];u=N[d+48>>2];v=N[e+48>>2];H[g+264|0]=0;J[g+260>>2]=1566444395;J[g+224>>2]=18272;s=Bg(g+144|0,J[a+8>>2],J[a+12>>2],J[a+4>>2],0);J[g+136>>2]=1566444395;a=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=a;a=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=a;a=J[b+28>>2];J[g+32>>2]=J[b+24>>2];J[g+36>>2]=a;a=J[b+20>>2];J[g+24>>2]=J[b+16>>2];J[g+28>>2]=a;a=J[b+44>>2];J[g+48>>2]=J[b+40>>2];J[g+52>>2]=a;a=J[b+36>>2];J[g+40>>2]=J[b+32>>2];J[g+44>>2]=a;r=J[b+60>>2];a=g- -64|0;J[a>>2]=J[b+56>>2];J[a+4>>2]=r;a=J[b+52>>2];J[g+56>>2]=J[b+48>>2];J[g+60>>2]=a;a=J[d+12>>2];J[g+80>>2]=J[d+8>>2];J[g+84>>2]=a;a=J[d+4>>2];J[g+72>>2]=J[d>>2];J[g+76>>2]=a;a=J[d+20>>2];J[g+88>>2]=J[d+16>>2];J[g+92>>2]=a;a=J[d+28>>2];J[g+96>>2]=J[d+24>>2];J[g+100>>2]=a;a=J[d+44>>2];J[g+112>>2]=J[d+40>>2];J[g+116>>2]=a;a=J[d+36>>2];J[g+104>>2]=J[d+32>>2];J[g+108>>2]=a;a=J[d+52>>2];J[g+120>>2]=J[d+48>>2];J[g+124>>2]=a;a=J[d+60>>2];J[g+128>>2]=J[d+56>>2];J[g+132>>2]=a;zb(s,g+8|0,g+224|0,0,0);a=J[g+256>>2];J[g+280>>2]=J[g+252>>2];J[g+284>>2]=a;a=J[g+248>>2];J[g+272>>2]=J[g+244>>2];J[g+276>>2]=a;h=0;a:{if(!K[g+264|0]){break a}o=Q(Q(m-l)-Q(p-o));p=Q(Q(i-j)-Q(k-n));q=Q(Q(t-q)-Q(v-u));k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];i=N[g+260>>2];b:{c:{if(!(i>Q(.0010000000474974513))){j=Q(0);i=N[g+240>>2];break c}r=g+244|0;a=0;n=Q(0);while(1){h=0;if((a|0)==32){break a}j=Q(n-Q(i/Q(Q(o*k)+Q(Q(q*m)+Q(p*l)))));h=0;if(n>=j){break a}h=0;if(j>Q(1)){break a}h=0;if(j<Q(0)){break a}ia[J[J[f>>2]>>2]](f,j);i=Q(Q(1)-j);N[g+56>>2]=Q(i*N[b+48>>2])+Q(j*N[c+48>>2]);N[g+60>>2]=Q(i*N[b+52>>2])+Q(j*N[c+52>>2]);N[g+64>>2]=Q(i*N[b+56>>2])+Q(j*N[c+56>>2]);N[g+120>>2]=Q(i*N[d+48>>2])+Q(j*N[e+48>>2]);N[g+124>>2]=Q(i*N[d+52>>2])+Q(j*N[e+52>>2]);N[g+128>>2]=Q(i*N[d+56>>2])+Q(j*N[e+56>>2]);zb(s,g+8|0,g+224|0,0,0);h=0;if(!K[g+264|0]){break a}i=N[g+260>>2];if(i<Q(0)){N[f+164>>2]=j;i=N[g+240>>2];k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];break b}a=a+1|0;h=J[g+256>>2];J[g+280>>2]=J[g+252>>2];J[g+284>>2]=h;h=J[g+248>>2];J[g+272>>2]=J[g+244>>2];J[g+276>>2]=h;k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];n=j;if(i>Q(.0010000000474974513)){continue}break}i=N[g+240>>2]}h=0;if(Q(-N[f+172>>2])<=Q(Q(k*o)+Q(Q(m*q)+Q(p*l)))){break a}N[f+164>>2]=j;r=g+272|0}N[f+132>>2]=m;N[f+144>>2]=i;N[f+140>>2]=k;N[f+136>>2]=l;a=r;b=J[a+4>>2];J[f+148>>2]=J[a>>2];J[f+152>>2]=b;b=J[a+12>>2];J[f+156>>2]=J[a+8>>2];J[f+160>>2]=b;h=1}ga=g+288|0;return h|0}function um(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,M=0,O=0,P=0,R=0,S=0,T=0,U=0;k=ga-32|0;ga=k;x=N[c+4>>2];y=N[d+4>>2];z=N[c>>2];A=N[d>>2];n=N[a+28>>2];p=N[a+12>>2];v=N[d+8>>2];w=N[c+8>>2];h=Q((v<w?v:w)+N[e+8>>2]);h=h<p?p:h;l=N[a+44>>2];h=Q(Q((h>n?n:h)-p)*l);a:{if(h<Q(4294967296)&h>=Q(0)){C=~~h>>>0;break a}C=0}o=N[a+24>>2];q=N[a+8>>2];h=Q((x>y?y:x)+N[e+4>>2]);h=h<q?q:h;t=N[a+40>>2];h=Q(Q((h>o?o:h)-q)*t);b:{if(h<Q(4294967296)&h>=Q(0)){B=~~h>>>0;break b}B=0}m=N[a+20>>2];r=N[a+4>>2];h=Q((z>A?A:z)+N[e>>2]);h=h<r?r:h;i=N[a+36>>2];h=Q(Q((h>m?m:h)-r)*i);c:{if(h<Q(4294967296)&h>=Q(0)){u=~~h>>>0;break c}u=0}h=Q((v>w?v:w)+N[f+8>>2]);h=h<p?p:h;h=Q(Q(Q((h>n?n:h)-p)*l)+Q(1));d:{if(h<Q(4294967296)&h>=Q(0)){s=~~h>>>0;break d}s=0}h=Q((x<y?y:x)+N[f+4>>2]);h=h<q?q:h;h=Q(Q(Q((h>o?o:h)-q)*t)+Q(1));e:{if(h<Q(4294967296)&h>=Q(0)){j=~~h>>>0;break e}j=0}h=Q((z<A?A:z)+N[f>>2]);h=h<r?r:h;h=Q(Q(Q((h>m?m:h)-r)*i)+Q(1));f:{if(h<Q(4294967296)&h>=Q(0)){d=~~h>>>0;break f}d=0}if((g|0)>0){i=Q(v-w);m=Q(A-z);t=Q(y-x);h=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(m*m)+Q(t*t))))));l=Q(i*h);n=Q(l*i);i=Q(m*h);h=Q(t*h);t=Q(n+Q(Q(i*m)+Q(t*h)));G=C&65534;H=B&65534;I=u&65534;K=s|1;M=j|1;O=d|1;d=J[a+136>>2];p=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);s=p<Q(0);P=(s<<4)+k|8;q=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);j=q<Q(0);R=(j<<4)+k|4;S=(!s<<4)+k|8;T=(!j<<4)+k|4;r=i==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/i);j=r<Q(0);U=(j<<4)+k|0;C=(!j<<4)+k|0;while(1){F=J[d+12>>2];u=0;g:{h:{i:{j:{if(L[d+6>>1]<I>>>0){break j}B=L[d>>1];if(O>>>0<B>>>0|L[d+10>>1]<G>>>0){break j}s=L[d+4>>1];if(L[d+8>>1]<H>>>0|s>>>0>K>>>0){break j}j=L[d+2>>1];if(j>>>0>M>>>0){break j}v=N[a+4>>2];w=N[a+36>>2];n=N[a+8>>2];o=N[a+40>>2];m=N[a+12>>2];l=N[a+44>>2];J[k+12>>2]=0;i=Q(m+Q(Q(s>>>0)/l));N[k+8>>2]=i;h=Q(n+Q(Q(j>>>0)/o));N[k+4>>2]=h;u=L[d+10>>1];s=L[d+8>>1];j=L[d+6>>1];J[k+28>>2]=0;N[k>>2]=Q(v+Q(Q(B>>>0)/w))-N[f>>2];N[k+4>>2]=h-N[f+4>>2];N[k+8>>2]=i-N[f+8>>2];N[k+16>>2]=Q(v+Q(Q(j>>>0)/w))-N[e>>2];N[k+20>>2]=Q(n+Q(Q(s>>>0)/o))-N[e+4>>2];N[k+24>>2]=Q(m+Q(Q(u>>>0)/l))-N[e+8>>2];k:{i=N[c>>2];l=Q(r*Q(N[U>>2]-i));h=N[c+4>>2];n=Q(q*Q(N[T>>2]-h));if(l>n){break k}h=Q(q*Q(N[R>>2]-h));o=Q(r*Q(N[C>>2]-i));if(h>o){break k}m=h>l?h:l;h=N[c+8>>2];l=Q(p*Q(N[S>>2]-h));if(m>l){break k}i=Q(p*Q(N[P>>2]-h));h=n<o?n:o;if(i>h){break k}u=t>(i>m?i:m)&(h>l?l:h)>Q(0);if(!u|(F|0)<0){break j}j=J[d+12>>2];ia[J[J[b>>2]+8>>2]](b,j>>21,j&2097151);break i}u=0}if((F|0)>=0){break i}if(!u){break h}}D=D+1|0;d=d+16|0;break g}j=J[d+12>>2];D=D-j|0;d=d-(j<<4)|0}E=E+1|0;if((g|0)>(D|0)){continue}break}}if(J[7404]<(E|0)){J[7404]=E}ga=k+32|0}function sn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ga-16|0;ga=l;c=J[a+92>>2];if(ia[J[J[c>>2]+56>>2]](c)|0){c=J[a+92>>2];f=ia[J[J[c>>2]+28>>2]](c)|0;d=J[f+4>>2];if((d|0)>=2){lc(f,l+8|0,0,d-1|0);d=J[f+4>>2]}i=J[a+104>>2];g=d-i|0;a:{if((i|0)>=0){break a}if(J[f+8>>2]<(g|0)){c=d;if((c|0)!=(i|0)){J[8369]=J[8369]+1;e=ia[J[6782]](g<<4,16)|0;c=J[f+4>>2]}if((c|0)>0){while(1){k=h<<4;j=k+e|0;k=k+J[f+12>>2]|0;J[j>>2]=J[k>>2];J[j+4>>2]=J[k+4>>2];J[j+8>>2]=J[k+8>>2];J[j+12>>2]=J[k+12>>2];h=h+1|0;if((h|0)!=(c|0)){continue}break}}c=J[f+12>>2];if(!(c?!c|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+12>>2]=e;H[f+16|0]=1;J[f+8>>2]=g}c=0;h=0-i&3;if(h){while(1){e=J[f+12>>2]+(d<<4)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;d=d+1|0;c=c+1|0;if((h|0)!=(c|0)){continue}break}}if(i>>>0>4294967292){break a}while(1){c=d<<4;e=c+J[f+12>>2]|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;e=c+J[f+12>>2]|0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;e=c+J[f+12>>2]|0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;c=c+J[f+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((g|0)!=(d|0)){continue}break}}J[f+4>>2]=g;J[a+104>>2]=0;if((g|0)>0){i=0;j=0;e=0;c=0;while(1){h=J[f+12>>2]+(j<<4)|0;d=J[h+4>>2];k=e;e=J[h>>2];b:{c:{if((k|0)==(e|0)&(c|0)==(d|0)|L[e+54>>1]<L[d+48>>1]|(L[d+54>>1]<L[e+48>>1]|L[e+56>>1]<L[d+50>>1])){break c}if(L[d+56>>1]<L[e+50>>1]|L[e+58>>1]<L[d+52>>1]){break c}if(L[d+58>>1]>=L[e+52>>1]){break b}}c=J[a+92>>2];ia[J[J[c>>2]+32>>2]](c,h,b);J[h>>2]=0;J[h+4>>2]=0;i=J[a+104>>2]+1|0;J[a+104>>2]=i;J[7392]=J[7392]-1;g=J[f+4>>2]}c=d;j=j+1|0;if((j|0)<(g|0)){continue}break}if((g|0)>=2){lc(f,l,0,g-1|0);i=J[a+104>>2];g=J[f+4>>2]}b=g-i|0;d:{if((i|0)>=0){break d}if((b|0)>J[f+8>>2]){e=0;e:{if((g|0)==(i|0)){break e}J[8369]=J[8369]+1;e=ia[J[6782]](b<<4,16)|0;j=J[f+4>>2];if((j|0)<=0){break e}h=0;while(1){d=h<<4;c=d+e|0;d=d+J[f+12>>2]|0;J[c>>2]=J[d>>2];J[c+4>>2]=J[d+4>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=J[d+12>>2];h=h+1|0;if((j|0)!=(h|0)){continue}break}}c=J[f+12>>2];if(!(c?!c|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+12>>2]=e;H[f+16|0]=1;J[f+8>>2]=b}d=0;e=0-i&3;if(e){while(1){c=J[f+12>>2]+(g<<4)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;g=g+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(i>>>0>4294967292){break d}while(1){c=g<<4;d=c+J[f+12>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;d=c+J[f+12>>2]|0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;d=c+J[f+12>>2]|0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;c=c+J[f+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;g=g+4|0;if((b|0)!=(g|0)){continue}break}}}else{b=g}J[f+4>>2]=b;J[a+104>>2]=0}ga=l+16|0}function il(a,b,c){var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0);d=ga-240|0;ga=d;h=N[c>>2];f=N[c+4>>2];e=N[c+8>>2];J[a+124>>2]=0;N[a+120>>2]=e+N[a+100>>2];N[a+116>>2]=f+N[a+96>>2];N[a+112>>2]=h+N[a+92>>2];J[d+144>>2]=0;J[d+148>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+132>>2]=1065353216;J[d+124>>2]=0;J[d+128>>2]=0;J[d+216>>2]=1065353216;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+196>>2]=1065353216;J[d+188>>2]=0;J[d+192>>2]=0;J[d+152>>2]=1065353216;J[d+156>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+112>>2]=1065353216;J[d+180>>2]=0;J[d+184>>2]=0;J[d+176>>2]=1065353216;q=10;r=Q(1);while(1){a:{if(!q){break a}c=J[a+96>>2];J[d+224>>2]=J[a+92>>2];J[d+228>>2]=c;c=J[a+104>>2];J[d+232>>2]=J[a+100>>2];J[d+236>>2]=c;c=J[a+124>>2];J[d+168>>2]=J[a+120>>2];J[d+172>>2]=c;c=J[a+116>>2];J[d+160>>2]=J[a+112>>2];J[d+164>>2]=c;k=N[a+92>>2];l=N[a+112>>2];m=N[a+96>>2];h=N[a+116>>2];f=N[a+100>>2];e=N[a+120>>2];c=J[a+8>>2];J[d+84>>2]=0;J[d+12>>2]=1065353216;J[d+44>>2]=0;J[d+48>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+28>>2]=0;J[d+32>>2]=0;J[d+20>>2]=0;J[d+24>>2]=0;J[d+104>>2]=0;J[d+108>>2]=0;N[d+100>>2]=f-e;N[d+96>>2]=m-h;N[d+92>>2]=k-l;J[d+88>>2]=c;J[d+8>>2]=19248;c=J[c+188>>2];I[d+16>>1]=L[c+4>>1];I[d+18>>1]=L[c+6>>1];c=J[a+12>>2];e=Q(ia[J[J[c>>2]+48>>2]](c));c=J[a+12>>2];ia[J[J[c>>2]+44>>2]](c,Q(e+N[a+56>>2]));b:{if(K[a+170|0]){$e(J[a+8>>2],J[a+12>>2],d+176|0,d+112|0,d+8|0,N[b+56>>2]);break b}ic(b,J[a+12>>2],d+176|0,d+112|0,d+8|0,N[b+56>>2])}c=J[a+12>>2];ia[J[J[c>>2]+44>>2]](c,e);t=N[d+12>>2];c:{if(t<Q(1)){k=N[a+100>>2];i=Q(N[a+120>>2]-k);l=N[a+92>>2];g=Q(N[a+112>>2]-l);m=N[a+96>>2];f=Q(N[a+116>>2]-m);e=Q(Q(i*i)+Q(Q(g*g)+Q(f*f)));j=Q(Y(e));if(j>Q(1.1920928955078125e-7)){n=N[d+60>>2];o=N[d+52>>2];p=N[d+56>>2];c=J[a+96>>2];J[a+112>>2]=J[a+92>>2];J[a+116>>2]=c;c=J[a+104>>2];J[a+120>>2]=J[a+100>>2];J[a+124>>2]=c;e=f;f=Q(Q(1)/j);e=Q(e*f);s=e;h=Q(i*f);f=Q(g*f);e=Q(Q(n*h)+Q(Q(o*f)+Q(e*p)));g=Q(e+e);e=Q(s-Q(p*g));s=e;i=Q(h-Q(n*g));g=Q(f-Q(o*g));e=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(g*g)+Q(e*e))))));h=Q(s*e);f=Q(i*e);e=Q(g*e);g=Q(Q(n*f)+Q(Q(o*e)+Q(p*h)));h=Q(N[a+116>>2]+Q(j*Q(h-Q(p*g))));N[a+116>>2]=h;f=Q(N[a+120>>2]+Q(j*Q(f-Q(n*g))));N[a+120>>2]=f;e=Q(N[a+112>>2]+Q(j*Q(e-Q(o*g))));N[a+112>>2]=e;i=Q(f-k);g=Q(e-l);f=Q(h-m);e=Q(Q(i*i)+Q(Q(g*g)+Q(f*f)))}if(!(e>Q(1.1920928955078125e-7))){break a}e=Q(Q(1)/Q(Y(e)));if(!(Q(Q(Q(i*e)*N[a+84>>2])+Q(Q(Q(g*e)*N[a+76>>2])+Q(Q(f*e)*N[a+80>>2])))<=Q(0))){break c}break a}c=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=c;c=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=c}q=q-1|0;r=Q(r-t);if(r>Q(.009999999776482582)){continue}}break}ga=d+240|0}function To(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=0;l=ga-48|0;ga=l;J[l+44>>2]=a;J[l+40>>2]=b;J[l+36>>2]=c;J[l+32>>2]=d;J[l+28>>2]=e;J[l+24>>2]=f;J[l+20>>2]=g;J[l+16>>2]=h;J[l+12>>2]=i;H[l+11|0]=j;J[l+4>>2]=k;t=J[l+40>>2];h=J[l+36>>2];i=J[l+32>>2];j=J[l+28>>2];k=J[l+24>>2];b=J[l+12>>2];z=H[l+11|0]&1;x=J[l+4>>2];e=0;d=J[l+20>>2];f=J[l+16>>2];a:{if((d|0)<2|(f|0)<2){break a}u=Q(d-1|0);v=Q(f-1|0);J[8369]=J[8369]+1;c=P(d,f);g=ia[J[6782]]((c|0)!=(c&268435455)?-1:c<<4,16)|0;r=ua((c|0)!=(c&1073741823)?-1:c<<2);while(1){p=N[h+8>>2];m=Q(Q(e|0)/v);p=Q(Q(Q(N[j+8>>2]-p)*m)+p);q=N[i+8>>2];q=Q(Q(Q(Q(N[k+8>>2]-q)*m)+q)-p);n=N[i+4>>2];o=Q(Q(Q(N[k+4>>2]-n)*m)+n);n=N[h+4>>2];n=Q(Q(Q(N[j+4>>2]-n)*m)+n);A=Q(o-n);o=N[i>>2];w=Q(Q(Q(N[k>>2]-o)*m)+o);o=N[h>>2];o=Q(Q(Q(N[j>>2]-o)*m)+o);w=Q(w-o);B=P(d,e);a=0;while(1){y=a+B|0;s=g+(y<<4)|0;J[s+12>>2]=0;m=Q(Q(a|0)/u);N[s+8>>2]=Q(q*m)+p;N[s+4>>2]=Q(A*m)+n;N[s>>2]=Q(w*m)+o;J[r+(y<<2)>>2]=1065353216;a=a+1|0;if((d|0)!=(a|0)){continue}break}e=e+1|0;if((f|0)!=(e|0)){continue}break}J[8369]=J[8369]+1;e=Ac(ia[J[6782]](1252,16)|0,t,c,g,r);if(b&1){N[J[e+720>>2]+88>>2]=0;H[e+924|0]=1}if(b&2){N[(J[e+720>>2]+P(d-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&4){N[(J[e+720>>2]+P(P(d,f-1|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(b&8){N[(J[e+720>>2]+P((d+P(d,f-1|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&16){N[(J[e+720>>2]+P((d-1|0)/2|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&32){N[(J[e+720>>2]+P(P(d,(f-1|0)/2|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(b&64){N[(J[e+720>>2]+P((d+P(d,(f-1|0)/2|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&128){N[(J[e+720>>2]+P(P(d,f-1|0)+((d-1|0)/2|0)|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&256){N[(J[e+720>>2]+P(P(d,(f-1|0)/2|0)+((d-1|0)/2|0)|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}ta(r);if((d|0)<=0){break a}r=f-1|0;u=Q(Q(1)/Q(r|0));v=Q(Q(1)/Q(d-1|0));a=0;j=0;while(1){i=P(a,d);b=0;c=a+1|0;b:{if((c|0)<(f|0)){s=P(c,d);m=Q(u*Q(r-a|0));p=Q(u*Q(r+(a^-1)|0));a=0;while(1){g=a+s|0;h=a+i|0;b=a+1|0;c:{if((b|0)<(d|0)){t=b+i|0;Ja(e,h,t,0,0);Ja(e,h,g,0,0);k=b+s|0;rb(e,h,g,k,0);d:{if(x){g=(j<<2)+x|0;q=Q(v*Q(a|0));N[g>>2]=q;N[g+20>>2]=p;n=Q(v*Q(b|0));N[g+16>>2]=n;N[g+12>>2]=p;N[g+8>>2]=q;N[g+4>>2]=m;rb(e,k,t,h,0);N[g+44>>2]=m;N[g+40>>2]=q;N[g+36>>2]=m;N[g+32>>2]=n;N[g+28>>2]=p;N[g+24>>2]=n;break d}rb(e,k,t,h,0)}if(z){Ja(e,h,k,0,0)}j=j+12|0;break c}Ja(e,h,g,0,0)}a=b;if((d|0)!=(b|0)){continue}break}break b}while(1){a=b+1|0;if((a|0)<(d|0)){Ja(e,b+i|0,a+i|0,0,0)}b=a;if((b|0)!=(d|0)){continue}break}}a=c;if((f|0)!=(a|0)){continue}break}}ga=l+48|0;return e|0}function xl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0);g=ga-304|0;ga=g;h=N[b+52>>2];k=N[c+52>>2];l=N[b+56>>2];i=N[c+56>>2];m=N[b+48>>2];j=N[c+48>>2];J[g+300>>2]=0;p=Q(i-l);N[g+296>>2]=p;o=Q(k-h);N[g+292>>2]=o;u=Q(j-m);N[g+288>>2]=u;t=c;c=g+112|0;n=g+48|0;hc(b,t,c,n);J[g+284>>2]=0;h=N[g+48>>2];k=Q(h*N[g+120>>2]);N[g+280>>2]=k;l=Q(h*N[g+116>>2]);N[g+276>>2]=l;h=Q(h*N[g+112>>2]);N[g+272>>2]=h;i=N[d+52>>2];m=N[e+52>>2];j=N[d+56>>2];r=N[e+56>>2];s=N[d+48>>2];x=N[e+48>>2];J[g+268>>2]=0;v=Q(r-j);N[g+264>>2]=v;w=Q(m-i);N[g+260>>2]=w;s=Q(x-s);N[g+256>>2]=s;hc(d,e,c,n);J[g+252>>2]=0;i=N[g+48>>2];m=Q(i*N[g+120>>2]);N[g+248>>2]=m;j=Q(i*N[g+116>>2]);N[g+244>>2]=j;i=Q(i*N[g+112>>2]);N[g+240>>2]=i;c=J[a+12>>2];k=Q(Q(Y(Q(Q(k*k)+Q(Q(h*h)+Q(l*l)))))*Q(ia[J[J[c>>2]+16>>2]](c)));c=J[a+16>>2];if(c){h=Q(ia[J[J[c>>2]+16>>2]](c))}else{h=Q(0)}r=Q(k+Q(h*Q(Y(Q(Q(m*m)+Q(Q(i*i)+Q(j*j)))))));l=Q(v-p);i=Q(s-u);m=Q(w-o);a:{if(Q(r+Q(Y(Q(Q(l*l)+Q(Q(i*i)+Q(m*m))))))==Q(0)){break a}H[g+216|0]=0;J[g+212>>2]=1566444395;J[g+176>>2]=18272;yl(a,b,d,g+176|0);c=J[g+208>>2];J[g+232>>2]=J[g+204>>2];J[g+236>>2]=c;c=J[g+200>>2];J[g+224>>2]=J[g+196>>2];J[g+228>>2]=c;if(!K[g+216|0]){break a}k=N[g+188>>2];j=N[g+180>>2];p=N[g+184>>2];if(Q(r+Q(Q(l*k)+Q(Q(i*j)+Q(m*p))))<=Q(1.1920928955078125e-7)){break a}b:{o=Q(N[g+212>>2]+N[f+172>>2]);c:{if(!(o>Q(.0010000000474974513))){h=Q(0);l=N[g+192>>2];break c}c=g+20|0;t=g+160|0;e=0;h=Q(0);while(1){q=J[f+168>>2];if(q){J[g+120>>2]=1065353216;J[g+124>>2]=0;J[g+112>>2]=1065353216;J[g+116>>2]=1065353216;ia[J[J[q>>2]+20>>2]](q,g+224|0,Q(.20000000298023224),g+112|0)}q=0;j=Q(r+Q(Q(l*k)+Q(Q(i*j)+Q(m*p))));if(j<=Q(1.1920928955078125e-7)){break a}k=h;h=Q(h+Q(o/j));if(k>=h|h>Q(1)|h<Q(0)){break a}Rb(b,g+288|0,g+272|0,h,g+112|0);Rb(d,g+256|0,g+240|0,h,g+48|0);n=J[f+168>>2];if(n){J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=1065353216;J[g+4>>2]=0;ia[J[J[n>>2]+20>>2]](n,t,Q(.20000000298023224),g)}ia[J[J[f>>2]>>2]](f,h);H[g+40|0]=0;J[g+36>>2]=1566444395;J[g>>2]=18272;yl(a,g+112|0,g+48|0,g);if(!K[g+40|0]){break b}o=N[f+172>>2];n=J[c+12>>2];J[g+232>>2]=J[c+8>>2];J[g+236>>2]=n;n=J[c+4>>2];J[g+224>>2]=J[c>>2];J[g+228>>2]=n;if((e|0)==64){ia[J[J[f>>2]+8>>2]](f,-2,65);break a}e=e+1|0;j=N[g+4>>2];p=N[g+8>>2];k=N[g+12>>2];o=Q(N[g+36>>2]+o);if(o>Q(.0010000000474974513)){continue}break}l=N[g+16>>2]}N[f+132>>2]=j;N[f+164>>2]=h;N[f+144>>2]=l;N[f+140>>2]=k;N[f+136>>2]=p;a=J[g+228>>2];J[f+148>>2]=J[g+224>>2];J[f+152>>2]=a;a=J[g+236>>2];J[f+156>>2]=J[g+232>>2];J[f+160>>2]=a;q=1;break a}ia[J[J[f>>2]+8>>2]](f,-1,e)}ga=g+304|0;return q|0}function Ja(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=0,n=0,o=0,p=Q(0),q=Q(0);f=P(c,104);c=J[a+720>>2];i=f+c|0;j=c+P(b,104)|0;a:{b:{if(!e){break b}e=J[a+732>>2];if((e|0)<=0){break b}f=J[a+740>>2];b=J[f+12>>2];h=J[f+8>>2];if((h|0)==(j|0)&(b|0)==(i|0)){break a}c=1;if((h|0)==(i|0)&(b|0)==(j|0)){break a}while(1){c:{b=c;if((c|0)==(e|0)){break c}c=f+P(b,52)|0;h=J[c+12>>2];k=J[c+8>>2];if((k|0)==(j|0)&(h|0)==(i|0)){break c}c=b+1|0;if((i|0)!=(k|0)|(h|0)!=(j|0)){continue}}break}if((b|0)<(e|0)){break a}}h=0;k=0;b=ga-48|0;ga=b;J[b+40>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;d=d?d:J[J[a+880>>2]>>2];c=J[a+732>>2];d:{if((c|0)!=J[a+736>>2]){break d}m=c?c<<1:1;if((m|0)<=(c|0)){break d}if(m){J[8369]=J[8369]+1;h=ia[J[6782]](P(m,52),16)|0;c=J[a+732>>2]}e:{if((c|0)<=0){break e}if((c|0)!=1){o=c&-2;while(1){e=P(k,52);f=e+h|0;e=e+J[a+740>>2]|0;g=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=g;J[f+48>>2]=J[e+48>>2];g=J[e+44>>2];J[f+40>>2]=J[e+40>>2];J[f+44>>2]=g;g=J[e+36>>2];J[f+32>>2]=J[e+32>>2];J[f+36>>2]=g;g=J[e+28>>2];J[f+24>>2]=J[e+24>>2];J[f+28>>2]=g;g=J[e+20>>2];J[f+16>>2]=J[e+16>>2];J[f+20>>2]=g;g=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=g;e=P(k|1,52);f=e+h|0;e=e+J[a+740>>2]|0;g=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=g;g=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=g;g=J[e+20>>2];J[f+16>>2]=J[e+16>>2];J[f+20>>2]=g;g=J[e+28>>2];J[f+24>>2]=J[e+24>>2];J[f+28>>2]=g;g=J[e+36>>2];J[f+32>>2]=J[e+32>>2];J[f+36>>2]=g;g=J[e+44>>2];J[f+40>>2]=J[e+40>>2];J[f+44>>2]=g;J[f+48>>2]=J[e+48>>2];k=k+2|0;n=n+2|0;if((o|0)!=(n|0)){continue}break}}if(!(c&1)){break e}c=P(k,52);e=c+h|0;c=c+J[a+740>>2]|0;f=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=f;J[e+48>>2]=J[c+48>>2];f=J[c+44>>2];J[e+40>>2]=J[c+40>>2];J[e+44>>2]=f;f=J[c+36>>2];J[e+32>>2]=J[c+32>>2];J[e+36>>2]=f;f=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=f;f=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=f;f=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=f}c=J[a+740>>2];if(!(c?!c|!K[a+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+740>>2]=h;H[a+744|0]=1;J[a+736>>2]=m;c=J[a+732>>2]}c=J[a+740>>2]+P(c,52)|0;J[c+4>>2]=d;J[c>>2]=0;d=J[b+4>>2];J[c+8>>2]=J[b>>2];J[c+12>>2]=d;d=J[b+12>>2];J[c+16>>2]=J[b+8>>2];J[c+20>>2]=d;d=J[b+20>>2];J[c+24>>2]=J[b+16>>2];J[c+28>>2]=d;d=J[b+28>>2];J[c+32>>2]=J[b+24>>2];J[c+36>>2]=d;d=J[b+36>>2];J[c+40>>2]=J[b+32>>2];J[c+44>>2]=d;J[c+48>>2]=J[b+40>>2];J[a+732>>2]=J[a+732>>2]+1;ga=b+48|0;b=J[a+740>>2]+P(J[a+732>>2],52)|0;J[b-40>>2]=i;J[b-44>>2]=j;l=Q(N[j+16>>2]-N[i+16>>2]);p=Q(l*l);l=Q(N[j+8>>2]-N[i+8>>2]);q=Q(l*l);l=Q(N[j+12>>2]-N[i+12>>2]);N[b-36>>2]=Y(Q(p+Q(q+Q(l*l))));H[a+924|0]=1}}function gw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=Q(0),h=0,i=0,j=0,k=0,l=0;i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=b;J[i+4>>2]=c;a=J[i+8>>2];d=J[i+4>>2];b=ga-144|0;ga=b;c=J[i+12>>2];J[c+68>>2]=J[c+68>>2]+1;J[b+140>>2]=0;e=J[a+12>>2];J[b+72>>2]=J[a+8>>2];J[b+76>>2]=e;e=J[a+4>>2];J[b+64>>2]=J[a>>2];J[b+68>>2]=e;e=J[a+28>>2];J[b+88>>2]=J[a+24>>2];J[b+92>>2]=e;e=J[a+20>>2];J[b+80>>2]=J[a+16>>2];J[b+84>>2]=e;e=J[a+44>>2];J[b+104>>2]=J[a+40>>2];J[b+108>>2]=e;e=J[a+36>>2];J[b+96>>2]=J[a+32>>2];J[b+100>>2]=e;e=J[a+60>>2];J[b+120>>2]=J[a+56>>2];J[b+124>>2]=e;e=J[a+52>>2];h=J[a+48>>2];J[b+128>>2]=d;J[b+112>>2]=h;J[b+116>>2]=e;J[b+132>>2]=J[d+4>>2];N[b+136>>2]=ia[J[J[d>>2]+48>>2]](d);ia[J[J[d>>2]+8>>2]](d,a,b+48|0,b+32|0);g=N[b+48>>2];if(g<N[c+32>>2]){N[c+32>>2]=g}g=N[b+32>>2];if(g>N[c+48>>2]){N[c+48>>2]=g}g=N[b+52>>2];if(g<N[c+36>>2]){N[c+36>>2]=g}g=N[b+36>>2];if(g>N[c+52>>2]){N[c+52>>2]=g}g=N[b+56>>2];if(g<N[c+40>>2]){N[c+40>>2]=g}g=N[b+40>>2];if(g>N[c+56>>2]){N[c+56>>2]=g}a=J[c+64>>2];if(a){d=J[b+60>>2];J[b+8>>2]=J[b+56>>2];J[b+12>>2]=d;d=J[b+44>>2];J[b+24>>2]=J[b+40>>2];J[b+28>>2]=d;d=J[b+36>>2];J[b+16>>2]=J[b+32>>2];J[b+20>>2]=d;d=J[b+52>>2];J[b>>2]=J[b+48>>2];J[b+4>>2]=d;J[b+140>>2]=Db(a,b,J[c+16>>2])}a=b- -64|0;h=J[c+16>>2];a:{if((h|0)!=J[c+20>>2]){break a}j=h?h<<1:1;if((j|0)<=(h|0)){break a}if(j){J[8369]=J[8369]+1;l=ia[J[6782]](P(j,80),16)|0;h=J[c+16>>2]}if((h|0)>0){while(1){d=P(k,80);e=d+l|0;d=d+J[c+24>>2]|0;f=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=f;f=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=f;f=J[d+28>>2];J[e+24>>2]=J[d+24>>2];J[e+28>>2]=f;f=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=f;f=J[d+44>>2];J[e+40>>2]=J[d+40>>2];J[e+44>>2]=f;f=J[d+36>>2];J[e+32>>2]=J[d+32>>2];J[e+36>>2]=f;f=J[d+60>>2];J[e+56>>2]=J[d+56>>2];J[e+60>>2]=f;f=J[d+52>>2];J[e+48>>2]=J[d+48>>2];J[e+52>>2]=f;f=J[d+68>>2];J[e+64>>2]=J[d+64>>2];J[e+68>>2]=f;f=J[d+76>>2];J[e+72>>2]=J[d+72>>2];J[e+76>>2]=f;k=k+1|0;if((k|0)!=(h|0)){continue}break}}d=J[c+24>>2];if(!(d?!d|!K[c+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[c+24>>2]=l;H[c+28|0]=1;J[c+20>>2]=j;h=J[c+16>>2]}e=J[a+4>>2];d=J[c+24>>2]+P(h,80)|0;J[d>>2]=J[a>>2];J[d+4>>2]=e;e=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=e;e=J[a+28>>2];J[d+24>>2]=J[a+24>>2];J[d+28>>2]=e;e=J[a+20>>2];J[d+16>>2]=J[a+16>>2];J[d+20>>2]=e;e=J[a+44>>2];J[d+40>>2]=J[a+40>>2];J[d+44>>2]=e;e=J[a+36>>2];J[d+32>>2]=J[a+32>>2];J[d+36>>2]=e;e=J[a+60>>2];J[d+56>>2]=J[a+56>>2];J[d+60>>2]=e;e=J[a+52>>2];J[d+48>>2]=J[a+48>>2];J[d+52>>2]=e;e=J[a+76>>2];J[d+72>>2]=J[a+72>>2];J[d+76>>2]=e;e=J[a+68>>2];J[d+64>>2]=J[a+64>>2];J[d+68>>2]=e;J[c+16>>2]=J[c+16>>2]+1;ga=b+144|0;ga=i+16|0}function zD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0;r=N[b+28>>2];o=N[b+12>>2];f=o>Q(0)?o:Q(0);v=f<r?r:f;k=N[b+24>>2];p=N[b+8>>2];f=p>Q(-0xde0b6b000000000)?p:Q(-0xde0b6b000000000);w=f<k?k:f;l=N[b+20>>2];q=N[b+4>>2];f=q>Q(-0xde0b6b000000000)?q:Q(-0xde0b6b000000000);x=f<l?l:f;m=N[b+16>>2];n=N[b>>2];f=n>Q(-0xde0b6b000000000)?n:Q(-0xde0b6b000000000);y=f<m?m:f;f=o<Q(0)?o:Q(0);o=f>r?r:f;f=p<Q(0xde0b6b000000000)?p:Q(0xde0b6b000000000);p=f>k?k:f;f=q<Q(0xde0b6b000000000)?q:Q(0xde0b6b000000000);q=f>l?l:f;f=n<Q(0xde0b6b000000000)?n:Q(0xde0b6b000000000);f=f>m?m:f;k=N[b+44>>2];l=N[b+40>>2];m=N[b+36>>2];n=N[b+32>>2];j=J[a+4>>2];b=J[j+4>>2];a:{if((b|0)!=J[j+8>>2]){break a}s=b?b<<1:1;if((s|0)<=(b|0)){break a}if(s){J[8369]=J[8369]+1;t=ia[J[6782]](s<<6,16)|0;b=J[j+4>>2]}b:{if((b|0)<=0){break b}if((b|0)!=1){z=b&-2;while(1){g=u<<6;e=g+t|0;i=g+J[j+12>>2]|0;a=J[i+4>>2];J[e>>2]=J[i>>2];J[e+4>>2]=a;a=J[i+60>>2];J[e+56>>2]=J[i+56>>2];J[e+60>>2]=a;a=J[i+52>>2];J[e+48>>2]=J[i+48>>2];J[e+52>>2]=a;a=J[i+44>>2];J[e+40>>2]=J[i+40>>2];J[e+44>>2]=a;a=J[i+36>>2];J[e+32>>2]=J[i+32>>2];J[e+36>>2]=a;a=J[i+28>>2];J[e+24>>2]=J[i+24>>2];J[e+28>>2]=a;a=J[i+20>>2];J[e+16>>2]=J[i+16>>2];J[e+20>>2]=a;a=J[i+12>>2];J[e+8>>2]=J[i+8>>2];J[e+12>>2]=a;a=g|64;e=a+t|0;g=a+J[j+12>>2]|0;a=J[g+4>>2];J[e>>2]=J[g>>2];J[e+4>>2]=a;a=J[g+12>>2];J[e+8>>2]=J[g+8>>2];J[e+12>>2]=a;a=J[g+20>>2];J[e+16>>2]=J[g+16>>2];J[e+20>>2]=a;a=J[g+28>>2];J[e+24>>2]=J[g+24>>2];J[e+28>>2]=a;a=J[g+36>>2];J[e+32>>2]=J[g+32>>2];J[e+36>>2]=a;a=J[g+44>>2];J[e+40>>2]=J[g+40>>2];J[e+44>>2]=a;a=J[g+52>>2];J[e+48>>2]=J[g+48>>2];J[e+52>>2]=a;a=J[g+60>>2];J[e+56>>2]=J[g+56>>2];J[e+60>>2]=a;u=u+2|0;h=h+2|0;if((h|0)!=(z|0)){continue}break}}if(!(b&1)){break b}a=u<<6;b=a+t|0;h=a+J[j+12>>2]|0;a=J[h+4>>2];J[b>>2]=J[h>>2];J[b+4>>2]=a;a=J[h+60>>2];J[b+56>>2]=J[h+56>>2];J[b+60>>2]=a;a=J[h+52>>2];J[b+48>>2]=J[h+48>>2];J[b+52>>2]=a;a=J[h+44>>2];J[b+40>>2]=J[h+40>>2];J[b+44>>2]=a;a=J[h+36>>2];J[b+32>>2]=J[h+32>>2];J[b+36>>2]=a;a=J[h+28>>2];J[b+24>>2]=J[h+24>>2];J[b+28>>2]=a;a=J[h+20>>2];J[b+16>>2]=J[h+16>>2];J[b+20>>2]=a;a=J[h+12>>2];J[b+8>>2]=J[h+8>>2];J[b+12>>2]=a}a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[j+12>>2]=t;H[j+16|0]=1;J[j+8>>2]=s;b=J[j+4>>2]}a=J[j+12>>2]+(b<<6)|0;J[a+40>>2]=d;J[a+36>>2]=c;J[a+32>>2]=-1;N[a+16>>2]=n>y?n:y;N[a+12>>2]=k<o?k:o;N[a+8>>2]=l<p?l:p;N[a+4>>2]=m<q?m:q;N[a>>2]=f>n?n:f;N[a+28>>2]=k>v?k:v;N[a+24>>2]=l>w?l:w;N[a+20>>2]=m>x?m:x;J[j+4>>2]=J[j+4>>2]+1}function hg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;j=b+12|0;k=c+12|0;n=J[a+12>>2];while(1){a=l+2|0;l=l+1|0;d=J[(((l&255)>>>0)%3<<2)+b>>2];g=J[c+4>>2];a:{b:{e=J[(((a&255)>>>0)%3<<2)+b>>2];h=J[c>>2];if((e|0)==(h|0)){a=2;if((d|0)==(g|0)){break b}}c:{if((d|0)==(h|0)){f=2;if((e|0)==(g|0)){break c}}i=J[c+8>>2];if((e|0)==(g|0)){a=0;if((d|0)==(i|0)){break b}}if((d|0)==(g|0)){f=0;if((e|0)==(i|0)){break c}}if((e|0)==(i|0)){a=1;if((d|0)==(h|0)){break b}}a=27144;if((d|0)!=(i|0)){break a}f=1;if((e|0)!=(h|0)){break a}}a=(f<<2)+k|0;break a}a=(a<<2)+k|0}f=J[b+4>>2];m=J[a>>2];d:{e:{h=J[b>>2];if((h|0)==(d|0)){a=2;if((e|0)==(f|0)){break e}}f:{if((e|0)==(h|0)){a=2;if((d|0)==(f|0)){break f}}i=J[b+8>>2];if((d|0)==(f|0)){a=0;if((e|0)==(i|0)){break e}}if((e|0)==(f|0)){a=0;if((d|0)==(i|0)){break f}}if((d|0)==(i|0)){a=1;if((e|0)==(h|0)){break e}}g=27144;if((e|0)!=(i|0)){break d}a=1;if((d|0)!=(h|0)){break d}}g=(a<<2)+j|0;break d}g=(a<<2)+j|0}f=2;g=J[(J[g>>2]<<2)+n>>2];a=J[g+4>>2];g:{h:{h=J[g>>2];if((h|0)==(e|0)&(a|0)==(d|0)){break h}i:{if((d|0)==(h|0)&(a|0)==(e|0)){break i}i=J[g+8>>2];if((a|0)==(e|0)){f=0;if((d|0)==(i|0)){break h}}if((a|0)==(d|0)){f=0;if((e|0)==(i|0)){break i}}if((e|0)==(i|0)){f=1;if((d|0)==(h|0)){break h}}a=27144;if((d|0)!=(i|0)){break g}f=1;if((e|0)!=(h|0)){break g}}a=(g+(f<<2)|0)+12|0;break g}a=(g+(f<<2)|0)+12|0}J[a>>2]=m;g=J[b+4>>2];j:{k:{h=J[b>>2];if((h|0)==(d|0)){a=2;if((e|0)==(g|0)){break k}}l:{if((e|0)==(h|0)){f=2;if((d|0)==(g|0)){break l}}i=J[b+8>>2];if((d|0)==(g|0)){a=0;if((e|0)==(i|0)){break k}}if((e|0)==(g|0)){f=0;if((d|0)==(i|0)){break l}}if((d|0)==(i|0)){a=1;if((e|0)==(h|0)){break k}}a=27144;if((e|0)!=(i|0)){break j}f=1;if((d|0)!=(h|0)){break j}}a=(f<<2)+j|0;break j}a=(a<<2)+j|0}f=J[c+4>>2];m=J[a>>2];m:{n:{h=J[c>>2];if((h|0)==(e|0)){a=2;if((d|0)==(f|0)){break n}}o:{if((d|0)==(h|0)){a=2;if((e|0)==(f|0)){break o}}i=J[c+8>>2];if((e|0)==(f|0)){a=0;if((d|0)==(i|0)){break n}}if((d|0)==(f|0)){a=0;if((e|0)==(i|0)){break o}}if((e|0)==(i|0)){a=1;if((d|0)==(h|0)){break n}}g=27144;if((d|0)!=(i|0)){break m}a=1;if((e|0)!=(h|0)){break m}}g=(a<<2)+k|0;break m}g=(a<<2)+k|0}f=2;g=J[(J[g>>2]<<2)+n>>2];a=J[g+4>>2];p:{q:{h=J[g>>2];if((h|0)==(d|0)&(a|0)==(e|0)){break q}r:{if((e|0)==(h|0)&(a|0)==(d|0)){break r}i=J[g+8>>2];if((a|0)==(d|0)){f=0;if((e|0)==(i|0)){break q}}if((a|0)==(e|0)){f=0;if((d|0)==(i|0)){break r}}if((d|0)==(i|0)){f=1;if((e|0)==(h|0)){break q}}a=27144;if((e|0)!=(i|0)){break p}f=1;if((d|0)!=(h|0)){break p}}a=(g+(f<<2)|0)+12|0;break p}a=(g+(f<<2)|0)+12|0}J[a>>2]=m;if((l|0)!=3){continue}break}}function uo(a,b,c,d,e){a=a|0;b=b|0;c=Q(c);d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=Q(0),k=0;f=ga-272|0;ga=f;J[f+268>>2]=a;J[f+264>>2]=b;N[f+260>>2]=c;J[f+256>>2]=d;J[f+252>>2]=e;d=J[f+268>>2];e=f+232|0;Ia(e,J[f+264>>2],f+260|0);a=ga-16|0;g=f+216|0;J[a+12>>2]=g;i=f+200|0;J[a+12>>2]=i;a=ga-32|0;ga=a;J[a+28>>2]=J[f+264>>2];J[a+24>>2]=g;J[a+20>>2]=i;b=ga-16|0;J[b+12>>2]=J[a+28>>2];h=ga-16|0;N[h+12>>2]=N[J[b+12>>2]+8>>2];a:{if(Q(R(N[h+12>>2]))>Q(.7071067690849304)){b=ga-16|0;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+28>>2];c=Q(c*N[J[b+12>>2]+4>>2]);J[b+12>>2]=J[a+28>>2];j=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+28>>2];N[a+16>>2]=c+Q(j*N[J[b+12>>2]+8>>2]);N[b+12>>2]=N[a+16>>2];N[a+12>>2]=Q(1)/Q(Y(N[b+12>>2]));J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]>>2]=0;J[b+12>>2]=J[a+28>>2];c=Q(Q(-N[J[b+12>>2]+8>>2])*N[a+12>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(N[J[b+12>>2]+4>>2]*N[a+12>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+8>>2]=c;c=Q(N[a+16>>2]*N[a+12>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(-N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+8>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+4>>2]);break a}b=ga-16|0;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+28>>2];c=Q(c*N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+28>>2];j=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+28>>2];N[a+8>>2]=c+Q(j*N[J[b+12>>2]+4>>2]);N[b+12>>2]=N[a+8>>2];N[a+4>>2]=Q(1)/Q(Y(N[b+12>>2]));J[b+12>>2]=J[a+28>>2];c=Q(Q(-N[J[b+12>>2]+4>>2])*N[a+4>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(N[J[b+12>>2]>>2]*N[a+4>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+8>>2]=0;J[b+12>>2]=J[a+28>>2];c=Q(-N[J[b+12>>2]+8>>2]);J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+4>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+4>>2]=c;c=Q(N[a+8>>2]*N[a+4>>2])}b=ga-16|0;J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+8>>2]=c;ga=a+32|0;N[f+196>>2]=100;b=f+160|0;a=f+196|0;Ia(b,g,a);h=f+176|0;va(h,e,b);b=f+128|0;Ia(b,g,a);g=f+144|0;Ma(g,e,b);b=f+96|0;Ia(b,i,a);k=f+112|0;va(k,e,b);b=f- -64|0;Ia(b,i,a);a=f+80|0;Ma(a,e,b);b=f+48|0;za(b,J[f+256>>2],h);e=f+32|0;za(e,J[f+256>>2],g);ia[J[J[d>>2]+8>>2]](d,b,e,J[f+252>>2]);b=f+16|0;za(b,J[f+256>>2],k);za(f,J[f+256>>2],a);ia[J[J[d>>2]+8>>2]](d,b,f,J[f+252>>2]);ga=f+272|0}function Kd(a,b,c,d,e,f){var g=0,h=0,i=0,j=0,k=Q(0);g=a;J[g+104>>2]=0;J[g+108>>2]=0;H[g+100|0]=0;J[g+96>>2]=0;J[g+92>>2]=e;I[g+6>>1]=65535;I[g+4>>1]=65534;J[g>>2]=5460;if(!e){J[8369]=J[8369]+1;a=ia[J[6782]](76,16)|0;mh(a);H[g+100|0]=1;J[g+92>>2]=a}if(!f){J[8369]=J[8369]+1;a=ia[J[6782]](24,16)|0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+20>>2]=0;J[a>>2]=5524;J[a+12>>2]=0;J[a+16>>2]=0;J[a+8>>2]=0;H[a+20|0]=1;J[g+112>>2]=a;J[8369]=J[8369]+1;a=ia[J[6782]](196,16)|0;ph(a,J[g+112>>2]);J[g+108>>2]=a;H[a+193|0]=1}a=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=a;a=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+32>>2]=J[c+8>>2];J[g+36>>2]=a;a=J[c+4>>2];J[g+24>>2]=J[c>>2];J[g+28>>2]=a;J[g+52>>2]=0;k=Q(L[g+6>>1]);N[g+48>>2]=k/Q(N[g+32>>2]-N[g+16>>2]);N[g+44>>2]=k/Q(N[g+28>>2]-N[g+12>>2]);N[g+40>>2]=k/Q(N[g+24>>2]-N[g+8>>2]);J[8369]=J[8369]+1;d=d+1|0;c=d&65535;e=c<<6;a=ia[J[6782]](e,16)|0;a:{if(!c){I[g+58>>1]=d;J[g+60>>2]=a;I[g+64>>1]=1;I[g+56>>1]=0;f=g+60|0;break a}f=c-1&67108863;h=c&7;b:{if(!h){b=a;break b}b=a;while(1){J[b+8>>2]=0;J[b>>2]=0;b=b- -64|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}}if(f>>>0>=7){e=a+e|0;while(1){J[b+448>>2]=0;J[b+384>>2]=0;J[b+320>>2]=0;J[b+256>>2]=0;J[b+192>>2]=0;J[b+128>>2]=0;J[b+64>>2]=0;J[b+8>>2]=0;J[b>>2]=0;J[b+456>>2]=0;J[b+392>>2]=0;J[b+328>>2]=0;J[b+264>>2]=0;J[b+200>>2]=0;J[b+136>>2]=0;J[b+72>>2]=0;b=b+512|0;if((e|0)!=(b|0)){continue}break}}I[g+58>>1]=d;J[g+60>>2]=a;b=1;I[g+64>>1]=1;I[g+56>>1]=0;f=g+60|0;if((d&65535)>>>0<2){break a}e=c-1|0;d=e&7;if(c-2>>>0>=7){e=e&-8;j=0;while(1){h=b+1|0;I[(a+(b<<6)|0)+48>>1]=h;i=a+(h<<6)|0;h=b+2|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+3|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+4|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+5|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+6|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+7|0;I[i+48>>1]=h;b=b+8|0;I[(a+(h<<6)|0)+48>>1]=b;j=j+8|0;if((e|0)!=(j|0)){continue}break}}if(!d){break a}j=0;while(1){e=a+(b<<6)|0;b=b+1|0;I[e+48>>1]=b;j=j+1|0;if((d|0)!=(j|0)){continue}break}}I[(a+(c<<6)|0)-16>>1]=0;J[8369]=J[8369]+1;a=c<<3;b=ia[J[6782]](a,16)|0;J[g+68>>2]=b;J[g+80>>2]=b;J[8369]=J[8369]+1;b=ia[J[6782]](a,16)|0;J[g+72>>2]=b;J[g+84>>2]=b;J[8369]=J[8369]+1;a=ia[J[6782]](a,16)|0;J[g+76>>2]=a;J[g+88>>2]=a;a=J[f>>2];I[a+48>>1]=0;J[a>>2]=0;I[a+54>>1]=1;b=J[g+68>>2];I[b>>1]=0;I[b+2>>1]=0;c=L[g+6>>1];I[b+6>>1]=0;I[b+4>>1]=c;I[a+56>>1]=1;I[a+50>>1]=0;b=J[g+72>>2];I[b>>1]=0;I[b+2>>1]=0;c=L[g+6>>1];I[b+6>>1]=0;I[b+4>>1]=c;I[a+58>>1]=1;I[a+52>>1]=0;a=J[g+76>>2];I[a>>1]=0;I[a+2>>1]=0;b=L[g+6>>1];I[a+6>>1]=0;I[a+4>>1]=b;J[g>>2]=5296}function wC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=0,t=Q(0),u=Q(0),v=0,w=0,x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=0;e=ga-112|0;ga=e;ia[J[J[a>>2]+112>>2]](a);J[e+100>>2]=0;H[e+104|0]=1;J[e+92>>2]=0;J[e+96>>2]=0;k=N[c+8>>2];l=N[d+8>>2];m=N[c>>2];h=N[d>>2];n=N[c+4>>2];p=N[d+4>>2];J[e+84>>2]=0;l=Q(l-k);m=Q(h-m);h=Q(p-n);k=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(h*h))))));N[e+80>>2]=l*k;N[e+76>>2]=h*k;N[e+72>>2]=m*k;y=J[a+68>>2];if((y|0)>0){while(1){o=q<<4;f=o+J[a+84>>2]|0;d=L[f+4>>1];m=N[a+132>>2];h=N[a+100>>2];j=L[f+10>>1];i=L[f+2>>1];l=N[a+128>>2];n=N[a+96>>2];r=L[f+8>>1];k=N[a+92>>2];g=N[a+124>>2];p=Q(k+Q(Q(L[f+6>>1])/g));a:{b:{c:{d:{g=Q(Q(Q(Q(Q(L[f>>1])/g)+k)+p)*Q(.5));k=Q(N[c>>2]-g);p=Q(p-g);e:{if(Q(R(k))>p&Q(k*N[e+72>>2])>=Q(0)){break e}g=Q(Q(Q(i>>>0)/l)+n);n=Q(n+Q(Q(r>>>0)/l));g=Q(Q(g+n)*Q(.5));l=Q(N[c+4>>2]-g);n=Q(n-g);if(Q(R(l))>n&Q(l*N[e+76>>2])>=Q(0)){break e}g=Q(Q(Q(d>>>0)/m)+h);h=Q(h+Q(Q(j>>>0)/m));g=Q(Q(g+h)*Q(.5));m=Q(N[c+8>>2]-g);g=Q(h-g);h=N[e+80>>2];if(Q(R(m))>g&Q(m*h)>=Q(0)){break e}t=N[e+76>>2];z=Q(R(t));A=Q(R(h));if(Q(R(Q(Q(t*m)-Q(l*h))))>Q(Q(n*A)+Q(g*z))){break e}u=N[e+72>>2];B=Q(R(u));if(!(Q(R(Q(Q(h*k)-Q(m*u))))>Q(Q(p*A)+Q(g*B)))){break d}}j=J[f+12>>2]>=0;d=0;break c}i=Q(R(Q(Q(u*l)-Q(k*t))))>Q(Q(p*z)+Q(n*B));d=!i;v=J[f+12>>2];j=(v|0)>=0;if((v|0)<0|i){break c}f=J[e+92>>2];f:{if((f|0)!=J[e+96>>2]){break f}r=f?f<<1:1;if((r|0)<=(f|0)){break f}g:{if(!r){d=0;break g}J[8369]=J[8369]+1;d=ia[J[6782]](r<<2,16)|0;f=J[e+92>>2]}o=J[e+100>>2];h:{i:{if((f|0)>0){w=0;j=0;if(f-1>>>0>=3){C=f&-4;x=0;while(1){i=j<<2;J[i+d>>2]=J[i+o>>2];s=i|4;J[s+d>>2]=J[o+s>>2];s=i|8;J[s+d>>2]=J[o+s>>2];i=i|12;J[i+d>>2]=J[i+o>>2];j=j+4|0;x=x+4|0;if((C|0)!=(x|0)){continue}break}}f=f&3;if(!f){break i}while(1){i=j<<2;J[i+d>>2]=J[i+o>>2];j=j+1|0;w=w+1|0;if((f|0)!=(w|0)){continue}break}break i}if(!o){break h}}if(o?K[e+104|0]:0){J[8370]=J[8370]+1;ia[J[6783]](o)}f=J[e+92>>2]}J[e+100>>2]=d;H[e+104|0]=1;J[e+96>>2]=r}J[J[e+100>>2]+(f<<2)>>2]=v;J[e+92>>2]=J[e+92>>2]+1;break b}if(d|j){break b}q=q-J[(o+J[a+84>>2]|0)+12>>2]|0;break a}q=q+1|0}if((y|0)>(q|0)){continue}break}}c=J[e+92>>2];if(c){d=J[a+172>>2];J[e+64>>2]=1008981770;while(1){c=c-1|0;q=c<<2;f=J[q+J[e+100>>2]>>2];j=ia[J[J[a>>2]+84>>2]](a)|0;ia[J[J[j>>2]+20>>2]](j,f,e);ia[J[J[b>>2]+8>>2]](b,e,d,J[q+J[e+100>>2]>>2]);if(c){continue}break}}ia[J[J[a>>2]+116>>2]](a);a=J[e+100>>2];if(!(a?!a|!K[e+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=e+112|0}function wo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=ga-400|0;ga=g;J[g+396>>2]=a;N[g+392>>2]=b;N[g+388>>2]=c;J[g+384>>2]=d;J[g+380>>2]=e;J[g+376>>2]=f;a=J[g+396>>2];d=ga-16|0;J[d+12>>2]=J[g+380>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+360>>2]=J[d>>2];J[g+364>>2]=e;e=J[d+12>>2];J[g+368>>2]=J[d+8>>2];J[g+372>>2]=e;N[g+340>>2]=0;N[g+336>>2]=0;N[g+332>>2]=0;d=g+344|0;na(d,g+340|0,g+336|0,g+332|0);b=N[g+388>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;J[g+328>>2]=30;N[g+308>>2]=0;N[g+304>>2]=0;N[g+300>>2]=0;d=g+312|0;na(d,g+308|0,g+304|0,g+300|0);b=Q(-N[g+388>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;N[g+276>>2]=0;N[g+272>>2]=0;N[g+268>>2]=0;d=g+280|0;na(d,g+276|0,g+272|0,g+268|0);b=N[g+388>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;J[g+264>>2]=0;while(1){if(J[g+264>>2]<360){b=Q(Sa(Q(Q(J[g+264>>2])*Q(.01745329238474369)))*N[g+392>>2]);d=ga-16|0;e=g+312|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=b;f=g+280|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+264>>2])*Q(.01745329238474369)))*N[g+392>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+384>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+384>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=J[g+380>>2];h=g+232|0;wa(h,J[d+12>>2],e);d=g+248|0;e=g+360|0;va(d,e,h);h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+200|0;wa(i,J[h+12>>2],f);f=g+216|0;va(f,e,i);ia[J[J[a>>2]+8>>2]](a,d,f,J[g+376>>2]);J[g+264>>2]=J[g+328>>2]+J[g+264>>2];continue}break}N[g+180>>2]=0;N[g+176>>2]=0;N[g+172>>2]=0;d=g+184|0;na(d,g+180|0,g+176|0,g+172|0);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=1;N[g+148>>2]=0;N[g+144>>2]=0;N[g+140>>2]=0;e=g+152|0;na(e,g+148|0,g+144|0,g+140|0);f=ga-16|0;J[f+12>>2]=e;N[J[f+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=1;f=ga-16|0;J[f+12>>2]=J[g+380>>2];h=g+104|0;i=J[f+12>>2];f=g+344|0;wa(h,i,f);i=g+120|0;j=g+360|0;Ma(i,j,h);h=ga-16|0;J[h+12>>2]=J[g+380>>2];k=g+88|0;wa(k,J[h+12>>2],d);h=ga-16|0;J[h+12>>2]=J[g+380>>2];l=g+72|0;wa(l,J[h+12>>2],e);b=N[g+392>>2];ia[J[J[a>>2]+60>>2]](a,i,k,l,b,b,Q(0),Q(6.2831854820251465),J[g+376>>2],0,Q(10));h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+40|0;wa(i,J[h+12>>2],f);f=g+56|0;va(f,j,i);h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+24|0;wa(i,J[h+12>>2],d);d=ga-16|0;J[d+12>>2]=J[g+380>>2];h=g+8|0;wa(h,J[d+12>>2],e);ia[J[J[a>>2]+60>>2]](a,f,i,h,N[g+392>>2],N[g+392>>2],Q(0),Q(6.2831854820251465),J[g+376>>2],0,Q(10));ga=g+400|0}function AD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=0,B=0,C=0,D=Q(0);g=N[b+40>>2];e=N[b+24>>2];f=N[b+8>>2];h=f>Q(-0xde0b6b000000000)?f:Q(-0xde0b6b000000000);h=e>h?e:h;t=g>h?g:h;f=f<Q(0xde0b6b000000000)?f:Q(0xde0b6b000000000);e=e<f?e:f;n=e>g?g:e;z=Q(t-n);g=N[b+36>>2];e=N[b+20>>2];f=N[b+4>>2];h=f<Q(0xde0b6b000000000)?f:Q(0xde0b6b000000000);h=e<h?e:h;h=g<h?g:h;f=f>Q(-0xde0b6b000000000)?f:Q(-0xde0b6b000000000);e=e>f?e:f;g=e<g?g:e;e=N[b+32>>2];f=N[b+16>>2];k=N[b>>2];q=k<Q(0xde0b6b000000000)?k:Q(0xde0b6b000000000);r=f<q?f:q;A=e<r;k=k>Q(-0xde0b6b000000000)?k:Q(-0xde0b6b000000000);p=f>k?f:k;B=p<e;b=J[a+8>>2];f=N[b+44>>2];k=N[b+40>>2];q=N[b+12>>2];v=N[b+8>>2];w=N[b+36>>2];x=N[b+4>>2];j=J[a+4>>2];b=J[j+4>>2];a:{if((b|0)!=J[j+8>>2]){break a}s=b?b<<1:1;if((s|0)<=(b|0)){break a}if(s){J[8369]=J[8369]+1;o=ia[J[6782]](s<<4,16)|0;b=J[j+4>>2]}b:{if((b|0)<=0){break b}a=0;if((b|0)!=1){C=b&-2;while(1){l=a<<4;m=l+o|0;i=l+J[j+12>>2]|0;u=J[i+4>>2];J[m>>2]=J[i>>2];J[m+4>>2]=u;u=J[i+12>>2];J[m+8>>2]=J[i+8>>2];J[m+12>>2]=u;i=l|16;l=i+o|0;i=i+J[j+12>>2]|0;m=J[i+4>>2];J[l>>2]=J[i>>2];J[l+4>>2]=m;m=J[i+12>>2];J[l+8>>2]=J[i+8>>2];J[l+12>>2]=m;a=a+2|0;y=y+2|0;if((y|0)!=(C|0)){continue}break}}if(!(b&1)){break b}b=a<<4;a=b+o|0;b=b+J[j+12>>2]|0;i=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=i;i=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=i}a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[j+12>>2]=o;H[j+16|0]=1;J[j+8>>2]=s;b=J[j+4>>2]}D=Q(g-h);a=J[j+12>>2]+(b<<4)|0;J[a+12>>2]=c<<21|d;p=B?e:p;e=A?e:r;r=Q(p-e);c=z<Q(.0020000000949949026);n=Q(Q((c?Q(n+Q(-.0010000000474974513)):n)-q)*f);c:{if(n<Q(4294967296)&n>=Q(0)){b=~~n>>>0;break c}b=0}I[a+4>>1]=b&65534;d=D<Q(.0020000000949949026);h=Q(Q((d?Q(h+Q(-.0010000000474974513)):h)-v)*k);d:{if(h<Q(4294967296)&h>=Q(0)){b=~~h>>>0;break d}b=0}I[a+2>>1]=b&65534;o=r<Q(.0020000000949949026);e=Q(Q((o?Q(e+Q(-.0010000000474974513)):e)-x)*w);e:{if(e<Q(4294967296)&e>=Q(0)){b=~~e>>>0;break e}b=0}I[a>>1]=b&65534;e=Q(Q(Q((c?Q(t+Q(.0010000000474974513)):t)-q)*f)+Q(1));f:{if(e<Q(4294967296)&e>=Q(0)){b=~~e>>>0;break f}b=0}I[a+10>>1]=b|1;g=Q(Q(Q((d?Q(g+Q(.0010000000474974513)):g)-v)*k)+Q(1));g:{if(g<Q(4294967296)&g>=Q(0)){b=~~g>>>0;break g}b=0}I[a+8>>1]=b|1;g=Q(Q(Q((o?Q(p+Q(.0010000000474974513)):p)-x)*w)+Q(1));h:{if(g<Q(4294967296)&g>=Q(0)){b=~~g>>>0;break h}b=0}I[a+6>>1]=b|1;J[j+4>>2]=J[j+4>>2]+1}function Wj(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=J[b>>2];l=J[a+4>>2];i=J[b+4>>2];f=J[b+8>>2];n=ec(a,c,i,f);d=2;e=J[b+12>>2];o=l+2|0;J[n+20>>2]=o;p=l+1|0;J[n+16>>2]=p;J[n+12>>2]=e;j=J[J[a+12>>2]+(J[b+12>>2]<<2)>>2];e=J[j+4>>2];a:{b:{k=J[j>>2];if((k|0)==(i|0)&(e|0)==(f|0)){break b}c:{if((f|0)==(k|0)&(e|0)==(i|0)){break c}g=J[j+8>>2];if((e|0)==(i|0)){d=0;if((f|0)==(g|0)){break b}}if((e|0)==(f|0)){d=0;if((g|0)==(i|0)){break c}}if((g|0)==(i|0)){d=1;if((f|0)==(k|0)){break b}}e=27144;if((f|0)!=(g|0)){break a}d=1;if((i|0)!=(k|0)){break a}}e=(j+(d<<2)|0)+12|0;break a}e=(j+(d<<2)|0)+12|0}J[e>>2]=l;j=ec(a,c,f,h);e=J[b+16>>2];J[j+20>>2]=l;J[j+16>>2]=o;J[j+12>>2]=e;e=2;g=J[J[a+12>>2]+(J[b+16>>2]<<2)>>2];d=J[g+4>>2];d:{e:{m=J[g>>2];if((m|0)==(f|0)&(d|0)==(h|0)){break e}f:{if((h|0)==(m|0)&(d|0)==(f|0)){break f}k=J[g+8>>2];if((d|0)==(f|0)){e=0;if((h|0)==(k|0)){break e}}if((d|0)==(h|0)){e=0;if((f|0)==(k|0)){break f}}if((f|0)==(k|0)){e=1;if((h|0)==(m|0)){break e}}d=27144;if((h|0)!=(k|0)){break d}e=1;if((f|0)!=(m|0)){break d}}d=(g+(e<<2)|0)+12|0;break d}d=(g+(e<<2)|0)+12|0}J[d>>2]=p;f=ec(a,c,h,i);e=J[b+20>>2];J[f+20>>2]=p;J[f+16>>2]=l;J[f+12>>2]=e;d=2;e=J[a+12>>2];l=J[e+(J[b+20>>2]<<2)>>2];g=J[l+4>>2];g:{h:{m=J[l>>2];if((m|0)==(h|0)&(g|0)==(i|0)){break h}i:{if((i|0)==(m|0)&(g|0)==(h|0)){break i}k=J[l+8>>2];if((g|0)==(h|0)){d=0;if((i|0)==(k|0)){break h}}if((g|0)==(i|0)){d=0;if((h|0)==(k|0)){break i}}if((h|0)==(k|0)){d=1;if((i|0)==(m|0)){break h}}g=27144;if((i|0)!=(k|0)){break g}d=1;if((h|0)!=(m|0)){break g}}g=(l+(d<<2)|0)+12|0;break g}g=(l+(d<<2)|0)+12|0}J[g>>2]=o;d=J[(J[n+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,n,d);J[J[a+12>>2]+(J[n+24>>2]<<2)>>2]=0;if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}d=J[(J[j+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,j,d);J[J[a+12>>2]+(J[j+24>>2]<<2)>>2]=0;if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}d=J[(J[f+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,f,d);J[J[a+12>>2]+(J[f+24>>2]<<2)>>2]=0;if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}J[(J[b+24>>2]<<2)+e>>2]=0;if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Js(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0);e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;H[e+7|0]=c;b=ra(1128);c=J[e+12>>2];a=J[e+8>>2];A=K[e+7|0];xb(b,7,Rk(),c);H[b+48|0]=0;J[b>>2]=20024;d=J[a+12>>2];J[b+124>>2]=J[a+8>>2];J[b+128>>2]=d;d=J[a+4>>2];J[b+116>>2]=J[a>>2];J[b+120>>2]=d;d=J[a+28>>2];J[b+140>>2]=J[a+24>>2];J[b+144>>2]=d;d=J[a+20>>2];J[b+132>>2]=J[a+16>>2];J[b+136>>2]=d;d=J[a+36>>2];J[b+148>>2]=J[a+32>>2];J[b+152>>2]=d;d=J[a+44>>2];J[b+156>>2]=J[a+40>>2];J[b+160>>2]=d;d=J[a+56>>2];B=J[a+60>>2];C=J[a+52>>2];a=J[a+48>>2];H[b+180|0]=A&1;J[b+164>>2]=a;J[b+168>>2]=C;J[b+172>>2]=d;J[b+176>>2]=B;D=N[c+52>>2];E=N[c+56>>2];F=N[c+60>>2];o=N[b+172>>2];p=N[b+164>>2];q=N[b+168>>2];f=N[c+8>>2];g=N[c+12>>2];h=N[c+28>>2];i=N[c+20>>2];j=N[c+24>>2];r=N[b+132>>2];s=N[b+148>>2];t=N[b+152>>2];u=N[b+120>>2];v=N[b+136>>2];k=N[c+44>>2];w=N[b+156>>2];l=N[c+36>>2];x=N[b+124>>2];m=N[c+40>>2];y=N[b+140>>2];n=N[c+4>>2];z=N[b+116>>2];J[b+288>>2]=1065353216;J[b+292>>2]=0;J[b+280>>2]=1065353216;J[b+284>>2]=1060320051;J[b+272>>2]=1065353216;J[b+276>>2]=0;J[b+264>>2]=1065353216;J[b+268>>2]=1060320051;J[b+224>>2]=0;J[b+228>>2]=0;J[b+216>>2]=1065353216;J[b+220>>2]=1060320051;J[b+208>>2]=0;J[b+212>>2]=0;J[b+200>>2]=1065353216;J[b+204>>2]=1060320051;J[b+192>>2]=0;J[b+196>>2]=0;J[b+184>>2]=1065353216;J[b+188>>2]=-1082130432;J[b+112>>2]=0;J[b+96>>2]=0;J[b+80>>2]=0;J[b- -64>>2]=0;N[b+92>>2]=Q(w*k)+Q(Q(x*l)+Q(y*m));N[b+88>>2]=Q(t*k)+Q(Q(u*l)+Q(v*m));N[b+84>>2]=Q(s*k)+Q(Q(z*l)+Q(r*m));N[b+76>>2]=Q(w*h)+Q(Q(x*i)+Q(y*j));N[b+72>>2]=Q(t*h)+Q(Q(u*i)+Q(v*j));N[b+68>>2]=Q(s*h)+Q(Q(z*i)+Q(r*j));N[b+60>>2]=Q(w*g)+Q(Q(x*n)+Q(f*y));N[b+56>>2]=Q(t*g)+Q(Q(u*n)+Q(f*v));N[b+52>>2]=Q(s*g)+Q(Q(z*n)+Q(r*f));N[b+108>>2]=F+Q(Q(o*k)+Q(Q(p*l)+Q(m*q)));N[b+104>>2]=E+Q(Q(o*h)+Q(Q(p*i)+Q(j*q)));N[b+100>>2]=D+Q(Q(o*g)+Q(Q(p*n)+Q(f*q)));J[b+1124>>2]=0;J[b+1116>>2]=0;J[b+1120>>2]=0;H[b+1096|0]=0;J[b+256>>2]=1065353216;J[b+260>>2]=0;J[b+248>>2]=1065353216;J[b+252>>2]=1060320051;J[b+240>>2]=1065353216;J[b+244>>2]=0;J[b+232>>2]=1065353216;J[b+236>>2]=1060320051;J[b+1100>>2]=0;J[b+1104>>2]=0;J[b+300>>2]=0;a=b+1105|0;H[a|0]=0;H[a+1|0]=0;H[a+2|0]=0;H[a+3|0]=0;H[a+4|0]=0;H[a+5|0]=0;H[a+6|0]=0;H[a+7|0]=0;H[b+49|0]=1;vg(b,J[b+28>>2]+4|0,J[b+32>>2]+4|0);ga=e+16|0;return b|0}function nF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=0,s=0;k=ga-32|0;ga=k;d=J[a+4>>2];ia[J[J[d>>2]+16>>2]](d,k+28|0,k+24|0,k+20|0,k+16|0,k+12|0,k+8|0,k+4|0,k,b);e=J[a+4>>2];g=J[k+12>>2]+P(J[k+8>>2],c)|0;n=J[k+16>>2];f=J[k>>2];d=J[k+28>>2];a:{b:{c:{d:{e:{if(J[k+20>>2]){switch(f-2|0){case 0:break d;case 1:break e;default:break c}}f:{g:{switch(f-2|0){case 0:f=P(n,J[g+8>>2])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,J[g+4>>2])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,J[g>>2])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2]);break f;case 1:f=P(n,L[g+4>>1])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,L[g+2>>1])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,L[g>>1])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2]);break f;default:break g}}f=P(n,K[g+2|0])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,K[g+1|0])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,K[g|0])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2])}j=N[e+12>>2];break a}l=L[g+4>>1];break b}l=J[g+8>>2];break b}l=K[g+2|0]}l=P(n,l)+d|0;q=O[l>>3];r=O[l+8>>3];s=O[l+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*Q(s);N[a+48>>2]=i*Q(r);N[a+44>>2]=h*Q(q);h:{i:{switch(f-2|0){case 0:l=J[g+4>>2];break h;case 1:l=L[g+2>>1];break h;default:break i}}l=K[g+1|0]}l=P(l,n)+d|0;q=O[l>>3];r=O[l+8>>3];s=O[l+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*Q(s);N[a+32>>2]=i*Q(r);N[a+28>>2]=h*Q(q);j:{k:{switch(f-2|0){case 0:f=J[g>>2];break j;case 1:f=L[g>>1];break j;default:break k}}f=K[g|0]}g=e+12|0;d=P(f,n)+d|0;h=Q(N[e+8>>2]*Q(O[d+8>>3]));i=Q(N[e+4>>2]*Q(O[d>>3]));j=Q(O[d+16>>3])}m=N[g>>2];J[a+24>>2]=0;N[a+16>>2]=h;N[a+12>>2]=i;N[a+20>>2]=m*j;d=J[a+8>>2];ia[J[J[d>>2]+8>>2]](d,a+12|0,b,c);a=J[a+4>>2];ia[J[J[a>>2]+24>>2]](a,b);ga=k+32|0}function nB(a){a=a|0;var b=0,c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0);c=ga-48|0;ga=c;if(K[a+1308|0]){J[a+1056>>2]=0;J[a+992>>2]=0;J[a+928>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);ia[J[J[a>>2]+44>>2]](a);b=a+1292|0;d=J[b+4>>2];J[c+40>>2]=J[b>>2];J[c+44>>2]=d;d=J[a+1288>>2];J[c+32>>2]=J[a+1284>>2];J[c+36>>2]=d;d=J[b+4>>2];J[c+24>>2]=J[b>>2];J[c+28>>2]=d;b=J[a+1288>>2];J[c+16>>2]=J[a+1284>>2];J[c+20>>2]=b;if(N[a+696>>2]>=N[a+680>>2]){b=K[a+1300|0];g=N[(b?a+1064|0:a+1128|0)>>2];f=N[(b?a+1080|0:a+1144|0)>>2];e=N[(b?a+1096|0:a+1160|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+176|0,c,c+32|0,c+16|0)}if(N[a+700>>2]>=N[a+684>>2]){b=K[a+1300|0];g=N[(b?a+1068|0:a+1132|0)>>2];f=N[(b?a+1084|0:a+1148|0)>>2];e=N[(b?a+1100|0:a+1164|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+260|0,c,c+32|0,c+16|0)}if(N[a+704>>2]>=N[a+688>>2]){b=K[a+1300|0];g=N[(b?a+1072|0:a+1136|0)>>2];f=N[(b?a+1088|0:a+1152|0)>>2];e=N[(b?a+1104|0:a+1168|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+344|0,c,c+32|0,c+16|0)}while(1){if(Fe(a,m)){b=(m<<4)+a|0;d=b+1216|0;h=J[d+4>>2];J[c+8>>2]=J[d>>2];J[c+12>>2]=h;b=b+1208|0;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[a+32>>2];i=N[d+36>>2];j=N[d+20>>2];n=N[d+40>>2];k=N[d+8>>2];l=N[d+24>>2];o=N[d+44>>2];s=N[d+12>>2];t=N[d+28>>2];h=J[a+28>>2];p=N[h+36>>2];u=N[h+20>>2];q=N[h+40>>2];v=N[h+8>>2];w=N[h+24>>2];r=N[h+44>>2];x=N[h+12>>2];y=N[h+28>>2];z=N[d+4>>2];A=N[h+4>>2];b=P(m,84)+a|0;J[b+436>>2]=0;J[b+440>>2]=0;J[b+428>>2]=0;J[b+432>>2]=0;g=N[c+8>>2];e=N[c>>2];f=N[c+4>>2];J[b+472>>2]=0;J[b+456>>2]=0;r=Q(Q(r*g)+Q(Q(x*e)+Q(y*f)));N[b+452>>2]=r;q=Q(Q(q*g)+Q(Q(v*e)+Q(w*f)));N[b+448>>2]=q;p=Q(Q(p*g)+Q(Q(A*e)+Q(u*f)));N[b+444>>2]=p;e=Q(-e);o=Q(Q(Q(s*e)-Q(t*f))-Q(o*g));N[b+468>>2]=o;n=Q(Q(Q(k*e)-Q(l*f))-Q(n*g));N[b+464>>2]=n;g=Q(Q(Q(z*e)-Q(j*f))-Q(i*g));N[b+460>>2]=g;f=N[h+400>>2];e=N[h+404>>2];i=N[h+396>>2];J[b+488>>2]=0;e=Q(r*e);N[b+484>>2]=e;f=Q(q*f);N[b+480>>2]=f;i=Q(p*i);N[b+476>>2]=i;j=N[d+400>>2];k=N[d+404>>2];l=N[d+396>>2];J[b+504>>2]=0;k=Q(o*k);N[b+500>>2]=k;j=Q(n*j);N[b+496>>2]=j;l=Q(g*l);N[b+492>>2]=l;N[b+508>>2]=Q(Q(e*r)+Q(Q(i*p)+Q(q*f)))+Q(Q(k*o)+Q(Q(l*g)+Q(n*j)))}m=m+1|0;if((m|0)!=3){continue}break}}ga=c+48|0}function QG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0);n=ga-16|0;ga=n;k=N[b+8>>2];f=N[c+8>>2];q=Q(Q(k*d)+f);C=N[b+4>>2];B=N[c+4>>2];D=Q(Q(C*d)+B);E=N[b>>2];e=Q(E*d);d=N[c>>2];F=Q(e+d);a:{if(K[a+228|0]){r=N[a+44>>2];i=Q(-N[a+84>>2]);s=N[a+60>>2];h=N[a+88>>2];t=N[a+76>>2];g=N[a+92>>2];y=Q(Q(Q(r*i)-Q(s*h))-Q(t*g));e=N[a+204>>2];u=N[a+36>>2];v=N[a+52>>2];w=N[a+68>>2];z=Q(Q(Q(u*i)-Q(v*h))-Q(w*g));l=N[a+196>>2];x=N[a+40>>2];j=Q(x*i);i=N[a+56>>2];j=Q(j-Q(i*h));h=N[a+72>>2];j=Q(j-Q(h*g));g=N[a+200>>2];e=Q(Q(Q(Q(y*e)+Q(Q(z*l)+Q(j*g)))+N[a+220>>2])+Q(Q(q*Q(Q(t*e)+Q(Q(w*l)+Q(h*g))))+Q(Q(F*Q(Q(r*e)+Q(Q(u*l)+Q(x*g))))+Q(D*Q(Q(s*e)+Q(Q(v*l)+Q(i*g)))))));g=e;l=k;o=Q(Q(e-f)*k);f=N[a+172>>2];e=N[a+164>>2];k=N[a+168>>2];e=Q(Q(Q(q*Q(Q(t*f)+Q(Q(w*e)+Q(h*k))))+Q(Q(F*Q(Q(r*f)+Q(Q(u*e)+Q(x*k))))+Q(D*Q(Q(s*f)+Q(Q(v*e)+Q(i*k))))))+Q(Q(Q(y*f)+Q(Q(z*e)+Q(j*k)))+N[a+212>>2]));p=Q(Q(e-d)*E);k=q;d=N[a+188>>2];f=N[a+180>>2];q=N[a+184>>2];f=Q(Q(Q(k*Q(Q(t*d)+Q(Q(w*f)+Q(h*q))))+Q(Q(F*Q(Q(r*d)+Q(Q(u*f)+Q(x*q))))+Q(D*Q(Q(s*d)+Q(Q(v*f)+Q(i*q))))))+Q(Q(Q(y*d)+Q(Q(z*f)+Q(j*q)))+N[a+216>>2]));d=Q(o+Q(p+Q(C*Q(f-B))));N[n+8>>2]=g+Q(l*d);N[n+4>>2]=f+Q(C*d);N[n>>2]=e+Q(E*d);break a}I=N[a+220>>2];r=N[a+204>>2];s=N[a+196>>2];t=N[a+200>>2];L=N[a+212>>2];e=N[a+168>>2];u=N[a+172>>2];v=N[a+164>>2];w=N[a+108>>2];o=Q(-N[a+148>>2]);l=N[a+124>>2];p=N[a+152>>2];x=N[a+140>>2];A=N[a+156>>2];i=Q(Q(Q(w*o)-Q(l*p))-Q(x*A));h=N[a+100>>2];g=N[a+116>>2];y=N[a+132>>2];z=Q(Q(Q(h*o)-Q(g*p))-Q(y*A));j=N[a+104>>2];m=Q(j*o);o=N[a+120>>2];m=Q(m-Q(o*p));p=N[a+136>>2];A=Q(m-Q(p*A));m=N[a+188>>2];G=N[a+180>>2];H=N[a+184>>2];m=Q(Q(Q(f*Q(Q(x*m)+Q(Q(y*G)+Q(p*H))))+Q(Q(d*Q(Q(w*m)+Q(Q(h*G)+Q(j*H))))+Q(B*Q(Q(l*m)+Q(Q(g*G)+Q(o*H))))))+Q(Q(Q(i*m)+Q(Q(z*G)+Q(A*H)))+N[a+216>>2]));N[n+4>>2]=m;e=Q(Q(Q(f*Q(Q(x*u)+Q(Q(y*v)+Q(p*e))))+Q(Q(d*Q(Q(w*u)+Q(Q(h*v)+Q(j*e))))+Q(B*Q(Q(l*u)+Q(Q(g*v)+Q(o*e))))))+Q(L+Q(Q(i*u)+Q(Q(z*v)+Q(A*e)))));N[n>>2]=e;d=Q(Q(I+Q(Q(i*r)+Q(Q(z*s)+Q(A*t))))+Q(Q(f*Q(Q(x*r)+Q(Q(y*s)+Q(p*t))))+Q(Q(d*Q(Q(w*r)+Q(Q(h*s)+Q(j*t))))+Q(B*Q(Q(l*r)+Q(Q(g*s)+Q(o*t)))))));N[n+8>>2]=d;d=Q(Q(Q(q-d)*k)+Q(Q(Q(F-e)*E)+Q(C*Q(D-m))))}J[n+12>>2]=0;a=J[a+32>>2];ia[J[J[a>>2]+16>>2]](a,b,n,d);ga=n+16|0}function Um(a){a=a|0;var b=0,c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=0;b=ga-80|0;ga=b;a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&8)){break a}c=J[a+24>>2];l=ia[J[J[c>>2]+36>>2]](c)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+64>>2]=1065353216;J[b+68>>2]=1065353216;c=0;if((l|0)<=0){break a}while(1){g=0;e=J[a+24>>2];m=ia[J[J[e>>2]+40>>2]](e,c)|0;n=J[m+748>>2];if((n|0)>0){while(1){o=ia[J[J[a>>2]+20>>2]](a)|0;e=P(g,184)+m|0;ia[J[J[o>>2]+32>>2]](o,e+36|0,e+68|0,N[e+84>>2],J[e+152>>2],b- -64|0);g=g+1|0;if((n|0)!=(g|0)){continue}break}}c=c+1|0;if((l|0)!=(c|0)){continue}break}}b:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break b}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&3)|J[a+8>>2]<=0){break b}g=0;while(1){c=J[J[a+16>>2]+(g<<2)>>2];c:{if(K[c+204|0]&32){break c}d:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break d}e=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[e>>2]+48>>2]](e)&1)){break d}e:{f:{g:{h:{switch(J[c+216>>2]-1|0){case 0:J[b+64>>2]=1065353216;break f;case 1:J[b+64>>2]=0;break g;case 2:J[b+64>>2]=0;break f;case 4:J[b+64>>2]=1065353216;break g;default:break h}}J[b+64>>2]=1065353216;f=Q(0);d=Q(0);break e}f=Q(1);d=Q(0);break e}f=Q(1);d=Q(1)}J[b+76>>2]=0;N[b+72>>2]=d;N[b+68>>2]=f;ia[J[J[a>>2]+28>>2]](a,c+4|0,J[c+192>>2],b- -64|0)}e=J[a+72>>2];if(!e){break c}if(!(ia[J[J[e>>2]+48>>2]](e)&2)){break c}J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;e=J[c+192>>2];ia[J[J[e>>2]+8>>2]](e,c+4|0,b- -64|0,b+48|0);d=N[6778];N[b+64>>2]=N[b+64>>2]-d;N[b+68>>2]=N[b+68>>2]-d;N[b+72>>2]=N[b+72>>2]-d;N[b+48>>2]=d+N[b+48>>2];N[b+52>>2]=d+N[b+52>>2];N[b+56>>2]=d+N[b+56>>2];i:{if(K[c+204|0]&3|(!K[a+44|0]|J[c+236>>2]!=2)){break i}e=J[c+192>>2];ia[J[J[e>>2]+8>>2]](e,c+68|0,b+16|0,b);f=Q(N[b+16>>2]-d);N[b+16>>2]=f;h=Q(N[b+20>>2]-d);N[b+20>>2]=h;i=Q(N[b+24>>2]-d);N[b+24>>2]=i;j=Q(d+N[b>>2]);N[b>>2]=j;k=Q(d+N[b+4>>2]);N[b+4>>2]=k;d=Q(d+N[b+8>>2]);N[b+8>>2]=d;if(f<N[b+64>>2]){N[b+64>>2]=f}if(N[b+68>>2]>h){N[b+68>>2]=h}if(N[b+72>>2]>i){N[b+72>>2]=i}f=N[b+28>>2];if(f<N[b+76>>2]){N[b+76>>2]=f}if(N[b+48>>2]<j){N[b+48>>2]=j}if(N[b+52>>2]<k){N[b+52>>2]=k}if(d>N[b+56>>2]){N[b+56>>2]=d}d=N[b+12>>2];if(!(d>N[b+60>>2])){break i}N[b+60>>2]=d}c=J[a+72>>2];ia[J[J[c>>2]+52>>2]](c,b- -64|0,b+48|0,b+32|0)}g=g+1|0;if((g|0)<J[a+8>>2]){continue}break}}ga=b+80|0}function fl(a,b){var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0);q=J[b+4>>2];J[a+556>>2]=J[b>>2];J[a+560>>2]=q;q=J[b+12>>2];J[a+564>>2]=J[b+8>>2];J[a+568>>2]=q;j=Q(-0);l=Q(1);c=N[a+568>>2];d=Q(c*Q(0));f=N[a+564>>2];h=N[a+556>>2];e=Q(h*Q(0));g=Q(Q(d+f)-e);e=Q(d+e);d=N[a+560>>2];i=Q(e-d);e=Q(f*Q(-0));p=Q(e+Q(Q(d*Q(-0))-h));e=Q(e+Q(c+Q(d*Q(0))));k=Q(Q(g*h)+Q(Q(Q(c*i)-Q(p*f))-Q(e*d)));n=Q(Q(i*d)+Q(Q(Q(c*e)-Q(p*h))-Q(g*f)));g=Q(Q(e*f)+Q(Q(Q(c*g)-Q(p*d))-Q(i*h)));i=Q(Q(k*Q(0))+Q(n+Q(g*Q(0))));if(!(i<Q(-.9999998807907104))){i=Q(i+Q(1));j=Q(Y(Q(i+i)));i=Q(Q(1)/j);m=Q(Q(g+Q(n*Q(-0)))*i);l=Q(Q(Q(n*Q(0))-k)*i);o=Q(j*Q(.5));j=Q(Q(Q(k*Q(0))+Q(g*Q(-0)))*i)}g=Q(Q(1)/Q(Y(Q(Q(o*o)+Q(Q(m*m)+Q(Q(j*j)+Q(l*l)))))));m=Q(m*g);l=Q(l*g);o=Q(o*g);j=Q(j*g);g=Q(Q(m*f)+Q(Q(l*d)+Q(Q(o*c)+Q(h*j))));i=Q(Q(l*h)+Q(Q(Q(o*f)-Q(c*m))-Q(j*d)));p=Q(Q(m*d)+Q(Q(Q(o*h)-Q(c*j))-Q(l*f)));r=Q(Q(j*f)+Q(Q(Q(o*d)-Q(c*l))-Q(m*h)));h=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(i*i)+Q(Q(p*p)+Q(r*r)))))));f=N[a+444>>2];a:{if(!(f>=Q(.05000000074505806))){break a}c=N[a+448>>2];if(!(c>=Q(.05000000074505806))){break a}d=qb(Q(T(Q(U(o,Q(-1))),Q(1))));d=Q(d+d);b:{if(!(d>Q(1.1920928955078125e-7))){break b}e=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(j*j)+Q(l*l))))));k=Q(m*e);n=Q(j*e);e=Q(l*e);if(!(Q(R(e))>Q(1.1920928955078125e-7))){break b}s=Q(Q(k*k)/Q(e*e));f=Q(Y(Q(Q(s+Q(1))/Q(Q(Q(1)/Q(c*c))+Q(s/Q(f*f))))))}if(!(Q(R(d))>Q(1.1920928955078125e-7))){break a}c:{if(d>f){d=f;break c}c=Q(-f);if(!(c>d)){break c}d=c}c=Q(d*Q(.5));d=Q(Ga(c)/Q(Y(Q(Q(k*k)+Q(Q(n*n)+Q(e*e))))));m=Q(k*d);l=Q(e*d);j=Q(n*d);o=Ha(c)}f=Q(g*h);d=Q(i*h);n=Q(r*h);g=Q(p*h);i=N[a+452>>2];d:{if(!(i>=Q(.05000000074505806))){break d}h=g;k=n;e=d;c=qb(Q(T(Q(U(f,Q(-1))),Q(1))));c=Q(c+c);if(c>Q(3.1415927410125732)){e=Q(-d);k=Q(-n);h=Q(-g);c=qb(Q(T(Q(U(Q(-f),Q(-1))),Q(1))));c=Q(c+c)}if(c>Q(1.1920928955078125e-7)){p=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(h*h)+Q(k*k))))));e=Q(e*p);h=Q(h*p);k=Q(k*p)}if(!(Q(R(c))>Q(1.1920928955078125e-7))){break d}e:{if(c>i){c=i;break e}d=Q(-i);if(!(d>c)){break e}c=d}f=Q(c*Q(.5));c=Q(Ga(f)/Q(Y(Q(Q(e*e)+Q(Q(h*h)+Q(k*k))))));d=Q(e*c);n=Q(k*c);g=Q(h*c);f=Ha(f)}N[a+568>>2]=Q(Q(Q(o*f)-Q(g*j))-Q(l*n))-Q(m*d);N[a+564>>2]=Q(Q(j*n)+Q(Q(o*d)+Q(m*f)))-Q(l*g);N[a+560>>2]=Q(Q(m*g)+Q(Q(o*n)+Q(l*f)))-Q(j*d);N[a+556>>2]=Q(Q(l*d)+Q(Q(o*g)+Q(j*f)))-Q(m*n)}function cl(a,b,c,d,e,f){xb(a,6,b,c);J[a>>2]=19508;b=J[d+12>>2];J[a+56>>2]=J[d+8>>2];J[a+60>>2]=b;b=J[d+4>>2];J[a+48>>2]=J[d>>2];J[a+52>>2]=b;b=J[d+28>>2];J[a+72>>2]=J[d+24>>2];J[a+76>>2]=b;c=J[d+20>>2];b=a- -64|0;J[b>>2]=J[d+16>>2];J[b+4>>2]=c;b=J[d+44>>2];J[a+88>>2]=J[d+40>>2];J[a+92>>2]=b;b=J[d+36>>2];J[a+80>>2]=J[d+32>>2];J[a+84>>2]=b;b=J[d+60>>2];J[a+104>>2]=J[d+56>>2];J[a+108>>2]=b;b=J[d+52>>2];J[a+96>>2]=J[d+48>>2];J[a+100>>2]=b;b=J[e+12>>2];J[a+120>>2]=J[e+8>>2];J[a+124>>2]=b;b=J[e+4>>2];J[a+112>>2]=J[e>>2];J[a+116>>2]=b;b=J[e+20>>2];J[a+128>>2]=J[e+16>>2];J[a+132>>2]=b;b=J[e+28>>2];J[a+136>>2]=J[e+24>>2];J[a+140>>2]=b;b=J[e+36>>2];J[a+144>>2]=J[e+32>>2];J[a+148>>2]=b;b=J[e+44>>2];J[a+152>>2]=J[e+40>>2];J[a+156>>2]=b;b=J[e+52>>2];J[a+160>>2]=J[e+48>>2];J[a+164>>2]=b;b=J[e+60>>2];J[a+168>>2]=J[e+56>>2];J[a+172>>2]=b;J[a+680>>2]=0;J[a+684>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+704>>2]=0;J[a+708>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;J[a+740>>2]=0;J[a+744>>2]=0;J[a+748>>2]=0;J[a+752>>2]=0;J[a+764>>2]=1045220557;J[a+756>>2]=1045220557;J[a+760>>2]=1045220557;J[a+784>>2]=0;J[a+776>>2]=0;J[a+780>>2]=0;J[a+768>>2]=0;J[a+772>>2]=0;J[a+736>>2]=1056964608;J[a+728>>2]=1060320051;J[a+732>>2]=1065353216;H[a+790|0]=0;I[a+788>>1]=0;J[a+800>>2]=0;J[a+792>>2]=0;J[a+796>>2]=0;J[a+816>>2]=0;J[a+808>>2]=0;J[a+812>>2]=0;J[a+928>>2]=0;J[a+884>>2]=1133903872;J[a+876>>2]=0;J[a+880>>2]=1036831949;J[a+904>>2]=0;J[a+908>>2]=0;J[a+896>>2]=0;J[a+900>>2]=1045220557;J[a+868>>2]=1065353216;J[a+872>>2]=-1082130432;J[a+924>>2]=0;J[a+888>>2]=1065353216;J[a+892>>2]=1056964608;J[a+916>>2]=0;J[a+992>>2]=0;H[a+912|0]=0;J[a+948>>2]=1133903872;J[a+940>>2]=0;J[a+944>>2]=1036831949;J[a+968>>2]=0;J[a+972>>2]=0;J[a+960>>2]=0;J[a+964>>2]=1045220557;J[a+932>>2]=1065353216;J[a+936>>2]=-1082130432;J[a+988>>2]=0;J[a+952>>2]=1065353216;J[a+956>>2]=1056964608;J[a+980>>2]=0;J[a+1056>>2]=0;H[a+976|0]=0;J[a+1012>>2]=1133903872;J[a+1004>>2]=0;J[a+1008>>2]=1036831949;b=a+1032|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1024|0;J[b>>2]=0;J[b+4>>2]=1045220557;J[a+996>>2]=1065353216;J[a+1e3>>2]=-1082130432;J[a+1052>>2]=0;J[a+1016>>2]=1065353216;J[a+1020>>2]=1056964608;J[a+1044>>2]=0;H[a+1308|0]=0;J[a+1304>>2]=0;H[a+1301|0]=1;H[a+1300|0]=f;H[a+1040|0]=0;pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function rb(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0,s=Q(0),t=0,u=Q(0),v=Q(0);if(!((b|0)==(d|0)|(b|0)==(c|0)|(c|0)==(d|0))){i=ga-48|0;ga=i;J[i+40>>2]=0;J[i+32>>2]=0;J[i+36>>2]=0;J[i+24>>2]=0;J[i+28>>2]=0;J[i+16>>2]=0;J[i+20>>2]=0;J[i+8>>2]=0;J[i+12>>2]=0;e=e?e:J[J[a+880>>2]>>2];f=J[a+752>>2];a:{if((f|0)!=J[a+756>>2]){break a}o=f?f<<1:1;if((o|0)<=(f|0)){break a}if(o){J[8369]=J[8369]+1;p=ia[J[6782]](P(o,44),16)|0;f=J[a+752>>2]}b:{if((f|0)<=0){break b}if((f|0)!=1){t=f&-2;while(1){g=P(q,44);h=g+p|0;g=g+J[a+760>>2]|0;j=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=j;J[h+40>>2]=J[g+40>>2];j=J[g+36>>2];J[h+32>>2]=J[g+32>>2];J[h+36>>2]=j;j=J[g+28>>2];J[h+24>>2]=J[g+24>>2];J[h+28>>2]=j;j=J[g+20>>2];J[h+16>>2]=J[g+16>>2];J[h+20>>2]=j;j=J[g+12>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=j;g=P(q|1,44);h=g+p|0;g=g+J[a+760>>2]|0;j=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=j;j=J[g+12>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=j;j=J[g+20>>2];J[h+16>>2]=J[g+16>>2];J[h+20>>2]=j;j=J[g+28>>2];J[h+24>>2]=J[g+24>>2];J[h+28>>2]=j;j=J[g+36>>2];J[h+32>>2]=J[g+32>>2];J[h+36>>2]=j;J[h+40>>2]=J[g+40>>2];q=q+2|0;r=r+2|0;if((t|0)!=(r|0)){continue}break}}if(!(f&1)){break b}f=P(q,44);g=f+p|0;f=f+J[a+760>>2]|0;h=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=h;J[g+40>>2]=J[f+40>>2];h=J[f+36>>2];J[g+32>>2]=J[f+32>>2];J[g+36>>2]=h;h=J[f+28>>2];J[g+24>>2]=J[f+24>>2];J[g+28>>2]=h;h=J[f+20>>2];J[g+16>>2]=J[f+16>>2];J[g+20>>2]=h;h=J[f+12>>2];J[g+8>>2]=J[f+8>>2];J[g+12>>2]=h}f=J[a+760>>2];if(!(f?!f|!K[a+764|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[a+760>>2]=p;H[a+764|0]=1;J[a+756>>2]=o;f=J[a+752>>2]}f=J[a+760>>2]+P(f,44)|0;J[f+4>>2]=e;J[f>>2]=0;e=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=e;e=J[i+20>>2];J[f+16>>2]=J[i+16>>2];J[f+20>>2]=e;e=J[i+28>>2];J[f+24>>2]=J[i+24>>2];J[f+28>>2]=e;e=J[i+36>>2];J[f+32>>2]=J[i+32>>2];J[f+36>>2]=e;J[f+40>>2]=J[i+40>>2];J[a+752>>2]=J[a+752>>2]+1;ga=i+48|0;e=J[a+760>>2]+P(J[a+752>>2],44)|0;b=J[a+720>>2]+P(b,104)|0;J[e-36>>2]=b;c=J[a+720>>2]+P(c,104)|0;J[e-32>>2]=c;d=J[a+720>>2]+P(d,104)|0;J[e-28>>2]=d;l=N[b+8>>2];s=Q(N[c+8>>2]-l);k=N[b+12>>2];m=Q(N[d+12>>2]-k);l=Q(N[d+8>>2]-l);k=Q(N[c+12>>2]-k);n=Q(Q(s*m)-Q(l*k));u=Q(n*n);v=k;k=N[b+16>>2];n=Q(N[d+16>>2]-k);k=Q(N[c+16>>2]-k);m=Q(Q(v*n)-Q(m*k));l=Q(Q(k*l)-Q(n*s));N[e-8>>2]=Y(Q(u+Q(Q(m*m)+Q(l*l))));H[a+924|0]=1}}function rk(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);d=ga+-64|0;ga=d;H[b+84|0]=0;c=J[a+116>>2];r=N[c+52>>2];g=N[c+8>>2];e=N[c+12>>2];s=N[c+56>>2];h=N[c+20>>2];j=N[c+24>>2];l=N[c+28>>2];f=N[c+60>>2];m=N[c+36>>2];n=N[c+40>>2];o=N[c+44>>2];p=N[c+4>>2];J[b+48>>2]=0;q=f;f=N[b+164>>2];i=N[b+156>>2];k=N[b+160>>2];N[b+44>>2]=q+Q(Q(o*f)+Q(Q(m*i)+Q(n*k)));N[b+40>>2]=s+Q(Q(f*l)+Q(Q(i*h)+Q(j*k)));N[b+36>>2]=r+Q(Q(f*e)+Q(Q(i*p)+Q(g*k)));J[b- -64>>2]=0;f=N[b+180>>2];i=N[b+172>>2];k=N[b+176>>2];N[b+60>>2]=Q(o*f)+Q(Q(m*i)+Q(n*k));N[b+56>>2]=Q(l*f)+Q(Q(h*i)+Q(j*k));N[b+52>>2]=Q(e*f)+Q(Q(p*i)+Q(g*k));f=N[b+192>>2];i=N[b+196>>2];k=N[b+188>>2];J[b+80>>2]=0;N[b+76>>2]=Q(o*i)+Q(Q(m*k)+Q(n*f));N[b+72>>2]=Q(l*i)+Q(Q(h*k)+Q(j*f));N[b+68>>2]=Q(e*i)+Q(Q(p*k)+Q(g*f));g=N[b+204>>2];J[b+28>>2]=0;g=Q(g+N[b+212>>2]);N[b+24>>2]=Q(g*N[b+60>>2])+N[b+44>>2];N[b+20>>2]=Q(g*N[b+56>>2])+N[b+40>>2];N[b+16>>2]=Q(N[b+52>>2]*g)+N[b+36>>2];J[d+40>>2]=-1082130432;c=J[a+100>>2];c=ia[J[J[c>>2]+8>>2]](c,b+36|0,b+16|0,d+8|0)|0;J[b+88>>2]=0;a:{if(c){e=N[d+40>>2];c=J[d+28>>2];J[b>>2]=J[d+24>>2];J[b+4>>2]=c;c=J[d+36>>2];J[b+8>>2]=J[d+32>>2];J[b+12>>2]=c;H[b+84|0]=1;g=Q(g*e);if(!K[33208]){J[d+56>>2]=0;J[d+60>>2]=0;J[d+48>>2]=0;J[d+52>>2]=0;qg(32592,d+48|0);H[33208]=1}J[d+56>>2]=0;J[d+60>>2]=0;J[d+48>>2]=0;J[d+52>>2]=0;we(32592,Q(0),d+48|0);J[b+88>>2]=32592;N[b+32>>2]=g-N[b+212>>2];h=N[b+204>>2];j=Q(N[b+208>>2]*Q(.009999999776482582));e=Q(h-j);l=N[b+32>>2];c=e>l;e=c?e:l;h=Q(h+j);if(c|e>h){N[b+32>>2]=e>h?h:e}c=J[d+12>>2];J[b+16>>2]=J[d+8>>2];J[b+20>>2]=c;c=J[d+20>>2];J[b+24>>2]=J[d+16>>2];J[b+28>>2]=c;h=N[b+8>>2];j=N[b>>2];l=N[b+4>>2];e=Q(Q(h*N[b+60>>2])+Q(Q(j*N[b+52>>2])+Q(l*N[b+56>>2])));if(e>=Q(-.10000000149011612)){J[b+272>>2]=0;e=Q(10);break a}e=Q(Q(-1)/e);f=h;a=J[a+116>>2];h=N[a+328>>2];m=Q(N[b+20>>2]-N[a+56>>2]);n=Q(N[b+16>>2]-N[a+52>>2]);o=N[a+332>>2];i=Q(f*Q(Q(Q(h*m)-Q(n*o))+N[a+320>>2]));f=j;j=Q(N[b+24>>2]-N[a+60>>2]);q=m;m=N[a+336>>2];N[b+272>>2]=e*Q(i+Q(Q(f*Q(Q(Q(o*j)-Q(q*m))+N[a+312>>2]))+Q(l*Q(Q(Q(m*n)-Q(j*h))+N[a+316>>2]))));break a}g=N[b+204>>2];J[b+272>>2]=0;N[b+32>>2]=g;J[b+12>>2]=0;N[b+8>>2]=-N[b+60>>2];N[b+4>>2]=-N[b+56>>2];N[b>>2]=-N[b+52>>2];g=Q(-1);e=Q(1)}N[b+268>>2]=e;ga=d- -64|0;return g}function pm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=0;d=ga-80|0;ga=d;e=J[a+4>>2];ia[J[J[e>>2]+16>>2]](e,d+28|0,d+24|0,d+20|0,d+16|0,d+12|0,d+8|0,d+4|0,d,b);g=J[d+12>>2]+P(J[d+8>>2],c)|0;e=J[a+4>>2];k=J[d+16>>2];l=J[d+28>>2];f=J[d>>2];a:{if(!J[d+20>>2]){if((f|0)!=3){f=P(J[g+8>>2],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*q;N[d+68>>2]=i*p;N[d+64>>2]=h*m;f=P(J[g+4>>2],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*q;N[d+52>>2]=i*p;N[d+48>>2]=h*m;g=P(J[g>>2],k)+l|0;h=N[g+4>>2];i=N[g+8>>2];j=N[e+8>>2];m=N[e+12>>2];N[d+32>>2]=N[g>>2]*N[e+4>>2];i=Q(i*m);h=Q(h*j);break a}f=P(L[g+4>>1],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*q;N[d+68>>2]=i*p;N[d+64>>2]=h*m;f=P(L[g+2>>1],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*q;N[d+52>>2]=i*p;N[d+48>>2]=h*m;g=P(L[g>>1],k)+l|0;h=N[g+4>>2];i=N[g+8>>2];j=N[e+8>>2];m=N[e+12>>2];N[d+32>>2]=N[g>>2]*N[e+4>>2];i=Q(i*m);h=Q(h*j);break a}if((f|0)!=3){f=P(J[g+8>>2],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*Q(r);N[d+68>>2]=i*Q(o);N[d+64>>2]=h*Q(n);f=P(J[g+4>>2],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*Q(r);N[d+52>>2]=i*Q(o);N[d+48>>2]=h*Q(n);g=P(J[g>>2],k)+l|0;n=O[g+8>>3];o=O[g+16>>3];h=N[e+8>>2];i=N[e+12>>2];N[d+32>>2]=N[e+4>>2]*Q(O[g>>3]);i=Q(i*Q(o));h=Q(h*Q(n));break a}f=P(L[g+4>>1],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*Q(r);N[d+68>>2]=i*Q(o);N[d+64>>2]=h*Q(n);f=P(L[g+2>>1],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*Q(r);N[d+52>>2]=i*Q(o);N[d+48>>2]=h*Q(n);g=P(L[g>>1],k)+l|0;n=O[g+8>>3];o=O[g+16>>3];h=N[e+8>>2];i=N[e+12>>2];N[d+32>>2]=N[e+4>>2]*Q(O[g>>3]);i=Q(i*Q(o));h=Q(h*Q(n))}J[d+44>>2]=0;N[d+40>>2]=i;N[d+36>>2]=h;e=J[a+8>>2];ia[J[J[e>>2]+8>>2]](e,d+32|0,b,c);a=J[a+4>>2];ia[J[J[a>>2]+24>>2]](a,b);ga=d+80|0}function Oy(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=J[a+452>>2];l=a+324|0;ia[J[J[d>>2]+16>>2]](d,l,0);d=J[a+452>>2];ia[J[J[d>>2]+12>>2]](d)|0;Jk(a,b);ya(2474);if(J[a+328>>2]){d=0;j=J[l+4>>2];a:{if((j|0)<=0){break a}c=J[l+12>>2];if(j-1>>>0>=3){k=j&-4;while(1){h=e<<2;i=J[J[h+c>>2]+384>>2];f=(f|0)>(i|0)?f:i;i=J[J[c+(h|4)>>2]+384>>2];f=(f|0)>(i|0)?f:i;i=J[J[c+(h|8)>>2]+384>>2];f=(f|0)>(i|0)?f:i;h=J[J[c+(h|12)>>2]+384>>2];f=(f|0)>(h|0)?f:h;e=e+4|0;g=g+4|0;if((k|0)!=(g|0)){continue}break}}g=j&3;if(g){while(1){h=J[J[c+(e<<2)>>2]+384>>2];f=(f|0)>(h|0)?f:h;e=e+1|0;d=d+1|0;if((g|0)!=(d|0)){continue}break}}if((j|0)<=0){break a}d=0;while(1){e=J[J[l+12>>2]+(d<<2)>>2];if(J[e+852>>2]>0){c=0;while(1){g=J[J[e+860>>2]+(c<<2)>>2];ia[J[J[g>>2]+8>>2]](g,N[e+452>>2],f);c=c+1|0;if((c|0)<J[e+852>>2]){continue}break}}d=d+1|0;if((j|0)!=(d|0)){continue}break}if((f|0)>0){if((j|0)<=0){break a}g=0;while(1){d=0;while(1){e=J[J[l+12>>2]+(d<<2)>>2];h=J[e+852>>2];b:{if((h|0)<=0){break b}c=0;if((h|0)!=1){i=h&-2;k=0;while(1){m=c<<2;n=J[m+J[e+860>>2]>>2];ia[J[J[n>>2]+12>>2]](n,N[e+452>>2],Q(1));m=J[J[e+860>>2]+(m|4)>>2];ia[J[J[m>>2]+12>>2]](m,N[e+452>>2],Q(1));c=c+2|0;k=k+2|0;if((i|0)!=(k|0)){continue}break}}if(!(h&1)){break b}c=J[J[e+860>>2]+(c<<2)>>2];ia[J[J[c>>2]+12>>2]](c,N[e+452>>2],Q(1))}d=d+1|0;if((j|0)!=(d|0)){continue}break}g=g+1|0;if((g|0)!=(f|0)){continue}break}}if((j|0)<=0){break a}f=0;while(1){g=J[J[l+12>>2]+(f<<2)>>2];if(J[g+852>>2]>0){d=0;while(1){e=d<<2;c=J[e+J[g+860>>2]>>2];ia[J[J[c>>2]+16>>2]](c,N[g+452>>2]);c=J[e+J[g+860>>2]>>2];c:{if(!K[c+152|0]){c=J[g+852>>2];break c}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=d-1|0;c=J[g+852>>2];if((c|0)<=0){break c}h=J[g+860>>2];k=J[h+e>>2];e=0;while(1){i=h+(e<<2)|0;if((k|0)!=J[i>>2]){e=e+1|0;if((e|0)!=(c|0)){continue}break c}break}if((c|0)<=(e|0)){break c}c=c-1|0;e=c<<2;J[i>>2]=J[e+h>>2];J[e+J[g+860>>2]>>2]=k;J[g+852>>2]=c}d=d+1|0;if((d|0)<(c|0)){continue}break}}f=f+1|0;if((j|0)!=(f|0)){continue}break}}}d=J[a+452>>2];ia[J[J[d>>2]+28>>2]](d,Q(N[d+12>>2]*b));xa();if(J[a+328>>2]>0){d=0;while(1){c=J[J[a+336>>2]+(d<<2)>>2];fk(c,c);d=d+1|0;if((d|0)<J[a+328>>2]){continue}break}}a=J[a+452>>2];ia[J[J[a>>2]+32>>2]](a)}function te(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);n=N[a+452>>2];w=N[a+304>>2];q=N[a+300>>2];a:{if(!(w>Q(0)|q>Q(0))){break a}u=J[a+720>>2];v=N[(u+P(c,104)|0)+88>>2];if(!(v>Q(0))|J[a+288>>2]>3){break a}r=P(c,104)+u|0;p=N[r+48>>2];e=Q(p-N[b+8>>2]);s=N[r+40>>2];f=Q(s-N[b>>2]);t=N[r+44>>2];j=Q(t-N[b+4>>2]);o=Q(Q(e*e)+Q(Q(f*f)+Q(j*j)));if(!(o>Q(1.1920928955078125e-7))){break a}x=N[J[a+684>>2]>>2];A=Q(Y(o));g=Q(Q(1)/A);d=Q(e*g);h=Q(j*g);g=Q(f*g);i=N[r+72>>2];k=N[r+80>>2];m=N[r+76>>2];b:{switch(J[a+288>>2]){case 2:e=Q(Q(k*e)+Q(Q(i*f)+Q(j*m)))<Q(0)?Q(-1):Q(1);l=Q(k*e);y=Q(i*e);z=Q(m*e);e=Q(Q(l*d)+Q(Q(y*g)+Q(h*z)));f=Q(Q(Q(q*Q(.5))*x)*o);o=Q(N[(P(c,104)+u|0)+92>>2]*Q(.5));i=Q(e*Q(f*o));f=Q(i*Q(-d));j=Q(i*Q(-h));i=Q(i*Q(-g));c:{if(!(e>Q(0))){k=Q(0);m=Q(0);break c}k=Q(0);m=Q(0);if(!(e<Q(.9847999811172485))){break c}k=Q(Q(z*d)-Q(h*l));q=Q(Q(l*g)-Q(d*y));e=Q(Q(Y(Q(Q(1)-Q(e*e))))*Q(Q(Q(Q(w*Q(.5))*x)*A)*o));m=Q(Q(Q(k*h)-Q(g*q))*e);o=Q(Q(y*h)-Q(g*z));k=Q(Q(Q(o*g)-Q(d*k))*e);B=Q(Q(Q(q*d)-Q(h*o))*e)}d=Q(n*Q(v*f));e=Q(d*d);d=Q(n*Q(v*i));g=Q(d*d);d=Q(n*Q(v*j));d=Q(e+Q(g+Q(d*d)));h=Q(Q(p*p)+Q(Q(s*s)+Q(t*t)));if(!(!(d>=h)|!(d>Q(0)))){d=Q(Q(Q(Y(h))/Q(Y(d)))*Q(.800000011920929));f=Q(f*d);i=Q(i*d);j=Q(j*d)}a=P(c,104)+u|0;N[a+56>>2]=B+Q(i+N[a+56>>2]);b=a- -64|0;N[b>>2]=m+Q(f+N[b>>2]);N[a+60>>2]=k+Q(j+N[a+60>>2]);return;case 0:case 1:case 3:break b;default:break a}}l=e;e=Q(Q(k*e)+Q(Q(i*f)+Q(j*m)))<Q(0)?Q(-1):Q(1);k=Q(k*e);i=Q(i*e);m=Q(m*e);f=Q(Q(l*k)+Q(Q(f*i)+Q(j*m)));if(!(f>Q(0))){break a}e=Q(n*v);l=d;a=P(c,104)+u|0;d=Q(x*Q(Q(o*Q(f*N[a+92>>2]))*Q(-.5)));f=Q(q*d);j=Q(w*d);d=Q(Q(l*f)+Q(Q(k*j)+Q(0)));n=Q(e*d);l=Q(n*n);g=Q(Q(g*f)+Q(Q(i*j)+Q(0)));n=Q(e*g);h=Q(Q(h*f)+Q(Q(m*j)+Q(0)));f=Q(e*h);if(Q(l+Q(Q(n*n)+Q(f*f)))>Q(Q(p*p)+Q(Q(s*s)+Q(t*t)))){e=Q(Q(1)/e);l=g;g=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(g*g)+Q(h*h))))));f=Q(l*g);l=p;p=Q(d*g);h=Q(h*g);d=Q(Q(l*p)+Q(Q(s*f)+Q(t*h)));N[a+56>>2]=N[a+56>>2]-Q(e*Q(f*d));N[a+60>>2]=N[a+60>>2]-Q(e*Q(h*d));a=a- -64|0;N[a>>2]=N[a>>2]-Q(e*Q(p*d));return}N[a+56>>2]=g+N[a+56>>2];N[a+60>>2]=h+N[a+60>>2];a=a- -64|0;N[a>>2]=d+N[a>>2]}}function wl(a,b,c,d,e,f){var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0,D=Q(0),E=Q(0);g=ga-544|0;ga=g;o=a;a=g+384|0;Gg(o,b,c,d,f,a,0);J[g+136>>2]=0;J[g+140>>2]=0;J[g+128>>2]=0;J[g+132>>2]=0;J[g+364>>2]=0;J[g+368>>2]=0;J[g+376>>2]=2;J[g+144>>2]=0;a:{b:{c=Fg(g,a,e);if(!c){a=J[g+372>>2];if(!J[a+32>>2]){break b}e=0;while(1){A=e<<2;d=A+a|0;h=N[d+16>>2];a=J[g+504>>2];o=g+528|0;B=J[g+508>>2];C=J[g+384>>2]+(B>>1)|0;d=J[d>>2];if(B&1){a=J[a+J[C>>2]>>2]}ia[a|0](o,C,d);o=J[g+508>>2];d=J[g+388>>2]+(o>>1)|0;p=Q(h*N[g+536>>2]);q=Q(h*N[g+532>>2]);r=Q(h*N[g+528>>2]);a=J[J[g+372>>2]+A>>2];i=Q(-N[a+8>>2]);j=Q(-N[a+4>>2]);k=Q(-N[a>>2]);a=J[g+504>>2];a=o&1?J[J[d>>2]+a>>2]:a;l=Q(l+p);m=Q(m+q);n=Q(n+r);J[g+524>>2]=0;N[g+520>>2]=Q(N[g+432>>2]*i)+Q(Q(N[g+424>>2]*k)+Q(N[g+428>>2]*j));N[g+516>>2]=Q(N[g+416>>2]*i)+Q(Q(N[g+408>>2]*k)+Q(N[g+412>>2]*j));N[g+512>>2]=Q(N[g+400>>2]*i)+Q(Q(N[g+392>>2]*k)+Q(N[g+396>>2]*j));ia[a|0](g+528|0,d,g+512|0);i=N[g+536>>2];j=N[g+528>>2];k=N[g+532>>2];s=Q(s+Q(h*Q(Q(Q(i*N[g+480>>2])+Q(Q(j*N[g+472>>2])+Q(k*N[g+476>>2])))+N[g+496>>2])));t=Q(t+Q(h*Q(Q(Q(i*N[g+464>>2])+Q(Q(j*N[g+456>>2])+Q(k*N[g+460>>2])))+N[g+492>>2])));u=Q(u+Q(h*Q(Q(Q(i*N[g+448>>2])+Q(Q(j*N[g+440>>2])+Q(k*N[g+444>>2])))+N[g+488>>2])));e=e+1|0;a=J[g+372>>2];if(e>>>0<M[a+32>>2]){continue}break}break b}J[f>>2]=(c|0)==1?1:2;break a}h=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];p=N[b+40>>2];q=N[b+36>>2];r=N[b+16>>2];v=N[b+32>>2];w=N[b+48>>2];x=N[b+8>>2];y=N[b>>2];z=N[b+4>>2];J[f+16>>2]=0;N[f+4>>2]=w+Q(Q(l*x)+Q(Q(n*y)+Q(m*z)));N[f+12>>2]=k+Q(Q(l*p)+Q(Q(n*v)+Q(m*q)));N[f+8>>2]=h+Q(Q(l*i)+Q(Q(n*r)+Q(m*j)));i=N[b+52>>2];j=N[b+24>>2];k=N[b+20>>2];p=N[b+56>>2];q=N[b+40>>2];r=N[b+36>>2];v=N[b+48>>2];w=N[b+8>>2];x=N[b>>2];y=N[b+4>>2];z=N[b+16>>2];D=N[b+32>>2];h=Q(l-s);l=Q(n-u);m=Q(m-t);n=Q(Y(Q(Q(h*h)+Q(Q(l*l)+Q(m*m)))));N[f+52>>2]=n;J[f+48>>2]=0;J[f+32>>2]=0;E=h;h=n>Q(9999999747378752e-20)?Q(Q(1)/n):Q(1);N[f+44>>2]=E*h;N[f+40>>2]=m*h;N[f+36>>2]=l*h;N[f+28>>2]=p+Q(Q(s*q)+Q(Q(u*D)+Q(t*r)));N[f+24>>2]=i+Q(Q(s*j)+Q(Q(u*z)+Q(t*k)));N[f+20>>2]=v+Q(Q(s*w)+Q(Q(u*x)+Q(t*y)))}ga=g+544|0;return!c}function Sj(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=ga-48|0;ga=j;i=J[c+8>>2];if(i){p=i;while(1){if(J[p+20>>2]>J[a+100>>2]){h=J[p+12>>2];n=J[h+92>>2];l=J[h+96>>2];i=J[c+88>>2];m=J[h+88>>2];k=J[c+92>>2];h=J[c+96>>2];J[j+44>>2]=-1;l=l-h|0;J[j+40>>2]=l;n=n-k|0;J[j+36>>2]=n;m=m-i|0;J[j+32>>2]=m;s=n>>31;h=jI(n,s,J[e+8>>2],J[e+12>>2]);k=ha;i=h;q=m>>31;h=jI(m,q,J[e>>2],J[e+4>>2]);r=i+h|0;i=ha+k|0;i=h>>>0>r>>>0?i+1|0:i;v=r;r=l>>31;h=jI(l,r,J[e+16>>2],J[e+20>>2]);t=v+h|0;k=ha+i|0;k=h>>>0>t>>>0?k+1|0:k;h=t;i=jI(J[f+8>>2],J[f+12>>2],n,s);n=ha;m=jI(J[f>>2],J[f+4>>2],m,q);i=m+i|0;n=ha+n|0;n=i>>>0<m>>>0?n+1|0:n;l=jI(J[f+16>>2],J[f+20>>2],l,r);m=l+i|0;i=ha+n|0;n=m;i=m>>>0<l>>>0?i+1|0:i;m=i;a:{if(!!n&(i|0)>=0|(i|0)>0){J[j+24>>2]=1;i=-1;l=0;break a}if((m|0)<0){J[j+24>>2]=-1;l=n;n=0-l|0;m=0-(((l|0)!=0)+m|0)|0;i=1;l=0;break a}i=0;J[j+24>>2]=0;n=0;m=0;l=1}J[j+8>>2]=n;J[j+12>>2]=m;b:{c:{d:{m=j;if(!h&(k|0)<=0|(k|0)<0){if((k|0)>0|(k|0)>=0){break d}J[j+24>>2]=i;k=0-(((h|0)!=0)+k|0)|0;h=0-h|0}J[j+16>>2]=h;J[m+20>>2]=k;break c}J[j+16>>2]=0;J[j+20>>2]=0;if(l){break b}}if(!o){o=J[j+12>>2];J[g>>2]=J[j+8>>2];J[g+4>>2]=o;J[g+16>>2]=J[j+24>>2];o=J[j+20>>2];J[g+8>>2]=J[j+16>>2];J[g+12>>2]=o;o=p;break b}h=yc(j+8|0,g);if((h|0)<0){o=J[j+12>>2];J[g>>2]=J[j+8>>2];J[g+4>>2]=o;J[g+16>>2]=J[j+24>>2];o=J[j+20>>2];J[g+8>>2]=J[j+16>>2];J[g+12>>2]=o;o=p;break b}if(h){break b}y=o;k=J[o+4>>2];e:{f:{if(J[o>>2]==(p|0)){h=2;if((k|0)!=(p|0)){break f}w=J[p+12>>2];u=J[J[p+8>>2]+12>>2];k=J[u+96>>2];x=J[w+96>>2]-k|0;n=J[o+12>>2];h=J[u+92>>2];m=J[n+92>>2]-h|0;l=J[w+92>>2]-h|0;t=J[n+96>>2]-k|0;h=P(x,m)-P(l,t)|0;o=h;i=h>>31;s=J[d+8>>2];q=J[j+36>>2];k=J[d+4>>2];r=J[j+40>>2];h=P(s,q)-P(k,r)|0;h=jI(o,i,h,h>>31);i=ha;v=h;h=J[u+88>>2];n=J[n+88>>2]-h|0;o=m;m=J[w+88>>2]-h|0;h=P(n,l)-P(o,m)|0;o=h;u=h>>31;l=J[j+32>>2];h=P(l,k);k=J[d>>2];h=h-P(k,q)|0;h=jI(o,u,h,h>>31);q=v+h|0;i=ha+i|0;i=h>>>0>q>>>0?i+1|0:i;h=P(m,t)-P(n,x)|0;m=h;o=h>>31;h=P(k,r)-P(l,s)|0;h=jI(m,o,h,h>>31);k=h+q|0;l=ha+i|0;l=h>>>0>k>>>0?l+1|0:l;h=!!k&(l|0)>=0|(l|0)>0?2:1;break e}h=(k|0)==(p|0)}}o=(h|0)!=2^b?p:y}i=J[c+8>>2]}p=J[p>>2];if((p|0)!=(i|0)){continue}break}}ga=j+48|0;return o}function Nb(a,b,c,d){var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=0,B=0;p=N[c+4>>2];s=N[c+8>>2];h=Q(s*Q(0));l=Q(p-h);m=N[c>>2];f=Q(p*Q(-0));g=Q(Q(m*Q(0))+f);t=Q(h-m);i=Q(Y(Q(Q(g*g)+Q(Q(l*l)+Q(t*t)))));n=Q(Q(1)/i);u=Q(f+m);v=Q(Q(p*Q(0))-s);h=Q(h+Q(m*Q(-0)));f=Q(Y(Q(Q(u*u)+Q(Q(v*v)+Q(h*h)))));k=Q(Q(1)/f);e=f<i;w=e?Q(l*n):Q(v*k);x=e?Q(t*n):Q(h*k);t=Q(Q(w*p)-Q(m*x));l=e?Q(g*n):Q(u*k);u=Q(Q(l*m)-Q(s*w));v=Q(Q(x*s)-Q(p*l));y=J[d+12>>2];z=(b|0)<=0;a:{while(1){j=-1;if(!z){h=N[c+8>>2];i=N[c+4>>2];f=N[c>>2];e=0;while(1){b:{if(!J[(e<<2)+y>>2]){break b}if((j|0)!=-1){d=(e<<4)+a|0;g=Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2])));d=(j<<4)+a|0;if(!(g>Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2]))))){break b}}j=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}}q=-1;e=0;A=(j<<2)+y|0;if(J[A>>2]==3){return j}c:{while(1){o=q;B=e;n=Q(e|0);f=Q(n*Q(.01745329238474369));g=Ha(f);f=Ga(f);q=-1;if(!z){h=Q(s+Q(Q(Q(l*f)+Q(t*g))*Q(.02500000037252903)));i=Q(p+Q(Q(Q(x*f)+Q(u*g))*Q(.02500000037252903)));f=Q(m+Q(Q(Q(w*f)+Q(v*g))*Q(.02500000037252903)));e=0;while(1){d:{if(!J[(e<<2)+y>>2]){break d}if((q|0)!=-1){d=(e<<4)+a|0;g=Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2])));d=(q<<4)+a|0;if(!(g>Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2]))))){break d}}q=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}}if((j|0)==(o|0)&(j|0)==(q|0)){break c}e:{if((o|0)==-1|(o|0)==(q|0)){break e}k=Q(n+Q(-40));if(!(n>=k)){break e}while(1){f=Q(k*Q(.01745329238474369));g=Ha(f);f=Ga(f);f:{if(!z){h=Q(s+Q(Q(Q(l*f)+Q(t*g))*Q(.02500000037252903)));i=Q(p+Q(Q(Q(x*f)+Q(u*g))*Q(.02500000037252903)));f=Q(m+Q(Q(Q(w*f)+Q(v*g))*Q(.02500000037252903)));d=-1;e=0;while(1){g:{if(!J[(e<<2)+y>>2]){break g}if((d|0)!=-1){r=(e<<4)+a|0;g=Q(Q(N[r+8>>2]*h)+Q(Q(N[r>>2]*f)+Q(i*N[r+4>>2])));r=(d<<4)+a|0;if(!(g>Q(Q(N[r+8>>2]*h)+Q(Q(N[r>>2]*f)+Q(i*N[r+4>>2]))))){break g}}d=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}if((j|0)!=(o|0)){o=d;break f}o=d;if((d|0)==(j|0)){break c}break f}e=j&o;o=-1;d=-1;if((e|0)==-1){break a}}k=Q(k+Q(5));if(n>=k){continue}break}}e=B+45|0;if(B>>>0<316){continue}break}J[A>>2]=0;continue}break}d=j}J[A>>2]=3;return d}function qd(a,b){var c=0,d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0;e=ga-96|0;ga=e;c=J[a+12>>2];d=e+80|0;g=e- -64|0;ia[J[J[c>>2]+8>>2]](c,J[a+8>>2]+4|0,d,g);c=J[b+68>>2];ia[J[J[c>>2]+16>>2]](c,J[J[a+8>>2]+188>>2],d,g,J[b+24>>2]);c=J[b+24>>2];ia[J[J[c>>2]+32>>2]](c,J[J[a+8>>2]+284>>2],b+28|0,c);b=J[a+8>>2];c=J[b+56>>2];J[a+92>>2]=J[b+52>>2];J[a+96>>2]=c;c=J[b+64>>2];J[a+100>>2]=J[b+60>>2];J[a+104>>2]=c;b=J[b+284>>2];a:{if((ia[J[J[b>>2]+36>>2]](b)|0)<=0){g=0;break a}p=a+128|0;g=0;while(1){c=J[a+132>>2];b:{if((c|0)>=0){break b}if(J[a+136>>2]<0){b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+144|0]=1;J[a+136>>2]=0;J[a+140>>2]=0}d=0;b=c;f=0-b&3;if(f){while(1){J[J[a+140>>2]+(b<<2)>>2]=0;b=b+1|0;d=d+1|0;if((f|0)!=(d|0)){continue}break}}if(c>>>0>4294967292){break b}while(1){c=b<<2;J[c+J[a+140>>2]>>2]=0;J[(c+J[a+140>>2]|0)+4>>2]=0;J[(c+J[a+140>>2]|0)+8>>2]=0;J[(c+J[a+140>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+132>>2]=0;b=J[J[a+8>>2]+284>>2];b=J[(ia[J[J[b>>2]+28>>2]](b)|0)+12>>2]+(j<<4)|0;c=J[J[b+4>>2]>>2];d=J[J[b>>2]>>2];c:{if((K[d+204|0]&4?d:0)|(K[c+204|0]&4?c:0)){break c}b=J[b+8>>2];if(b){ia[J[J[b>>2]+16>>2]](b,p)}o=J[a+132>>2];if((o|0)<=0){break c}q=J[a+8>>2];r=J[a+140>>2];c=0;while(1){f=J[(c<<2)+r>>2];k=J[f+748>>2];if((k|0)>0){h=J[f+740>>2]==(q|0)?Q(-1):Q(1);d=0;while(1){b=f+P(d,184)|0;i=N[b+84>>2];if(i<Q(0)){if(i<l){l=N[b+68>>2];m=N[b+72>>2];n=N[b+76>>2];J[a+164>>2]=0;N[a+160>>2]=h*n;N[a+156>>2]=h*m;N[a+152>>2]=h*l;k=J[f+748>>2];l=i}m=N[b+76>>2];n=N[b+72>>2];N[a+92>>2]=Q(Q(i*Q(h*N[b+68>>2]))*Q(.20000000298023224))+N[a+92>>2];N[a+96>>2]=Q(Q(i*Q(h*n))*Q(.20000000298023224))+N[a+96>>2];N[a+100>>2]=Q(Q(i*Q(h*m))*Q(.20000000298023224))+N[a+100>>2];g=1}d=d+1|0;if((k|0)>(d|0)){continue}break}}c=c+1|0;if((o|0)!=(c|0)){continue}break}}b=J[J[a+8>>2]+284>>2];j=j+1|0;if((ia[J[J[b>>2]+36>>2]](b)|0)>(j|0)){continue}break}}b=J[a+8>>2];c=J[a+104>>2];J[e+56>>2]=J[a+100>>2];J[e+60>>2]=c;c=J[a+96>>2];J[e+48>>2]=J[a+92>>2];J[e+52>>2]=c;J[b+260>>2]=J[b+260>>2]+1;a=J[e+60>>2];J[b+60>>2]=J[e+56>>2];J[b+64>>2]=a;a=J[e+52>>2];J[b+52>>2]=J[e+48>>2];J[b+56>>2]=a;ga=e+96|0;return g}function Zk(a,b,c,d,e,f,g,h){var i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0);xb(a,4,b,c);J[a+748>>2]=0;H[a+740|0]=h;J[a+736>>2]=16777216;H[a+716|0]=0;J[a+708>>2]=0;J[a+712>>2]=0;J[a+704>>2]=1065353216;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a>>2]=19708;c=J[d+12>>2];J[a+608>>2]=J[d+8>>2];J[a+612>>2]=c;c=J[d+4>>2];J[a+600>>2]=J[d>>2];J[a+604>>2]=c;i=N[f+8>>2];j=N[b+36>>2];l=N[f>>2];n=N[b+4>>2];r=N[b+20>>2];o=N[f+4>>2];k=Q(Q(i*j)+Q(Q(l*n)+Q(r*o)));a:{if(k>=Q(.9999998807907104)){j=N[b+40>>2];k=N[b+24>>2];m=N[b+8>>2];p=Q(-N[b+44>>2]);n=Q(-N[b+28>>2]);l=Q(-N[b+12>>2]);break a}if(k<=Q(-.9999998807907104)){j=N[b+40>>2];k=N[b+24>>2];m=N[b+8>>2];p=N[b+44>>2];n=N[b+28>>2];l=N[b+12>>2];break a}m=Q(Q(o*j)-Q(r*i));k=Q(Q(i*n)-Q(j*l));p=Q(Q(m*o)-Q(l*k));j=Q(Q(l*r)-Q(n*o));n=Q(Q(j*l)-Q(i*m));l=Q(Q(k*i)-Q(o*j))}N[a+552>>2]=l;N[a+556>>2]=m;i=N[f>>2];N[a+572>>2]=k;N[a+568>>2]=n;J[a+564>>2]=0;N[a+560>>2]=i;i=N[f+4>>2];N[a+588>>2]=j;N[a+584>>2]=p;J[a+580>>2]=0;N[a+576>>2]=i;i=N[f+8>>2];J[a+596>>2]=0;N[a+592>>2]=i;i=N[f+4>>2];j=Q(-i);k=N[f+8>>2];s=Q(-k);o=N[g+8>>2];m=N[f>>2];r=N[g>>2];u=N[g+4>>2];q=Q(Q(k*o)+Q(Q(m*r)+Q(i*u)));b:{if(q<Q(-.9999998807907104)){if(Q(R(k))>Q(.7071067690849304)){j=i;i=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(k*k)))));j=Q(j*i);k=Q(i*s);m=Q(0);i=Q(0);break b}i=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(i*i)))));k=Q(m*i);m=Q(i*j);j=Q(0);i=Q(0);break b}v=Q(Q(m*u)+Q(r*j));j=Q(q+Q(1));t=Q(Y(Q(j+j)));q=Q(Q(1)/t);j=Q(v*q);k=Q(Q(Q(k*r)-Q(o*m))*q);m=Q(Q(Q(i*o)+Q(u*s))*q);i=Q(t*Q(.5))}b=J[e+4>>2];J[a+664>>2]=J[e>>2];J[a+668>>2]=b;b=J[e+12>>2];J[a+672>>2]=J[e+8>>2];J[a+676>>2]=b;s=Q(Q(Q(i*p)+Q(n*m))-Q(k*l));q=Q(Q(Q(i*l)+Q(p*k))-Q(j*n));t=Q(Q(Q(Q(-m)*l)-Q(n*k))-Q(j*p));l=Q(Q(Q(i*n)+Q(l*j))-Q(m*p));p=Q(Q(s*k)+Q(Q(Q(i*q)-Q(t*m))-Q(l*j)));N[a+616>>2]=p;n=Q(Q(l*m)+Q(Q(Q(i*s)-Q(t*j))-Q(q*k)));i=Q(Q(q*j)+Q(Q(Q(i*l)-Q(t*k))-Q(s*m)));N[a+620>>2]=Q(u*n)-Q(i*o);l=N[g>>2];N[a+632>>2]=i;N[a+636>>2]=Q(o*p)-Q(n*r);J[a+628>>2]=0;N[a+624>>2]=l;l=N[g+4>>2];N[a+652>>2]=Q(r*i)-Q(p*u);N[a+648>>2]=n;J[a+644>>2]=0;N[a+640>>2]=l;i=N[g+8>>2];N[a+732>>2]=h?Q(-1):Q(1);J[a+660>>2]=0;N[a+656>>2]=i}function Jz(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0);h=ga-32|0;ga=h;e=J[a+136>>2];if((e|0)>0){while(1){pg(a,c,0);c=c+1|0;e=J[a+136>>2];if((c|0)<(e|0)){continue}break}}c=J[a+116>>2];d=N[c+320>>2];f=Q(d*d);d=N[c+312>>2];g=Q(d*d);d=N[c+316>>2];d=Q(Q(Y(Q(f+Q(g+Q(d*d)))))*Q(3.5999999046325684));N[a+112>>2]=d;i=c+(J[a+128>>2]<<2)|0;if(Q(Q(N[i+36>>2]*N[c+320>>2])+Q(Q(N[i+4>>2]*N[c+312>>2])+Q(N[i+20>>2]*N[c+316>>2])))<Q(0)){N[a+112>>2]=-d}a:{if((e|0)<=0){break a}c=0;while(1){rk(a,J[a+144>>2]+P(c,284)|0);c=c+1|0;e=J[a+136>>2];if((c|0)<(e|0)){continue}break}if((e|0)<=0){break a}g=Q(Q(1)/N[J[a+116>>2]+344>>2]);e=0;while(1){d=Q(0);c=J[a+144>>2]+P(e,284)|0;if(K[c+84|0]){d=N[c+272>>2];d=Q(U(Q(g*Q(Q(Q(N[c+216>>2]*Q(N[c+204>>2]-N[c+32>>2]))*N[c+268>>2])-Q(N[c+(d<Q(0)?220:224)>>2]*d))),Q(0)))}N[c+276>>2]=d;e=e+1|0;c=J[a+136>>2];if((e|0)<(c|0)){continue}break}if((c|0)<=0){break a}c=0;while(1){e=J[a+144>>2]+P(c,284)|0;d=N[e+248>>2];g=N[e+276>>2];j=N[e>>2];f=N[e+4>>2];k=N[e+8>>2];J[h+28>>2]=0;d=d<g?d:g;N[h+24>>2]=Q(k*d)*b;N[h+20>>2]=Q(d*f)*b;N[h+16>>2]=Q(j*d)*b;d=N[e+16>>2];i=J[a+116>>2];g=N[i+52>>2];j=N[e+20>>2];f=N[i+56>>2];k=N[e+24>>2];l=N[i+60>>2];J[h+12>>2]=0;N[h+8>>2]=k-l;N[h+4>>2]=j-f;N[h>>2]=d-g;ub(i,h+16|0,h);c=c+1|0;if((c|0)<J[a+136>>2]){continue}break}}ia[J[J[a>>2]+20>>2]](a,b);n=J[a+136>>2];if((n|0)>0){c=J[a+116>>2];i=c+(J[a+128>>2]<<2)|0;t=J[a+144>>2];e=0;while(1){a=P(e,284)+t|0;b:{if(K[a+84|0]){d=N[a+236>>2];j=N[i+36>>2];f=N[a+8>>2];k=N[i+4>>2];l=N[a>>2];o=N[i+20>>2];p=N[a+4>>2];g=Q(Q(j*f)+Q(Q(k*l)+Q(o*p)));q=a+236|0;m=Q(j-Q(f*g));j=N[c+328>>2];f=Q(N[a+40>>2]-N[c+56>>2]);r=Q(N[a+36>>2]-N[c+52>>2]);s=N[c+332>>2];m=Q(m*Q(Q(Q(j*f)-Q(r*s))+N[c+320>>2]));u=Q(k-Q(l*g));k=Q(N[a+44>>2]-N[c+60>>2]);l=f;f=N[c+336>>2];g=Q(Q(Q(m+Q(Q(u*Q(Q(Q(s*k)-Q(l*f))+N[c+312>>2]))+Q(Q(Q(Q(f*r)-Q(k*j))+N[c+316>>2])*Q(o-Q(p*g)))))*b)/N[a+212>>2]);f=g;break b}g=N[a+236>>2];q=a+236|0;d=N[a+240>>2];f=d}j=f;N[q>>2]=d+g;N[a+240>>2]=j*Q(.9900000095367432);e=e+1|0;if((n|0)!=(e|0)){continue}break}}ga=h+32|0}function Bp(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=0,f=0,g=Q(0),h=0,i=0,j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0);i=ga-16|0;ga=i;J[i+12>>2]=a;N[i+8>>2]=b;H[i+7|0]=c;o=N[i+8>>2];j=J[i+12>>2];c=J[j+712>>2];a:{b:{if(!(H[i+7|0]&1)){break b}c:{if((c|0)<=0){break c}d=J[j+720>>2];a=0;if(c-1>>>0>=7){f=c&-8;while(1){J[(d+P(a,104)|0)+88>>2]=0;J[(d+P(a|1,104)|0)+88>>2]=0;J[(d+P(a|2,104)|0)+88>>2]=0;J[(d+P(a|3,104)|0)+88>>2]=0;J[(d+P(a|4,104)|0)+88>>2]=0;J[(d+P(a|5,104)|0)+88>>2]=0;J[(d+P(a|6,104)|0)+88>>2]=0;J[(d+P(a|7,104)|0)+88>>2]=0;a=a+8|0;h=h+8|0;if((f|0)!=(h|0)){continue}break}}h=c&7;if(!h){break c}while(1){J[(d+P(a,104)|0)+88>>2]=0;a=a+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}f=J[j+752>>2];if((f|0)>0){m=J[j+760>>2];h=0;while(1){d=m+P(h,44)|0;a=J[d+8>>2];e=J[d+12>>2];b=N[a+8>>2];n=Q(N[e+8>>2]-b);d=J[d+16>>2];g=N[a+12>>2];k=Q(N[d+12>>2]-g);b=Q(N[d+8>>2]-b);g=Q(N[e+12>>2]-g);l=Q(Q(n*k)-Q(b*g));p=Q(l*l);q=g;g=N[a+16>>2];l=Q(N[d+16>>2]-g);g=Q(N[e+16>>2]-g);k=Q(Q(q*l)-Q(k*g));b=Q(Q(g*b)-Q(l*n));b=Q(Y(Q(p+Q(Q(k*k)+Q(b*b)))));N[a+88>>2]=b+N[a+88>>2];N[e+88>>2]=b+N[e+88>>2];N[d+88>>2]=b+N[d+88>>2];h=h+1|0;if((f|0)!=(h|0)){continue}break}}if((c|0)<=0){break a}d=J[j+720>>2];a=0;if((c|0)!=1){h=c&-2;e=0;while(1){f=d+P(a,104)|0;N[f+88>>2]=Q(1)/N[f+88>>2];f=d+P(a|1,104)|0;N[f+88>>2]=Q(1)/N[f+88>>2];a=a+2|0;e=e+2|0;if((h|0)!=(e|0)){continue}break}}if(!(c&1)){break b}a=d+P(a,104)|0;N[a+88>>2]=Q(1)/N[a+88>>2]}if((c|0)<=0){break a}h=c&1;d=J[j+720>>2];f=c-1|0;d:{if(!f){b=Q(0);a=0;break d}m=c&-2;a=0;b=Q(0);e=0;while(1){g=b;b=N[(d+P(a,104)|0)+88>>2];g=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)));b=N[(d+P(a|1,104)|0)+88>>2];b=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)));a=a+2|0;e=e+2|0;if((m|0)!=(e|0)){continue}break}}if(h){g=b;b=N[(d+P(a,104)|0)+88>>2];b=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)))}if((c|0)<=0){break a}h=c&1;b=Q(Q(Q(1)/b)*o);d=J[j+720>>2];e:{if(!f){a=0;break e}c=c&-2;a=0;e=0;while(1){f=d+P(a,104)|0;N[f+88>>2]=N[f+88>>2]/b;f=d+P(a|1,104)|0;N[f+88>>2]=N[f+88>>2]/b;a=a+2|0;e=e+2|0;if((c|0)!=(e|0)){continue}break}}if(!h){break a}a=d+P(a,104)|0;N[a+88>>2]=N[a+88>>2]/b}H[j+924|0]=1;ga=i+16|0}function nk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;d=ga+-64|0;h=243703;g=J[a+732>>2];if((g|0)>0){while(1){c=J[a+740>>2];b=c+P(f,52)|0;J[d+56>>2]=J[b+48>>2];e=J[b+44>>2];J[d+48>>2]=J[b+40>>2];J[d+52>>2]=e;e=J[b+36>>2];J[d+40>>2]=J[b+32>>2];J[d+44>>2]=e;e=J[b+28>>2];J[d+32>>2]=J[b+24>>2];J[d+36>>2]=e;e=J[b+20>>2];J[d+24>>2]=J[b+16>>2];J[d+28>>2]=e;e=J[b+12>>2];J[d+16>>2]=J[b+8>>2];J[d+20>>2]=e;e=J[b+4>>2];J[d+8>>2]=J[b>>2];J[d+12>>2]=e;h=P(h,1664525)+1013904223|0;c=c+P((h>>>0)%(g>>>0)|0,52)|0;e=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;J[b+48>>2]=J[c+48>>2];e=J[c+44>>2];J[b+40>>2]=J[c+40>>2];J[b+44>>2]=e;e=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=e;e=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=e;e=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[c+48>>2]=J[d+56>>2];b=J[d+52>>2];J[c+40>>2]=J[d+48>>2];J[c+44>>2]=b;b=J[d+44>>2];J[c+32>>2]=J[d+40>>2];J[c+36>>2]=b;b=J[d+36>>2];J[c+24>>2]=J[d+32>>2];J[c+28>>2]=b;b=J[d+28>>2];J[c+16>>2]=J[d+24>>2];J[c+20>>2]=b;b=J[d+20>>2];J[c+8>>2]=J[d+16>>2];J[c+12>>2]=b;b=J[d+12>>2];J[c>>2]=J[d+8>>2];J[c+4>>2]=b;f=f+1|0;if((g|0)!=(f|0)){continue}break}}g=J[a+752>>2];if((g|0)>0){f=0;while(1){c=J[a+760>>2];b=c+P(f,44)|0;J[d+48>>2]=J[b+40>>2];e=J[b+36>>2];J[d+40>>2]=J[b+32>>2];J[d+44>>2]=e;e=J[b+28>>2];J[d+32>>2]=J[b+24>>2];J[d+36>>2]=e;e=J[b+20>>2];J[d+24>>2]=J[b+16>>2];J[d+28>>2]=e;e=J[b+12>>2];J[d+16>>2]=J[b+8>>2];J[d+20>>2]=e;e=J[b+4>>2];J[d+8>>2]=J[b>>2];J[d+12>>2]=e;h=P(h,1664525)+1013904223|0;c=c+P((h>>>0)%(g>>>0)|0,44)|0;e=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;J[b+40>>2]=J[c+40>>2];e=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=e;e=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=e;e=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[c+40>>2]=J[d+48>>2];b=J[d+44>>2];J[c+32>>2]=J[d+40>>2];J[c+36>>2]=b;b=J[d+36>>2];J[c+24>>2]=J[d+32>>2];J[c+28>>2]=b;b=J[d+28>>2];J[c+16>>2]=J[d+24>>2];J[c+20>>2]=b;b=J[d+20>>2];J[c+8>>2]=J[d+16>>2];J[c+12>>2]=b;b=J[d+12>>2];J[c>>2]=J[d+8>>2];J[c+4>>2]=b;f=f+1|0;if((g|0)!=(f|0)){continue}break}}}function wk(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0);a:{if(K[a+204|0]&2){c=J[a+8>>2];J[a+68>>2]=J[a+4>>2];J[a+72>>2]=c;c=J[a+16>>2];J[a+76>>2]=J[a+12>>2];J[a+80>>2]=c;c=J[a+24>>2];J[a+84>>2]=J[a+20>>2];J[a+88>>2]=c;c=J[a+32>>2];J[a+92>>2]=J[a+28>>2];J[a+96>>2]=c;c=J[a+40>>2];J[a+100>>2]=J[a+36>>2];J[a+104>>2]=c;c=J[a+48>>2];J[a+108>>2]=J[a+44>>2];J[a+112>>2]=c;c=a+52|0;break a}c=J[b+4>>2];J[a+68>>2]=J[b>>2];J[a+72>>2]=c;c=J[b+12>>2];J[a+76>>2]=J[b+8>>2];J[a+80>>2]=c;c=J[b+20>>2];J[a+84>>2]=J[b+16>>2];J[a+88>>2]=c;c=J[b+28>>2];J[a+92>>2]=J[b+24>>2];J[a+96>>2]=c;c=J[b+36>>2];J[a+100>>2]=J[b+32>>2];J[a+104>>2]=c;c=J[b+44>>2];J[a+108>>2]=J[b+40>>2];J[a+112>>2]=c;c=b+48|0}p=J[c+4>>2];J[a+116>>2]=J[c>>2];J[a+120>>2]=p;p=J[c+8>>2];c=J[c+12>>2];q=J[a+340>>2];J[a+156>>2]=J[a+336>>2];J[a+160>>2]=q;q=J[a+332>>2];J[a+148>>2]=J[a+328>>2];J[a+152>>2]=q;J[a+124>>2]=p;J[a+128>>2]=c;c=J[a+316>>2];J[a+132>>2]=J[a+312>>2];J[a+136>>2]=c;c=J[a+324>>2];J[a+140>>2]=J[a+320>>2];J[a+144>>2]=c;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;c=J[b+28>>2];J[a+28>>2]=J[b+24>>2];J[a+32>>2]=c;c=J[b+20>>2];J[a+20>>2]=J[b+16>>2];J[a+24>>2]=c;c=J[b+44>>2];J[a+44>>2]=J[b+40>>2];J[a+48>>2]=c;c=J[b+36>>2];J[a+36>>2]=J[b+32>>2];J[a+40>>2]=c;c=J[b+60>>2];J[a+60>>2]=J[b+56>>2];J[a+64>>2]=c;c=J[b+52>>2];J[a+52>>2]=J[b+48>>2];J[a+56>>2]=c;j=N[a+8>>2];k=N[a+12>>2];l=N[a+28>>2];m=N[a+20>>2];n=N[a+24>>2];g=N[a+44>>2];r=N[a+404>>2];h=N[a+36>>2];i=N[a+40>>2];s=N[a+400>>2];o=N[a+4>>2];t=N[a+396>>2];J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;d=Q(r*g);e=Q(t*h);f=Q(s*i);N[a+304>>2]=Q(g*d)+Q(Q(h*e)+Q(i*f));N[a+300>>2]=Q(l*d)+Q(Q(m*e)+Q(n*f));N[a+296>>2]=Q(k*d)+Q(Q(o*e)+Q(j*f));d=Q(r*l);e=Q(t*m);f=Q(s*n);N[a+288>>2]=Q(g*d)+Q(Q(h*e)+Q(i*f));N[a+284>>2]=Q(l*d)+Q(Q(m*e)+Q(n*f));N[a+280>>2]=Q(k*d)+Q(Q(o*e)+Q(j*f));d=g;g=Q(k*r);e=h;h=Q(o*t);f=i;i=Q(j*s);N[a+272>>2]=Q(d*g)+Q(Q(e*h)+Q(f*i));N[a+268>>2]=Q(l*g)+Q(Q(m*h)+Q(i*n));N[a+264>>2]=Q(k*g)+Q(Q(o*h)+Q(j*i))}function pg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=0;T=a;a=J[a+144>>2]+P(b,284)|0;og(T,a,c);J[a+136>>2]=0;J[a+120>>2]=0;J[a+104>>2]=0;r=N[a+56>>2];y=N[a+52>>2];j=N[a+60>>2];n=Q(N[a+232>>2]*Q(.5));d=Ga(n);e=Ha(n);n=N[a+72>>2];t=N[a+76>>2];u=N[a+68>>2];i=Q(N[a+236>>2]*Q(-.5));g=Q(Ga(i)/Q(Y(Q(Q(t*t)+Q(Q(u*u)+Q(n*n))))));f=Q(u*g);i=Ha(i);h=Q(t*g);s=Q(n*g);p=Q(Q(2)/Q(Q(i*i)+Q(Q(h*h)+Q(Q(f*f)+Q(s*s)))));l=Q(h*p);m=Q(f*l);v=Q(s*p);q=Q(i*v);D=Q(m-q);C=Q(-y);d=Q(d/Q(Y(Q(Q(j*j)+Q(Q(y*y)+Q(r*r))))));g=Q(C*d);w=Q(d*Q(-j));d=Q(d*Q(-r));o=Q(Q(2)/Q(Q(e*e)+Q(Q(w*w)+Q(Q(g*g)+Q(d*d)))));k=Q(g*o);F=Q(g*k);z=Q(d*o);G=Q(d*z);x=Q(Q(1)-Q(F+G));A=Q(s*v);B=Q(h*l);E=Q(Q(1)-Q(A+B));h=Q(w*o);H=Q(g*h);I=Q(e*z);o=Q(H-I);K=Q(d*h);L=Q(e*k);k=Q(K+L);M=Q(f*v);O=Q(i*l);v=Q(M+O);d=Q(Q(D*x)+Q(Q(E*o)+Q(k*v)));R=Q(s*l);p=Q(f*p);S=Q(i*p);i=Q(R+S);s=Q(M-O);f=Q(f*p);p=Q(Q(1)-Q(f+B));l=Q(Q(i*x)+Q(Q(s*o)+Q(k*p)));A=Q(Q(1)-Q(f+A));f=Q(A*x);x=Q(m+q);m=Q(x*o);o=Q(R-S);k=Q(f+Q(m+Q(k*o)));N[a+132>>2]=Q(Q(C*d)-Q(r*l))-Q(j*k);m=Q(Q(r*u)-Q(y*n));q=Q(Q(j*n)-Q(r*t));B=Q(Q(y*t)-Q(j*u));f=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(q*q)+Q(B*B))))));m=Q(m*f);q=Q(q*f);f=Q(B*f);N[a+128>>2]=Q(m*k)+Q(Q(q*d)+Q(f*l));N[a+124>>2]=Q(t*k)+Q(Q(u*d)+Q(n*l));d=Q(K-L);z=Q(g*z);k=Q(e*h);e=Q(z+k);w=Q(w*h);g=Q(Q(1)-Q(F+w));h=Q(Q(D*d)+Q(Q(E*e)+Q(v*g)));l=Q(Q(i*d)+Q(Q(s*e)+Q(g*p)));e=Q(Q(A*d)+Q(Q(x*e)+Q(o*g)));N[a+116>>2]=Q(Q(C*h)-Q(r*l))-Q(j*e);N[a+112>>2]=Q(m*e)+Q(Q(q*h)+Q(f*l));N[a+108>>2]=Q(t*e)+Q(Q(u*h)+Q(n*l));e=Q(H+I);g=Q(Q(1)-Q(G+w));d=Q(z-k);h=Q(Q(D*e)+Q(Q(E*g)+Q(d*v)));i=Q(Q(i*e)+Q(Q(s*g)+Q(d*p)));e=Q(Q(A*e)+Q(Q(x*g)+Q(d*o)));N[a+100>>2]=Q(Q(C*h)-Q(r*i))-Q(j*e);N[a+96>>2]=Q(m*e)+Q(Q(q*h)+Q(f*i));N[a+92>>2]=Q(t*e)+Q(Q(u*h)+Q(n*i));J[a+152>>2]=0;d=j;j=N[a+32>>2];N[a+148>>2]=Q(d*j)+N[a+44>>2];N[a+144>>2]=Q(r*j)+N[a+40>>2];N[a+140>>2]=N[a+36>>2]+Q(y*j)}function ab(a,b,c){var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);a:{d=J[a+748>>2];if((d|0)<=0){break a}while(1){n=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];o=N[b+52>>2];t=N[b+24>>2];i=N[b+16>>2];u=N[b+20>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+32>>2];p=N[b+36>>2];j=d-1|0;e=P(j,184)+a|0;J[e- -64>>2]=0;l=f;f=N[e+12>>2];k=Q(h*f);h=N[e+4>>2];v=Q(g*h);g=N[e+8>>2];p=Q(l+Q(k+Q(v+Q(p*g))));N[e+60>>2]=p;o=Q(o+Q(Q(f*t)+Q(Q(h*i)+Q(g*u))));N[e+56>>2]=o;n=Q(n+Q(Q(f*q)+Q(Q(h*r)+Q(g*s))));N[e+52>>2]=n;q=N[c+56>>2];r=N[c+40>>2];s=N[c+32>>2];t=N[c+36>>2];i=N[c+52>>2];u=N[c+24>>2];v=N[c+16>>2];w=N[c+20>>2];f=N[c+48>>2];h=N[c+8>>2];g=N[c>>2];k=N[c+4>>2];J[e+48>>2]=0;l=f;f=N[e+28>>2];x=Q(h*f);h=N[e+20>>2];y=Q(g*h);g=N[e+24>>2];k=Q(l+Q(x+Q(y+Q(k*g))));N[e+36>>2]=k;i=Q(i+Q(Q(f*u)+Q(Q(h*v)+Q(g*w))));N[e+40>>2]=i;f=Q(q+Q(Q(f*r)+Q(Q(h*s)+Q(g*t))));N[e+44>>2]=f;N[e+84>>2]=Q(Q(p-f)*N[e+76>>2])+Q(Q(Q(n-k)*N[e+68>>2])+Q(Q(o-i)*N[e+72>>2]));J[e+152>>2]=J[e+152>>2]+1;e=d>>>0>1;d=j;if(e){continue}break}c=J[a+748>>2];if((c|0)<=0){break a}while(1){b=c;c=b-1|0;d=P(c,184)+a|0;j=d+4|0;f=N[d+84>>2];h=N[a+752>>2];b:{if(!(f<=h)){e=J[d+116>>2];c:{if(!e){break c}m=J[7969];if(!m){break c}ia[m|0](e)|0;J[d+116>>2]=0}e=J[a+748>>2];d=e-1|0;if((b|0)!=(e|0)){d=P(d,184)+a|0;sa(j,d+4|0,184);J[d+124>>2]=0;J[d+116>>2]=0;J[d+152>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;H[d+120|0]=0;d=J[a+748>>2]-1|0}J[a+748>>2]=d;break b}g=Q(N[d+44>>2]-Q(N[d+60>>2]-Q(f*N[d+76>>2])));l=Q(g*g);g=Q(N[d+36>>2]-Q(N[d+52>>2]-Q(N[d+68>>2]*f)));f=Q(N[d+40>>2]-Q(N[d+56>>2]-Q(f*N[d+72>>2])));if(Q(l+Q(Q(g*g)+Q(f*f)))>Q(h*h)){e=J[d+116>>2];d:{if(!e){break d}m=J[7969];if(!m){break d}ia[m|0](e)|0;J[d+116>>2]=0}e=J[a+748>>2];d=e-1|0;if((b|0)!=(e|0)){d=P(d,184)+a|0;sa(j,d+4|0,184);J[d+124>>2]=0;J[d+116>>2]=0;J[d+152>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;H[d+120|0]=0;d=J[a+748>>2]-1|0}J[a+748>>2]=d;break b}d=J[7970];if(!d){break b}ia[d|0](j,J[a+740>>2],J[a+744>>2])|0}if(b>>>0>1){continue}break}}}function fB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);h=J[a+28>>2];p=N[h+20>>2];q=N[h+36>>2];r=N[h+40>>2];s=N[h+8>>2];t=N[h+24>>2];d=N[h+60>>2];i=N[h+44>>2];j=N[h+12>>2];f=N[h+52>>2];k=N[h+56>>2];l=N[h+28>>2];m=N[c+8>>2];n=N[c>>2];o=N[c+4>>2];e=N[b+8>>2];g=N[b>>2];u=N[b+4>>2];v=N[h+4>>2];J[a+108>>2]=0;J[a+92>>2]=0;J[a+76>>2]=0;J[a+60>>2]=0;f=Q(-f);N[a+104>>2]=Q(Q(i*Q(0))+Q(Q(j*Q(0))+Q(l*Q(0))))+Q(Q(Q(j*f)-Q(l*k))-Q(i*d));N[a+100>>2]=Q(Q(r*Q(0))+Q(Q(s*Q(0))+Q(t*Q(0))))+Q(Q(Q(s*f)-Q(t*k))-Q(r*d));N[a+96>>2]=Q(Q(q*Q(0))+Q(Q(v*Q(0))+Q(p*Q(0))))+Q(Q(Q(v*f)-Q(p*k))-Q(q*d));f=e;e=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(g*g)+Q(u*u))))));d=Q(f*e);k=Q(g*e);e=Q(u*e);N[a+88>>2]=Q(i*d)+Q(Q(j*k)+Q(l*e));g=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(n*n)+Q(o*o))))));m=Q(m*g);n=Q(n*g);o=Q(o*g);N[a+84>>2]=Q(i*m)+Q(Q(j*n)+Q(l*o));N[a+72>>2]=Q(d*r)+Q(Q(k*s)+Q(e*t));N[a+68>>2]=Q(m*r)+Q(Q(n*s)+Q(o*t));N[a+56>>2]=Q(d*q)+Q(Q(k*v)+Q(e*p));N[a+52>>2]=Q(m*q)+Q(Q(n*v)+Q(p*o));f=i;i=Q(Q(n*e)-Q(k*o));g=j;j=Q(Q(o*d)-Q(e*m));u=l;l=Q(Q(m*k)-Q(d*n));N[a+80>>2]=Q(f*i)+Q(Q(g*j)+Q(u*l));N[a- -64>>2]=Q(i*r)+Q(Q(j*s)+Q(t*l));N[a+48>>2]=Q(i*q)+Q(Q(j*v)+Q(p*l));b=J[a+32>>2];w=N[b+60>>2];y=N[b+52>>2];x=N[b+56>>2];p=N[b+20>>2];q=N[b+36>>2];r=N[b+40>>2];s=N[b+8>>2];t=N[b+24>>2];v=N[b+44>>2];g=N[b+12>>2];u=N[b+28>>2];f=N[b+4>>2];J[a+172>>2]=0;J[a+156>>2]=0;J[a+140>>2]=0;J[a+124>>2]=0;N[a+152>>2]=Q(d*v)+Q(Q(k*g)+Q(e*u));N[a+148>>2]=Q(m*v)+Q(Q(n*g)+Q(o*u));N[a+144>>2]=Q(i*v)+Q(Q(j*g)+Q(l*u));N[a+136>>2]=Q(d*r)+Q(Q(k*s)+Q(e*t));N[a+132>>2]=Q(m*r)+Q(Q(n*s)+Q(o*t));N[a+128>>2]=Q(i*r)+Q(Q(j*s)+Q(l*t));N[a+120>>2]=Q(d*q)+Q(Q(k*f)+Q(e*p));N[a+116>>2]=Q(m*q)+Q(Q(n*f)+Q(o*p));N[a+112>>2]=Q(i*q)+Q(Q(j*f)+Q(l*p));d=Q(-y);N[a+168>>2]=Q(Q(v*Q(0))+Q(Q(g*Q(0))+Q(u*Q(0))))+Q(Q(Q(g*d)-Q(u*x))-Q(v*w));N[a+164>>2]=Q(Q(r*Q(0))+Q(Q(s*Q(0))+Q(t*Q(0))))+Q(Q(Q(s*d)-Q(t*x))-Q(r*w));N[a+160>>2]=Q(Q(q*Q(0))+Q(Q(f*Q(0))+Q(p*Q(0))))+Q(Q(Q(f*d)-Q(p*x))-Q(q*w));yg(a)}function rd(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0);k=K[e+16|0]&-16;H[e+16|0]=k;B=N[d+8>>2];m=N[b+8>>2];r=Q(B-m);l=N[a+8>>2];f=Q(l-m);C=N[d>>2];n=N[b>>2];s=Q(C-n);i=N[a>>2];g=Q(i-n);D=N[d+4>>2];o=N[b+4>>2];t=Q(D-o);p=N[a+4>>2];h=Q(p-o);j=Q(Q(r*f)+Q(Q(s*g)+Q(t*h)));x=N[c+8>>2];u=Q(x-m);y=N[c>>2];v=Q(y-n);z=N[c+4>>2];w=Q(z-o);g=Q(Q(u*f)+Q(Q(v*g)+Q(w*h)));a:{if(!(!(g<=Q(0))|!(j<=Q(0)))){a=J[b+4>>2];J[e>>2]=J[b>>2];J[e+4>>2]=a;a=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=a;H[e+16|0]=k|1;g=Q(0);f=Q(0);h=Q(1);break a}f=Q(l-x);h=Q(i-y);q=Q(p-z);A=Q(Q(r*f)+Q(Q(s*h)+Q(t*q)));h=Q(Q(u*f)+Q(Q(v*h)+Q(w*q)));if(!(!(h>=Q(0))|!(h>=A))){a=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=a;a=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=a;H[e+16|0]=k|2;g=Q(1);f=Q(0);h=Q(0);break a}q=Q(Q(g*A)-Q(j*h));b:{if(!(h<=Q(0))|!(g>=Q(0))){break b}f=Q(0);if(!(q<=Q(0))){break b}J[e+12>>2]=0;H[e+16|0]=k|3;g=Q(g/Q(g-h));N[e+8>>2]=m+Q(u*g);N[e+4>>2]=o+Q(w*g);N[e>>2]=n+Q(v*g);h=Q(Q(1)-g);break a}f=Q(l-B);i=Q(i-C);p=Q(p-D);l=Q(Q(u*f)+Q(Q(v*i)+Q(w*p)));f=Q(Q(r*f)+Q(Q(s*i)+Q(t*p)));if(!(!(f>=Q(0))|!(f>=l))){a=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=a;a=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=a;H[e+16|0]=k|4;f=Q(1);g=Q(0);h=Q(0);break a}i=Q(Q(l*j)-Q(f*g));c:{if(!(f<=Q(0))|!(j>=Q(0))){break c}g=Q(0);if(!(i<=Q(0))){break c}J[e+12>>2]=0;H[e+16|0]=k|5;f=Q(j/Q(j-f));N[e+8>>2]=m+Q(r*f);N[e+4>>2]=o+Q(t*f);N[e>>2]=n+Q(s*f);h=Q(Q(1)-f);break a}d:{j=Q(Q(h*f)-Q(A*l));if(!(j<=Q(0))){break d}g=Q(A-h);if(!(g>=Q(0))){break d}f=Q(l-f);if(!(f>=Q(0))){break d}J[e+12>>2]=0;H[e+16|0]=k|6;f=Q(g/Q(g+f));N[e+8>>2]=x+Q(Q(B-x)*f);N[e+4>>2]=z+Q(Q(D-z)*f);N[e>>2]=y+Q(Q(C-y)*f);g=Q(Q(1)-f);h=Q(0);break a}J[e+12>>2]=0;H[e+16|0]=k|7;g=Q(Q(1)/Q(q+Q(j+i)));f=Q(q*g);g=Q(i*g);N[e+8>>2]=Q(r*f)+Q(m+Q(u*g));N[e+4>>2]=Q(t*f)+Q(o+Q(w*g));N[e>>2]=Q(s*f)+Q(n+Q(v*g));h=Q(Q(Q(1)-g)-f)}N[e+20>>2]=h;J[e+32>>2]=0;N[e+28>>2]=f;N[e+24>>2]=g}function XA(a){a=a|0;var b=0,c=Q(0),d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0;J[a+36>>2]=0;m=ga-16|0;b=m+8|0;J[b>>2]=0;J[b+4>>2]=0;J[m>>2]=0;J[m+4>>2]=0;d=J[a+32>>2];e=J[a+28>>2];while(1){v=(s<<2)+m|0;J[v>>2]=1065353216;T=N[d+344>>2];U=N[e+344>>2];l=N[e+56>>2];n=N[e+20>>2];w=N[e+24>>2];x=N[e+28>>2];y=N[e+60>>2];z=N[e+44>>2];A=N[e+36>>2];B=N[e+40>>2];r=N[e+52>>2];j=N[a+308>>2];C=N[e+12>>2];f=N[a+300>>2];D=N[e+4>>2];o=N[a+304>>2];E=N[e+8>>2];g=N[d+56>>2];F=N[d+20>>2];p=N[d+24>>2];q=N[d+28>>2];h=N[d+52>>2];G=N[d+12>>2];H=N[d+4>>2];I=N[d+8>>2];K=N[d+60>>2];i=N[a+324>>2];L=N[d+44>>2];k=N[a+316>>2];M=N[d+36>>2];c=N[a+320>>2];O=N[d+40>>2];V=J[m+4>>2];b=P(s,84)+a|0;t=b+48|0;J[t>>2]=J[m>>2];J[t+4>>2]=V;t=J[m+12>>2];J[b+56>>2]=J[m+8>>2];J[b+60>>2]=t;J[b+92>>2]=0;J[b+76>>2]=0;R=Q(Q(g+Q(Q(i*q)+Q(Q(k*F)+Q(c*p))))-g);g=N[b+48>>2];S=Q(Q(h+Q(Q(i*G)+Q(Q(k*H)+Q(c*I))))-h);h=N[b+52>>2];u=Q(Q(R*g)-Q(S*h));c=Q(Q(K+Q(Q(i*L)+Q(Q(k*M)+Q(c*O))))-K);i=N[b+56>>2];k=Q(Q(c*h)-Q(R*i));c=Q(Q(S*i)-Q(c*g));q=Q(Q(L*u)+Q(Q(G*k)+Q(q*c)));N[b+88>>2]=q;p=Q(Q(O*u)+Q(Q(I*k)+Q(p*c)));N[b+84>>2]=p;k=Q(Q(M*u)+Q(Q(H*k)+Q(F*c)));N[b+80>>2]=k;r=Q(Q(r+Q(Q(j*C)+Q(Q(f*D)+Q(o*E))))-r);l=Q(Q(l+Q(Q(j*x)+Q(Q(f*n)+Q(o*w))))-l);c=Q(Q(h*r)-Q(g*l));f=Q(Q(y+Q(Q(j*z)+Q(Q(f*A)+Q(o*B))))-y);j=Q(Q(l*i)-Q(h*f));f=Q(Q(f*g)-Q(i*r));o=Q(Q(z*c)+Q(Q(C*j)+Q(x*f)));N[b+72>>2]=o;i=Q(Q(B*c)+Q(Q(E*j)+Q(w*f)));N[b+68>>2]=i;j=Q(Q(A*c)+Q(Q(D*j)+Q(n*f)));N[b- -64>>2]=j;f=N[e+404>>2];c=N[e+400>>2];g=N[e+396>>2];J[b+108>>2]=0;g=Q(j*g);N[b+96>>2]=g;c=Q(i*c);N[b+100>>2]=c;f=Q(o*f);N[b+104>>2]=f;h=N[d+404>>2];l=N[d+400>>2];n=N[d+396>>2];J[b+124>>2]=0;n=Q(k*n);N[b+112>>2]=n;l=Q(p*l);N[b+116>>2]=l;h=Q(q*h);N[b+120>>2]=h;N[b+128>>2]=Q(T+Q(U+Q(Q(f*o)+Q(Q(g*j)+Q(i*c)))))+Q(Q(h*q)+Q(Q(n*k)+Q(p*l)));J[v>>2]=0;s=s+1|0;if((s|0)!=3){continue}break}}function Uo(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=0;k=ga-48|0;ga=k;J[k+44>>2]=a;J[k+40>>2]=b;J[k+36>>2]=c;J[k+32>>2]=d;J[k+28>>2]=e;J[k+24>>2]=f;J[k+20>>2]=g;J[k+16>>2]=h;J[k+12>>2]=i;H[k+11|0]=j;w=J[k+40>>2];i=J[k+36>>2];j=J[k+32>>2];n=J[k+28>>2];o=J[k+24>>2];c=J[k+12>>2];u=H[k+11|0]&1;e=0;d=0;f=J[k+20>>2];g=J[k+16>>2];a:{if((f|0)<2|(g|0)<2){break a}x=Q(f-1|0);y=Q(g-1|0);J[8369]=J[8369]+1;b=P(f,g);h=ia[J[6782]]((b|0)!=(b&268435455)?-1:b<<4,16)|0;s=ua((b|0)!=(b&1073741823)?-1:b<<2);while(1){q=N[i+8>>2];l=Q(Q(d|0)/y);q=Q(Q(Q(N[n+8>>2]-q)*l)+q);r=N[j+8>>2];r=Q(Q(Q(Q(N[o+8>>2]-r)*l)+r)-q);p=N[j+4>>2];m=Q(Q(Q(N[o+4>>2]-p)*l)+p);p=N[i+4>>2];p=Q(Q(Q(N[n+4>>2]-p)*l)+p);z=Q(m-p);m=N[j>>2];t=Q(Q(Q(N[o>>2]-m)*l)+m);m=N[i>>2];m=Q(Q(Q(N[n>>2]-m)*l)+m);t=Q(t-m);A=P(d,f);a=0;while(1){v=a+A|0;e=h+(v<<4)|0;J[e+12>>2]=0;l=Q(Q(a|0)/x);N[e+8>>2]=Q(r*l)+q;N[e+4>>2]=Q(z*l)+p;N[e>>2]=Q(t*l)+m;J[(v<<2)+s>>2]=1065353216;a=a+1|0;if((f|0)!=(a|0)){continue}break}d=d+1|0;if((g|0)!=(d|0)){continue}break}J[8369]=J[8369]+1;e=Ac(ia[J[6782]](1252,16)|0,w,b,h,s);if(c&1){N[J[e+720>>2]+88>>2]=0;H[e+924|0]=1}if(c&2){N[(J[e+720>>2]+P(f-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(c&4){N[(J[e+720>>2]+P(P(f,g-1|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(c&8){N[(J[e+720>>2]+P((f+P(f,g-1|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}ta(s);if((f|0)<=0){break a}b=0;while(1){i=P(b,f);a=0;d=b+1|0;b:{if((d|0)<(g|0)){j=P(d,f);while(1){c=a;h=a+i|0;a=a+1|0;c:{if((f|0)>(a|0)){n=a+i|0;Ja(e,h,n,0,0);o=c+j|0;Ja(e,h,o,0,0);if(b+c&1){c=a+j|0;rb(e,h,n,c,0);rb(e,h,c,o,0);if(!u){break c}Ja(e,h,c,0,0);break c}rb(e,o,h,n,0);rb(e,o,n,a+j|0,0);if(!u){break c}Ja(e,n,o,0,0);break c}Ja(e,h,c+j|0,0,0)}if((a|0)!=(f|0)){continue}break}break b}while(1){b=a+1|0;if((b|0)<(f|0)){Ja(e,a+i|0,b+i|0,0,0)}a=b;if((f|0)!=(a|0)){continue}break}}b=d;if((g|0)!=(b|0)){continue}break}}ga=k+48|0;return e|0}function yF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;N[b+16>>2]=N[a+20>>2];N[b+20>>2]=N[a+24>>2];N[b+24>>2]=N[a+28>>2];N[b+28>>2]=N[a+32>>2];N[b>>2]=N[a+4>>2];N[b+4>>2]=N[a+8>>2];N[b+8>>2]=N[a+12>>2];N[b+12>>2]=N[a+16>>2];N[b+32>>2]=N[a+36>>2];N[b+36>>2]=N[a+40>>2];N[b+40>>2]=N[a+44>>2];N[b+44>>2]=N[a+48>>2];J[b+48>>2]=J[a+56>>2];J[b+52>>2]=K[a+60|0];d=J[a+88>>2];J[b+56>>2]=d;a:{if(!d){J[b+64>>2]=0;break a}d=ia[J[J[c>>2]+28>>2]](c,J[a+96>>2])|0;J[b+64>>2]=d;if(!d){break a}h=J[a+88>>2];i=ia[J[J[c>>2]+16>>2]](c,48,h)|0;b:{if((h|0)<=0){g=J[a+96>>2];break b}g=J[a+96>>2];d=J[i+8>>2];while(1){e=(f<<6)+g|0;N[d+16>>2]=N[e+16>>2];N[d+20>>2]=N[e+20>>2];N[d+24>>2]=N[e+24>>2];N[d+28>>2]=N[e+28>>2];N[d>>2]=N[e>>2];N[d+4>>2]=N[e+4>>2];N[d+8>>2]=N[e+8>>2];N[d+12>>2]=N[e+12>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=J[e+36>>2];J[d+40>>2]=J[e+40>>2];d=d+48|0;f=f+1|0;if((h|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,4058,1497453121,g)}d=J[a+128>>2];J[b+60>>2]=d;c:{if(!d){J[b+68>>2]=0;break c}d=ia[J[J[c>>2]+28>>2]](c,J[a+136>>2])|0;J[b+68>>2]=d;if(!d){break c}f=0;h=J[a+128>>2];i=ia[J[J[c>>2]+16>>2]](c,16,h)|0;d:{if((h|0)<=0){g=J[a+136>>2];break d}g=J[a+136>>2];d=J[i+8>>2];while(1){e=(f<<4)+g|0;J[d+12>>2]=J[e+12>>2];I[d+6>>1]=L[e+6>>1];I[d+8>>1]=L[e+8>>1];I[d+10>>1]=L[e+10>>1];I[d>>1]=L[e>>1];I[d+2>>1]=L[e+2>>1];I[d+4>>1]=L[e+4>>1];d=d+16|0;f=f+1|0;if((h|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,4035,1497453121,g)}J[b+76>>2]=J[a+144>>2];d=J[a+152>>2];J[b+80>>2]=d;if(!d){J[b+72>>2]=0;return 3577}d=b;b=ia[J[J[c>>2]+28>>2]](c,J[a+160>>2])|0;J[d+72>>2]=b;if(b){f=0;e=J[a+152>>2];g=ia[J[J[c>>2]+16>>2]](c,20,e)|0;e:{if((e|0)<=0){a=J[a+160>>2];break e}a=J[a+160>>2];d=J[g+8>>2];while(1){b=(f<<5)+a|0;I[d+14>>1]=L[b+6>>1];I[d+16>>1]=L[b+8>>1];I[d+18>>1]=L[b+10>>1];I[d+8>>1]=L[b>>1];I[d+10>>1]=L[b+2>>1];I[d+12>>1]=L[b+4>>1];J[d>>2]=J[b+12>>2];J[d+4>>2]=J[b+16>>2];d=d+20|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,3685,1497453121,a)}return 3577}function Jm(a,b,c){var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0);e=ga-160|0;ga=e;f=J[a+4>>2];d=J[f+12>>2];D=N[d+52>>2];E=N[d+56>>2];h=N[d+24>>2];i=N[d+20>>2];j=N[d+40>>2];k=N[d+36>>2];F=N[d+48>>2];l=N[d+8>>2];m=N[d>>2];n=N[d+4>>2];o=N[d+16>>2];p=N[d+32>>2];d=J[J[f+4>>2]+24>>2]+P(c,80)|0;q=N[d+32>>2];r=N[d>>2];s=N[d+16>>2];t=N[d+56>>2];u=N[d+52>>2];v=N[d+48>>2];w=N[d+36>>2];x=N[d+20>>2];y=N[d+4>>2];z=N[d+40>>2];A=N[d+24>>2];B=N[d+8>>2];f=0;J[e+156>>2]=0;J[e+140>>2]=0;J[e+124>>2]=0;N[e+136>>2]=Q(z*j)+Q(Q(B*p)+Q(k*A));N[e+132>>2]=Q(w*j)+Q(Q(y*p)+Q(k*x));N[e+120>>2]=Q(z*h)+Q(Q(B*o)+Q(i*A));N[e+116>>2]=Q(w*h)+Q(Q(y*o)+Q(i*x));N[e+152>>2]=E+Q(Q(t*j)+Q(Q(v*p)+Q(k*u)));N[e+148>>2]=D+Q(Q(t*h)+Q(Q(v*o)+Q(i*u)));J[e+108>>2]=0;N[e+128>>2]=Q(q*j)+Q(Q(r*p)+Q(k*s));N[e+112>>2]=Q(q*h)+Q(Q(r*o)+Q(i*s));N[e+96>>2]=Q(q*l)+Q(Q(r*m)+Q(n*s));N[e+104>>2]=Q(z*l)+Q(Q(B*m)+Q(n*A));N[e+100>>2]=Q(w*l)+Q(Q(y*m)+Q(n*x));N[e+144>>2]=F+Q(Q(t*l)+Q(Q(v*m)+Q(n*u)));ia[J[J[b>>2]+8>>2]](b,e+96|0,e+80|0,e- -64|0);d=J[a+8>>2];g=J[d+4>>2];ia[J[J[g>>2]+8>>2]](g,J[d+12>>2],e+48|0,e+32|0);d=J[7398];a:{if(d){if(!(ia[d|0](J[J[a+8>>2]+4>>2],b)|0)){break a}}f=N[e+64>>2]<N[e+48>>2]|N[e+80>>2]>N[e+32>>2]?f:1;d=0;if((N[e+72>>2]<N[e+56>>2]|N[e+88>>2]>N[e+40>>2]?d:f)^1|N[e+68>>2]<N[e+52>>2]|N[e+84>>2]>N[e+36>>2]){break a}d=J[a+4>>2];f=J[d+8>>2];J[e+24>>2]=-1;J[e+16>>2]=f;J[e+12>>2]=b;J[e+8>>2]=d;J[e+28>>2]=c;b=2;J[e+20>>2]=e+96;if(!J[J[a+24>>2]+(c<<2)>>2]){d=J[a+12>>2];d=ia[J[J[d>>2]+8>>2]](d,e+8|0,J[a+8>>2],J[a+28>>2])|0;J[J[a+24>>2]+(c<<2)>>2]=d;d=J[a+4>>2]}g=J[a+20>>2];f=J[g+8>>2];b:{if(J[f+8>>2]==J[d+8>>2]){C=g+8|0;break b}f=J[g+12>>2];b=3;C=g+12|0}d=e+8|0;J[C>>2]=d;ia[J[J[g>>2]+(b<<2)>>2]](g,-1,c);b=J[J[a+24>>2]+(c<<2)>>2];ia[J[J[b>>2]+8>>2]](b,d,J[a+8>>2],J[a+16>>2],J[a+20>>2]);b=J[a+20>>2];J[(J[J[b+8>>2]+8>>2]==J[J[a+4>>2]+8>>2]?8:12)+b>>2]=f}ga=e+160|0}function vm(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,H=0,I=0,K=0,L=0;g=ga-32|0;ga=g;a:{if(J[a+56>>2]<=0){break a}k=N[d+8>>2];j=N[c+8>>2];l=Q(k-j);i=N[d>>2];n=N[c>>2];m=Q(i-n);o=N[d+4>>2];p=N[c+4>>2];q=Q(o-p);r=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(q*q))))));v=Q(l*r);t=Q(v*l);l=Q(m*r);w=Q(l*m);m=Q(q*r);w=Q(t+Q(w+Q(q*m)));q=N[f+8>>2];z=Q((k>j?k:j)+q);r=N[f+4>>2];A=Q((o>p?o:p)+r);t=N[f>>2];B=Q((i>n?i:n)+t);j=k<j?k:j;k=N[e+8>>2];C=Q(j+k);j=N[e+4>>2];D=Q((o<p?o:p)+j);n=i<n?i:n;i=N[e>>2];E=Q(n+i);d=J[a+96>>2];n=v==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/v);h=n<Q(0);F=(h<<4)+g|8;o=m==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/m);s=o<Q(0);G=(s<<4)+g|4;H=(!h<<4)+g|8;I=(!s<<4)+g|4;p=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);h=p<Q(0);K=(h<<4)+g|0;L=(!h<<4)+g|0;while(1){h=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=h;h=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=h;h=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=h;h=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=h;N[g>>2]=N[g>>2]-t;N[g+4>>2]=N[g+4>>2]-r;N[g+16>>2]=N[g+16>>2]-i;N[g+20>>2]=N[g+20>>2]-j;N[g+8>>2]=N[g+8>>2]-q;N[g+24>>2]=N[g+24>>2]-k;h=0;b:{if(N[d+16>>2]<E){break b}h=0;if(N[d>>2]>B){break b}h=1}s=0;c:{d:{e:{f:{g:{if((N[d+24>>2]<C|N[d+8>>2]>z?s:h)^1|N[d+4>>2]>A|N[d+20>>2]<D){break g}l=N[c>>2];k=Q(p*Q(N[K>>2]-l));i=N[c+4>>2];j=Q(o*Q(N[I>>2]-i));if(k>j){break g}i=Q(o*Q(N[G>>2]-i));l=Q(p*Q(N[L>>2]-l));if(i>l){break g}k=i>k?i:k;m=N[c+8>>2];i=Q(n*Q(N[H>>2]-m));if(k>i){break g}m=Q(n*Q(N[F>>2]-m));j=j<l?j:l;if(m>j){break g}y=J[d+32>>2];s=(y|0)==-1;h=(k<m?m:k)<w&(i<j?i:j)>Q(0);if(!h|(y|0)!=-1){break f}ia[J[J[b>>2]+8>>2]](b,J[d+36>>2],J[d+40>>2]);break e}s=J[d+32>>2]==-1;h=0}if(h){break e}if(!s){break d}}u=u+1|0;d=d- -64|0;break c}h=J[d+32>>2];u=h+u|0;d=(h<<6)+d|0}x=x+1|0;if(J[a+56>>2]<=(u|0)){break a}k=N[e+8>>2];j=N[e+4>>2];i=N[e>>2];q=N[f+8>>2];r=N[f+4>>2];t=N[f>>2];continue}}if(J[7404]<(x|0)){J[7404]=x}ga=g+32|0}function Ru(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];if(!K[30860]){H[30860]=1;J[7713]=17548;H[30856]=0}J[(a+3600|0)+72>>2]=30852;J[(a+3604|0)+72>>2]=30852;J[(a+3608|0)+72>>2]=30852;J[(a+3612|0)+72>>2]=30852;J[(a+3616|0)+72>>2]=30852;J[(a+3620|0)+72>>2]=30852;J[(a+3624|0)+72>>2]=30852;J[(a+3628|0)+72>>2]=30852;J[(a+3632|0)+72>>2]=30852;J[(a+3636|0)+72>>2]=30852;J[(a+3640|0)+72>>2]=30852;J[(a+3644|0)+72>>2]=30852;J[(a+3648|0)+72>>2]=30852;J[(a+3652|0)+72>>2]=30852;J[(a+3656|0)+72>>2]=30852;J[(a+3660|0)+72>>2]=30852;J[(a+3664|0)+72>>2]=30852;J[(a+3668|0)+72>>2]=30852;J[(a+3672|0)+72>>2]=30852;J[(a+3676|0)+72>>2]=30852;J[(a+3680|0)+72>>2]=30852;J[(a+3684|0)+72>>2]=30852;J[(a+3688|0)+72>>2]=30852;J[(a+3692|0)+72>>2]=30852;J[(a+3696|0)+72>>2]=30852;b=a+3700|0;J[b+72>>2]=30852;J[(a+3704|0)+72>>2]=30852;J[(a+3708|0)+72>>2]=30852;J[(a+3712|0)+72>>2]=30852;J[(a+3716|0)+72>>2]=30852;J[(a+3720|0)+72>>2]=30852;J[(a+3724|0)+72>>2]=30852;J[(a+3728|0)+72>>2]=30852;J[(a+3732|0)+72>>2]=30852;J[(a+3736|0)+72>>2]=30852;J[(a+3740|0)+72>>2]=30852;J[a+172>>2]=30852;J[a+316>>2]=30852;J[a+460>>2]=30852;J[a+604>>2]=30852;J[a+748>>2]=30852;J[a+892>>2]=30852;J[(a+964|0)+72>>2]=30852;J[(a+1108|0)+72>>2]=30852;J[(a+1252|0)+72>>2]=30852;J[(a+1396|0)+72>>2]=30852;J[(a+1540|0)+72>>2]=30852;J[(a+1684|0)+72>>2]=30852;J[(a+1828|0)+72>>2]=30852;J[(a+1972|0)+72>>2]=30852;J[(a+2116|0)+72>>2]=30852;J[(a+2260|0)+72>>2]=30852;J[(a+2404|0)+72>>2]=30852;J[(a+2548|0)+72>>2]=30852;J[(a+2692|0)+72>>2]=30852;J[(a+2836|0)+72>>2]=30852;J[(a+2980|0)+72>>2]=30852;J[(a+3124|0)+72>>2]=30852;J[(a+3268|0)+72>>2]=30852;J[(a+3412|0)+72>>2]=30852;J[(a+3556|0)+72>>2]=30852;J[b+72>>2]=30852;J[(a+3844|0)+72>>2]=30852;J[(a+3988|0)+72>>2]=30852;J[(a+4132|0)+72>>2]=30852;J[(a+4276|0)+72>>2]=30852;J[(a+4420|0)+72>>2]=30852;J[(a+4564|0)+72>>2]=30852;J[(a+4708|0)+72>>2]=30852;J[(a+4852|0)+72>>2]=30852;J[(a+4996|0)+72>>2]=30852;J[(a+5140|0)+72>>2]=30852;ga=c+16|0}function bH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0);e=ga-192|0;ga=e;m=N[c+8>>2];n=Q(Q(N[b+8>>2]*d)+m);q=N[c+4>>2];o=Q(Q(N[b+4>>2]*d)+q);r=N[c>>2];p=Q(Q(N[b>>2]*d)+r);l=J[a+8>>2];f=J[l+8>>2];g=J[J[a+4>>2]+740>>2];s=(f|0)==(g|0);a:{if(!s){g=J[a+12>>2];h=J[g+8>>2];k=Q(n-N[h+60>>2]);i=Q(p-N[h+52>>2]);j=Q(o-N[h+56>>2]);t=Q(Q(N[h+44>>2]*k)+Q(Q(N[h+12>>2]*i)+Q(j*N[h+28>>2])));u=Q(Q(N[h+40>>2]*k)+Q(Q(N[h+8>>2]*i)+Q(j*N[h+24>>2])));k=Q(Q(N[h+36>>2]*k)+Q(Q(N[h+4>>2]*i)+Q(j*N[h+20>>2])));break a}k=Q(n-N[g+60>>2]);i=Q(p-N[g+52>>2]);j=Q(o-N[g+56>>2]);t=Q(Q(N[g+44>>2]*k)+Q(Q(N[g+12>>2]*i)+Q(j*N[g+28>>2])));u=Q(Q(N[g+40>>2]*k)+Q(Q(N[g+8>>2]*i)+Q(j*N[g+24>>2])));k=Q(Q(N[g+36>>2]*k)+Q(Q(N[g+4>>2]*i)+Q(j*N[g+20>>2])));g=J[a+12>>2];f=J[g+8>>2]}v=N[f+20>>2];w=N[f+36>>2];x=N[f+40>>2];y=N[f+8>>2];z=N[f+24>>2];i=N[f+44>>2];j=N[f+60>>2];A=N[f+12>>2];B=N[f+52>>2];C=N[f+28>>2];D=N[f+56>>2];E=N[f+4>>2];J[e+36>>2]=0;F=i;i=Q(m-j);j=Q(r-B);m=Q(q-D);N[e+32>>2]=Q(F*i)+Q(Q(A*j)+Q(C*m));N[e+28>>2]=Q(x*i)+Q(Q(y*j)+Q(m*z));J[e+20>>2]=0;N[e+16>>2]=t;N[e+12>>2]=u;N[e+8>>2]=k;N[e+24>>2]=Q(w*i)+Q(Q(E*j)+Q(m*v));f=J[b+12>>2];J[e+80>>2]=J[b+8>>2];J[e+84>>2]=f;f=J[b>>2];b=J[b+4>>2];J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+148>>2]=0;J[e+152>>2]=0;J[e+156>>2]=0;N[e+60>>2]=o;N[e- -64>>2]=n;J[e+68>>2]=0;J[e+72>>2]=f;J[e+76>>2]=b;J[e+128>>2]=0;J[e+132>>2]=0;H[e+124|0]=0;J[e+120>>2]=0;J[e+100>>2]=0;J[e+92>>2]=0;J[e+96>>2]=0;N[e+88>>2]=d;N[e+56>>2]=p;b=J[c+12>>2];J[e+48>>2]=J[c+8>>2];J[e+52>>2]=b;b=J[c+4>>2];J[e+40>>2]=J[c>>2];J[e+44>>2]=b;b:{if(!s){h=a+16|0;f=a+20|0;b=l;l=a+24|0;c=a+28|0;break b}h=a+20|0;f=a+16|0;b=g;g=l;l=a+28|0;c=a+24|0}f=J[f>>2];h=J[h>>2];c=J[c>>2];l=J[l>>2];J[e+116>>2]=l;J[e+112>>2]=c;J[e+108>>2]=h;J[e+104>>2]=f;a=J[a+32>>2];Q(ia[J[J[a>>2]+12>>2]](a,e+8|0,g,f,c,b,h,l));ga=e+192|0}function WE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);c=ga-144|0;ga=c;if(J[a+16>>2]>0){f=c- -64|0;while(1){g=P(h,80);d=g+J[a+24>>2]|0;e=J[d+12>>2];J[c+24>>2]=J[d+8>>2];J[c+28>>2]=e;e=J[d+4>>2];J[c+16>>2]=J[d>>2];J[c+20>>2]=e;e=J[d+28>>2];J[c+40>>2]=J[d+24>>2];J[c+44>>2]=e;e=J[d+20>>2];J[c+32>>2]=J[d+16>>2];J[c+36>>2]=e;e=J[d+44>>2];J[c+56>>2]=J[d+40>>2];J[c+60>>2]=e;e=J[d+36>>2];J[c+48>>2]=J[d+32>>2];J[c+52>>2]=e;e=J[d+60>>2];J[f+8>>2]=J[d+56>>2];J[f+12>>2]=e;e=J[d+52>>2];J[f>>2]=J[d+48>>2];J[f+4>>2]=e;d=J[d+64>>2];d=ia[J[J[d>>2]+28>>2]](d)|0;e=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=e;e=J[d+4>>2];J[c>>2]=J[d>>2];J[c+4>>2]=e;i=N[a+80>>2];j=N[b+4>>2];k=N[a+76>>2];l=N[b>>2];N[c+8>>2]=Q(N[c+8>>2]*N[b+8>>2])/N[a+84>>2];J[c+12>>2]=0;N[c>>2]=Q(l*N[c>>2])/k;N[c+4>>2]=Q(j*N[c+4>>2])/i;d=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[d>>2]+24>>2]](d,c);i=N[a+76>>2];j=N[b>>2];k=N[a+80>>2];l=N[b+4>>2];m=N[a+84>>2];n=N[b+8>>2];J[c+76>>2]=0;N[c+72>>2]=Q(n*N[c+72>>2])/m;N[c+68>>2]=Q(l*N[c+68>>2])/k;N[c+64>>2]=Q(j*N[c+64>>2])/i;e=J[c+20>>2];d=J[a+24>>2]+g|0;J[d>>2]=J[c+16>>2];J[d+4>>2]=e;e=J[c+28>>2];J[d+8>>2]=J[c+24>>2];J[d+12>>2]=e;e=J[c+44>>2];J[d+24>>2]=J[c+40>>2];J[d+28>>2]=e;e=J[c+36>>2];J[d+16>>2]=J[c+32>>2];J[d+20>>2]=e;e=J[c+60>>2];J[d+40>>2]=J[c+56>>2];J[d+44>>2]=e;e=J[c+52>>2];J[d+32>>2]=J[c+48>>2];J[d+36>>2]=e;e=J[f+12>>2];J[d+56>>2]=J[f+8>>2];J[d+60>>2]=e;e=J[f+4>>2];J[d+48>>2]=J[f>>2];J[d+52>>2]=e;if(J[a+64>>2]){d=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[d>>2]+8>>2]](d,c+16|0,c+128|0,c+112|0);d=J[c+140>>2];J[c+88>>2]=J[c+136>>2];J[c+92>>2]=d;d=J[c+132>>2];J[c+80>>2]=J[c+128>>2];J[c+84>>2]=d;d=J[c+124>>2];J[c+104>>2]=J[c+120>>2];J[c+108>>2]=d;d=J[c+116>>2];J[c+96>>2]=J[c+112>>2];J[c+100>>2]=d;Gc(J[a+64>>2],J[(J[a+24>>2]+g|0)+76>>2],c+80|0)}h=h+1|0;if((h|0)<J[a+16>>2]){continue}break}}d=J[b+4>>2];J[a+76>>2]=J[b>>2];J[a+80>>2]=d;d=J[b+12>>2];J[a+84>>2]=J[b+8>>2];J[a+88>>2]=d;ia[J[J[a>>2]+68>>2]](a);ga=c+144|0}function Vm(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=0,u=0,v=0,w=0,x=Q(0),y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=ga-32|0;ga=f;if(a){g=N[b+8>>2];h=N[c+8>>2];o=N[b>>2];k=N[c>>2];l=N[b+4>>2];i=N[c+4>>2];J[8369]=J[8369]+1;c=ia[J[6782]](512,16)|0;qa(c+4|0,0,508);J[c>>2]=a;g=Q(h-g);h=Q(k-o);o=Q(i-l);k=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(o*o))))));l=Q(g*k);i=Q(l*g);g=Q(h*k);r=Q(g*h);h=Q(o*k);x=Q(i+Q(r+Q(o*h)));o=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);a=o<Q(0);y=(a<<4)+f|8;h=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);e=h<Q(0);z=(e<<4)+f|4;A=(!a<<4)+f|8;B=(!e<<4)+f|4;g=g==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/g);a=g<Q(0);C=(a<<4)+f|0;D=(!a<<4)+f|0;q=126;j=128;p=128;a=1;while(1){e=a-1|0;w=e<<2;n=J[w+c>>2];m=J[n+4>>2];J[f>>2]=J[n>>2];J[f+4>>2]=m;m=J[n+12>>2];J[f+8>>2]=J[n+8>>2];J[f+12>>2]=m;m=J[n+28>>2];J[f+24>>2]=J[n+24>>2];J[f+28>>2]=m;m=J[n+20>>2];J[f+16>>2]=J[n+16>>2];J[f+20>>2]=m;r=N[b>>2];k=Q(g*Q(N[C>>2]-r));i=N[b+4>>2];l=Q(h*Q(N[B>>2]-i));a:{b:{if(k>l){break b}i=Q(h*Q(N[z>>2]-i));r=Q(g*Q(N[D>>2]-r));if(i>r){break b}k=k<i?i:k;s=N[b+8>>2];i=Q(o*Q(N[A>>2]-s));if(k>i){break b}s=Q(o*Q(N[y>>2]-s));l=l<r?l:r;if(s>l|!((k<s?s:k)<x)|!((l>i?i:l)>Q(0))){break b}if(J[n+40>>2]){c:{if((e|0)<=(q|0)){e=c;break c}m=p<<1;d:{if((m|0)<=(p|0)){e=c;break d}e:{if((m|0)<=(j|0)){e=c;break e}f:{if(!p){e=0;break f}J[8369]=J[8369]+1;e=ia[J[6782]](p<<3,16)|0;if((p|0)<=0){break f}v=0;q=0;if(p-1>>>0>=3){E=p&-4;t=0;while(1){j=q<<2;J[j+e>>2]=J[c+j>>2];u=j|4;J[u+e>>2]=J[c+u>>2];u=j|8;J[u+e>>2]=J[c+u>>2];j=j|12;J[j+e>>2]=J[c+j>>2];q=q+4|0;t=t+4|0;if((E|0)!=(t|0)){continue}break}}j=p&3;if(!j){break f}while(1){t=q<<2;J[t+e>>2]=J[c+t>>2];q=q+1|0;v=v+1|0;if((j|0)!=(v|0)){continue}break}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}j=m}c=p<<2;qa(c+e|0,0,c)}q=m-2|0;c=e;p=m}J[e+w>>2]=J[n+36>>2];J[(a<<2)+e>>2]=J[n+40>>2];a=a+1|0;break a}ia[J[J[d>>2]+12>>2]](d,n)}a=e}if(a){continue}break}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}ga=f+32|0}function jp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;a=J[g+8>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2]+748;J[h+8>>2]=a;a=J[h+8>>2];b=ga+-64|0;ga=b;J[b+60>>2]=J[h+12>>2];J[b+56>>2]=a;k=J[b+60>>2];a=ga-16|0;J[a+12>>2]=J[b+56>>2];J[b+52>>2]=J[J[a+12>>2]+4>>2];e=J[b+52>>2];c=b+8|0;J[c>>2]=0;J[c+4>>2]=0;J[b+48>>2]=0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;ga=a;J[a+12>>2]=c;d=J[a+12>>2];vh(d);J[(ga-16|0)+12>>2]=d+20;ga=a+16|0;a=ga-32|0;ga=a;J[a+28>>2]=k;J[a+24>>2]=e;J[a+20>>2]=c;c=ga-16|0;i=J[a+28>>2];J[c+12>>2]=i;J[a+16>>2]=J[J[c+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}c=J[a+24>>2];e=ga-16|0;J[e+12>>2]=i;if(J[J[e+12>>2]+4>>2]<(c|0)){e=J[a+24>>2];c=ga-16|0;ga=c;J[c+12>>2]=i;J[c+8>>2]=e;d=ga-16|0;e=J[c+12>>2];J[d+12>>2]=e;if(J[J[d+12>>2]+8>>2]<J[c+8>>2]){f=J[c+8>>2];d=ga-16|0;ga=d;J[d+8>>2]=e;J[d+4>>2]=f;j=J[d+8>>2];b:{if(J[d+4>>2]){l=J[d+4>>2];f=ga-16|0;ga=f;J[f+12>>2]=j;J[f+8>>2]=l;J[f+4>>2]=0;j=P(J[f+8>>2],44);J[8369]=J[8369]+1;j=ia[J[6782]](j,16)|0;ga=f+16|0;J[d+12>>2]=j;break b}J[d+12>>2]=0}ga=d+16|0;J[c+4>>2]=J[d+12>>2];d=ga-16|0;J[d+12>>2]=e;uh(e,J[J[d+12>>2]+4>>2],J[c+4>>2]);d=ga-16|0;J[d+12>>2]=e;Eb(e,J[J[d+12>>2]+4>>2]);lb(e);H[e+16|0]=1;J[e+12>>2]=J[c+4>>2];J[e+8>>2]=J[c+8>>2]}ga=c+16|0}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){e=J[a+20>>2];d=J[e+4>>2];c=J[i+12>>2]+P(J[a+8>>2],44)|0;J[c>>2]=J[e>>2];J[c+4>>2]=d;J[c+40>>2]=J[e+40>>2];d=J[e+36>>2];J[c+32>>2]=J[e+32>>2];J[c+36>>2]=d;d=J[e+28>>2];J[c+24>>2]=J[e+24>>2];J[c+28>>2]=d;d=J[e+20>>2];J[c+16>>2]=J[e+16>>2];J[c+20>>2]=d;d=J[e+12>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=d;J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[i+4>>2]=J[a+24>>2];ga=a+32|0;uh(J[b+56>>2],J[b+52>>2],J[k+12>>2]);ga=b- -64|0;ga=h+16|0;ga=g+16|0}function Il(a,b,c){var d=Q(0),e=0,f=Q(0),g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;i=N[a- -64>>2];p=N[a+48>>2];k=N[a+32>>2];d=N[b+24>>2];d=d<k?k:d;d=Q(Q(i*Q((d>p?p:d)-k))+Q(.5));a:{if(d<Q(4294967296)&d>=Q(0)){w=~~d>>>0;break a}w=0}n=N[a+60>>2];f=N[a+44>>2];l=N[a+28>>2];d=N[b+20>>2];d=d<l?l:d;d=Q(Q(n*Q((d>f?f:d)-l))+Q(.5));b:{if(d<Q(4294967296)&d>=Q(0)){x=~~d>>>0;break b}x=0}d=N[b+8>>2];d=d<k?k:d;d=Q(Q(Q((d>p?p:d)-k)*i)+Q(.5));c:{if(d<Q(4294967296)&d>=Q(0)){s=~~d>>>0;break c}s=0}d=N[b+4>>2];d=d<l?l:d;d=Q(Q(Q((d>f?f:d)-l)*n)+Q(.5));d:{if(d<Q(4294967296)&d>=Q(0)){y=~~d>>>0;break d}y=0}n=N[a+56>>2];i=N[a+40>>2];f=N[a+24>>2];d=N[b+16>>2];d=d<f?f:d;d=Q(Q(n*Q((d>i?i:d)-f))+Q(.5));e:{if(d<Q(4294967296)&d>=Q(0)){z=~~d>>>0;break e}z=0}d=N[b>>2];d=d<f?f:d;d=Q(Q(Q((d>i?i:d)-f)*n)+Q(.5));f:{if(d<Q(4294967296)&d>=Q(0)){A=~~d>>>0;break f}A=0}B=J[a>>2];if((B|0)>0){b=0;while(1){g:{h:{C=b<<4;e=C+J[a+16>>2]|0;if(!(L[e>>1]>z>>>0|L[e+6>>1]<A>>>0|(L[e+8>>1]<y>>>0|L[e+2>>1]>x>>>0))){if(L[e+4>>1]<=w>>>0){break h}}D=J[e+12>>2]>=0;E=0;break g}t=J[e+12>>2];D=(t|0)>=0;e=L[e+10>>1];E=e>>>0>=s>>>0;if((t|0)<0|e>>>0<s>>>0){break g}g=J[c+4>>2];i:{if((g|0)!=J[c+8>>2]){break i}q=g?g<<1:1;if((q|0)<=(g|0)){break i}j:{if(!q){j=0;break j}J[8369]=J[8369]+1;j=ia[J[6782]](q<<2,16)|0;g=J[c+4>>2]}h=J[c+12>>2];k:{l:{if((g|0)>0){u=0;m=0;if(g-1>>>0>=3){r=g&-4;v=0;while(1){o=m<<2;J[o+j>>2]=J[h+o>>2];e=o|4;J[e+j>>2]=J[e+h>>2];e=o|8;J[e+j>>2]=J[e+h>>2];e=o|12;J[e+j>>2]=J[e+h>>2];m=m+4|0;v=v+4|0;if((r|0)!=(v|0)){continue}break}}r=g&3;if(!r){break l}while(1){e=m<<2;J[e+j>>2]=J[e+h>>2];m=m+1|0;u=u+1|0;if((r|0)!=(u|0)){continue}break}break l}if(!h){break k}}if(h?K[c+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](h)}g=J[c+4>>2]}J[c+12>>2]=j;H[c+16|0]=1;J[c+8>>2]=q}J[J[c+12>>2]+(g<<2)>>2]=t;J[c+4>>2]=J[c+4>>2]+1}b=D|E?b+1|0:b-J[(J[a+16>>2]+C|0)+12>>2]|0;if((B|0)>(b|0)){continue}break}}}function Gp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);var f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=0,E=Q(0);f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;H[f+19|0]=d;N[f+12>>2]=e;c=H[f+19|0]&1;E=N[f+12>>2];h=ga-16|0;ga=h;a=J[f+28>>2];s=J[f+24>>2];b=J[a+720>>2]+P(s,104)|0;e=N[b+16>>2];o=N[b+12>>2];p=N[b+8>>2];b=J[f+20>>2];t=N[b+20>>2];u=N[b+36>>2];v=N[b+40>>2];w=N[b+8>>2];x=N[b+24>>2];q=N[b+60>>2];y=N[b+44>>2];z=N[b+12>>2];k=N[b+52>>2];r=N[b+56>>2];A=N[b+28>>2];B=N[b+4>>2];J[h+12>>2]=0;k=Q(-k);N[h+8>>2]=Q(Q(Q(z*k)-Q(A*r))-Q(y*q))+Q(Q(e*y)+Q(Q(p*z)+Q(A*o)));N[h+4>>2]=Q(Q(Q(w*k)-Q(x*r))-Q(v*q))+Q(Q(e*v)+Q(Q(p*w)+Q(x*o)));N[h>>2]=Q(Q(Q(B*k)-Q(t*r))-Q(u*q))+Q(Q(e*u)+Q(Q(p*B)+Q(t*o)));i=ga-96|0;ga=i;a:{if(!c){break a}c=J[a+268>>2];b:{if((c|0)<=0){break b}j=J[a+276>>2];d=0;while(1){if((b|0)!=J[j+(d<<2)>>2]){d=d+1|0;if((d|0)!=(c|0)){continue}break b}break}if((c|0)!=(d|0)){break a}}c:{if(J[a+272>>2]!=(c|0)){break c}m=c?c<<1:1;if((m|0)<=(c|0)){break c}d:{if(!m){j=0;break d}J[8369]=J[8369]+1;j=ia[J[6782]](m<<2,16)|0;c=J[a+268>>2]}e:{if((c|0)<=0){break e}d=0;if(c-1>>>0>=3){n=c&-4;while(1){g=d<<2;J[g+j>>2]=J[g+J[a+276>>2]>>2];l=g|4;J[l+j>>2]=J[l+J[a+276>>2]>>2];l=g|8;J[l+j>>2]=J[l+J[a+276>>2]>>2];g=g|12;J[g+j>>2]=J[g+J[a+276>>2]>>2];d=d+4|0;C=C+4|0;if((n|0)!=(C|0)){continue}break}}g=c&3;if(!g){break e}while(1){n=d<<2;J[n+j>>2]=J[n+J[a+276>>2]>>2];d=d+1|0;D=D+1|0;if((g|0)!=(D|0)){continue}break}}d=J[a+276>>2];if(!(!d|!K[a+280|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+268>>2]}J[a+276>>2]=j;H[a+280|0]=1;J[a+272>>2]=m}J[J[a+276>>2]+(c<<2)>>2]=b;J[a+268>>2]=c+1}c=J[a+720>>2];J[i+20>>2]=b;b=c+P(s,104)|0;J[i>>2]=b;c=J[h+12>>2];J[i+12>>2]=J[h+8>>2];J[i+16>>2]=c;c=J[h+4>>2];J[i+4>>2]=J[h>>2];J[i+8>>2]=c;H[b+100|0]=K[b+100|0]|1;N[i+24>>2]=E;ei(a+788|0,i);ga=i+96|0;ga=h+16|0;ga=f+32|0}function jg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:{if(!a|!b){break a}J[8369]=J[8369]+1;d=ia[J[6782]](1024,16)|0;J[d+4>>2]=b;J[d>>2]=a;n=124;i=128;j=128;l=1;while(1){m=l;l=m-1|0;o=l<<3;a=o+d|0;f=J[a+4>>2];e=J[a>>2];if((l|0)>(n|0)){p=i<<1;b:{if((p|0)<=(i|0)){b=d;break b}if((j|0)>=(p|0)){b=d;break b}c:{if(!i){b=0;break c}J[8369]=J[8369]+1;b=ia[J[6782]](i<<4,16)|0;if((i|0)<=0){break c}n=0;a=0;if(i-1>>>0>=3){r=i&-4;j=0;while(1){h=a<<3;g=h+b|0;k=d+h|0;q=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=q;g=h|8;k=g+b|0;g=d+g|0;q=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=q;g=h|16;k=g+b|0;g=d+g|0;q=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=q;h=h|24;g=h+b|0;h=d+h|0;k=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=k;a=a+4|0;j=j+4|0;if((r|0)!=(j|0)){continue}break}}i=i&3;if(!i){break c}while(1){j=a<<3;h=j+b|0;j=d+j|0;r=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=r;a=a+1|0;n=n+1|0;if((i|0)!=(n|0)){continue}break}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}j=p}n=p-4|0;i=p;d=b}d:{if((e|0)==(f|0)){if(!J[e+40>>2]){break d}a=d+o|0;b=J[e+36>>2];J[a+4>>2]=b;J[a>>2]=b;a=(m<<3)+d|0;b=J[e+40>>2];J[a+4>>2]=b;J[a>>2]=b;b=J[e+40>>2];J[a+8>>2]=J[e+36>>2];J[a+12>>2]=b;l=m+2|0;break d}if(!(N[e>>2]<=N[f+16>>2])|!(N[e+16>>2]>=N[f>>2])|(!(N[e+4>>2]<=N[f+20>>2])|!(N[e+20>>2]>=N[f+4>>2]))){break d}if(!(N[e+8>>2]<=N[f+24>>2])|!(N[e+24>>2]>=N[f+8>>2])){break d}a=J[f+40>>2];if(J[e+40>>2]){b=J[e+36>>2];if(a){a=d+o|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=b;b=J[e+40>>2];a=(m<<3)+d|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=b;b=J[e+36>>2];J[a+12>>2]=J[f+40>>2];J[a+8>>2]=b;b=J[e+40>>2];J[a+20>>2]=J[f+40>>2];J[a+16>>2]=b;l=m+3|0;break d}a=d+o|0;J[a+4>>2]=f;J[a>>2]=b;a=J[e+40>>2];b=(m<<3)+d|0;J[b+4>>2]=f;J[b>>2]=a;l=m+1|0;break d}if(a){a=d+o|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=e;a=(m<<3)+d|0;J[a+4>>2]=J[f+40>>2];J[a>>2]=e;l=m+1|0;break d}ia[J[J[c>>2]+8>>2]](c,e,f)}if(l){continue}break}if(!d){break a}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}}function Na(a,b){var c=0,d=Q(0),e=0,f=0;c=ga+-64|0;ga=c;J[c+60>>2]=a;J[c+56>>2]=b;a=ga-16|0;b=J[c+60>>2];J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+16;d=Q(d+N[J[a+12>>2]+4>>2]);J[a+12>>2]=b+32;N[c+52>>2]=d+N[J[a+12>>2]+8>>2];a:{if(N[c+52>>2]>Q(0)){a=ga-16|0;N[a+12>>2]=N[c+52>>2]+Q(1);N[c+28>>2]=Y(N[a+12>>2]);N[c+44>>2]=N[c+28>>2]*Q(.5);N[c+28>>2]=Q(.5)/N[c+28>>2];e=b+32|0;J[a+12>>2]=e;d=N[J[a+12>>2]+4>>2];f=b+16|0;J[a+12>>2]=f;N[c+32>>2]=Q(d-N[J[a+12>>2]+8>>2])*N[c+28>>2];J[a+12>>2]=b;d=N[J[a+12>>2]+8>>2];J[a+12>>2]=e;N[c+36>>2]=Q(d-N[J[a+12>>2]>>2])*N[c+28>>2];J[a+12>>2]=f;d=N[J[a+12>>2]>>2];J[a+12>>2]=b;N[c+40>>2]=Q(d-N[J[a+12>>2]+4>>2])*N[c+28>>2];break a}a=ga-16|0;J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+16;b:{if(N[J[a+12>>2]+4>>2]>d){a=ga-16|0;J[a+12>>2]=b+16;d=N[J[a+12>>2]+4>>2];J[a+12>>2]=b+32;a=N[J[a+12>>2]+8>>2]>d?2:1;break b}a=ga-16|0;J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+32;a=N[J[a+12>>2]+8>>2]>d?2:0}J[c+24>>2]=a;J[c+20>>2]=(J[c+24>>2]+1|0)%3;J[c+16>>2]=(J[c+24>>2]+2|0)%3;a=ga-16|0;J[a+12>>2]=b+(J[c+24>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);d=Q(d-N[J[a+12>>2]+(J[c+20>>2]<<2)>>2]);J[a+12>>2]=b+(J[c+16>>2]<<4);N[a+12>>2]=Q(d-N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])+Q(1);N[c+12>>2]=Y(N[a+12>>2]);e=c+32|0;N[e+(J[c+24>>2]<<2)>>2]=N[c+12>>2]*Q(.5);N[c+12>>2]=Q(.5)/N[c+12>>2];J[a+12>>2]=b+(J[c+16>>2]<<4);d=N[J[a+12>>2]+(J[c+20>>2]<<2)>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);N[c+44>>2]=Q(d-N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])*N[c+12>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+24>>2]<<4);N[e+(J[c+20>>2]<<2)>>2]=Q(d+N[J[a+12>>2]+(J[c+20>>2]<<2)>>2])*N[c+12>>2];J[a+12>>2]=b+(J[c+16>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+24>>2]<<4);N[e+(J[c+16>>2]<<2)>>2]=Q(d+N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])*N[c+12>>2]}a=c+32|0;xc(J[c+56>>2],a,a+4|0,a+8|0,a+12|0);ga=c- -64|0}function OH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=0,n=0,o=Q(0);g=ga-16|0;ga=g;J[7396]=J[7396]+1;if(J[a+4>>2]&2){d=J[b+192>>2];i=Q(ia[J[J[d>>2]+20>>2]](d,N[6778]));N[g+12>>2]=i;d=J[c+192>>2];j=Q(ia[J[J[d>>2]+20>>2]](d,N[6778]));N[g+8>>2]=j;d=i<j?g+12|0:g+8|0}else{d=27112}o=N[d>>2];i=N[c+184>>2];j=N[b+184>>2];e=J[a+68>>2];f=J[e+8>>2];a:{b:{if(f){d=J[e+12>>2];h=J[d>>2];J[e+8>>2]=f-1;J[e+12>>2]=h;break b}d=0;if(K[a+4|0]&4){break a}J[8369]=J[8369]+1;d=ia[J[6782]](772,16)|0}J[d+124>>2]=0;J[d+128>>2]=0;H[d+120|0]=0;J[d+116>>2]=0;J[d>>2]=1025;J[d+308>>2]=0;J[d+312>>2]=0;H[d+304|0]=0;J[d+300>>2]=0;J[d+492>>2]=0;J[d+496>>2]=0;H[d+488|0]=0;J[d+484>>2]=0;J[d+132>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+152>>2]=0;J[d+316>>2]=0;J[d+320>>2]=0;J[d+324>>2]=0;J[d+328>>2]=0;J[d+332>>2]=0;J[d+336>>2]=0;J[d+500>>2]=0;J[d+504>>2]=0;J[d+508>>2]=0;J[d+512>>2]=0;J[d+516>>2]=0;J[d+520>>2]=0;H[d+672|0]=0;J[d+668>>2]=0;J[d+676>>2]=0;J[d+680>>2]=0;J[d+684>>2]=0;J[d+688>>2]=0;J[d+692>>2]=0;J[d+696>>2]=0;J[d+700>>2]=0;J[d+704>>2]=0;J[d+740>>2]=b;J[d+744>>2]=c;J[d+748>>2]=0;N[d+752>>2]=o;N[d+756>>2]=i>j?j:i;e=J[a+12>>2];J[d+768>>2]=e;c:{if(J[a+16>>2]!=(e|0)){break c}h=e?e<<1:1;if((h|0)<=(e|0)){break c}d:{if(!h){c=0;break d}J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;e=J[a+12>>2]}e:{if((e|0)<=0){break e}b=0;if(e-1>>>0>=3){l=e&-4;while(1){f=b<<2;J[f+c>>2]=J[f+J[a+20>>2]>>2];k=f|4;J[k+c>>2]=J[k+J[a+20>>2]>>2];k=f|8;J[k+c>>2]=J[k+J[a+20>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+20>>2]>>2];b=b+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}f=e&3;if(!f){break e}while(1){l=b<<2;J[l+c>>2]=J[l+J[a+20>>2]>>2];b=b+1|0;n=n+1|0;if((f|0)!=(n|0)){continue}break}}b=J[a+20>>2];if(!(!b|!K[a+24|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}e=J[a+12>>2]}J[a+20>>2]=c;H[a+24|0]=1;J[a+16>>2]=h}J[J[a+20>>2]+(e<<2)>>2]=d;J[a+12>>2]=e+1}ga=g+16|0;return d|0}function Do(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0;e=ga-272|0;ga=e;J[e+268>>2]=a;J[e+264>>2]=b;J[e+260>>2]=c;J[e+256>>2]=d;d=J[e+268>>2];a=e+224|0;Ma(a,J[e+260>>2],J[e+264>>2]);N[e+220>>2]=.5;Ia(e+240|0,a,e+220|0);a=e+184|0;va(a,J[e+260>>2],J[e+264>>2]);N[e+180>>2]=.5;Ia(e+200|0,a,e+180|0);N[e+148>>2]=1;N[e+144>>2]=1;N[e+140>>2]=1;na(e+152|0,e+148|0,e+144|0,e+140|0);a=ga-16|0;J[a+12>>2]=e+120;J[a+12>>2]=e+104;J[e+176>>2]=0;while(1){if(J[e+176>>2]<4){J[e+172>>2]=0;while(1){if(J[e+172>>2]<3){a=ga-16|0;b=e+152|0;J[a+12>>2]=b;f=N[J[a+12>>2]>>2];c=e+240|0;J[a+12>>2]=c;N[e+84>>2]=f*N[J[a+12>>2]>>2];J[a+12>>2]=b;f=N[J[a+12>>2]+4>>2];J[a+12>>2]=c;N[e+80>>2]=f*N[J[a+12>>2]+4>>2];J[a+12>>2]=b;f=N[J[a+12>>2]+8>>2];J[a+12>>2]=c;N[e+76>>2]=f*N[J[a+12>>2]+8>>2];na(e+88|0,e+84|0,e+80|0,e+76|0);g=J[e+92>>2];h=e+120|0;a=h;J[a>>2]=J[e+88>>2];J[a+4>>2]=g;g=J[e+100>>2];J[a+8>>2]=J[e+96>>2];J[a+12>>2]=g;g=e+200|0;jb(a,g);J[e+72>>2]=J[e+172>>2]%3;a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2]+(J[e+72>>2]<<2)|0;N[a>>2]=Q(-0)-N[a>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]>>2];a=ga-16|0;J[a+12>>2]=c;N[e+52>>2]=f*N[J[a+12>>2]>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=c;N[e+48>>2]=f*N[J[a+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]+8>>2];a=ga-16|0;J[a+12>>2]=c;N[e+44>>2]=f*N[J[a+12>>2]+8>>2];na(e+56|0,e+52|0,e+48|0,e+44|0);b=J[e+60>>2];a=e+104|0;J[a>>2]=J[e+56>>2];J[a+4>>2]=b;b=J[e+68>>2];J[a+8>>2]=J[e+64>>2];J[a+12>>2]=b;jb(a,g);ia[J[J[d>>2]+8>>2]](d,h,a,J[e+256>>2]);J[e+172>>2]=J[e+172>>2]+1;continue}break}N[e+20>>2]=-1;N[e+16>>2]=-1;N[e+12>>2]=-1;na(e+24|0,e+20|0,e+16|0,e+12|0);a=J[e+28>>2];J[e+152>>2]=J[e+24>>2];J[e+156>>2]=a;a=J[e+36>>2];J[e+160>>2]=J[e+32>>2];J[e+164>>2]=a;if(J[e+176>>2]<3){a=ga-16|0;J[a+12>>2]=e+152;a=J[a+12>>2]+(J[e+176>>2]<<2)|0;N[a>>2]=Q(-0)-N[a>>2]}J[e+176>>2]=J[e+176>>2]+1;continue}break}ga=e+272|0}function Is(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;c=ra(1128);b=J[f+20>>2];a=J[f+16>>2];e=H[f+15|0]&1;xb(c,7,J[f+28>>2],J[f+24>>2]);H[c+48|0]=0;J[c>>2]=20024;d=J[b+12>>2];J[c+60>>2]=J[b+8>>2];J[c+64>>2]=d;d=J[b+4>>2];J[c+52>>2]=J[b>>2];J[c+56>>2]=d;d=J[b+28>>2];J[c+76>>2]=J[b+24>>2];J[c+80>>2]=d;d=J[b+20>>2];J[c+68>>2]=J[b+16>>2];J[c+72>>2]=d;d=J[b+44>>2];J[c+92>>2]=J[b+40>>2];J[c+96>>2]=d;d=J[b+36>>2];J[c+84>>2]=J[b+32>>2];J[c+88>>2]=d;d=J[b+60>>2];J[c+108>>2]=J[b+56>>2];J[c+112>>2]=d;d=J[b+52>>2];J[c+100>>2]=J[b+48>>2];J[c+104>>2]=d;b=J[a+12>>2];J[c+124>>2]=J[a+8>>2];J[c+128>>2]=b;b=J[a+4>>2];J[c+116>>2]=J[a>>2];J[c+120>>2]=b;b=J[a+28>>2];J[c+140>>2]=J[a+24>>2];J[c+144>>2]=b;b=J[a+20>>2];J[c+132>>2]=J[a+16>>2];J[c+136>>2]=b;b=J[a+44>>2];J[c+156>>2]=J[a+40>>2];J[c+160>>2]=b;b=J[a+36>>2];J[c+148>>2]=J[a+32>>2];J[c+152>>2]=b;b=J[a+60>>2];J[c+172>>2]=J[a+56>>2];J[c+176>>2]=b;b=J[a+52>>2];J[c+164>>2]=J[a+48>>2];J[c+168>>2]=b;J[c+288>>2]=1065353216;J[c+292>>2]=0;J[c+280>>2]=1065353216;J[c+284>>2]=1060320051;J[c+272>>2]=1065353216;J[c+276>>2]=0;J[c+264>>2]=1065353216;J[c+268>>2]=1060320051;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=1065353216;J[c+220>>2]=1060320051;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=1065353216;J[c+204>>2]=1060320051;J[c+192>>2]=0;J[c+196>>2]=0;J[c+184>>2]=1065353216;J[c+188>>2]=-1082130432;H[c+180|0]=e;J[c+1124>>2]=0;J[c+1116>>2]=0;J[c+1120>>2]=0;H[c+1096|0]=0;J[c+256>>2]=1065353216;J[c+260>>2]=0;J[c+248>>2]=1065353216;J[c+252>>2]=1060320051;J[c+240>>2]=1065353216;J[c+244>>2]=0;J[c+232>>2]=1065353216;J[c+236>>2]=1060320051;J[c+300>>2]=0;a=c+1105|0;H[a|0]=0;H[a+1|0]=0;H[a+2|0]=0;H[a+3|0]=0;H[a+4|0]=0;H[a+5|0]=0;H[a+6|0]=0;H[a+7|0]=0;J[c+1100>>2]=0;J[c+1104>>2]=0;H[c+49|0]=1;vg(c,J[c+28>>2]+4|0,J[c+32>>2]+4|0);ga=f+32|0;return c|0}function Lk(a,b,c,d){H[a+76|0]=1;J[a+72>>2]=0;J[a+68>>2]=c;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=b;H[a+20|0]=1;J[a>>2]=6716;J[a+16>>2]=0;J[a- -64>>2]=0;H[a+60|0]=0;J[a+56>>2]=1025758986;H[a+54|0]=1;I[a+52>>1]=256;J[a+48>>2]=0;H[a+44|0]=1;J[a+36>>2]=1;J[a+40>>2]=1065353216;J[a+8>>2]=0;J[a+12>>2]=0;J[a+100>>2]=1050253722;J[a+104>>2]=1015580809;J[a+92>>2]=1058642330;J[a+96>>2]=1065353216;J[a+88>>2]=0;J[a+80>>2]=0;J[a+84>>2]=0;J[a+124>>2]=1045220557;J[a+128>>2]=1061997773;J[a+108>>2]=0;J[a+112>>2]=10;J[a+168>>2]=1120403456;J[a+172>>2]=1900671690;J[a+164>>2]=128;J[a+156>>2]=260;J[a+160>>2]=2;J[a+148>>2]=0;J[a+152>>2]=1062836634;J[a+140>>2]=-1121724662;J[a+144>>2]=1036831949;J[a+132>>2]=0;J[a+136>>2]=1;J[a+116>>2]=1101004800;J[a+120>>2]=1065353216;H[a+192|0]=1;J[a>>2]=20292;J[a+188>>2]=0;J[a+180>>2]=0;J[a+184>>2]=0;H[a+224|0]=1;J[a+200>>2]=d;J[a+196>>2]=0;J[a+212>>2]=0;J[a+216>>2]=0;J[a+220>>2]=0;H[a+244|0]=1;I[a+274>>1]=0;J[a+240>>2]=0;J[a+248>>2]=0;J[a+252>>2]=-1054867456;J[a+232>>2]=0;J[a+236>>2]=0;J[a+256>>2]=0;J[a+260>>2]=0;J[a+264>>2]=0;J[a+268>>2]=0;H[a+292|0]=1;J[a+296>>2]=0;J[a+288>>2]=0;J[a+280>>2]=0;J[a+284>>2]=0;H[a+320|0]=1;H[a+300|0]=1;J[a+316>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;if(d){c=0}else{J[8369]=J[8369]+1;c=ia[J[6782]](196,16)|0;Wk(c);J[a+200>>2]=c;c=1}H[a+273|0]=c;J[8369]=J[8369]+1;c=ia[J[6782]](68,16)|0;J[c>>2]=20232;J[c+16>>2]=0;H[c+20|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c+36>>2]=0;H[c+40|0]=1;H[c+60|0]=1;J[c+28>>2]=0;J[c+32>>2]=0;J[c+56>>2]=0;H[c+64|0]=1;J[c+48>>2]=0;J[c+52>>2]=0;H[a+272|0]=1;J[a+204>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](88,16)|0;d=J[a+200>>2];H[c+44|0]=1;J[c+24>>2]=b;J[c+20>>2]=0;J[c+12>>2]=0;J[c+16>>2]=0;J[c+8>>2]=d;J[c+4>>2]=0;J[c>>2]=20548;J[c+40>>2]=0;H[c+64|0]=1;J[c+32>>2]=0;J[c+36>>2]=0;J[c+60>>2]=0;H[c+84|0]=1;J[c+52>>2]=0;J[c+56>>2]=0;J[c+80>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;J[a+196>>2]=c}function pz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0);a=J[a+16>>2];e=N[a+900>>2];i=N[a+896>>2];j=N[a+908>>2];k=N[a+912>>2];n=N[a+916>>2];s=N[a+892>>2];f=N[b+52>>2];o=N[b+20>>2];t=N[b+24>>2];g=N[b+56>>2];p=N[b+36>>2];x=N[b+40>>2];h=N[b+48>>2];y=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];q=N[b+16>>2];r=N[b+32>>2];b=ga-128|0;J[b+124>>2]=0;J[b+108>>2]=0;J[b+92>>2]=0;J[b+76>>2]=0;J[b+60>>2]=0;J[b+44>>2]=0;J[b+28>>2]=0;l=Q(n*x);B=Q(s*r);u=Q(k*p);C=Q(B+u);N[b+120>>2]=g+Q(l+C);m=Q(n*t);D=Q(s*q);v=Q(k*o);E=Q(D+v);N[b+116>>2]=f+Q(m+E);r=Q(j*r);u=Q(r+u);N[b+104>>2]=g+Q(l+u);q=Q(j*q);v=Q(q+v);N[b+100>>2]=f+Q(m+v);p=Q(i*p);r=Q(r+p);N[b+88>>2]=g+Q(l+r);o=Q(i*o);q=Q(q+o);N[b+84>>2]=f+Q(m+q);p=Q(B+p);N[b+72>>2]=g+Q(l+p);o=Q(D+o);N[b+68>>2]=f+Q(m+o);l=Q(e*x);N[b+56>>2]=g+Q(l+C);m=Q(e*t);N[b+52>>2]=f+Q(m+E);N[b+40>>2]=g+Q(l+u);N[b+36>>2]=f+Q(m+v);N[b+24>>2]=g+Q(l+r);N[b+20>>2]=f+Q(m+q);J[b+12>>2]=0;n=Q(n*y);s=Q(s*z);k=Q(k*A);t=Q(s+k);N[b+112>>2]=h+Q(n+t);j=Q(j*z);k=Q(j+k);N[b+96>>2]=h+Q(n+k);i=Q(i*A);j=Q(j+i);N[b+80>>2]=h+Q(n+j);i=Q(s+i);N[b+64>>2]=h+Q(n+i);e=Q(e*y);N[b+48>>2]=h+Q(e+t);N[b+32>>2]=h+Q(e+k);N[b+16>>2]=h+Q(e+j);N[b+8>>2]=g+Q(l+p);N[b+4>>2]=f+Q(m+o);N[b>>2]=h+Q(e+i);a=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=a;a=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=a;a=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=a;a=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=a;a=1;while(1){w=b+(a<<4)|0;f=N[w>>2];if(f<N[c>>2]){N[c>>2]=f}g=N[w+4>>2];if(g<N[c+4>>2]){N[c+4>>2]=g}h=N[w+8>>2];if(h<N[c+8>>2]){N[c+8>>2]=h}e=N[w+12>>2];if(e<N[c+12>>2]){N[c+12>>2]=e}if(f>N[d>>2]){N[d>>2]=f}if(g>N[d+4>>2]){N[d+4>>2]=g}if(h>N[d+8>>2]){N[d+8>>2]=h}if(e>N[d+12>>2]){N[d+12>>2]=e}a=a+1|0;if((a|0)!=8){continue}break}}function JG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0);a:{f=K[a+8|0];t=f?b:c;g=J[t+4>>2];if(J[g+4>>2]-21>>>0>8){break a}i=f?c:b;if(J[J[i+4>>2]+4>>2]>19){break a}h=Q(ia[J[J[g>>2]+48>>2]](g));J[e+4>>2]=J[a+76>>2];c=ga+-64|0;ga=c;b=a+12|0;N[b+56>>2]=h;J[b+52>>2]=d;J[b+8>>2]=t;J[b+4>>2]=i;J[b+44>>2]=e;d=J[t+12>>2];u=N[d+52>>2];v=N[d+56>>2];f=J[i+12>>2];w=N[f+52>>2];x=N[f+56>>2];j=N[d+20>>2];k=N[d+36>>2];y=N[f+20>>2];z=N[f+36>>2];A=N[f+24>>2];l=N[d+24>>2];B=N[f+40>>2];m=N[d+40>>2];C=N[f+32>>2];n=N[d+32>>2];D=N[f>>2];o=N[d>>2];E=N[f+16>>2];p=N[d+16>>2];q=N[d+48>>2];F=N[f+48>>2];r=N[d+4>>2];G=N[f+4>>2];H=N[f+8>>2];s=N[d+8>>2];J[c+60>>2]=0;J[c+44>>2]=0;J[c+28>>2]=0;N[c+40>>2]=Q(B*m)+Q(Q(H*s)+Q(l*A));N[c+36>>2]=Q(z*m)+Q(Q(G*s)+Q(l*y));N[c+24>>2]=Q(B*k)+Q(Q(H*r)+Q(j*A));N[c+20>>2]=Q(z*k)+Q(Q(G*r)+Q(j*y));q=Q(-q);N[c+56>>2]=Q(Q(Q(s*q)-Q(l*u))-Q(m*v))+Q(Q(x*m)+Q(Q(F*s)+Q(l*w)));N[c+52>>2]=Q(Q(Q(r*q)-Q(j*u))-Q(k*v))+Q(Q(x*k)+Q(Q(F*r)+Q(j*w)));J[c+12>>2]=0;N[c>>2]=Q(C*n)+Q(Q(D*o)+Q(p*E));N[c+32>>2]=Q(C*m)+Q(Q(D*s)+Q(l*E));N[c+16>>2]=Q(C*k)+Q(Q(D*r)+Q(j*E));N[c+8>>2]=Q(B*n)+Q(Q(H*o)+Q(p*A));N[c+4>>2]=Q(z*n)+Q(Q(G*o)+Q(p*y));N[c+48>>2]=Q(Q(Q(o*q)-Q(p*u))-Q(n*v))+Q(Q(x*n)+Q(Q(F*o)+Q(p*w)));d=J[i+4>>2];ia[J[J[d>>2]+8>>2]](d,c,b+12|0,b+28|0);N[b+28>>2]=N[b+28>>2]+h;N[b+32>>2]=N[b+32>>2]+h;N[b+36>>2]=N[b+36>>2]+h;N[b+12>>2]=N[b+12>>2]-h;N[b+16>>2]=N[b+16>>2]-h;N[b+20>>2]=N[b+20>>2]-h;ga=c- -64|0;c=J[i+8>>2];d=J[a+76>>2];J[d+744>>2]=J[t+8>>2];J[d+740>>2]=c;ia[J[J[g>>2]+64>>2]](g,b,a+24|0,a+40|0);b=J[e+4>>2];if(J[b+748>>2]){d=J[b+740>>2];f=J[J[e+8>>2]+8>>2];c=(d|0)==(f|0);g=b;b=J[J[e+12>>2]+8>>2];ab(g,(c?d:b)+4|0,(c?b:f)+4|0)}J[a+16>>2]=0;J[a+20>>2]=0}}function ik(a,b){var c=0,d=Q(0),e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0);ya(2589);j=J[a+712>>2];a:{if((j|0)<=0){break a}J[8369]=J[8369]+1;c=j<<4;i=ia[J[6782]](c,16)|0;qa(i,0,c);c=J[a+712>>2];if((c|0)<=0){break a}J[8369]=J[8369]+1;c=c<<2;g=ia[J[6782]](c,16)|0;qa(g,0,c)}k=J[a+1112>>2];b:{if(b){if((k|0)<=0){break b}h=J[a+1120>>2];while(1){c=J[h+(e<<2)>>2];f=J[c+312>>2];if(f){d=Q(Q(1)/Q(f|0));N[c+276>>2]=d*N[c+276>>2];N[c+280>>2]=d*N[c+280>>2];N[c+284>>2]=d*N[c+284>>2];N[c+292>>2]=d*N[c+292>>2];N[c+296>>2]=d*N[c+296>>2];N[c+300>>2]=d*N[c+300>>2]}e=e+1|0;if((k|0)!=(e|0)){continue}break}}if((k|0)<=0){break b}x=J[a+720>>2];y=J[a+1120>>2];h=0;z=b?312:308;while(1){c=J[(h<<2)+y>>2];c:{if(J[c+z>>2]<=0){break c}p=J[c+24>>2];if((p|0)<=0){break c}d=N[a+452>>2];e=b?c+276|0:c+244|0;n=Q(d*N[e+8>>2]);o=Q(d*N[e+4>>2]);A=Q(N[e>>2]*d);B=J[c+32>>2];e=b?c+292|0:c+260|0;q=Q(d*N[e+4>>2]);C=Q(-q);r=Q(d*N[e>>2]);D=Q(-r);s=Q(d*N[e+8>>2]);E=Q(-s);F=J[c+12>>2];f=0;while(1){t=f<<2;l=J[t+B>>2];m=N[l+8>>2];G=N[c+228>>2];u=(l-x|0)/104|0;e=(u<<4)+i|0;d=N[F+t>>2];v=Q(N[l+16>>2]-N[c+236>>2]);w=Q(N[l+12>>2]-N[c+232>>2]);N[e>>2]=N[e>>2]+Q(d*Q(A+Q(Q(q*v)+Q(w*E))));m=Q(m-G);N[e+4>>2]=N[e+4>>2]+Q(d*Q(o+Q(Q(s*m)+Q(v*D))));N[e+8>>2]=Q(d*Q(n+Q(Q(r*w)+Q(m*C))))+N[e+8>>2];e=(u<<2)+g|0;N[e>>2]=d+N[e>>2];f=f+1|0;if((p|0)!=(f|0)){continue}break}}h=h+1|0;if((k|0)!=(h|0)){continue}break}}d:{e:{if((j|0)>0){e=J[a+720>>2];a=0;while(1){d=N[(a<<2)+g>>2];if(d>Q(0)){c=(a<<4)+i|0;n=N[c+8>>2];o=N[c+4>>2];b=e+P(a,104)|0;d=Q(Q(1)/d);N[b+8>>2]=Q(d*N[c>>2])+N[b+8>>2];N[b+12>>2]=Q(d*o)+N[b+12>>2];N[b+16>>2]=Q(d*n)+N[b+16>>2]}a=a+1|0;if((j|0)!=(a|0)){continue}break}break e}if(!g){break d}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}xa()}function an(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+36>>2];b=J[a+12>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+40>>2]){c=J[a+44>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+36>>2]}else{e=k}g=J[a+44>>2];c:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break c}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break c}if(g){break c}J[a+44>>2]=c;J[a+40>>2]=b;H[a+48|0]=1;break b}if(g?K[a+48|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+44>>2]=c;H[a+48|0]=1;J[a+40>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+36>>2]=b;i=b<<2;g=J[a+56>>2];if((g|0)<(b|0)){d:{if((b|0)<=J[a+60>>2]){c=J[a- -64>>2];break d}e:{if(!b){c=0;e=g;break e}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+56>>2]}d=J[a- -64>>2];f:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break f}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break f}if(d){break f}J[a+64>>2]=c;J[a+60>>2]=b;H[a+68|0]=1;break d}if(d?K[a+68|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+64>>2]=c;H[a+68|0]=1;J[a+60>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+56>>2]=b;if((b|0)>0){qa(J[a+44>>2],255,i);qa(J[a- -64>>2],255,i)}if((k|0)<=0){break a}e=J[a- -64>>2];g=J[a+16>>2];c=J[a+44>>2];f=0;while(1){b=g+(f<<4)|0;b=J[J[b+4>>2]+12>>2]<<16|J[J[b>>2]+12>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+12>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function VA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0);e=J[a+28>>2];d=J[a+32>>2];c=J[b+8>>2];J[c>>2]=1065353216;p=J[b+24>>2];l=p<<2;v=l+4|0;J[c+v>>2]=1065353216;q=p<<3;w=q+8|0;J[c+w>>2]=1065353216;m=N[e+24>>2];n=N[e+28>>2];o=N[e+40>>2];g=N[a+304>>2];j=N[e+44>>2];f=N[a+308>>2];k=N[e+12>>2];r=N[e+4>>2];s=N[e+8>>2];t=N[e+20>>2];u=N[e+36>>2];i=N[a+300>>2];c=J[b+12>>2];J[c+12>>2]=0;J[c>>2]=0;o=Q(Q(j*f)+Q(Q(u*i)+Q(g*o)));N[c+4>>2]=o;m=Q(Q(n*f)+Q(Q(t*i)+Q(g*m)));N[c+8>>2]=-m;h=c+l|0;J[h+12>>2]=0;n=Q(Q(k*f)+Q(Q(r*i)+Q(s*g)));N[h+8>>2]=n;J[h+4>>2]=0;N[h>>2]=-o;c=c+q|0;J[c+8>>2]=0;J[c+12>>2]=0;N[c+4>>2]=-n;N[c>>2]=m;c=J[b+16>>2];J[c>>2]=-1082130432;J[c+v>>2]=-1082130432;J[c+w>>2]=-1082130432;k=N[d+40>>2];r=N[d+44>>2];j=N[d+24>>2];g=N[a+320>>2];s=N[d+28>>2];f=N[a+324>>2];t=N[d+12>>2];u=N[d+4>>2];x=N[d+8>>2];y=N[d+36>>2];z=N[d+20>>2];i=N[a+316>>2];c=J[b+20>>2];J[c+12>>2]=0;J[c>>2]=0;j=Q(Q(s*f)+Q(Q(z*i)+Q(g*j)));N[c+8>>2]=j;k=Q(Q(r*f)+Q(Q(y*i)+Q(g*k)));N[c+4>>2]=-k;h=c+l|0;J[h+12>>2]=0;g=Q(Q(t*f)+Q(Q(u*i)+Q(x*g)));N[h+8>>2]=-g;J[h+4>>2]=0;N[h>>2]=k;c=c+q|0;J[c+8>>2]=0;J[c+12>>2]=0;N[c+4>>2]=g;N[c>>2]=-j;c=J[b+28>>2];h=J[a+332>>2];f=Q(N[(h&1?a+336|0:b+4|0)>>2]*N[b>>2]);N[c>>2]=f*Q(Q(Q(g+N[d+52>>2])-n)-N[e+52>>2]);N[c+l>>2]=f*Q(Q(Q(j+N[d+56>>2])-m)-N[e+56>>2]);N[c+q>>2]=f*Q(Q(Q(k+N[d+60>>2])-o)-N[e+60>>2]);e=p<<1;if(h&2){d=J[b+32>>2];N[d>>2]=N[a+340>>2];N[d+l>>2]=N[a+340>>2];N[d+(e<<2)>>2]=N[a+340>>2]}f=N[a+356>>2];a:{if(!(f>Q(0))){break a}i=Q(-f);N[J[b+36>>2]>>2]=i;N[J[b+40>>2]>>2]=f;g=N[a+356>>2];if(g>Q(0)){d=p<<2;N[d+J[b+36>>2]>>2]=i;N[d+J[b+40>>2]>>2]=f;g=N[a+356>>2]}if(!(g>Q(0))){break a}e=e<<2;N[e+J[b+36>>2]>>2]=i;N[e+J[b+40>>2]>>2]=f}N[b+52>>2]=N[a+352>>2]}function zC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0);k=ga-16|0;ga=k;ia[J[J[a>>2]+112>>2]](a);J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;m=ia[J[J[a>>2]+88>>2]](a)|0;if(m){p=Q(b/Q(m|0));while(1){m=m-1|0;e=J[J[a+184>>2]+(m<<2)>>2];ia[J[J[e>>2]+32>>2]](e,p,k);a:{if(ia[J[J[a>>2]+92>>2]](a)|0){e=J[a+164>>2]+(m<<6)|0;b=N[e+8>>2];f=N[k+8>>2];j=Q(b*Q(b*f));b=N[e>>2];g=N[k>>2];d=Q(b*Q(b*g));b=N[e+4>>2];i=N[k+4>>2];d=Q(j+Q(d+Q(b*Q(b*i))));b=N[e+52>>2];l=Q(b*b);b=N[e+56>>2];j=Q(b*b);b=Q(d*Q(l+j));h=N[e+40>>2];d=Q(h*Q(f*h));h=N[e+32>>2];n=Q(h*Q(g*h));h=N[e+36>>2];d=Q(d+Q(n+Q(h*Q(i*h))));h=N[e+48>>2];h=Q(h*h);l=Q(d*Q(h+l));d=N[e+24>>2];d=Q(d*Q(f*d));f=N[e+16>>2];g=Q(f*Q(g*f));f=N[e+20>>2];f=Q(Q(d+Q(g+Q(f*Q(i*f))))*Q(h+j));break a}b:{if(H[29512]&1){l=N[7375];f=N[7374];b=N[7376];break b}if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;e=J[7380];J[7362]=J[7379];J[7363]=e;e=J[7384];J[7366]=J[7383];J[7367]=e;e=J[7388];J[7370]=J[7387];J[7371]=e;J[7376]=0;J[7377]=0;e=J[7382];J[7364]=J[7381];J[7365]=e;e=J[7386];J[7368]=J[7385];J[7369]=e;e=J[7390];J[7372]=J[7389];J[7373]=e;l=Q(0);f=Q(0);b=Q(0)}g=N[7372];d=g;g=N[k+8>>2];i=N[7370];n=i;i=N[k>>2];j=N[7371];o=j;j=N[k+4>>2];f=Q(f*f);h=Q(l*l);l=Q(Q(Q(d*Q(d*g))+Q(Q(n*Q(n*i))+Q(o*Q(o*j))))*Q(f+h));d=N[7368];n=Q(d*Q(g*d));d=N[7366];o=Q(d*Q(i*d));d=N[7367];b=Q(b*b);f=Q(Q(n+Q(o+Q(d*Q(j*d))))*Q(f+b));d=N[7364];d=Q(d*Q(d*g));g=N[7362];i=Q(g*Q(g*i));g=N[7363];b=Q(Q(d+Q(i+Q(g*Q(g*j))))*Q(h+b))}J[c+12>>2]=0;N[c+8>>2]=l+N[c+8>>2];N[c+4>>2]=N[c+4>>2]+f;N[c>>2]=N[c>>2]+b;if(m){continue}break}}ia[J[J[a>>2]+116>>2]](a);ga=k+16|0}function dh(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+32>>2];b=J[a+12>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+36>>2]){c=J[a+40>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+32>>2]}else{e=k}g=J[a+40>>2];c:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break c}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break c}if(g){break c}J[a+40>>2]=c;J[a+36>>2]=b;H[a+44|0]=1;break b}if(g?K[a+44|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+40>>2]=c;H[a+44|0]=1;J[a+36>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+32>>2]=b;i=b<<2;g=J[a+52>>2];if((g|0)<(b|0)){d:{if((b|0)<=J[a+56>>2]){c=J[a+60>>2];break d}e:{if(!b){c=0;e=g;break e}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+52>>2]}d=J[a+60>>2];f:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break f}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break f}if(d){break f}J[a+60>>2]=c;J[a+56>>2]=b;H[a- -64|0]=1;break d}if(d?K[a- -64|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+60>>2]=c;H[a+64|0]=1;J[a+56>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+52>>2]=b;if((b|0)>0){qa(J[a+40>>2],255,i);qa(J[a+60>>2],255,i)}if((k|0)<=0){break a}e=J[a+60>>2];g=J[a+16>>2];c=J[a+40>>2];f=0;while(1){b=g+P(f,12)|0;b=J[b+4>>2]<<16|J[b>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+12>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function Gg(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0);J[e>>2]=0;J[e+4>>2]=0;J[e+32>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[f+4>>2]=c;J[f>>2]=a;l=N[d+20>>2];m=N[d+36>>2];h=N[b+20>>2];i=N[b+36>>2];n=N[d+24>>2];o=N[b+24>>2];p=N[d+40>>2];q=N[b+40>>2];j=N[d+32>>2];r=N[d>>2];s=N[d+16>>2];t=N[d+4>>2];u=N[b+32>>2];v=N[b>>2];w=N[b+16>>2];x=N[b+4>>2];y=N[d+8>>2];k=N[b+8>>2];J[f+52>>2]=0;J[f+36>>2]=0;J[f+20>>2]=0;N[f+48>>2]=Q(p*q)+Q(Q(y*k)+Q(o*n));N[f+44>>2]=Q(p*i)+Q(Q(y*x)+Q(h*n));N[f+40>>2]=Q(p*u)+Q(Q(y*v)+Q(w*n));N[f+32>>2]=Q(m*q)+Q(Q(t*k)+Q(o*l));N[f+28>>2]=Q(m*i)+Q(Q(t*x)+Q(h*l));N[f+24>>2]=Q(m*u)+Q(Q(t*v)+Q(w*l));N[f+16>>2]=Q(j*q)+Q(Q(r*k)+Q(s*o));N[f+12>>2]=Q(j*i)+Q(Q(r*x)+Q(s*h));N[f+8>>2]=Q(j*u)+Q(Q(r*v)+Q(s*w));B=N[b+52>>2];C=N[d+52>>2];D=N[b+56>>2];z=N[d+56>>2];l=N[b+20>>2];m=N[b+36>>2];r=N[d+20>>2];s=N[d+36>>2];h=N[b+24>>2];t=N[d+24>>2];i=N[b+40>>2];u=N[d+40>>2];E=N[b+48>>2];A=N[d+48>>2];n=N[b+32>>2];o=N[b>>2];p=N[b+16>>2];q=N[b+4>>2];v=N[d+32>>2];w=N[d>>2];x=N[d+16>>2];y=N[d+4>>2];j=N[b+8>>2];k=N[d+8>>2];J[f+124>>2]=0;J[f+120>>2]=g?766:767;J[f+116>>2]=0;J[f+100>>2]=0;J[f+84>>2]=0;J[f+68>>2]=0;N[f+96>>2]=Q(i*u)+Q(Q(j*k)+Q(t*h));N[f+92>>2]=Q(i*s)+Q(Q(j*y)+Q(r*h));N[f+88>>2]=Q(i*v)+Q(Q(j*w)+Q(x*h));N[f+80>>2]=Q(m*u)+Q(Q(q*k)+Q(t*l));N[f+76>>2]=Q(m*s)+Q(Q(q*y)+Q(r*l));N[f+72>>2]=Q(m*v)+Q(Q(q*w)+Q(x*l));N[f- -64>>2]=Q(n*u)+Q(Q(o*k)+Q(p*t));N[f+60>>2]=Q(n*s)+Q(Q(o*y)+Q(p*r));N[f+56>>2]=Q(n*v)+Q(Q(o*w)+Q(p*x));k=i;i=Q(z-D);z=j;j=Q(A-E);A=h;h=Q(C-B);N[f+112>>2]=Q(k*i)+Q(Q(z*j)+Q(A*h));N[f+108>>2]=Q(m*i)+Q(Q(q*j)+Q(h*l));N[f+104>>2]=Q(n*i)+Q(Q(o*j)+Q(h*p))}function Ng(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a+4>>2]=1065353216;J[a+8>>2]=1065353216;J[a+48>>2]=0;H[a+36|0]=1;J[a+12>>2]=1065353216;J[a+16>>2]=0;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;H[a+100|0]=1;J[a>>2]=16776;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;H[a+160|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;J[a+168>>2]=0;H[a+164|0]=b;J[a+148>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;H[a+165|0]=c;J[8369]=J[8369]+1;f=ia[J[6782]](32,16)|0;h=J[a+24>>2];a:{if((h|0)<=0){break a}if((h|0)!=1){j=h&-2;while(1){e=d<<5;c=f+e|0;b=J[a+32>>2]+e|0;g=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=g;g=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=g;g=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=g;g=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=g;b=e|32;c=b+f|0;b=b+J[a+32>>2]|0;e=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=e;e=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=e;e=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=e;e=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=e;d=d+2|0;i=i+2|0;if((i|0)!=(j|0)){continue}break}}if(!(h&1)){break a}b=d<<5;c=b+f|0;b=b+J[a+32>>2]|0;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=d;d=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=d;d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=f;H[a+36|0]=1;J[a+28>>2]=1;b=f+(J[a+24>>2]<<5)|0;J[b+24>>2]=2;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=16;J[b+8>>2]=12;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;J[a+24>>2]=J[a+24>>2]+1;c=K[a+164|0];f=J[(c?a+128|0:a+148|0)>>2];b=J[a+32>>2];J[b+24>>2]=c?2:3;J[b+4>>2]=0;d=12;J[b+8>>2]=c?12:6;J[b>>2]=(f|0)/3;b:{if(K[a+165|0]){d=16;a=J[a+88>>2];break b}a=J[a+108>>2]/3|0}J[b+20>>2]=d;J[b+16>>2]=0;J[b+12>>2]=a}function rE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0;e=ga-80|0;ga=e;x=Q(ia[J[J[a>>2]+48>>2]](a));while(1){J[e+72>>2]=0;J[e+76>>2]=0;J[e+64>>2]=0;J[e+68>>2]=0;s=t<<2;y=s+(e- -64|0)|0;J[y>>2]=1065353216;i=N[b+32>>2];j=N[b>>2];k=N[b+16>>2];l=N[b+36>>2];m=N[b+4>>2];n=N[b+20>>2];f=N[b+40>>2];g=N[b+8>>2];h=N[b+24>>2];J[e+44>>2]=0;o=f;f=N[e+72>>2];p=g;g=N[e+64>>2];q=h;h=N[e+68>>2];N[e+40>>2]=Q(o*f)+Q(Q(p*g)+Q(q*h));N[e+36>>2]=Q(l*f)+Q(Q(m*g)+Q(h*n));N[e+32>>2]=Q(i*f)+Q(Q(j*g)+Q(k*h));r=e+32|0;ia[J[J[a>>2]+64>>2]](e+48|0,a,r);i=N[b+48>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];m=N[b+52>>2];n=N[b+24>>2];p=N[b+16>>2];q=N[b+20>>2];f=N[b+56>>2];g=N[b+40>>2];h=N[b+32>>2];u=N[b+36>>2];J[e+44>>2]=0;o=f;f=N[e+56>>2];v=Q(g*f);g=N[e+48>>2];w=Q(h*g);h=N[e+52>>2];N[e+40>>2]=o+Q(v+Q(w+Q(u*h)));N[e+36>>2]=m+Q(Q(f*n)+Q(Q(g*p)+Q(h*q)));N[e+32>>2]=i+Q(Q(f*j)+Q(Q(g*k)+Q(h*l)));r=s+r|0;N[d+s>>2]=x+N[r>>2];J[y>>2]=-1082130432;i=N[b+32>>2];j=N[b>>2];k=N[b+16>>2];l=N[b+36>>2];m=N[b+4>>2];n=N[b+20>>2];f=N[b+40>>2];g=N[b+8>>2];h=N[b+24>>2];J[e+12>>2]=0;o=f;f=N[e+72>>2];p=g;g=N[e+64>>2];q=h;h=N[e+68>>2];N[e+8>>2]=Q(o*f)+Q(Q(p*g)+Q(q*h));N[e+4>>2]=Q(l*f)+Q(Q(m*g)+Q(h*n));N[e>>2]=Q(i*f)+Q(Q(j*g)+Q(k*h));ia[J[J[a>>2]+64>>2]](e+16|0,a,e);i=N[b+48>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];m=N[b+52>>2];n=N[b+24>>2];p=N[b+16>>2];q=N[b+20>>2];f=N[b+56>>2];g=N[b+40>>2];h=N[b+32>>2];u=N[b+36>>2];J[e+44>>2]=0;o=f;f=N[e+24>>2];v=Q(g*f);g=N[e+16>>2];w=Q(h*g);h=N[e+20>>2];N[e+40>>2]=o+Q(v+Q(w+Q(u*h)));N[e+36>>2]=m+Q(Q(f*n)+Q(Q(g*p)+Q(h*q)));N[e+32>>2]=i+Q(Q(f*j)+Q(Q(g*k)+Q(h*l)));N[c+s>>2]=N[r>>2]-x;t=t+1|0;if((t|0)!=3){continue}break}ga=e+80|0}function km(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=ga-80|0;ga=d;J[a+68>>2]=J[a+68>>2]+1;c=J[a+64>>2];if(c){Fc(c,J[(J[a+24>>2]+P(b,80)|0)+76>>2])}e=J[a+16>>2];h=P(b,80);g=J[a+24>>2];c=h+g|0;f=c+8|0;i=J[f+4>>2];J[d+8>>2]=J[f>>2];J[d+12>>2]=i;f=J[c+4>>2];J[d>>2]=J[c>>2];J[d+4>>2]=f;f=J[c+28>>2];J[d+24>>2]=J[c+24>>2];J[d+28>>2]=f;f=J[c+20>>2];J[d+16>>2]=J[c+16>>2];J[d+20>>2]=f;f=J[c+44>>2];J[d+40>>2]=J[c+40>>2];J[d+44>>2]=f;f=J[c+36>>2];J[d+32>>2]=J[c+32>>2];J[d+36>>2]=f;f=J[c+60>>2];J[d+56>>2]=J[c+56>>2];J[d+60>>2]=f;f=J[c+52>>2];J[d+48>>2]=J[c+48>>2];J[d+52>>2]=f;f=J[c+76>>2];J[d+72>>2]=J[c+72>>2];J[d+76>>2]=f;f=J[c+68>>2];J[d+64>>2]=J[c+64>>2];J[d+68>>2]=f;f=g;g=P(e,80)-80|0;e=f+g|0;f=J[e+4>>2];J[c>>2]=J[e>>2];J[c+4>>2]=f;f=J[e+12>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=f;f=J[e+20>>2];J[c+16>>2]=J[e+16>>2];J[c+20>>2]=f;f=J[e+28>>2];J[c+24>>2]=J[e+24>>2];J[c+28>>2]=f;f=J[e+44>>2];J[c+40>>2]=J[e+40>>2];J[c+44>>2]=f;f=J[e+36>>2];J[c+32>>2]=J[e+32>>2];J[c+36>>2]=f;f=J[e+52>>2];J[c+48>>2]=J[e+48>>2];J[c+52>>2]=f;f=J[e+60>>2];J[c+56>>2]=J[e+56>>2];J[c+60>>2]=f;f=J[e+76>>2];J[c+72>>2]=J[e+72>>2];J[c+76>>2]=f;f=J[e+68>>2];J[c+64>>2]=J[e+64>>2];J[c+68>>2]=f;e=J[d+4>>2];c=g+J[a+24>>2]|0;J[c>>2]=J[d>>2];J[c+4>>2]=e;e=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=e;e=J[d+20>>2];J[c+16>>2]=J[d+16>>2];J[c+20>>2]=e;e=J[d+28>>2];J[c+24>>2]=J[d+24>>2];J[c+28>>2]=e;e=J[d+36>>2];J[c+32>>2]=J[d+32>>2];J[c+36>>2]=e;e=J[d+44>>2];J[c+40>>2]=J[d+40>>2];J[c+44>>2]=e;e=J[d+52>>2];J[c+48>>2]=J[d+48>>2];J[c+52>>2]=e;e=J[d+60>>2];J[c+56>>2]=J[d+56>>2];J[c+60>>2]=e;e=J[d+68>>2];J[c+64>>2]=J[d+64>>2];J[c+68>>2]=e;e=J[d+76>>2];J[c+72>>2]=J[d+72>>2];J[c+76>>2]=e;if(J[a+64>>2]){J[J[(J[a+24>>2]+h|0)+76>>2]+36>>2]=b}J[a+16>>2]=J[a+16>>2]-1;ga=d+80|0}function dB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+48>>2];N[b+56>>2]=N[a+52>>2];N[b+60>>2]=N[a+56>>2];N[b+64>>2]=N[a+60>>2];N[b+68>>2]=N[a- -64>>2];N[b+72>>2]=N[a+68>>2];N[b+76>>2]=N[a+72>>2];N[b+80>>2]=N[a+76>>2];N[b+84>>2]=N[a+80>>2];N[b+88>>2]=N[a+84>>2];N[b+92>>2]=N[a+88>>2];N[b+96>>2]=N[a+92>>2];N[b+100>>2]=N[a+96>>2];N[b+104>>2]=N[a+100>>2];N[b+108>>2]=N[a+104>>2];N[b+112>>2]=N[a+108>>2];N[b+116>>2]=N[a+112>>2];N[b+120>>2]=N[a+116>>2];N[b+124>>2]=N[a+120>>2];N[b+128>>2]=N[a+124>>2];N[b+132>>2]=N[a+128>>2];N[b+136>>2]=N[a+132>>2];N[b+140>>2]=N[a+136>>2];N[b+144>>2]=N[a+140>>2];N[b+148>>2]=N[a+144>>2];N[b+152>>2]=N[a+148>>2];N[b+156>>2]=N[a+152>>2];N[b+160>>2]=N[a+156>>2];N[b+164>>2]=N[a+160>>2];N[b+168>>2]=N[a+164>>2];N[b+172>>2]=N[a+168>>2];N[b+176>>2]=N[a+172>>2];N[b+228>>2]=N[a+868>>2];N[b+212>>2]=N[a+872>>2];N[b+196>>2]=N[a+680>>2];N[b+180>>2]=N[a+696>>2];N[b+232>>2]=N[a+932>>2];N[b+216>>2]=N[a+936>>2];N[b+200>>2]=N[a+684>>2];N[b+184>>2]=N[a+700>>2];N[b+236>>2]=N[a+996>>2];N[b+220>>2]=N[a+1e3>>2];N[b+204>>2]=N[a+688>>2];N[b+188>>2]=N[a+704>>2];J[b+244>>2]=K[a+1300|0];J[b+248>>2]=K[a+1301|0];N[b+276>>2]=N[a+1316>>2];N[b+324>>2]=N[a+1364>>2];J[b+252>>2]=K[a+1309|0];N[b+300>>2]=N[a+1340>>2];N[b+280>>2]=N[a+1320>>2];N[b+328>>2]=N[a+1368>>2];J[b+256>>2]=K[a+1310|0];N[b+304>>2]=N[a+1344>>2];N[b+284>>2]=N[a+1324>>2];N[b+332>>2]=N[a+1372>>2];J[b+260>>2]=K[a+1311|0];N[b+308>>2]=N[a+1348>>2];N[b+288>>2]=N[a+1328>>2];N[b+336>>2]=N[a+1376>>2];J[b+264>>2]=K[a+1312|0];N[b+312>>2]=N[a+1352>>2];N[b+292>>2]=N[a+1332>>2];N[b+340>>2]=N[a+1380>>2];J[b+268>>2]=K[a+1313|0];N[b+316>>2]=N[a+1356>>2];N[b+296>>2]=N[a+1336>>2];N[b+344>>2]=N[a+1384>>2];J[b+272>>2]=K[a+1314|0];N[b+320>>2]=N[a+1360>>2];return 3310}function Dd(a,b,c){var d=0,e=Q(0),f=Q(0),g=Q(0),h=0;if(!J[a>>2]){J[a>>2]=c;J[c+32>>2]=0;return}d=J[b+40>>2];if(d){f=Q(N[c>>2]+N[c+16>>2]);e=Q(N[c+8>>2]+N[c+24>>2]);g=Q(N[c+4>>2]+N[c+20>>2]);while(1){h=b+36|0;b=J[b+36>>2];b=J[h+(!(Q(Q(Q(R(Q(f-Q(N[b>>2]+N[b+16>>2]))))+Q(R(Q(g-Q(N[b+4>>2]+N[b+20>>2])))))+Q(R(Q(e-Q(N[b+8>>2]+N[b+24>>2])))))<Q(Q(Q(R(Q(f-Q(N[d>>2]+N[d+16>>2]))))+Q(R(Q(g-Q(N[d+4>>2]+N[d+20>>2])))))+Q(R(Q(e-Q(N[d+8>>2]+N[d+24>>2]))))))<<2)>>2];d=J[b+40>>2];if(d){continue}break}}h=J[b+32>>2];d=J[a+4>>2];a:{if(d){J[a+4>>2]=0;break a}J[8369]=J[8369]+1;d=ia[J[6782]](44,16)|0;J[d>>2]=0;J[d+4>>2]=0;J[d+40>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0}J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=h;f=N[c>>2];e=N[b>>2];N[d>>2]=e>f?f:e;f=N[c+16>>2];e=N[b+16>>2];N[d+16>>2]=e<f?f:e;f=N[c+4>>2];e=N[b+4>>2];N[d+4>>2]=e>f?f:e;f=N[c+20>>2];e=N[b+20>>2];N[d+20>>2]=e<f?f:e;f=N[c+8>>2];e=N[b+8>>2];N[d+8>>2]=e>f?f:e;f=N[c+24>>2];e=N[b+24>>2];N[d+24>>2]=e<f?f:e;b:{if(h){J[(((J[J[b+32>>2]+40>>2]==(b|0))<<2)+h|0)+36>>2]=d;J[d+36>>2]=b;J[b+32>>2]=d;J[d+40>>2]=c;J[c+32>>2]=d;f=N[d>>2];while(1){a=d;d=h;c:{if(!(N[d>>2]<=f)|!(N[d+4>>2]<=N[a+4>>2])|(!(N[d+8>>2]<=N[a+8>>2])|!(N[d+16>>2]>=N[a+16>>2]))){break c}if(!(N[d+20>>2]>=N[a+20>>2])){break c}if(N[d+24>>2]>=N[a+24>>2]){break b}}a=J[d+36>>2];f=N[a>>2];b=J[d+40>>2];e=N[b>>2];f=e>f?f:e;N[d>>2]=f;e=N[a+16>>2];g=N[b+16>>2];N[d+16>>2]=e>g?e:g;e=N[a+4>>2];g=N[b+4>>2];N[d+4>>2]=e<g?e:g;e=N[a+20>>2];g=N[b+20>>2];N[d+20>>2]=e>g?e:g;e=N[a+8>>2];g=N[b+8>>2];N[d+8>>2]=e<g?e:g;e=N[a+24>>2];g=N[b+24>>2];N[d+24>>2]=e>g?e:g;h=J[d+32>>2];if(h){continue}break}break b}J[d+36>>2]=b;J[b+32>>2]=d;J[d+40>>2]=c;J[c+32>>2]=d;J[a>>2]=d}}function gg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=J[a+56>>2];a:{if(g){break a}d=J[a+52>>2];b:{if(d){J[a+52>>2]=J[d+8>>2];break b}J[8369]=J[8369]+1;d=ia[J[6782]](12,16)|0;e=J[a+60>>2];J[d+8>>2]=0;J[d+4>>2]=e;J[8369]=J[8369]+1;J[d>>2]=ia[J[6782]](P(e,24),16);J[d+8>>2]=J[a+48>>2];J[a+48>>2]=d}g=J[d>>2];h=J[d+4>>2];if((h|0)<=0){break a}e=g;if(h-1>>>0>=3){m=h&-4;d=g;while(1){e=d+96|0;j=i+4|0;J[d+72>>2]=(h|0)>(j|0)?e:0;J[d+48>>2]=(h|0)>(i|3)?d+72|0:0;J[d+24>>2]=(h|0)>(i|2)?d+48|0:0;J[d>>2]=(h|0)>(i|1)?d+24|0:0;i=j;d=e;f=f+4|0;if((m|0)!=(f|0)){continue}break}}d=h&3;if(!d){break a}while(1){f=e;e=e+24|0;j=j+1|0;J[f>>2]=(h|0)>(j|0)?e:0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}J[a+56>>2]=J[g>>2];J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=0;J[g+4>>2]=0;f=J[a+56>>2];c:{if(f){break c}d=J[a+52>>2];d:{if(d){J[a+52>>2]=J[d+8>>2];break d}J[8369]=J[8369]+1;d=ia[J[6782]](12,16)|0;e=J[a+60>>2];J[d+8>>2]=0;J[d+4>>2]=e;J[8369]=J[8369]+1;J[d>>2]=ia[J[6782]](P(e,24),16);J[d+8>>2]=J[a+48>>2];J[a+48>>2]=d}f=J[d>>2];k=J[d+4>>2];if((k|0)<=0){break c}l=0;j=0;e=f;if(k-1>>>0>=3){m=k&-4;i=0;d=f;h=0;while(1){e=d+96|0;j=i+4|0;J[d+72>>2]=(k|0)>(j|0)?e:0;J[d+48>>2]=(i|3)<(k|0)?d+72|0:0;J[d+24>>2]=(i|2)<(k|0)?d+48|0:0;J[d>>2]=(i|1)<(k|0)?d+24|0:0;i=j;d=e;h=h+4|0;if((m|0)!=(h|0)){continue}break}}d=k&3;if(!d){break c}while(1){i=e;e=e+24|0;j=j+1|0;J[i>>2]=(k|0)>(j|0)?e:0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}J[a+56>>2]=J[f>>2];J[f+16>>2]=0;J[f+20>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;J[g+8>>2]=f;J[f+8>>2]=g;e=J[a+100>>2];J[g+20>>2]=e;J[f+20>>2]=e;J[g+12>>2]=c;J[f+12>>2]=b;J[g+16>>2]=0;J[f+16>>2]=0;c=J[a+116>>2];b=c+1|0;J[a+116>>2]=b;if((c|0)>=J[a+120>>2]){J[a+120>>2]=b}return g}function Sm(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+4>>2];b=J[a+48>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+8>>2]){c=J[a+12>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+4>>2]}else{e=k}g=J[a+12>>2];c:{d:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break d}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break d}if(g){break d}break c}if(g?K[a+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[a+12>>2]=c;H[a+16|0]=1;J[a+8>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+4>>2]=b;i=b<<2;g=J[a+24>>2];if((g|0)<(b|0)){e:{if((b|0)<=J[a+28>>2]){c=J[a+32>>2];break e}f:{if(!b){c=0;e=g;break f}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+24>>2]}d=J[a+32>>2];g:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break g}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break g}if(d){break g}J[a+32>>2]=c;J[a+28>>2]=b;H[a+36|0]=1;break e}if(d?K[a+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+32>>2]=c;H[a+36|0]=1;J[a+28>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+24>>2]=b;if((b|0)>0){qa(J[a+12>>2],255,i);qa(J[a+32>>2],255,i)}if((k|0)<=0){break a}e=J[a+32>>2];g=J[a+72>>2];c=J[a+12>>2];f=0;while(1){b=J[g+(f<<3)>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+48>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function kg(a){var b=0,c=0,d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0);h=J[a+752>>2];if((h|0)>0){l=J[a+760>>2];while(1){b=l+P(g,44)|0;e=J[b+12>>2];c=J[b+8>>2];f=N[c+8>>2];m=Q(N[e+8>>2]-f);d=J[b+16>>2];i=N[c+12>>2];j=Q(N[d+12>>2]-i);n=Q(N[d+8>>2]-f);i=Q(N[e+12>>2]-i);f=Q(Q(m*j)-Q(n*i));o=Q(f*f);p=i;f=N[c+16>>2];i=Q(N[d+16>>2]-f);f=Q(N[e+16>>2]-f);j=Q(Q(p*i)-Q(j*f));f=Q(Q(f*n)-Q(i*m));N[b+36>>2]=Y(Q(o+Q(Q(j*j)+Q(f*f))));g=g+1|0;if((h|0)!=(g|0)){continue}break}}e=J[a+712>>2];a:{if((e|0)<=0){g=0;break a}b=0;J[8369]=J[8369]+1;e=e<<2;g=ia[J[6782]](e,16)|0;qa(g,0,e);e=J[a+712>>2];if((e|0)<=0){break a}c=J[a+720>>2];if(e-1>>>0>=7){h=e&-8;d=0;while(1){J[(c+P(b,104)|0)+92>>2]=0;J[(c+P(b|1,104)|0)+92>>2]=0;J[(c+P(b|2,104)|0)+92>>2]=0;J[(c+P(b|3,104)|0)+92>>2]=0;J[(c+P(b|4,104)|0)+92>>2]=0;J[(c+P(b|5,104)|0)+92>>2]=0;J[(c+P(b|6,104)|0)+92>>2]=0;J[(c+P(b|7,104)|0)+92>>2]=0;b=b+8|0;d=d+8|0;if((h|0)!=(d|0)){continue}break}}h=e&7;if(!h){break a}d=0;while(1){J[(c+P(b,104)|0)+92>>2]=0;b=b+1|0;d=d+1|0;if((h|0)!=(d|0)){continue}break}}h=J[a+752>>2];if((h|0)>0){b=J[a+720>>2];l=J[a+760>>2];e=0;while(1){c=P(e,44)+l|0;f=N[c+36>>2];d=J[c+8>>2];k=((d-b|0)/104<<2)+g|0;J[k>>2]=J[k>>2]+1;f=Q(R(f));N[d+92>>2]=N[d+92>>2]+f;d=J[c+12>>2];k=((d-b|0)/104<<2)+g|0;J[k>>2]=J[k>>2]+1;N[d+92>>2]=N[d+92>>2]+f;c=J[c+16>>2];d=((c-b|0)/104<<2)+g|0;J[d>>2]=J[d>>2]+1;N[c+92>>2]=N[c+92>>2]+f;e=e+1|0;if((h|0)!=(e|0)){continue}break}e=J[a+712>>2]}b:{c:{if((e|0)>0){a=J[a+720>>2];b=0;while(1){c=J[(b<<2)+g>>2];d:{if((c|0)>0){d=a+P(b,104)|0;N[d+92>>2]=N[d+92>>2]/Q(c|0);break d}J[(a+P(b,104)|0)+92>>2]=0}b=b+1|0;if((e|0)!=(b|0)){continue}break}break c}if(!g){break b}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}}function aH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0;c=ga-96|0;ga=c;e=N[a+76>>2];i=N[a+36>>2];f=N[a+32>>2];j=N[a+80>>2];n=N[a+52>>2];o=N[a+44>>2];p=N[a+48>>2];k=N[a+84>>2];q=N[a+68>>2];w=N[a+60>>2];x=N[a- -64>>2];y=N[a+28>>2];l=N[b+8>>2];g=N[b>>2];h=N[b+4>>2];J[c+92>>2]=0;u=Q(k+Q(Q(l*q)+Q(Q(g*w)+Q(h*x))));N[c+88>>2]=u;v=Q(j+Q(Q(l*n)+Q(Q(g*o)+Q(h*p))));N[c+84>>2]=v;l=Q(e+Q(Q(l*i)+Q(Q(g*y)+Q(h*f))));N[c+80>>2]=l;g=N[b+20>>2];h=N[b+24>>2];m=N[b+16>>2];J[c+76>>2]=0;z=Q(k+Q(Q(h*q)+Q(Q(m*w)+Q(x*g))));N[c+72>>2]=z;r=Q(j+Q(Q(h*n)+Q(Q(m*o)+Q(p*g))));N[c+68>>2]=r;s=Q(e+Q(Q(h*i)+Q(Q(m*y)+Q(f*g))));N[c+64>>2]=s;g=N[b+36>>2];h=N[b+40>>2];m=N[b+32>>2];J[c+60>>2]=0;k=Q(k+Q(Q(h*q)+Q(Q(m*w)+Q(x*g))));N[c+56>>2]=k;j=Q(j+Q(Q(h*n)+Q(Q(m*o)+Q(p*g))));N[c+52>>2]=j;e=Q(e+Q(Q(h*i)+Q(Q(m*y)+Q(f*g))));N[c+48>>2]=e;J[c+44>>2]=0;n=Q(Q(Q(u+z)+k)*Q(.3333333432674408));N[c+40>>2]=n;o=Q(Q(Q(v+r)+j)*Q(.3333333432674408));N[c+36>>2]=o;p=Q(Q(Q(l+s)+e)*Q(.3333333432674408));N[c+32>>2]=p;b=J[a+8>>2];if(ia[J[J[b>>2]+48>>2]](b)&16384){J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=1065353216;J[c+20>>2]=1065353216;b=J[a+8>>2];J[c+12>>2]=0;i=Q(s-l);f=Q(j-v);j=Q(e-l);q=Q(r-v);e=Q(Q(i*f)-Q(j*q));s=e;r=Q(e*e);k=Q(k-u);e=f;f=Q(z-u);e=Q(Q(q*k)-Q(e*f));i=Q(Q(f*j)-Q(k*i));f=Q(Q(1)/Q(Y(Q(r+Q(Q(e*e)+Q(i*i))))));N[c+8>>2]=Q(s*f)+n;N[c+4>>2]=Q(i*f)+o;N[c>>2]=p+Q(e*f);ia[J[J[b>>2]+8>>2]](b,c+32|0,c,c+16|0)}d=J[a+8>>2];A=c+80|0;t=c- -64|0;b=a+12|0;ia[J[J[d>>2]+8>>2]](d,A,t,b);d=J[a+8>>2];B=t;t=c+48|0;ia[J[J[d>>2]+8>>2]](d,B,t,b);a=J[a+8>>2];ia[J[J[a>>2]+8>>2]](a,t,A,b);ga=c+96|0}function en(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);e=ga-48|0;ga=e;f=J[c+12>>2];J[e+24>>2]=J[c+8>>2];J[e+28>>2]=f;f=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=f;f=J[d+12>>2];J[e+40>>2]=J[d+8>>2];J[e+44>>2]=f;f=J[d+4>>2];J[e+32>>2]=J[d>>2];J[e+36>>2]=f;a:{if(J[b+60>>2]==2){Fc(a- -64|0,J[b+48>>2]);J[b+48>>2]=Db(a+4|0,e+16|0,b);h=1;break a}h=1;J[a+168>>2]=J[a+168>>2]+1;b:{f=J[b+48>>2];if(!(N[f>>2]<=N[e+32>>2])|!(N[f+16>>2]>=N[e+16>>2])|(!(N[f+4>>2]<=N[e+36>>2])|!(N[f+20>>2]>=N[e+20>>2]))){break b}if(!(N[f+8>>2]<=N[e+40>>2])|!(N[f+24>>2]>=N[e+24>>2])){break b}k=N[b+20>>2];l=N[b+24>>2];n=N[c>>2];o=N[c+4>>2];p=N[c+8>>2];m=N[b+16>>2];i=N[b+36>>2];j=N[b+40>>2];q=N[b+32>>2];g=N[a+140>>2];J[e+12>>2]=0;j=Q(g*Q(Q(j-l)*Q(.5)));N[e+8>>2]=j;i=Q(g*Q(Q(i-k)*Q(.5)));N[e+4>>2]=i;g=Q(g*Q(Q(q-m)*Q(.5)));N[e>>2]=g;if(Q(n-m)<Q(0)){N[e>>2]=-g}if(Q(o-k)<Q(0)){N[e+4>>2]=-i}if(Q(p-l)<Q(0)){N[e+8>>2]=-j}h=Cd(a+4|0,f,e+16|0,e,Q(.05000000074505806));if(!h){break a}J[a+172>>2]=J[a+172>>2]+1;break a}Gc(a+4|0,f,e+16|0);J[a+172>>2]=J[a+172>>2]+1}f=J[b+52>>2];J[(f?f+56|0:((J[b+60>>2]<<2)+a|0)+124|0)>>2]=J[b+56>>2];f=J[b+56>>2];if(f){J[f+52>>2]=J[b+52>>2]}f=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=f;f=J[c+12>>2];J[b+24>>2]=J[c+8>>2];J[b+28>>2]=f;c=J[d+4>>2];J[b+32>>2]=J[d>>2];J[b+36>>2]=c;c=J[d+12>>2];J[b+40>>2]=J[d+8>>2];J[b+44>>2]=c;c=J[a+144>>2];J[b+60>>2]=c;J[b+52>>2]=0;c=(c<<2)+a|0;J[b+56>>2]=J[c+124>>2];d=J[c+124>>2];if(d){J[d+52>>2]=b}J[c+124>>2]=b;c:{if(!h){break c}H[a+194|0]=1;if(K[a+193|0]){break c}J[e>>2]=5764;J[e+4>>2]=a;c=a- -64|0;cf(c,J[c>>2],J[b+48>>2],e);cf(a+4|0,J[a+4>>2],J[b+48>>2],e)}ga=e+48|0}function hk(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);l=N[e+40>>2];m=N[e+24>>2];j=N[e+36>>2];k=N[e+20>>2];g=N[f+4>>2];o=N[e+8>>2];r=N[e+4>>2];s=N[e+32>>2];h=N[f>>2];t=N[e>>2];i=N[f+8>>2];v=N[e+16>>2];J[a+44>>2]=0;J[a+28>>2]=0;J[a+12>>2]=0;w=Q(Q(s*g)+Q(Q(t*Q(0))-Q(v*i)));x=Q(Q(j*g)+Q(Q(r*Q(0))-Q(k*i)));y=Q(Q(l*g)+Q(Q(o*Q(0))-Q(m*i)));n=Q(Q(d-Q(Q(Q(w*Q(0))+Q(i*x))-Q(g*y)))+c);z=Q(Q(Q(o*i)+Q(m*Q(0)))-Q(l*h));A=Q(Q(Q(r*i)+Q(k*Q(0)))-Q(j*h));B=Q(Q(Q(t*i)+Q(v*Q(0)))-Q(s*h));q=Q(Q(d-Q(Q(h*z)+Q(Q(A*Q(0))-Q(i*B))))+c);p=Q(Q(Q(0)-Q(Q(y*Q(0))+Q(Q(g*w)-Q(x*h))))+Q(0));u=Q(Q(Q(0)-Q(Q(Q(B*Q(0))+Q(i*A))-Q(g*z)))+Q(0));o=Q(Q(l*Q(0))+Q(Q(h*m)-Q(o*g)));j=Q(Q(j*Q(0))+Q(Q(h*k)-Q(r*g)));k=Q(Q(s*Q(0))+Q(Q(h*v)-Q(t*g)));l=Q(Q(Q(0)-Q(Q(h*o)+Q(Q(j*Q(0))-Q(i*k))))+Q(0));m=Q(Q(Q(0)-Q(Q(Q(k*Q(0))+Q(i*j))-Q(g*o)))+Q(0));r=Q(Q(u*l)-Q(m*q));j=Q(Q(d-Q(Q(o*Q(0))+Q(Q(g*k)-Q(j*h))))+c);g=Q(Q(Q(0)-Q(Q(z*Q(0))+Q(Q(g*B)-Q(A*h))))+Q(0));k=Q(Q(q*j)-Q(l*g));d=Q(Q(Q(0)-Q(Q(h*y)+Q(Q(x*Q(0))-Q(i*w))))+Q(0));h=Q(Q(g*m)-Q(j*u));c=Q(Q(1)/Q(Q(p*r)+Q(Q(n*k)+Q(d*h))));i=Q(Q(Q(n*q)-Q(u*d))*c);b=Q(Q(1)/b);q=Q(Q(Q(d*g)-Q(q*p))*c);o=Q(q*Q(0));g=Q(Q(Q(p*u)-Q(g*n))*c);s=Q(g*Q(0));N[a+40>>2]=Q(i*b)+Q(o+s);t=Q(Q(Q(d*m)-Q(l*n))*c);d=Q(Q(Q(p*l)-Q(j*d))*c);l=Q(d*Q(0));n=Q(Q(Q(n*j)-Q(m*p))*c);p=Q(n*Q(0));N[a+36>>2]=Q(t*b)+Q(l+p);m=Q(r*c);j=Q(k*c);k=Q(j*Q(0));c=Q(h*c);h=Q(c*Q(0));N[a+32>>2]=Q(m*b)+Q(k+h);i=Q(i*Q(0));N[a+24>>2]=i+Q(o+Q(b*g));g=Q(t*Q(0));N[a+20>>2]=g+Q(l+Q(b*n));n=Q(m*Q(0));N[a+16>>2]=n+Q(k+Q(b*c));N[a+8>>2]=i+Q(Q(q*b)+s);N[a+4>>2]=g+Q(Q(d*b)+p);N[a>>2]=n+Q(Q(j*b)+h)}function lp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;a=J[g+8>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2]+708;J[h+8>>2]=a;a=J[h+8>>2];b=ga-128|0;ga=b;J[b+124>>2]=J[h+12>>2];J[b+120>>2]=a;k=J[b+124>>2];a=ga-16|0;J[a+12>>2]=J[b+120>>2];J[b+116>>2]=J[J[a+12>>2]+4>>2];c=J[b+116>>2];e=b+8|0;qa(e,0,104);d=ga-16|0;ga=d;J[d+12>>2]=e;a=J[d+12>>2];vh(a);J[(ga-16|0)+12>>2]=a+8;J[(ga-16|0)+12>>2]=a+24;J[(ga-16|0)+12>>2]=a+40;J[(ga-16|0)+12>>2]=a+56;J[(ga-16|0)+12>>2]=a+72;ga=d+16|0;a=ga-32|0;ga=a;J[a+28>>2]=k;J[a+24>>2]=c;J[a+20>>2]=e;d=ga-16|0;i=J[a+28>>2];J[d+12>>2]=i;J[a+16>>2]=J[J[d+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}d=J[a+24>>2];e=ga-16|0;J[e+12>>2]=i;if(J[J[e+12>>2]+4>>2]<(d|0)){e=J[a+24>>2];d=ga-16|0;ga=d;J[d+12>>2]=i;J[d+8>>2]=e;c=ga-16|0;e=J[d+12>>2];J[c+12>>2]=e;if(J[J[c+12>>2]+8>>2]<J[d+8>>2]){f=J[d+8>>2];c=ga-16|0;ga=c;J[c+8>>2]=e;J[c+4>>2]=f;j=J[c+8>>2];b:{if(J[c+4>>2]){l=J[c+4>>2];f=ga-16|0;ga=f;J[f+12>>2]=j;J[f+8>>2]=l;J[f+4>>2]=0;j=P(J[f+8>>2],104);J[8369]=J[8369]+1;j=ia[J[6782]](j,16)|0;ga=f+16|0;J[c+12>>2]=j;break b}J[c+12>>2]=0}ga=c+16|0;J[d+4>>2]=J[c+12>>2];c=ga-16|0;J[c+12>>2]=e;wh(e,J[J[c+12>>2]+4>>2],J[d+4>>2]);c=ga-16|0;J[c+12>>2]=e;Eb(e,J[J[c+12>>2]+4>>2]);lb(e);H[e+16|0]=1;J[e+12>>2]=J[d+4>>2];J[e+8>>2]=J[d+8>>2]}ga=d+16|0}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){sa(J[i+12>>2]+P(J[a+8>>2],104)|0,J[a+20>>2],104);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[i+4>>2]=J[a+24>>2];ga=a+32|0;wh(J[b+120>>2],J[b+116>>2],J[k+12>>2]);ga=b+128|0;ga=h+16|0;ga=g+16|0}function UG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=0;a=ga-608|0;ga=a;g=Q(N[b+124>>2]-N[b+60>>2]);h=Q(g*g);g=Q(N[b+116>>2]-N[b+52>>2]);f=Q(g*g);g=Q(N[b+120>>2]-N[b+56>>2]);f=Q(h+Q(f+Q(g*g)));g=N[b+252>>2];a:{b:{if(f<Q(g*g)){g=Q(1);f=Q(N[c+124>>2]-N[c+60>>2]);l=Q(f*f);f=Q(N[c+116>>2]-N[c+52>>2]);h=Q(f*f);f=Q(N[c+120>>2]-N[c+56>>2]);h=Q(l+Q(h+Q(f*f)));f=N[c+252>>2];if(h<Q(f*f)){break a}if(!K[29589]){break b}break a}g=Q(1);if(K[29589]){break a}}e=J[b+192>>2];g=N[c+248>>2];d=a+552|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[a+596>>2]=g;N[a+580>>2]=g;J[a+556>>2]=8;J[a+552>>2]=16132;J[a+548>>2]=0;J[a+540>>2]=1566444395;J[a+544>>2]=0;J[a+376>>2]=6804;H[a+348|0]=0;J[a+324>>2]=953267991;J[a+12>>2]=d;J[a+8>>2]=e;J[a+4>>2]=a+16;J[a>>2]=18356;e=b+4|0;i=b+68|0;j=c+4|0;k=c+68|0;g=Q(1);c:{if(!Hg(a,e,i,j,k,a+376|0)){break c}f=N[a+540>>2];if(f<N[b+244>>2]){N[b+244>>2]=f}if(f<N[c+244>>2]){N[c+244>>2]=f}g=Q(1);if(!(f<Q(1))){break c}g=f}m=J[c+192>>2];f=N[b+248>>2];d=a+552|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[a+596>>2]=f;N[a+580>>2]=f;J[a+556>>2]=8;J[a+552>>2]=16132;J[a+548>>2]=0;J[a+540>>2]=1566444395;J[a+544>>2]=0;J[a+376>>2]=6804;H[a+348|0]=0;J[a+324>>2]=953267991;J[a+12>>2]=m;J[a+8>>2]=d;J[a+4>>2]=a+16;J[a>>2]=18356;d:{if(!Hg(a,e,i,j,k,a+376|0)){break d}f=N[a+540>>2];if(f<N[b+244>>2]){N[b+244>>2]=f}if(f<N[c+244>>2]){N[c+244>>2]=f}if(!(f<g)){break d}g=f}}ga=a+608|0;return Q(g)}
  function lg(a){var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0);c=J[a+712>>2];a:{if((c|0)<=0){break a}if(c-1>>>0>=3){k=c&-4;while(1){b=J[a+720>>2]+P(d,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|1,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|2,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|3,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;d=d+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}b=c&3;if(!b){break a}while(1){c=J[a+720>>2]+P(d,104)|0;J[c+72>>2]=0;J[c+76>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;d=d+1|0;e=e+1|0;if((b|0)!=(e|0)){continue}break}}l=J[a+752>>2];if((l|0)>0){k=0;while(1){b=J[a+760>>2]+P(k,44)|0;d=J[b+12>>2];h=N[d+12>>2];e=J[b+8>>2];i=N[e+12>>2];c=J[b+16>>2];j=N[c+12>>2];p=N[d+16>>2];n=N[c+8>>2];f=N[e+16>>2];o=N[c+16>>2];g=N[e+8>>2];m=N[d+8>>2];J[b+32>>2]=0;m=Q(m-g);j=Q(j-i);g=Q(n-g);h=Q(h-i);i=Q(Q(m*j)-Q(g*h));n=h;h=Q(o-f);o=j;j=Q(p-f);f=Q(Q(n*h)-Q(o*j));g=Q(Q(j*g)-Q(h*m));h=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(f*f)+Q(g*g))))));N[b+28>>2]=i*h;N[b+24>>2]=g*h;N[b+20>>2]=f*h;N[e+80>>2]=i+N[e+80>>2];N[e+76>>2]=g+N[e+76>>2];N[e+72>>2]=f+N[e+72>>2];N[d+72>>2]=f+N[d+72>>2];N[d+76>>2]=g+N[d+76>>2];N[d+80>>2]=i+N[d+80>>2];N[c+72>>2]=f+N[c+72>>2];N[c+76>>2]=g+N[c+76>>2];N[c+80>>2]=i+N[c+80>>2];k=k+1|0;if((l|0)!=(k|0)){continue}break}}d=J[a+712>>2];if((d|0)>0){c=J[a+720>>2];e=0;while(1){a=c+P(e,104)|0;i=N[a+80>>2];f=N[a+72>>2];g=N[a+76>>2];h=Q(Y(Q(Q(i*i)+Q(Q(f*f)+Q(g*g)))));if(h>Q(1.1920928955078125e-7)){j=f;f=Q(Q(1)/h);N[a+72>>2]=j*f;N[a+76>>2]=g*f;N[a+80>>2]=i*f}e=e+1|0;if((d|0)!=(e|0)){continue}break}}}function Ks(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=Q(0),e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);g=ga-16|0;ga=g;J[g+12>>2]=a;N[g+8>>2]=b;N[g+4>>2]=c;a=J[g+12>>2];v=N[g+4>>2];h=ga-16|0;ga=h;N[h+12>>2]=N[g+8>>2];c=N[a+692>>2];a:{if(!(c>Q(0))){break a}d=N[a+688>>2];b=Pa(Q(N[h+12>>2]-d),Q(6.2831854820251465));b:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break b}if(!(b>Q(3.1415927410125732))){break b}b=Q(b+Q(-6.2831854820251465))}if(Q(-c)>b?0:b<=c){break a}c:{if(b>Q(0)){b=Pa(Q(c+d),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break c}if(!(b>Q(3.1415927410125732))){break c}b=Q(b+Q(-6.2831854820251465));break c}b=Pa(Q(d-c),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break c}if(!(b>Q(3.1415927410125732))){break c}b=Q(b+Q(-6.2831854820251465))}N[h+12>>2]=b}e=J[a+32>>2];b=N[a+652>>2];c=N[a+620>>2];d=N[a+636>>2];m=Q(Q(N[e+44>>2]*b)+Q(Q(N[e+36>>2]*c)+Q(d*N[e+40>>2])));f=J[a+28>>2];n=N[f+44>>2];i=N[a+584>>2];o=N[f+36>>2];j=N[a+552>>2];k=N[a+568>>2];p=N[f+40>>2];w=Q(m*Q(Q(n*i)+Q(Q(o*j)+Q(k*p))));q=Q(Q(N[e+12>>2]*b)+Q(Q(N[e+4>>2]*c)+Q(d*N[e+8>>2])));r=N[f+12>>2];s=N[f+4>>2];t=N[f+8>>2];x=Q(q*Q(Q(r*i)+Q(Q(s*j)+Q(k*t))));u=N[f+28>>2];l=Q(u*i);i=N[f+20>>2];y=Q(i*j);j=N[f+24>>2];l=Q(l+Q(y+Q(k*j)));k=Q(Q(N[e+28>>2]*b)+Q(Q(N[e+20>>2]*c)+Q(d*N[e+24>>2])));b=N[a+588>>2];c=N[a+556>>2];d=N[a+572>>2];N[a+680>>2]=Q(N[h+12>>2]-Q($a(Q(w+Q(x+Q(l*k))),Q(Q(m*Q(Q(n*b)+Q(Q(o*c)+Q(p*d))))+Q(Q(q*Q(Q(r*b)+Q(Q(s*c)+Q(t*d))))+Q(Q(Q(u*b)+Q(Q(i*c)+Q(j*d)))*k))))*N[a+732>>2]))/v;ga=h+16|0;ga=g+16|0}function HA(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0);if(K[a+48|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=4;J[b+4>>2]=2;vg(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);H[a+297|0]=0;J[a+1088>>2]=0;e=N[a+192>>2];f=N[a+196>>2];a:{if(!(e<=f)){break a}c=N[a+924>>2];d=N[a+892>>2];g=N[a+908>>2];d=$a(Q(Q(c*N[a+864>>2])+Q(Q(d*N[a+832>>2])+Q(N[a+848>>2]*g))),Q(Q(c*N[a+860>>2])+Q(Q(d*N[a+828>>2])+Q(N[a+844>>2]*g))));b:{if(e>=f){break b}if(d<e){c=Pa(Q(e-d),Q(6.2831854820251465));c:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break c}if(!(c>Q(3.1415927410125732))){break c}c=Q(c+Q(-6.2831854820251465))}g=Q(R(c));c=Pa(Q(f-d),Q(6.2831854820251465));d:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break d}if(!(c>Q(3.1415927410125732))){break d}c=Q(c+Q(-6.2831854820251465))}d=g<Q(R(c))?d:Q(d+Q(6.2831854820251465));break b}if(!(d>f)){break b}c=Pa(Q(d-f),Q(6.2831854820251465));e:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break e}if(!(c>Q(3.1415927410125732))){break e}c=Q(c+Q(-6.2831854820251465))}g=Q(R(c));c=Pa(Q(d-e),Q(6.2831854820251465));f:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break f}if(!(c>Q(3.1415927410125732))){break f}c=Q(c+Q(-6.2831854820251465))}d=g>Q(R(c))?Q(d+Q(-6.2831854820251465)):d}N[a+1084>>2]=d;if(!(d<e)){e=f;if(!(e<d)){break a}}H[a+297|0]=1;N[a+1088>>2]=d-e}H[a+296|0]=0;c=N[a+1032>>2];N[a+1080>>2]=c;g:{h:{i:{e=N[a+188>>2];f=N[a+184>>2];if(e>=f){if(c>e){break i}e=f;if(c<e){break i}}J[a+1032>>2]=0;if(K[a+1096|0]){break h}break g}H[a+296|0]=1;N[a+1032>>2]=c-e}J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(K[a+297|0]|K[a+1112|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function AE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);a:{if((d|0)<=0){break a}i=d-1|0;if(i>>>0>=7){l=d&-8;while(1){g=e<<4;J[(g+c|0)+12>>2]=-581039253;J[((g|16)+c|0)+12>>2]=-581039253;J[((g|32)+c|0)+12>>2]=-581039253;J[((g|48)+c|0)+12>>2]=-581039253;J[((g|64)+c|0)+12>>2]=-581039253;J[((g|80)+c|0)+12>>2]=-581039253;J[((g|96)+c|0)+12>>2]=-581039253;J[((g|112)+c|0)+12>>2]=-581039253;e=e+8|0;f=f+8|0;if((l|0)!=(f|0)){continue}break}}f=d&7;if(f){while(1){J[((e<<4)+c|0)+12>>2]=-581039253;e=e+1|0;h=h+1|0;if((f|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}g=0;f=J[a+96>>2];if((f|0)>0){while(1){i=g<<4;b:{if((f|0)<=0){k=Q(-0xde0b6b000000000);break b}e=b+i|0;o=N[a+20>>2];m=Q(N[e+8>>2]*o);p=N[a+16>>2];n=Q(N[e+4>>2]*p);q=N[a+12>>2];s=Q(N[e>>2]*q);l=J[a+104>>2];e=0;h=-1;k=Q(-3.4028234663852886e38);while(1){j=l+(e<<4)|0;r=Q(Q(N[j+8>>2]*m)+Q(Q(N[j>>2]*s)+Q(n*N[j+4>>2])));j=r>k;k=j?r:k;h=j?e:h;e=e+1|0;if((f|0)!=(e|0)){continue}break}e=l+(h<<4)|0;m=N[e>>2];n=N[e+4>>2];f=c+i|0;N[f+8>>2]=N[e+8>>2]*o;N[f+4>>2]=n*p;N[f>>2]=m*q}N[(c+i|0)+12>>2]=k;g=g+1|0;if((g|0)==(d|0)){break a}f=J[a+96>>2];continue}}h=0;e=0;if(i>>>0>=7){b=d&-8;f=0;while(1){a=e<<4;J[(a+c|0)+12>>2]=-581039253;J[((a|16)+c|0)+12>>2]=-581039253;J[((a|32)+c|0)+12>>2]=-581039253;J[((a|48)+c|0)+12>>2]=-581039253;J[((a|64)+c|0)+12>>2]=-581039253;J[((a|80)+c|0)+12>>2]=-581039253;J[((a|96)+c|0)+12>>2]=-581039253;J[((a|112)+c|0)+12>>2]=-581039253;e=e+8|0;f=f+8|0;if((b|0)!=(f|0)){continue}break}}a=d&7;if(!a){break a}while(1){J[((e<<4)+c|0)+12>>2]=-581039253;e=e+1|0;h=h+1|0;if((a|0)!=(h|0)){continue}break}}}function yy(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0);a=ga-160|0;ga=a;a:{b:{switch((J[b+388>>2]&15)-1|0){case 0:J[a>>2]=21352;e=J[c+12>>2];f=N[e+56>>2];g=N[e+52>>2];i=J[c+8>>2];j=J[i+236>>2];h=N[e+48>>2];e=J[b+192>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));e=J[c+4>>2];ia[J[J[e>>2]+8>>2]](e,J[c+12>>2],a+144|0,a+128|0);e=J[a+156>>2];J[a+104>>2]=J[a+152>>2];J[a+108>>2]=e;e=J[a+132>>2];J[a+112>>2]=J[a+128>>2];J[a+116>>2]=e;e=J[a+140>>2];J[a+120>>2]=J[a+136>>2];J[a+124>>2]=e;N[a+104>>2]=N[a+104>>2]-d;N[a+112>>2]=d+N[a+112>>2];e=J[a+148>>2];J[a+96>>2]=J[a+144>>2];J[a+100>>2]=e;N[a+96>>2]=N[a+96>>2]-d;N[a+100>>2]=N[a+100>>2]-d;N[a+116>>2]=d+N[a+116>>2];N[a+120>>2]=d+N[a+120>>2];N[a+20>>2]=d;k=d;d=Q(f-f);f=Q(d*d);d=Q(h-h);h=Q(d*d);d=Q(g-g);N[a+16>>2]=k+Q(Y(Q(f+Q(h+Q(d*d)))));J[a+12>>2]=j<<30>>31&i;J[a+8>>2]=c;J[a+4>>2]=b;Vb(b+928|0,J[b+928>>2],a+96|0,a);break a;case 1:break b;default:break a}}J[a+20>>2]=0;J[a+4>>2]=1065353216;J[a>>2]=21436;J[a+24>>2]=b;J[a+28>>2]=c;N[a+8>>2]=N[b+456>>2];e=J[c+4>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));e=J[b+192>>2];d=Q(d+Q(ia[J[J[e>>2]+48>>2]](e)));N[a+12>>2]=d;f=N[b+316>>2];g=N[J[c+8>>2]+224>>2];N[a+16>>2]=f<g?f:g;e=J[c+4>>2];ia[J[J[e>>2]+8>>2]](e,J[c+12>>2],a+144|0,a+128|0);c=J[a+156>>2];J[a+104>>2]=J[a+152>>2];J[a+108>>2]=c;c=J[a+132>>2];J[a+112>>2]=J[a+128>>2];J[a+116>>2]=c;c=J[a+140>>2];J[a+120>>2]=J[a+136>>2];J[a+124>>2]=c;N[a+104>>2]=N[a+104>>2]-d;N[a+112>>2]=d+N[a+112>>2];N[a+116>>2]=d+N[a+116>>2];c=J[a+148>>2];J[a+96>>2]=J[a+144>>2];J[a+100>>2]=c;N[a+96>>2]=N[a+96>>2]-d;N[a+100>>2]=N[a+100>>2]-d;N[a+120>>2]=d+N[a+120>>2];Vb(b+1048|0,J[b+1048>>2],a+96|0,a)}ga=a+160|0}function EG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),H=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=0;D=J[a+12>>2];if((D|0)<=0){return Q(Q(1))}f=K[a+28|0];H=f?b:c;b=f?c:b;I=N[b- -64>>2];E=N[b+60>>2];F=N[b+56>>2];G=N[b+52>>2];L=N[b+48>>2];h=N[b+44>>2];i=N[b+40>>2];j=N[b+36>>2];M=N[b+32>>2];k=N[b+28>>2];l=N[b+24>>2];m=N[b+20>>2];O=N[b+16>>2];n=N[b+12>>2];o=N[b+8>>2];r=J[b+260>>2];p=N[b+4>>2];R=J[b+192>>2];q=Q(1);f=0;while(1){c=J[R+24>>2]+P(f,80)|0;g=N[c+56>>2];s=N[c+52>>2];t=N[c+48>>2];u=N[c+36>>2];v=N[c+20>>2];w=N[c+4>>2];x=N[c+40>>2];y=N[c+24>>2];z=N[c+8>>2];A=N[c+32>>2];B=N[c>>2];C=N[c+16>>2];J[b+64>>2]=0;J[b+48>>2]=0;J[b+32>>2]=0;J[b+16>>2]=0;J[b+260>>2]=r+1;N[b+36>>2]=Q(A*h)+Q(Q(B*j)+Q(i*C));N[b+20>>2]=Q(A*k)+Q(Q(B*m)+Q(l*C));N[b+4>>2]=Q(A*n)+Q(Q(B*p)+Q(o*C));N[b+44>>2]=Q(x*h)+Q(Q(z*j)+Q(i*y));N[b+40>>2]=Q(u*h)+Q(Q(w*j)+Q(i*v));N[b+28>>2]=Q(x*k)+Q(Q(z*m)+Q(l*y));N[b+24>>2]=Q(u*k)+Q(Q(w*m)+Q(l*v));N[b+12>>2]=Q(x*n)+Q(Q(z*p)+Q(o*y));N[b+8>>2]=Q(u*n)+Q(Q(w*p)+Q(o*v));N[b+60>>2]=E+Q(Q(g*h)+Q(Q(t*j)+Q(i*s)));N[b+56>>2]=F+Q(Q(g*k)+Q(Q(t*m)+Q(l*s)));N[b+52>>2]=G+Q(Q(g*n)+Q(Q(t*p)+Q(o*s)));c=J[J[a+20>>2]+(f<<2)>>2];g=Q(ia[J[J[c>>2]+12>>2]](c,b,H,d,e));N[b+64>>2]=I;N[b+60>>2]=E;N[b+56>>2]=F;N[b+52>>2]=G;N[b+48>>2]=L;N[b+44>>2]=h;N[b+40>>2]=i;N[b+36>>2]=j;N[b+32>>2]=M;N[b+28>>2]=k;N[b+24>>2]=l;N[b+20>>2]=m;N[b+16>>2]=O;N[b+12>>2]=n;N[b+8>>2]=o;N[b+4>>2]=p;r=J[b+260>>2]+1|0;J[b+260>>2]=r;q=g<q?g:q;f=f+1|0;if((D|0)!=(f|0)){continue}break}return Q(q)}function kh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);N[b+16>>2]=N[a+4>>2];N[b+20>>2]=N[a+8>>2];N[b+24>>2]=N[a+12>>2];N[b+28>>2]=N[a+16>>2];N[b+32>>2]=N[a+20>>2];N[b+36>>2]=N[a+24>>2];N[b+40>>2]=N[a+28>>2];N[b+44>>2]=N[a+32>>2];N[b+48>>2]=N[a+36>>2];N[b+52>>2]=N[a+40>>2];N[b+56>>2]=N[a+44>>2];N[b+60>>2]=N[a+48>>2];N[b+64>>2]=N[a+52>>2];N[b+68>>2]=N[a+56>>2];N[b+72>>2]=N[a+60>>2];N[b+76>>2]=N[a- -64>>2];N[b+80>>2]=N[a+68>>2];N[b+84>>2]=N[a+72>>2];N[b+88>>2]=N[a+76>>2];N[b+92>>2]=N[a+80>>2];N[b+96>>2]=N[a+84>>2];N[b+100>>2]=N[a+88>>2];N[b+104>>2]=N[a+92>>2];N[b+108>>2]=N[a+96>>2];N[b+112>>2]=N[a+100>>2];N[b+116>>2]=N[a+104>>2];N[b+120>>2]=N[a+108>>2];N[b+124>>2]=N[a+112>>2];N[b+128>>2]=N[a+116>>2];N[b+132>>2]=N[a+120>>2];N[b+136>>2]=N[a+124>>2];N[b+140>>2]=N[a+128>>2];N[b+144>>2]=N[a+132>>2];N[b+148>>2]=N[a+136>>2];N[b+152>>2]=N[a+140>>2];N[b+156>>2]=N[a+144>>2];N[b+160>>2]=N[a+148>>2];N[b+164>>2]=N[a+152>>2];N[b+168>>2]=N[a+156>>2];N[b+172>>2]=N[a+160>>2];N[b+176>>2]=N[a+164>>2];N[b+180>>2]=N[a+168>>2];N[b+184>>2]=N[a+172>>2];N[b+188>>2]=N[a+176>>2];J[b+224>>2]=J[a+180>>2];f=N[a+184>>2];J[b>>2]=0;N[b+192>>2]=f;d=ia[J[J[c>>2]+28>>2]](c,J[a+192>>2])|0;J[b+8>>2]=0;J[b+4>>2]=d;J[b+228>>2]=J[a+204>>2];J[b+232>>2]=J[a+208>>2];J[b+236>>2]=J[a+212>>2];J[b+240>>2]=J[a+216>>2];N[b+196>>2]=N[a+220>>2];N[b+200>>2]=N[a+224>>2];N[b+204>>2]=N[a+232>>2];N[b+208>>2]=N[a+228>>2];J[b+244>>2]=J[a+236>>2];d=ia[J[J[c>>2]+40>>2]](c,a)|0;e=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b+12>>2]=e;if(e){ia[J[J[c>>2]+48>>2]](c,d)}N[b+212>>2]=N[a+244>>2];N[b+216>>2]=N[a+248>>2];N[b+220>>2]=N[a+252>>2];J[b+248>>2]=J[a+256>>2];return 3550}function vp(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=0,n=0;k=ga-16|0;ga=k;J[k+12>>2]=a;J[k+8>>2]=b;d=J[k+8>>2];e=ga-32|0;ga=e;a=J[k+12>>2];b=J[a+192>>2];c=Q(ia[J[J[b>>2]+48>>2]](b));g=J[a+712>>2];if((g|0)>0){l=a+928|0;while(1){b=J[a+720>>2]+P(f,104)|0;h=Q(N[d>>2]*N[b+8>>2]);N[b+8>>2]=h;i=Q(N[d+4>>2]*N[b+12>>2]);N[b+12>>2]=i;j=Q(N[d+8>>2]*N[b+16>>2]);N[b+16>>2]=j;N[b+24>>2]=N[d>>2]*N[b+24>>2];N[b+28>>2]=N[d+4>>2]*N[b+28>>2];N[b+32>>2]=N[d+8>>2]*N[b+32>>2];J[e+28>>2]=0;N[e+24>>2]=c+j;N[e+20>>2]=c+i;N[e+16>>2]=c+h;J[e+12>>2]=0;N[e+8>>2]=j-c;N[e+4>>2]=i-c;N[e>>2]=h-c;Gc(l,J[b+96>>2],e);f=f+1|0;if((g|0)!=(f|0)){continue}break}}lg(a);b=J[a+928>>2];a:{if(b){d=J[a+192>>2];c=Q(ia[J[J[d>>2]+48>>2]](d));h=N[b>>2];i=N[b+4>>2];j=N[b+8>>2];J[a+904>>2]=0;N[a+900>>2]=j-c;N[a+896>>2]=i-c;N[a+892>>2]=h-c;h=N[b+20>>2];i=N[b+24>>2];j=N[b+16>>2];J[a+920>>2]=0;N[a+916>>2]=c+i;N[a+912>>2]=c+h;b=a+908|0;N[b>>2]=c+j;d=J[a+188>>2];if(!d){break a}f=J[a+684>>2];g=J[f+32>>2];ia[J[J[g>>2]+16>>2]](g,d,a+892|0,b,J[f+36>>2]);break a}J[a+892>>2]=0;J[a+896>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0}g=J[a+732>>2];if((g|0)>0){l=J[a+740>>2];b=0;f=0;while(1){d=l+P(f,52)|0;m=J[d+8>>2];n=J[d+12>>2];c=Q(N[m+16>>2]-N[n+16>>2]);h=Q(c*c);c=Q(N[m+8>>2]-N[n+8>>2]);i=Q(c*c);c=Q(N[m+12>>2]-N[n+12>>2]);c=Q(Y(Q(h+Q(i+Q(c*c)))));N[d+16>>2]=c;N[d+28>>2]=c*c;f=f+1|0;if((g|0)!=(f|0)){continue}break}while(1){d=l+P(b,52)|0;N[d+24>>2]=Q(N[J[d+8>>2]+88>>2]+N[J[d+12>>2]+88>>2])/N[J[d+4>>2]+4>>2];b=b+1|0;if((g|0)!=(b|0)){continue}break}}kg(a);ga=e+32|0;ga=k+16|0}function xg(a,b,c,d,e){var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0);f=J[a+28>>2];o=N[f+36>>2];p=N[f+20>>2];q=N[f+40>>2];r=N[f+8>>2];x=N[f+24>>2];n=N[f+44>>2];y=N[f+12>>2];z=N[f+56>>2];A=N[f+28>>2];B=N[f+60>>2];C=N[f+52>>2];a=J[a+32>>2];D=N[a+36>>2];E=N[a+20>>2];s=N[a+40>>2];F=N[a+8>>2];G=N[a+24>>2];h=N[a+44>>2];k=N[a+12>>2];g=N[a+56>>2];j=N[a+28>>2];i=N[a+60>>2];m=N[a+52>>2];H=N[a+344>>2];I=N[f+344>>2];K=N[f+4>>2];L=N[d+4>>2];M=N[d+8>>2];O=N[d>>2];P=N[a+4>>2];l=N[e+4>>2];t=N[e+8>>2];u=N[e>>2];d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;d=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;J[b+44>>2]=0;J[b+28>>2]=0;v=h;l=Q(l-g);h=N[b>>2];u=Q(u-m);g=N[b+4>>2];m=Q(Q(l*h)-Q(u*g));w=k;t=Q(t-i);k=N[b+8>>2];i=Q(Q(t*g)-Q(l*k));l=j;j=Q(Q(u*k)-Q(t*h));l=Q(Q(v*m)+Q(Q(w*i)+Q(l*j)));N[b+40>>2]=l;s=Q(Q(s*m)+Q(Q(F*i)+Q(G*j)));N[b+36>>2]=s;m=Q(Q(D*m)+Q(Q(P*i)+Q(E*j)));N[b+32>>2]=m;v=n;j=Q(O-C);n=Q(L-z);i=Q(Q(g*j)-Q(h*n));w=Q(n*k);n=Q(M-B);g=Q(w-Q(g*n));h=Q(Q(n*h)-Q(k*j));k=Q(Q(v*i)+Q(Q(y*g)+Q(A*h)));N[b+24>>2]=k;j=Q(Q(q*i)+Q(Q(r*g)+Q(x*h)));N[b+20>>2]=j;h=Q(Q(o*i)+Q(Q(K*g)+Q(p*h)));N[b+16>>2]=h;g=N[f+404>>2];i=N[f+400>>2];o=N[f+396>>2];J[b+60>>2]=0;o=Q(h*o);N[b+48>>2]=o;i=Q(j*i);N[b+52>>2]=i;g=Q(k*g);N[b+56>>2]=g;p=N[a+404>>2];q=N[a+400>>2];r=N[a+396>>2];J[b+76>>2]=0;r=Q(m*r);N[b+64>>2]=r;q=Q(s*q);N[b+68>>2]=q;p=Q(l*p);N[b+72>>2]=p;N[b+80>>2]=Q(H+Q(I+Q(Q(g*k)+Q(Q(o*h)+Q(j*i)))))+Q(Q(p*l)+Q(Q(r*m)+Q(s*q)))}function Dk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=J[a+8>>2];c=J[a+32>>2];f=c?J[a+40>>2]:0;d=c;c=J[a+52>>2];g=c?J[a+60>>2]:0;h=c;c=J[a+72>>2];Q(ia[J[J[b>>2]+12>>2]](b,f,d,g,h,c?J[a+80>>2]:0,c,J[a+4>>2],J[a+20>>2],J[a+24>>2]));c=J[a+32>>2];a:{if((c|0)>=0){break a}if(J[a+36>>2]<0){b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+44|0]=1;J[a+36>>2]=0;J[a+40>>2]=0}b=c;d=0-b&3;if(d){while(1){J[J[a+40>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break a}while(1){c=b<<2;J[c+J[a+40>>2]>>2]=0;J[(c+J[a+40>>2]|0)+4>>2]=0;J[(c+J[a+40>>2]|0)+8>>2]=0;J[(c+J[a+40>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+32>>2]=0;c=J[a+52>>2];b:{if((c|0)>=0){break b}if(J[a+56>>2]<0){b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+64|0]=1;J[a+56>>2]=0;J[a+60>>2]=0}e=0;b=c;d=0-b&3;if(d){while(1){J[J[a+60>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break b}while(1){c=b<<2;J[c+J[a+60>>2]>>2]=0;J[(c+J[a+60>>2]|0)+4>>2]=0;J[(c+J[a+60>>2]|0)+8>>2]=0;J[(c+J[a+60>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+52>>2]=0;c=J[a+72>>2];c:{if((c|0)>=0){break c}if(J[a+76>>2]<0){b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+84|0]=1;J[a+76>>2]=0;J[a+80>>2]=0}e=0;b=c;d=0-b&3;if(d){while(1){J[J[a+80>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break c}while(1){c=b<<2;J[c+J[a+80>>2]>>2]=0;J[(c+J[a+80>>2]|0)+4>>2]=0;J[(c+J[a+80>>2]|0)+8>>2]=0;J[(c+J[a+80>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+72>>2]=0}function af(a){a=a|0;var b=0;J[a>>2]=10268;if(K[a+20|0]){b=J[J[a+16>>2]+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(K[a+12|0]){b=J[J[a+8>>2]+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+8>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+32>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+32>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+36>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+36>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+40>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+40>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+44>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+44>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+48>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+48>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+56>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+56>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+60>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+60>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+76>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+76>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+80>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+80>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+72>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+72>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+88>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+88>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+84>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+84>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+24>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+28>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+28>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}return a|0}function Ly(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0;e=ga-256|0;ga=e;ya(2355);J[e+32>>2]=22956;f=J[b+12>>2];J[e+76>>2]=J[b+8>>2];J[e+80>>2]=f;f=J[b+4>>2];J[e+68>>2]=J[b>>2];J[e+72>>2]=f;f=J[c+12>>2];J[e+92>>2]=J[c+8>>2];J[e+96>>2]=f;f=J[c>>2];m=J[c+4>>2];J[e+104>>2]=0;J[e+108>>2]=0;J[e+112>>2]=0;J[e+116>>2]=0;J[e+124>>2]=0;J[e+128>>2]=0;J[e+120>>2]=1065353216;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=1065353216;J[e+144>>2]=0;J[e+84>>2]=f;J[e+88>>2]=m;J[e+248>>2]=d;J[e+100>>2]=1065353216;J[e+244>>2]=a;d=J[b+4>>2];J[e+148>>2]=J[b>>2];J[e+152>>2]=d;d=J[b+12>>2];J[e+156>>2]=J[b+8>>2];J[e+160>>2]=d;J[e+168>>2]=0;J[e+172>>2]=0;J[e+176>>2]=0;J[e+180>>2]=0;J[e+184>>2]=1065353216;J[e+188>>2]=0;J[e+192>>2]=0;J[e+196>>2]=0;J[e+200>>2]=0;J[e+204>>2]=1065353216;J[e+208>>2]=0;J[e+164>>2]=1065353216;d=J[c+12>>2];J[e+220>>2]=J[c+8>>2];J[e+224>>2]=d;d=J[c+4>>2];J[e+212>>2]=J[c>>2];J[e+216>>2]=d;g=Q(N[c+8>>2]-N[b+8>>2]);j=Q(N[c>>2]-N[b>>2]);h=Q(N[c+4>>2]-N[b+4>>2]);i=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(h*h))))));g=Q(g*i);k=g==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/g);N[e+44>>2]=k;h=Q(h*i);l=h==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/h);N[e+40>>2]=l;J[e+60>>2]=k<Q(0);J[e+56>>2]=l<Q(0);i=Q(j*i);j=i==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/i);N[e+36>>2]=j;J[e+52>>2]=j<Q(0);N[e+64>>2]=Q(g*Q(N[e+92>>2]-N[e+76>>2]))+Q(Q(i*Q(N[e+84>>2]-N[e+68>>2]))+Q(h*Q(N[e+88>>2]-N[e+72>>2])));a=J[a+68>>2];J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=0;J[e+4>>2]=0;ia[J[J[a>>2]+24>>2]](a,b,c,e+32|0,e+16|0,e);xa();ga=e+256|0}function Vb(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0;if(b){n=N[c+24>>2];o=N[c+20>>2];p=N[c+16>>2];q=N[c+8>>2];r=N[c+4>>2];s=N[c>>2];J[8369]=J[8369]+1;a=ia[J[6782]](256,16)|0;J[a>>2]=b;f=64;c=1;while(1){a:{b:{c:{b=c-1|0;k=b<<2;i=J[k+a>>2];d:{if(!(N[i>>2]<=p)|!(N[i+16>>2]>=s)|(!(N[i+4>>2]<=o)|!(N[i+20>>2]>=r))){break d}if(!(N[i+8>>2]<=n)|!(N[i+24>>2]>=q)){break d}if(J[i+40>>2]){if((b|0)!=(f|0)){break c}g=f?f<<1:1;if((g|0)<(c|0)){break c}if(g){J[8369]=J[8369]+1;b=ia[J[6782]](g<<2,16)|0}else{b=0}e:{if(!f){break e}l=0;e=0;if(f-1>>>0>=3){t=f&-4;h=0;while(1){j=e<<2;J[j+b>>2]=J[a+j>>2];m=j|4;J[m+b>>2]=J[a+m>>2];m=j|8;J[m+b>>2]=J[a+m>>2];j=j|12;J[j+b>>2]=J[a+j>>2];e=e+4|0;h=h+4|0;if((t|0)!=(h|0)){continue}break}}f=f&3;if(!f){break e}while(1){h=e<<2;J[h+b>>2]=J[a+h>>2];e=e+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break b}ia[J[J[d>>2]+12>>2]](d,i)}break a}g=f;b=a}J[b+k>>2]=J[i+36>>2];f:{if((c|0)!=(g|0)){f=g;a=b;break f}f=c<<1;if((f|0)<=(c|0)){f=c;a=b;break f}J[8369]=J[8369]+1;a=ia[J[6782]](c<<3,16)|0;g:{if((c|0)<=0){break g}l=0;g=0;if(c-1>>>0>=3){j=c&-4;h=0;while(1){e=g<<2;J[e+a>>2]=J[b+e>>2];k=e|4;J[k+a>>2]=J[b+k>>2];k=e|8;J[k+a>>2]=J[b+k>>2];e=e|12;J[e+a>>2]=J[b+e>>2];g=g+4|0;h=h+4|0;if((j|0)!=(h|0)){continue}break}}e=c&3;if(!e){break g}while(1){h=g<<2;J[h+a>>2]=J[b+h>>2];g=g+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[(c<<2)+a>>2]=J[i+40>>2];b=c+1|0}c=b;if((c|0)>0){continue}break}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}}function $y(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0);c=K[a+8|0]?b:c;if(J[J[c+4>>2]+4>>2]-21>>>0<=8){s=J[J[c+8>>2]+192>>2];k=Q(ia[J[J[s>>2]+48>>2]](s));i=ga-32|0;ga=i;b=a+12|0;J[b+52>>2]=d;J[b+44>>2]=e;N[b+56>>2]=k+Q(.05999999865889549);d=J[b+4>>2];ia[J[J[d>>2]+28>>2]](d,i+16|0,i);c=J[c+12>>2];k=N[c+20>>2];m=N[c+36>>2];n=N[c+24>>2];j=N[c+40>>2];v=N[c+56>>2];w=N[c+52>>2];t=N[c+4>>2];o=N[c+8>>2];l=N[b+56>>2];h=N[c+32>>2];f=N[c>>2];r=N[c+48>>2];g=N[c+16>>2];p=N[i+24>>2];q=N[i+8>>2];u=N[i+16>>2];A=N[i>>2];B=N[i+20>>2];C=N[i+4>>2];J[b+40>>2]=0;J[b+24>>2]=0;x=Q(Q(q+p)*Q(.5));y=Q(Q(A+u)*Q(.5));z=Q(Q(C+B)*Q(.5));r=Q(-r);D=Q(Q(Q(h*x)+Q(Q(f*y)+Q(g*z)))+Q(Q(Q(f*r)-Q(g*w))-Q(h*v)));p=Q(l+Q(Q(q-p)*Q(.5)));E=Q(f*Q(0));F=Q(g*Q(0));G=Q(p*Q(R(Q(h+Q(E+F)))));q=Q(l+Q(Q(A-u)*Q(.5)));h=Q(h*Q(0));f=Q(q*Q(R(Q(h+Q(f+F)))));g=Q(R(Q(h+Q(E+g))));h=Q(l+Q(Q(C-B)*Q(.5)));f=Q(G+Q(f+Q(g*h)));N[b+28>>2]=D+f;N[b+12>>2]=D-f;f=Q(Q(Q(x*j)+Q(Q(y*o)+Q(z*n)))+Q(Q(Q(o*r)-Q(n*w))-Q(j*v)));g=Q(o*Q(0));l=Q(n*Q(0));u=Q(p*Q(R(Q(j+Q(g+l)))));j=Q(j*Q(0));n=Q(u+Q(Q(q*Q(R(Q(j+Q(o+l)))))+Q(Q(R(Q(j+Q(g+n))))*h)));N[b+36>>2]=f+n;j=Q(Q(Q(x*m)+Q(Q(y*t)+Q(z*k)))+Q(Q(Q(t*r)-Q(k*w))-Q(m*v)));o=Q(t*Q(0));g=Q(k*Q(0));l=Q(p*Q(R(Q(m+Q(o+g)))));m=Q(m*Q(0));k=Q(l+Q(Q(q*Q(R(Q(m+Q(t+g)))))+Q(Q(R(Q(m+Q(o+k))))*h)));N[b+32>>2]=j+k;N[b+20>>2]=f-n;N[b+16>>2]=j-k;ga=i+32|0;ia[J[J[s>>2]+64>>2]](s,b,a+24|0,a+40|0)}}function sH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0;e=ga-256|0;ga=e;J[e+32>>2]=8216;f=J[b+12>>2];J[e+76>>2]=J[b+8>>2];J[e+80>>2]=f;f=J[b+4>>2];J[e+68>>2]=J[b>>2];J[e+72>>2]=f;f=J[c+12>>2];J[e+92>>2]=J[c+8>>2];J[e+96>>2]=f;f=J[c>>2];m=J[c+4>>2];J[e+104>>2]=0;J[e+108>>2]=0;J[e+112>>2]=0;J[e+116>>2]=0;J[e+124>>2]=0;J[e+128>>2]=0;J[e+120>>2]=1065353216;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=1065353216;J[e+144>>2]=0;J[e+84>>2]=f;J[e+88>>2]=m;J[e+248>>2]=d;J[e+100>>2]=1065353216;J[e+244>>2]=a;d=J[b+4>>2];J[e+148>>2]=J[b>>2];J[e+152>>2]=d;d=J[b+12>>2];J[e+156>>2]=J[b+8>>2];J[e+160>>2]=d;J[e+168>>2]=0;J[e+172>>2]=0;J[e+176>>2]=0;J[e+180>>2]=0;J[e+184>>2]=1065353216;J[e+188>>2]=0;J[e+192>>2]=0;J[e+196>>2]=0;J[e+200>>2]=0;J[e+204>>2]=1065353216;J[e+208>>2]=0;J[e+164>>2]=1065353216;d=J[c+12>>2];J[e+220>>2]=J[c+8>>2];J[e+224>>2]=d;d=J[c+4>>2];J[e+212>>2]=J[c>>2];J[e+216>>2]=d;g=Q(N[c+8>>2]-N[b+8>>2]);j=Q(N[c>>2]-N[b>>2]);h=Q(N[c+4>>2]-N[b+4>>2]);i=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(h*h))))));g=Q(g*i);k=g==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/g);N[e+44>>2]=k;h=Q(h*i);l=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);N[e+40>>2]=l;J[e+60>>2]=k<Q(0);J[e+56>>2]=l<Q(0);i=Q(j*i);j=i==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/i);N[e+36>>2]=j;J[e+52>>2]=j<Q(0);N[e+64>>2]=Q(g*Q(N[e+92>>2]-N[e+76>>2]))+Q(Q(i*Q(N[e+84>>2]-N[e+68>>2]))+Q(h*Q(N[e+88>>2]-N[e+72>>2])));a=J[a+68>>2];J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=0;J[e+4>>2]=0;ia[J[J[a>>2]+24>>2]](a,b,c,e+32|0,e+16|0,e);ga=e+256|0}function uD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0);j=ga-2048|0;ga=j;a:{if((d|0)<=0){break a}if(d-1>>>0>=7){i=d&-8;while(1){e=f<<4;J[(e+c|0)+12>>2]=-581039253;J[((e|16)+c|0)+12>>2]=-581039253;J[((e|32)+c|0)+12>>2]=-581039253;J[((e|48)+c|0)+12>>2]=-581039253;J[((e|64)+c|0)+12>>2]=-581039253;J[((e|80)+c|0)+12>>2]=-581039253;J[((e|96)+c|0)+12>>2]=-581039253;J[((e|112)+c|0)+12>>2]=-581039253;f=f+8|0;g=g+8|0;if((i|0)!=(g|0)){continue}break}}e=d&7;if(e){while(1){J[((f<<4)+c|0)+12>>2]=-581039253;f=f+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}while(1){if((ia[J[J[a>>2]+96>>2]](a)|0)>0){e=m<<4;i=e+c|0;n=b+e|0;l=0;while(1){g=128;b:{c:{if(((ia[J[J[a>>2]+96>>2]](a)|0)-l|0)>127){break c}g=(ia[J[J[a>>2]+96>>2]](a)|0)-l|0;if((g|0)>0){break c}k=Q(-3.4028234663852886e38);h=-1;break b}e=0;if((g|0)!=1){h=g&-2;f=0;while(1){ia[J[J[a>>2]+108>>2]](a,e,(e<<4)+j|0);o=e|1;ia[J[J[a>>2]+108>>2]](a,o,(o<<4)+j|0);e=e+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(g&1){ia[J[J[a>>2]+108>>2]](a,e,(e<<4)+j|0)}q=N[n+8>>2];r=N[n+4>>2];s=N[n>>2];e=0;h=-1;k=Q(-3.4028234663852886e38);while(1){f=(e<<4)+j|0;p=Q(Q(N[f+8>>2]*q)+Q(Q(N[f>>2]*s)+Q(r*N[f+4>>2])));f=p>k;k=f?p:k;h=f?e:h;e=e+1|0;if((g|0)!=(e|0)){continue}break}}if(N[i+12>>2]<k){e=(h<<4)+j|0;f=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=f;f=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=f;N[i+12>>2]=k}l=l+128|0;if((ia[J[J[a>>2]+96>>2]](a)|0)>(l|0)){continue}break}}m=m+1|0;if((m|0)!=(d|0)){continue}break}}ga=j+2048|0}function Fe(a,b){var c=Q(0),d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0);d=N[((b<<2)+a|0)+1192>>2];f=(b<<6)+a|0;g=N[f+868>>2];h=N[f+872>>2];a:{if(g>=h){break a}if(d<g){c=Pa(Q(g-d),Q(6.2831854820251465));b:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break b}if(!(c>Q(3.1415927410125732))){break b}c=Q(c+Q(-6.2831854820251465))}i=Q(R(c));c=Pa(Q(h-d),Q(6.2831854820251465));c:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break c}if(!(c>Q(3.1415927410125732))){break c}c=Q(c+Q(-6.2831854820251465))}d=i<Q(R(c))?d:Q(d+Q(6.2831854820251465));break a}if(!(d>h)){break a}c=Pa(Q(d-h),Q(6.2831854820251465));d:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break d}if(!(c>Q(3.1415927410125732))){break d}c=Q(c+Q(-6.2831854820251465))}i=Q(R(c));c=Pa(Q(d-g),Q(6.2831854820251465));e:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break e}if(!(c>Q(3.1415927410125732))){break e}c=Q(c+Q(-6.2831854820251465))}d=i>Q(R(c))?Q(d+Q(-6.2831854820251465)):d}N[f+920>>2]=d;f:{if(g>h){f=0;J[((b<<6)+a|0)+924>>2]=0;break f}if(d<g){e=(b<<6)+a|0;c=Q(d-g);N[e+916>>2]=c;f=1;J[e+924>>2]=1;if(c>Q(3.1415927410125732)){N[e+916>>2]=c+Q(-6.2831854820251465);break f}if(!(c<Q(-3.1415927410125732))){break f}N[e+916>>2]=c+Q(6.2831854820251465);break f}e=(b<<6)+a|0;if(d>h){J[e+924>>2]=2;c=Q(d-h);N[e+916>>2]=c;if(c>Q(3.1415927410125732)){N[e+916>>2]=c+Q(-6.2831854820251465);f=1;break f}f=1;if(!(c<Q(-3.1415927410125732))){break f}N[e+916>>2]=c+Q(6.2831854820251465);break f}f=0;J[e+924>>2]=0}return K[((b<<6)+a|0)+912|0]!=0|f}function uz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0);t=J[a+832>>2];if((t|0)>0){a=J[a+840>>2];while(1){u=Q(0);v=Q(0);w=Q(0);d=P(p,56)+a|0;j=J[d>>2];q=N[j+16>>2];f=N[d+8>>2];e=J[d+4>>2];g=J[e+8>>2];i=N[d+12>>2];h=J[e+12>>2];b=N[d+16>>2];e=J[e+16>>2];k=Q(Q(Q(f*N[g+16>>2])+Q(i*N[h+16>>2]))+Q(b*N[e+16>>2]));l=Q(Q(q-N[j+32>>2])-Q(k-Q(Q(Q(f*N[g+32>>2])+Q(i*N[h+32>>2]))+Q(b*N[e+32>>2]))));n=N[d+32>>2];r=N[j+8>>2];m=Q(Q(Q(N[g+8>>2]*f)+Q(N[h+8>>2]*i))+Q(N[e+8>>2]*b));x=Q(Q(r-N[j+24>>2])-Q(m-Q(Q(Q(f*N[g+24>>2])+Q(i*N[h+24>>2]))+Q(b*N[e+24>>2]))));o=N[d+24>>2];s=N[j+12>>2];c=Q(Q(Q(f*N[g+12>>2])+Q(i*N[h+12>>2]))+Q(b*N[e+12>>2]));b=Q(Q(s-N[j+28>>2])-Q(c-Q(Q(Q(f*N[g+28>>2])+Q(i*N[h+28>>2]))+Q(b*N[e+28>>2]))));f=N[d+28>>2];i=Q(Q(l*n)+Q(Q(x*o)+Q(b*f)));if(i<Q(0)){c=Q(N[d+40>>2]-Q(Q(Q(n*q)+Q(Q(o*r)+Q(s*f)))-Q(Q(n*k)+Q(Q(o*m)+Q(c*f)))));w=Q(Q(n*c)+Q(0));u=Q(Q(o*c)+Q(0));v=Q(Q(f*c)+Q(0))}m=N[d+48>>2];c=N[d+44>>2];k=Q(w-Q(Q(l-Q(n*i))*c));N[j+16>>2]=q+Q(m*k);l=Q(v-Q(c*Q(b-Q(f*i))));N[j+12>>2]=s+Q(m*l);c=Q(u-Q(c*Q(x-Q(o*i))));N[j+8>>2]=r+Q(m*c);b=Q(N[d+52>>2]*N[d+8>>2]);N[g+8>>2]=N[g+8>>2]-Q(c*b);N[g+12>>2]=N[g+12>>2]-Q(l*b);N[g+16>>2]=N[g+16>>2]-Q(k*b);b=Q(N[d+52>>2]*N[d+12>>2]);N[h+8>>2]=N[h+8>>2]-Q(c*b);N[h+12>>2]=N[h+12>>2]-Q(l*b);N[h+16>>2]=N[h+16>>2]-Q(k*b);b=Q(N[d+52>>2]*N[d+16>>2]);N[e+8>>2]=N[e+8>>2]-Q(c*b);N[e+12>>2]=N[e+12>>2]-Q(l*b);N[e+16>>2]=N[e+16>>2]-Q(k*b);p=p+1|0;if((t|0)!=(p|0)){continue}break}}}function vz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0);m=ga-16|0;ga=m;c=N[a+452>>2];d=J[a+192>>2];r=Q(ia[J[J[d>>2]+48>>2]](d));s=J[a+812>>2];if((s|0)>0){while(1){d=J[a+820>>2]+P(o,104)|0;g=J[d>>2];k=J[g+236>>2]<<30>>31&g;a:{if(!k){j=Q(0);e=Q(0);f=Q(0);break a}e=N[k+332>>2];f=N[d+84>>2];h=N[d+80>>2];l=N[k+336>>2];j=Q(c*Q(Q(Q(e*f)-Q(h*l))+N[k+312>>2]));n=N[k+328>>2];i=Q(n*h);h=N[d+76>>2];e=Q(c*Q(Q(i-Q(h*e))+N[k+320>>2]));f=Q(c*Q(Q(Q(l*h)-Q(f*n))+N[k+316>>2]))}g=J[d+24>>2];n=N[g+16>>2];i=Q(Q(n-N[g+32>>2])-e);e=N[d+12>>2];t=N[g+8>>2];p=Q(Q(t-N[g+24>>2])-j);j=N[d+4>>2];u=N[g+12>>2];q=Q(Q(u-N[g+28>>2])-f);f=N[d+8>>2];h=Q(Q(i*e)+Q(Q(p*j)+Q(q*f)));b:{if(!(h<=Q(1.1920928955078125e-7))){break b}v=N[d+20>>2];w=N[d+36>>2];x=N[d+28>>2];y=N[d+32>>2];z=N[d+52>>2];A=N[d+44>>2];B=N[d+48>>2];C=N[d+68>>2];D=N[d+60>>2];E=N[d- -64>>2];l=N[d+96>>2];F=N[d+100>>2];J[m+12>>2]=0;G=Q(i-Q(l*Q(i-Q(e*h))));i=Q(v+Q(Q(n*e)+Q(Q(t*j)+Q(u*f))));i=Q(F*(i<r?i:r));e=Q(Q(G+Q(i*e))*b);j=Q(Q(Q(p-Q(l*Q(p-Q(j*h))))+Q(j*i))*b);f=Q(Q(Q(q-Q(l*Q(q-Q(f*h))))+Q(i*f))*b);h=Q(Q(C*e)+Q(Q(D*j)+Q(E*f)));N[m+8>>2]=h;l=Q(Q(z*e)+Q(Q(A*j)+Q(f*B)));N[m+4>>2]=l;e=Q(Q(w*e)+Q(Q(x*j)+Q(f*y)));N[m>>2]=e;f=e;e=N[d+92>>2];N[g+8>>2]=N[g+8>>2]-Q(f*e);N[g+12>>2]=N[g+12>>2]-Q(l*e);N[g+16>>2]=n-Q(h*e);if(!k){break b}ub(k,m,d+76|0)}o=o+1|0;if((s|0)!=(o|0)){continue}break}}ga=m+16|0}function Ro(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;H[g+11|0]=f;j=J[g+24>>2];m=J[g+20>>2];e=J[g+16>>2];q=H[g+11|0]&1;b=0;d=0;c=0;h=J[g+12>>2];o=P(h,3);a=1;if((h|0)>0){a=(o|0)>1?o:1;k=a&3;if(a-1>>>0>=3){i=a&2147483644;a=0;while(1){f=d<<2;l=J[e+(f|12)>>2];n=J[e+(f|8)>>2];p=J[e+(f|4)>>2];f=J[e+f>>2];b=(b|0)<(f|0)?f:b;b=(b|0)<(p|0)?p:b;b=(b|0)<(n|0)?n:b;b=(b|0)<(l|0)?l:b;d=d+4|0;a=a+4|0;if((i|0)!=(a|0)){continue}break}}if(k){while(1){a=J[e+(d<<2)>>2];b=(a|0)>(b|0)?a:b;d=d+1|0;c=c+1|0;if((k|0)!=(c|0)){continue}break}}a=b+1|0}c=0;b=P(a,a);if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b,16)|0;qa(c,0,b)}b=P(a,3);i=(((b|0)>3?b:3)-1>>>0)/3|0;J[8369]=J[8369]+1;k=ia[J[6782]](a<<4,16)|0;d=0;b=0;while(1){f=m+(d<<2)|0;l=J[f+4>>2];n=J[f>>2];r=N[f+8>>2];f=k+(b<<4)|0;J[f+12>>2]=0;N[f+8>>2]=r;J[f>>2]=n;J[f+4>>2]=l;d=d+3|0;f=(b|0)!=(i|0);b=b+1|0;if(f){continue}break}m=0;J[8369]=J[8369]+1;b=Ac(ia[J[6782]](1252,16)|0,j,a,k,0);if((h|0)>0){while(1){f=e+(m<<2)|0;d=J[f+4>>2];h=J[f>>2];j=P(h,a);f=J[f+8>>2];i=(j+f|0)+c|0;if(!K[i|0]){H[i|0]=1;H[(h+P(a,f)|0)+c|0]=1;Ja(b,f,h,0,0)}i=P(a,d);l=(i+h|0)+c|0;if(!K[l|0]){H[l|0]=1;H[(d+j|0)+c|0]=1;Ja(b,h,d,0,0)}j=(d+P(a,f)|0)+c|0;if(!K[j|0]){H[j|0]=1;H[(f+i|0)+c|0]=1;Ja(b,d,f,0,0)}rb(b,h,d,f,0);m=m+3|0;if((o|0)>(m|0)){continue}break}}if(q){nk(b)}if(k){J[8370]=J[8370]+1;ia[J[6783]](k)}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}ga=g+32|0;return b|0}function Vl(a){var b=0,c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);e=J[a+28>>2];if((e|0)<=0){return 1}f=N[a+84>>2];g=N[a+68>>2];h=Q(f+g);i=N[a+88>>2];d=N[a+72>>2];j=Q(i+d);i=Q(d-i);f=Q(g-f);d=N[a+80>>2];k=N[a+64>>2];g=Q(d+k);d=Q(k-d);a=J[a+36>>2];a:{b:{while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break b}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;h=Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(f*N[b+24>>2]))));if(!(h>Q(0))){c=c+1|0;if((e|0)!=(c|0)){continue}}break}return!(h>Q(0))}return 0}return 0}function Xk(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);ug(a,4,b);J[a>>2]=19708;b=J[c+12>>2];J[a+560>>2]=J[c+8>>2];J[a+564>>2]=b;b=J[c+4>>2];J[a+552>>2]=J[c>>2];J[a+556>>2]=b;b=J[c+28>>2];J[a+576>>2]=J[c+24>>2];J[a+580>>2]=b;b=J[c+20>>2];J[a+568>>2]=J[c+16>>2];J[a+572>>2]=b;b=J[c+44>>2];J[a+592>>2]=J[c+40>>2];J[a+596>>2]=b;b=J[c+36>>2];J[a+584>>2]=J[c+32>>2];J[a+588>>2]=b;b=J[c+60>>2];J[a+608>>2]=J[c+56>>2];J[a+612>>2]=b;b=J[c+52>>2];J[a+600>>2]=J[c+48>>2];J[a+604>>2]=b;b=J[c+12>>2];J[a+624>>2]=J[c+8>>2];J[a+628>>2]=b;b=J[c+4>>2];J[a+616>>2]=J[c>>2];J[a+620>>2]=b;b=J[c+20>>2];J[a+632>>2]=J[c+16>>2];J[a+636>>2]=b;b=J[c+28>>2];J[a+640>>2]=J[c+24>>2];J[a+644>>2]=b;b=J[c+36>>2];J[a+648>>2]=J[c+32>>2];J[a+652>>2]=b;b=J[c+44>>2];J[a+656>>2]=J[c+40>>2];J[a+660>>2]=b;b=J[c+52>>2];J[a+664>>2]=J[c+48>>2];J[a+668>>2]=b;b=J[c+60>>2];J[a+672>>2]=J[c+56>>2];J[a+676>>2]=b;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+704>>2]=1065353216;J[a+708>>2]=0;J[a+712>>2]=0;H[a+716|0]=0;H[a+740|0]=d;J[a+748>>2]=0;J[a+736>>2]=16777216;b=J[a+28>>2];h=N[b+52>>2];i=N[b+8>>2];j=N[b+12>>2];k=N[b+56>>2];l=N[b+28>>2];m=N[b+20>>2];n=N[b+24>>2];o=N[b+60>>2];e=N[a+608>>2];p=N[b+44>>2];f=N[a+600>>2];q=N[b+36>>2];g=N[a+604>>2];r=N[b+40>>2];s=N[b+4>>2];N[a+732>>2]=d?Q(-1):Q(1);J[a+676>>2]=0;N[a+672>>2]=o+Q(Q(e*p)+Q(Q(f*q)+Q(g*r)));N[a+668>>2]=k+Q(Q(e*l)+Q(Q(f*m)+Q(g*n)));N[a+664>>2]=h+Q(Q(e*j)+Q(Q(f*s)+Q(g*i)))}function WH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=ga-32|0;ga=d;J[d+20>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;H[d+24|0]=1;a:{if(J[a+8>>2]<=0){break a}while(1){k=J[a+16>>2];b:{if((c|0)!=(e|0)){break b}c=e?e<<1:1;if((c|0)<=(e|0)){c=e;break b}f=0;j=0;if(c){J[8369]=J[8369]+1;j=ia[J[6782]](c<<4,16)|0}if((e|0)>0){while(1){g=f<<4;h=g+j|0;g=g+J[d+20>>2]|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=J[g+12>>2];f=f+1|0;if((f|0)!=(e|0)){continue}break}}e=J[d+20>>2];if(!(e?!e|!K[d+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[d+20>>2]=j;H[d+24|0]=1;J[d+16>>2]=c;c=J[d+12>>2]}c=J[d+20>>2]+(c<<4)|0;e=k+(i<<4)|0;J[c>>2]=J[e>>2];J[c+4>>2]=J[e+4>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=J[e+12>>2];f=J[d+12>>2];c=f+1|0;J[d+12>>2]=c;i=i+1|0;if((i|0)<J[a+8>>2]){e=J[d+16>>2];continue}break}e=0;if((f|0)<0){break a}h=f+1|0;g=h&1;j=J[d+20>>2];if(f){h=h&-2;f=0;while(1){i=e<<4;k=i+j|0;ia[J[J[a>>2]+12>>2]](a,J[k>>2],J[k+4>>2],b)|0;i=j+(i|16)|0;ia[J[J[a>>2]+12>>2]](a,J[i>>2],J[i+4>>2],b)|0;e=e+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(!g){break a}e=j+(e<<4)|0;ia[J[J[a>>2]+12>>2]](a,J[e>>2],J[e+4>>2],b)|0}if(J[a+56>>2]>0){b=J[a- -64>>2];c=0;while(1){J[b+(c<<2)>>2]=-1;c=c+1|0;if((c|0)<J[a+56>>2]){continue}break}c=J[d+12>>2]}if((c|0)>=2){lc(d+8|0,d,0,c-1|0);c=J[d+12>>2]}if((c|0)>0){c=0;while(1){b=J[d+20>>2]+(c<<4)|0;ia[J[J[a>>2]+8>>2]](a,J[b>>2],J[b+4>>2])|0;c=c+1|0;if((c|0)<J[d+12>>2]){continue}break}}a=J[d+20>>2];if(!(a?!a|!K[d+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+32|0}function Hp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=0,v=0,w=0,x=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;r=J[g+24>>2];s=J[g+20>>2];t=J[g+16>>2];u=J[g+12>>2];a=J[g+28>>2];e=J[g+8>>2];c=0;d=0;f=ga-96|0;ga=f;qa(f,0,96);e=e?e:J[J[a+880>>2]>>2];b=J[a+772>>2];a:{if((b|0)!=J[a+776>>2]){break a}j=b?b<<1:1;if((j|0)<=(b|0)){break a}if(j){J[8369]=J[8369]+1;c=ia[J[6782]](P(j,104),16)|0;b=J[a+772>>2]}b:{if((b|0)<=0){break b}v=b&1;if((b|0)!=1){w=b&-2;b=0;while(1){i=P(d,104);sa(i+c|0,i+J[a+780>>2]|0,104);i=P(d|1,104);sa(i+c|0,i+J[a+780>>2]|0,104);d=d+2|0;b=b+2|0;if((w|0)!=(b|0)){continue}break}}if(!v){break b}b=P(d,104);sa(b+c|0,b+J[a+780>>2]|0,104)}b=J[a+780>>2];if(!(b?!b|!K[a+784|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+780>>2]=c;H[a+784|0]=1;J[a+776>>2]=j;b=J[a+772>>2]}b=J[a+780>>2]+P(b,104)|0;J[b+4>>2]=e;J[b>>2]=0;sa(b+8|0,f,96);J[a+772>>2]=J[a+772>>2]+1;ga=f+96|0;b=J[a+780>>2]+P(J[a+772>>2],104)|0;c=J[a+720>>2]+P(r,104)|0;J[b-96>>2]=c;d=J[a+720>>2]+P(s,104)|0;J[b-92>>2]=d;e=J[a+720>>2]+P(t,104)|0;J[b-88>>2]=e;f=J[a+720>>2]+P(u,104)|0;J[b-84>>2]=f;h=N[c+16>>2];m=Q(N[f+16>>2]-h);k=N[c+8>>2];n=Q(N[e+8>>2]-k);l=N[c+12>>2];o=Q(N[f+12>>2]-l);p=Q(N[f+8>>2]-k);q=Q(N[e+12>>2]-l);x=Q(Q(N[d+16>>2]-h)*Q(Q(n*o)-Q(p*q)));h=Q(N[e+16>>2]-h);N[b-80>>2]=x+Q(Q(Q(N[d+8>>2]-k)*Q(Q(q*m)-Q(o*h)))+Q(Q(N[d+12>>2]-l)*Q(Q(h*p)-Q(m*n))));H[a+924|0]=1;ga=g+32|0}function cg(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0;f=(D(b),x(2));g=(f<<1)+16777216>>>0<16777217;a:{b:{c:{c=(D(a),x(2));d:{if(c-2139095040>>>0>=2164260864){if(g){break d}break b}if(!g){break c}}i=Q(1);if((c|0)==1065353216){break a}d=f<<1;if(!d){break a}g=d>>>0<4278190081;d=c<<1;if(!(g&d>>>0<=4278190080)){return Q(a+b)}if((d|0)==2130706432){break a}return((f^-1)>>>31|0)==(d>>>0<2130706432|0)?Q(0):Q(b*b)}if((c<<1)+16777216>>>0<16777217){i=Q(a*a);if((c|0)<0){i=(Lj(f)|0)==1?Q(-i):i}if((f|0)>=0){break a}d=ga-16|0;N[d+12>>2]=Q(1)/i;return N[d+12>>2]}if((c|0)<0){d=Lj(f);if(!d){a=Q(a-a);return Q(a/a)}c=c&2147483647;d=((d|0)==1)<<16}if(c>>>0>8388607){break b}c=((D(Q(a*Q(8388608))),x(2))&2147483647)-192937984|0}f=c-1060306944|0;g=f>>>15&240;e=+(z(2,c-(f&-8388608)|0),E())*O[g+26472>>3]+-1;h=e*e;e=((O[3341]*e+O[3342])*(h*h)+((O[3343]*e+O[3344])*h+(O[3345]*e+(O[g+26480>>3]+ +(f>>23)))))*+b;C(+e);c=x(1)|0;x(0)|0;e:{c=c&2147450880;if((c|0)==1079967744|c>>>0<1079967744){break e}if(e>127.99999995700433){c=ga-16|0;N[c+12>>2]=d?Q(-1.5845632502852868e29):Q(1.5845632502852868e29);return Q(N[c+12>>2]*Q(1.5845632502852868e29))}if(!(e<=-150)){break e}c=ga-16|0;N[c+12>>2]=d?Q(-2.524354896707238e-29):Q(2.524354896707238e-29);return Q(N[c+12>>2]*Q(2.524354896707238e-29))}h=O[3300];j=h+e;e=e-(j-h);h=(O[3301]*e+O[3302])*(e*e)+(O[3303]*e+1);C(+j);x(1)|0;g=x(0)|0;f=d+g|0;d=f<<15;f=((g&31)<<3)+26144|0;g=J[f>>2];c=g;d=J[f+4>>2]+d|0;z(0,c|0);z(1,(c>>>0<c>>>0?d+1|0:d)|0);i=Q(h*+B())}return i}function RB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);i=ga-32|0;ga=i;h=N[b+20>>2];r=N[b+36>>2];s=N[b+24>>2];x=N[b+40>>2];j=N[b+4>>2];t=N[b+32>>2];o=N[b+8>>2];p=N[b>>2];u=N[b+16>>2];J[i+28>>2]=0;g=Q(u-p);k=Q(r-j);e=Q(t-p);l=Q(h-j);f=Q(Q(g*k)-Q(e*l));m=l;l=Q(x-o);n=Q(s-o);k=Q(Q(m*l)-Q(k*n));g=Q(Q(n*e)-Q(l*g));e=Q(Q(o*f)+Q(Q(p*k)+Q(j*g)));v=N[a+12>>2];m=N[a+4>>2];q=N[a+8>>2];l=Q(Q(Q(f*v)+Q(Q(k*m)+Q(g*q)))-e);w=N[a+28>>2];y=N[a+20>>2];z=N[a+24>>2];e=Q(Q(Q(f*w)+Q(Q(k*y)+Q(g*z)))-e);a:{if(Q(l*e)>=Q(0)){break a}b=J[a+36>>2];if(b&1&l<=Q(0)){break a}e=Q(l/Q(l-e));if(!(e<N[a+40>>2])){break a}n=Q(Q(1)-e);m=Q(Q(n*m)+Q(y*e));p=Q(p-m);q=Q(Q(n*q)+Q(z*e));h=Q(h-q);u=Q(u-m);j=Q(j-q);n=Q(Q(n*v)+Q(w*e));s=Q(s-n);o=Q(o-n);w=Q(Q(f*f)+Q(Q(k*k)+Q(g*g)));v=Q(w*Q(-9999999747378752e-20));if(!(Q(Q(Q(Q(p*h)-Q(u*j))*f)+Q(Q(Q(Q(j*s)-Q(h*o))*k)+Q(g*Q(Q(o*u)-Q(s*p)))))>=v)){break a}r=Q(r-q);t=Q(t-m);q=Q(Q(Q(u*r)-Q(t*h))*f);m=h;h=Q(x-n);if(!(v<=Q(q+Q(Q(Q(Q(m*h)-Q(r*s))*k)+Q(g*Q(Q(s*t)-Q(h*u))))))|!(v<=Q(Q(Q(Q(t*j)-Q(p*r))*f)+Q(Q(Q(Q(r*o)-Q(j*h))*k)+Q(g*Q(Q(h*p)-Q(o*t))))))){break a}h=f;f=Q(Q(1)/Q(Y(w)));j=Q(h*f);N[i+24>>2]=j;g=Q(g*f);N[i+20>>2]=g;f=Q(k*f);N[i+16>>2]=f;if(!(!(l<=Q(0))|b&2)){J[i+12>>2]=0;N[i+8>>2]=-j;N[i+4>>2]=-g;N[i>>2]=-f;N[a+40>>2]=ia[J[J[a>>2]+12>>2]](a,i,e,c,d);break a}N[a+40>>2]=ia[J[J[a>>2]+12>>2]](a,i+16|0,e,c,d)}ga=i+32|0}function hc(a,b,c,d){var e=Q(0),f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);f=ga+-64|0;ga=f;p=N[b+24>>2];q=N[b+20>>2];r=N[b+40>>2];s=N[b+36>>2];j=N[a+40>>2];k=N[a+20>>2];n=N[a+36>>2];l=N[a+24>>2];t=N[b+8>>2];u=N[b>>2];v=N[b+4>>2];w=N[b+16>>2];x=N[b+32>>2];g=N[a+8>>2];h=N[a+4>>2];o=N[a+32>>2];m=N[a+16>>2];i=N[a>>2];J[f+60>>2]=0;J[f+44>>2]=0;z=Q(Q(m*n)-Q(o*k));A=Q(Q(k*j)-Q(n*l));B=Q(Q(l*o)-Q(j*m));e=Q(Q(1)/Q(Q(g*z)+Q(Q(i*A)+Q(h*B))));y=Q(Q(Q(i*k)-Q(m*h))*e);k=Q(Q(Q(h*l)-Q(k*g))*e);l=Q(Q(Q(g*m)-Q(l*i))*e);N[f+56>>2]=Q(r*y)+Q(Q(x*k)+Q(s*l));m=Q(Q(Q(h*o)-Q(n*i))*e);h=Q(Q(Q(g*n)-Q(j*h))*e);g=Q(Q(Q(i*j)-Q(o*g))*e);N[f+52>>2]=Q(r*m)+Q(Q(x*h)+Q(s*g));N[f+40>>2]=Q(y*p)+Q(Q(k*w)+Q(l*q));N[f+36>>2]=Q(m*p)+Q(Q(h*w)+Q(g*q));J[f+28>>2]=0;i=Q(z*e);j=Q(A*e);e=Q(B*e);N[f+48>>2]=Q(r*i)+Q(Q(x*j)+Q(s*e));N[f+32>>2]=Q(i*p)+Q(Q(j*w)+Q(e*q));N[f+24>>2]=Q(y*t)+Q(Q(k*u)+Q(v*l));N[f+20>>2]=Q(m*t)+Q(Q(h*u)+Q(v*g));N[f+16>>2]=Q(i*t)+Q(Q(j*u)+Q(v*e));Na(f+16|0,f);j=N[f+12>>2];g=N[f+8>>2];i=N[f>>2];h=N[f+4>>2];e=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(g*g)+Q(Q(i*i)+Q(h*h)))))));g=Q(g*e);N[f+8>>2]=g;h=Q(h*e);N[f+4>>2]=h;i=Q(i*e);N[f>>2]=i;e=qb(Q(T(Q(U(Q(j*e),Q(-1))),Q(1))));N[d>>2]=e+e;J[c+12>>2]=0;e=Q(Q(g*g)+Q(Q(i*i)+Q(h*h)));a:{if(e<Q(1.4210854715202004e-14)){J[c>>2]=1065353216;J[c+4>>2]=0;e=Q(0);break a}e=Q(Q(1)/Q(Y(e)));N[c+4>>2]=h*e;N[c>>2]=i*e;e=Q(g*e)}N[c+8>>2]=e;ga=f- -64|0}function cD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a:{b:{c:{switch(J[a+92>>2]-2|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:d:{switch(b|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+128|0;break b;case 2:break d;default:break a}}b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+96|0;break b;case 2:break c;default:break a}}e:{switch(b|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+128|0;break b;case 2:b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+96|0;break b;case 3:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+144|0;break b;case 4:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+144|0;break b;case 5:break e;default:break a}}b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+144|0}b=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=b;b=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=b}}function KG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=0,o=0;e=ga-128|0;ga=e;h=N[b>>2];i=N[b+16>>2];l=h<i?h:i;j=N[b+32>>2];a:{if(N[a+28>>2]<(j>l?l:j)){break a}f=!(h>i)<<4;if(N[(j<N[b+f>>2]?f:32)+b>>2]<N[a+12>>2]){break a}h=N[b+8>>2];f=b+24|0;i=N[f>>2];l=h<i?h:i;k=b+40|0;j=N[k>>2];if(N[a+36>>2]<(j>l?l:j)){break a}f=h>i?b+8|0:f;if(N[(j<N[f>>2]?f:k)>>2]<N[a+20>>2]){break a}h=N[b+4>>2];f=b+20|0;i=N[f>>2];l=h<i?h:i;k=b+36|0;j=N[k>>2];if(N[a+32>>2]<(j>l?l:j)){break a}f=h>i?b+4|0:f;if(J[J[J[a+4>>2]+4>>2]+4>>2]>19|N[(j<N[f>>2]?f:k)>>2]<N[a+16>>2]){break a}k=J[a+48>>2];f=e+24|0;o=Bb(f);J[e+28>>2]=1;J[e+24>>2]=2176;g=J[b+12>>2];J[e+88>>2]=J[b+8>>2];J[e+92>>2]=g;g=J[b+4>>2];J[e+80>>2]=J[b>>2];J[e+84>>2]=g;g=J[b+28>>2];J[e+104>>2]=J[b+24>>2];J[e+108>>2]=g;g=J[b+20>>2];J[e+96>>2]=J[b+16>>2];J[e+100>>2]=g;g=J[b+44>>2];J[e+120>>2]=J[b+40>>2];J[e+124>>2]=g;g=J[b+36>>2];J[e+112>>2]=J[b+32>>2];J[e+116>>2]=g;N[e+68>>2]=N[a+56>>2];b=J[a+8>>2];g=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=g;J[e+20>>2]=d;J[e+16>>2]=c;J[e>>2]=b;J[e+4>>2]=f;b=ia[J[J[k>>2]+8>>2]](k,J[a+4>>2],e,J[a+64>>2])|0;f=J[a+44>>2];g=J[f+8>>2];b:{if(J[g+8>>2]==J[J[a+8>>2]+8>>2]){m=f+8|0;n=2;break b}g=J[f+12>>2];m=f+12|0;n=3}J[m>>2]=e;ia[J[J[f>>2]+(n<<2)>>2]](f,c,d);ia[J[J[b>>2]+8>>2]](b,J[a+4>>2],e,J[a+52>>2],J[a+44>>2]);c=J[a+44>>2];J[(J[J[c+8>>2]+8>>2]==J[J[a+8>>2]+8>>2]?8:12)+c>>2]=g;ia[J[J[b>>2]>>2]](b)|0;ia[J[J[k>>2]+60>>2]](k,b);Qa(o)}ga=e+128|0}function Bo(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=Q(g);h=Q(h);i=i|0;j=j|0;k=Q(k);var l=0;l=ga-304|0;ga=l;J[l+300>>2]=a;J[l+296>>2]=b;J[l+292>>2]=c;J[l+288>>2]=d;N[l+284>>2]=e;N[l+280>>2]=f;N[l+276>>2]=g;N[l+272>>2]=h;J[l+268>>2]=i;H[l+267|0]=j;N[l+260>>2]=k;a=J[l+300>>2];J[l+256>>2]=J[l+288>>2];Ub(l+240|0,J[l+292>>2],J[l+288>>2]);N[l+236>>2]=N[l+260>>2]*Q(.01745329238474369);e=Q(Q(N[l+272>>2]-N[l+276>>2])/N[l+236>>2]);a:{if(Q(R(e))<Q(2147483648)){b=~~e;break a}b=-2147483648}J[l+232>>2]=b;if(!J[l+232>>2]){J[l+232>>2]=1}b=J[l+296>>2];c=l+168|0;Xb(c,l+284|0,J[l+256>>2]);N[l+164>>2]=Ta(N[l+276>>2]);d=l+184|0;Ia(d,c,l+164|0);c=l+200|0;va(c,b,d);b=l+128|0;Xb(b,l+280|0,l+240|0);N[l+124>>2]=Sa(N[l+276>>2]);d=l+144|0;Ia(d,b,l+124|0);va(l+216|0,c,d);if(H[l+267|0]&1){ia[J[J[a>>2]+8>>2]](a,J[l+296>>2],l+216|0,J[l+268>>2])}J[l+120>>2]=1;while(1){if(J[l+120>>2]<=J[l+232>>2]){e=N[l+276>>2];N[l+116>>2]=e+Q(Q(Q(N[l+272>>2]-e)*Q(J[l+120>>2]))/Q(J[l+232>>2]));b=J[l+296>>2];c=l+48|0;Xb(c,l+284|0,J[l+256>>2]);N[l+44>>2]=Ta(N[l+116>>2]);d=l- -64|0;Ia(d,c,l+44|0);c=l+80|0;va(c,b,d);b=l+8|0;Xb(b,l+280|0,l+240|0);N[l+4>>2]=Sa(N[l+116>>2]);d=l+24|0;Ia(d,b,l+4|0);b=l+96|0;va(b,c,d);c=l+216|0;ia[J[J[a>>2]+8>>2]](a,c,b,J[l+268>>2]);d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d;J[l+120>>2]=J[l+120>>2]+1;continue}break}if(H[l+267|0]&1){ia[J[J[a>>2]+8>>2]](a,J[l+296>>2],l+216|0,J[l+268>>2])}ga=l+304|0}function YH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;J[7393]=J[7393]+1;e=J[b+12>>2]>J[c+12>>2];h=e?b:c;f=J[h+12>>2];i=e?c:b;g=J[i+12>>2];b=f<<16|g;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;j=J[a+12>>2]-1&(b>>16^b);b=J[J[a+44>>2]+(j<<2)>>2];a:{if((b|0)==-1){break a}k=J[a- -64>>2];e=J[a+16>>2];while(1){c=e+(b<<4)|0;if(!((g|0)==J[J[c>>2]+12>>2]&(f|0)==J[J[c+4>>2]+12>>2])){b=J[(b<<2)+k>>2];if((b|0)!=-1){continue}break a}break}ia[J[J[a>>2]+32>>2]](a,c,d);l=J[(e+(b<<4)|0)+12>>2];b:{c:{f=J[a+44>>2]+(j<<2)|0;b=J[f>>2];e=c-J[a+16>>2]>>4;if((b|0)==(e|0)){break c}g=J[a+64>>2];while(1){c=b;b=J[g+(b<<2)>>2];if((e|0)!=(b|0)){continue}break}if((c|0)==-1){break c}b=J[a+64>>2];J[b+(c<<2)>>2]=J[b+(e<<2)>>2];break b}J[f>>2]=J[J[a+64>>2]+(e<<2)>>2]}f=J[a+8>>2]-1|0;b=J[a+72>>2];if(b){ia[J[J[b>>2]+12>>2]](b,i,h,d)|0}if((e|0)!=(f|0)){d:{e:{h=J[a+16>>2];d=h+(f<<4)|0;b=J[J[d+4>>2]+12>>2]<<16|J[J[d>>2]+12>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;i=J[a+12>>2]-1&(b>>16^b);g=J[a+44>>2]+(i<<2)|0;b=J[g>>2];if((f|0)==(b|0)){break e}j=J[a+64>>2];while(1){c=b;b=J[j+(b<<2)>>2];if((f|0)!=(b|0)){continue}break}if((c|0)==-1){break e}b=J[a+64>>2];J[b+(c<<2)>>2]=J[b+(f<<2)>>2];break d}J[g>>2]=J[J[a+64>>2]+(f<<2)>>2]}c=J[d+4>>2];b=h+(e<<4)|0;J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[d+12>>2];J[b+8>>2]=J[d+8>>2];J[b+12>>2]=c;b=J[a+44>>2]+(i<<2)|0;J[J[a+64>>2]+(e<<2)>>2]=J[b>>2];J[b>>2]=e}J[a+8>>2]=J[a+8>>2]-1}return l|0}function Re(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{c:{d:{if(K[a+164|0]){c=J[a+128>>2];if((c|0)!=J[a+132>>2]){break a}i=c?c<<1:1;if((i|0)<=(c|0)){break a}if(i){J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;c=J[a+128>>2]}d=J[a+136>>2];if((c|0)<=0){break d}if(c-1>>>0>=3){k=c&-4;while(1){g=h<<2;J[g+e>>2]=J[d+g>>2];j=g|4;J[j+e>>2]=J[d+j>>2];j=g|8;J[j+e>>2]=J[d+j>>2];g=g|12;J[g+e>>2]=J[d+g>>2];h=h+4|0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}f=c&3;if(!f){break c}while(1){c=h<<2;J[c+e>>2]=J[c+d>>2];h=h+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}break c}f=J[a+148>>2];e:{if((f|0)!=J[a+152>>2]){break e}g=f?f<<1:1;if((g|0)<=(f|0)){break e}if(g){J[8369]=J[8369]+1;e=ia[J[6782]](g<<1,16)|0;f=J[a+148>>2]}c=J[a+156>>2];f:{g:{if((f|0)>0){if(f-1>>>0>=3){i=f&-4;while(1){d=h<<1;I[d+e>>1]=L[c+d>>1];k=d|2;I[k+e>>1]=L[c+k>>1];k=d|4;I[k+e>>1]=L[c+k>>1];d=d|6;I[d+e>>1]=L[c+d>>1];h=h+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=f&3;if(d){while(1){i=h<<1;I[i+e>>1]=L[c+i>>1];h=h+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}if(K[a+160|0]){break g}break f}if(!c|!K[a+160|0]){break f}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}f=J[a+148>>2]}J[a+156>>2]=e;J[a+152>>2]=g;H[a+160|0]=1}e=J[a+156>>2];I[e+(f<<1)>>1]=b;J[a+148>>2]=f+1;J[J[a+32>>2]+4>>2]=e;return}if(!d){break b}}if(d?K[a+140|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+128>>2]}J[a+136>>2]=e;J[a+132>>2]=i;H[a+140|0]=1}e=J[a+136>>2];J[e+(c<<2)>>2]=b;J[a+128>>2]=J[a+128>>2]+1;J[J[a+32>>2]+4>>2]=e}function Qz(a,b,c){a=a|0;b=b|0;c=c|0;kh(a,b,c);N[b+256>>2]=N[a+264>>2];N[b+260>>2]=N[a+268>>2];N[b+264>>2]=N[a+272>>2];N[b+268>>2]=N[a+276>>2];N[b+272>>2]=N[a+280>>2];N[b+276>>2]=N[a+284>>2];N[b+280>>2]=N[a+288>>2];N[b+284>>2]=N[a+292>>2];N[b+288>>2]=N[a+296>>2];N[b+292>>2]=N[a+300>>2];N[b+296>>2]=N[a+304>>2];N[b+300>>2]=N[a+308>>2];N[b+304>>2]=N[a+312>>2];N[b+308>>2]=N[a+316>>2];N[b+312>>2]=N[a+320>>2];N[b+316>>2]=N[a+324>>2];N[b+320>>2]=N[a+328>>2];N[b+324>>2]=N[a+332>>2];N[b+328>>2]=N[a+336>>2];N[b+332>>2]=N[a+340>>2];N[b+448>>2]=N[a+344>>2];N[b+336>>2]=N[a+544>>2];N[b+340>>2]=N[a+548>>2];N[b+344>>2]=N[a+552>>2];N[b+348>>2]=N[a+556>>2];N[b+352>>2]=N[a+348>>2];N[b+356>>2]=N[a+352>>2];N[b+360>>2]=N[a+356>>2];N[b+364>>2]=N[a+360>>2];N[b+368>>2]=N[a+364>>2];N[b+372>>2]=N[a+368>>2];N[b+376>>2]=N[a+372>>2];N[b+380>>2]=N[a+376>>2];N[b+384>>2]=N[a+380>>2];N[b+388>>2]=N[a+384>>2];N[b+392>>2]=N[a+388>>2];N[b+396>>2]=N[a+392>>2];N[b+400>>2]=N[a+396>>2];N[b+404>>2]=N[a+400>>2];N[b+408>>2]=N[a+404>>2];N[b+412>>2]=N[a+408>>2];N[b+416>>2]=N[a+412>>2];N[b+420>>2]=N[a+416>>2];N[b+424>>2]=N[a+420>>2];N[b+428>>2]=N[a+424>>2];N[b+432>>2]=N[a+428>>2];N[b+436>>2]=N[a+432>>2];N[b+440>>2]=N[a+436>>2];N[b+444>>2]=N[a+440>>2];N[b+452>>2]=N[a+444>>2];N[b+456>>2]=N[a+448>>2];J[b+484>>2]=K[a+452|0];N[b+460>>2]=N[a+456>>2];N[b+464>>2]=N[a+460>>2];N[b+468>>2]=N[a+464>>2];N[b+472>>2]=N[a+468>>2];N[b+476>>2]=N[a+472>>2];N[b+480>>2]=N[a+476>>2];return 3442}function dA(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;ya(2746);b=J[a+204>>2];ia[J[J[b>>2]+8>>2]](b,a,J[a+24>>2]);h=J[a+308>>2];if((h|0)>0){i=J[a+316>>2];j=J[a+204>>2];while(1){b=J[i+(g<<2)>>2];c=J[b+740>>2];a:{if(!c){break a}b=J[b+744>>2];if(!b|J[c+204>>2]&3|K[b+204|0]&3){break a}b=J[b+208>>2];d=J[j+16>>2];e=J[c+208>>2];f=d+(e<<3)|0;c=J[f>>2];if((c|0)!=(e|0)){while(1){c=d+(c<<3)|0;J[f>>2]=J[c>>2];e=J[c>>2];f=d+(e<<3)|0;c=J[f>>2];if((c|0)!=(e|0)){continue}break}}f=d+(b<<3)|0;c=J[f>>2];if((c|0)!=(b|0)){while(1){b=d+(c<<3)|0;J[f>>2]=J[b>>2];b=J[b>>2];f=d+(b<<3)|0;c=J[f>>2];if((b|0)!=(c|0)){continue}break}}if((b|0)==(e|0)){break a}c=d+(e<<3)|0;J[c>>2]=b;b=d+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}g=g+1|0;if((h|0)!=(g|0)){continue}break}}h=J[a+212>>2];if((h|0)>0){i=J[a+220>>2];j=J[a+204>>2];f=0;while(1){b=J[i+(f<<2)>>2];b:{if(!K[b+20|0]){break b}c=J[b+28>>2];if(K[c+204|0]&3){break b}b=J[b+32>>2];if(K[b+204|0]&3){break b}b=J[b+208>>2];d=J[j+16>>2];e=J[c+208>>2];c=d+(e<<3)|0;g=J[c>>2];if((g|0)!=(e|0)){while(1){e=c;c=d+(g<<3)|0;J[e>>2]=J[c>>2];e=J[c>>2];c=d+(e<<3)|0;g=J[c>>2];if((g|0)!=(e|0)){continue}break}}c=d+(b<<3)|0;g=J[c>>2];if((g|0)!=(b|0)){while(1){b=d+(g<<3)|0;J[c>>2]=J[b>>2];b=J[b>>2];c=d+(b<<3)|0;g=J[c>>2];if((b|0)!=(g|0)){continue}break}}if((b|0)==(e|0)){break b}c=d+(e<<3)|0;J[c>>2]=b;b=d+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}f=f+1|0;if((h|0)!=(f|0)){continue}break}}b=J[a+204>>2];ia[J[J[b>>2]+12>>2]](b,a);xa()}function td(a,b,c,d,e){var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0);f=J[a+9288>>2];if(f){g=J[f+48>>2];if(g){J[g+44>>2]=J[f+44>>2]}g=J[f+44>>2];if(g){J[g+48>>2]=J[f+48>>2]}if(J[a+9288>>2]==(f|0)){J[a+9288>>2]=J[f+48>>2]}g=a+9292|0;J[g>>2]=J[g>>2]-1;J[f+44>>2]=0;J[f+48>>2]=J[a+9280>>2];g=J[a+9280>>2];if(g){J[g+44>>2]=f}J[a+9280>>2]=f;g=a+9284|0;J[g>>2]=J[g>>2]+1;J[f+28>>2]=d;J[f+24>>2]=c;J[f+20>>2]=b;H[f+55|0]=0;k=N[c+24>>2];q=N[d+24>>2];h=N[b+24>>2];l=N[d+20>>2];j=N[b+20>>2];m=N[c+20>>2];n=N[c+16>>2];o=N[d+16>>2];i=N[b+16>>2];J[f+12>>2]=0;n=Q(n-i);l=Q(l-j);i=Q(o-i);m=Q(m-j);j=Q(Q(n*l)-Q(i*m));N[f+8>>2]=j;k=Q(k-h);o=Q(k*i);i=Q(q-h);h=Q(o-Q(i*n));N[f+4>>2]=h;i=Q(Q(m*i)-Q(l*k));N[f>>2]=i;p=2;a:{h=Q(Y(Q(Q(j*j)+Q(Q(i*i)+Q(h*h)))));if(!(h>Q(9999999747378752e-20))){break a}g=f+16|0;b:{if(Cg(f,b,c,g)){break b}if(Cg(f,c,d,g)){break b}if(Cg(f,d,b,g)){break b}N[f+16>>2]=Q(Q(N[b+24>>2]*N[f+8>>2])+Q(Q(N[b+16>>2]*N[f>>2])+Q(N[b+20>>2]*N[f+4>>2])))/h}h=Q(Q(1)/h);N[f>>2]=h*N[f>>2];N[f+4>>2]=h*N[f+4>>2];N[f+8>>2]=h*N[f+8>>2];if(e){return f}p=3;if(!(N[g>>2]>=Q(-9999999747378752e-21))){break a}return f}J[a>>2]=p;b=J[f+48>>2];if(b){J[b+44>>2]=J[f+44>>2]}b=J[f+44>>2];if(b){J[b+48>>2]=J[f+48>>2]}if(J[a+9280>>2]==(f|0)){J[a+9280>>2]=J[f+48>>2]}J[a+9284>>2]=J[a+9284>>2]-1;J[f+44>>2]=0;J[f+48>>2]=J[a+9288>>2];b=J[a+9288>>2];if(b){J[b+44>>2]=f}J[a+9288>>2]=f;J[a+9292>>2]=J[a+9292>>2]+1;return 0}J[a>>2]=5;return 0}function oE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0);f=ga-48|0;ga=f;j=N[b+36>>2];k=N[b+20>>2];l=N[b+40>>2];m=N[b+24>>2];n=N[b+4>>2];o=N[b+8>>2];g=N[c+8>>2];p=N[b+32>>2];h=N[c>>2];q=N[b>>2];i=N[c+4>>2];r=N[b+16>>2];J[f+44>>2]=0;N[f+32>>2]=Q(p*g)+Q(Q(q*h)+Q(r*i));N[f+40>>2]=Q(l*g)+Q(Q(o*h)+Q(i*m));N[f+36>>2]=Q(j*g)+Q(Q(n*h)+Q(i*k));s=f+16|0;ia[J[J[a>>2]+64>>2]](s,a,f+32|0);m=N[b+56>>2];n=N[b+40>>2];o=N[b+36>>2];p=N[b+52>>2];q=N[b+24>>2];r=N[b+20>>2];t=N[b+32>>2];u=N[b+48>>2];v=N[b+8>>2];w=N[b>>2];x=N[b+4>>2];y=N[b+16>>2];g=N[f+24>>2];h=N[f+16>>2];i=N[f+20>>2];J[f+12>>2]=0;N[f+8>>2]=-N[f+40>>2];N[f+4>>2]=-N[f+36>>2];N[f>>2]=-N[f+32>>2];ia[J[J[a>>2]+64>>2]](s,a,f);z=N[b+56>>2];A=N[b+40>>2];B=N[b+36>>2];C=N[b+52>>2];D=N[b+24>>2];E=N[b+20>>2];F=N[b+32>>2];G=N[b+48>>2];H=N[b+8>>2];I=N[b>>2];K=N[b+4>>2];L=N[b+16>>2];j=N[f+24>>2];k=N[f+16>>2];l=N[f+20>>2];N[d>>2]=Q(Q(m+Q(Q(g*n)+Q(Q(h*t)+Q(i*o))))*N[c+8>>2])+Q(Q(Q(u+Q(Q(g*v)+Q(Q(h*w)+Q(i*x))))*N[c>>2])+Q(Q(p+Q(Q(g*q)+Q(Q(h*y)+Q(i*r))))*N[c+4>>2]));g=Q(Q(Q(z+Q(Q(j*A)+Q(Q(k*F)+Q(l*B))))*N[c+8>>2])+Q(Q(Q(G+Q(Q(j*H)+Q(Q(k*I)+Q(l*K))))*N[c>>2])+Q(Q(C+Q(Q(j*D)+Q(Q(k*L)+Q(l*E))))*N[c+4>>2])));N[e>>2]=g;h=N[d>>2];if(h>g){N[d>>2]=g;N[e>>2]=h}ga=f+48|0}function Av(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;J[g+4>>2]=c;a=J[g+8>>2];b=J[g+4>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2];J[h+8>>2]=a;J[h+4>>2]=b;a=J[h+8>>2];i=ga-16|0;ga=i;j=J[h+12>>2];J[i+12>>2]=j+152;J[i+8>>2]=a;a=ga-16|0;f=J[i+12>>2];J[a+12>>2]=f;J[i+4>>2]=J[J[a+12>>2]+4>>2];a=J[i+4>>2];b=ga-16|0;J[b+12>>2]=f;if(J[J[b+12>>2]+8>>2]==(a|0)){a=ga-16|0;J[a+12>>2]=f;b=J[J[a+12>>2]+4>>2];J[a+12>>2]=f;J[a+8>>2]=b;if(J[a+8>>2]){a=J[a+8>>2]<<1}else{a=1}b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;a=ga-16|0;c=J[b+12>>2];J[a+12>>2]=c;if(J[J[a+12>>2]+8>>2]<J[b+8>>2]){d=J[b+8>>2];a=ga-16|0;ga=a;J[a+8>>2]=c;J[a+4>>2]=d;e=J[a+8>>2];a:{if(J[a+4>>2]){k=J[a+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=k;J[d+4>>2]=0;e=J[d+8>>2]<<6;J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[a+12>>2]=e;break a}J[a+12>>2]=0}ga=a+16|0;J[b+4>>2]=J[a+12>>2];a=ga;d=a-16|0;J[d+12>>2]=c;d=J[J[d+12>>2]+4>>2];e=J[b+4>>2];a=a-32|0;ga=a;J[a+28>>2]=c;J[a+24>>2]=0;J[a+20>>2]=d;J[a+16>>2]=e;d=J[a+28>>2];J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+20>>2]){e=J[a+12>>2]<<6;_b(e+J[a+16>>2]|0,e+J[d+12>>2]|0);J[a+12>>2]=J[a+12>>2]+1;continue}break}ga=a+32|0;a=ga-16|0;J[a+12>>2]=c;Eb(c,J[J[a+12>>2]+4>>2]);lb(c);H[c+16|0]=1;J[c+12>>2]=J[b+4>>2];J[c+8>>2]=J[b+8>>2]}ga=b+16|0}_b(J[f+12>>2]+(J[f+4>>2]<<6)|0,J[i+8>>2]);J[f+4>>2]=J[f+4>>2]+1;ga=i+16|0;Mf(j+172|0,h+4|0);ga=h+16|0;ga=g+16|0}function Ck(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=Q(0);ya(2900);l=J[a+232>>2];if((l|0)>0){while(1){c=J[J[a+240>>2]+(m<<2)>>2];if(!(K[c+204|0]&3)){d=N[c+312>>2];k=N[c+444>>2];e=cg(Q(Q(1)-k),b);d=Q(d*e);N[c+312>>2]=d;h=Q(e*N[c+316>>2]);N[c+316>>2]=h;e=Q(e*N[c+320>>2]);N[c+320>>2]=e;g=N[c+328>>2];n=N[c+448>>2];f=cg(Q(Q(1)-n),b);g=Q(g*f);N[c+328>>2]=g;i=Q(f*N[c+332>>2]);N[c+332>>2]=i;f=Q(f*N[c+336>>2]);N[c+336>>2]=f;a:{if(!K[c+452|0]){break a}if(!(!(N[c+464>>2]>Q(Q(f*f)+Q(Q(g*g)+Q(i*i))))|!(N[c+460>>2]>Q(Q(e*e)+Q(Q(d*d)+Q(h*h)))))){j=N[c+456>>2];f=Q(f*j);N[c+336>>2]=f;i=Q(i*j);N[c+332>>2]=i;g=Q(g*j);N[c+328>>2]=g;e=Q(e*j);N[c+320>>2]=e;h=Q(h*j);N[c+316>>2]=h;d=Q(d*j);N[c+312>>2]=d}j=Q(Y(Q(Q(e*e)+Q(Q(d*d)+Q(h*h)))));b:{if(!(j<k)){break b}if(j>Q(.004999999888241291)){k=e;e=Q(Q(1)/j);N[c+320>>2]=k-Q(Q(k*e)*Q(.004999999888241291));N[c+316>>2]=h-Q(Q(h*e)*Q(.004999999888241291));N[c+312>>2]=d-Q(Q(d*e)*Q(.004999999888241291));break b}J[c+312>>2]=0;J[c+316>>2]=0;J[c+320>>2]=0;J[c+324>>2]=0}d=Q(Y(Q(Q(f*f)+Q(Q(g*g)+Q(i*i)))));if(!(d<n)){break a}if(d>Q(.004999999888241291)){d=Q(Q(1)/d);N[c+336>>2]=f-Q(Q(f*d)*Q(.004999999888241291));N[c+332>>2]=i-Q(Q(i*d)*Q(.004999999888241291));N[c+328>>2]=g-Q(Q(g*d)*Q(.004999999888241291));break a}J[c+328>>2]=0;J[c+332>>2]=0;J[c+336>>2]=0;J[c+340>>2]=0}ve(c,b,c+68|0);l=J[a+232>>2]}m=m+1|0;if((m|0)<(l|0)){continue}break}}xa()}function Wm(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;c=ga+-64|0;ga=c;k=J[b+192>>2];ia[J[J[k>>2]+8>>2]](k,b+4|0,c+48|0,c+32|0);d=N[6778];g=Q(N[c+48>>2]-d);N[c+48>>2]=g;h=Q(N[c+52>>2]-d);N[c+52>>2]=h;f=Q(N[c+56>>2]-d);N[c+56>>2]=f;e=Q(d+N[c+32>>2]);N[c+32>>2]=e;i=Q(d+N[c+36>>2]);N[c+36>>2]=i;j=Q(d+N[c+40>>2]);N[c+40>>2]=j;a:{if(K[b+204|0]&3|(!K[a+44|0]|J[b+236>>2]!=2)){break a}k=J[b+192>>2];ia[J[J[k>>2]+8>>2]](k,b+68|0,c+16|0,c);h=Q(N[c+16>>2]-d);N[c+16>>2]=h;f=Q(N[c+20>>2]-d);N[c+20>>2]=f;e=Q(N[c+24>>2]-d);N[c+24>>2]=e;i=Q(d+N[c>>2]);N[c>>2]=i;j=Q(d+N[c+4>>2]);N[c+4>>2]=j;d=Q(d+N[c+8>>2]);N[c+8>>2]=d;g=N[c+48>>2];if(h<g){N[c+48>>2]=h;g=h}h=N[c+52>>2];if(f<h){N[c+52>>2]=f;h=f}f=N[c+56>>2];if(e<f){N[c+56>>2]=e;f=e}e=N[c+28>>2];if(e<N[c+60>>2]){N[c+60>>2]=e}e=N[c+32>>2];if(i>e){N[c+32>>2]=i;e=i}i=N[c+36>>2];if(j>i){N[c+36>>2]=j;i=j}j=N[c+40>>2];if(d>j){N[c+40>>2]=d;j=d}d=N[c+12>>2];if(!(d>N[c+44>>2])){break a}N[c+44>>2]=d}k=J[a+68>>2];b:{c:{if(!(H[b+204|0]&1)){f=Q(j-f);g=Q(e-g);e=Q(g*g);g=Q(i-h);if(!(Q(Q(f*f)+Q(e+Q(g*g)))<Q(999999995904))){break c}}ia[J[J[k>>2]+16>>2]](k,J[b+188>>2],c+48|0,c+32|0,J[a+24>>2]);break b}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=5}if(K[29588]){break b}b=J[a+72>>2];if(!b){break b}H[29588]=1;ia[J[J[b>>2]+36>>2]](b,2960);b=J[a+72>>2];ia[J[J[b>>2]+36>>2]](b,4335);b=J[a+72>>2];ia[J[J[b>>2]+36>>2]](b,4412);a=J[a+72>>2];ia[J[J[a>>2]+36>>2]](a,4403)}ga=c- -64|0}function Tl(a,b,c,d){var e=Q(0),f=0,g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0);j=ga-32|0;ga=j;while(1){r=c;h=J[a+12>>2];i=h+P((c+d|0)/2|0,24)|0;s=J[i+20>>2];m=N[i+16>>2];u=N[i+8>>2];v=N[i+4>>2];w=N[i>>2];i=d;while(1){n=N[b+8>>2];k=Q(u-n);e=Q(k*k);o=N[b>>2];k=Q(w-o);l=Q(k*k);p=N[b+4>>2];k=Q(v-p);k=Q(e+Q(l+Q(k*k)));while(1){a:{f=P(c,24)+h|0;e=N[f+16>>2];b:{if(e!=m){if(e<m){break b}break a}e=Q(N[f+8>>2]-n);l=Q(e*e);e=Q(N[f>>2]-o);q=Q(e*e);e=Q(N[f+4>>2]-p);e=Q(l+Q(q+Q(e*e)));if(((e!=k?e<k:J[f+20>>2]<(s|0))|0)!=1){break a}}c=c+1|0;continue}break}while(1){c:{t=P(i,24);g=t+h|0;e=N[g+16>>2];d:{if(e!=m){if(e>m){break d}break c}e=Q(N[g+8>>2]-n);l=Q(e*e);e=Q(N[g>>2]-o);q=Q(e*e);e=Q(N[g+4>>2]-p);e=Q(l+Q(q+Q(e*e)));if(((e!=k?e>k:J[g+20>>2]>(s|0))|0)!=1){break c}}i=i-1|0;continue}break}if((c|0)<=(i|0)){h=J[f+20>>2];J[j+24>>2]=J[f+16>>2];J[j+28>>2]=h;h=J[f+12>>2];J[j+16>>2]=J[f+8>>2];J[j+20>>2]=h;h=J[f+4>>2];J[j+8>>2]=J[f>>2];J[j+12>>2]=h;h=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=h;h=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=h;h=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=h;g=J[j+12>>2];f=J[a+12>>2]+t|0;J[f>>2]=J[j+8>>2];J[f+4>>2]=g;g=J[j+28>>2];J[f+16>>2]=J[j+24>>2];J[f+20>>2]=g;g=J[j+20>>2];J[f+8>>2]=J[j+16>>2];J[f+12>>2]=g;i=i-1|0;c=c+1|0}if((c|0)<=(i|0)){h=J[a+12>>2];continue}break}if((i|0)>(r|0)){Tl(a,b,r,i)}if((c|0)<(d|0)){continue}break}ga=j+32|0}function Tk(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;a:{d=N[c+128>>2];if(d==Q(0)){break a}J[7989]=J[7989]+1;h=d;d=N[c+96>>2];g=N[c+24>>2];i=N[c+16>>2];j=N[c+20>>2];e=N[c+108>>2];e=Q(Q(Q(h-Q(d*N[c+116>>2]))-Q(Q(Q(Q(g*N[a+152>>2])+Q(Q(i*N[a+144>>2])+Q(j*N[a+148>>2])))+Q(Q(N[c+8>>2]*N[a+168>>2])+Q(Q(N[c>>2]*N[a+160>>2])+Q(N[c+4>>2]*N[a+164>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+152>>2])+Q(Q(N[c+48>>2]*N[b+144>>2])+Q(N[c+52>>2]*N[b+148>>2])))+Q(Q(N[c+40>>2]*N[b+168>>2])+Q(Q(N[c+32>>2]*N[b+160>>2])+Q(N[c+36>>2]*N[b+164>>2]))))*e));h=Q(d+e);f=N[c+120>>2];k=h<f;N[c+96>>2]=k?f:h;d=k?Q(f-d):e;if(J[a+240>>2]){N[a+144>>2]=Q(N[a+112>>2]*Q(d*Q(i*N[a+128>>2])))+N[a+144>>2];N[a+148>>2]=Q(Q(d*Q(j*N[a+132>>2]))*N[a+116>>2])+N[a+148>>2];N[a+152>>2]=Q(Q(d*Q(g*N[a+136>>2]))*N[a+120>>2])+N[a+152>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+160>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+160>>2];g=N[a+104>>2];N[a+164>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+164>>2];N[a+168>>2]=Q(e*Q(d*g))+N[a+168>>2]}if(!J[b+240>>2]){break a}e=N[c+56>>2];f=N[c+52>>2];N[b+144>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+144>>2];N[b+148>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+148>>2];N[b+152>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+152>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+160>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+160>>2];g=N[b+104>>2];N[b+164>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+164>>2];N[b+168>>2]=Q(e*Q(d*g))+N[b+168>>2]}}function Km(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ga-32|0;ga=h;e=J[a+12>>2];n=K[a+28|0];l=n?c:b;m=J[l+4>>2];f=J[m+16>>2];a:{if((e|0)>=(f|0)){break a}if(J[a+16>>2]<(f|0)){if(f){J[8369]=J[8369]+1;i=ia[J[6782]](f<<2,16)|0;d=J[a+12>>2]}else{d=e}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){q=d&-4;while(1){g=j<<2;J[g+i>>2]=J[g+J[a+20>>2]>>2];k=g|4;J[k+i>>2]=J[k+J[a+20>>2]>>2];k=g|8;J[k+i>>2]=J[k+J[a+20>>2]>>2];g=g|12;J[g+i>>2]=J[g+J[a+20>>2]>>2];j=j+4|0;o=o+4|0;if((o|0)!=(q|0)){continue}break}}d=d&3;if(!d){break b}while(1){g=j<<2;J[g+i>>2]=J[g+J[a+20>>2]>>2];j=j+1|0;p=p+1|0;if((d|0)!=(p|0)){continue}break}}d=J[a+20>>2];if(!(d?!d|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+20>>2]=i;H[a+24|0]=1;J[a+16>>2]=f}d=(e^-1)+f|0;i=f-e&3;if(i){j=0;while(1){J[J[a+20>>2]+(e<<2)>>2]=0;e=e+1|0;j=j+1|0;if((i|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=e<<2;J[d+J[a+20>>2]>>2]=0;J[(d+J[a+20>>2]|0)+4>>2]=0;J[(d+J[a+20>>2]|0)+8>>2]=0;J[(d+J[a+20>>2]|0)+12>>2]=0;e=e+4|0;if((f|0)!=(e|0)){continue}break}}J[a+12>>2]=f;if((f|0)>0){b=n?b:c;e=0;while(1){c:{if(J[m+64>>2]){J[J[a+20>>2]+(e<<2)>>2]=0;break c}c=J[l+12>>2];d=J[l+8>>2];J[h+12>>2]=J[(J[m+24>>2]+P(e,80)|0)+64>>2];J[h+16>>2]=d;J[h+20>>2]=c;J[h+28>>2]=e;J[h+24>>2]=-1;J[h+8>>2]=l;c=J[a+4>>2];c=ia[J[J[c>>2]+8>>2]](c,h+8|0,b,J[a+32>>2])|0;J[J[a+20>>2]+(e<<2)>>2]=c}e=e+1|0;if((f|0)!=(e|0)){continue}break}}ga=h+32|0}function VH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;J[7394]=J[7394]+1;e=J[a+24>>2];a:{b:{if(e){if(ia[J[J[e>>2]+8>>2]](e,b,c)|0){break b}break a}if(!(L[c+6>>1]&L[b+4>>1])|!(L[b+6>>1]&L[c+4>>1])){break a}}d=J[b+12>>2]>J[c+12>>2];i=d?b:c;j=J[i+12>>2];k=d?c:b;g=J[k+12>>2];b=j<<16|g;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;m=b>>16^b;d=a;b=J[a+12>>2];l=m&b-1;a=J[J[a+44>>2]+(l<<2)>>2];c:{if((a|0)!=-1){h=J[d- -64>>2];e=J[d+16>>2];while(1){f=a<<4;c=f+e|0;if((g|0)==J[J[c>>2]+12>>2]&(j|0)==J[J[(e+f|0)+4>>2]+12>>2]){break c}a=J[h+(a<<2)>>2];if((a|0)!=-1){continue}break}}a=b;g=J[d+8>>2];c=g;d:{if((a|0)!=(c|0)){break d}c=b;e=a?a<<1:1;if((e|0)<=(a|0)){break d}e:{if(!e){c=0;a=b;break e}J[8369]=J[8369]+1;c=ia[J[6782]](e<<4,16)|0;a=J[d+8>>2]}j=a;if((j|0)>0){a=0;while(1){f=a<<4;h=f+c|0;f=f+J[d+16>>2]|0;J[h>>2]=J[f>>2];J[h+4>>2]=J[f+4>>2];J[h+8>>2]=J[f+8>>2];J[h+12>>2]=J[f+12>>2];a=a+1|0;if((j|0)!=(a|0)){continue}break}}a=J[d+16>>2];if(!(a?!a|!K[d+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+16>>2]=c;H[d+20|0]=1;J[d+12>>2]=e;c=J[d+8>>2];a=e}J[d+8>>2]=c+1;e=J[d+16>>2];c=J[d+72>>2];if(c){ia[J[J[c>>2]+8>>2]](c,k,i)|0;a=J[d+12>>2]}c=e+(g<<4)|0;if((a|0)>(b|0)){an(d);l=J[d+12>>2]-1&m}b=J[k+12>>2]<J[i+12>>2];J[c>>2]=b?k:i;a=e+(g<<4)|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+4>>2]=b?i:k;a=J[d+44>>2]+(l<<2)|0;J[J[d- -64>>2]+(g<<2)>>2]=J[a>>2];J[a>>2]=g}d=c}return d|0}function Dy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c=b;e=J[b+4>>2];b=J[a+24>>2];a:{if((e|0)<=(b|0)){break a}if((e|0)>J[a+28>>2]){if(e){J[8369]=J[8369]+1;f=ia[J[6782]](e<<2,16)|0;d=J[a+24>>2]}else{d=b}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){i=d&-4;while(1){h=g<<2;J[h+f>>2]=J[h+J[a+32>>2]>>2];j=h|4;J[j+f>>2]=J[j+J[a+32>>2]>>2];j=h|8;J[j+f>>2]=J[j+J[a+32>>2]>>2];h=h|12;J[h+f>>2]=J[h+J[a+32>>2]>>2];g=g+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}d=d&3;if(!d){break b}while(1){h=g<<2;J[h+f>>2]=J[h+J[a+32>>2]>>2];g=g+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}d=J[a+32>>2];if(!(d?!d|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+32>>2]=f;H[a+36|0]=1;J[a+28>>2]=e}d=e+(b^-1)|0;f=e-b&3;if(f){g=0;while(1){J[J[a+32>>2]+(b<<2)>>2]=0;b=b+1|0;g=g+1|0;if((f|0)!=(g|0)){continue}break}}if(d>>>0<3){break a}while(1){d=b<<2;J[d+J[a+32>>2]>>2]=0;J[(d+J[a+32>>2]|0)+4>>2]=0;J[(d+J[a+32>>2]|0)+8>>2]=0;J[(d+J[a+32>>2]|0)+12>>2]=0;b=b+4|0;if((e|0)!=(b|0)){continue}break}}J[a+24>>2]=e;c:{if((e|0)<=0){break c}b=J[a+32>>2];f=0;a=0;if(e-1>>>0>=3){h=e&-4;g=0;while(1){d=a<<2;J[d+b>>2]=J[d+J[c+12>>2]>>2];i=d|4;J[i+b>>2]=J[i+J[c+12>>2]>>2];i=d|8;J[i+b>>2]=J[i+J[c+12>>2]>>2];d=d|12;J[d+b>>2]=J[d+J[c+12>>2]>>2];a=a+4|0;g=g+4|0;if((h|0)!=(g|0)){continue}break}}d=e&3;if(!d){break c}while(1){e=a<<2;J[e+b>>2]=J[e+J[c+12>>2]>>2];a=a+1|0;f=f+1|0;if((d|0)!=(f|0)){continue}break}}}function nH(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=Q(0);c=ga-128|0;ga=c;m=J[b+36>>2];b=J[J[a+8>>2]+24>>2]+P(m,80)|0;z=J[b+64>>2];n=N[b+32>>2];o=N[b>>2];p=N[b+16>>2];q=N[b+56>>2];r=N[b+52>>2];s=N[b+48>>2];t=N[b+36>>2];u=N[b+20>>2];v=N[b+4>>2];w=N[b+40>>2];x=N[b+24>>2];y=N[b+8>>2];b=J[a+12>>2];A=N[b+52>>2];B=N[b+56>>2];d=N[b+24>>2];e=N[b+20>>2];f=N[b+40>>2];g=N[b+36>>2];C=N[b+48>>2];h=N[b+8>>2];i=N[b>>2];j=N[b+4>>2];k=N[b+16>>2];l=N[b+32>>2];J[c+124>>2]=0;J[c+108>>2]=0;J[c+92>>2]=0;N[c+104>>2]=Q(w*f)+Q(Q(y*l)+Q(x*g));N[c+100>>2]=Q(t*f)+Q(Q(v*l)+Q(u*g));N[c+88>>2]=Q(w*d)+Q(Q(y*k)+Q(x*e));N[c+84>>2]=Q(t*d)+Q(Q(v*k)+Q(u*e));N[c+120>>2]=B+Q(Q(q*f)+Q(Q(s*l)+Q(g*r)));N[c+116>>2]=A+Q(Q(q*d)+Q(Q(s*k)+Q(e*r)));J[c+76>>2]=0;N[c+72>>2]=Q(w*h)+Q(Q(y*i)+Q(j*x));N[c+68>>2]=Q(t*h)+Q(Q(v*i)+Q(j*u));N[c+64>>2]=Q(n*h)+Q(Q(o*i)+Q(p*j));N[c+112>>2]=C+Q(Q(q*h)+Q(Q(s*i)+Q(j*r)));N[c+96>>2]=Q(n*f)+Q(Q(o*l)+Q(p*g));N[c+80>>2]=Q(n*d)+Q(Q(o*k)+Q(p*e));b=J[a+4>>2];J[c+60>>2]=m;J[c+56>>2]=-1;J[c+48>>2]=b;J[c+44>>2]=z;J[c+40>>2]=0;J[c+52>>2]=c- -64;b=J[a+24>>2];J[c+16>>2]=0;J[c+20>>2]=-65535;J[c+32>>2]=m;J[c+28>>2]=b;J[c+8>>2]=7420;N[c+12>>2]=N[b+4>>2];J[c+24>>2]=J[b+16>>2];bf(J[a+16>>2],J[a+20>>2],c+40|0,c+8|0);ga=c+128|0}function qm(a,b,c,d){var e=0,f=0,g=0;e=ga-48|0;ga=e;J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a+48>>2]=b;J[a>>2]=16876;J[a+4>>2]=21;a:{if(ia[J[J[b>>2]+40>>2]](b)|0){ia[J[J[b>>2]+48>>2]](b,a+16|0,a+32|0);break a}J[e+44>>2]=0;J[e+36>>2]=0;J[e+40>>2]=0;J[e+32>>2]=1065353216;g=e+16|0;b=e+32|0;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+32>>2]=N[e+16>>2]+N[a+12>>2];J[e+32>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);f=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=f;f=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=f;N[a+16>>2]=N[e+16>>2]-N[a+12>>2];J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+36>>2]=1065353216;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+36>>2]=N[e+20>>2]+N[a+12>>2];J[e+36>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);f=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=f;f=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=f;N[a+20>>2]=N[e+20>>2]-N[a+12>>2];J[e+40>>2]=0;J[e+44>>2]=0;J[e+40>>2]=1065353216;J[e+32>>2]=0;J[e+36>>2]=0;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+40>>2]=N[e+24>>2]+N[a+12>>2];J[e+40>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);b=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=b;b=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=b;N[a+24>>2]=N[e+24>>2]-N[a+12>>2]}ga=e+48|0;H[a+61|0]=0;H[a+60|0]=c;J[a+52>>2]=0;J[a+56>>2]=0;J[a>>2]=12196;J[a+4>>2]=21;if(d){J[8369]=J[8369]+1;b=ia[J[6782]](172,16)|0;c=Yl(b);J[a+52>>2]=b;Xl(c,J[a+48>>2],K[a+60|0],a+16|0,a+32|0);H[a+61|0]=1}}function Ov(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=Q(d);e=Q(e);f=Q(f);g=g|0;h=h|0;i=i|0;var j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0;j=ga-48|0;ga=j;J[j+44>>2]=a;J[j+40>>2]=b;J[j+36>>2]=c;N[j+32>>2]=d;N[j+28>>2]=e;N[j+24>>2]=f;J[j+20>>2]=g;J[j+16>>2]=h;H[j+15|0]=i;a=ra(124);b=J[j+44>>2];c=J[j+40>>2];h=J[j+36>>2];d=N[j+32>>2];k=N[j+28>>2];e=N[j+24>>2];g=J[j+20>>2];i=J[j+16>>2];o=K[j+15|0];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=15144;J[a+108>>2]=1065353216;J[a+112>>2]=1065353216;J[a+104>>2]=g;H[a+101|0]=0;H[a+102|0]=0;H[a+100|0]=o&1;J[a+96>>2]=i;J[a+92>>2]=h;N[a+88>>2]=d;N[a+76>>2]=e;N[a+72>>2]=k;J[a+68>>2]=c;J[a+64>>2]=b;J[a+4>>2]=24;J[a+116>>2]=1065353216;J[a+120>>2]=0;d=Q(c-1|0);N[a+84>>2]=d;l=Q(b-1|0);N[a+80>>2]=l;a:{b:{c:{switch(g|0){default:f=N[a+40>>2];m=N[a+24>>2];d=N[a+36>>2];n=N[a+20>>2];e=N[a+32>>2];k=N[a+16>>2];break a;case 0:N[a+32>>2]=e;N[a+16>>2]=k;J[a+44>>2]=0;N[a+40>>2]=d;N[a+36>>2]=l;J[a+28>>2]=0;J[a+20>>2]=0;J[a+24>>2]=0;f=d;d=l;break a;case 1:N[a+32>>2]=l;J[a+16>>2]=0;J[a+44>>2]=0;N[a+40>>2]=d;N[a+36>>2]=e;J[a+24>>2]=0;J[a+28>>2]=0;N[a+20>>2]=k;f=d;d=e;n=k;k=Q(0);break b;case 2:break c}}N[a+32>>2]=l;J[a+16>>2]=0;J[a+20>>2]=0;J[a+44>>2]=0;N[a+40>>2]=e;N[a+36>>2]=d;J[a+28>>2]=0;N[a+24>>2]=k;f=e}m=k;e=l;k=Q(0)}J[a+60>>2]=0;N[a+56>>2]=Q(m+f)*Q(.5);N[a+52>>2]=Q(n+d)*Q(.5);N[a+48>>2]=Q(k+e)*Q(.5);ga=j+48|0;return a|0}function Qb(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);g=N[c+100>>2];h=N[c+24>>2];i=N[c+16>>2];j=N[c+20>>2];e=N[c+108>>2];d=Q(Q(Q(N[c+112>>2]-Q(g*N[c+116>>2]))-Q(Q(Q(Q(h*N[a+72>>2])+Q(Q(i*N[a+64>>2])+Q(j*N[a+68>>2])))+Q(Q(N[c+8>>2]*N[a+88>>2])+Q(Q(N[c>>2]*N[a+80>>2])+Q(N[c+4>>2]*N[a+84>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+72>>2])+Q(Q(N[c+48>>2]*N[b+64>>2])+Q(N[c+52>>2]*N[b+68>>2])))+Q(Q(N[c+40>>2]*N[b+88>>2])+Q(Q(N[c+32>>2]*N[b+80>>2])+Q(N[c+36>>2]*N[b+84>>2]))))*e));e=Q(g+d);f=N[c+120>>2];a:{if(e<f){d=Q(f-g);e=f;break a}f=N[c+124>>2];if(!(f<e)){break a}d=Q(f-g);e=f}N[c+100>>2]=e;if(J[a+240>>2]){N[a+64>>2]=Q(N[a+112>>2]*Q(d*Q(i*N[a+128>>2])))+N[a+64>>2];N[a+68>>2]=Q(Q(d*Q(j*N[a+132>>2]))*N[a+116>>2])+N[a+68>>2];N[a+72>>2]=Q(Q(d*Q(h*N[a+136>>2]))*N[a+120>>2])+N[a+72>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+80>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+80>>2];g=N[a+104>>2];N[a+84>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+84>>2];N[a+88>>2]=Q(e*Q(d*g))+N[a+88>>2]}if(J[b+240>>2]){e=N[c+56>>2];f=N[c+52>>2];N[b+64>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+64>>2];N[b+68>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+72>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+80>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+80>>2];g=N[b+104>>2];N[b+84>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(e*Q(d*g))+N[b+88>>2]}}function Ob(a,b,c,d,e,f,g){var h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0);h=ga-128|0;ga=h;a:{if(!b){break a}if(!(!J[b+40>>2]|(c|0)>=(g|0)&(g|0)>=0)){n=c+1|0;Ob(a,J[b+36>>2],n,d,e,f,g);Ob(a,J[b+40>>2],n,d,e,f,g)}if((c|0)<(f|0)){break a}i=N[b+20>>2];j=N[b+24>>2];f=J[b+40>>2];k=N[b+16>>2];p=N[b>>2];l=N[b+4>>2];m=N[b+8>>2];J[h+124>>2]=0;J[h+108>>2]=0;J[h+92>>2]=0;J[h+76>>2]=0;J[h+60>>2]=0;J[h+44>>2]=0;J[h+28>>2]=0;q=Q(Q(m+j)*Q(.5));m=Q(Q(j-m)*Q(.5));j=Q(q+m);N[h+120>>2]=j;r=Q(Q(l+i)*Q(.5));l=Q(Q(i-l)*Q(.5));i=Q(r+l);N[h+116>>2]=i;N[h+104>>2]=j;N[h+100>>2]=i;N[h+88>>2]=j;l=Q(r-l);N[h+84>>2]=l;N[h+72>>2]=j;N[h+68>>2]=l;j=Q(q-m);N[h+56>>2]=j;N[h+52>>2]=i;N[h+40>>2]=j;N[h+36>>2]=i;N[h+24>>2]=j;N[h+20>>2]=l;J[h+12>>2]=0;m=Q(Q(p+k)*Q(.5));k=Q(Q(k-p)*Q(.5));i=Q(m-k);N[h+112>>2]=i;k=Q(m+k);N[h+96>>2]=k;N[h+80>>2]=k;N[h+64>>2]=i;N[h+48>>2]=i;N[h+32>>2]=k;N[h+16>>2]=k;N[h>>2]=i;N[h+8>>2]=j;N[h+4>>2]=l;c=h+16|0;b=f?d:e;ia[J[J[a>>2]+8>>2]](a,h,c,b);d=h+32|0;ia[J[J[a>>2]+8>>2]](a,c,d,b);e=h+48|0;ia[J[J[a>>2]+8>>2]](a,d,e,b);ia[J[J[a>>2]+8>>2]](a,e,h,b);f=h- -64|0;g=h+80|0;ia[J[J[a>>2]+8>>2]](a,f,g,b);n=h+96|0;ia[J[J[a>>2]+8>>2]](a,g,n,b);o=h+112|0;ia[J[J[a>>2]+8>>2]](a,n,o,b);ia[J[J[a>>2]+8>>2]](a,o,f,b);ia[J[J[a>>2]+8>>2]](a,h,f,b);ia[J[J[a>>2]+8>>2]](a,c,g,b);ia[J[J[a>>2]+8>>2]](a,d,n,b);ia[J[J[a>>2]+8>>2]](a,e,o,b)}ga=h+128|0}function fc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0;J[b>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+28>>2]);J[b+4>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+32>>2]);d=ia[J[J[c>>2]+40>>2]](c,a)|0;f=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b+8>>2]=f;if(f){ia[J[J[c>>2]+48>>2]](c,d)}J[b+12>>2]=J[a+4>>2];J[b+24>>2]=K[a+21|0];J[b+40>>2]=J[a+24>>2];N[b+44>>2]=N[a+16>>2];J[b+48>>2]=K[a+20|0];J[b+20>>2]=J[a+12>>2];J[b+16>>2]=J[a+8>>2];N[b+28>>2]=N[a+36>>2];i=N[a+40>>2];c=0;J[b+36>>2]=0;N[b+32>>2]=i;d=J[a+28>>2];e=J[d+488>>2];a:{if((e|0)<=0){break a}f=J[d+496>>2];if(e-1>>>0>=3){h=e&-4;d=0;while(1){g=c<<2;if(J[g+f>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|4)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|8)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|12)>>2]==(a|0)){J[b+36>>2]=1}c=c+4|0;d=d+4|0;if((h|0)!=(d|0)){continue}break}}e=e&3;if(!e){break a}d=0;while(1){if(J[f+(c<<2)>>2]==(a|0)){J[b+36>>2]=1}c=c+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}c=J[a+32>>2];e=J[c+488>>2];b:{if((e|0)<=0){break b}f=J[c+496>>2];d=0;c=0;if(e-1>>>0>=3){j=e&-4;h=0;while(1){g=c<<2;if(J[g+f>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|4)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|8)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|12)>>2]==(a|0)){J[b+36>>2]=1}c=c+4|0;h=h+4|0;if((j|0)!=(h|0)){continue}break}}e=e&3;if(!e){break b}while(1){if(J[f+(c<<2)>>2]==(a|0)){J[b+36>>2]=1}c=c+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}return 3523}function TC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{if(K[a+165|0]){l=a+92|0;if(J[l>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;f=ia[J[6782]](b<<4,16)|0}else{f=0}e=J[a+88>>2];c:{if((e|0)<=0){break c}if((e|0)!=1){j=e&-2;while(1){g=d<<4;h=g+f|0;c=g+J[a+96>>2]|0;k=J[c+4>>2];J[h>>2]=J[c>>2];J[h+4>>2]=k;k=J[c+12>>2];J[h+8>>2]=J[c+8>>2];J[h+12>>2]=k;c=g|16;g=c+f|0;c=c+J[a+96>>2]|0;h=J[c+4>>2];J[g>>2]=J[c>>2];J[g+4>>2]=h;h=J[c+12>>2];J[g+8>>2]=J[c+8>>2];J[g+12>>2]=h;d=d+2|0;i=i+2|0;if((j|0)!=(i|0)){continue}break}}if(!(e&1)){break c}d=d<<4;e=d+f|0;d=d+J[a+96>>2]|0;c=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=c;c=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=c}d=J[a+96>>2];if(!(d?!d|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+96>>2]=f;H[a+100|0]=1;break b}l=a+112|0;if(J[l>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0}else{f=0}e=J[a+116>>2];g=J[a+108>>2];d:{e:{if((g|0)>0){if(g-1>>>0>=3){h=g&-4;while(1){c=d<<2;N[c+f>>2]=N[c+e>>2];j=c|4;N[j+f>>2]=N[e+j>>2];j=c|8;N[j+f>>2]=N[e+j>>2];c=c|12;N[c+f>>2]=N[c+e>>2];d=d+4|0;i=i+4|0;if((h|0)!=(i|0)){continue}break}}c=g&3;if(c){while(1){i=d<<2;N[i+f>>2]=N[e+i>>2];d=d+1|0;k=k+1|0;if((c|0)!=(k|0)){continue}break}}if(K[a+120|0]){break e}break d}if(!e|!K[a+120|0]){break d}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}}J[a+116>>2]=f;H[a+120|0]=1}J[l>>2]=b}}function Xe(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=Q(0),k=0,l=0,m=0,n=0;m=Qg(a);H[a+108|0]=1;J[a>>2]=13816;J[a+104>>2]=0;J[a+96>>2]=0;J[a+100>>2]=0;J[a+4>>2]=4;if((c|0)<=0){J[a+96>>2]=c;Sb(m);return}J[8369]=J[8369]+1;f=ia[J[6782]](c<<4,16)|0;i=J[a+96>>2];a:{if((i|0)<=0){break a}if((i|0)!=1){k=i&-2;while(1){g=d<<4;h=g+f|0;e=g+J[a+104>>2]|0;l=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=l;l=J[e+12>>2];J[h+8>>2]=J[e+8>>2];J[h+12>>2]=l;e=g|16;g=e+f|0;e=e+J[a+104>>2]|0;h=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=h;h=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=h;d=d+2|0;n=n+2|0;if((k|0)!=(n|0)){continue}break}}if(!(i&1)){break a}d=d<<4;i=d+f|0;d=d+J[a+104>>2]|0;e=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=e;e=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=e}d=J[a+104>>2];if(!(d?!d|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+104>>2]=f;H[a+108|0]=1;J[a+100>>2]=c;J[a+96>>2]=c;b:{if((c|0)<=0){break b}i=c&1;c:{if((c|0)==1){d=0;break c}e=c&-2;d=0;c=0;while(1){g=J[b+4>>2];h=J[b>>2];j=N[b+8>>2];k=d<<4;f=k+J[a+104>>2]|0;J[f+12>>2]=0;N[f+8>>2]=j;J[f>>2]=h;J[f+4>>2]=g;b=b+16|0;g=J[b+4>>2];h=J[b>>2];j=N[b+8>>2];f=J[a+104>>2]+(k|16)|0;J[f+12>>2]=0;N[f+8>>2]=j;J[f>>2]=h;J[f+4>>2]=g;d=d+2|0;b=b+16|0;c=c+2|0;if((e|0)!=(c|0)){continue}break}}if(!i){break b}c=J[b+4>>2];f=J[b>>2];j=N[b+8>>2];a=J[a+104>>2]+(d<<4)|0;J[a+12>>2]=0;N[a+8>>2]=j;J[a>>2]=f;J[a+4>>2]=c}Sb(m)}function JD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0);k=ga-2048|0;ga=k;a:{if((d|0)<=0){break a}j=J[a+92>>2];if((j|0)<=0){break a}while(1){if((j|0)>0){h=u<<4;p=h+c|0;g=b+h|0;l=J[a+100>>2];v=J[a+120>>2];y=Q(-0xde0b6b000000000);q=0;h=j;while(1){m=Q(-3.4028234663852886e38);i=-1;n=j-q|0;z=(n|0)<=0;b:{if(z){break b}e=(h|0)<128?h:128;C=(e|0)>1?e:1;r=N[g+8>>2];s=N[g+4>>2];t=N[g>>2];e=0;while(1){D=N[l>>2];E=N[a+12>>2];F=N[l+4>>2];G=N[a+16>>2];H=N[l+8>>2];w=N[v>>2];I=N[a+20>>2];x=Q(ia[J[J[a>>2]+48>>2]](a));o=N[g>>2];A=N[g+4>>2];B=N[g+8>>2];f=(e<<4)+k|0;J[f+12>>2]=0;N[f+8>>2]=Q(H+Q(w*Q(r*I)))-Q(x*B);N[f+4>>2]=Q(F+Q(w*Q(s*G)))-Q(x*A);N[f>>2]=Q(D+Q(w*Q(t*E)))-Q(x*o);v=v+4|0;l=l+16|0;r=B;s=A;t=o;e=e+1|0;if((C|0)!=(e|0)){continue}break}if(z){break b}n=(n|0)<128?n:128;r=N[g+8>>2];s=N[g+4>>2];t=N[g>>2];e=0;while(1){f=(e<<4)+k|0;o=Q(Q(N[f+8>>2]*r)+Q(Q(N[f>>2]*t)+Q(s*N[f+4>>2])));f=o>m;m=f?o:m;i=f?e:i;e=e+1|0;if((n|0)!=(e|0)){continue}break}}if(m>y){e=(i<<4)+k|0;i=J[e+12>>2];J[p+8>>2]=J[e+8>>2];J[p+12>>2]=i;i=J[e+4>>2];J[p>>2]=J[e>>2];J[p+4>>2]=i;y=m}h=h-128|0;q=q+128|0;if((q|0)<(j|0)){continue}break}}u=u+1|0;if((u|0)==(d|0)){break a}j=J[a+92>>2];continue}}ga=k+2048|0}function wz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0);h=ga-16|0;ga=h;t=J[a+792>>2];if((t|0)>0){b=Q(N[a+336>>2]*b);c=N[a+452>>2];while(1){d=J[a+800>>2]+P(o,96)|0;w=N[d+36>>2];x=N[d+28>>2];y=N[d+32>>2];z=N[d+52>>2];A=N[d+44>>2];B=N[d+48>>2];e=J[d+20>>2];k=N[e+328>>2];f=N[d+12>>2];l=N[d+4>>2];p=N[d+8>>2];g=J[d>>2];i=N[g+16>>2];m=N[d+80>>2];u=N[d+76>>2];j=N[e+332>>2];n=Q(Q(b*Q(Q(Q(Q(f*N[e+44>>2])+Q(Q(l*N[e+36>>2])+Q(p*N[e+40>>2])))+N[e+60>>2])-i))+Q(Q(c*Q(Q(Q(k*m)-Q(u*j))+N[e+320>>2]))-Q(i-N[g+32>>2])));C=i;i=N[d+92>>2];q=N[d+24>>2];r=N[g+8>>2];s=j;j=N[d+84>>2];v=N[e+336>>2];m=Q(Q(b*Q(Q(Q(Q(f*N[e+12>>2])+Q(Q(l*N[e+4>>2])+Q(p*N[e+8>>2])))+N[e+52>>2])-r))+Q(Q(c*Q(Q(Q(s*j)-Q(m*v))+N[e+312>>2]))-Q(r-N[g+24>>2])));s=Q(Q(Q(f*N[e+28>>2])+Q(Q(l*N[e+20>>2])+Q(p*N[e+24>>2])))+N[e+56>>2]);f=N[g+12>>2];k=Q(Q(b*Q(s-f))+Q(Q(c*Q(Q(Q(v*u)-Q(j*k))+N[e+316>>2]))-Q(f-N[g+28>>2])));l=Q(q*Q(Q(N[d+68>>2]*n)+Q(Q(N[d+60>>2]*m)+Q(k*N[d- -64>>2]))));N[g+16>>2]=C+Q(i*l);j=f;f=Q(q*Q(Q(z*n)+Q(Q(A*m)+Q(k*B))));N[g+12>>2]=j+Q(i*f);n=Q(q*Q(Q(w*n)+Q(Q(x*m)+Q(k*y))));N[g+8>>2]=r+Q(i*n);J[h+12>>2]=0;N[h+8>>2]=-l;N[h+4>>2]=-f;N[h>>2]=-n;ub(e,h,d+76|0);o=o+1|0;if((t|0)!=(o|0)){continue}break}}ga=h+16|0}function jD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0);e=ga-48|0;ga=e;j=N[d+8>>2];i=N[c+8>>2];h=Q(Q(j-i)*Q(.5));k=Q(h*h);g=N[d>>2];f=N[c>>2];h=Q(Q(g-f)*Q(.5));o=Q(h*h);l=N[d+4>>2];m=N[c+4>>2];h=Q(Q(l-m)*Q(.5));h=Q(Y(Q(k+Q(o+Q(h*h)))));k=Q(Q(j+i)*Q(.5));l=Q(Q(l+m)*Q(.5));m=Q(Q(g+f)*Q(.5));j=N[a+56>>2];a:{if(Q(R(j))>Q(.7071067690849304)){i=N[a+52>>2];g=Q(Q(i*i)+Q(j*j));f=Q(Q(1)/Q(Y(g)));p=Q(g*f);n=Q(i*f);g=N[a+48>>2];q=Q(n*Q(-g));f=Q(f*Q(-j));r=Q(g*f);break a}g=N[a+48>>2];i=N[a+52>>2];p=Q(Q(g*g)+Q(i*i));f=Q(Q(1)/Q(Y(p)));r=Q(p*f);t=Q(f*Q(-i));q=Q(j*t);f=Q(g*f);p=Q(f*Q(-j))}s=N[a+64>>2];J[e+44>>2]=0;J[e+28>>2]=0;o=k;k=Q(Q(Q(j*k)+Q(Q(g*m)+Q(l*i)))-s);s=Q(o-Q(j*k));n=Q(h*n);o=Q(s-n);j=Q(h*r);r=Q(o-j);N[e+40>>2]=r;l=Q(l-Q(i*k));f=Q(h*f);u=Q(l-f);i=Q(h*q);q=Q(u-i);N[e+36>>2]=q;n=Q(n+s);N[e+24>>2]=n-j;f=Q(f+l);N[e+20>>2]=f-i;J[e+12>>2]=0;g=Q(m-Q(g*k));k=Q(h*t);l=Q(g-k);h=Q(h*p);m=Q(l-h);N[e+32>>2]=m;g=Q(k+g);N[e+16>>2]=g-h;k=Q(j+n);N[e+8>>2]=k;f=Q(i+f);N[e+4>>2]=f;g=Q(h+g);N[e>>2]=g;ia[J[J[b>>2]+8>>2]](b,e,0,0);J[e+44>>2]=0;N[e+40>>2]=k;N[e+36>>2]=f;J[e+28>>2]=0;N[e+24>>2]=j+o;N[e+20>>2]=i+u;N[e+32>>2]=g;N[e+16>>2]=h+l;J[e+12>>2]=0;N[e+8>>2]=r;N[e+4>>2]=q;N[e>>2]=m;ia[J[J[b>>2]+8>>2]](b,e,0,1);ga=e+48|0}function Hc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=ga-32|0;ga=e;a:{d=J[a>>2];if(!d){break a}g=(b|0)<0?J[a+12>>2]:b;if((g|0)<=0){break a}while(1){h=0;f=d+40|0;if(J[f>>2]){while(1){b=J[d+32>>2];b:{if(d>>>0>=b>>>0){b=d;break b}c=J[b+40>>2];l=(c|0)==(d|0);i=((d|0)!=(c|0))<<2;j=J[(i+b|0)+36>>2];c=J[b+32>>2];if(c){k=(c+((J[c+40>>2]==(b|0))<<2)|0)+36|0}else{k=a}J[k>>2]=d;J[j+32>>2]=d;J[b+32>>2]=d;J[d+32>>2]=c;J[b+36>>2]=J[d+36>>2];J[b+40>>2]=J[f>>2];J[J[d+36>>2]+32>>2]=b;J[J[f>>2]+32>>2]=b;c=d+36|0;J[c+(l<<2)>>2]=b;J[c+i>>2]=j;c=b+24|0;f=J[c+4>>2];J[e+24>>2]=J[c>>2];J[e+28>>2]=f;c=b+16|0;f=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=f;c=b+8|0;f=J[c+4>>2];J[e+8>>2]=J[c>>2];J[e+12>>2]=f;c=J[b+4>>2];J[e>>2]=J[b>>2];J[e+4>>2]=c;c=d+24|0;f=J[c+4>>2];J[b+24>>2]=J[c>>2];J[b+28>>2]=f;c=d+16|0;f=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=f;c=d+8|0;f=J[c+4>>2];J[b+8>>2]=J[c>>2];J[b+12>>2]=f;c=J[d+4>>2];J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c}d=J[a+16>>2]>>>h|0;h=h+1&31;d=J[(((d&1)<<2)+b|0)+36>>2];f=d+40|0;if(J[f>>2]){continue}break}}b=Ed(a,d);Dd(a,b?J[a>>2]:0,d);J[a+16>>2]=J[a+16>>2]+1;g=g-1|0;if(!g){break a}d=J[a>>2];continue}}ga=e+32|0}function wg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;d=N[c+100>>2];g=N[c+24>>2];h=N[c+16>>2];i=N[c+20>>2];e=N[c+108>>2];e=Q(Q(Q(N[c+112>>2]-Q(d*N[c+116>>2]))-Q(Q(Q(Q(g*N[a+72>>2])+Q(Q(h*N[a+64>>2])+Q(i*N[a+68>>2])))+Q(Q(N[c+8>>2]*N[a+88>>2])+Q(Q(N[c>>2]*N[a+80>>2])+Q(N[c+4>>2]*N[a+84>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+72>>2])+Q(Q(N[c+48>>2]*N[b+64>>2])+Q(N[c+52>>2]*N[b+68>>2])))+Q(Q(N[c+40>>2]*N[b+88>>2])+Q(Q(N[c+32>>2]*N[b+80>>2])+Q(N[c+36>>2]*N[b+84>>2]))))*e));j=Q(d+e);f=N[c+120>>2];k=j<f;N[c+100>>2]=k?f:j;d=k?Q(f-d):e;if(J[a+240>>2]){N[a+64>>2]=Q(N[a+112>>2]*Q(d*Q(h*N[a+128>>2])))+N[a+64>>2];N[a+68>>2]=Q(Q(d*Q(i*N[a+132>>2]))*N[a+116>>2])+N[a+68>>2];N[a+72>>2]=Q(Q(d*Q(g*N[a+136>>2]))*N[a+120>>2])+N[a+72>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+80>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+80>>2];g=N[a+104>>2];N[a+84>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+84>>2];N[a+88>>2]=Q(e*Q(d*g))+N[a+88>>2]}if(J[b+240>>2]){e=N[c+56>>2];f=N[c+52>>2];N[b+64>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+64>>2];N[b+68>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+72>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+80>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+80>>2];g=N[b+104>>2];N[b+84>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(e*Q(d*g))+N[b+88>>2]}}function sj(a,b){var c=0;c=ga-112|0;ga=c;J[c+108>>2]=a;J[c+104>>2]=b;b=J[c+108>>2];N[c+100>>2]=bc(J[c+104>>2]);N[c+96>>2]=Q(2)/N[c+100>>2];a=ga-16|0;J[a+12>>2]=J[c+104>>2];N[c+92>>2]=N[J[a+12>>2]>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+88>>2]=N[J[a+12>>2]+4>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+84>>2]=N[J[a+12>>2]+8>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+80>>2]=N[J[a+12>>2]+12>>2]*N[c+92>>2];J[a+12>>2]=J[c+104>>2];N[c+76>>2]=N[J[a+12>>2]+12>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+72>>2]=N[J[a+12>>2]+12>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+68>>2]=N[J[a+12>>2]>>2]*N[c+92>>2];J[a+12>>2]=J[c+104>>2];N[c+64>>2]=N[J[a+12>>2]>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+60>>2]=N[J[a+12>>2]>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+56>>2]=N[J[a+12>>2]+4>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+52>>2]=N[J[a+12>>2]+4>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+48>>2]=N[J[a+12>>2]+8>>2]*N[c+84>>2];N[c+44>>2]=Q(1)-Q(N[c+56>>2]+N[c+48>>2]);N[c+40>>2]=N[c+64>>2]-N[c+72>>2];N[c+36>>2]=N[c+60>>2]+N[c+76>>2];N[c+32>>2]=N[c+64>>2]+N[c+72>>2];N[c+28>>2]=Q(1)-Q(N[c+68>>2]+N[c+48>>2]);N[c+24>>2]=N[c+52>>2]-N[c+80>>2];N[c+20>>2]=N[c+60>>2]-N[c+76>>2];N[c+16>>2]=N[c+52>>2]+N[c+80>>2];N[c+12>>2]=Q(1)-Q(N[c+68>>2]+N[c+56>>2]);ld(b,c+44|0,c+40|0,c+36|0,c+32|0,c+28|0,c+24|0,c+20|0,c+16|0,c+12|0);ga=c+112|0}function jh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=ga-96|0;ga=f;e=J[a+8>>2];a:{if((e|0)!=J[a+12>>2]){break a}k=e?e<<1:1;if((k|0)<=(e|0)){break a}if(k){J[8369]=J[8369]+1;h=ia[J[6782]](k<<2,16)|0;e=J[a+8>>2]}b:{if((e|0)<=0){break b}if(e-1>>>0>=3){l=e&-4;while(1){g=i<<2;J[g+h>>2]=J[g+J[a+16>>2]>>2];j=g|4;J[j+h>>2]=J[j+J[a+16>>2]>>2];j=g|8;J[j+h>>2]=J[j+J[a+16>>2]>>2];g=g|12;J[g+h>>2]=J[g+J[a+16>>2]>>2];i=i+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}g=e&3;if(!g){break b}while(1){l=i<<2;J[l+h>>2]=J[l+J[a+16>>2]>>2];i=i+1|0;n=n+1|0;if((g|0)!=(n|0)){continue}break}}i=J[a+16>>2];if(!(!i|!K[a+20|0])){if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}e=J[a+8>>2]}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=k}J[J[a+16>>2]+(e<<2)>>2]=b;J[a+8>>2]=e+1;e=J[b+16>>2];J[f+40>>2]=J[b+12>>2];J[f+44>>2]=e;e=J[b+8>>2];J[f+32>>2]=J[b+4>>2];J[f+36>>2]=e;e=J[b+32>>2];J[f+56>>2]=J[b+28>>2];J[f+60>>2]=e;e=J[b+24>>2];J[f+48>>2]=J[b+20>>2];J[f+52>>2]=e;e=J[b+48>>2];J[f+72>>2]=J[b+44>>2];J[f+76>>2]=e;e=J[b+40>>2];J[f+64>>2]=J[b+36>>2];J[f+68>>2]=e;e=J[b+64>>2];J[f+88>>2]=J[b+60>>2];J[f+92>>2]=e;e=J[b+56>>2];J[f+80>>2]=J[b+52>>2];J[f+84>>2]=e;e=J[b+192>>2];h=f+16|0;ia[J[J[e>>2]+8>>2]](e,f+32|0,h,f);e=J[a+68>>2];J[b+188>>2]=ia[J[J[e>>2]+8>>2]](e,h,f,J[J[b+192>>2]+4>>2],b,c,d,J[a+24>>2],0);ga=f+96|0}function zl(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);j=Q(Q(Q(N[b+8>>2]*N[a+8>>2])+Q(Q(N[b>>2]*N[a>>2])+Q(N[b+4>>2]*N[a+4>>2])))-N[a+12>>2]);if(!(j>Q(1.1920928955078125e-7))){e=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=e;e=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=e;e=1}l=1;a:{if((c|0)<=1){g=j;break a}h=j;while(1){i=(l<<4)+b|0;n=N[i+8>>2];o=N[i>>2];p=N[i+4>>2];g=Q(Q(Q(n*N[a+8>>2])+Q(Q(o*N[a>>2])+Q(p*N[a+4>>2])))-N[a+12>>2]);k=g>Q(1.1920928955078125e-7);if((k|0)!=(h>Q(1.1920928955078125e-7)|0)){f=(l-1<<4)+b|0;q=N[f>>2];r=N[f+4>>2];s=N[f+8>>2];f=(e<<4)+d|0;J[f+12>>2]=0;h=Q(Q(-h)/Q(g-h));m=Q(Q(1)-h);N[f+8>>2]=Q(n*h)+Q(s*m);N[f+4>>2]=Q(p*h)+Q(m*r);N[f>>2]=Q(o*h)+Q(m*q);e=e+1|0}if(!k){k=J[i+4>>2];f=(e<<4)+d|0;J[f>>2]=J[i>>2];J[f+4>>2]=k;k=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=k;e=e+1|0}h=g;l=l+1|0;if((l|0)!=(c|0)){continue}break}}i=j>Q(1.1920928955078125e-7);if((i|0)!=(g>Q(1.1920928955078125e-7)|0)){a=(c-1<<4)+b|0;h=N[a>>2];m=N[a+4>>2];n=N[a+8>>2];o=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];a=(e<<4)+d|0;J[a+12>>2]=0;g=Q(Q(-g)/Q(j-g));j=Q(Q(1)-g);N[a+8>>2]=Q(n*j)+Q(g*q);N[a+4>>2]=Q(j*m)+Q(g*p);N[a>>2]=Q(j*h)+Q(g*o);e=e+1|0}if(!i){c=J[b+4>>2];a=(e<<4)+d|0;J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;e=e+1|0}return e}function WF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;J[7401]=J[7401]+1;d=c<<16|b;d=(d<<15^-1)+d|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;m=d>>16^d;d=J[a+12>>2];k=m&d-1;e=J[J[a+40>>2]+(k<<2)>>2];a:{if((e|0)!=-1){i=J[a+60>>2];j=J[a+16>>2];while(1){f=j+P(e,12)|0;if(J[f>>2]==(b|0)&J[f+4>>2]==(c|0)){break a}e=J[i+(e<<2)>>2];if((e|0)!=-1){continue}break}}b:{c:{i=J[a+8>>2];f=i;if((f|0)==(d|0)){j=d?d<<1:1;n=(j|0)<=(d|0);if(!n){break c}}else{d=f}J[a+8>>2]=d+1;f=J[a+16>>2];break b}d:{if(!j){f=0;break d}J[8369]=J[8369]+1;f=ia[J[6782]](P(j,12),16)|0;d=J[a+8>>2]}e:{if((d|0)<=0){break e}e=0;if((d|0)!=1){p=d&-2;while(1){g=P(e,12);h=g+J[a+16>>2]|0;l=J[h+4>>2];g=f+g|0;J[g>>2]=J[h>>2];J[g+4>>2]=l;J[g+8>>2]=J[h+8>>2];g=P(e|1,12);h=g+J[a+16>>2]|0;l=J[h+4>>2];g=f+g|0;J[g>>2]=J[h>>2];J[g+4>>2]=l;J[g+8>>2]=J[h+8>>2];e=e+2|0;o=o+2|0;if((p|0)!=(o|0)){continue}break}}if(!(d&1)){break e}e=P(e,12);d=e+f|0;e=e+J[a+16>>2]|0;h=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=h;J[d+8>>2]=J[e+8>>2]}d=J[a+16>>2];if(!(d?!d|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+16>>2]=f;H[a+20|0]=1;J[a+12>>2]=j;J[a+8>>2]=J[a+8>>2]+1;if(n){break b}dh(a);k=J[a+12>>2]-1&m}f=P(i,12)+f|0;J[f+8>>2]=0;J[f+4>>2]=c;J[f>>2]=b;b=J[a+60>>2]+(i<<2)|0;a=J[a+40>>2]+(k<<2)|0;J[b>>2]=J[a>>2];J[a>>2]=i}return f|0}function et(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=ra(608);b=J[e+4>>2];a=J[e>>2];xb(d,5,J[e+12>>2],J[e+8>>2]);J[d>>2]=19332;c=J[b+12>>2];J[d+308>>2]=J[b+8>>2];J[d+312>>2]=c;c=J[b+4>>2];J[d+300>>2]=J[b>>2];J[d+304>>2]=c;c=J[b+28>>2];J[d+324>>2]=J[b+24>>2];J[d+328>>2]=c;c=J[b+20>>2];J[d+316>>2]=J[b+16>>2];J[d+320>>2]=c;c=J[b+44>>2];J[d+340>>2]=J[b+40>>2];J[d+344>>2]=c;c=J[b+36>>2];J[d+332>>2]=J[b+32>>2];J[d+336>>2]=c;c=J[b+60>>2];J[d+356>>2]=J[b+56>>2];J[d+360>>2]=c;c=J[b+52>>2];J[d+348>>2]=J[b+48>>2];J[d+352>>2]=c;b=J[a+12>>2];J[d+372>>2]=J[a+8>>2];J[d+376>>2]=b;b=J[a+4>>2];J[d+364>>2]=J[a>>2];J[d+368>>2]=b;b=J[a+20>>2];J[d+380>>2]=J[a+16>>2];J[d+384>>2]=b;b=J[a+28>>2];J[d+388>>2]=J[a+24>>2];J[d+392>>2]=b;b=J[a+36>>2];J[d+396>>2]=J[a+32>>2];J[d+400>>2]=b;b=J[a+44>>2];J[d+404>>2]=J[a+40>>2];J[d+408>>2]=b;b=J[a+52>>2];J[d+412>>2]=J[a+48>>2];J[d+416>>2]=b;b=J[a+60>>2];J[d+420>>2]=J[a+56>>2];J[d+424>>2]=b;H[d+552|0]=0;J[d+572>>2]=-1082130432;J[d+524>>2]=0;J[d+444>>2]=1566444395;J[d+448>>2]=1566444395;J[d+592>>2]=0;J[d+428>>2]=1065353216;J[d+432>>2]=1050253722;J[d+436>>2]=1065353216;J[d+440>>2]=1008981770;J[d+596>>2]=0;J[d+600>>2]=1060320051;J[d+604>>2]=0;J[d+452>>2]=1566444395;J[d+456>>2]=1028443341;ga=e+16|0;return d|0}function Sk(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=J[a+4>>2];g=d;a:{if((d|0)!=J[a+8>>2]){break a}g=d;h=d?d<<1:1;if((d|0)>=(h|0)){break a}if(h){J[8369]=J[8369]+1;j=ia[J[6782]](P(h,244),16)|0;g=J[a+4>>2]}else{g=d}if((g|0)>0){while(1){c=P(i,244);e=c+j|0;c=c+J[a+12>>2]|0;f=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=f;f=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=f;f=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=f;f=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=f;f=J[c+44>>2];J[e+40>>2]=J[c+40>>2];J[e+44>>2]=f;f=J[c+36>>2];J[e+32>>2]=J[c+32>>2];J[e+36>>2]=f;f=J[c+52>>2];J[e+48>>2]=J[c+48>>2];J[e+52>>2]=f;f=J[c+60>>2];J[e+56>>2]=J[c+56>>2];J[e+60>>2]=f;sa(e- -64|0,c- -64|0,180);i=i+1|0;if((g|0)!=(i|0)){continue}break}}g=J[a+12>>2];if(!(g?!g|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+12>>2]=j;H[a+16|0]=1;J[a+8>>2]=h;g=J[a+4>>2]}J[a+4>>2]=g+1;c=J[b+12>>2];g=P(d,244);d=g+J[a+12>>2]|0;J[d+8>>2]=J[b+8>>2];J[d+12>>2]=c;c=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=c;c=J[b+28>>2];J[d+24>>2]=J[b+24>>2];J[d+28>>2]=c;c=J[b+20>>2];J[d+16>>2]=J[b+16>>2];J[d+20>>2]=c;c=J[b+36>>2];J[d+32>>2]=J[b+32>>2];J[d+36>>2]=c;c=J[b+44>>2];J[d+40>>2]=J[b+40>>2];J[d+44>>2]=c;c=J[b+52>>2];J[d+48>>2]=J[b+48>>2];J[d+52>>2]=c;c=J[b+60>>2];J[d+56>>2]=J[b+56>>2];J[d+60>>2]=c;sa(d- -64|0,b- -64|0,180);return g+J[a+12>>2]|0}function Jx(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=Q(0),f=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;b=J[f+8>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[f+12>>2];J[a+24>>2]=b;b=J[a+28>>2];d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]>>2])+Q(N[b>>2]*N[J[a+24>>2]+12>>2]));e=N[b+4>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+8>>2])+d);e=Q(-N[b+8>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+20>>2]=Q(e*N[J[c+12>>2]+4>>2])+d;d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]+4>>2])+Q(N[b+4>>2]*N[J[a+24>>2]+12>>2]));e=N[b+8>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]>>2])+d);e=Q(-N[b>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+16>>2]=Q(e*N[J[c+12>>2]+8>>2])+d;d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]+8>>2])+Q(N[b+8>>2]*N[J[a+24>>2]+12>>2]));e=N[b>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+4>>2])+d);e=Q(-N[b+4>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+12>>2]=Q(e*N[J[c+12>>2]>>2])+d;d=Q(N[b+12>>2]*N[J[a+24>>2]+12>>2]);e=N[b>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(d+Q(-Q(e*N[J[c+12>>2]>>2])));e=Q(-N[b+4>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+4>>2])+d);e=Q(-N[b+8>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+8>>2]=Q(e*N[J[c+12>>2]+8>>2])+d;xc(b,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+32|0;ga=f+16|0;return b|0}function og(a,b,c){var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);d=ga+-64|0;ga=d;H[b+84|0]=0;a=J[a+116>>2];e=J[a+16>>2];J[d+8>>2]=J[a+12>>2];J[d+12>>2]=e;e=J[a+8>>2];J[d>>2]=J[a+4>>2];J[d+4>>2]=e;e=J[a+32>>2];J[d+24>>2]=J[a+28>>2];J[d+28>>2]=e;e=J[a+24>>2];J[d+16>>2]=J[a+20>>2];J[d+20>>2]=e;e=J[a+48>>2];J[d+40>>2]=J[a+44>>2];J[d+44>>2]=e;e=J[a+40>>2];J[d+32>>2]=J[a+36>>2];J[d+36>>2]=e;e=J[a+64>>2];J[d+56>>2]=J[a+60>>2];J[d+60>>2]=e;e=J[a+56>>2];J[d+48>>2]=J[a+52>>2];J[d+52>>2]=e;a:{if(!c){break a}a=J[a+480>>2];if(!a){break a}ia[J[J[a>>2]+8>>2]](a,d)}r=N[d+52>>2];i=N[d+24>>2];j=N[d+20>>2];f=N[d+56>>2];k=N[d+40>>2];l=N[d+36>>2];s=N[d+48>>2];m=N[d+8>>2];n=N[d+4>>2];o=N[d>>2];p=N[d+16>>2];q=N[d+32>>2];J[b+48>>2]=0;t=f;f=N[b+164>>2];g=N[b+156>>2];h=N[b+160>>2];N[b+44>>2]=t+Q(Q(k*f)+Q(Q(q*g)+Q(l*h)));N[b+40>>2]=r+Q(Q(f*i)+Q(Q(g*p)+Q(h*j)));N[b+36>>2]=s+Q(Q(f*m)+Q(Q(g*o)+Q(h*n)));J[b- -64>>2]=0;f=N[b+180>>2];g=N[b+172>>2];h=N[b+176>>2];N[b+60>>2]=Q(k*f)+Q(Q(q*g)+Q(l*h));N[b+56>>2]=Q(i*f)+Q(Q(p*g)+Q(h*j));N[b+52>>2]=Q(m*f)+Q(Q(o*g)+Q(n*h));f=N[b+196>>2];g=N[b+192>>2];h=N[b+188>>2];J[b+80>>2]=0;N[b+76>>2]=Q(k*f)+Q(Q(q*h)+Q(l*g));N[b+72>>2]=Q(i*f)+Q(Q(p*h)+Q(j*g));N[b+68>>2]=Q(m*f)+Q(Q(o*h)+Q(n*g));ga=d- -64|0}function PF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;g=ga-160|0;ga=g;f=J[a+12>>2];a:{if(!f){break a}h=K[a+16|0];i=h?b:c;j=J[i+4>>2];b=h?c:b;h=J[b+4>>2];J[e+4>>2]=f;c=g+144|0;N[c+12>>2]=N[f+752>>2];J[c+8>>2]=j;J[c+4>>2]=h;J[c>>2]=11740;J[g+136>>2]=1566444395;b=J[b+12>>2];f=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=f;f=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=f;f=J[b+28>>2];J[g+32>>2]=J[b+24>>2];J[g+36>>2]=f;f=J[b+20>>2];J[g+24>>2]=J[b+16>>2];J[g+28>>2]=f;f=J[b+44>>2];J[g+48>>2]=J[b+40>>2];J[g+52>>2]=f;f=J[b+36>>2];J[g+40>>2]=J[b+32>>2];J[g+44>>2]=f;h=J[b+60>>2];f=g- -64|0;J[f>>2]=J[b+56>>2];J[f+4>>2]=h;f=J[b+52>>2];J[g+56>>2]=J[b+48>>2];J[g+60>>2]=f;b=J[i+12>>2];f=J[b+12>>2];J[g+80>>2]=J[b+8>>2];J[g+84>>2]=f;f=J[b+4>>2];J[g+72>>2]=J[b>>2];J[g+76>>2]=f;f=J[b+20>>2];J[g+88>>2]=J[b+16>>2];J[g+92>>2]=f;f=J[b+28>>2];J[g+96>>2]=J[b+24>>2];J[g+100>>2]=f;f=J[b+36>>2];J[g+104>>2]=J[b+32>>2];J[g+108>>2]=f;f=J[b+44>>2];J[g+112>>2]=J[b+40>>2];J[g+116>>2]=f;f=J[b+52>>2];J[g+120>>2]=J[b+48>>2];J[g+124>>2]=f;f=J[b+60>>2];J[g+128>>2]=J[b+56>>2];J[g+132>>2]=f;zm(c,g+8|0,e,J[d+20>>2],K[a+16|0]);if(!K[a+8|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);f=a;a=J[J[e+12>>2]+8>>2];ab(f,(b?c:a)+4|0,(b?a:d)+4|0)}ga=g+160|0}function tl(a,b,c,d,e,f){var g=0;J[a+4>>2]=b;J[a>>2]=18896;b=J[c+12>>2];J[a+16>>2]=J[c+8>>2];J[a+20>>2]=b;b=J[c+4>>2];J[a+8>>2]=J[c>>2];J[a+12>>2]=b;b=J[c+28>>2];J[a+32>>2]=J[c+24>>2];J[a+36>>2]=b;b=J[c+20>>2];J[a+24>>2]=J[c+16>>2];J[a+28>>2]=b;b=J[c+44>>2];J[a+48>>2]=J[c+40>>2];J[a+52>>2]=b;b=J[c+36>>2];J[a+40>>2]=J[c+32>>2];J[a+44>>2]=b;g=J[c+60>>2];b=a- -64|0;J[b>>2]=J[c+56>>2];J[b+4>>2]=g;b=J[c+52>>2];J[a+56>>2]=J[c+48>>2];J[a+60>>2]=b;b=J[d+12>>2];J[a+80>>2]=J[d+8>>2];J[a+84>>2]=b;b=J[d+4>>2];J[a+72>>2]=J[d>>2];J[a+76>>2]=b;b=J[d+28>>2];J[a+96>>2]=J[d+24>>2];J[a+100>>2]=b;b=J[d+20>>2];J[a+88>>2]=J[d+16>>2];J[a+92>>2]=b;b=J[d+44>>2];J[a+112>>2]=J[d+40>>2];J[a+116>>2]=b;b=J[d+36>>2];J[a+104>>2]=J[d+32>>2];J[a+108>>2]=b;b=J[d+60>>2];J[a+128>>2]=J[d+56>>2];J[a+132>>2]=b;b=J[d+52>>2];J[a+120>>2]=J[d+48>>2];J[a+124>>2]=b;b=J[e+12>>2];J[a+144>>2]=J[e+8>>2];J[a+148>>2]=b;b=J[e+4>>2];J[a+136>>2]=J[e>>2];J[a+140>>2]=b;b=J[e+28>>2];J[a+160>>2]=J[e+24>>2];J[a+164>>2]=b;b=J[e+20>>2];J[a+152>>2]=J[e+16>>2];J[a+156>>2]=b;b=J[e+44>>2];J[a+176>>2]=J[e+40>>2];J[a+180>>2]=b;b=J[e+36>>2];J[a+168>>2]=J[e+32>>2];J[a+172>>2]=b;b=J[e+60>>2];J[a+192>>2]=J[e+56>>2];J[a+196>>2]=b;b=J[e+52>>2];J[a+184>>2]=J[e+48>>2];J[a+188>>2]=b;J[a+208>>2]=0;N[a+204>>2]=f;J[a+200>>2]=1065353216}function ft(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=ra(608);a=J[d+8>>2];ug(b,5,J[d+12>>2]);J[b>>2]=19332;c=J[a+12>>2];J[b+308>>2]=J[a+8>>2];J[b+312>>2]=c;c=J[a+4>>2];J[b+300>>2]=J[a>>2];J[b+304>>2]=c;c=J[a+28>>2];J[b+324>>2]=J[a+24>>2];J[b+328>>2]=c;c=J[a+20>>2];J[b+316>>2]=J[a+16>>2];J[b+320>>2]=c;c=J[a+36>>2];J[b+332>>2]=J[a+32>>2];J[b+336>>2]=c;c=J[a+44>>2];J[b+340>>2]=J[a+40>>2];J[b+344>>2]=c;c=J[a+56>>2];e=J[a+60>>2];f=J[a+48>>2];a=J[a+52>>2];H[b+527|0]=0;J[b+356>>2]=c;J[b+360>>2]=e;J[b+348>>2]=f;J[b+352>>2]=a;a=J[b+304>>2];J[b+364>>2]=J[b+300>>2];J[b+368>>2]=a;a=J[b+312>>2];J[b+372>>2]=J[b+308>>2];J[b+376>>2]=a;a=J[b+320>>2];J[b+380>>2]=J[b+316>>2];J[b+384>>2]=a;a=J[b+328>>2];J[b+388>>2]=J[b+324>>2];J[b+392>>2]=a;a=J[b+344>>2];J[b+404>>2]=J[b+340>>2];J[b+408>>2]=a;a=J[b+336>>2];J[b+396>>2]=J[b+332>>2];J[b+400>>2]=a;H[b+552|0]=0;H[b+526|0]=0;I[b+524>>1]=0;J[b+420>>2]=0;J[b+424>>2]=0;J[b+412>>2]=0;J[b+416>>2]=0;J[b+572>>2]=-1082130432;J[b+452>>2]=1566444395;J[b+444>>2]=1566444395;J[b+448>>2]=1566444395;J[b+604>>2]=0;J[b+596>>2]=0;J[b+600>>2]=1060320051;J[b+592>>2]=0;J[b+456>>2]=1028443341;J[b+436>>2]=1065353216;J[b+440>>2]=1008981770;J[b+428>>2]=1065353216;J[b+432>>2]=1050253722;ga=d+16|0;return b|0}function KD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=0,o=Q(0),p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0);k=ga-2048|0;ga=k;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;d=N[c+8>>2];i=N[c>>2];j=N[c+4>>2];h=Q(Q(d*d)+Q(Q(i*i)+Q(j*j)));if(h<Q(1.4210854715202004e-14)){i=Q(1)}else{l=d;d=Q(Q(1)/Q(Y(h)));l=Q(l*d);o=Q(j*d);i=Q(i*d)}m=J[b+92>>2];if((m|0)>0){c=J[b+100>>2];p=J[b+120>>2];j=Q(-0xde0b6b000000000);n=m;while(1){g=m-q|0;a:{if((g|0)>0){e=(n|0)<128?n:128;r=(e|0)>1?e:1;e=0;while(1){s=N[c>>2];t=N[b+12>>2];u=N[c+4>>2];v=N[b+16>>2];w=N[c+8>>2];d=N[p>>2];x=N[b+20>>2];h=Q(ia[J[J[b>>2]+48>>2]](b));f=(e<<4)+k|0;J[f+12>>2]=0;N[f+8>>2]=Q(w+Q(d*Q(l*x)))-Q(l*h);N[f+4>>2]=Q(u+Q(d*Q(o*v)))-Q(o*h);N[f>>2]=Q(s+Q(d*Q(i*t)))-Q(i*h);p=p+4|0;c=c+16|0;e=e+1|0;if((r|0)!=(e|0)){continue}break}f=0;e=-1;d=Q(-3.4028234663852886e38);if((g|0)<=0){break a}r=(g|0)<128?g:128;while(1){g=(f<<4)+k|0;h=Q(Q(N[g+8>>2]*l)+Q(Q(N[g>>2]*i)+Q(o*N[g+4>>2])));g=h>d;d=g?h:d;e=g?f:e;f=f+1|0;if((r|0)!=(f|0)){continue}break}break a}d=Q(-3.4028234663852886e38);e=-1}if(d>j){e=(e<<4)+k|0;f=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=f;f=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=f;j=d}n=n-128|0;q=q+128|0;if((q|0)<(m|0)){continue}break}}ga=k+2048|0}function vA(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0);e=J[a+8>>2];if((e|0)>0){while(1){c=J[J[a+16>>2]+(g<<2)>>2];if(!(!(K[c+236|0]&2)|!c|(!(K[c+204|0]&2)|J[c+216>>2]==2))){e=ga-32|0;ga=e;if(b!=Q(0)){d=J[c+480>>2];if(d){ia[J[J[d>>2]+8>>2]](d,c+4|0)}J[c+324>>2]=0;f=Q(Q(1)/b);N[c+320>>2]=f*Q(N[c+60>>2]-N[c+124>>2]);N[c+316>>2]=f*Q(N[c+56>>2]-N[c+120>>2]);N[c+312>>2]=f*Q(N[c+52>>2]-N[c+116>>2]);hc(c+68|0,c+4|0,e+16|0,e+12|0);i=N[e+16>>2];j=N[e+20>>2];k=N[e+24>>2];h=N[e+12>>2];J[c+340>>2]=0;N[c+336>>2]=f*Q(h*k);N[c+332>>2]=f*Q(h*j);N[c+328>>2]=f*Q(i*h);d=J[c+324>>2];J[c+140>>2]=J[c+320>>2];J[c+144>>2]=d;d=J[c+316>>2];J[c+132>>2]=J[c+312>>2];J[c+136>>2]=d;d=J[c+332>>2];J[c+148>>2]=J[c+328>>2];J[c+152>>2]=d;d=J[c+340>>2];J[c+156>>2]=J[c+336>>2];J[c+160>>2]=d;d=J[c+8>>2];J[c+68>>2]=J[c+4>>2];J[c+72>>2]=d;d=J[c+16>>2];J[c+76>>2]=J[c+12>>2];J[c+80>>2]=d;d=J[c+24>>2];J[c+84>>2]=J[c+20>>2];J[c+88>>2]=d;d=J[c+32>>2];J[c+92>>2]=J[c+28>>2];J[c+96>>2]=d;d=J[c+48>>2];J[c+108>>2]=J[c+44>>2];J[c+112>>2]=d;d=J[c+40>>2];J[c+100>>2]=J[c+36>>2];J[c+104>>2]=d;d=J[c+64>>2];J[c+124>>2]=J[c+60>>2];J[c+128>>2]=d;d=J[c+56>>2];J[c+116>>2]=J[c+52>>2];J[c+120>>2]=d}ga=e+32|0;e=J[a+8>>2]}g=g+1|0;if((g|0)<(e|0)){continue}break}}}function uG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ga-160|0;ga=f;g=J[a+12>>2];a:{if(!g){break a}h=J[c+4>>2];i=J[b+4>>2];J[e+4>>2]=g;J[f+152>>2]=1566444395;b=J[b+12>>2];g=J[b+12>>2];J[f+32>>2]=J[b+8>>2];J[f+36>>2]=g;g=J[b+4>>2];J[f+24>>2]=J[b>>2];J[f+28>>2]=g;g=J[b+28>>2];J[f+48>>2]=J[b+24>>2];J[f+52>>2]=g;g=J[b+20>>2];J[f+40>>2]=J[b+16>>2];J[f+44>>2]=g;j=J[b+44>>2];g=f- -64|0;J[g>>2]=J[b+40>>2];J[g+4>>2]=j;g=J[b+36>>2];J[f+56>>2]=J[b+32>>2];J[f+60>>2]=g;g=J[b+60>>2];J[f+80>>2]=J[b+56>>2];J[f+84>>2]=g;g=J[b+52>>2];J[f+72>>2]=J[b+48>>2];J[f+76>>2]=g;b=J[c+12>>2];c=J[b+12>>2];J[f+96>>2]=J[b+8>>2];J[f+100>>2]=c;c=J[b+4>>2];J[f+88>>2]=J[b>>2];J[f+92>>2]=c;c=J[b+20>>2];J[f+104>>2]=J[b+16>>2];J[f+108>>2]=c;c=J[b+28>>2];J[f+112>>2]=J[b+24>>2];J[f+116>>2]=c;c=J[b+36>>2];J[f+120>>2]=J[b+32>>2];J[f+124>>2]=c;c=J[b+44>>2];J[f+128>>2]=J[b+40>>2];J[f+132>>2]=c;c=J[b+52>>2];J[f+136>>2]=J[b+48>>2];J[f+140>>2]=c;c=J[b+60>>2];J[f+144>>2]=J[b+56>>2];J[f+148>>2]=c;b=f+8|0;J[b+8>>2]=h;J[b+4>>2]=i;J[b>>2]=10020;Hm(b,f+24|0,e,J[d+20>>2],0);if(!K[a+8|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);g=a;a=J[J[e+12>>2]+8>>2];ab(g,(b?c:a)+4|0,(b?a:d)+4|0)}ga=f+160|0}function Rb(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0);o=ga-16|0;ga=o;f=N[a+52>>2];g=N[a+56>>2];j=N[a+48>>2];h=N[b>>2];k=N[b+4>>2];i=N[b+8>>2];J[e+60>>2]=0;N[e+56>>2]=g+Q(i*d);N[e+52>>2]=f+Q(k*d);N[e+48>>2]=j+Q(h*d);l=N[c+8>>2];m=N[c>>2];n=N[c+4>>2];f=Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(n*n)))));g=Q(f*d)>Q(.7853981852531433)?Q(Q(.7853981852531433)/d):f;a:{if(g<Q(.0010000000474974513)){f=Q(Q(d*Q(.5))+Q(g*Q(Q(Q(Q(d*d)*d)*Q(-.02083333395421505))*g)));break a}f=Q(Ga(Q(Q(g*Q(.5))*d))/g)}Na(a,o);j=N[o+8>>2];h=N[o>>2];k=N[o+4>>2];i=N[o+12>>2];J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;l=Q(l*f);d=Ha(Q(Q(g*d)*Q(.5)));g=Q(n*f);f=Q(m*f);m=Q(Q(Q(h*l)+Q(Q(k*d)+Q(i*g)))-Q(j*f));n=Q(Q(Q(Q(d*i)-Q(h*f))-Q(g*k))-Q(l*j));p=Q(Q(Q(f*k)+Q(Q(d*j)+Q(l*i)))-Q(g*h));h=Q(Q(Q(g*j)+Q(Q(d*h)+Q(f*i)))-Q(l*k));f=Q(Q(1)/Q(Y(Q(Q(n*n)+Q(Q(p*p)+Q(Q(h*h)+Q(m*m)))))));d=Q(m*f);g=Q(n*f);j=Q(p*f);f=Q(h*f);h=Q(Q(2)/Q(Q(g*g)+Q(Q(j*j)+Q(Q(f*f)+Q(d*d)))));k=Q(j*h);i=Q(d*k);l=Q(f*h);m=Q(g*l);N[e+36>>2]=i+m;n=Q(f*k);h=Q(d*h);p=Q(g*h);N[e+32>>2]=n-p;N[e+24>>2]=i-m;i=Q(f*h);g=Q(g*k);N[e+16>>2]=i+g;N[e+8>>2]=n+p;N[e+4>>2]=i-g;f=Q(f*l);d=Q(d*h);N[e+40>>2]=Q(1)-Q(f+d);g=f;f=Q(j*k);N[e+20>>2]=Q(1)-Q(g+f);N[e>>2]=Q(1)-Q(d+f);ga=o+16|0}function ap(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;c=ra(460);a=J[f+12>>2];b=J[f+28>>2];e=J[f+24>>2];Lk(c,b,e,J[f+20>>2]);H[c+340|0]=1;J[c>>2]=22728;d=0;J[c+336>>2]=0;J[c+368>>2]=0;J[c+372>>2]=0;J[c+360>>2]=0;J[c+364>>2]=1148846080;J[c+352>>2]=1067030938;J[c+356>>2]=0;J[c+328>>2]=0;J[c+332>>2]=0;J[c+376>>2]=0;J[c+380>>2]=0;J[c+384>>2]=0;J[c+388>>2]=0;J[c+392>>2]=0;H[c+424|0]=1;J[c+404>>2]=0;J[c+396>>2]=-1054867456;J[c+400>>2]=0;J[c+420>>2]=0;H[c+456|0]=0;J[c+452>>2]=a;J[c+412>>2]=0;J[c+416>>2]=0;if(!a){J[8369]=J[8369]+1;a=ia[J[6782]](40,16)|0;Yj(a);H[c+456|0]=1;J[c+452>>2]=a}H[c+350|0]=0;I[c+348>>1]=1;J[c+344>>2]=4302;J[c+388>>2]=b;J[c+384>>2]=e;e=c+408|0;_j(e);g=J[c+412>>2];if((g|0)>0){while(1){b=J[c+420>>2]+(d<<2)|0;a=J[b>>2];J[b>>2]=0;if(a){while(1){b=J[a+280>>2];ta(a);a=b;if(a){continue}break}}d=d+1|0;if((g|0)!=(d|0)){continue}break}}J[c+360>>2]=0;J[c+352>>2]=1067030938;J[c+356>>2]=0;J[c+444>>2]=1;J[c+448>>2]=1;J[c+436>>2]=0;J[c+428>>2]=1048576e3;J[c+432>>2]=0;J[c+392>>2]=0;J[c+376>>2]=0;J[c+380>>2]=0;J[c+368>>2]=0;J[c+372>>2]=0;J[c+404>>2]=0;J[c+396>>2]=-1054867456;J[c+400>>2]=0;_j(e);ga=f+32|0;return c|0}function vn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=g;g=J[c+12>>2];J[b+24>>2]=J[c+8>>2];J[b+28>>2]=g;g=J[d+4>>2];J[b+32>>2]=J[d>>2];J[b+36>>2]=g;g=J[d+12>>2];J[b+40>>2]=J[d+8>>2];J[b+44>>2]=g;l=L[b+12>>1];g=ga-16|0;ga=g;k=J[a+60>>2];Jd(a,g+10|0,c,0);Jd(a,g+4|0,d,1);h=J[a+68>>2];f=k+(l<<6)|0;j=L[f+48>>1];i=h+(j<<2)|0;m=L[i>>1];f=L[f+54>>1];h=h+(f<<2)|0;o=L[h>>1];p=L[g+4>>1];n=i;i=L[g+10>>1];I[n>>1]=i;I[h>>1]=L[g+4>>1];h=i-m|0;if((h|0)<0){Id(a,0,j)}i=p-o|0;if((i|0)>0){ff(a,0,f)}if((h|0)>0){ef(a,0,j,e)}if((i|0)<0){Hd(a,0,f,e)}h=J[a+72>>2];f=k+(l<<6)|0;j=L[f+50>>1];i=h+(j<<2)|0;m=L[i>>1];f=L[f+56>>1];h=h+(f<<2)|0;o=L[h>>1];p=L[g+6>>1];n=i;i=L[g+12>>1];I[n>>1]=i;I[h>>1]=L[g+6>>1];h=i-m|0;if((h|0)<0){Id(a,1,j)}i=p-o|0;if((i|0)>0){ff(a,1,f)}if((h|0)>0){ef(a,1,j,e)}if((i|0)<0){Hd(a,1,f,e)}j=J[a+76>>2];k=k+(l<<6)|0;l=L[k+52>>1];f=j+(l<<2)|0;h=L[f>>1];k=L[k+58>>1];j=j+(k<<2)|0;i=L[j>>1];m=L[g+8>>1];n=f;f=L[g+14>>1];I[n>>1]=f;I[j>>1]=L[g+8>>1];j=f-h|0;if((j|0)<0){Id(a,2,l)}f=m-i|0;if((f|0)>0){ff(a,2,k)}if((j|0)>0){ef(a,2,l,e)}if((f|0)<0){Hd(a,2,k,e)}ga=g+16|0;a=J[a+108>>2];if(a){ia[J[J[a>>2]+16>>2]](a,J[b+60>>2],c,d,e)}}function Mm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0;c=ga-784|0;ga=c;J[c+732>>2]=0;J[c+736>>2]=0;J[c+744>>2]=0;J[c+748>>2]=0;J[c+740>>2]=1065353216;J[c+752>>2]=0;J[c+756>>2]=0;J[c+764>>2]=0;J[c+768>>2]=0;J[c+760>>2]=1065353216;J[c+772>>2]=0;J[c+776>>2]=0;J[c+780>>2]=0;J[c+724>>2]=0;J[c+728>>2]=0;J[c+720>>2]=1065353216;J[c+712>>2]=0;J[c+716>>2]=0;J[c+544>>2]=6804;N[c+708>>2]=N[a+200>>2];f=N[a+196>>2];d=c+488|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+532>>2]=f;N[c+516>>2]=f;J[c+492>>2]=8;J[c+488>>2]=16132;g=c+384|0;h=Bb(g);J[c+388>>2]=1;J[c+384>>2]=2176;e=J[b+12>>2];J[c+448>>2]=J[b+8>>2];J[c+452>>2]=e;e=J[b+4>>2];J[c+440>>2]=J[b>>2];J[c+444>>2]=e;e=J[b+20>>2];J[c+456>>2]=J[b+16>>2];J[c+460>>2]=e;e=J[b+28>>2];J[c+464>>2]=J[b+24>>2];J[c+468>>2]=e;e=J[b+36>>2];J[c+472>>2]=J[b+32>>2];J[c+476>>2]=e;e=J[b+44>>2];J[c+480>>2]=J[b+40>>2];J[c+484>>2]=e;H[c+356|0]=0;J[c+332>>2]=953267991;b=c+8|0;J[b+12>>2]=g;J[b+8>>2]=d;J[b+4>>2]=c+24;J[b>>2]=19004;d=b;b=c+720|0;a:{if(!sl(d,a+4|0,a+68|0,b,b,c+544|0)){break a}f=N[c+708>>2];if(!(f<N[a+200>>2])){break a}N[a+200>>2]=f}Qa(h);ga=c+784|0}function Ay(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=0,n=0;a:{if(ia[J[J[c>>2]+16>>2]](c)|0){break a}h=J[b+712>>2];f=ia[J[J[c>>2]+36>>2]](c)|0;b:{if(!(ia[J[J[c>>2]+8>>2]](c)|0)){break b}a=ia[J[J[c>>2]+20>>2]](c)|0;i=ia[J[J[c>>2]+24>>2]](c)|0;if((h|0)<=0){break b}a=f+(a<<2)|0;g=J[b+720>>2];if((h|0)!=1){j=h&-2;i=i<<2;while(1){e=g+P(d,104)|0;k=J[e+12>>2];n=J[e+8>>2];N[a+8>>2]=N[e+16>>2];J[a>>2]=n;J[a+4>>2]=k;e=g+P(d|1,104)|0;l=N[e+16>>2];k=J[e+12>>2];a=a+i|0;J[a>>2]=J[e+8>>2];J[a+4>>2]=k;N[a+8>>2]=l;a=a+i|0;d=d+2|0;m=m+2|0;if((j|0)!=(m|0)){continue}break}}if(!(h&1)){break b}d=g+P(d,104)|0;g=J[d+12>>2];i=J[d+8>>2];N[a+8>>2]=N[d+16>>2];J[a>>2]=i;J[a+4>>2]=g}if(!(ia[J[J[c>>2]+12>>2]](c)|0)){break a}a=ia[J[J[c>>2]+28>>2]](c)|0;c=ia[J[J[c>>2]+32>>2]](c)|0;if((h|0)<=0){break a}a=f+(a<<2)|0;b=J[b+720>>2];d=0;if((h|0)!=1){i=h&-2;c=c<<2;g=0;while(1){f=b+P(d,104)|0;e=J[f+76>>2];j=J[f+72>>2];N[a+8>>2]=N[f+80>>2];J[a>>2]=j;J[a+4>>2]=e;f=b+P(d|1,104)|0;l=N[f+80>>2];e=J[f+76>>2];a=a+c|0;J[a>>2]=J[f+72>>2];J[a+4>>2]=e;N[a+8>>2]=l;a=a+c|0;d=d+2|0;g=g+2|0;if((i|0)!=(g|0)){continue}break}}if(!(h&1)){break a}b=b+P(d,104)|0;c=J[b+76>>2];d=J[b+72>>2];N[a+8>>2]=N[b+80>>2];J[a>>2]=d;J[a+4>>2]=c}}function SC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{if(K[a+164|0]){k=a+132|0;if(J[k>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;e=ia[J[6782]](b<<2,16)|0}else{e=0}d=J[a+136>>2];f=J[a+128>>2];c:{d:{if((f|0)>0){if(f-1>>>0>=3){l=f&-4;while(1){c=g<<2;J[c+e>>2]=J[d+c>>2];h=c|4;J[h+e>>2]=J[d+h>>2];h=c|8;J[h+e>>2]=J[d+h>>2];c=c|12;J[c+e>>2]=J[d+c>>2];g=g+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}c=f&3;if(c){while(1){f=g<<2;J[f+e>>2]=J[d+f>>2];g=g+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(K[a+140|0]){break d}break c}if(!d|!K[a+140|0]){break c}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}J[a+136>>2]=e;H[a+140|0]=1;break b}k=a+152|0;if(J[k>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;e=ia[J[6782]](b<<1,16)|0}else{e=0}d=J[a+156>>2];f=J[a+148>>2];e:{f:{if((f|0)>0){if(f-1>>>0>=3){l=f&-4;while(1){c=g<<1;I[c+e>>1]=L[d+c>>1];h=c|2;I[h+e>>1]=L[d+h>>1];h=c|4;I[h+e>>1]=L[d+h>>1];c=c|6;I[c+e>>1]=L[d+c>>1];g=g+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}c=f&3;if(c){while(1){f=g<<1;I[f+e>>1]=L[d+f>>1];g=g+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(K[a+160|0]){break f}break e}if(!d|!K[a+160|0]){break e}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}J[a+156>>2]=e;H[a+160|0]=1}J[k>>2]=b}}function Td(a,b,c){var d=0,e=0,f=0,g=0;e=ga-80|0;ga=e;J[e+76>>2]=a;J[e+72>>2]=b;J[e+68>>2]=c;g=J[e+72>>2];c=J[e+68>>2];b=ga-48|0;ga=b;f=e+16|0;J[b+44>>2]=f;J[b+40>>2]=g;J[b+36>>2]=c;d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+32>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+28>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+24>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+20>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+16>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+12>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b+8>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b+4>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);qf(f,b+32|0,b+28|0,b+24|0,b+20|0,b+16|0,b+12|0,b+8|0,b+4|0,b);ga=b+48|0;wb(e,g,J[e+68>>2]+48|0);Vf(a,f,e);ga=e+80|0}function VE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;fb(a,b,c);N[b+20>>2]=N[a+72>>2];d=J[a+16>>2];J[b+12>>2]=0;J[b+16>>2]=d;if(d){g=ia[J[J[c>>2]+16>>2]](c,76,d)|0;d=J[g+8>>2];J[b+12>>2]=ia[J[J[c>>2]+28>>2]](c,d);if(J[b+16>>2]>0){f=J[a+24>>2];while(1){e=P(h,80);f=e+f|0;N[d+72>>2]=N[f+72>>2];J[d+64>>2]=ia[J[J[c>>2]+28>>2]](c,J[f+64>>2]);if(!(ia[J[J[c>>2]+24>>2]](c,J[(e+J[a+24>>2]|0)+64>>2])|0)){f=J[(e+J[a+24>>2]|0)+64>>2];f=(k=c,l=ia[J[J[f>>2]+52>>2]](f)|0,m=1,j=J[J[c>>2]+16>>2],ia[j](k|0,l|0,m|0)|0);i=J[(e+J[a+24>>2]|0)+64>>2];m=c,l=f,k=ia[J[J[i>>2]+56>>2]](i,J[f+8>>2],c)|0,n=1346455635,o=J[(e+J[a+24>>2]|0)+64>>2],j=J[J[c>>2]+20>>2],ia[j](m|0,l|0,k|0,n|0,o|0)}f=J[a+24>>2];e=e+f|0;J[d+68>>2]=J[e+68>>2];N[d>>2]=N[e>>2];N[d+4>>2]=N[e+4>>2];N[d+8>>2]=N[e+8>>2];N[d+12>>2]=N[e+12>>2];N[d+16>>2]=N[e+16>>2];N[d+20>>2]=N[e+20>>2];N[d+24>>2]=N[e+24>>2];N[d+28>>2]=N[e+28>>2];N[d+32>>2]=N[e+32>>2];N[d+36>>2]=N[e+36>>2];N[d+40>>2]=N[e+40>>2];N[d+44>>2]=N[e+44>>2];N[d+48>>2]=N[e+48>>2];N[d+52>>2]=N[e+52>>2];N[d+56>>2]=N[e+56>>2];N[d+60>>2]=N[e+60>>2];d=d+76|0;h=h+1|0;if((h|0)<J[b+16>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,4126,1497453121,J[g+8>>2])}return 3978}function nC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0);f=ga+-64|0;ga=f;C=ia[J[J[a>>2]+92>>2]](a)|0;g=J[J[a+184>>2]+(b<<2)>>2];a:{if(C){a=J[a+164>>2]+(b<<6)|0;q=N[a+32>>2];r=N[a>>2];s=N[a+16>>2];t=N[a+56>>2];u=N[a+52>>2];v=N[a+48>>2];w=N[a+36>>2];x=N[a+20>>2];y=N[a+4>>2];z=N[a+40>>2];A=N[a+24>>2];B=N[a+8>>2];D=N[c+52>>2];E=N[c+56>>2];h=N[c+24>>2];i=N[c+20>>2];j=N[c+40>>2];k=N[c+36>>2];F=N[c+48>>2];l=N[c+8>>2];m=N[c>>2];n=N[c+4>>2];o=N[c+16>>2];p=N[c+32>>2];J[f+60>>2]=0;J[f+44>>2]=0;J[f+28>>2]=0;N[f+40>>2]=Q(z*j)+Q(Q(B*p)+Q(A*k));N[f+36>>2]=Q(w*j)+Q(Q(y*p)+Q(x*k));N[f+24>>2]=Q(z*h)+Q(Q(B*o)+Q(A*i));N[f+20>>2]=Q(w*h)+Q(Q(y*o)+Q(x*i));N[f+56>>2]=E+Q(Q(t*j)+Q(Q(v*p)+Q(k*u)));N[f+52>>2]=D+Q(Q(t*h)+Q(Q(v*o)+Q(i*u)));J[f+12>>2]=0;N[f+32>>2]=Q(q*j)+Q(Q(r*p)+Q(s*k));N[f+16>>2]=Q(q*h)+Q(Q(r*o)+Q(s*i));N[f>>2]=Q(q*l)+Q(Q(r*m)+Q(s*n));N[f+8>>2]=Q(z*l)+Q(Q(B*m)+Q(n*A));N[f+4>>2]=Q(w*l)+Q(Q(y*m)+Q(n*x));N[f+48>>2]=F+Q(Q(t*l)+Q(Q(v*m)+Q(n*u)));ia[J[J[g>>2]+8>>2]](g,f,d,e);break a}ia[J[J[g>>2]+8>>2]](g,c,d,e)}ga=f- -64|0}function _j(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a+32>>2]=262144;c=J[a+4>>2];a:{if((c|0)>=2383){break a}if(J[a+8>>2]<2383){J[8369]=J[8369]+1;g=ia[J[6782]](9532,16)|0;i=J[a+4>>2];b:{if((i|0)<=0){break b}if(i-1>>>0>=3){j=i&-4;while(1){h=e<<2;J[h+g>>2]=J[J[a+12>>2]+h>>2];d=h|4;J[d+g>>2]=J[d+J[a+12>>2]>>2];d=h|8;J[d+g>>2]=J[d+J[a+12>>2]>>2];d=h|12;J[d+g>>2]=J[d+J[a+12>>2]>>2];e=e+4|0;f=f+4|0;if((j|0)!=(f|0)){continue}break}}j=i&3;if(!j){break b}while(1){d=e<<2;J[d+g>>2]=J[d+J[a+12>>2]>>2];e=e+1|0;b=b+1|0;if((j|0)!=(b|0)){continue}break}}b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=g;H[a+16|0]=1;J[a+8>>2]=2383}d=(c^-1)+2383|0;b=2383-c&3;if(b){e=0;while(1){J[J[a+12>>2]+(c<<2)>>2]=0;c=c+1|0;e=e+1|0;if((b|0)!=(e|0)){continue}break}}if(d>>>0<3){break a}while(1){b=c<<2;J[b+J[a+12>>2]>>2]=0;J[(b+J[a+12>>2]|0)+4>>2]=0;J[(b+J[a+12>>2]|0)+8>>2]=0;J[(b+J[a+12>>2]|0)+12>>2]=0;c=c+4|0;if((c|0)!=2383){continue}break}}J[a+4>>2]=2383;f=0;while(1){b=J[a+12>>2]+(f<<2)|0;c=J[b>>2];J[b>>2]=0;if(c){while(1){b=J[c+280>>2];ta(c);c=b;if(b){continue}break}}f=f+1|0;if((f|0)!=2383){continue}break}J[a+36>>2]=1;J[a+40>>2]=1;J[a+28>>2]=0;J[a+20>>2]=1048576e3;J[a+24>>2]=0}function $j(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0;eh(a,b);J[a>>2]=22232;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22320;H[c+4|0]=0;J[a+92>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22400;H[c+4|0]=0;J[a+96>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22400;J[a+100>>2]=c;H[c+4|0]=1;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22480;H[c+4|0]=0;J[a+104>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22564;J[a+108>>2]=c;H[c+4|0]=1;a:{if(!K[a+20|0]){break a}c=J[a+16>>2];if(!c|J[c>>2]>155){break a}c=J[c+16>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}c=J[a+16>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[8369]=J[8369]+1;e=ia[J[6782]](20,16)|0;b=J[b+12>>2];J[e+4>>2]=b;J[e>>2]=156;J[8369]=J[8369]+1;b=ia[J[6782]](P(b,156),16)|0;J[e+12>>2]=b;J[e+16>>2]=b;g=J[e+4>>2];J[e+8>>2]=g;f=g-1|0;b:{if(!f){break b}c=J[e>>2];h=f&7;if(h){while(1){d=b;b=b+c|0;J[d>>2]=b;f=f-1|0;i=i+1|0;if((i|0)!=(h|0)){continue}break}}if(g-2>>>0<7){break b}while(1){d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;f=f-8|0;if(f){continue}break}}J[b>>2]=0;J[a+16>>2]=e}}function Uk(a){a=a|0;var b=0;J[a>>2]=19884;b=J[a+176>>2];if(!(b?!b|!K[a+180|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+176>>2]=0;H[a+180|0]=1;J[a+168>>2]=0;J[a+172>>2]=0;b=J[a+156>>2];if(!(b?!b|!K[a+160|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+156>>2]=0;H[a+160|0]=1;J[a+148>>2]=0;J[a+152>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function yc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=J[a+16>>2];c=J[b+16>>2];if((m|0)!=(c|0)){return m-c|0}if(!m){return 0}e=J[a+4>>2];d=J[b+8>>2];f=J[b+12>>2];c=0;i=J[a>>2];k=jI(f,c,i,0);h=ha;f=jI(f,c,e,0);h=h+f|0;c=ha+g|0;c=f>>>0>h>>>0?c+1|0:c;g=jI(d,0,e,g);f=ha;e=h+f|0;c=e>>>0<f>>>0?c+1|0:c;f=e;e=c;c=0;h=g+k|0;c=h>>>0<g>>>0?c+1|0:c;k=h;n=c;f=c+f|0;c=e;e=f;g=e>>>0<n>>>0?c+1|0:c;e=0;d=jI(i,o,d,j);h=e+d|0;c=ha+k|0;c=d>>>0>h>>>0?c+1|0:c;o=h;d=h;h=c;e=(k|0)==(c|0)&d>>>0<e>>>0|c>>>0<k>>>0;k=f+e|0;c=g;c=e>>>0>k>>>0?c+1|0:c;e=c;d=J[a+12>>2];i=J[b>>2];j=J[b+4>>2];c=0;f=J[a+8>>2];n=0;b=jI(j,c,f,n);g=ha;a=j;j=d;l=jI(a,c,d,0);d=g+l|0;g=ha;g=d>>>0<l>>>0?g+1|0:g;l=0;a=jI(i,l,j,c);j=ha;d=j+d|0;c=g;c=d>>>0<j>>>0?c+1|0:c;g=c;c=0;b=a+b|0;c=b>>>0<a>>>0?c+1|0:c;d=c+d|0;g=d>>>0<c>>>0?g+1|0:g;a=d;d=-1;p=a;j=0;i=jI(i,l,f,n);a=j+i|0;c=ha+b|0;c=a>>>0<i>>>0?c+1|0:c;i=a;a=c;f=(b|0)==(c|0)&j>>>0>i>>>0|b>>>0>c>>>0;b=p+f|0;c=g;c=b>>>0<f>>>0?c+1|0:c;a:{if((c|0)==(e|0)&b>>>0>k>>>0|c>>>0>e>>>0){break a}d=1;if((c|0)==(e|0)&b>>>0<k>>>0|c>>>0<e>>>0){break a}d=-1;if((a|0)==(h|0)&i>>>0>o>>>0|a>>>0>h>>>0){break a}d=(a|0)==(h|0)&i>>>0<o>>>0|a>>>0<h>>>0}return P(d,m)}function rA(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=Q(d);var e=0,f=0,g=0,h=Q(0);e=ga-16|0;ga=e;aa(J[8371],0)|0;ne(33488);J[8373]=J[8373]+1;f=J[8376];J[8376]=f+1;if(!f){aa(e+8|0,0)|0;f=J[8371];J[8375]=(J[e+12>>2]-J[f+4>>2]|0)+P(J[e+8>>2]-J[f>>2]|0,1e6)}J[8381]=0;aa(e+8|0,0)|0;f=J[8371];J[8382]=(J[e+12>>2]-J[f+4>>2]|0)+P(J[e+8>>2]-J[f>>2]|0,1e6);ga=e+16|0;ya(3009);a:{if(c){N[a+268>>2]=d;b=Q(N[a+264>>2]+b);N[a+264>>2]=b;if(!(b>=d)){break a}h=b;b=Q(b/d);b:{if(Q(R(b))<Q(2147483648)){g=~~b;break b}g=-2147483648}N[a+264>>2]=h-Q(Q(g|0)*d);break a}J[a+268>>2]=0;N[a+264>>2]=K[a+300|0]?Q(0):b;d=b;g=!(Q(R(b))<Q(1.1920928955078125e-7));c=g}if(ia[J[J[a>>2]+20>>2]](a)|0){e=ia[J[J[a>>2]+20>>2]](a)|0;H[32584]=ia[J[J[e>>2]+48>>2]](e)>>>4&1}c:{if(g){e=(c|0)>(g|0)?g:c;ia[J[J[a>>2]+164>>2]](a,Q(d*Q(e|0)));ia[J[J[a>>2]+168>>2]](a);if((e|0)<=0){break c}if((e|0)!=1){f=e&-2;c=0;while(1){ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);c=c+2|0;if((f|0)!=(c|0)){continue}break}}if(!(e&1)){break c}ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);break c}ia[J[J[a>>2]+80>>2]](a)}ia[J[J[a>>2]+120>>2]](a);J[8381]=J[8381]+1;xa();return g|0}function lE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=ga-80|0;ga=e;a:{if((d|0)<=0){break a}if(d-1>>>0>=7){k=d&-8;while(1){f=i<<4;J[(f+c|0)+12>>2]=-581039253;J[((f|16)+c|0)+12>>2]=-581039253;J[((f|32)+c|0)+12>>2]=-581039253;J[((f|48)+c|0)+12>>2]=-581039253;J[((f|64)+c|0)+12>>2]=-581039253;J[((f|80)+c|0)+12>>2]=-581039253;J[((f|96)+c|0)+12>>2]=-581039253;J[((f|112)+c|0)+12>>2]=-581039253;i=i+8|0;g=g+8|0;if((k|0)!=(g|0)){continue}break}}g=d&7;if(g){while(1){J[((i<<4)+c|0)+12>>2]=-581039253;i=i+1|0;h=h+1|0;if((g|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}j=e+40|4;f=e- -64|0;i=0;while(1){J[e+40>>2]=14568;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[e+60>>2]=-581039253;g=i<<4;k=g+b|0;h=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=h;h=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=h;J[e+32>>2]=1566444395;J[e+36>>2]=0;J[e+24>>2]=1566444395;J[e+28>>2]=1566444395;h=J[a+92>>2];J[e+16>>2]=-581039253;J[e+20>>2]=0;J[e+8>>2]=-581039253;J[e+12>>2]=-581039253;ia[J[J[h>>2]+8>>2]](h,e+40|0,e+8|0,e+24|0);h=J[j+12>>2];g=c+g|0;J[g+8>>2]=J[j+8>>2];J[g+12>>2]=h;h=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=h;i=i+1|0;if((i|0)!=(d|0)){continue}break}}ga=e+80|0}function jy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(Ya(a,J[b>>2],e)){if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+32>>2]=d;if(J[b+44>>2]!=4){f=a+16|0;h=f+(J[a+12>>2]<<3)|0;d=0;b:{c:{while(1){d:{if(f>>>0>=h>>>0){break d}I[b+52>>1]=0;_f(f,b,c,c,1,e);if(K[b+54|0]){break d}e:{if(!K[b+53|0]){break e}if(K[b+52|0]){d=1;if(J[b+24>>2]==1){break c}g=1;if(K[a+8|0]&2){break e}break c}g=1;if(!(H[a+8|0]&1)){break c}}f=f+8|0;continue}break}a=4;if(!g){break b}}a=3}J[b+44>>2]=a;if(d&1){break a}}J[b+20>>2]=c;J[b+40>>2]=J[b+40>>2]+1;if(J[b+36>>2]!=1|J[b+24>>2]!=2){break a}H[b+54|0]=1;return}f=J[a+12>>2];g=a+16|0;ke(g,b,c,d,e);if((f|0)<2){break a}g=g+(f<<3)|0;f=a+24|0;a=J[a+8>>2];if(!(!(a&2)&J[b+36>>2]!=1)){while(1){if(K[b+54|0]){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break}break a}if(!(a&1)){while(1){if(K[b+54|0]|J[b+36>>2]==1){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break a}}while(1){if(K[b+54|0]|J[b+36>>2]==1&J[b+24>>2]==1){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break}}}function ig(a,b,c,d){var e=0,f=0,g=0;e=ga-128|0;ga=e;J[e+108>>2]=16;J[e+112>>2]=981668463;J[e+104>>2]=b;J[e+100>>2]=c;J[e+96>>2]=1;J[e+60>>2]=0;H[e- -64|0]=1;H[e+92|0]=1;J[e+52>>2]=0;J[e+56>>2]=0;J[e+88>>2]=0;J[e+80>>2]=0;J[e+84>>2]=0;J[e+68>>2]=0;J[e+72>>2]=0;J[e+44>>2]=0;H[e+40|0]=1;H[e+36|0]=1;J[e+32>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;H[e+16|0]=1;J[e+4>>2]=0;J[e+8>>2]=0;J[e+116>>2]=c;Vj(e,e+96|0,e+40|0);J[8369]=J[8369]+1;a=Ac(ia[J[6782]](1252,16)|0,a,J[e+44>>2],J[e+60>>2],0);if(J[e+68>>2]>0){while(1){f=J[e+88>>2]+P(g,12)|0;b=J[f+8>>2];c=J[f>>2];f=J[f+4>>2];if((c|0)<(f|0)){Ja(a,c,f,0,0)}if((b|0)>(f|0)){Ja(a,f,b,0,0)}if((b|0)<(c|0)){Ja(a,b,c,0,0)}rb(a,c,f,b,0);g=g+1|0;if((g|0)<J[e+68>>2]){continue}break}}Uj(e+40|0);if(d){nk(a)}b=J[e+32>>2];if(!(b?!b|!K[e+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+32>>2]=0;H[e+36|0]=1;J[e+24>>2]=0;J[e+28>>2]=0;b=J[e+12>>2];if(!(b?!b|!K[e+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[e+88>>2];if(!(b?!b|!K[e+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+88>>2]=0;H[e+92|0]=1;J[e+80>>2]=0;J[e+84>>2]=0;b=J[e+60>>2];if(!(b?!b|!K[e+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=e+128|0;return a}function mG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a=J[b>>2];e=ia[J[J[a>>2]+56>>2]](a,48)|0;J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e>>2]=8652;H[e+28|0]=1;J[e>>2]=9856;J[e+24>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;a=J[b+4>>2];H[e+36|0]=0;J[e+32>>2]=a;J[8369]=J[8369]+1;a=ia[J[6782]](68,16)|0;H[a+24|0]=0;H[a+20|0]=1;J[a>>2]=11460;J[a+16>>2]=0;H[a+44|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+40>>2]=0;H[a- -64|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;J[a+60>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[8369]=J[8369]+1;b=ia[J[6782]](24,16)|0;h=J[a+8>>2];a:{if((h|0)<=0){break a}if((h|0)!=1){l=h&-2;while(1){f=P(g,12);i=f+J[a+16>>2]|0;j=J[i+4>>2];f=b+f|0;J[f>>2]=J[i>>2];J[f+4>>2]=j;J[f+8>>2]=J[i+8>>2];f=P(g|1,12);i=f+J[a+16>>2]|0;j=J[i+4>>2];f=b+f|0;J[f>>2]=J[i>>2];J[f+4>>2]=j;J[f+8>>2]=J[i+8>>2];g=g+2|0;k=k+2|0;if((l|0)!=(k|0)){continue}break}}if(!(h&1)){break a}h=P(g,12);g=h+J[a+16>>2]|0;i=J[g+4>>2];h=b+h|0;J[h>>2]=J[g>>2];J[h+4>>2]=i;J[h+8>>2]=J[g+8>>2]}g=J[a+16>>2];if(!(g?!g|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+16>>2]=b;H[a+20|0]=1;J[a+12>>2]=2;dh(a);J[e+8>>2]=a;J[e+40>>2]=J[J[c+4>>2]+68>>2];J[e+44>>2]=J[J[d+4>>2]+68>>2];return e|0}function es(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;f=ua(284);a=J[e+12>>2];c=ga-16|0;ga=c;J[c+12>>2]=f;J[c+8>>2]=a;d=ga-16|0;ga=d;a=J[c+12>>2];J[d+12>>2]=a;b=J[d+12>>2];J[(ga-16|0)+12>>2]=b;J[(ga-16|0)+12>>2]=b+16;J[(ga-16|0)+12>>2]=b+36;J[(ga-16|0)+12>>2]=b+52;J[(ga-16|0)+12>>2]=b+68;ga=d+16|0;Pb(a+92|0);J[(ga-16|0)+12>>2]=a+156;J[(ga-16|0)+12>>2]=a+172;J[(ga-16|0)+12>>2]=a+188;N[a+204>>2]=N[J[c+8>>2]+48>>2];N[a+208>>2]=N[J[c+8>>2]+52>>2];N[a+212>>2]=N[J[c+8>>2]+56>>2];N[a+216>>2]=N[J[c+8>>2]+60>>2];N[a+220>>2]=N[J[c+8>>2]+64>>2];N[a+224>>2]=N[J[c+8>>2]+68>>2];b=J[c+8>>2];d=J[b+4>>2];J[a+156>>2]=J[b>>2];J[a+160>>2]=d;d=J[b+12>>2];J[a+164>>2]=J[b+8>>2];J[a+168>>2]=d;b=J[c+8>>2];d=J[b+20>>2];J[a+172>>2]=J[b+16>>2];J[a+176>>2]=d;d=J[b+28>>2];J[a+180>>2]=J[b+24>>2];J[a+184>>2]=d;b=J[c+8>>2];d=J[b+36>>2];J[a+188>>2]=J[b+32>>2];J[a+192>>2]=d;d=J[b+44>>2];J[a+196>>2]=J[b+40>>2];J[a+200>>2]=d;N[a+228>>2]=N[J[c+8>>2]+72>>2];N[a+232>>2]=0;N[a+252>>2]=0;N[a+236>>2]=0;N[a+240>>2]=0;N[a+256>>2]=0;N[a+244>>2]=.10000000149011612;H[a+260|0]=H[J[c+8>>2]+80|0]&1;N[a+248>>2]=N[J[c+8>>2]+76>>2];ga=c+16|0;ga=e+16|0;return f|0}function jk(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);n=Q(-1);o=N[b+8>>2];p=N[d>>2];g=N[c>>2];k=Q(p-g);v=N[e+4>>2];l=N[c+4>>2];m=Q(v-l);w=N[e>>2];h=Q(w-g);r=N[d+4>>2];i=Q(r-l);s=Q(Q(k*m)-Q(h*i));j=N[b>>2];t=i;x=N[e+8>>2];i=N[c+8>>2];q=Q(x-i);y=N[d+8>>2];u=Q(y-i);m=Q(Q(t*q)-Q(m*u));t=N[b+4>>2];k=Q(Q(u*h)-Q(q*k));h=Q(Q(o*s)+Q(Q(j*m)+Q(t*k)));a:{if(Q(R(h))<Q(1.1920928955078125e-7)){break a}q=N[a+8>>2];u=N[a>>2];z=N[a+4>>2];n=Q(Q(-Q(Q(Q(q*s)+Q(Q(u*m)+Q(k*z)))-Q(Q(i*s)+Q(Q(g*m)+Q(l*k)))))/h);b:{if(!(n>Q(11920928955078125e-22))|!(f>n)){break b}j=Q(u+Q(j*n));f=Q(g-j);h=Q(z+Q(t*n));g=Q(r-h);p=Q(p-j);l=Q(l-h);r=Q(q+Q(o*n));o=Q(y-r);i=Q(i-r);if(!(Q(Q(s*Q(Q(f*g)-Q(p*l)))+Q(Q(m*Q(Q(l*o)-Q(g*i)))+Q(k*Q(Q(i*p)-Q(o*f)))))>Q(-11920928955078125e-22))){break b}h=Q(v-h);j=Q(w-j);q=Q(s*Q(Q(p*h)-Q(j*g)));t=g;g=Q(x-r);if(!(Q(q+Q(Q(m*Q(Q(t*g)-Q(h*o)))+Q(k*Q(Q(o*j)-Q(g*p)))))>Q(-11920928955078125e-22))){break b}if(Q(Q(s*Q(Q(j*l)-Q(f*h)))+Q(Q(m*Q(Q(h*i)-Q(l*g)))+Q(k*Q(Q(g*f)-Q(i*j)))))>Q(-11920928955078125e-22)){break a}}n=Q(-1)}return n}function hB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+48>>2];N[b+56>>2]=N[a+52>>2];N[b+60>>2]=N[a+56>>2];N[b+64>>2]=N[a+60>>2];N[b+68>>2]=N[a- -64>>2];N[b+72>>2]=N[a+68>>2];N[b+76>>2]=N[a+72>>2];N[b+80>>2]=N[a+76>>2];N[b+84>>2]=N[a+80>>2];N[b+88>>2]=N[a+84>>2];N[b+92>>2]=N[a+88>>2];N[b+96>>2]=N[a+92>>2];N[b+100>>2]=N[a+96>>2];N[b+104>>2]=N[a+100>>2];N[b+108>>2]=N[a+104>>2];N[b+112>>2]=N[a+108>>2];N[b+116>>2]=N[a+112>>2];N[b+120>>2]=N[a+116>>2];N[b+124>>2]=N[a+120>>2];N[b+128>>2]=N[a+124>>2];N[b+132>>2]=N[a+128>>2];N[b+136>>2]=N[a+132>>2];N[b+140>>2]=N[a+136>>2];N[b+144>>2]=N[a+140>>2];N[b+148>>2]=N[a+144>>2];N[b+152>>2]=N[a+148>>2];N[b+156>>2]=N[a+152>>2];N[b+160>>2]=N[a+156>>2];N[b+164>>2]=N[a+160>>2];N[b+168>>2]=N[a+164>>2];N[b+172>>2]=N[a+168>>2];N[b+176>>2]=N[a+172>>2];N[b+228>>2]=N[a+868>>2];N[b+212>>2]=N[a+872>>2];N[b+196>>2]=N[a+680>>2];N[b+180>>2]=N[a+696>>2];N[b+232>>2]=N[a+932>>2];N[b+216>>2]=N[a+936>>2];N[b+200>>2]=N[a+684>>2];N[b+184>>2]=N[a+700>>2];N[b+236>>2]=N[a+996>>2];N[b+220>>2]=N[a+1e3>>2];N[b+204>>2]=N[a+688>>2];N[b+188>>2]=N[a+704>>2];J[b+244>>2]=K[a+1300|0];J[b+248>>2]=K[a+1301|0];return 3344}function lF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=0,r=Q(0);f=ga-16|0;ga=f;e=J[a+52>>2];o=(e+2|0)%3|0;a:{if((d|0)<=0){break a}p=N[((o<<2)+a|0)+28>>2];o=0;while(1){J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;e=e<<2;N[e+f>>2]=N[(a+e|0)+28>>2];q=o<<4;e=q+b|0;g=N[e+8>>2];h=N[e>>2];j=N[e+4>>2];i=N[f>>2];k=N[f+4>>2];r=Q(-0xde0b6b000000000);m=Q(N[f+8>>2]+Q(p*g));g=Q(ia[J[J[a>>2]+48>>2]](a));l=N[e+8>>2];m=Q(m-Q(g*l));i=Q(i+Q(p*h));h=N[e>>2];i=Q(i-Q(g*h));k=Q(k+Q(p*j));j=N[e+4>>2];k=Q(k-Q(g*j));g=Q(Q(l*m)+Q(Q(h*i)+Q(j*k)));if(g>Q(-0xde0b6b000000000)){n=c+q|0;J[n+12>>2]=0;N[n+8>>2]=m;N[n+4>>2]=k;N[n>>2]=i;l=N[e+8>>2];j=N[e+4>>2];h=N[e>>2];r=g}J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;n=J[a+52>>2]<<2;N[n+f>>2]=-N[(a+n|0)+28>>2];m=N[f+4>>2];i=N[f>>2];l=Q(N[f+8>>2]+Q(p*l));g=Q(ia[J[J[a>>2]+48>>2]](a));k=N[e+8>>2];l=Q(l-Q(g*k));h=Q(i+Q(p*h));i=N[e>>2];h=Q(h-Q(g*i));m=Q(m+Q(p*j));j=N[e+4>>2];g=Q(m-Q(g*j));if(Q(Q(k*l)+Q(Q(i*h)+Q(j*g)))>r){e=c+q|0;J[e+12>>2]=0;N[e+8>>2]=l;N[e+4>>2]=g;N[e>>2]=h}o=o+1|0;if((o|0)==(d|0)){break a}e=J[a+52>>2];continue}}ga=f+16|0}function vD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=0;h=ga-2048|0;ga=h;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;i=N[c+8>>2];e=N[c>>2];j=N[c+4>>2];f=Q(Q(i*i)+Q(Q(e*e)+Q(j*j)));a:{if(f<Q(9999999747378752e-20)){m=Q(1);f=Q(0);break a}f=Q(Q(1)/Q(Y(f)));n=Q(i*f);m=Q(e*f);f=Q(j*f)}if((ia[J[J[b>>2]+96>>2]](b)|0)>0){j=Q(-0xde0b6b000000000);while(1){k=128;b:{c:{if(((ia[J[J[b>>2]+96>>2]](b)|0)-l|0)>127){break c}k=(ia[J[J[b>>2]+96>>2]](b)|0)-l|0;if((k|0)>0){break c}e=Q(-3.4028234663852886e38);g=-1;break b}c=0;if((k|0)!=1){o=k&-2;g=0;while(1){ia[J[J[b>>2]+108>>2]](b,c,(c<<4)+h|0);d=c|1;ia[J[J[b>>2]+108>>2]](b,d,(d<<4)+h|0);c=c+2|0;g=g+2|0;if((o|0)!=(g|0)){continue}break}}if(k&1){ia[J[J[b>>2]+108>>2]](b,c,(c<<4)+h|0)}c=0;g=-1;e=Q(-3.4028234663852886e38);while(1){d=(c<<4)+h|0;i=Q(Q(N[d+8>>2]*n)+Q(Q(N[d>>2]*m)+Q(f*N[d+4>>2])));d=i>e;e=d?i:e;g=d?c:g;c=c+1|0;if((k|0)!=(c|0)){continue}break}}if(e>j){d=(g<<4)+h|0;c=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=c;c=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=c;j=e}l=l+128|0;if((ia[J[J[b>>2]+96>>2]](b)|0)>(l|0)){continue}break}}ga=h+2048|0}
  function PC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0);h=N[a+24>>2];f=N[a+40>>2];u=N[a+20>>2];v=N[a+36>>2];w=N[a+16>>2];x=N[a+32>>2];y=Q(ia[J[J[a>>2]+48>>2]](a));z=Q(ia[J[J[a>>2]+48>>2]](a));A=Q(ia[J[J[a>>2]+48>>2]](a));B=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];l=N[a+20>>2];o=N[a+36>>2];m=N[a+24>>2];C=N[a+40>>2];e=N[b+40>>2];n=N[b+36>>2];D=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];t=N[b+16>>2];E=N[a+16>>2];F=N[a+32>>2];g=N[b+32>>2];J[c+12>>2]=0;p=k;k=Q(Q(C+m)*Q(.5));m=Q(Q(F+E)*Q(.5));l=Q(Q(o+l)*Q(.5));o=Q(p+Q(Q(e*k)+Q(Q(g*m)+Q(n*l))));h=Q(A+Q(Q(f-h)*Q(.5)));p=Q(h*Q(R(e)));e=Q(y+Q(Q(x-w)*Q(.5)));f=Q(e*Q(R(g)));g=Q(z+Q(Q(v-u)*Q(.5)));n=Q(p+Q(f+Q(g*Q(R(n)))));N[c+8>>2]=o-n;f=Q(B+Q(Q(k*i)+Q(Q(m*t)+Q(l*j))));i=Q(Q(h*Q(R(i)))+Q(Q(e*Q(R(t)))+Q(g*Q(R(j)))));N[c+4>>2]=f-i;j=Q(D+Q(Q(k*q)+Q(Q(m*r)+Q(l*s))));e=Q(Q(h*Q(R(q)))+Q(Q(e*Q(R(r)))+Q(g*Q(R(s)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=n+o;N[d+4>>2]=i+f;N[d>>2]=e+j}function Ky(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;ia[J[J[b>>2]+32>>2]](b);d=ia[J[J[b>>2]+16>>2]](b,104,1)|0;c=qa(J[d+8>>2],0,104);N[c+88>>2]=N[a+248>>2];N[c+92>>2]=N[a+252>>2];N[c+96>>2]=N[a+256>>2];N[c+100>>2]=N[a+260>>2];N[c>>2]=N[a+92>>2];N[c+4>>2]=N[a+96>>2];N[c+8>>2]=N[a+100>>2];N[c+12>>2]=N[a+104>>2];N[c+16>>2]=N[a+108>>2];N[c+20>>2]=N[a+116>>2];N[c+24>>2]=N[a+120>>2];N[c+28>>2]=N[a+124>>2];N[c+32>>2]=N[a+128>>2];N[c+36>>2]=N[a+132>>2];N[c+40>>2]=N[a+140>>2];N[c+44>>2]=N[a+144>>2];N[c+48>>2]=N[a+148>>2];N[c+52>>2]=N[a+152>>2];N[c+56>>2]=N[a+168>>2];N[c+60>>2]=N[a+172>>2];J[c+64>>2]=J[a+112>>2];J[c+68>>2]=J[a+156>>2];J[c+72>>2]=J[a+160>>2];J[c+76>>2]=J[a+164>>2];J[c+80>>2]=J[a+136>>2];ia[J[J[b>>2]+20>>2]](b,d,3601,1145853764,c);d=J[a+8>>2];if((d|0)>0){while(1){c=J[J[a+16>>2]+(e<<2)>>2];if(K[c+236|0]&8){d=(g=b,h=ia[J[J[c>>2]+16>>2]](c)|0,i=1,f=J[J[b>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);i=b,h=d,g=ia[J[J[c>>2]+20>>2]](c,J[d+8>>2],b)|0,j=1497645651,k=c,f=J[J[b>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);d=J[a+8>>2]}e=e+1|0;if((e|0)<(d|0)){continue}break}}Ak(a,b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function lc(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;while(1){r=c;j=J[a+12>>2];g=j+((c+d|0)/2<<4)|0;s=J[g+8>>2];m=J[g+4>>2];k=J[g>>2];g=d;while(1){e=-1;h=-1;f=(c<<4)+j|0;n=J[f>>2];if(n){h=J[n+12>>2]}e=k?J[k+12>>2]:e;i=-1;l=-1;o=J[f+4>>2];if(o){l=J[o+12>>2]}i=m?J[m+12>>2]:i;a:{b:{if((e|0)<(h|0)){break b}e=(k|0)==(n|0)&(i|0)<(l|0);if(!(e|(k|0)!=(n|0))){if((m|0)!=(o|0)){break a}if(M[f+8>>2]>s>>>0){break b}break a}if(!e){break a}}c=c+1|0;continue}while(1){t=g<<4;e=t+j|0;h=-1;i=-1;i=k?J[k+12>>2]:i;l=J[e>>2];if(l){h=J[l+12>>2]}u=-1;p=-1;p=m?J[m+12>>2]:p;q=J[e+4>>2];if(q){u=J[q+12>>2]}c:{d:{if((h|0)<(i|0)){break d}h=(k|0)==(l|0)&(u|0)<(p|0);if(!(h|(k|0)!=(l|0))){if((m|0)!=(q|0)){break c}if(M[e+8>>2]<s>>>0){break d}break c}if(!h){break c}}g=g-1|0;continue}break}if((c|0)<=(g|0)){h=J[f+8>>2];i=J[f+12>>2];j=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=j;j=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=j;f=J[a+12>>2]+t|0;J[f+4>>2]=o;J[f+8>>2]=h;J[f+12>>2]=i;J[f>>2]=n;g=g-1|0;c=c+1|0}if((c|0)<=(g|0)){j=J[a+12>>2];continue}break}if((g|0)>(r|0)){lc(a,b,r,g)}if((c|0)<(d|0)){continue}break}}function XF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;J[7400]=J[7400]+1;k=J[a+40>>2];d=c<<16|b;d=(d<<15^-1)+d|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;i=k+((J[a+12>>2]-1&(d>>16^d))<<2)|0;d=J[i>>2];a:{if((d|0)==-1){break a}f=J[a+60>>2];g=J[a+16>>2];e=d;while(1){j=g+P(e,12)|0;if(!(J[j>>2]==(b|0)&J[j+4>>2]==(c|0))){e=J[(e<<2)+f>>2];if((e|0)!=-1){continue}break a}break}l=J[(g+P(e,12)|0)+8>>2];b:{c:{if((d|0)==(e|0)){break c}while(1){b=d;d=J[(b<<2)+f>>2];if((e|0)!=(d|0)){continue}break}if((b|0)==-1){break c}J[(b<<2)+f>>2]=J[(e<<2)+f>>2];break b}J[i>>2]=J[(e<<2)+f>>2]}h=J[a+8>>2]-1|0;if((h|0)!=(e|0)){d:{e:{g=g+P(h,12)|0;b=J[g+4>>2]<<16|J[g>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;i=J[a+12>>2]-1&(b>>16^b);d=k+(i<<2)|0;b=J[d>>2];if((h|0)==(b|0)){break e}while(1){c=b;b=J[(b<<2)+f>>2];if((h|0)!=(b|0)){continue}break}if((c|0)==-1){break e}J[(c<<2)+f>>2]=J[(h<<2)+f>>2];break d}J[d>>2]=J[(h<<2)+f>>2]}b=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=b;J[j+8>>2]=J[g+8>>2];b=J[a+40>>2]+(i<<2)|0;J[J[a+60>>2]+(e<<2)>>2]=J[b>>2];J[b>>2]=e;e=J[a+8>>2]-1|0}J[a+8>>2]=e}return l|0}function Kl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-48|0;ga=c;d=J[b+4>>2];e=J[a+48>>2];J[e+4>>2]=J[b>>2];J[e+8>>2]=d;d=J[b+12>>2];J[e+12>>2]=J[b+8>>2];J[e+16>>2]=d;J[c+44>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;J[c+32>>2]=1065353216;e=c+16|0;b=c+32|0;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+32>>2]=N[c+16>>2]+N[a+12>>2];J[c+32>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);d=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=d;d=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=d;N[a+16>>2]=N[c+16>>2]-N[a+12>>2];J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+36>>2]=1065353216;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+36>>2]=N[c+20>>2]+N[a+12>>2];J[c+36>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);d=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=d;d=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=d;N[a+20>>2]=N[c+20>>2]-N[a+12>>2];J[c+40>>2]=0;J[c+44>>2]=0;J[c+40>>2]=1065353216;J[c+32>>2]=0;J[c+36>>2]=0;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+40>>2]=N[c+24>>2]+N[a+12>>2];J[c+40>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);b=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=b;b=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=b;N[a+24>>2]=N[c+24>>2]-N[a+12>>2];ga=c+48|0}function sa(a,b,c){var d=0,e=0,f=0;if(c>>>0>=512){ea(a|0,b|0,c|0)|0;return a}e=a+c|0;a:{if(!((a^b)&3)){b:{if(!(a&3)){c=a;break b}if(!c){c=a;break b}c=a;while(1){H[c|0]=K[b|0];b=b+1|0;c=c+1|0;if(!(c&3)){break b}if(c>>>0<e>>>0){continue}break}}d=e&-4;c:{if(d>>>0<64){break c}f=d+-64|0;if(f>>>0<c>>>0){break c}while(1){J[c>>2]=J[b>>2];J[c+4>>2]=J[b+4>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=J[b+12>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=J[b+20>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=J[b+28>>2];J[c+32>>2]=J[b+32>>2];J[c+36>>2]=J[b+36>>2];J[c+40>>2]=J[b+40>>2];J[c+44>>2]=J[b+44>>2];J[c+48>>2]=J[b+48>>2];J[c+52>>2]=J[b+52>>2];J[c+56>>2]=J[b+56>>2];J[c+60>>2]=J[b+60>>2];b=b- -64|0;c=c- -64|0;if(f>>>0>=c>>>0){continue}break}}if(c>>>0>=d>>>0){break a}while(1){J[c>>2]=J[b>>2];b=b+4|0;c=c+4|0;if(d>>>0>c>>>0){continue}break}break a}if(e>>>0<4){c=a;break a}d=e-4|0;if(d>>>0<a>>>0){c=a;break a}c=a;while(1){H[c|0]=K[b|0];H[c+1|0]=K[b+1|0];H[c+2|0]=K[b+2|0];H[c+3|0]=K[b+3|0];b=b+4|0;c=c+4|0;if(d>>>0>=c>>>0){continue}break}}if(c>>>0<e>>>0){while(1){H[c|0]=K[b|0];b=b+1|0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}return a}function Co(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0,g=0,h=0;d=ga-304|0;ga=d;J[d+300>>2]=a;J[d+296>>2]=b;N[d+292>>2]=c;b=J[d+300>>2];g=ga-16|0;J[g+12>>2]=J[d+296>>2];e=J[g+12>>2]+48|0;f=J[e+4>>2];a=d+272|0;J[a>>2]=J[e>>2];J[a+4>>2]=f;f=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=f;J[g+12>>2]=J[d+296>>2];e=J[g+12>>2];N[d+220>>2]=0;N[d+216>>2]=0;f=d+224|0;g=d+292|0;na(f,g,d+220|0,d+216|0);h=d+240|0;wa(h,e,f);e=d+256|0;va(e,a,h);N[d+196>>2]=.699999988079071;N[d+192>>2]=0;N[d+188>>2]=0;f=d+200|0;na(f,d+196|0,d+192|0,d+188|0);ia[J[J[b>>2]+8>>2]](b,a,e,f);e=ga-16|0;J[e+12>>2]=J[d+296>>2];e=J[e+12>>2];N[d+132>>2]=0;N[d+128>>2]=0;f=d+136|0;na(f,d+132|0,g,d+128|0);h=d+152|0;wa(h,e,f);e=d+168|0;va(e,a,h);N[d+108>>2]=0;N[d+104>>2]=.699999988079071;N[d+100>>2]=0;f=d+112|0;na(f,d+108|0,d+104|0,d+100|0);ia[J[J[b>>2]+8>>2]](b,a,e,f);e=ga-16|0;J[e+12>>2]=J[d+296>>2];e=J[e+12>>2];N[d+44>>2]=0;N[d+40>>2]=0;f=d+48|0;na(f,d+44|0,d+40|0,g);g=d- -64|0;wa(g,e,f);e=d+80|0;va(e,a,g);N[d+20>>2]=0;N[d+16>>2]=0;N[d+12>>2]=.699999988079071;g=d+24|0;na(g,d+20|0,d+16|0,d+12|0);ia[J[J[b>>2]+8>>2]](b,a,e,g);ga=d+304|0}function mF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0);d=ga-16|0;ga=d;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;e=N[c+8>>2];h=N[c>>2];f=N[c+4>>2];g=Q(Q(e*e)+Q(Q(h*h)+Q(f*f)));a:{if(g<Q(9999999747378752e-20)){g=Q(1);e=Q(0);break a}i=e;e=Q(Q(1)/Q(Y(g)));j=Q(i*e);g=Q(h*e);e=Q(f*e)}o=b+28|0;c=J[b+52>>2];f=N[o+((c+2|0)%3<<2)>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;c=c<<2;N[c+d>>2]=N[c+o>>2];l=N[d+4>>2];m=N[d>>2];h=Q(-0xde0b6b000000000);p=Q(j*f);i=Q(p+N[d+8>>2]);k=Q(ia[J[J[b>>2]+48>>2]](b));n=Q(i-Q(j*k));q=Q(e*f);l=Q(Q(l+q)-Q(e*k));i=m;m=Q(g*f);k=Q(Q(i+m)-Q(g*k));f=Q(Q(j*n)+Q(Q(g*k)+Q(e*l)));if(f>Q(-0xde0b6b000000000)){J[a+12>>2]=0;N[a+8>>2]=n;N[a+4>>2]=l;N[a>>2]=k;h=f}J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;c=J[b+52>>2]<<2;N[c+d>>2]=-N[(b+c|0)+28>>2];f=N[d+4>>2];k=N[d>>2];r=h;l=j;i=Q(p+N[d+8>>2]);h=Q(ia[J[J[b>>2]+48>>2]](b));j=Q(i-Q(j*h));n=g;g=Q(Q(m+k)-Q(g*h));i=e;e=Q(Q(q+f)-Q(e*h));if(r<Q(Q(l*j)+Q(Q(n*g)+Q(i*e)))){J[a+12>>2]=0;N[a+8>>2]=j;N[a+4>>2]=e;N[a>>2]=g}ga=d+16|0}function wE(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=Q(0),i=Q(0),j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0;j=ga-16|0;J[d>>2]=2139095039;J[e>>2]=-8388609;p=J[a+96>>2];if((p|0)<=0){h=Q(-3.4028234663852886e38)}else{while(1){l=J[a+104>>2]+(k<<4)|0;h=Q(N[l+8>>2]*N[a+20>>2]);i=Q(N[l>>2]*N[a+12>>2]);m=Q(N[l+4>>2]*N[a+16>>2]);n=Q(Q(Q(h*N[b+40>>2])+Q(Q(i*N[b+32>>2])+Q(m*N[b+36>>2])))+N[b+56>>2]);o=Q(Q(Q(h*N[b+8>>2])+Q(Q(i*N[b>>2])+Q(m*N[b+4>>2])))+N[b+48>>2]);i=Q(Q(Q(h*N[b+24>>2])+Q(Q(i*N[b+16>>2])+Q(m*N[b+20>>2])))+N[b+52>>2]);h=Q(Q(n*N[c+8>>2])+Q(Q(o*N[c>>2])+Q(i*N[c+4>>2])));if(h<N[d>>2]){N[d>>2]=h;J[f+12>>2]=0;N[f+8>>2]=n;N[f+4>>2]=i;N[f>>2]=o}if(h>N[e>>2]){N[e>>2]=h;J[g+12>>2]=0;N[g+8>>2]=n;N[g+4>>2]=i;N[g>>2]=o}k=k+1|0;if((p|0)!=(k|0)){continue}break}h=N[e>>2]}i=N[d>>2];if(h<i){N[d>>2]=h;N[e>>2]=i;a=J[f+12>>2];J[j+8>>2]=J[f+8>>2];J[j+12>>2]=a;a=J[f+4>>2];J[j>>2]=J[f>>2];J[j+4>>2]=a;a=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=a;a=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=a;a=J[j+12>>2];J[g+8>>2]=J[j+8>>2];J[g+12>>2]=a;a=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=a}}function kk(a){var b=0,c=Q(0),d=Q(0),e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0);b=ga-32|0;ga=b;u=a+988|0;Fd(u);if(J[a+752>>2]>0){while(1){h=J[a+760>>2]+P(r,44)|0;k=J[h+16>>2];g=J[h+12>>2];f=J[h+8>>2];e=J[f+12>>2];J[b+16>>2]=J[f+8>>2];J[b+20>>2]=e;e=J[f+20>>2];J[b+24>>2]=J[f+16>>2];J[b+28>>2]=e;e=J[f+20>>2];J[b+8>>2]=J[f+16>>2];J[b+12>>2]=e;e=J[f+12>>2];J[b>>2]=J[f+8>>2];J[b+4>>2]=e;l=N[b+4>>2];m=N[b>>2];d=N[g+8>>2];if(m>d){N[b>>2]=d;m=d}n=N[b+8>>2];s=N[b+28>>2];v=N[b+24>>2];w=N[b+20>>2];o=N[b+16>>2];t=N[b+12>>2];i=N[g+12>>2];if(i<l){N[b+4>>2]=i;l=i}j=N[g+16>>2];if(j<n){N[b+8>>2]=j;n=j}c=N[g+20>>2];if(c<t){N[b+12>>2]=c;t=c}if(d>o){N[b+16>>2]=d;o=d}if(c>s){N[b+28>>2]=c;s=c}p=N[k+12>>2];g=p<l;d=N[k+8>>2];e=d<m;q=N[k+16>>2];c=N[k+20>>2];if(c<t){N[b+12>>2]=c}if(c>s){N[b+28>>2]=c}N[b+4>>2]=g?p:l;N[b>>2]=e?d:m;N[b+8>>2]=n>q?q:n;c=j>v?j:v;N[b+24>>2]=(c<q?q:c)+Q(0);c=i>w?i:w;N[b+20>>2]=(c<p?p:c)+Q(0);N[b+16>>2]=(d>o?d:o)+Q(0);J[h+40>>2]=Db(u,b,h);r=r+1|0;if((r|0)<J[a+752>>2]){continue}break}}ga=b+32|0}function qk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[8369]=J[8369]+1;c=ia[J[6782]](20,16)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a:{if(J[a+872>>2]>0){b=J[J[a+880>>2]>>2];d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;J[c+16>>2]=J[b+16>>2];d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d;break a}J[c>>2]=0;J[c+4>>2]=0;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0}b=J[a+872>>2];b:{if((b|0)!=J[a+876>>2]){break b}h=b?b<<1:1;if((h|0)<=(b|0)){break b}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;b=J[a+872>>2]}c:{if((b|0)<=0){break c}if(b-1>>>0>=3){i=b&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+880>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+880>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+880>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+880>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=b&3;if(!d){break c}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+880>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+880>>2];if(!(!e|!K[a+884|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}b=J[a+872>>2]}J[a+880>>2]=f;H[a+884|0]=1;J[a+876>>2]=h}J[J[a+880>>2]+(b<<2)>>2]=c;J[a+872>>2]=b+1;return c}function QB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0);e=ga-672|0;ga=e;j=e+568|0;m=Bb(j);J[e+572>>2]=1;J[e+568>>2]=2176;f=J[b+12>>2];J[e+632>>2]=J[b+8>>2];J[e+636>>2]=f;f=J[b+4>>2];J[e+624>>2]=J[b>>2];J[e+628>>2]=f;f=J[b+28>>2];J[e+648>>2]=J[b+24>>2];J[e+652>>2]=f;f=J[b+20>>2];J[e+640>>2]=J[b+16>>2];J[e+644>>2]=f;f=J[b+44>>2];J[e+664>>2]=J[b+40>>2];J[e+668>>2]=f;f=J[b+36>>2];J[e+656>>2]=J[b+32>>2];J[e+660>>2]=f;N[e+612>>2]=N[a+204>>2];H[e+540|0]=0;J[e+516>>2]=953267991;J[e+200>>2]=18432;f=J[a+4>>2];b=e+176|0;J[b+20>>2]=0;J[b+16>>2]=j;J[b+12>>2]=f;J[b+8>>2]=e+200;J[b+4>>2]=e+208;J[b>>2]=18208;J[e>>2]=6804;J[e+164>>2]=1065353216;J[e+168>>2]=0;N[e+172>>2]=N[a+208>>2];f=b;b=a+136|0;a:{if(!xl(f,a+8|0,a+72|0,b,b,e)){break a}g=N[e+140>>2];h=N[e+132>>2];i=N[e+136>>2];k=Q(Q(g*g)+Q(Q(h*h)+Q(i*i)));if(!(k>Q(9999999747378752e-20))){break a}l=N[e+164>>2];if(!(l<N[a+200>>2])){break a}n=g;g=Q(Q(1)/Q(Y(k)));N[e+140>>2]=n*g;N[e+136>>2]=i*g;N[e+132>>2]=h*g;Q(ia[J[J[a>>2]+12>>2]](a,e+132|0,e+148|0,l,c,d))}Qa(m);ga=e+672|0}function CB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);e=Q(1);d=J[b>>2];a:{if((d|0)==J[a+80>>2]|K[d+204|0]&4){break a}b:{if(c){g=N[b+16>>2];h=N[b+12>>2];f=N[b+8>>2];break b}f=N[b+16>>2];i=N[b+8>>2];j=N[b+12>>2];g=Q(Q(N[d+44>>2]*f)+Q(Q(N[d+36>>2]*i)+Q(j*N[d+40>>2])));h=Q(Q(N[d+28>>2]*f)+Q(Q(N[d+20>>2]*i)+Q(j*N[d+24>>2])));f=Q(Q(N[d+12>>2]*f)+Q(Q(N[d+4>>2]*i)+Q(N[d+8>>2]*j)))}if(N[a+100>>2]>Q(Q(N[a+92>>2]*g)+Q(Q(N[a+84>>2]*f)+Q(h*N[a+88>>2])))){break a}e=N[b+40>>2];J[a+76>>2]=d;N[a+4>>2]=e;c:{if(c){c=J[b+12>>2];J[a+44>>2]=J[b+8>>2];J[a+48>>2]=c;c=J[b+20>>2];J[a+52>>2]=J[b+16>>2];J[a+56>>2]=c;break c}f=N[d+8>>2];i=N[d+12>>2];j=N[d+20>>2];k=N[d+24>>2];l=N[d+28>>2];m=N[d+36>>2];n=N[d+40>>2];e=N[b+12>>2];o=N[d+44>>2];g=N[b+16>>2];p=N[d+4>>2];h=N[b+8>>2];J[a+56>>2]=0;N[a+52>>2]=Q(o*g)+Q(Q(m*h)+Q(e*n));N[a+48>>2]=Q(l*g)+Q(Q(j*h)+Q(e*k));N[a+44>>2]=Q(i*g)+Q(Q(p*h)+Q(f*e))}c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;e=N[b+40>>2]}return Q(e)}function tF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;fb(a,b,c);d=J[a+48>>2];ia[J[J[d>>2]+56>>2]](d,b+12|0,c)|0;N[b+52>>2]=N[a+12>>2];a:{b:{if(!J[a+52>>2]){break b}if(ia[J[J[c>>2]+52>>2]](c)&1){break b}d=ia[J[J[c>>2]+24>>2]](c,J[a+52>>2])|0;if(d){J[b+44>>2]=0;J[b+40>>2]=d;break a}d=ia[J[J[c>>2]+28>>2]](c,J[a+52>>2])|0;J[b+44>>2]=0;J[b+40>>2]=d;d=J[a+52>>2];d=(g=c,h=ia[J[J[d>>2]+12>>2]](d)|0,i=1,f=J[J[c>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);e=J[a+52>>2];i=c,h=d,g=ia[J[J[e>>2]+16>>2]](e,J[d+8>>2],c)|0,j=1213612625,k=J[a+52>>2],f=J[J[c>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);break a}J[b+40>>2]=0;J[b+44>>2]=0}c:{if(!J[a+56>>2]){break c}if(ia[J[J[c>>2]+52>>2]](c)&2){break c}d=ia[J[J[c>>2]+24>>2]](c,J[a+56>>2])|0;if(d){J[b+48>>2]=d;return 3873}J[b+48>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+56>>2]);b=J[a+56>>2];b=(k=c,j=ia[J[J[b>>2]+8>>2]](b)|0,g=1,f=J[J[c>>2]+16>>2],ia[f](k|0,j|0,g|0)|0);d=J[a+56>>2];g=c,j=b,k=ia[J[J[d>>2]+12>>2]](d,J[b+8>>2],c)|0,h=1346456916,i=J[a+56>>2],f=J[J[c>>2]+20>>2],ia[f](g|0,j|0,k|0,h|0,i|0);return 3873}J[b+48>>2]=0;return 3873}function Yk(a,b,c,d,e,f){xb(a,4,b,c);J[a>>2]=19708;b=J[d+12>>2];J[a+560>>2]=J[d+8>>2];J[a+564>>2]=b;b=J[d+4>>2];J[a+552>>2]=J[d>>2];J[a+556>>2]=b;b=J[d+28>>2];J[a+576>>2]=J[d+24>>2];J[a+580>>2]=b;b=J[d+20>>2];J[a+568>>2]=J[d+16>>2];J[a+572>>2]=b;b=J[d+44>>2];J[a+592>>2]=J[d+40>>2];J[a+596>>2]=b;b=J[d+36>>2];J[a+584>>2]=J[d+32>>2];J[a+588>>2]=b;b=J[d+60>>2];J[a+608>>2]=J[d+56>>2];J[a+612>>2]=b;b=J[d+52>>2];J[a+600>>2]=J[d+48>>2];J[a+604>>2]=b;b=J[e+12>>2];J[a+624>>2]=J[e+8>>2];J[a+628>>2]=b;b=J[e+4>>2];J[a+616>>2]=J[e>>2];J[a+620>>2]=b;b=J[e+20>>2];J[a+632>>2]=J[e+16>>2];J[a+636>>2]=b;b=J[e+28>>2];J[a+640>>2]=J[e+24>>2];J[a+644>>2]=b;b=J[e+36>>2];J[a+648>>2]=J[e+32>>2];J[a+652>>2]=b;b=J[e+44>>2];J[a+656>>2]=J[e+40>>2];J[a+660>>2]=b;b=J[e+52>>2];J[a+664>>2]=J[e+48>>2];J[a+668>>2]=b;b=J[e+60>>2];J[a+672>>2]=J[e+56>>2];J[a+676>>2]=b;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+704>>2]=1065353216;J[a+708>>2]=0;J[a+712>>2]=0;H[a+716|0]=0;H[a+740|0]=f;J[a+748>>2]=0;J[a+736>>2]=16777216;N[a+732>>2]=f?Q(-1):Q(1)}function kA(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0);ya(3099);if(J[a+232>>2]>0){while(1){c=J[J[a+240>>2]+(g<<2)>>2];a:{if(!c){break a}b:{c:{d:{e=J[c+216>>2];switch(e-2|0){case 0:case 2:break c;default:break d}}e:{d=N[c+320>>2];f=Q(d*d);d=N[c+312>>2];h=Q(d*d);d=N[c+316>>2];f=Q(f+Q(h+Q(d*d)));d=N[c+472>>2];if(!(f<Q(d*d))){break e}d=N[c+336>>2];f=Q(d*d);d=N[c+328>>2];h=Q(d*d);d=N[c+332>>2];f=Q(f+Q(h+Q(d*d)));d=N[c+476>>2];if(!(f<Q(d*d))){break e}N[c+220>>2]=N[c+220>>2]+b;break b}J[c+220>>2]=0;if((J[c+216>>2]&-2)!=4){J[c+216>>2]=0}e=J[c+216>>2]}if((e|0)==4){break a}}f:{if(K[32584]){break f}d=N[6780];if(d==Q(0)|(d<N[c+220>>2]?0:(e&-2)!=2)){break f}if(K[c+204|0]&3){if((J[c+216>>2]&-2)!=4){J[c+216>>2]=2}break a}if((e|0)==1){if((J[c+216>>2]&-2)!=4){J[c+216>>2]=3}e=J[c+216>>2]}if((e|0)!=2){break a}J[c+328>>2]=0;J[c+332>>2]=0;J[c+312>>2]=0;J[c+316>>2]=0;J[c+336>>2]=0;J[c+340>>2]=0;J[c+320>>2]=0;J[c+324>>2]=0;J[c+260>>2]=J[c+260>>2]+2;break a}if((J[c+216>>2]&-2)!=4){J[c+216>>2]=1}}g=g+1|0;if((g|0)<J[a+232>>2]){continue}break}}xa()}function YA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+552>>2];N[b+56>>2]=N[a+556>>2];N[b+60>>2]=N[a+560>>2];N[b+64>>2]=N[a+564>>2];N[b+68>>2]=N[a+568>>2];N[b+72>>2]=N[a+572>>2];N[b+76>>2]=N[a+576>>2];N[b+80>>2]=N[a+580>>2];N[b+84>>2]=N[a+584>>2];N[b+88>>2]=N[a+588>>2];N[b+92>>2]=N[a+592>>2];N[b+96>>2]=N[a+596>>2];N[b+100>>2]=N[a+600>>2];N[b+104>>2]=N[a+604>>2];N[b+108>>2]=N[a+608>>2];N[b+112>>2]=N[a+612>>2];N[b+116>>2]=N[a+616>>2];N[b+120>>2]=N[a+620>>2];N[b+124>>2]=N[a+624>>2];N[b+128>>2]=N[a+628>>2];N[b+132>>2]=N[a+632>>2];N[b+136>>2]=N[a+636>>2];N[b+140>>2]=N[a+640>>2];N[b+144>>2]=N[a+644>>2];N[b+148>>2]=N[a+648>>2];N[b+152>>2]=N[a+652>>2];N[b+156>>2]=N[a+656>>2];N[b+160>>2]=N[a+660>>2];N[b+164>>2]=N[a+664>>2];N[b+168>>2]=N[a+668>>2];N[b+172>>2]=N[a+672>>2];N[b+176>>2]=N[a+676>>2];J[b+184>>2]=K[a+736|0];J[b+188>>2]=K[a+737|0];N[b+196>>2]=N[a+684>>2];N[b+192>>2]=N[a+680>>2];J[b+180>>2]=K[a+740|0];c=a+688|0;N[b+200>>2]=xe(c);N[b+204>>2]=ye(c);N[b+208>>2]=N[a+696>>2];N[b+212>>2]=N[a+700>>2];N[b+216>>2]=N[a+704>>2];return 3496}function Vo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=0,j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;o=J[g+24>>2];c=J[g+20>>2];f=J[g+16>>2];l=J[g+8>>2];a=0;d=J[g+12>>2];b=d+2|0;J[8369]=J[8369]+1;e=ia[J[6782]]((b|0)!=(b&268435455)?-1:b<<4,16)|0;j=ua((b|0)!=(b&1073741823)?-1:b<<2);if((d|0)>=-1){p=(b|0)>1?b:1;q=Q(d+1|0);while(1){r=N[f>>2];m=N[c>>2];s=N[f+4>>2];n=N[c+4>>2];k=N[f+8>>2];h=N[c+8>>2];i=e+(a<<4)|0;J[i+12>>2]=0;t=h;k=Q(k-h);h=Q(Q(a|0)/q);N[i+8>>2]=t+Q(k*h);N[i+4>>2]=n+Q(Q(s-n)*h);N[i>>2]=m+Q(Q(r-m)*h);J[(a<<2)+j>>2]=1065353216;a=a+1|0;if((p|0)!=(a|0)){continue}break}}J[8369]=J[8369]+1;c=Ac(ia[J[6782]](1252,16)|0,o,b,e,j);if(l&1){N[J[c+720>>2]+88>>2]=0;H[c+924|0]=1}if(l&2){N[(J[c+720>>2]+P(d+1|0,104)|0)+88>>2]=0;H[c+924|0]=1}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}ta(j);if((d|0)>=0){b=(b|0)>2?b:2;a=1;while(1){Ja(c,a-1|0,a,0,0);a=a+1|0;if((b|0)!=(a|0)){continue}break}}ga=g+32|0;return c|0}function SF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);d=ga-32|0;ga=d;a=J[a+12>>2];a:{if(!a){break a}J[e+4>>2]=a;g=J[b+12>>2];h=J[c+12>>2];n=N[h+56>>2];i=Q(N[g+56>>2]-n);o=N[h+48>>2];m=Q(N[g+48>>2]-o);p=N[h+52>>2];j=Q(N[g+52>>2]-p);f=Q(Y(Q(Q(i*i)+Q(Q(m*m)+Q(j*j)))));b=J[b+4>>2];k=Q(N[b+28>>2]*N[b+12>>2]);b=J[c+4>>2];l=Q(N[b+28>>2]*N[b+12>>2]);k=Q(k+l);if(f>k){if(!J[a+748>>2]){break a}c=J[a+740>>2];g=J[J[e+8>>2]+8>>2];b=(c|0)==(g|0);h=a;a=J[J[e+12>>2]+8>>2];ab(h,(b?c:a)+4|0,(b?a:g)+4|0);break a}J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=1065353216;J[d+20>>2]=0;k=Q(f-k);b:{if(!(f>Q(1.1920928955078125e-7))){f=Q(1);i=Q(0);j=Q(0);break b}f=Q(Q(1)/f);i=Q(i*f);N[d+24>>2]=i;j=Q(j*f);N[d+20>>2]=j;f=Q(m*f);N[d+16>>2]=f}J[d+12>>2]=0;N[d+8>>2]=Q(l*i)+n;N[d+4>>2]=Q(l*j)+p;N[d>>2]=Q(l*f)+o;ia[J[J[e>>2]+16>>2]](e,d+16|0,d,k);a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];g=J[J[e+8>>2]+8>>2];b=(c|0)==(g|0);h=a;a=J[J[e+12>>2]+8>>2];ab(h,(b?c:a)+4|0,(b?a:g)+4|0)}ga=d+32|0}function ww(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+24;J[e+8>>2]=a;a=J[e+8>>2];b=ga-48|0;ga=b;J[b+44>>2]=J[e+12>>2];J[b+40>>2]=a;g=J[b+44>>2];a=ga-16|0;J[a+12>>2]=J[b+40>>2];J[b+36>>2]=J[J[a+12>>2]+4>>2];c=J[b+36>>2];J[b>>2]=0;J[b+4>>2]=0;J[b+32>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;wf(b);a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){tc(J[c+12>>2]+P(J[a+12>>2],36)|0);J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){zh(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){yh(J[c+12>>2]+P(J[a+8>>2],36)|0,J[a+20>>2]);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;tc(b);Ah(J[b+40>>2],J[b+36>>2],J[g+12>>2]);ga=b+48|0;ga=e+16|0;ga=d+16|0}function Za(a,b,c){var d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0);d=ga-48|0;ga=d;e=J[b+120>>2];v=J[b+124>>2];f=J[b>>2]+(v>>1)|0;if(v&1){e=J[e+J[f>>2]>>2]}ia[e|0](d,f,c);e=J[b+124>>2];f=J[b+4>>2]+(e>>1)|0;g=Q(-N[c+8>>2]);h=Q(-N[c+4>>2]);i=Q(-N[c>>2]);c=J[b+120>>2];c=e&1?J[J[f>>2]+c>>2]:c;j=N[b+16>>2];k=N[b+12>>2];l=N[b+32>>2];m=N[b+24>>2];n=N[b+28>>2];o=N[b+48>>2];p=N[b+40>>2];q=N[b+44>>2];r=N[b+8>>2];J[d+28>>2]=0;N[d+24>>2]=Q(o*g)+Q(Q(p*i)+Q(q*h));N[d+20>>2]=Q(l*g)+Q(Q(m*i)+Q(n*h));N[d+16>>2]=Q(j*g)+Q(Q(r*i)+Q(k*h));ia[c|0](d+32|0,f,d+16|0);w=N[b+104>>2];x=N[b- -64>>2];y=N[b+60>>2];g=N[b+108>>2];h=N[b+80>>2];i=N[b+72>>2];j=N[b+76>>2];k=N[b+112>>2];l=N[b+96>>2];m=N[b+88>>2];n=N[b+92>>2];o=N[b+56>>2];s=N[d+40>>2];t=N[d+32>>2];u=N[d+36>>2];p=N[d>>2];q=N[d+4>>2];r=N[d+8>>2];J[a+12>>2]=0;N[a+8>>2]=r-Q(k+Q(Q(s*l)+Q(Q(t*m)+Q(u*n))));N[a+4>>2]=q-Q(g+Q(Q(s*h)+Q(Q(t*i)+Q(u*j))));N[a>>2]=p-Q(w+Q(Q(s*x)+Q(Q(t*o)+Q(u*y))));ga=d+48|0}function YE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);a:{if(J[a+16>>2]){g=N[a+56>>2];e=N[a+40>>2];h=Q(Q(g+e)*Q(.5));f=N[a+52>>2];k=N[a+36>>2];i=Q(Q(f+k)*Q(.5));l=Q(Q(g-e)*Q(.5));u=Q(Q(f-k)*Q(.5));e=N[a+48>>2];f=N[a+32>>2];g=Q(Q(e+f)*Q(.5));e=Q(Q(e-f)*Q(.5));break a}e=Q(0)}v=Q(ia[J[J[a>>2]+48>>2]](a));w=Q(ia[J[J[a>>2]+48>>2]](a));p=Q(ia[J[J[a>>2]+48>>2]](a));x=N[b+52>>2];f=N[b+20>>2];k=N[b+24>>2];o=N[b+56>>2];m=N[b+36>>2];j=N[b+40>>2];y=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];t=N[b+16>>2];n=N[b+32>>2];J[c+12>>2]=0;o=Q(o+Q(Q(h*j)+Q(Q(g*n)+Q(i*m))));l=Q(l+p);p=Q(l*Q(R(j)));e=Q(e+v);j=Q(u+w);m=Q(p+Q(Q(e*Q(R(n)))+Q(j*Q(R(m)))));N[c+8>>2]=o-m;n=Q(x+Q(Q(h*k)+Q(Q(g*t)+Q(i*f))));f=Q(Q(l*Q(R(k)))+Q(Q(e*Q(R(t)))+Q(j*Q(R(f)))));N[c+4>>2]=n-f;h=Q(y+Q(Q(h*q)+Q(Q(g*r)+Q(i*s))));i=Q(Q(l*Q(R(q)))+Q(Q(e*Q(R(r)))+Q(j*Q(R(s)))));N[c>>2]=h-i;J[d+12>>2]=0;N[d+8>>2]=m+o;N[d+4>>2]=f+n;N[d>>2]=i+h}function no(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=ga+-64|0;ga=d;J[d+60>>2]=a;J[d+56>>2]=b;H[d+55|0]=c;b=J[d+60>>2];J[b+8>>2]=J[J[d+56>>2]>>2];Mf(b+20|0,J[d+56>>2]);J[(ga-16|0)+12>>2]=d+32;a:{if(H[d+55|0]&1){a=J[d+56>>2];c=J[a+12>>2];J[d+32>>2]=J[a+8>>2];J[d+36>>2]=c;c=J[a+20>>2];J[d+40>>2]=J[a+16>>2];J[d+44>>2]=c;break a}a=ga-16|0;J[a+12>>2]=J[b+8>>2];J[a+12>>2]=J[a+12>>2]+4;wa(d+16|0,J[a+12>>2],J[d+56>>2]+8|0);a=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=a;a=J[d+28>>2];J[d+40>>2]=J[d+24>>2];J[d+44>>2]=a}Uh(b+72|0,d+32|0);J[(ga-16|0)+12>>2]=d;Wh(d,b+40|0,b+56|0,N[J[d+56>>2]+24>>2]);Uh(b+92|0,d);a=J[d+56>>2]+24|0;c=ga-16|0;ga=c;J[c+12>>2]=b+112;J[c+8>>2]=a;e=ga-16|0;a=J[c+12>>2];J[e+12>>2]=a;J[c+4>>2]=J[J[e+12>>2]+4>>2];e=J[c+4>>2];f=ga-16|0;J[f+12>>2]=a;if(J[J[f+12>>2]+8>>2]==(e|0)){e=ga-16|0;J[e+12>>2]=a;f=J[J[e+12>>2]+4>>2];J[e+12>>2]=a;J[e+8>>2]=f;if(J[e+8>>2]){e=J[e+8>>2]<<1}else{e=1}Rh(a,e)}N[J[a+12>>2]+(J[a+4>>2]<<2)>>2]=N[J[c+8>>2]>>2];J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0;ga=d- -64|0;return Q(N[b+4>>2])}function $k(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0;k=ga-16|0;ga=k;if(K[a+912|0]?1:J[a+924>>2]){j=a+1216|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=J[a+1212>>2];J[k>>2]=J[a+1208>>2];J[k+4>>2]=j;j=J[a+1304>>2];if(!(j&512)){N[a+896>>2]=N[J[b+32>>2]>>2]}if(!(j&1024)){N[a+904>>2]=N[J[b+32>>2]>>2]}if(!(j&2048)){N[a+900>>2]=N[b+4>>2]}c=De(a,a+868|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}if(K[a+976|0]?1:J[a+988>>2]){j=a+1232|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=a+1224|0;l=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=l;j=J[a+1304>>2];if(!(j&4096)){N[a+960>>2]=N[J[b+32>>2]>>2]}if(!(j&8192)){N[a+968>>2]=N[J[b+32>>2]>>2]}if(!(j&16384)){N[a+964>>2]=N[b+4>>2]}c=De(a,a+932|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}if(K[a+1040|0]?1:J[a+1052>>2]){j=a+1248|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=a+1240|0;l=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=l;j=J[a+1304>>2];if(!(j&32768)){N[a+1024>>2]=N[J[b+32>>2]>>2]}if(!(j&65536)){N[a+1032>>2]=N[J[b+32>>2]>>2]}if(!(j&131072)){N[a+1028>>2]=N[b+4>>2]}c=De(a,a+996|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}ga=k+16|0;return c}function So(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=Q(0),i=0,j=0,k=0,l=Q(0),m=0,n=0,o=Q(0),p=Q(0),q=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;m=J[g+24>>2];i=J[g+20>>2];j=J[g+16>>2];a=0;k=J[g+12>>2];c=k+3|0;a:{if((k|0)>=-2){l=Q(c|0);J[8369]=J[8369]+1;e=ia[J[6782]](c<<4,16)|0;d=e;while(1){f=Q(0);h=Q(.5);b=a;if(b){while(1){f=Q(f+(b&1?h:Q(-0)));n=b>>>0<2;b=b>>>1|0;h=Q(h*Q(.5));if(!n){continue}break}}J[d+12>>2]=0;f=Q(Q(f+f)+Q(-1));N[d+8>>2]=f;h=Q(Q(Q(Q(a<<1)*Q(3.1415927410125732))+Q(3.1415927410125732))/l);f=Q(Y(Q(Q(1)-Q(f*f))));N[d+4>>2]=Ga(h)*f;N[d>>2]=Ha(h)*f;d=d+16|0;a=a+1|0;if((c|0)!=(a|0)){continue}break}if((k|0)>=-2){d=(c|0)>1?c:1;a=0;while(1){f=N[i>>2];h=N[j>>2];l=N[i+4>>2];o=N[j+4>>2];p=N[i+8>>2];q=N[j+8>>2];b=e+(a<<4)|0;J[b+12>>2]=0;N[b+8>>2]=p+Q(q*N[b+8>>2]);N[b+4>>2]=l+Q(o*N[b+4>>2]);N[b>>2]=f+Q(h*N[b>>2]);a=a+1|0;if((d|0)!=(a|0)){continue}break}}a=ig(m,e,c,1);if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}break a}a=ig(m,0,c,1)}ga=g+32|0;return a|0}function pe(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a>>2]=21924;if(J[a+104>>2]>0){while(1){i=J[a+112>>2]+(f<<3)|0;d=J[i+4>>2];g=J[J[a+4>>2]+684>>2];c=J[g+60>>2];if((c|0)>0){e=0;while(1){h=0;j=J[g+68>>2]+(e<<2)|0;b=J[j>>2];if(b){while(1){c=J[b+280>>2];a:{if(J[b+276>>2]!=(d|0)){h=b;break a}J[(h?h+280|0:j)>>2]=c;ta(b)}b=c;if(b){continue}break}c=J[g+60>>2]}e=e+1|0;if((e|0)<(c|0)){continue}break}d=J[i+4>>2]}if(d){ia[J[J[d>>2]+4>>2]](d)}f=f+1|0;if((f|0)<J[a+104>>2]){continue}break}}ak(a+60|0);b=J[a+132>>2];if(!(b?!b|!K[a+136|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+132>>2]=0;H[a+136|0]=1;J[a+124>>2]=0;J[a+128>>2]=0;b=J[a+112>>2];if(!(b?!b|!K[a+116|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+112>>2]=0;H[a+116|0]=1;J[a+104>>2]=0;J[a+108>>2]=0;b=J[a+92>>2];if(!(b?!b|!K[a+96|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+92>>2]=0;H[a+96|0]=1;J[a+84>>2]=0;J[a+88>>2]=0;b=J[a+72>>2];if(!(b?!b|!K[a+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+72>>2]=0;H[a+76|0]=1;b=a- -64|0;J[b>>2]=0;J[b+4>>2]=0;return a|0}function Am(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;if(J[a+12>>2]<=1){J[8369]=J[8369]+1;f=ia[J[6782]](24,16)|0;d=J[a+8>>2];a:{if((d|0)<=0){break a}b=0;if((d|0)!=1){i=d&-2;while(1){c=P(b,12);e=c+J[a+16>>2]|0;g=J[e+4>>2];c=c+f|0;J[c>>2]=J[e>>2];J[c+4>>2]=g;J[c+8>>2]=J[e+8>>2];c=P(b|1,12);e=c+J[a+16>>2]|0;g=J[e+4>>2];c=c+f|0;J[c>>2]=J[e>>2];J[c+4>>2]=g;J[c+8>>2]=J[e+8>>2];b=b+2|0;h=h+2|0;if((h|0)!=(i|0)){continue}break}}if(!(d&1)){break a}d=P(b,12);b=d+J[a+16>>2]|0;e=J[b+4>>2];d=d+f|0;J[d>>2]=J[b>>2];J[d+4>>2]=e;J[d+8>>2]=J[b+8>>2]}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=f;H[a+20|0]=1;J[a+12>>2]=2}dh(a)}function bB(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0);if(K[a+738|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=5;J[b+4>>2]=1;d=J[a+32>>2];c=N[a+652>>2];f=N[a+620>>2];g=N[a+636>>2];l=Q(Q(N[d+44>>2]*c)+Q(Q(N[d+36>>2]*f)+Q(g*N[d+40>>2])));e=J[a+28>>2];m=N[e+44>>2];h=N[a+584>>2];n=N[e+36>>2];i=N[a+552>>2];j=N[a+568>>2];o=N[e+40>>2];u=Q(l*Q(Q(m*h)+Q(Q(n*i)+Q(j*o))));p=Q(Q(N[d+12>>2]*c)+Q(Q(N[d+4>>2]*f)+Q(g*N[d+8>>2])));q=N[e+12>>2];r=N[e+4>>2];s=N[e+8>>2];v=Q(p*Q(Q(q*h)+Q(Q(r*i)+Q(j*s))));t=N[e+28>>2];k=Q(t*h);h=N[e+20>>2];w=Q(h*i);i=N[e+24>>2];k=Q(k+Q(w+Q(j*i)));j=Q(Q(N[d+28>>2]*c)+Q(Q(N[d+20>>2]*f)+Q(g*N[d+24>>2])));c=N[a+588>>2];f=N[a+556>>2];g=N[a+572>>2];c=Q($a(Q(u+Q(v+Q(k*j))),Q(Q(l*Q(Q(m*c)+Q(Q(n*f)+Q(o*g))))+Q(Q(p*Q(Q(q*c)+Q(Q(r*f)+Q(s*g))))+Q(Q(Q(t*c)+Q(Q(h*f)+Q(i*g)))*j))))*N[a+732>>2]);N[a+728>>2]=c;Pk(a+688|0,c);if(K[a+716|0]|K[a+737|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function $F(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=J[a+188>>2];j=J[b>>2];d=J[a+268>>2];a:{b:{if((d|0)<=0){break b}g=J[a+276>>2];while(1){if(J[g+(e<<2)>>2]!=(j|0)){e=e+1|0;if((e|0)!=(d|0)){continue}break b}break}if((d|0)!=(e|0)){break a}}m=c?c:f;c:{if(J[a+272>>2]!=(d|0)){break c}g=d?d<<1:1;if((g|0)<=(d|0)){break c}d:{if(!g){c=0;break d}J[8369]=J[8369]+1;c=ia[J[6782]](g<<2,16)|0;d=J[a+268>>2]}e:{if((d|0)<=0){break e}e=0;if(d-1>>>0>=3){i=d&-4;while(1){f=e<<2;J[f+c>>2]=J[f+J[a+276>>2]>>2];h=f|4;J[h+c>>2]=J[h+J[a+276>>2]>>2];h=f|8;J[h+c>>2]=J[h+J[a+276>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+276>>2]>>2];e=e+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}f=d&3;if(!f){break e}while(1){i=e<<2;J[i+c>>2]=J[i+J[a+276>>2]>>2];e=e+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}}e=J[a+276>>2];if(!(!e|!K[a+280|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}d=J[a+268>>2]}J[a+276>>2]=c;H[a+280|0]=1;J[a+272>>2]=g}J[J[a+276>>2]+(d<<2)>>2]=j;J[a+268>>2]=d+1;a=J[a+284>>2];ia[J[J[a>>2]+8>>2]](a,m,b)|0}}function sg(a){a=a|0;var b=0;J[a>>2]=20292;if(K[a+272|0]){b=J[a+204>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+204>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+196>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+196>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(K[a+273|0]){b=J[a+200>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+200>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+316>>2];if(!(b?!b|!K[a+320|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+316>>2]=0;H[a+320|0]=1;J[a+308>>2]=0;J[a+312>>2]=0;b=J[a+288>>2];if(!(b?!b|!K[a+292|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+288>>2]=0;H[a+292|0]=1;J[a+280>>2]=0;J[a+284>>2]=0;b=J[a+240>>2];if(!(b?!b|!K[a+244|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+240>>2]=0;H[a+244|0]=1;J[a+232>>2]=0;J[a+236>>2]=0;b=J[a+220>>2];if(!(b?!b|!K[a+224|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+220>>2]=0;H[a+224|0]=1;J[a+212>>2]=0;J[a+216>>2]=0;b=J[a+188>>2];if(!(b?!b|!K[a+192|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+188>>2]=0;H[a+192|0]=1;J[a+180>>2]=0;J[a+184>>2]=0;Xm(a);return a|0}function Cc(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0;j=ga-16|0;J[d>>2]=2139095039;J[e>>2]=-8388609;p=J[a+8>>2];if((p|0)<=0){h=Q(-3.4028234663852886e38)}else{while(1){l=J[a+16>>2]+(k<<4)|0;h=N[l+8>>2];i=N[l>>2];m=N[l+4>>2];n=Q(Q(Q(h*N[b+40>>2])+Q(Q(i*N[b+32>>2])+Q(m*N[b+36>>2])))+N[b+56>>2]);o=Q(Q(Q(h*N[b+8>>2])+Q(Q(i*N[b>>2])+Q(m*N[b+4>>2])))+N[b+48>>2]);i=Q(Q(Q(h*N[b+24>>2])+Q(Q(i*N[b+16>>2])+Q(m*N[b+20>>2])))+N[b+52>>2]);h=Q(Q(n*N[c+8>>2])+Q(Q(o*N[c>>2])+Q(i*N[c+4>>2])));if(h<N[d>>2]){N[d>>2]=h;J[f+12>>2]=0;N[f+8>>2]=n;N[f+4>>2]=i;N[f>>2]=o}if(h>N[e>>2]){N[e>>2]=h;J[g+12>>2]=0;N[g+8>>2]=n;N[g+4>>2]=i;N[g>>2]=o}k=k+1|0;if((p|0)!=(k|0)){continue}break}h=N[e>>2]}i=N[d>>2];if(h<i){N[d>>2]=h;N[e>>2]=i;a=J[f+12>>2];J[j+8>>2]=J[f+8>>2];J[j+12>>2]=a;a=J[f+4>>2];J[j>>2]=J[f>>2];J[j+4>>2]=a;a=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=a;a=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=a;a=J[j+12>>2];J[g+8>>2]=J[j+8>>2];J[g+12>>2]=a;a=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=a}}function sB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+300>>2];N[b+56>>2]=N[a+304>>2];N[b+60>>2]=N[a+308>>2];N[b+64>>2]=N[a+312>>2];N[b+68>>2]=N[a+316>>2];N[b+72>>2]=N[a+320>>2];N[b+76>>2]=N[a+324>>2];N[b+80>>2]=N[a+328>>2];N[b+84>>2]=N[a+332>>2];N[b+88>>2]=N[a+336>>2];N[b+92>>2]=N[a+340>>2];N[b+96>>2]=N[a+344>>2];N[b+100>>2]=N[a+348>>2];N[b+104>>2]=N[a+352>>2];N[b+108>>2]=N[a+356>>2];N[b+112>>2]=N[a+360>>2];N[b+116>>2]=N[a+364>>2];N[b+120>>2]=N[a+368>>2];N[b+124>>2]=N[a+372>>2];N[b+128>>2]=N[a+376>>2];N[b+132>>2]=N[a+380>>2];N[b+136>>2]=N[a+384>>2];N[b+140>>2]=N[a+388>>2];N[b+144>>2]=N[a+392>>2];N[b+148>>2]=N[a+396>>2];N[b+152>>2]=N[a+400>>2];N[b+156>>2]=N[a+404>>2];N[b+160>>2]=N[a+408>>2];N[b+164>>2]=N[a+412>>2];N[b+168>>2]=N[a+416>>2];N[b+172>>2]=N[a+420>>2];N[b+176>>2]=N[a+424>>2];N[b+180>>2]=N[a+444>>2];N[b+184>>2]=N[a+448>>2];N[b+188>>2]=N[a+452>>2];N[b+192>>2]=N[a+428>>2];N[b+196>>2]=N[a+432>>2];N[b+200>>2]=N[a+436>>2];N[b+204>>2]=N[a+440>>2];return 3261}function Hx(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;b=N[e+8>>2];c=N[e+4>>2];d=N[e>>2];a=ga-96|0;ga=a;J[a+92>>2]=J[e+12>>2];N[a+88>>2]=b;N[a+84>>2]=c;N[a+80>>2]=d;f=J[a+92>>2];N[a+76>>2]=Ta(N[a+88>>2]);N[a+72>>2]=Ta(N[a+84>>2]);N[a+68>>2]=Ta(N[a+80>>2]);N[a+64>>2]=Sa(N[a+88>>2]);N[a+60>>2]=Sa(N[a+84>>2]);N[a+56>>2]=Sa(N[a+80>>2]);N[a+52>>2]=N[a+76>>2]*N[a+68>>2];N[a+48>>2]=N[a+76>>2]*N[a+56>>2];N[a+44>>2]=N[a+64>>2]*N[a+68>>2];N[a+40>>2]=N[a+64>>2]*N[a+56>>2];N[a+36>>2]=N[a+72>>2]*N[a+68>>2];N[a+32>>2]=Q(N[a+60>>2]*N[a+44>>2])+Q(-N[a+48>>2]);N[a+28>>2]=Q(N[a+60>>2]*N[a+52>>2])+N[a+40>>2];N[a+24>>2]=N[a+72>>2]*N[a+56>>2];N[a+20>>2]=Q(N[a+60>>2]*N[a+40>>2])+N[a+52>>2];N[a+16>>2]=Q(N[a+60>>2]*N[a+48>>2])+Q(-N[a+44>>2]);N[a+12>>2]=-N[a+60>>2];N[a+8>>2]=N[a+72>>2]*N[a+64>>2];N[a+4>>2]=N[a+72>>2]*N[a+76>>2];ld(f,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0,a+4|0);ga=a+96|0;ga=e+16|0}function Rj(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ga-16|0;ga=i;while(1){m=c;h=J[a+12>>2];g=h+((c+d|0)/2<<4)|0;n=J[g+8>>2];k=J[g+4>>2];l=J[g>>2];g=d;while(1){a:{f=(c<<4)+h|0;e=J[f+4>>2];b:{if((e|0)<(k|0)){break b}if((e|0)!=(k|0)){break a}e=J[f>>2];if((e|0)<(l|0)){break b}if((e|0)!=(l|0)|J[f+8>>2]>=(n|0)){break a}}c=c+1|0;continue}while(1){c:{o=g<<4;e=o+h|0;j=J[e+4>>2];d:{if((j|0)>(k|0)){break d}if((k|0)!=(j|0)){break c}j=J[e>>2];if((j|0)>(l|0)){break d}if((l|0)!=(j|0)|J[e+8>>2]<=(n|0)){break c}}g=g-1|0;continue}break}if((c|0)<=(g|0)){h=J[f+12>>2];J[i+8>>2]=J[f+8>>2];J[i+12>>2]=h;h=J[f+4>>2];J[i>>2]=J[f>>2];J[i+4>>2]=h;h=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=h;h=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=h;e=J[i+4>>2];f=J[a+12>>2]+o|0;J[f>>2]=J[i>>2];J[f+4>>2]=e;e=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=e;g=g-1|0;c=c+1|0}if((c|0)<=(g|0)){h=J[a+12>>2];continue}break}if((g|0)>(m|0)){Rj(a,b,m,g)}if((c|0)<(d|0)){continue}break}ga=i+16|0}function Mk(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){n=c;h=J[a+12>>2];m=J[h+((c+d|0)/2<<2)>>2];f=d;while(1){k=J[J[m+740>>2]+208>>2];g=(k|0)<0;a:{if(!g){while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+740>>2]+208>>2];if((e|0)<0){e=J[J[j+744>>2]+208>>2]}c=i+1|0;if((e|0)<(k|0)){continue}break a}}o=J[J[m+744>>2]+208>>2];while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+740>>2]+208>>2];if((e|0)<0){e=J[J[j+744>>2]+208>>2]}c=i+1|0;if((e|0)<(o|0)){continue}break}}b:{if(!g){while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+740>>2]+208>>2];if((e|0)<0){e=J[J[g+744>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break b}}k=J[J[m+744>>2]+208>>2];while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+740>>2]+208>>2];if((e|0)<0){e=J[J[g+744>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break}}c:{if((c|0)<(i|0)){f=c;c=i;break c}J[l>>2]=g;J[J[a+12>>2]+(c<<2)>>2]=j;f=c-1|0;c=i+1|0}if((c|0)<=(f|0)){h=J[a+12>>2];continue}break}if((f|0)>(n|0)){Mk(a,b,n,f)}if((c|0)<(d|0)){continue}break}}function _k(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=0,r=0;j=ga-80|0;ga=j;J[j+52>>2]=0;J[j+44>>2]=0;J[j+48>>2]=1045220557;J[j+76>>2]=0;r=b+4|0;o=a+680|0;while(1){l=K[(m+o|0)+108|0];p=m<<2;q=J[(p+o|0)+176>>2];a:{if(!q){k=l;l=1;if(!k){break a}}J[j+72>>2]=q;J[j+56>>2]=0;k=a+p|0;N[j+68>>2]=N[k+840>>2];N[j+64>>2]=N[k+824>>2];n=N[a+732>>2];H[j+60|0]=l;N[j+36>>2]=n;N[j+20>>2]=N[k+696>>2];N[j+40>>2]=N[a+728>>2];n=N[k+680>>2];J[j+32>>2]=0;N[j+16>>2]=n;N[j+28>>2]=N[k+808>>2];N[j+24>>2]=N[k+792>>2];N[j>>2]=N[k+1064>>2];N[j+4>>2]=N[k+1080>>2];n=N[k+1096>>2];J[j+12>>2]=0;N[j+8>>2]=n;l=J[a+1304>>2]>>P(m,3);N[j+44>>2]=N[(l&1?k+740|0:J[b+32>>2])>>2];N[j+52>>2]=N[(l&2?k+772|0:J[b+32>>2])>>2];N[j+48>>2]=N[(l&4?k+756|0:r)>>2];l=j+16|0;k=0;b:{if(!K[a+1301|0]){break b}k=1;if(!J[((((m+1&255)>>>0)%3<<6)+a|0)+924>>2]){break b}k=!J[((((m+2&255)>>>0)%3<<6)+a|0)+924>>2]}c=De(a,l,d,e,f,g,h,i,b,c,j,0,k)+c|0}m=m+1|0;if((m|0)!=3){continue}break}ga=j+80|0;return c}function Ed(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);if(J[a>>2]==(b|0)){J[a>>2]=0;return 0}d=J[b+32>>2];c=J[(((J[d+40>>2]!=(b|0))<<2)+d|0)+36>>2];b=J[d+32>>2];a:{b:{if(b){J[((((d|0)==J[b+40>>2])<<2)+b|0)+36>>2]=c;J[c+32>>2]=b;c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=d;while(1){q=N[b>>2];d=J[b+36>>2];e=N[d>>2];c=J[b+40>>2];k=N[c>>2];e=e<k?e:k;N[b>>2]=e;k=N[b+16>>2];f=N[d+16>>2];l=N[c+16>>2];f=f>l?f:l;N[b+16>>2]=f;l=N[b+4>>2];g=N[d+4>>2];m=N[c+4>>2];g=g<m?g:m;N[b+4>>2]=g;m=N[b+20>>2];h=N[d+20>>2];n=N[c+20>>2];h=h>n?h:n;N[b+20>>2]=h;n=N[b+8>>2];i=N[d+8>>2];o=N[c+8>>2];i=i<o?i:o;N[b+8>>2]=i;o=N[b+24>>2];j=N[d+24>>2];p=N[c+24>>2];j=j>p?j:p;N[b+24>>2]=j;c:{if(e!=q|l!=g|(n!=i|k!=f)){break c}if(m!=h){break c}if(o==j){break a}}b=J[b+32>>2];if(b){continue}break}break b}J[a>>2]=c;J[c+32>>2]=0;b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=d}b=J[a>>2]}return b}function jm(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=J[a+96>>2];a:{if((d|0)!=J[a+100>>2]){break a}j=d?d<<1:1;if((j|0)<=(d|0)){break a}if(j){J[8369]=J[8369]+1;f=ia[J[6782]](j<<4,16)|0;d=J[a+96>>2]}b:{if((d|0)<=0){break b}if((d|0)!=1){m=d&-2;while(1){h=g<<4;i=h+f|0;e=h+J[a+104>>2]|0;k=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=k;k=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=k;e=h|16;h=e+f|0;e=e+J[a+104>>2]|0;i=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=i;i=J[e+12>>2];J[h+8>>2]=J[e+8>>2];J[h+12>>2]=i;g=g+2|0;l=l+2|0;if((l|0)!=(m|0)){continue}break}}if(!(d&1)){break b}d=g<<4;g=d+f|0;d=d+J[a+104>>2]|0;e=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=e;e=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=e}d=J[a+104>>2];if(!(d?!d|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+104>>2]=f;H[a+108|0]=1;J[a+100>>2]=j;d=J[a+96>>2]}f=J[b+4>>2];d=J[a+104>>2]+(d<<4)|0;J[d>>2]=J[b>>2];J[d+4>>2]=f;f=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=f;J[a+96>>2]=J[a+96>>2]+1;if(c){Sb(a)}}function xE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];d=J[a+96>>2];J[b+60>>2]=d;if(d){e=ia[J[J[c>>2]+28>>2]](c,J[a+104>>2])|0;J[b+56>>2]=0;J[b+52>>2]=e;g=ia[J[J[c>>2]+16>>2]](c,16,d)|0;a:{if((d|0)<=0){a=J[a+104>>2];break a}a=J[a+104>>2];b=J[g+8>>2];if((d|0)!=1){j=d&-2;while(1){h=f<<4;e=h+a|0;N[b>>2]=N[e>>2];N[b+4>>2]=N[e+4>>2];N[b+8>>2]=N[e+8>>2];N[b+12>>2]=N[e+12>>2];e=(h|16)+a|0;N[b+16>>2]=N[e>>2];N[b+20>>2]=N[e+4>>2];N[b+24>>2]=N[e+8>>2];N[b+28>>2]=N[e+12>>2];b=b+32|0;f=f+2|0;i=i+2|0;if((j|0)!=(i|0)){continue}break}}if(!(d&1)){break a}d=(f<<4)+a|0;N[b>>2]=N[d>>2];N[b+4>>2]=N[d+4>>2];N[b+8>>2]=N[d+8>>2];N[b+12>>2]=N[d+12>>2]}ia[J[J[c>>2]+20>>2]](c,g,3626,1497453121,a);return 3802}J[b+52>>2]=0;J[b+56>>2]=0;return 3802}function qb(a){var b=Q(0),c=0,d=0,e=Q(0);d=(D(a),x(2));c=d&2147483647;if(c>>>0>=1065353216){if((c|0)==1065353216){return(d|0)>=0?Q(0):Q(3.141592502593994)}return Q(Q(0)/Q(a-a))}a:{if(c>>>0<=1056964607){b=Q(1.570796251296997);if(c>>>0<847249409){break a}b=Q(a*a);return Q(Q(Q(Q(7.549789415861596e-8)-Q(a*Q(Q(Q(Q(b*Q(Q(b*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*b)/Q(Q(b*Q(-.7066296339035034))+Q(1)))))-a)+Q(1.570796251296997))}if((d|0)<0){a=Q(Q(a+Q(1))*Q(.5));b=Q(Y(a));a=Q(Q(1.570796251296997)-Q(b+Q(Q(b*Q(Q(Q(Q(a*Q(Q(a*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*a)/Q(Q(a*Q(-.7066296339035034))+Q(1))))+Q(-7.549789415861596e-8))));return Q(a+a)}a=Q(Q(Q(1)-a)*Q(.5));e=Q(Y(a));b=(z(2,(D(e),x(2))&-4096),E());a=Q(Q(Q(e*Q(Q(Q(Q(a*Q(Q(a*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*a)/Q(Q(a*Q(-.7066296339035034))+Q(1))))+Q(Q(a-Q(b*b))/Q(e+b)))+b);b=Q(a+a)}return b}function Ek(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){n=c;h=J[a+12>>2];m=J[h+((c+d|0)/2<<2)>>2];f=d;while(1){k=J[J[m+28>>2]+208>>2];g=(k|0)<0;a:{if(!g){while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+28>>2]+208>>2];if((e|0)<0){e=J[J[j+32>>2]+208>>2]}c=i+1|0;if((e|0)<(k|0)){continue}break a}}o=J[J[m+32>>2]+208>>2];while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+28>>2]+208>>2];if((e|0)<0){e=J[J[j+32>>2]+208>>2]}c=i+1|0;if((e|0)<(o|0)){continue}break}}b:{if(!g){while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+28>>2]+208>>2];if((e|0)<0){e=J[J[g+32>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break b}}k=J[J[m+32>>2]+208>>2];while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+28>>2]+208>>2];if((e|0)<0){e=J[J[g+32>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break}}c:{if((c|0)<(i|0)){f=c;c=i;break c}J[l>>2]=g;J[J[a+12>>2]+(c<<2)>>2]=j;f=c-1|0;c=i+1|0}if((c|0)<=(f|0)){h=J[a+12>>2];continue}break}if((f|0)>(n|0)){Ek(a,b,n,f)}if((c|0)<(d|0)){continue}break}}function mA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!(K[b+204|0]&3|H[b+504|0]&1)){ue(b,a+248|0)}if(J[b+192>>2]){a:{if(!(H[b+204|0]&1)){c=J[a+232>>2];b:{if((c|0)!=J[a+236>>2]){break b}h=c?c<<1:1;if((h|0)<=(c|0)){break b}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+232>>2]}c:{if((c|0)<=0){break c}if(c-1>>>0>=3){i=c&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+240>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+240>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+240>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+240>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=c&3;if(!d){break c}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+240>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+240>>2];if(!(!e|!K[a+244|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}c=J[a+232>>2]}J[a+240>>2]=f;H[a+244|0]=1;J[a+236>>2]=h}J[J[a+240>>2]+(c<<2)>>2]=b;J[a+232>>2]=c+1;break a}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=2}}c=b;b=J[b+204>>2]&3;ia[J[J[a>>2]+36>>2]](a,c,b?2:1,b?-3:-1)}}function Pf(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;a=J[f+8>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[f+12>>2];J[b+24>>2]=a;h=J[b+28>>2];a=ga-16|0;J[a+12>>2]=J[b+24>>2];J[b+20>>2]=J[J[a+12>>2]+4>>2];e=J[b+20>>2];J[(ga-16|0)+12>>2]=b;a=ga-32|0;ga=a;J[a+28>>2]=h;J[a+24>>2]=e;J[a+20>>2]=b;c=ga-16|0;e=J[a+28>>2];J[c+12>>2]=e;J[a+16>>2]=J[J[c+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}c=J[a+24>>2];d=ga-16|0;J[d+12>>2]=e;if(J[J[d+12>>2]+4>>2]<(c|0)){Sh(e,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){d=J[e+12>>2]+(J[a+8>>2]<<4)|0;c=ga-16|0;J[c+12>>2]=16;J[c+8>>2]=d;d=J[a+20>>2];g=J[d+4>>2];c=J[c+8>>2];J[c>>2]=J[d>>2];J[c+4>>2]=g;g=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=g;J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[e+4>>2]=J[a+24>>2];ga=a+32|0;Oh(J[b+24>>2],J[b+20>>2],J[h+12>>2]);ga=b+32|0;ga=f+16|0}function CA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+52>>2];N[b+56>>2]=N[a+56>>2];N[b+60>>2]=N[a+60>>2];N[b+64>>2]=N[a- -64>>2];N[b+68>>2]=N[a+68>>2];N[b+72>>2]=N[a+72>>2];N[b+76>>2]=N[a+76>>2];N[b+80>>2]=N[a+80>>2];N[b+84>>2]=N[a+84>>2];N[b+88>>2]=N[a+88>>2];N[b+92>>2]=N[a+92>>2];N[b+96>>2]=N[a+96>>2];N[b+100>>2]=N[a+100>>2];N[b+104>>2]=N[a+104>>2];N[b+108>>2]=N[a+108>>2];N[b+112>>2]=N[a+112>>2];N[b+116>>2]=N[a+116>>2];N[b+120>>2]=N[a+120>>2];N[b+124>>2]=N[a+124>>2];N[b+128>>2]=N[a+128>>2];N[b+132>>2]=N[a+132>>2];N[b+136>>2]=N[a+136>>2];N[b+140>>2]=N[a+140>>2];N[b+144>>2]=N[a+144>>2];N[b+148>>2]=N[a+148>>2];N[b+152>>2]=N[a+152>>2];N[b+156>>2]=N[a+156>>2];N[b+160>>2]=N[a+160>>2];N[b+164>>2]=N[a+164>>2];N[b+168>>2]=N[a+168>>2];N[b+172>>2]=N[a+172>>2];N[b+176>>2]=N[a+176>>2];N[b+180>>2]=N[a+188>>2];N[b+184>>2]=N[a+184>>2];N[b+188>>2]=N[a+196>>2];N[b+192>>2]=N[a+192>>2];J[b+196>>2]=K[a+180|0];J[b+200>>2]=K[a+49|0];return 3287}function dG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;i=J[b>>2];c=J[a+268>>2];a:{b:{if((c|0)<=0){break b}e=J[a+276>>2];b=0;while(1){if(J[e+(b<<2)>>2]!=(i|0)){b=b+1|0;if((c|0)!=(b|0)){continue}break b}break}if((b|0)!=(c|0)){break a}}c:{if(J[a+272>>2]!=(c|0)){break c}g=c?c<<1:1;if((g|0)<=(c|0)){break c}d:{if(!g){e=0;break d}J[8369]=J[8369]+1;e=ia[J[6782]](g<<2,16)|0;c=J[a+268>>2]}e:{if((c|0)<=0){break e}b=0;if(c-1>>>0>=3){h=c&-4;while(1){d=b<<2;J[d+e>>2]=J[d+J[a+276>>2]>>2];f=d|4;J[f+e>>2]=J[f+J[a+276>>2]>>2];f=d|8;J[f+e>>2]=J[f+J[a+276>>2]>>2];d=d|12;J[d+e>>2]=J[d+J[a+276>>2]>>2];b=b+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}d=c&3;if(!d){break e}while(1){h=b<<2;J[h+e>>2]=J[h+J[a+276>>2]>>2];b=b+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}b=J[a+276>>2];if(!(!b|!K[a+280|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}c=J[a+268>>2]}J[a+276>>2]=e;H[a+280|0]=1;J[a+272>>2]=g}J[J[a+276>>2]+(c<<2)>>2]=i;J[a+268>>2]=c+1}}function Sl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));y=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];g=N[b+40>>2];h=N[a- -64>>2];f=N[a+80>>2];l=N[b+36>>2];p=N[a+60>>2];q=N[a+76>>2];z=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[a+56>>2];x=N[a+72>>2];J[c+12>>2]=0;m=k;k=Q(Q(f+h)*Q(.5));n=Q(Q(x+w)*Q(.5));o=Q(Q(q+p)*Q(.5));m=Q(m+Q(Q(g*k)+Q(Q(v*n)+Q(l*o))));h=Q(e+Q(Q(f-h)*Q(.5)));f=Q(h*Q(R(g)));g=Q(e+Q(Q(x-w)*Q(.5)));e=Q(e+Q(Q(q-p)*Q(.5)));f=Q(f+Q(Q(g*Q(R(v)))+Q(e*Q(R(l)))));N[c+8>>2]=m-f;l=Q(y+Q(Q(k*i)+Q(Q(n*u)+Q(o*j))));i=Q(Q(h*Q(R(i)))+Q(Q(g*Q(R(u)))+Q(e*Q(R(j)))));N[c+4>>2]=l-i;j=Q(z+Q(Q(k*r)+Q(Q(n*s)+Q(o*t))));e=Q(Q(h*Q(R(r)))+Q(Q(g*Q(R(s)))+Q(e*Q(R(t)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=f+m;N[d+4>>2]=i+l;N[d>>2]=e+j}function $o(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;I[f+6>>1]=c;I[f+4>>1]=d;j=J[f+8>>2];m=I[f+6>>1];n=I[f+4>>1];d=0;c=0;a=J[f+12>>2];b=J[a+328>>2];a:{if((b|0)!=J[a+332>>2]){break a}h=b?b<<1:1;if((h|0)<=(b|0)){break a}if(h){J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;b=J[a+328>>2]}b:{if((b|0)<=0){break b}if(b-1>>>0>=3){i=b&-4;while(1){e=d<<2;J[e+c>>2]=J[e+J[a+336>>2]>>2];g=e|4;J[g+c>>2]=J[g+J[a+336>>2]>>2];g=e|8;J[g+c>>2]=J[g+J[a+336>>2]>>2];e=e|12;J[e+c>>2]=J[e+J[a+336>>2]>>2];d=d+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=b&3;if(!e){break b}while(1){i=d<<2;J[i+c>>2]=J[i+J[a+336>>2]>>2];d=d+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}d=J[a+336>>2];if(!(!d|!K[a+340|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}b=J[a+328>>2]}J[a+336>>2]=c;H[a+340|0]=1;J[a+332>>2]=h}J[J[a+336>>2]+(b<<2)>>2]=j;J[a+328>>2]=b+1;J[j+284>>2]=J[a+452>>2];jh(a,j,m,n);ga=f+16|0}function qE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));y=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];g=N[b+40>>2];h=N[a+60>>2];f=N[a+76>>2];l=N[b+36>>2];p=N[a+56>>2];q=N[a+72>>2];z=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[a+52>>2];x=N[a+68>>2];J[c+12>>2]=0;m=k;k=Q(Q(f+h)*Q(.5));n=Q(Q(x+w)*Q(.5));o=Q(Q(q+p)*Q(.5));m=Q(m+Q(Q(g*k)+Q(Q(v*n)+Q(l*o))));h=Q(e+Q(Q(f-h)*Q(.5)));f=Q(h*Q(R(g)));g=Q(e+Q(Q(x-w)*Q(.5)));e=Q(e+Q(Q(q-p)*Q(.5)));f=Q(f+Q(Q(g*Q(R(v)))+Q(e*Q(R(l)))));N[c+8>>2]=m-f;l=Q(y+Q(Q(k*i)+Q(Q(n*u)+Q(o*j))));i=Q(Q(h*Q(R(i)))+Q(Q(g*Q(R(u)))+Q(e*Q(R(j)))));N[c+4>>2]=l-i;j=Q(z+Q(Q(k*r)+Q(Q(n*s)+Q(o*t))));e=Q(Q(h*Q(R(r)))+Q(Q(g*Q(R(s)))+Q(e*Q(R(t)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=f+m;N[d+4>>2]=i+l;N[d>>2]=e+j}function gB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0);if(K[a+1309|0]){c=Q(Q(N[a+1256>>2]-N[a+1316>>2])*N[a+1340>>2]);N[a+792>>2]=c*Q(Q(N[b>>2]*N[a+1364>>2])/Q(J[b+48>>2]));N[a+808>>2]=Q(R(c))/N[b>>2]}if(K[a+1310|0]){c=Q(Q(N[a+1260>>2]-N[a+1320>>2])*N[a+1344>>2]);N[a+796>>2]=c*Q(Q(N[b>>2]*N[a+1368>>2])/Q(J[b+48>>2]));N[a+812>>2]=Q(R(c))/N[b>>2]}if(K[a+1311|0]){c=Q(Q(N[a+1264>>2]-N[a+1324>>2])*N[a+1348>>2]);N[a+800>>2]=c*Q(Q(N[b>>2]*N[a+1372>>2])/Q(J[b+48>>2]));N[a+816>>2]=Q(R(c))/N[b>>2]}if(K[a+1312|0]){c=Q(N[a+1352>>2]*Q(-Q(N[a+1192>>2]-N[a+1328>>2])));d=N[b>>2];N[a+876>>2]=c*Q(Q(d*N[a+1376>>2])/Q(J[b+48>>2]));N[a+880>>2]=Q(R(c))/d}if(K[a+1313|0]){c=Q(N[a+1356>>2]*Q(-Q(N[a+1196>>2]-N[a+1332>>2])));d=N[b>>2];N[a+940>>2]=c*Q(Q(d*N[a+1380>>2])/Q(J[b+48>>2]));N[a+944>>2]=Q(R(c))/d}if(K[a+1314|0]){c=Q(N[a+1360>>2]*Q(-Q(N[a+1200>>2]-N[a+1336>>2])));d=N[b>>2];N[a+1004>>2]=c*Q(Q(d*N[a+1384>>2])/Q(J[b+48>>2]));N[a+1008>>2]=Q(R(c))/d}al(a,b)}function sA(a){a=a|0;var b=0,c=0,d=Q(0),e=0,f=0,g=0,h=0;f=ga+-64|0;ga=f;ya(2686);a:{if(K[a+274|0]){c=J[a+8>>2];if((c|0)<=0){break a}while(1){b=J[J[a+16>>2]+(e<<2)>>2];if(!(!(K[b+236|0]&2)|!b|(!J[b+480>>2]|K[b+204|0]&3))){c=b+68|0;g=b+132|0;h=b+148|0;b:{c:{if(!K[a+300|0]){break c}d=N[a+268>>2];if(d==Q(0)){break c}d=Q(N[a+264>>2]-d);break b}d=Q(N[a+264>>2]*N[b+244>>2])}Rb(c,g,h,d,f);b=J[b+480>>2];ia[J[J[b>>2]+12>>2]](b,f);c=J[a+8>>2]}e=e+1|0;if((c|0)>(e|0)){continue}break}break a}c=J[a+232>>2];if((c|0)<=0){break a}while(1){d:{e:{b=J[J[a+240>>2]+(e<<2)>>2];switch(J[b+216>>2]-2|0){case 0:case 3:break d;default:break e}}if(!J[b+480>>2]|K[b+204|0]&3){break d}c=b+68|0;g=b+132|0;h=b+148|0;f:{g:{if(!K[a+300|0]){break g}d=N[a+268>>2];if(d==Q(0)){break g}d=Q(N[a+264>>2]-d);break f}d=Q(N[a+264>>2]*N[b+244>>2])}Rb(c,g,h,d,f);b=J[b+480>>2];ia[J[J[b>>2]+12>>2]](b,f);c=J[a+232>>2]}e=e+1|0;if((c|0)>(e|0)){continue}break}}xa();ga=f- -64|0}function lA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!(K[b+204|0]&3|H[b+504|0]&1)){ue(b,a+248|0)}if(J[b+192>>2]){a:{if(!(H[b+204|0]&1)){e=J[a+232>>2];b:{if((e|0)!=J[a+236>>2]){break b}j=e?e<<1:1;if((j|0)<=(e|0)){break b}if(j){J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;e=J[a+232>>2]}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){k=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[a+240>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[a+240>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[a+240>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[a+240>>2]>>2];g=g+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}f=e&3;if(!f){break c}while(1){k=g<<2;J[k+h>>2]=J[k+J[a+240>>2]>>2];g=g+1|0;m=m+1|0;if((f|0)!=(m|0)){continue}break}}g=J[a+240>>2];if(!(!g|!K[a+244|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[a+232>>2]}J[a+240>>2]=h;H[a+244|0]=1;J[a+236>>2]=j}J[J[a+240>>2]+(e<<2)>>2]=b;J[a+232>>2]=e+1;break a}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=2}}ia[J[J[a>>2]+36>>2]](a,b,c,d)}}function uk(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+488>>2];a:{b:{if((c|0)<=0){break b}f=J[a+496>>2];while(1){if(J[f+(d<<2)>>2]!=(b|0)){d=d+1|0;if((d|0)!=(c|0)){continue}break b}break}if((c|0)!=(d|0)){break a}}c:{if(J[a+492>>2]!=(c|0)){break c}h=c?c<<1:1;if((h|0)<=(c|0)){break c}d:{if(!h){f=0;break d}J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+488>>2]}e:{if((c|0)<=0){break e}d=0;if(c-1>>>0>=3){i=c&-4;while(1){e=d<<2;J[e+f>>2]=J[e+J[a+496>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[a+496>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[a+496>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[a+496>>2]>>2];d=d+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=c&3;if(!e){break e}while(1){i=d<<2;J[i+f>>2]=J[i+J[a+496>>2]>>2];d=d+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}d=J[a+496>>2];if(!(!d|!K[a+500|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+488>>2]}J[a+496>>2]=f;H[a+500|0]=1;J[a+492>>2]=h}J[J[a+496>>2]+(c<<2)>>2]=b;J[a+488>>2]=c+1}J[a+256>>2]=1}function jn(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;h=ga-48|0;ga=h;J[8369]=J[8369]+1;d=ia[J[6782]](64,16)|0;I[d+6>>1]=g;I[d+4>>1]=f;J[d>>2]=e;e=J[b+4>>2];J[d+16>>2]=J[b>>2];J[d+20>>2]=e;e=J[b+12>>2];J[d+24>>2]=J[b+8>>2];J[d+28>>2]=e;e=J[c+4>>2];J[d+32>>2]=J[c>>2];J[d+36>>2]=e;e=J[c+12>>2];J[d+40>>2]=J[c+8>>2];J[d+44>>2]=e;J[d+8>>2]=0;J[d+52>>2]=0;J[d+56>>2]=0;e=J[b+12>>2];J[h+24>>2]=J[b+8>>2];J[h+28>>2]=e;e=J[b+4>>2];J[h+16>>2]=J[b>>2];J[h+20>>2]=e;b=J[c+12>>2];J[h+40>>2]=J[c+8>>2];J[h+44>>2]=b;b=J[c+4>>2];J[h+32>>2]=J[c>>2];J[h+36>>2]=b;J[d+60>>2]=J[a+144>>2];b=J[a+188>>2]+1|0;J[a+188>>2]=b;J[d+12>>2]=b;c=a+4|0;J[d+48>>2]=Db(c,h+16|0,d);b=J[a+144>>2];J[d+52>>2]=0;b=(b<<2)+a|0;J[d+56>>2]=J[b+124>>2];e=J[b+124>>2];if(e){J[e+52>>2]=d}J[b+124>>2]=d;if(!K[a+193|0]){J[h+8>>2]=d;J[h>>2]=5764;J[h+4>>2]=a;b=h+16|0;Vb(c,J[a+4>>2],b,h);a=a- -64|0;Vb(a,J[a>>2],b,h)}ga=h+48|0;return d|0}function re(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0);j=J[a+4>>2];if(j){ub(j,b,c)}a=J[a>>2];if(a){n=N[a+220>>2];o=N[a+212>>2];p=N[a+216>>2];q=N[a+204>>2];r=N[a+196>>2];s=N[a+200>>2];t=N[a+188>>2];u=N[a+184>>2];v=N[a+180>>2];g=N[c+4>>2];h=N[c+8>>2];k=N[c>>2];d=N[b+8>>2];f=N[b+4>>2];i=N[b>>2];e=N[a+128>>2];l=Q(i*e);N[a+244>>2]=l+N[a+244>>2];m=Q(e*f);N[a+248>>2]=m+N[a+248>>2];e=Q(e*d);N[a+252>>2]=e+N[a+252>>2];N[a+316>>2]=l+N[a+316>>2];N[a+320>>2]=m+N[a+320>>2];N[a+324>>2]=e+N[a+324>>2];e=Q(Q(k*f)-Q(i*g));f=Q(Q(g*d)-Q(f*h));d=Q(Q(h*i)-Q(d*k));g=Q(Q(t*e)+Q(Q(v*f)+Q(u*d)));N[a+260>>2]=g+N[a+260>>2];h=Q(Q(q*e)+Q(Q(r*f)+Q(d*s)));N[a+264>>2]=h+N[a+264>>2];d=Q(Q(n*e)+Q(Q(o*f)+Q(d*p)));N[a+268>>2]=d+N[a+268>>2];N[a+332>>2]=g+N[a+332>>2];N[a+336>>2]=h+N[a+336>>2];N[a+340>>2]=d+N[a+340>>2];J[a+308>>2]=J[a+308>>2]+1}}function Rs(a){a=a|0;var b=0,c=Q(0),d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0);j=ga-16|0;ga=j;J[j+12>>2]=a;a=J[j+12>>2];b=J[a+32>>2];c=N[a+652>>2];e=N[a+620>>2];f=N[a+636>>2];l=Q(Q(N[b+44>>2]*c)+Q(Q(N[b+36>>2]*e)+Q(f*N[b+40>>2])));d=J[a+28>>2];m=N[d+44>>2];g=N[a+584>>2];n=N[d+36>>2];h=N[a+552>>2];i=N[a+568>>2];o=N[d+40>>2];u=Q(l*Q(Q(m*g)+Q(Q(n*h)+Q(i*o))));p=Q(Q(N[b+12>>2]*c)+Q(Q(N[b+4>>2]*e)+Q(f*N[b+8>>2])));q=N[d+12>>2];r=N[d+4>>2];s=N[d+8>>2];v=Q(p*Q(Q(q*g)+Q(Q(r*h)+Q(i*s))));t=N[d+28>>2];k=Q(t*g);g=N[d+20>>2];w=Q(g*h);h=N[d+24>>2];k=Q(k+Q(w+Q(i*h)));i=Q(Q(N[b+28>>2]*c)+Q(Q(N[b+20>>2]*e)+Q(f*N[b+24>>2])));c=N[a+588>>2];e=N[a+556>>2];f=N[a+572>>2];c=$a(Q(u+Q(v+Q(k*i))),Q(Q(l*Q(Q(m*c)+Q(Q(n*e)+Q(o*f))))+Q(Q(p*Q(Q(q*c)+Q(Q(r*e)+Q(s*f))))+Q(Q(Q(t*c)+Q(Q(g*e)+Q(h*f)))*i))));ga=j+16|0;return Q(Q(c*N[a+732>>2]))}function QD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);k=N[b+56>>2];n=N[b+36>>2];o=N[b+40>>2];l=N[b+52>>2];h=N[b+20>>2];f=N[a+112>>2];i=N[a+20>>2];p=N[a+36>>2];g=N[b+24>>2];e=N[a+116>>2];j=N[a+24>>2];q=N[a+40>>2];r=N[b+32>>2];m=N[b+48>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+8>>2];v=N[b+16>>2];w=N[a+108>>2];x=N[a+16>>2];y=N[a+32>>2];z=Q(ia[J[J[a>>2]+48>>2]](a));A=Q(ia[J[J[a>>2]+48>>2]](a));B=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;e=Q(Q(e*Q(q-j))*Q(.5));j=Q(e*Q(R(g)));g=Q(Q(w*Q(y-x))*Q(.5));f=Q(Q(f*Q(p-i))*Q(.5));h=Q(A+Q(j+Q(Q(g*Q(R(v)))+Q(f*Q(R(h))))));N[c+4>>2]=l-h;i=Q(z+Q(Q(e*Q(R(u)))+Q(Q(g*Q(R(s)))+Q(f*Q(R(t))))));N[c>>2]=m-i;e=Q(B+Q(Q(e*Q(R(o)))+Q(Q(g*Q(R(r)))+Q(f*Q(R(n))))));N[c+8>>2]=k-e;J[d+12>>2]=0;N[d+8>>2]=k+e;N[d+4>>2]=l+h;N[d>>2]=m+i}function Dg(a,b,c,d,e,f){var g=0,h=0,i=0;a:{if(K[d+55|0]==(b|0)){break a}g=e<<2;h=J[g+18400>>2];b:{if(Q(Q(Q(N[d+8>>2]*N[c+24>>2])+Q(Q(N[d>>2]*N[c+16>>2])+Q(N[d+4>>2]*N[c+20>>2])))-N[d+16>>2])<Q(-9999999747378752e-21)){b=a;a=d+20|0;a=td(b,J[a+(h<<2)>>2],J[a+g>>2],c,0);if(!a){break a}J[a+32>>2]=d;H[a+52|0]=e;H[(d+e|0)+52|0]=0;J[((e<<2)+d|0)+32>>2]=a;b=J[f>>2];c:{if(b){J[b+36>>2]=a;H[b+53|0]=2;J[a+40>>2]=b;H[a+54|0]=1;break c}J[f+4>>2]=a}J[f>>2]=a;a=f+8|0;break b}H[d+55|0]=b;if(!Dg(a,b,c,J[((h<<2)+d|0)+32>>2],K[(d+h|0)+52|0],f)){break a}e=b;b=J[g+18412>>2];if(!Dg(a,e,c,J[((b<<2)+d|0)+32>>2],K[(b+d|0)+52|0],f)){break a}b=J[d+48>>2];if(b){J[b+44>>2]=J[d+44>>2]}b=J[d+44>>2];if(b){J[b+48>>2]=J[d+48>>2]}if(J[a+9280>>2]==(d|0)){J[a+9280>>2]=J[d+48>>2]}b=a+9284|0;J[b>>2]=J[b>>2]-1;J[d+44>>2]=0;J[d+48>>2]=J[a+9288>>2];b=J[a+9288>>2];if(b){J[b+44>>2]=d}J[a+9288>>2]=d;a=a+9292|0}i=1;J[a>>2]=J[a>>2]+1}return i}function fp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+788;J[e+8>>2]=a;a=J[e+8>>2];b=ga-112|0;ga=b;J[b+108>>2]=J[e+12>>2];J[b+104>>2]=a;g=J[b+108>>2];a=ga-16|0;J[a+12>>2]=J[b+104>>2];J[b+100>>2]=J[J[a+12>>2]+4>>2];c=J[b+100>>2];qa(b,0,96);gi(b);a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){di(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){vf(J[c+12>>2]+P(J[a+8>>2],96)|0,J[a+20>>2]);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;xh(J[b+104>>2],J[b+100>>2],J[g+12>>2]);ga=b+112|0;ga=e+16|0;ga=d+16|0}function Cd(a,b,c,d,e){var f=0,g=Q(0),h=0,i=Q(0),j=0;i=N[c>>2];a:{b:{if(!(i>=N[b>>2])){g=N[c+4>>2];break b}g=N[c+4>>2];if(!(g>=N[b+4>>2])|!(N[b+8>>2]<=N[c+8>>2])|(!(N[b+16>>2]>=N[c+16>>2])|!(N[b+20>>2]>=N[c+20>>2]))){break b}f=0;if(N[b+24>>2]>=N[c+24>>2]){break a}}N[c+4>>2]=g-e;N[c>>2]=i-e;N[c+8>>2]=N[c+8>>2]-e;N[c+16>>2]=N[c+16>>2]+e;N[c+20>>2]=N[c+20>>2]+e;N[c+24>>2]=N[c+24>>2]+e;e=N[d>>2];f=((e>Q(0))<<4)+c|0;N[f>>2]=e+N[f>>2];e=N[d+4>>2];f=(e>Q(0)?20:4)+c|0;N[f>>2]=e+N[f>>2];e=N[d+8>>2];d=(e>Q(0)?24:8)+c|0;N[d>>2]=e+N[d>>2];d=Ed(a,b);c:{if(!d){d=0;break c}h=J[a+8>>2];if((h|0)>=0){if(!h){break c}while(1){f=J[d+32>>2];if(!f){break c}d=f;j=j+1|0;if((h|0)!=(j|0)){continue}break}break c}d=J[a>>2]}f=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=f;f=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=f;f=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=f;f=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=f;Dd(a,d,b);f=1}return f}function Gh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;c=ga-176|0;ga=c;J[c+172>>2]=a;J[c+168>>2]=b;d=c+136|0;a=J[c+172>>2];va(d,a+16|0,a);N[c+132>>2]=.5;b=c+152|0;Ia(b,d,c+132|0);e=c+112|0;Ma(e,a+16|0,b);wb(c+96|0,J[c+168>>2],b);d=J[c+100>>2];J[b>>2]=J[c+96>>2];J[b+4>>2]=d;d=J[c+108>>2];J[b+8>>2]=J[c+104>>2];J[b+12>>2]=d;d=ga-16|0;J[d+12>>2]=J[c+168>>2];J[d+12>>2]=J[d+12>>2];J[d+8>>2]=0;h=c- -64|0;jf(h,J[d+12>>2]+(J[d+8>>2]<<4)|0);f=ga-16|0;J[f+12>>2]=J[c+168>>2];d=ga-16|0;J[d+12>>2]=J[f+12>>2];J[d+8>>2]=1;f=c+48|0;jf(f,J[d+12>>2]+(J[d+8>>2]<<4)|0);g=ga-16|0;J[g+12>>2]=J[c+168>>2];d=ga-16|0;J[d+12>>2]=J[g+12>>2];J[d+8>>2]=2;g=c+32|0;jf(g,J[d+12>>2]+(J[d+8>>2]<<4)|0);d=c+80|0;Vd(d,e,h,f,g);Ma(c+16|0,b,d);e=J[c+20>>2];J[a>>2]=J[c+16>>2];J[a+4>>2]=e;e=J[c+28>>2];J[a+8>>2]=J[c+24>>2];J[a+12>>2]=e;va(c,b,d);b=J[c+4>>2];J[a+16>>2]=J[c>>2];J[a+20>>2]=b;b=J[c+12>>2];J[a+24>>2]=J[c+8>>2];J[a+28>>2]=b;ga=c+176|0}function XB(a){a=a|0;var b=0,c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=0;J[a+16>>2]=2139095039;J[a+20>>2]=2139095039;J[a+40>>2]=-8388609;h=a+32|0;J[h>>2]=-8388609;J[h+4>>2]=-8388609;J[a+24>>2]=2139095039;d=J[a+152>>2];if(d){n=a+16|0;m=J[a+160>>2];i=Q(3.4028234663852886e38);j=Q(-3.4028234663852886e38);k=Q(-3.4028234663852886e38);e=Q(-3.4028234663852886e38);l=Q(3.4028234663852886e38);f=Q(3.4028234663852886e38);while(1){d=d-1|0;c=d<<2;b=J[c+m>>2];if(K[b+48|0]){ia[J[J[b>>2]+68>>2]](b);H[b+48|0]=0;j=N[a+40>>2];k=N[a+36>>2];e=N[a+32>>2];i=N[a+24>>2];l=N[a+20>>2];f=N[a+16>>2];m=J[a+160>>2];b=J[c+m>>2]}g=N[b+16>>2];f=f>g?g:f;N[a+16>>2]=f;c=b+16|0;l=N[(N[b+20>>2]<l?c:n)+4>>2];N[a+20>>2]=l;i=N[(N[b+24>>2]<i?c:n)+8>>2];N[a+24>>2]=i;c=b+32|0;g=N[c>>2];e=e<g?g:e;N[a+32>>2]=e;k=N[(N[b+36>>2]>k?c:h)+4>>2];N[a+36>>2]=k;j=N[(N[b+40>>2]>j?c:h)+8>>2];N[a+40>>2]=j;if(d){continue}break}}}function ec(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[8369]=J[8369]+1;e=ia[J[6782]](36,16)|0;J[e+28>>2]=-1;J[e+32>>2]=0;J[e+20>>2]=-1;J[e+12>>2]=-1;J[e+16>>2]=-1;J[e+8>>2]=d;J[e+4>>2]=c;J[e>>2]=b;d=J[a+4>>2];J[e+24>>2]=d;a:{if(J[a+8>>2]!=(d|0)){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}b:{if(!h){c=0;break b}J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;d=J[a+4>>2]}c:{if((d|0)<=0){break c}b=0;if(d-1>>>0>=3){i=d&-4;while(1){f=b<<2;J[f+c>>2]=J[f+J[a+12>>2]>>2];g=f|4;J[g+c>>2]=J[g+J[a+12>>2]>>2];g=f|8;J[g+c>>2]=J[g+J[a+12>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+12>>2]>>2];b=b+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}f=d&3;if(!f){break c}while(1){i=b<<2;J[i+c>>2]=J[i+J[a+12>>2]>>2];b=b+1|0;k=k+1|0;if((f|0)!=(k|0)){continue}break}}b=J[a+12>>2];if(!(!b|!K[a+16|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}d=J[a+4>>2]}J[a+12>>2]=c;H[a+16|0]=1;J[a+8>>2]=h}J[J[a+12>>2]+(d<<2)>>2]=e;J[a+4>>2]=d+1;return e}function Pa(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;a:{g=(D(b),x(2));c=g<<1;if(!(!c|(g&2147483647)>>>0>2139095040)){h=(D(a),x(2));e=h>>>23&255;if((e|0)!=255){break a}}a=Q(a*b);return Q(a/a)}d=h<<1;if(d>>>0<=c>>>0){return(c|0)==(d|0)?Q(a*Q(0)):a}c=g>>>23&255;b:{if(!e){e=0;d=h<<9;if((d|0)>=0){while(1){e=e-1|0;d=d<<1;if((d|0)>=0){continue}break}}d=h<<1-e;break b}d=h&8388607|8388608}c:{if(!c){c=0;f=g<<9;if((f|0)>=0){while(1){c=c-1|0;f=f<<1;if((f|0)>=0){continue}break}}g=g<<1-c;break c}g=g&8388607|8388608}if((c|0)<(e|0)){while(1){d:{f=d-g|0;if((f|0)<0){f=d;break d}if((d|0)!=(g|0)){break d}return Q(a*Q(0))}d=f<<1;e=e-1|0;if((e|0)>(c|0)){continue}break}e=c}e:{c=d-g|0;if((c|0)<0){c=d;break e}if((d|0)!=(g|0)){break e}return Q(a*Q(0))}f:{if(c>>>0>8388607){f=c;break f}while(1){e=e-1|0;d=c>>>0<4194304;f=c<<1;c=f;if(d){continue}break}}d=h&-2147483648;return z(2,d|((e|0)>0?f-8388608|e<<23:f>>>1-e|0)),E()}function MC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=0,g=Q(0),h=Q(0),i=Q(0);d=ga-144|0;ga=d;J[d+52>>2]=0;J[d+56>>2]=0;f=d- -64|0;J[f>>2]=0;J[f+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+84>>2]=0;J[d+88>>2]=0;J[d+80>>2]=1065353216;J[d+92>>2]=0;J[d+96>>2]=0;J[d+104>>2]=0;J[d+108>>2]=0;J[d+100>>2]=1065353216;J[d+112>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+124>>2]=-581039253;J[d+44>>2]=0;J[d+48>>2]=0;J[d+60>>2]=1065353216;J[d+40>>2]=17132;e=N[c+8>>2];g=N[c>>2];h=N[c+4>>2];J[d+140>>2]=0;i=Q(h*Q(0));N[d+136>>2]=e+Q(Q(g*N[d+68>>2])+i);e=Q(e*Q(0));N[d+132>>2]=e+Q(h+Q(g*N[f>>2]));N[d+128>>2]=e+Q(g+i);J[d+32>>2]=1566444395;J[d+36>>2]=0;J[d+24>>2]=1566444395;J[d+28>>2]=1566444395;J[d+16>>2]=-581039253;J[d+20>>2]=0;J[d+8>>2]=-581039253;J[d+12>>2]=-581039253;ia[J[J[b>>2]+64>>2]](b,d+40|0,d+8|0,d+24|0);b=J[d+56>>2];J[a+8>>2]=J[d+52>>2];J[a+12>>2]=b;b=J[d+48>>2];J[a>>2]=J[d+44>>2];J[a+4>>2]=b;ga=d+144|0}function hx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+112;J[e+8>>2]=a;a=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[e+12>>2];J[b+8>>2]=a;g=J[b+12>>2];a=ga-16|0;J[a+12>>2]=J[b+8>>2];J[b+4>>2]=J[J[a+12>>2]+4>>2];c=J[b+4>>2];N[b>>2]=0;a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){Rh(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){N[J[c+12>>2]+(J[a+8>>2]<<2)>>2]=N[J[a+20>>2]>>2];J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;Nh(J[b+8>>2],J[b+4>>2],J[g+12>>2]);ga=b+16|0;ga=e+16|0;ga=d+16|0}function Zx(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;a=ga-80|0;ga=a;J[a+76>>2]=J[e+12>>2];J[a+72>>2]=e+8;J[a+68>>2]=e+4;J[a+64>>2]=e;f=J[a+76>>2];N[a+60>>2]=N[J[a+72>>2]>>2]*Q(.5);N[a+56>>2]=N[J[a+68>>2]>>2]*Q(.5);N[a+52>>2]=N[J[a+64>>2]>>2]*Q(.5);N[a+48>>2]=Ta(N[a+60>>2]);N[a+44>>2]=Sa(N[a+60>>2]);N[a+40>>2]=Ta(N[a+56>>2]);N[a+36>>2]=Sa(N[a+56>>2]);N[a+32>>2]=Ta(N[a+52>>2]);N[a+28>>2]=Sa(N[a+52>>2]);N[a+24>>2]=Q(Q(N[a+28>>2]*N[a+40>>2])*N[a+48>>2])+Q(-Q(Q(N[a+32>>2]*N[a+36>>2])*N[a+44>>2]));N[a+20>>2]=Q(Q(N[a+32>>2]*N[a+36>>2])*N[a+48>>2])+Q(Q(N[a+28>>2]*N[a+40>>2])*N[a+44>>2]);N[a+16>>2]=Q(Q(N[a+32>>2]*N[a+40>>2])*N[a+44>>2])+Q(-Q(Q(N[a+28>>2]*N[a+36>>2])*N[a+48>>2]));N[a+12>>2]=Q(Q(N[a+32>>2]*N[a+40>>2])*N[a+48>>2])+Q(Q(N[a+28>>2]*N[a+36>>2])*N[a+44>>2]);xc(f,a+24|0,a+20|0,a+16|0,a+12|0);ga=a+80|0;ga=e+16|0}function nE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-32|0;ga=d;h=J[c+12>>2];J[d+24>>2]=J[c+8>>2];J[d+28>>2]=h;h=J[c+4>>2];J[d+16>>2]=J[c>>2];J[d+20>>2]=h;e=N[d+24>>2];f=N[d+16>>2];g=N[d+20>>2];if(Q(Q(e*e)+Q(Q(f*f)+Q(g*g)))<Q(1.4210854715202004e-14)){J[d+28>>2]=0;g=Q(-1);f=Q(-1);e=Q(-1)}i=e;e=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(f*f)+Q(g*g))))));N[d+24>>2]=i*e;N[d+20>>2]=g*e;N[d+16>>2]=f*e;Ue(d,b,d+16|0);a:{b:{switch(J[b+4>>2]){case 8:e=Q(N[b+28>>2]*N[b+12>>2]);break a;case 0:e=N[b+44>>2];break a;case 1:e=N[b+44>>2];break a;case 13:e=N[b+44>>2];break a;case 11:e=N[b+44>>2];break a;case 10:e=N[b+44>>2];break a;case 4:case 5:e=N[b+44>>2];break a;default:break b}}e=Q(ia[J[J[b>>2]+48>>2]](b))}f=N[d>>2];g=N[d+16>>2];i=N[d+4>>2];j=N[d+20>>2];k=N[d+8>>2];l=N[d+24>>2];J[a+12>>2]=0;N[a+8>>2]=k+Q(e*l);N[a+4>>2]=i+Q(e*j);N[a>>2]=f+Q(e*g);ga=d+32|0}function Tg(a,b){var c=Q(0),d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;J[a+52>>2]=1;J[a>>2]=14632;d=N[b>>2];c=N[b+4>>2];e=d<c;c=Q(N[((N[b+8>>2]>(e?d:c)?!e:2)<<2)+b>>2]*Q(.10000000149011612));d=N[a+44>>2];if(c<d){e=ga-16|0;J[e+12>>2]=a;f=N[J[e+12>>2]+44>>2];N[a+44>>2]=c;c=N[a+36>>2];g=N[a+32>>2];h=N[a+28>>2];i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));k=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(d+g)-j;N[a+28>>2]=Q(d+h)-i;N[a+36>>2]=Q(f+c)-k;e=J[a>>2]}else{e=14632}d=Q(ia[J[e+48>>2]](a));c=Q(ia[J[J[a>>2]+48>>2]](a));f=Q(ia[J[J[a>>2]+48>>2]](a));g=N[b>>2];h=N[b+4>>2];i=N[b+8>>2];J[a+40>>2]=0;J[a+4>>2]=13;N[a+36>>2]=Q(i*N[a+20>>2])-f;N[a+32>>2]=Q(h*N[a+16>>2])-c;N[a+28>>2]=Q(g*N[a+12>>2])-d}function Kv(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;b=J[e+8>>2];c=N[e+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;N[a+4>>2]=c;b=J[a+12>>2];d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]+4>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+4>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]+8>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+8>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]>>2]+N[a+4>>2]);d=ga-16|0;b=b+16|0;J[d+12>>2]=b;N[J[d+12>>2]>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]+4>>2]+N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+4>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]+8>>2]+N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+8>>2]=c;ga=a+16|0;ga=e+16|0}function $a(a,b){var c=0,d=0,e=0,f=Q(0),g=0;if(!(((D(a),x(2))&2147483647)>>>0<2139095041&((D(b),x(2))&2147483647)>>>0<=2139095040)){return Q(a+b)}c=(D(b),x(2));if((c|0)==1065353216){return Oj(a)}g=c>>>30&2;d=(D(a),x(2));e=g|d>>>31;a:{b:{d=d&2147483647;c:{if(!d){d:{switch(e-2|0){case 0:return Q(3.1415927410125732);case 1:break d;default:break c}}return Q(-3.1415927410125732)}c=c&2147483647;if((c|0)!=2139095040){if(!c|!((d|0)!=2139095040&d>>>0<=c+218103808>>>0)){break a}e:{if(g){f=Q(0);if(c>>>0>d+218103808>>>0){break e}}f=Oj(Q(R(Q(a/b))))}a=f;f:{switch(e|0){case 1:return Q(-a);case 2:return Q(Q(3.1415927410125732)-Q(a+Q(8.742277657347586e-8)));case 0:break c;default:break f}}return Q(Q(a+Q(8.742277657347586e-8))+Q(-3.1415927410125732))}if((d|0)==2139095040){break b}a=N[(e<<2)+23244>>2]}return a}return N[(e<<2)+23228>>2]}return z(2,(D(a),x(2))&-2147483648|1070141403),E()}function BC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ga-128|0;ga=e;i=Bb(e+24|0);J[e+28>>2]=1;f=J[b+12>>2];J[e+88>>2]=J[b+8>>2];J[e+92>>2]=f;f=J[b+4>>2];J[e+80>>2]=J[b>>2];J[e+84>>2]=f;f=J[b+20>>2];J[e+96>>2]=J[b+16>>2];J[e+100>>2]=f;f=J[b+28>>2];J[e+104>>2]=J[b+24>>2];J[e+108>>2]=f;f=J[b+44>>2];J[e+120>>2]=J[b+40>>2];J[e+124>>2]=f;f=J[b+36>>2];J[e+112>>2]=J[b+32>>2];J[e+116>>2]=f;J[e+24>>2]=1976;N[e+68>>2]=N[a+24>>2];b=J[a+4>>2];g=K[a+20|0];a:{if(g){J[b+28>>2]=c;f=b+24|0;break a}J[b+36>>2]=c;f=b+32|0}J[f>>2]=d;f=J[a+12>>2];h=J[f+8>>2];j=J[f+12>>2];J[e+20>>2]=d;J[e+16>>2]=c;J[e+12>>2]=j;J[e+8>>2]=h;J[e>>2]=f;J[e+4>>2]=e+24;c=J[b+16>>2];d=J[c+8>>2];b:{if(J[d+8>>2]==(h|0)){c=c+8|0;break b}d=J[c+12>>2];c=c+12|0}J[c>>2]=e;ud(b,J[a+8>>2],e,J[a+16>>2],e+24|0,(g|0)!=0);a=J[J[a+4>>2]+16>>2];J[(J[J[a+8>>2]+8>>2]==J[e+8>>2]?8:12)+a>>2]=d;Qa(i);ga=e+128|0}function NE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=0,k=0;e=Q(N[b+60>>2]*Q(.5));j=J[b+64>>2];k=J[b+68>>2];g=k<<2;d=N[c+8>>2];i=Q(d*d);d=N[c>>2];f=Q(d*d);d=N[c+4>>2];a:{b:{if(N[g+c>>2]>Q(N[b+52>>2]*Q(Y(Q(i+Q(f+Q(d*d))))))){J[(j<<2)+a>>2]=0;N[a+g>>2]=e;g=J[b+72>>2];break b}d=N[(j<<2)+c>>2];g=J[b+72>>2];f=N[(g<<2)+c>>2];h=Q(Y(Q(Q(d*d)+Q(f*f))));if(h>Q(1.1920928955078125e-7)){i=d;d=Q(N[b+56>>2]/h);N[(j<<2)+a>>2]=i*d;N[(k<<2)+a>>2]=-e;e=Q(f*d);break a}J[(j<<2)+a>>2]=0;N[(k<<2)+a>>2]=-e}e=Q(0)}N[(g<<2)+a>>2]=e;if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){e=N[c+4>>2];d=N[c>>2];f=N[c+8>>2];h=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(f*f)+Q(Q(d*d)+Q(e*e)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;i=d;f=b?Q(-1):f;e=b?Q(-1):e;d=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(d*d)+Q(e*e))))));N[a>>2]=N[a>>2]+Q(h*Q(i*d));N[a+4>>2]=N[a+4>>2]+Q(h*Q(e*d));N[a+8>>2]=N[a+8>>2]+Q(h*Q(f*d))}}function jF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);e=ga-16|0;ga=e;m=a+28|0;h=J[a+52>>2];g=N[m+((h+2|0)%3<<2)>>2];N[e+8>>2]=g;N[e+4>>2]=g;N[e>>2]=g;h=h<<2;N[h+e>>2]=g+N[h+m>>2];i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));f=Q(ia[J[J[a>>2]+48>>2]](a));g=N[b+52>>2];k=N[b+20>>2];p=N[b+24>>2];n=N[b+56>>2];l=N[b+36>>2];q=N[b+40>>2];o=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[e>>2];x=N[e+4>>2];y=N[e+8>>2];J[c+12>>2]=0;f=Q(f+y);i=Q(i+w);j=Q(j+x);l=Q(Q(f*Q(R(q)))+Q(Q(i*Q(R(v)))+Q(j*Q(R(l)))));N[c+8>>2]=n-l;k=Q(Q(f*Q(R(p)))+Q(Q(i*Q(R(u)))+Q(j*Q(R(k)))));N[c+4>>2]=g-k;f=Q(Q(f*Q(R(r)))+Q(Q(i*Q(R(s)))+Q(j*Q(R(t)))));N[c>>2]=o-f;J[d+12>>2]=0;N[d+8>>2]=n+l;N[d+4>>2]=k+g;N[d>>2]=f+o;ga=e+16|0}function Tz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);e=Q(1);d=J[b>>2];if(!((d|0)==J[a+80>>2]|K[d+204|0]&4|Q(-N[a+84>>2])<=Q(Q(N[b+16>>2]*Q(N[a+36>>2]-N[a+20>>2]))+Q(Q(N[b+8>>2]*Q(N[a+28>>2]-N[a+12>>2]))+Q(Q(N[a+32>>2]-N[a+16>>2])*N[b+12>>2]))))){e=N[b+40>>2];J[a+76>>2]=d;N[a+4>>2]=e;a:{if(c){c=b+8|0;d=J[c+4>>2];J[a+44>>2]=J[c>>2];J[a+48>>2]=d;d=J[c+12>>2];J[a+52>>2]=J[c+8>>2];J[a+56>>2]=d;break a}h=N[d+12>>2];i=N[d+8>>2];j=N[d+28>>2];k=N[d+20>>2];l=N[d+24>>2];m=N[d+44>>2];n=N[d+36>>2];o=N[d+40>>2];p=N[d+4>>2];e=N[b+16>>2];f=N[b+8>>2];g=N[b+12>>2];J[a+56>>2]=0;N[a+52>>2]=Q(m*e)+Q(Q(n*f)+Q(g*o));N[a+48>>2]=Q(j*e)+Q(Q(k*f)+Q(g*l));N[a+44>>2]=Q(h*e)+Q(Q(p*f)+Q(i*g))}c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;e=N[b+40>>2]}return Q(e)}function vB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[b+4>>2];J[a+300>>2]=J[b>>2];J[a+304>>2]=d;d=J[b+12>>2];J[a+308>>2]=J[b+8>>2];J[a+312>>2]=d;d=J[b+28>>2];J[a+324>>2]=J[b+24>>2];J[a+328>>2]=d;d=J[b+20>>2];J[a+316>>2]=J[b+16>>2];J[a+320>>2]=d;d=J[b+44>>2];J[a+340>>2]=J[b+40>>2];J[a+344>>2]=d;d=J[b+36>>2];J[a+332>>2]=J[b+32>>2];J[a+336>>2]=d;d=J[b+60>>2];J[a+356>>2]=J[b+56>>2];J[a+360>>2]=d;d=J[b+52>>2];J[a+348>>2]=J[b+48>>2];J[a+352>>2]=d;b=J[c+12>>2];J[a+372>>2]=J[c+8>>2];J[a+376>>2]=b;b=J[c+4>>2];J[a+364>>2]=J[c>>2];J[a+368>>2]=b;b=J[c+20>>2];J[a+380>>2]=J[c+16>>2];J[a+384>>2]=b;b=J[c+28>>2];J[a+388>>2]=J[c+24>>2];J[a+392>>2]=b;b=J[c+36>>2];J[a+396>>2]=J[c+32>>2];J[a+400>>2]=b;b=J[c+44>>2];J[a+404>>2]=J[c+40>>2];J[a+408>>2]=b;b=J[c+60>>2];J[a+420>>2]=J[c+56>>2];J[a+424>>2]=b;b=J[c+52>>2];J[a+412>>2]=J[c+48>>2];J[a+416>>2]=b;ia[J[J[a>>2]+8>>2]](a)}function Lb(a,b,c){var d=0,e=Q(0),f=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;b=J[d+28>>2];a:{if(J[b+44>>2]==1){J[d+16>>2]=J[b+36>>2]+P(J[d+24>>2],J[b+48>>2]);f=O[J[d+16>>2]>>3];a=ga-16|0;b=b+12|0;J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]>>2]=e;f=O[J[d+16>>2]+8>>3];J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]+4>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+4>>2]=e;f=O[J[d+16>>2]+16>>3];J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]+8>>2]);break a}J[d+12>>2]=J[b+36>>2]+P(J[d+24>>2],J[b+48>>2]);e=N[J[d+12>>2]>>2];a=ga-16|0;b=b+12|0;J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]>>2]=e;e=N[J[d+12>>2]+4>>2];J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]+4>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+4>>2]=e;e=N[J[d+12>>2]+8>>2];J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]+8>>2])}a=ga-16|0;J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+8>>2]=e;ga=d+32|0}function Iv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;J[f+4>>2]=c;g=ra(104);a=J[f+12>>2];b=J[f+8>>2];d=J[f+4>>2];c=ga-16|0;ga=c;J[c+12>>2]=g;J[c+8>>2]=a;J[c+4>>2]=b;J[c>>2]=d;a=J[c+8>>2];d=J[c+4>>2];e=J[c>>2];b=ga-32|0;ga=b;h=J[c+12>>2];J[b+24>>2]=h;J[b+20>>2]=a;J[b+16>>2]=d;J[b+12>>2]=e;a=J[b+24>>2];J[b+28>>2]=a;Bb(a);J[a>>2]=2176;d=a+56|0;e=d+48|0;while(1){J[(ga-16|0)+12>>2]=d;d=d+16|0;if((e|0)!=(d|0)){continue}break}J[a+4>>2]=1;d=J[b+20>>2];e=J[d+4>>2];J[a+56>>2]=J[d>>2];J[a+60>>2]=e;e=J[d+12>>2];J[a+64>>2]=J[d+8>>2];J[a+68>>2]=e;d=J[b+16>>2];e=J[d+4>>2];J[a+72>>2]=J[d>>2];J[a+76>>2]=e;e=J[d+12>>2];J[a+80>>2]=J[d+8>>2];J[a+84>>2]=e;d=J[b+12>>2];e=J[d+4>>2];J[a+88>>2]=J[d>>2];J[a+92>>2]=e;e=J[d+12>>2];J[a+96>>2]=J[d+8>>2];J[a+100>>2]=e;ga=b+32|0;J[h>>2]=1976;ga=c+16|0;ga=f+16|0;return g|0}function zz(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);e=J[a+8>>2];if(e){kb(e,0)}e=J[a+12>>2];if(e){kb(e,0)}e=J[a+20>>2];if(e){kb(e,0)}e=J[a+24>>2];if(e){kb(e,0)}e=J[a+156>>2];J[a+156>>2]=e+1;H[a+152|0]=(e|0)>=J[a+160>>2];if(!e){J[a+84>>2]=0;f=Q(Q(1)/b);d=N[a+64>>2];b=Q(f*Q(N[a+72>>2]*d));g=Q(f*Q(d*N[a+80>>2]));f=Q(f*Q(d*N[a+76>>2]));d=N[a+68>>2];if(d>Q(0)){J[a+100>>2]=0;h=Q(d*g);i=Q(d*b);j=Q(d*f);N[a+96>>2]=Q(N[a+144>>2]*h)+Q(Q(N[a+136>>2]*i)+Q(j*N[a+140>>2]));N[a+92>>2]=Q(N[a+128>>2]*h)+Q(Q(N[a+120>>2]*i)+Q(j*N[a+124>>2]));N[a+88>>2]=Q(N[a+112>>2]*h)+Q(Q(N[a+104>>2]*i)+Q(j*N[a+108>>2]));d=Q(Q(1)-d);g=Q(d*g);f=Q(d*f);b=Q(d*b)}d=Q(Q(1)/Q(c|0));N[a+80>>2]=d*g;N[a+76>>2]=d*f;N[a+72>>2]=d*b;return}J[a+72>>2]=0;J[a+76>>2]=0;J[a+96>>2]=0;J[a+100>>2]=0;J[a+88>>2]=0;J[a+92>>2]=0;J[a+80>>2]=0;J[a+84>>2]=0}function yC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=0,o=0;ia[J[J[a>>2]+112>>2]](a);J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;f=J[a+184>>2];a:{if(!f){break a}e=f-1|0;b=Q(b/Q(f|0));m=J[a+192>>2];n=J[a+180>>2];if(J[a+188>>2]==1){while(1){f=e;e=P(f,m)+n|0;o=O[e+16>>3];d=N[a+164>>2];h=Q(O[e>>3]*+N[a+156>>2]);h=Q(h*h);g=Q(O[e+8>>3]*+N[a+160>>2]);g=Q(g*g);i=Q(Q(b*Q(h+g))+i);N[c+8>>2]=i;d=Q(o*+d);d=Q(d*d);j=Q(Q(b*Q(h+d))+j);N[c+4>>2]=j;k=Q(k+Q(b*Q(g+d)));N[c>>2]=k;e=f-1|0;if(f){continue}break}break a}while(1){f=e;e=P(f,m)+n|0;d=N[e+8>>2];h=N[a+164>>2];g=Q(N[e>>2]*N[a+156>>2]);g=Q(g*g);l=Q(N[e+4>>2]*N[a+160>>2]);l=Q(l*l);i=Q(Q(b*Q(g+l))+i);N[c+8>>2]=i;d=Q(d*h);d=Q(d*d);j=Q(Q(b*Q(g+d))+j);N[c+4>>2]=j;k=Q(k+Q(b*Q(l+d)));N[c>>2]=k;e=f-1|0;if(f){continue}break}}ia[J[J[a>>2]+116>>2]](a)}function ny(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;f=ga+-64|0;ga=f;d=1;a:{if(Ya(a,b,0)){break a}d=0;if(!b){break a}d=ga+-64|0;ga=d;e=J[b>>2];g=J[e-4>>2];h=J[e-8>>2];J[d+20>>2]=0;J[d+16>>2]=26804;J[d+12>>2]=b;J[d+8>>2]=26852;e=0;qa(d+24|0,0,39);b=b+h|0;b:{if(Ya(g,26852,0)){J[d+56>>2]=1;ia[J[J[g>>2]+20>>2]](g,d+8|0,b,b,1,0);e=J[d+32>>2]==1?b:0;break b}ia[J[J[g>>2]+24>>2]](g,d+8|0,b,1,0);c:{switch(J[d+44>>2]){case 0:e=J[d+48>>2]==1?J[d+36>>2]==1?J[d+40>>2]==1?J[d+28>>2]:0:0:0;break b;case 1:break c;default:break b}}if(J[d+32>>2]!=1){if(J[d+48>>2]|J[d+36>>2]!=1|J[d+40>>2]!=1){break b}}e=J[d+24>>2]}ga=d- -64|0;d=0;if(!e){break a}b=f+8|0;qa(b|4,0,52);J[f+56>>2]=1;J[f+20>>2]=-1;J[f+16>>2]=a;J[f+8>>2]=e;ia[J[J[e>>2]+28>>2]](e,b,J[c>>2],1);a=J[f+32>>2];if((a|0)==1){J[c>>2]=J[f+24>>2]}d=(a|0)==1}ga=f- -64|0;return d|0}function Gz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0);e=ga-96|0;ga=e;J[e+20>>2]=-65535;J[e+24>>2]=0;J[e+12>>2]=1065353216;J[e+16>>2]=0;J[e+8>>2]=1416;f=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=f;f=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=f;f=J[c+12>>2];J[e+52>>2]=J[c+8>>2];J[e+56>>2]=f;f=J[c+4>>2];J[e+44>>2]=J[c>>2];J[e+48>>2]=f;a=J[a+4>>2];ia[J[J[a>>2]+32>>2]](a,b,c,e+8|0);c=0;a=J[e+16>>2];if(!(!a|!(K[a+236|0]&2)|K[a+204|0]&4)){b=J[e+80>>2];J[d>>2]=J[e+76>>2];J[d+4>>2]=b;b=J[e+88>>2];J[d+8>>2]=J[e+84>>2];J[d+12>>2]=b;b=J[e+64>>2];J[d+16>>2]=J[e+60>>2];J[d+20>>2]=b;b=J[e+72>>2];J[d+24>>2]=J[e+68>>2];J[d+28>>2]=b;g=N[d+24>>2];h=N[d+16>>2];i=N[d+20>>2];j=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(i*i))))));N[d+16>>2]=h*j;N[d+24>>2]=g*j;N[d+20>>2]=i*j;N[d+32>>2]=N[e+12>>2];c=a}ga=e+96|0;return c|0}function ef(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a:{f=J[((b<<2)+a|0)+68>>2];h=c<<2;g=f+h|0;e=L[g+6>>1];if(!e){break a}c=g+4|0;j=b<<1;h=j+(J[a+60>>2]+(L[(f+h|0)+2>>1]<<6)|0)|0;k=1<<b&3;m=1<<k&3;while(1){f=L[c>>1];if(f>>>0>L[g>>1]){break a}b=J[a+60>>2];b:{if(f&1){f=b+(L[g+2>>1]<<6)|0;i=k<<1;l=f+i|0;b=b+(e<<6)|0;e=b+i|0;c:{if(L[l+54>>1]<L[e+48>>1]|L[e+54>>1]<L[l+48>>1]){break c}e=m<<1;i=e+f|0;e=b+e|0;if(L[i+54>>1]<L[e+48>>1]|L[e+54>>1]<L[i+48>>1]){break c}e=J[a+92>>2];ia[J[J[e>>2]+12>>2]](e,f,b,d)|0;e=J[a+96>>2];if(!e){break c}ia[J[J[e>>2]+12>>2]](e,f,b,d)|0}b=(b+j|0)+54|0;break b}b=((b+(e<<6)|0)+j|0)+48|0}I[b>>1]=L[b>>1]-1;I[h+48>>1]=L[h+48>>1]+1;b=L[g>>1]|L[g+2>>1]<<16;e=L[c>>1]|L[c+2>>1]<<16;I[g>>1]=e;I[g+2>>1]=e>>>16;I[c>>1]=b;I[c+2>>1]=b>>>16;g=g+4|0;b=c;c=b+4|0;e=L[b+6>>1];if(e){continue}break}}}function ff(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{e=J[((b<<2)+a|0)+68>>2]+(c<<2)|0;d=L[e+6>>1];if(!d){break a}c=e+4|0;i=b<<1;g=J[a+60>>2]+(L[e+2>>1]<<6)|0;f=g+54|0;k=i+f|0;h=g+48|0;b=1<<b&3;g=b<<1;l=h+g|0;m=f+g|0;j=(1<<b&3)<<1;h=h+j|0;n=f+j|0;while(1){b=L[c>>1];if(b>>>0>L[e>>1]){break a}f=J[a+60>>2];if(b&1){b=((f+(d<<6)|0)+i|0)+54|0}else{b=f+(d<<6)|0;d=b+g|0;b:{if(L[m>>1]<L[d+48>>1]|L[d+54>>1]<L[l>>1]){break b}d=b+j|0;if(L[n>>1]<L[d+48>>1]|L[d+54>>1]<L[h>>1]){break b}d=J[a+92>>2];f=f+(L[e+2>>1]<<6)|0;ia[J[J[d>>2]+8>>2]](d,f,b)|0;d=J[a+96>>2];if(!d){break b}ia[J[J[d>>2]+8>>2]](d,f,b)|0}b=(b+i|0)+48|0}I[b>>1]=L[b>>1]-1;I[k>>1]=L[k>>1]+1;b=L[e>>1]|L[e+2>>1]<<16;d=L[c>>1]|L[c+2>>1]<<16;I[e>>1]=d;I[e+2>>1]=d>>>16;I[c>>1]=b;I[c+2>>1]=b>>>16;e=e+4|0;b=c;c=b+4|0;d=L[b+6>>1];if(d){continue}break}}}function Hd(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a:{h=J[((b<<2)+a|0)+68>>2];i=c<<2;c=h+i|0;g=c-4|0;f=L[g>>1];if(f>>>0<=L[c>>1]){break a}k=b<<1;e=J[a+60>>2];h=k+(e+(L[(h+i|0)+2>>1]<<6)|0)|0;i=1<<b&3;m=1<<i&3;while(1){b=L[c-2>>1];if(f&1){b=(((b<<6)+e|0)+k|0)+54|0}else{f=(L[c+2>>1]<<6)+e|0;j=i<<1;l=f+j|0;b=(b<<6)+e|0;e=b+j|0;b:{if(L[l+54>>1]<L[e+48>>1]|L[e+54>>1]<L[l+48>>1]){break b}e=m<<1;j=e+f|0;e=b+e|0;if(L[j+54>>1]<L[e+48>>1]|L[e+54>>1]<L[j+48>>1]){break b}e=J[a+92>>2];ia[J[J[e>>2]+12>>2]](e,f,b,d)|0;e=J[a+96>>2];if(!e){break b}ia[J[J[e>>2]+12>>2]](e,f,b,d)|0}b=(b+k|0)+48|0}I[b>>1]=L[b>>1]+1;I[h+54>>1]=L[h+54>>1]-1;b=L[c>>1]|L[c+2>>1]<<16;e=L[g>>1]|L[g+2>>1]<<16;I[c>>1]=e;I[c+2>>1]=e>>>16;I[g>>1]=b;I[g+2>>1]=b>>>16;g=g-4|0;f=L[g>>1];c=c-4|0;if(f>>>0<=L[c>>1]){break a}e=J[a+60>>2];continue}}}function cs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];a=J[d+12>>2];a:{if(K[a+84|0]){e=N[a+8>>2];f=N[a>>2];j=N[a+4>>2];g=Q(Q(e*N[a+60>>2])+Q(Q(f*N[a+52>>2])+Q(j*N[a+56>>2])));if(g>=Q(-.10000000149011612)){J[a+272>>2]=0;N[a+268>>2]=10;break a}g=Q(Q(-1)/g);i=e;e=N[b+328>>2];h=Q(N[a+20>>2]-N[b+56>>2]);k=Q(N[a+16>>2]-N[b+52>>2]);l=N[b+332>>2];m=Q(i*Q(Q(Q(e*h)-Q(k*l))+N[b+320>>2]));i=f;f=Q(N[a+24>>2]-N[b+60>>2]);n=h;h=N[b+336>>2];N[a+272>>2]=g*Q(m+Q(Q(i*Q(Q(Q(l*f)-Q(n*h))+N[b+312>>2]))+Q(j*Q(Q(Q(h*k)-Q(f*e))+N[b+316>>2]))));N[a+268>>2]=g;break a}J[a+272>>2]=0;J[a+12>>2]=0;N[a+32>>2]=N[a+204>>2];N[a>>2]=-N[a+52>>2];N[a+8>>2]=-N[a+60>>2];N[a+4>>2]=-N[a+56>>2];N[a+268>>2]=1}ga=d+16|0}function Lt(a){a=a|0;var b=Q(0),c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);l=ga-16|0;ga=l;J[l+12>>2]=a;a=J[l+12>>2];J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;c=N[a+44>>2];h=N[a+404>>2];d=Q(c*h);e=N[a+36>>2];i=N[a+396>>2];f=Q(e*i);g=N[a+40>>2];q=N[a+400>>2];b=Q(g*q);N[a+304>>2]=Q(c*d)+Q(Q(e*f)+Q(g*b));m=N[a+28>>2];n=N[a+20>>2];o=N[a+24>>2];N[a+300>>2]=Q(m*d)+Q(Q(n*f)+Q(o*b));p=N[a+12>>2];j=Q(p*d);d=N[a+4>>2];k=Q(d*f);f=N[a+8>>2];N[a+296>>2]=j+Q(k+Q(f*b));b=Q(h*m);j=Q(i*n);k=Q(q*o);N[a+288>>2]=Q(c*b)+Q(Q(e*j)+Q(g*k));N[a+284>>2]=Q(m*b)+Q(Q(n*j)+Q(o*k));N[a+280>>2]=Q(p*b)+Q(Q(d*j)+Q(f*k));b=c;c=Q(p*h);h=e;e=Q(d*i);i=g;g=Q(f*q);N[a+272>>2]=Q(b*c)+Q(Q(h*e)+Q(i*g));N[a+268>>2]=Q(m*c)+Q(Q(n*e)+Q(g*o));N[a+264>>2]=Q(p*c)+Q(Q(d*e)+Q(f*g));ga=l+16|0}function lm(a,b,c,d){var e=0,f=0,g=0;e=ga+-64|0;ga=e;g=P(b,80);f=g+J[a+24>>2]|0;b=J[c+4>>2];J[f>>2]=J[c>>2];J[f+4>>2]=b;b=J[c+12>>2];J[f+8>>2]=J[c+8>>2];J[f+12>>2]=b;b=J[c+28>>2];J[f+24>>2]=J[c+24>>2];J[f+28>>2]=b;b=J[c+20>>2];J[f+16>>2]=J[c+16>>2];J[f+20>>2]=b;b=J[c+44>>2];J[f+40>>2]=J[c+40>>2];J[f+44>>2]=b;b=J[c+36>>2];J[f+32>>2]=J[c+32>>2];J[f+36>>2]=b;b=J[c+60>>2];J[f+56>>2]=J[c+56>>2];J[f+60>>2]=b;b=J[c+52>>2];J[f+48>>2]=J[c+48>>2];J[f+52>>2]=b;if(J[a+64>>2]){b=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[b>>2]+8>>2]](b,c,e+48|0,e+32|0);c=J[e+60>>2];J[e+8>>2]=J[e+56>>2];J[e+12>>2]=c;b=J[e+44>>2];J[e+24>>2]=J[e+40>>2];J[e+28>>2]=b;b=J[e+36>>2];J[e+16>>2]=J[e+32>>2];J[e+20>>2]=b;b=J[e+52>>2];J[e>>2]=J[e+48>>2];J[e+4>>2]=b;Gc(J[a+64>>2],J[(J[a+24>>2]+g|0)+76>>2],e)}if(d){ia[J[J[a>>2]+68>>2]](a)}ga=e- -64|0}function Id(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;a:{c=J[((b<<2)+a|0)+68>>2]+(c<<2)|0;e=c-4|0;g=L[e>>1];if(g>>>0<=L[c>>1]){break a}j=b<<1;d=J[a+60>>2];h=d+(L[c+2>>1]<<6)|0;f=h+48|0;m=j+f|0;b=1<<b&3;k=b<<1;n=f+k|0;i=h+54|0;o=i+k|0;l=(1<<b&3)<<1;f=f+l|0;i=i+l|0;while(1){b=L[c-2>>1];b:{if(g&1){b=(b<<6)+d|0;d=b+k|0;c:{if(L[o>>1]<L[d+48>>1]|L[d+54>>1]<L[n>>1]){break c}d=b+l|0;if(L[i>>1]<L[d+48>>1]|L[d+54>>1]<L[f>>1]){break c}d=J[a+92>>2];ia[J[J[d>>2]+8>>2]](d,h,b)|0;d=J[a+96>>2];if(!d){break c}ia[J[J[d>>2]+8>>2]](d,h,b)|0}b=(b+j|0)+54|0;break b}b=(((b<<6)+d|0)+j|0)+48|0}I[b>>1]=L[b>>1]+1;I[m>>1]=L[m>>1]-1;b=L[c>>1]|L[c+2>>1]<<16;d=L[e>>1]|L[e+2>>1]<<16;I[c>>1]=d;I[c+2>>1]=d>>>16;I[e>>1]=b;I[e+2>>1]=b>>>16;e=e-4|0;g=L[e>>1];c=c-4|0;if(g>>>0<=L[c>>1]){break a}d=J[a+60>>2];continue}}}function Nw(a){a=a|0;var b=Q(0),c=Q(0),d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);f=ga-16|0;ga=f;J[f+12>>2]=a;a=ra(56);e=J[f+12>>2];Bb(a);J[a+4>>2]=0;J[a>>2]=11800;c=N[e>>2];b=N[e+4>>2];d=c<b;b=Q(N[((N[e+8>>2]>(d?c:b)?!d:2)<<2)+e>>2]*Q(.10000000149011612));c=N[a+44>>2];if(b<c){d=ga-16|0;J[d+12>>2]=a;g=N[J[d+12>>2]+44>>2];N[a+44>>2]=b;b=N[a+36>>2];h=N[a+32>>2];i=N[a+28>>2];j=Q(ia[J[J[a>>2]+48>>2]](a));k=Q(ia[J[J[a>>2]+48>>2]](a));l=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(c+h)-k;N[a+28>>2]=Q(c+i)-j;N[a+36>>2]=Q(g+b)-l;d=J[a>>2]}else{d=11800}c=Q(ia[J[d+48>>2]](a));b=Q(ia[J[J[a>>2]+48>>2]](a));g=Q(ia[J[J[a>>2]+48>>2]](a));h=N[e>>2];i=N[e+4>>2];j=N[e+8>>2];J[a+40>>2]=0;N[a+36>>2]=Q(j*N[a+20>>2])-g;N[a+32>>2]=Q(i*N[a+16>>2])-b;N[a+28>>2]=Q(h*N[a+12>>2])-c;ga=f+16|0;return a|0}function jA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=J[a+212>>2];a:{if((d|0)!=J[a+216>>2]){break a}i=d?d<<1:1;if((i|0)<=(d|0)){break a}if(i){J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;d=J[a+212>>2]}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){j=d&-4;while(1){e=f<<2;J[e+g>>2]=J[e+J[a+220>>2]>>2];h=e|4;J[h+g>>2]=J[h+J[a+220>>2]>>2];h=e|8;J[h+g>>2]=J[h+J[a+220>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[a+220>>2]>>2];f=f+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}e=d&3;if(!e){break b}while(1){j=f<<2;J[j+g>>2]=J[j+J[a+220>>2]>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}f=J[a+220>>2];if(!(!f|!K[a+224|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}d=J[a+212>>2]}J[a+220>>2]=g;H[a+224|0]=1;J[a+216>>2]=i}J[J[a+220>>2]+(d<<2)>>2]=b;J[a+212>>2]=d+1;if(c){uk(J[b+28>>2],b);uk(J[b+32>>2],b)}}function Mo(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=d|0;var e=0,f=0,g=0;e=ga-112|0;ga=e;J[e+108>>2]=a;N[e+104>>2]=b;J[e+100>>2]=c;J[e+96>>2]=d;c=J[e+108>>2];g=ga-16|0;d=g;J[d+12>>2]=J[e+100>>2];d=J[d+12>>2]+48|0;f=J[d+4>>2];a=e+80|0;J[a>>2]=J[d>>2];J[a+4>>2]=f;f=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=f;J[g+12>>2]=J[e+100>>2];d=e- -64|0;pc(d,J[g+12>>2],1);f=ga-16|0;J[f+12>>2]=J[e+100>>2];g=e+48|0;pc(g,J[f+12>>2],0);N[e+44>>2]=-1.5707963705062866;N[e+40>>2]=1.5707963705062866;N[e+36>>2]=-1.5707963705062866;N[e+32>>2]=1.5707963705062866;N[e+28>>2]=30;ia[J[J[c>>2]+64>>2]](c,a,d,g,N[e+104>>2],N[e+44>>2],N[e+40>>2],N[e+36>>2],N[e+32>>2],J[e+96>>2],N[e+28>>2],0);f=e+8|0;$b(f,g);ia[J[J[c>>2]+64>>2]](c,a,d,f,N[e+104>>2],N[e+44>>2],N[e+40>>2],N[e+36>>2],N[e+32>>2],J[e+96>>2],N[e+28>>2],0);ga=e+112|0}function vq(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29324]){J[(ga-16|0)+12>>2]=29308;H[29324]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[c+28>>2];g=J[a+12>>2];J[a+8>>2]=J[g+116>>2]+4;d=ga-16|0;J[d+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=0;d=ga-16|0;J[d+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);d=J[d+12>>2]+(J[g+128>>2]<<2)|0;e=ga-16|0;J[e+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[e+12>>2];J[b+8>>2]=1;e=ga-16|0;J[e+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);e=J[e+12>>2]+(J[g+128>>2]<<2)|0;f=ga-16|0;J[f+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[f+12>>2];J[b+8>>2]=2;f=ga-16|0;J[f+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);na(c+8|0,d,e,J[f+12>>2]+(J[g+128>>2]<<2)|0);ga=a+16|0;a=J[c+12>>2];J[7327]=J[c+8>>2];J[7328]=a;a=J[c+20>>2];J[7329]=J[c+16>>2];J[7330]=a;ga=c+32|0;return 29308}function Oj(a){var b=0,c=0,d=Q(0),e=Q(0),f=0,g=Q(0);f=(D(a),x(2));c=f&2147483647;if(c>>>0>=1283457024){return((D(a),x(2))&2147483647)>>>0>2139095040?a:(z(2,(D(a),x(2))&-2147483648|1070141402),E())}a:{b:{if(c>>>0<=1054867455){b=-1;if(c>>>0>=964689920){break b}break a}a=Q(R(a));if(c>>>0<=1066926079){if(c>>>0<=1060110335){a=Q(Q(Q(a+a)+Q(-1))/Q(a+Q(2)));b=0;break b}a=Q(Q(a+Q(-1))/Q(a+Q(1)));b=1;break b}if(c>>>0<=1075576831){a=Q(Q(a+Q(-1.5))/Q(Q(a*Q(1.5))+Q(1)));b=2;break b}a=Q(Q(-1)/a);b=3}e=Q(a*a);d=Q(e*e);g=Q(d*Q(Q(d*Q(-.106480173766613))+Q(-.19999158382415771)));d=Q(e*Q(Q(d*Q(Q(d*Q(.06168760731816292))+Q(.14253635704517365)))+Q(.333333283662796)));if(c>>>0<=1054867455){return Q(a-Q(a*Q(g+d)))}b=b<<2;a=Q(N[b+23264>>2]-Q(Q(Q(a*Q(g+d))-N[b+23280>>2])-a));a=(f|0)>=0?a:Q(-a)}return a}function zs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;c=ra(96);a=J[e+4>>2];b=J[e>>2];d=ga-32|0;ga=d;xb(c,11,J[e+12>>2],J[e+8>>2]);J[c>>2]=19424;f=J[a+52>>2];J[c+48>>2]=J[a+48>>2];J[c+52>>2]=f;f=J[a+60>>2];J[c+56>>2]=J[a+56>>2];J[c+60>>2]=f;f=J[b+52>>2];J[c+64>>2]=J[b+48>>2];J[c+68>>2]=f;f=J[b+60>>2];J[c+72>>2]=J[b+56>>2];J[c+76>>2]=f;Na(a,d+16|0);Na(b,d);g=N[d+24>>2];h=N[d+8>>2];i=N[d+20>>2];j=N[d+4>>2];k=N[d+28>>2];l=N[d+12>>2];m=N[d>>2];n=N[d+16>>2];N[c+92>>2]=Q(g*h)+Q(Q(i*j)+Q(Q(k*l)+Q(m*n)));N[c+88>>2]=Q(i*m)+Q(Q(Q(l*g)-Q(k*h))-Q(n*j));N[c+84>>2]=Q(n*h)+Q(Q(Q(l*i)-Q(k*j))-Q(g*m));N[c+80>>2]=Q(g*j)+Q(Q(Q(l*n)-Q(k*m))-Q(i*h));ga=d+32|0;ga=e+16|0;return c|0}function SG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+20>>2];if(!(!c|!K[a+16|0])){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+20>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function yd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+12>>2];if(!(!c|!K[a+8|0])){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+12>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function mE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=ga-80|0;ga=d;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;f=N[c+8>>2];h=N[c>>2];g=N[c+4>>2];e=Q(Q(f*f)+Q(Q(h*h)+Q(g*g)));a:{if(e<Q(9999999747378752e-20)){f=Q(0);g=Q(0);e=Q(1);break a}e=Q(Q(1)/Q(Y(e)));f=Q(f*e);i=Q(g*e);g=N[c+12>>2];e=Q(h*e)}J[d+52>>2]=0;J[d+56>>2]=0;N[d+76>>2]=g;N[d+72>>2]=f;N[d+68>>2]=i;J[d+44>>2]=0;J[d+48>>2]=0;N[d+64>>2]=e;J[d+60>>2]=-581039253;J[d+40>>2]=14568;J[d+32>>2]=1566444395;J[d+36>>2]=0;J[d+24>>2]=1566444395;J[d+28>>2]=1566444395;b=J[b+92>>2];J[d+16>>2]=-581039253;J[d+20>>2]=0;J[d+8>>2]=-581039253;J[d+12>>2]=-581039253;ia[J[J[b>>2]+8>>2]](b,d+40|0,d+8|0,d+24|0);b=J[d+56>>2];J[a+8>>2]=J[d+52>>2];J[a+12>>2]=b;b=J[d+48>>2];J[a>>2]=J[d+44>>2];J[a+4>>2]=b;ga=d+80|0}function vt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=ra(360);c=J[d+8>>2];b=J[d+12>>2];ug(a,3,b);J[a>>2]=19792;e=J[c+4>>2];J[a+300>>2]=J[c>>2];J[a+304>>2]=e;e=J[c+12>>2];J[a+308>>2]=J[c+8>>2];J[a+312>>2]=e;i=N[b+52>>2];j=N[b+8>>2];k=N[b+12>>2];l=N[b+56>>2];m=N[b+20>>2];n=N[b+24>>2];o=N[b+28>>2];p=N[b+60>>2];q=N[b+36>>2];r=N[b+40>>2];f=N[c+8>>2];s=N[b+44>>2];t=N[b+4>>2];g=N[c>>2];h=N[c+4>>2];J[a+356>>2]=0;J[a+348>>2]=1050253722;J[a+352>>2]=1065353216;H[a+344|0]=0;J[a+328>>2]=0;J[a+332>>2]=0;N[a+324>>2]=p+Q(Q(f*s)+Q(Q(g*q)+Q(h*r)));N[a+320>>2]=l+Q(Q(f*o)+Q(Q(g*m)+Q(h*n)));N[a+316>>2]=i+Q(Q(f*k)+Q(Q(g*t)+Q(h*j)));ga=d+16|0;return a|0}function _z(a,b){a=a|0;b=b|0;var c=0,d=0;ia[J[J[b>>2]+32>>2]](b);d=ia[J[J[b>>2]+16>>2]](b,104,1)|0;c=qa(J[d+8>>2],0,104);N[c+88>>2]=N[a+248>>2];N[c+92>>2]=N[a+252>>2];N[c+96>>2]=N[a+256>>2];N[c+100>>2]=N[a+260>>2];N[c>>2]=N[a+92>>2];N[c+4>>2]=N[a+96>>2];N[c+8>>2]=N[a+100>>2];N[c+12>>2]=N[a+104>>2];N[c+16>>2]=N[a+108>>2];N[c+20>>2]=N[a+116>>2];N[c+24>>2]=N[a+120>>2];N[c+28>>2]=N[a+124>>2];N[c+32>>2]=N[a+128>>2];N[c+36>>2]=N[a+132>>2];N[c+40>>2]=N[a+140>>2];N[c+44>>2]=N[a+144>>2];N[c+48>>2]=N[a+148>>2];N[c+52>>2]=N[a+152>>2];N[c+56>>2]=N[a+168>>2];N[c+60>>2]=N[a+172>>2];J[c+64>>2]=J[a+112>>2];J[c+68>>2]=J[a+156>>2];J[c+72>>2]=J[a+160>>2];J[c+76>>2]=J[a+164>>2];J[c+80>>2]=J[a+136>>2];ia[J[J[b>>2]+20>>2]](b,d,3601,1145853764,c);Ak(a,b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function Ha(a){var b=Q(0),c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;e=(D(a),x(2));d=e&2147483647;a:{if(d>>>0<=1061752794){b=Q(1);if(d>>>0<964689920){break a}b=db(+a);break a}if(d>>>0<=1081824209){f=+a;if(d>>>0>=1075235812){b=Q(-db(((e|0)>=0?-3.141592653589793:3.141592653589793)+f));break a}if((e|0)<0){b=cb(f+1.5707963267948966);break a}b=cb(1.5707963267948966-f);break a}if(d>>>0<=1088565717){if(d>>>0>=1085271520){b=db(((e|0)>=0?-6.283185307179586:6.283185307179586)+ +a);break a}if((e|0)<0){b=cb(-4.71238898038469-+a);break a}b=cb(+a+-4.71238898038469);break a}b=Q(a-a);if(d>>>0>=2139095040){break a}b:{switch(Mj(a,c+8|0)&3){case 0:b=db(O[c+8>>3]);break a;case 1:b=cb(-O[c+8>>3]);break a;case 2:b=Q(-db(O[c+8>>3]));break a;default:break b}}b=cb(O[c+8>>3])}a=b;ga=c+16|0;return a}function NG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+76>>2];if(c){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+76>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function MA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;a:{if(!J[h+44>>2]){break a}d=J[h+20>>2];if(H[h+65|0]&1){if((d|0)<=0){break a}e=0;b=J[a+28>>2];if((b|0)<=0){break a}while(1){c=0;if((b|0)>0){while(1){f=J[a+16>>2];d=J[a+36>>2]+P(J[J[a+116>>2]+(c<<2)>>2],152)|0;Tk(f+P(J[d+144>>2],244)|0,f+P(J[d+148>>2],244)|0,d);c=c+1|0;if((c|0)!=(b|0)){continue}break}d=J[h+20>>2]}e=e+1|0;if((e|0)>=(d|0)){break a}b=J[a+28>>2];continue}}if((d|0)<=0){break a}e=0;b=J[a+28>>2];if((b|0)<=0){break a}while(1){c=0;if((b|0)>0){while(1){f=J[a+16>>2];d=J[a+36>>2]+P(J[J[a+116>>2]+(c<<2)>>2],152)|0;Tk(f+P(J[d+144>>2],244)|0,f+P(J[d+148>>2],244)|0,d);c=c+1|0;if((c|0)!=(b|0)){continue}break}d=J[h+20>>2]}e=e+1|0;if((e|0)>=(d|0)){break a}b=J[a+28>>2];continue}}}function FC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+12>>2];if(c){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+12>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function Zs(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;b=J[e+8>>2];a=ga-48|0;ga=a;r=J[e+12>>2];Na(r+364|0,a+16|0);c=N[b+4>>2];d=N[b+8>>2];f=N[b>>2];g=N[b+12>>2];h=N[a+24>>2];i=N[a+20>>2];j=N[a+28>>2];k=N[a+16>>2];Na(r+300|0,a);l=Q(Q(h*d)+Q(Q(i*c)+Q(Q(j*g)+Q(k*f))));m=N[a+12>>2];n=N[a>>2];o=Q(Q(h*c)+Q(Q(Q(j*f)-Q(g*k))-Q(i*d)));p=Q(Q(k*d)+Q(Q(Q(j*c)-Q(g*i))-Q(h*f)));q=N[a+4>>2];c=Q(Q(i*f)+Q(Q(Q(j*d)-Q(g*h))-Q(k*c)));d=N[a+8>>2];N[a+44>>2]=Q(Q(Q(l*m)-Q(n*o))-Q(p*q))-Q(c*d);N[a+40>>2]=Q(Q(o*q)+Q(Q(l*d)+Q(c*m)))-Q(p*n);N[a+36>>2]=Q(Q(c*n)+Q(Q(l*q)+Q(p*m)))-Q(o*d);N[a+32>>2]=Q(Q(p*d)+Q(Q(l*n)+Q(o*m)))-Q(c*q);fl(r,a+32|0);ga=a+48|0;ga=e+16|0}function iz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=0,p=0;d=J[b+52>>2];f=J[d+32>>2];b=J[f>>2];d=J[d+24>>2];if((d|0)>=2){h=N[c+8>>2];i=N[c>>2];j=N[c+4>>2];k=Q(Q(h*N[b+16>>2])+Q(Q(i*N[b+8>>2])+Q(j*N[b+12>>2])));b=1;c=d-1|0;o=c&1;a:{if((d|0)==2){c=0;break a}p=c&-2;c=0;while(1){d=J[(b<<2)+f>>2];g=Q(Q(h*N[d+16>>2])+Q(Q(i*N[d+8>>2])+Q(j*N[d+12>>2])));l=g>k;d=b+1|0;e=J[(d<<2)+f>>2];m=Q(Q(h*N[e+16>>2])+Q(Q(i*N[e+8>>2])+Q(j*N[e+12>>2])));g=l?g:k;e=m>g;k=e?m:g;c=e?d:l?b:c;b=b+2|0;n=n+2|0;if((p|0)!=(n|0)){continue}break}}if(o){d=b;b=J[(b<<2)+f>>2];c=Q(Q(h*N[b+16>>2])+Q(Q(i*N[b+8>>2])+Q(j*N[b+12>>2])))>k?d:c}b=J[(c<<2)+f>>2]}c=J[b+12>>2];J[a>>2]=J[b+8>>2];J[a+4>>2]=c;c=J[b+20>>2];J[a+8>>2]=J[b+16>>2];J[a+12>>2]=c}function Ga(a){var b=0,c=0,d=0,e=0;b=ga-16|0;ga=b;e=(D(a),x(2));c=e&2147483647;a:{if(c>>>0<=1061752794){if(c>>>0<964689920){break a}a=cb(+a);break a}if(c>>>0<=1081824209){d=+a;if(c>>>0<=1075235811){if((e|0)<0){a=Q(-db(d+1.5707963267948966));break a}a=db(d+-1.5707963267948966);break a}a=cb(-(((e|0)>=0?-3.141592653589793:3.141592653589793)+d));break a}if(c>>>0<=1088565717){d=+a;if(c>>>0<=1085271519){if((e|0)<0){a=db(d+4.71238898038469);break a}a=Q(-db(d+-4.71238898038469));break a}a=cb(((e|0)>=0?-6.283185307179586:6.283185307179586)+d);break a}if(c>>>0>=2139095040){a=Q(a-a);break a}b:{switch(Mj(a,b+8|0)&3){case 0:a=cb(O[b+8>>3]);break a;case 1:a=db(O[b+8>>3]);break a;case 2:a=cb(-O[b+8>>3]);break a;default:break b}}a=Q(-db(O[b+8>>3]))}ga=b+16|0;return a}function gA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+280>>2];a:{if((c|0)!=J[a+284>>2]){break a}h=c?c<<1:1;if((h|0)<=(c|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+280>>2]}b:{if((c|0)<=0){break b}if(c-1>>>0>=3){i=c&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+288>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+288>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+288>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+288>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=c&3;if(!d){break b}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+288>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+288>>2];if(!(!e|!K[a+292|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}c=J[a+280>>2]}J[a+288>>2]=f;H[a+292|0]=1;J[a+284>>2]=h}J[J[a+288>>2]+(c<<2)>>2]=b;J[a+280>>2]=c+1}function Ev(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+24>>2];c=J[f+20>>2];d=J[f+16>>2];e=J[f+12>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[f+28>>2];J[b+24>>2]=a;J[b+20>>2]=c;J[b+16>>2]=d;J[b+12>>2]=e;c=J[b+24>>2];d=J[c+4>>2];a=J[b+28>>2];J[a+96>>2]=J[c>>2];J[a+100>>2]=d;d=J[c+12>>2];J[a+104>>2]=J[c+8>>2];J[a+108>>2]=d;c=J[b+20>>2];d=J[c+4>>2];J[a+112>>2]=J[c>>2];J[a+116>>2]=d;d=J[c+12>>2];J[a+120>>2]=J[c+8>>2];J[a+124>>2]=d;c=J[b+16>>2];d=J[c+4>>2];J[a+128>>2]=J[c>>2];J[a+132>>2]=d;d=J[c+12>>2];J[a+136>>2]=J[c+8>>2];J[a+140>>2]=d;c=J[b+12>>2];d=J[c+4>>2];J[a+144>>2]=J[c>>2];J[a+148>>2]=d;d=J[c+12>>2];J[a+152>>2]=J[c+8>>2];J[a+156>>2]=d;Sb(a);ga=b+32|0;ga=f+32|0}function ng(a,b){var c=0,d=0,e=0,f=0;c=J[J[a+1120>>2]+(b<<2)>>2];b=J[c+348>>2];if(b){Fc(a+1048|0,b)}b=J[c+52>>2];if(!(b?!b|!K[c+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+52>>2]=0;H[c+56|0]=1;J[c+44>>2]=0;J[c+48>>2]=0;b=J[c+32>>2];if(!(b?!b|!K[c+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+32>>2]=0;H[c+36|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;b=J[c+12>>2];if(!(b?!b|!K[c+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[a+1112>>2];a:{if((d|0)<=0){break a}e=J[a+1120>>2];while(1){f=(b<<2)+e|0;if(J[f>>2]!=(c|0)){b=b+1|0;if((d|0)!=(b|0)){continue}break a}break}if((b|0)>=(d|0)){break a}b=d-1|0;d=b<<2;J[f>>2]=J[d+e>>2];J[d+J[a+1120>>2]>>2]=c;J[a+1112>>2]=b}}function Vn(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0;d=ga-128|0;ga=d;J[d+120>>2]=a;J[d+116>>2]=b;N[d+112>>2]=c;a=J[d+120>>2];b=d+96|0;J[(ga-16|0)+12>>2]=b;mf(a,b);N[d+92>>2]=Ua(J[d+116>>2],b);N[d+88>>2]=Ua(a+56|0,b);N[d+92>>2]=N[d+92>>2]-N[d+88>>2];a:{if(!(!(N[d+92>>2]>=Q(-N[d+112>>2]))|!(N[d+92>>2]<=N[d+112>>2]))){J[d+84>>2]=0;while(1){if(J[d+84>>2]<3){e=ga-16|0;b=d- -64|0;J[e+12>>2]=b;f=e;e=d+48|0;J[f+12>>2]=e;ia[J[J[a>>2]+104>>2]](a,J[d+84>>2],b,e);f=d+32|0;Ma(f,e,b);e=d+16|0;Ub(e,f,d+96|0);Ld(e);N[d+12>>2]=Ua(J[d+116>>2],e);N[d+8>>2]=Ua(b,e);N[d+12>>2]=N[d+12>>2]-N[d+8>>2];if(N[d+12>>2]<Q(-N[d+112>>2])){H[d+127|0]=0;break a}else{J[d+84>>2]=J[d+84>>2]+1;continue}}break}H[d+127|0]=1;break a}H[d+127|0]=0}ga=d+128|0;return H[d+127|0]&1}function HD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];a:{d=J[a+92>>2];if(d){e=ia[J[J[c>>2]+28>>2]](c,J[a+100>>2])|0;J[b+56>>2]=d;J[b+52>>2]=e;b=0;g=ia[J[J[c>>2]+16>>2]](c,20,d)|0;if((d|0)<=0){e=J[a+100>>2];break a}h=J[a+120>>2];e=J[a+100>>2];a=J[g+8>>2];while(1){f=(b<<4)+e|0;N[a>>2]=N[f>>2];N[a+4>>2]=N[f+4>>2];N[a+8>>2]=N[f+8>>2];N[a+12>>2]=N[f+12>>2];N[a+16>>2]=N[(b<<2)+h>>2];a=a+20|0;b=b+1|0;if((d|0)!=(b|0)){continue}break}break a}J[b+52>>2]=0;J[b+56>>2]=0;return 3897}ia[J[J[c>>2]+20>>2]](c,g,2454,1497453121,e);return 3897}function nm(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);ia[J[J[a>>2]+8>>2]](a,b,e,f);k=N[d+8>>2];l=N[d>>2];m=N[d+4>>2];n=N[f>>2];o=N[f+4>>2];p=N[f+8>>2];h=N[e>>2];q=N[c>>2];i=N[e+4>>2];r=N[c+4>>2];g=N[e+8>>2];s=N[c+8>>2];t=Q(ia[J[J[a>>2]+16>>2]](a));J[e+12>>2]=0;j=g;g=Q(s*Q(1));N[e+8>>2]=j+(g>=Q(0)?Q(-0):g);j=i;i=Q(r*Q(1));N[e+4>>2]=j+(i>=Q(0)?Q(-0):i);j=h;h=Q(q*Q(1));N[e>>2]=j+(h>=Q(0)?Q(-0):h);J[f+12>>2]=0;N[f+8>>2]=p+(g>Q(-0)?g:Q(-0));N[f+4>>2]=o+(i>Q(-0)?i:Q(-0));N[f>>2]=n+(h>Q(-0)?h:Q(-0));g=Q(Q(t*Q(Y(Q(Q(k*k)+Q(Q(l*l)+Q(m*m))))))*Q(1));N[e>>2]=N[e>>2]-g;N[e+4>>2]=N[e+4>>2]-g;N[e+8>>2]=N[e+8>>2]-g;N[f>>2]=g+N[f>>2];N[f+4>>2]=g+N[f+4>>2];N[f+8>>2]=g+N[f+8>>2]}function Tx(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29088]){Oa(29072);H[29088]=1}e=ga-16|0;ga=e;J[e+12>>2]=J[b+28>>2];a=J[e+12>>2];N[e+8>>2]=Xf(a);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=e+8;f=J[c+12>>2];N[c+4>>2]=Q(1)/N[J[c+8>>2]>>2];a=ga-32|0;ga=a;J[a+28>>2]=f;J[a+24>>2]=c+4;d=ga-16|0;f=J[a+28>>2];J[d+12>>2]=f;N[a+20>>2]=N[J[d+12>>2]>>2]*N[J[a+24>>2]>>2];d=ga-16|0;J[d+12>>2]=f;N[a+16>>2]=N[J[d+12>>2]+4>>2]*N[J[a+24>>2]>>2];d=ga-16|0;J[d+12>>2]=f;N[a+12>>2]=N[J[d+12>>2]+8>>2]*N[J[a+24>>2]>>2];N[a+8>>2]=N[f+12>>2]*N[J[a+24>>2]>>2];he(b+8|0,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+32|0;ga=c+16|0;ga=e+16|0;a=J[b+12>>2];J[7268]=J[b+8>>2];J[7269]=a;a=J[b+20>>2];J[7270]=J[b+16>>2];J[7271]=a;ga=b+32|0;return 29072}function qg(a,b){var c=0,d=0;c=ga-144|0;ga=c;Bd(a);H[a+500|0]=1;J[a>>2]=20740;J[a+496>>2]=0;J[a+488>>2]=0;J[a+492>>2]=0;J[c+72>>2]=0;J[c+4>>2]=0;N[c>>2]=0;d=J[b+12>>2];J[c+84>>2]=J[b+8>>2];J[c+88>>2]=d;d=J[b>>2];b=J[b+4>>2];J[c+12>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+24>>2]=0;J[c+28>>2]=1065353216;J[c+32>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+48>>2]=1065353216;J[c+52>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;J[c+76>>2]=d;J[c+80>>2]=b;J[c+132>>2]=1008981770;J[c+136>>2]=1008981770;J[c+124>>2]=1000593162;J[c+128>>2]=1008981770;H[c+120|0]=0;J[c+116>>2]=1065353216;J[c+108>>2]=0;J[c+112>>2]=1061997773;J[c+100>>2]=1056964608;J[c+104>>2]=0;J[c+92>>2]=0;J[c+96>>2]=0;J[c+8>>2]=1065353216;zk(a,c);ga=c+144|0}function tD(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-96|0;ga=d;e=Q(ia[J[J[a>>2]+48>>2]](a));J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);i=N[d+24>>2];j=N[d+8>>2];f=N[d+16>>2];g=N[d>>2];k=N[d+20>>2];l=N[d+4>>2];J[c+12>>2]=0;b=Q(b*Q(.0833333283662796));f=Q(e+Q(Q(g-f)*Q(.5)));f=Q(f+f);f=Q(f*f);g=Q(e+Q(Q(l-k)*Q(.5)));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(e+Q(Q(j-i)*Q(.5)));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function KE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);i=N[d+24>>2];j=N[d+8>>2];f=N[d+16>>2];g=N[d>>2];k=N[d+20>>2];l=N[d+4>>2];e=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(b*Q(.0833333283662796));f=Q(e+Q(Q(g-f)*Q(.5)));f=Q(f+f);f=Q(f*f);g=Q(e+Q(Q(l-k)*Q(.5)));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(e+Q(Q(j-i)*Q(.5)));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function OE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=0,g=0,h=0,i=Q(0),j=0,k=Q(0),l=0,m=Q(0),n=0,o=0,p=Q(0);f=ga-16|0;if((d|0)>0){while(1){i=Q(N[a+60>>2]*Q(.5));j=J[a+64>>2];o=l<<4;g=o+b|0;e=N[g+8>>2];h=J[a+68>>2]<<2;m=Q(e*e);e=N[g>>2];k=Q(e*e);e=N[g+4>>2];a:{b:{if(N[g+h>>2]>Q(N[a+52>>2]*Q(Y(Q(m+Q(k+Q(e*e))))))){J[(j<<2)+f>>2]=0;N[f+h>>2]=i;j=J[a+72>>2];break b}n=j<<2;e=N[g+n>>2];j=J[a+72>>2];k=N[g+(j<<2)>>2];p=Q(Y(Q(Q(e*e)+Q(k*k))));if(p>Q(1.1920928955078125e-7)){m=e;e=Q(N[a+56>>2]/p);N[f+n>>2]=m*e;N[f+h>>2]=-i;i=Q(k*e);break a}J[f+n>>2]=0;N[f+h>>2]=-i}i=Q(0)}N[(j<<2)+f>>2]=i;h=J[f+12>>2];g=c+o|0;J[g+8>>2]=J[f+8>>2];J[g+12>>2]=h;h=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=h;l=l+1|0;if((l|0)!=(d|0)){continue}break}}}function zc(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);h=J[a+4>>2];if(h){ub(h,b,c)}a=J[a>>2];if(a){l=N[a+220>>2];m=N[a+212>>2];n=N[a+216>>2];o=N[a+204>>2];p=N[a+196>>2];q=N[a+200>>2];r=N[a+188>>2];s=N[a+184>>2];t=N[a+180>>2];i=N[c+4>>2];j=N[c+8>>2];k=N[c>>2];d=N[b+8>>2];e=N[b+4>>2];g=N[b>>2];f=N[a+128>>2];N[a+276>>2]=Q(g*f)+N[a+276>>2];N[a+280>>2]=Q(f*e)+N[a+280>>2];N[a+284>>2]=Q(f*d)+N[a+284>>2];J[a+312>>2]=J[a+312>>2]+1;f=Q(Q(k*e)-Q(g*i));e=Q(Q(i*d)-Q(e*j));d=Q(Q(j*g)-Q(d*k));N[a+292>>2]=Q(Q(r*f)+Q(Q(t*e)+Q(s*d)))+N[a+292>>2];N[a+296>>2]=Q(Q(o*f)+Q(Q(p*e)+Q(d*q)))+N[a+296>>2];N[a+300>>2]=Q(Q(l*f)+Q(Q(m*e)+Q(d*n)))+N[a+300>>2]}}function jw(a){a=a|0;var b=0,c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];if(a){b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;a:{b:{b=J[a+12>>2];c:{if(!(K[a+16|0]?b:0)){J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;break c}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+16|0]=1;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!b){break c}if(K[a+36|0]){break b}}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+36|0]=1;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+12>>2];if(!b|!K[a+16|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;Ec(a)}ga=c+16|0}function Nx(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga-32|0;ga=a;J[a+24>>2]=J[d+12>>2];J[a+20>>2]=b;f=J[a+24>>2];c=Q(bc(f)*bc(J[a+20>>2]));b=ga-16|0;N[b+12>>2]=c;N[a+16>>2]=Y(N[b+12>>2]);a:{if(ac(f,J[a+20>>2])<Q(0)){b=ga-32|0;ga=b;J[b+28>>2]=J[a+20>>2];J[b+24>>2]=J[b+28>>2];e=ga-16|0;J[e+12>>2]=J[b+24>>2];N[b+20>>2]=-N[J[e+12>>2]>>2];J[e+12>>2]=J[b+24>>2];N[b+16>>2]=-N[J[e+12>>2]+4>>2];J[e+12>>2]=J[b+24>>2];N[b+12>>2]=-N[J[e+12>>2]+8>>2];N[b+8>>2]=-N[J[b+24>>2]+12>>2];he(a,b+20|0,b+16|0,b+12|0,b+8|0);ga=b+32|0;c=wc(Q(ac(f,a)/N[a+16>>2]));N[a+28>>2]=c+c;break a}c=wc(Q(ac(f,J[a+20>>2])/N[a+16>>2]));N[a+28>>2]=c+c}ga=a+32|0;ga=d+16|0;return Q(N[a+28>>2])}function pE(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=Q(0);d=ga-96|0;ga=d;c=N[b>>2];e=N[b+4>>2];f=N[b+8>>2];H[a+84|0]=1;J[a+24>>2]=0;N[a+20>>2]=R(f);N[a+16>>2]=R(e);N[a+12>>2]=R(c);if(!K[29728]){J[7409]=0;J[7410]=0;J[7408]=1065353216;J[7411]=0;J[7412]=0;J[7414]=0;J[7415]=0;J[7413]=1065353216;J[7416]=0;J[7417]=0;J[7421]=0;J[7422]=0;J[7420]=-1082130432;J[7418]=1065353216;J[7419]=0;J[7423]=0;J[7424]=0;J[7426]=0;J[7427]=0;J[7425]=-1082130432;J[7428]=0;J[7429]=0;J[7430]=-1082130432;J[7431]=0;H[29728]=1}b=qa(d,0,96);ia[J[J[a>>2]+76>>2]](a,29632,b,6);c=N[a+44>>2];N[a+68>>2]=c+N[b>>2];N[a+52>>2]=N[b+48>>2]-c;N[a+72>>2]=c+N[b+20>>2];N[a+56>>2]=N[b+68>>2]-c;N[a+76>>2]=c+N[b+40>>2];N[a+60>>2]=N[b+88>>2]-c;ga=b+96|0}function qa(a,b,c){var d=0,e=0,f=0;a:{if(!c){break a}H[a|0]=b;e=a+c|0;H[e-1|0]=b;if(c>>>0<3){break a}H[a+2|0]=b;H[a+1|0]=b;H[e-3|0]=b;H[e-2|0]=b;if(c>>>0<7){break a}H[a+3|0]=b;H[e-4|0]=b;if(c>>>0<9){break a}e=0-a&3;f=e+a|0;d=P(b&255,16843009);J[f>>2]=d;b=c-e&-4;c=b+f|0;J[c-4>>2]=d;if(b>>>0<9){break a}J[f+8>>2]=d;J[f+4>>2]=d;J[c-8>>2]=d;J[c-12>>2]=d;if(b>>>0<25){break a}J[f+24>>2]=d;J[f+20>>2]=d;J[f+16>>2]=d;J[f+12>>2]=d;J[c-16>>2]=d;J[c-20>>2]=d;J[c-24>>2]=d;J[c-28>>2]=d;c=b;b=f&4|24;c=c-b|0;if(c>>>0<32){break a}d=jI(d,0,1,1);e=ha;b=b+f|0;while(1){J[b+24>>2]=d;J[b+28>>2]=e;J[b+16>>2]=d;J[b+20>>2]=e;J[b+8>>2]=d;J[b+12>>2]=e;J[b>>2]=d;J[b+4>>2]=e;b=b+32|0;c=c-32|0;if(c>>>0>31){continue}break}}return a}function eH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=ga-96|0;ga=c;b=J[b>>2];a:{if((b|0)==J[a+4>>2]){break a}d=J[a+12>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}d=J[a+4>>2];e=J[d+192>>2];J[c+88>>2]=-1;J[c+92>>2]=-1;J[c+84>>2]=d+4;J[c+80>>2]=d;J[c+76>>2]=e;J[c+72>>2]=0;d=J[b+192>>2];J[c+64>>2]=-1;J[c+68>>2]=-1;J[c+60>>2]=b+4;J[c+56>>2]=b;J[c+52>>2]=d;J[c+48>>2]=0;b=J[J[a+8>>2]+24>>2];b=ia[J[J[b>>2]+8>>2]](b,c+72|0,c+48|0,0)|0;if(!b){break a}e=J[a+12>>2];d=c+8|0;f=c+48|0;J[d+12>>2]=f;g=c+72|0;J[d+8>>2]=g;J[d+4>>2]=0;J[d>>2]=11524;J[c+40>>2]=e;J[c+8>>2]=8460;ia[J[J[b>>2]+8>>2]](b,g,f,J[a+8>>2]+28|0,d);ia[J[J[b>>2]>>2]](b)|0;a=J[J[a+8>>2]+24>>2];ia[J[J[a>>2]+60>>2]](a,b)}ga=c+96|0;return 1}function fk(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=0;c=ga-32|0;ga=c;d=J[b+388>>2];g=(d&J[a+388>>2]&48)-16|0;a:{if(g){if((g|0)!=16){break a}if(d&64?0:(a|0)==(b|0)){break a}J[c+20>>2]=0;J[c+4>>2]=1065353216;J[c>>2]=21712;N[c+8>>2]=N[a+456>>2];d=J[a+192>>2];e=Q(ia[J[J[d>>2]+48>>2]](d));d=J[b+192>>2];N[c+12>>2]=e+Q(ia[J[J[d>>2]+48>>2]](d));e=N[b+316>>2];f=N[a+316>>2];J[c+28>>2]=b;J[c+24>>2]=a;N[c+16>>2]=e>f?f:e;jg(J[a+1048>>2],J[b+1048>>2],c);break a}if((a|0)==(b|0)){break a}J[c>>2]=21796;d=J[a+192>>2];e=Q(ia[J[J[d>>2]+48>>2]](d));d=J[b+192>>2];f=Q(ia[J[J[d>>2]+48>>2]](d));J[c+8>>2]=b;J[c+4>>2]=a;N[c+12>>2]=e+f;jg(J[a+928>>2],J[b+988>>2],c);J[c+8>>2]=a;J[c+4>>2]=b;jg(J[b+928>>2],J[a+988>>2],c)}ga=c+32|0}function vC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=ga-128|0;ga=e;ia[J[J[a>>2]+112>>2]](a);f=J[c+12>>2];J[e+104>>2]=J[c+8>>2];J[e+108>>2]=f;f=J[c+4>>2];J[e+96>>2]=J[c>>2];J[e+100>>2]=f;c=J[d+12>>2];J[e+120>>2]=J[d+8>>2];J[e+124>>2]=c;c=J[d+4>>2];J[e+112>>2]=J[d>>2];J[e+116>>2]=c;J[e+84>>2]=0;H[e+88|0]=1;J[e+76>>2]=0;J[e+80>>2]=0;Il(a+68|0,e+96|0,e+72|0);d=J[e+76>>2];if(d){c=J[a+172>>2];J[e+64>>2]=1008981770;while(1){d=d-1|0;f=d<<2;h=J[f+J[e+84>>2]>>2];g=ia[J[J[a>>2]+84>>2]](a)|0;ia[J[J[g>>2]+20>>2]](g,h,e);ia[J[J[b>>2]+8>>2]](b,e,c,J[J[e+84>>2]+f>>2]);if(d){continue}break}}ia[J[J[a>>2]+116>>2]](a);a=J[e+84>>2];if(!(a?!a|!K[e+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=e+128|0}function nt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(1388);cl(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);b=a+1309|0;H[b|0]=0;H[b+1|0]=0;H[b+2|0]=0;H[b+3|0]=0;J[a+4>>2]=9;J[a>>2]=19604;b=a+1313|0;H[b|0]=0;H[b+1|0]=0;b=a+1316|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1324|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1332|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1340|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1348|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1356|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1380|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;b=a+1372|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[a+1364>>2]=1065353216;J[a+1368>>2]=1065353216;ga=f+32|0;return a|0}function _e(a){a=a|0;var b=0;J[a>>2]=12132;b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=0;H[a+164|0]=1;J[a+152>>2]=0;J[a+156>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;return a|0}function tz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0;j=J[a+732>>2];if((j|0)>0){p=J[a+740>>2];while(1){d=P(i,52)+p|0;e=N[d+24>>2];a:{if(!(e>Q(0))){break a}g=N[d+28>>2];a=J[d+12>>2];d=J[d+8>>2];k=N[d+16>>2];c=Q(N[a+16>>2]-k);l=N[d+8>>2];f=Q(N[a+8>>2]-l);m=N[d+12>>2];h=Q(N[a+12>>2]-m);n=Q(Q(c*c)+Q(Q(f*f)+Q(h*h)));o=Q(g+n);if(!(o>Q(1.1920928955078125e-7))){break a}g=Q(Q(Q(g-n)/Q(e*o))*b);e=Q(g*N[d+88>>2]);N[d+16>>2]=k-Q(c*e);N[d+12>>2]=m-Q(h*e);N[d+8>>2]=l-Q(f*e);e=f;f=Q(g*N[a+88>>2]);N[a+8>>2]=N[a+8>>2]+Q(e*f);N[a+16>>2]=Q(c*f)+N[a+16>>2];N[a+12>>2]=Q(h*f)+N[a+12>>2]}i=i+1|0;if((j|0)!=(i|0)){continue}break}}}function Ak(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=J[a+8>>2];if((d|0)>0){while(1){c=J[J[a+16>>2]+(e<<2)>>2];if(K[c+236|0]&2){d=(g=b,h=ia[J[J[c>>2]+16>>2]](c)|0,i=1,f=J[J[b>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);i=b,h=d,g=ia[J[J[c>>2]+20>>2]](c,J[d+8>>2],b)|0,j=1497645650,k=c,f=J[J[b>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);d=J[a+8>>2]}e=e+1|0;if((d|0)>(e|0)){continue}break}}if(J[a+212>>2]>0){e=0;while(1){c=J[J[a+220>>2]+(e<<2)>>2];d=(k=b,j=ia[J[J[c>>2]+36>>2]](c)|0,g=1,f=J[J[b>>2]+16>>2],ia[f](k|0,j|0,g|0)|0);g=b,j=d,k=ia[J[J[c>>2]+40>>2]](c,J[d+8>>2],b)|0,h=1397641027,i=c,f=J[J[b>>2]+20>>2],ia[f](g|0,j|0,k|0,h|0,i|0);e=e+1|0;if((e|0)<J[a+212>>2]){continue}break}}}function sk(a){a=a|0;var b=0;J[a>>2]=20804;b=J[a+144>>2];if(!(b?!b|!K[a+148|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+144>>2]=0;H[a+148|0]=1;J[a+136>>2]=0;J[a+140>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function Bd(a){J[a+188>>2]=0;J[a+192>>2]=0;J[a+180>>2]=0;J[a+184>>2]=1566444395;J[a+164>>2]=1065353216;J[a+168>>2]=1065353216;J[a+244>>2]=1065353216;J[a+236>>2]=1;J[a+240>>2]=0;J[a+228>>2]=0;J[a+232>>2]=0;J[a+220>>2]=0;J[a+224>>2]=1056964608;J[a+212>>2]=-1;J[a+216>>2]=1;J[a+204>>2]=1;J[a+208>>2]=-1;J[a+248>>2]=0;J[a+252>>2]=0;J[a+4>>2]=1065353216;J[a+172>>2]=1065353216;J[a+176>>2]=0;J[a>>2]=6652;J[a+196>>2]=0;J[a+200>>2]=0;J[a+256>>2]=0;J[a+260>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+44>>2]=1065353216;J[a+56>>2]=0;J[a+60>>2]=0;J[a- -64>>2]=0}function Pu(){var a=0;a=ra(772);J[a>>2]=1025;J[a+124>>2]=0;J[a+128>>2]=0;H[a+120|0]=0;J[a+116>>2]=0;J[a+132>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;H[a+304|0]=0;J[a+300>>2]=0;J[a+316>>2]=0;J[a+320>>2]=0;J[a+324>>2]=0;J[a+328>>2]=0;J[a+332>>2]=0;J[a+336>>2]=0;J[a+492>>2]=0;J[a+496>>2]=0;H[a+488|0]=0;J[a+484>>2]=0;J[a+500>>2]=0;J[a+504>>2]=0;J[a+508>>2]=0;J[a+512>>2]=0;J[a+516>>2]=0;J[a+520>>2]=0;H[a+672|0]=0;J[a+668>>2]=0;J[a+676>>2]=0;J[a+680>>2]=0;J[a+684>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+704>>2]=0;J[a+748>>2]=0;J[a+768>>2]=0;J[a+740>>2]=0;J[a+744>>2]=0;return a|0}function wp(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=0;i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=b;m=J[i+12>>2];b=J[i+8>>2];a=ga+-64|0;ga=a;J[a+56>>2]=0;J[a+60>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;e=N[b+12>>2];g=N[b+8>>2];c=N[b>>2];d=N[b+4>>2];J[a+44>>2]=0;J[a+28>>2]=0;j=Q(Q(2)/Q(Q(e*e)+Q(Q(g*g)+Q(Q(c*c)+Q(d*d)))));k=Q(g*j);f=Q(d*k);h=Q(c*j);l=Q(e*h);N[a+36>>2]=f+l;N[a+24>>2]=f-l;f=Q(c*h);h=d;d=Q(d*j);j=Q(h*d);N[a+40>>2]=Q(1)-Q(f+j);g=Q(g*k);N[a+20>>2]=Q(1)-Q(f+g);J[a+12>>2]=0;f=Q(c*k);h=Q(e*d);N[a+32>>2]=f-h;c=Q(c*d);e=Q(e*k);N[a+16>>2]=c+e;N[a+8>>2]=f+h;N[a+4>>2]=c-e;N[a>>2]=Q(1)-Q(j+g);mg(m,a);ga=a- -64|0;ga=i+16|0}function me(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=J[e+12>>2];b=J[e+4>>2];h=J[e>>2];a=ga-96|0;ga=a;c=J[e+8>>2];f=J[c+192>>2];J[a+88>>2]=-1;J[a+92>>2]=-1;J[a+84>>2]=c+4;J[a+80>>2]=c;J[a+76>>2]=f;J[a+72>>2]=0;c=J[b+192>>2];J[a+64>>2]=-1;J[a+68>>2]=-1;J[a+60>>2]=b+4;J[a+56>>2]=b;J[a+52>>2]=c;J[a+48>>2]=0;b=J[d+24>>2];b=ia[J[J[b>>2]+8>>2]](b,a+72|0,a+48|0,0)|0;if(b){c=a+8|0;f=a+48|0;J[c+12>>2]=f;g=a+72|0;J[c+8>>2]=g;J[c+4>>2]=0;J[c>>2]=11524;J[a+40>>2]=h;J[a+8>>2]=8460;ia[J[J[b>>2]+8>>2]](b,g,f,d+28|0,c);ia[J[J[b>>2]>>2]](b)|0;c=J[d+24>>2];ia[J[J[c>>2]+60>>2]](c,b)}ga=a+96|0;ga=e+16|0}function UB(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);a=ga-80|0;ga=a;k=N[e+52>>2];l=N[f+52>>2];m=N[e+56>>2];n=N[f+56>>2];o=N[e+48>>2];p=N[f+48>>2];J[a+76>>2]=0;N[a+64>>2]=p-o;N[a+72>>2]=n-m;N[a+68>>2]=l-k;b=Eg(c,e,d,f,a- -64|0,a+8|0,1);a:{if(!b){if(!wl(c,e,d,f,a- -64|0,a+8|0)){break a}}c=J[a+16>>2];J[h>>2]=J[a+12>>2];J[h+4>>2]=c;c=J[a+24>>2];J[h+8>>2]=J[a+20>>2];J[h+12>>2]=c;c=J[a+40>>2];J[i+8>>2]=J[a+36>>2];J[i+12>>2]=c;c=J[a+32>>2];J[i>>2]=J[a+28>>2];J[i+4>>2]=c;c=J[a+56>>2];J[g+8>>2]=J[a+52>>2];J[g+12>>2]=c;c=J[a+48>>2];J[g>>2]=J[a+44>>2];J[g+4>>2]=c}ga=a+80|0;return b|0}function ym(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));j=N[b+52>>2];h=N[b+20>>2];m=N[b+24>>2];k=N[b+56>>2];i=N[b+36>>2];n=N[a+32>>2];f=N[b+40>>2];g=N[a+36>>2];l=N[b+48>>2];o=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];r=N[b+16>>2];s=N[b+32>>2];t=N[a+28>>2];J[c+12>>2]=0;g=Q(e+g);u=Q(g*Q(R(f)));f=Q(e+t);e=Q(e+n);i=Q(u+Q(Q(f*Q(R(s)))+Q(e*Q(R(i)))));N[c+8>>2]=k-i;h=Q(Q(g*Q(R(m)))+Q(Q(f*Q(R(r)))+Q(e*Q(R(h)))));N[c+4>>2]=j-h;e=Q(Q(g*Q(R(q)))+Q(Q(f*Q(R(o)))+Q(e*Q(R(p)))));N[c>>2]=l-e;J[d+12>>2]=0;N[d+8>>2]=k+i;N[d+4>>2]=h+j;N[d>>2]=e+l}function hI(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);e=J[a- -64>>2];a=J[a+4>>2];a:{if(a){k=N[a>>2];if(e){d=N[a+24>>2];f=N[e+24>>2];f=d>f?d:f;d=N[a+20>>2];g=N[e+20>>2];g=d>g?d:g;d=N[a+8>>2];h=N[e+8>>2];h=d<h?d:h;d=N[a+4>>2];i=N[e+4>>2];i=d<i?d:i;d=N[a+16>>2];j=N[e+16>>2];j=d>j?d:j;d=N[e>>2];k=d>k?k:d;break a}l=N[a+28>>2];f=N[a+24>>2];g=N[a+20>>2];j=N[a+16>>2];d=N[a+12>>2];h=N[a+8>>2];i=N[a+4>>2];break a}if(!e){break a}l=N[e+28>>2];f=N[e+24>>2];g=N[e+20>>2];j=N[e+16>>2];d=N[e+12>>2];h=N[e+8>>2];i=N[e+4>>2];k=N[e>>2]}N[b+12>>2]=d;N[b+8>>2]=h;N[b+4>>2]=i;N[b>>2]=k;N[c+12>>2]=l;N[c+8>>2]=f;N[c+4>>2]=g;N[c>>2]=j}function RH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0);d=ga-80|0;ga=d;e=J[J[a>>2]>>2];f=J[J[a+4>>2]>>2];a:{if(!(ia[J[J[b>>2]+24>>2]](b,e,f)|0)){break a}g=J[e+192>>2];J[d+72>>2]=-1;J[d+76>>2]=-1;J[d+68>>2]=e+4;J[d+64>>2]=e;J[d+60>>2]=g;J[d+56>>2]=0;g=J[f+192>>2];J[d+48>>2]=-1;J[d+52>>2]=-1;J[d+44>>2]=f+4;J[d+40>>2]=f;J[d+36>>2]=g;J[d+32>>2]=0;if(!J[a+8>>2]){b=ia[J[J[b>>2]+8>>2]](b,d+56|0,d+32|0,0)|0;J[a+8>>2]=b;if(!b){break a}}J[d+12>>2]=d+32;J[d+8>>2]=d+56;J[d+4>>2]=0;J[d>>2]=11524;a=J[a+8>>2];if(J[c+8>>2]==1){ia[J[J[a>>2]+8>>2]](a,d+56|0,d+32|0,c,d);break a}h=Q(ia[J[J[a>>2]+12>>2]](a,e,f,c,d));if(!(h<N[c+12>>2])){break a}N[c+12>>2]=h}ga=d+80|0}function hE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);f=N[a+20>>2];g=N[a+32>>2];h=N[a+24>>2];i=N[a+28>>2];e=Q(Q(g*N[b+8>>2])+Q(Q(h*N[b>>2])+Q(i*N[b+4>>2])));if(f<e){N[a+20>>2]=e;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;f=e}e=Q(Q(g*N[b+24>>2])+Q(Q(h*N[b+16>>2])+Q(i*N[b+20>>2])));if(e>f){N[a+20>>2]=e;c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+20>>2];J[a+4>>2]=J[b+16>>2];J[a+8>>2]=c}else{e=f}f=Q(Q(g*N[b+40>>2])+Q(Q(h*N[b+32>>2])+Q(i*N[b+36>>2])));if(e<f){N[a+20>>2]=f;c=J[b+44>>2];J[a+12>>2]=J[b+40>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+4>>2]=J[b+32>>2];J[a+8>>2]=c}}function eF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;g=d- -64|0;J[g>>2]=0;J[g+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);h=N[d+8>>2];i=N[d+24>>2];e=Q(h-i);m=Q(e*e);e=N[d>>2];j=N[d+16>>2];f=Q(e-j);n=Q(f*f);f=N[d+4>>2];k=N[d+20>>2];l=Q(f-k);N[c>>2]=Q(Y(Q(m+Q(n+Q(l*l)))))*Q(.5);J[b+12>>2]=0;N[b+8>>2]=Q(h+i)*Q(.5);N[b+4>>2]=Q(f+k)*Q(.5);N[b>>2]=Q(e+j)*Q(.5);ga=d+96|0}function JC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);f=N[a+84>>2];g=N[a+96>>2];h=N[a+88>>2];i=N[a+92>>2];e=Q(Q(g*N[b+8>>2])+Q(Q(h*N[b>>2])+Q(i*N[b+4>>2])));if(f<e){N[a+84>>2]=e;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;f=e}e=Q(Q(g*N[b+24>>2])+Q(Q(h*N[b+16>>2])+Q(i*N[b+20>>2])));if(e>f){N[a+84>>2]=e;c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+20>>2];J[a+4>>2]=J[b+16>>2];J[a+8>>2]=c}else{e=f}f=Q(Q(g*N[b+40>>2])+Q(Q(h*N[b+32>>2])+Q(i*N[b+36>>2])));if(e<f){N[a+84>>2]=f;c=J[b+44>>2];J[a+12>>2]=J[b+40>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+4>>2]=J[b+32>>2];J[a+8>>2]=c}}function vx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;a=J[e+8>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[e+12>>2];J[b+24>>2]=a;a=b+8|0;f=J[b+28>>2];wa(a,f,J[b+24>>2]+48|0);jb(f+48|0,a);c=J[b+24>>2];a=ga-48|0;ga=a;J[a+44>>2]=f;J[a+40>>2]=c;c=J[a+44>>2];N[a+36>>2]=oc(J[a+40>>2],c);N[a+32>>2]=nc(J[a+40>>2],c);N[a+28>>2]=mc(J[a+40>>2],c);d=c+16|0;N[a+24>>2]=oc(J[a+40>>2],d);N[a+20>>2]=nc(J[a+40>>2],d);N[a+16>>2]=mc(J[a+40>>2],d);d=c+32|0;N[a+12>>2]=oc(J[a+40>>2],d);N[a+8>>2]=nc(J[a+40>>2],d);N[a+4>>2]=mc(J[a+40>>2],d);ld(c,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0,a+4|0);ga=a+48|0;ga=b+32|0;ga=e+16|0;return f|0}function Cg(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);i=N[c+24>>2];e=N[b+24>>2];l=Q(i-e);j=N[c+16>>2];g=N[b+16>>2];m=Q(j-g);f=N[a+4>>2];o=N[a>>2];k=N[c+20>>2];h=N[b+20>>2];n=Q(k-h);p=N[a+8>>2];a=Q(Q(e*Q(Q(m*f)-Q(o*n)))+Q(Q(g*Q(Q(n*p)-Q(f*l)))+Q(h*Q(Q(l*o)-Q(p*m)))))<Q(0);if(a){f=Q(Q(e*e)+Q(Q(g*g)+Q(h*h)));a:{if(Q(Q(e*l)+Q(Q(g*m)+Q(h*n)))>Q(0)){break a}f=Q(Q(i*i)+Q(Q(j*j)+Q(k*k)));if(Q(Q(i*l)+Q(Q(j*m)+Q(k*n)))<Q(0)){break a}f=Q(Q(Q(e*e)+Q(Q(g*g)+Q(h*h)))*Q(Q(i*i)+Q(Q(j*j)+Q(k*k))));e=Q(Q(e*i)+Q(Q(g*j)+Q(k*h)));e=Q(Q(f-Q(e*e))/Q(Q(l*l)+Q(Q(m*m)+Q(n*n))));f=e>Q(0)?e:Q(0)}N[d>>2]=Y(f)}return a}function Wl(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=15728;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;e=J[a+28>>2];if((e|0)>0){while(1){b=J[a+36>>2]+P(c,36)|0;d=J[b+12>>2];if(!(d?!d|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function rj(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=ga-96|0;ga=d;J[d+92>>2]=a;J[d+88>>2]=b;m=J[d+88>>2];b=ga-16|0;ga=b;h=d+40|0;J[b+12>>2]=h;J[b+8>>2]=m;e=ga-16|0;c=J[b+8>>2];J[e+12>>2]=c;n=J[e+12>>2];g=ga-16|0;e=c+16|0;J[g+12>>2]=e;o=J[g+12>>2];i=ga-16|0;g=c+32|0;J[i+12>>2]=g;i=J[i+12>>2];j=ga-16|0;J[j+12>>2]=c;j=J[j+12>>2]+4|0;k=ga-16|0;J[k+12>>2]=e;k=J[k+12>>2]+4|0;l=ga-16|0;J[l+12>>2]=g;l=J[l+12>>2]+4|0;f=ga-16|0;J[f+12>>2]=c;c=J[f+12>>2]+8|0;f=ga-16|0;J[f+12>>2]=e;e=J[f+12>>2]+8|0;f=ga-16|0;J[f+12>>2]=g;qf(h,n,o,i,j,k,l,c,e,J[f+12>>2]+8|0);ga=b+16|0;b=d+8|0;$b(b,m+48|0);c=d+24|0;wa(c,h,b);Vf(a,h,c);ga=d+96|0}function Sx(a){a=a|0;var b=0,c=0,d=0,e=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29108]){J[(ga-16|0)+12>>2]=29092;H[29108]=1}d=b+8|0;a=ga-48|0;ga=a;J[a+44>>2]=J[b+28>>2];c=J[a+44>>2];N[a+40>>2]=Q(Q(-N[c+12>>2])*N[c+12>>2])+Q(1);a:{if(N[a+40>>2]<Q(11920928955078125e-22)){N[a+36>>2]=1;N[a+32>>2]=0;N[a+28>>2]=0;na(d,a+36|0,a+32|0,a+28|0);break a}e=ga-16|0;N[e+12>>2]=N[a+40>>2];N[a+24>>2]=Q(1)/Q(Y(N[e+12>>2]));N[a+20>>2]=N[c>>2]*N[a+24>>2];N[a+16>>2]=N[c+4>>2]*N[a+24>>2];N[a+12>>2]=N[c+8>>2]*N[a+24>>2];na(d,a+20|0,a+16|0,a+12|0)}ga=a+48|0;a=J[b+12>>2];J[7273]=J[b+8>>2];J[7274]=a;a=J[b+20>>2];J[7275]=J[b+16>>2];J[7276]=a;ga=b+32|0;return 29092}function Bl(a){a=a|0;var b=0,c=0,d=0;J[a>>2]=18016;b=J[a+152>>2];a:{if(!b){break a}c=b;b:{if(!(b&1)){break b}c=b-1|0;d=J[J[a+160>>2]+(c<<2)>>2];if(!d){break b}ia[J[J[d>>2]+4>>2]](d)}if((b|0)==1){break a}while(1){b=J[(J[a+160>>2]+(c<<2)|0)-4>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}c=c-2|0;b=J[J[a+160>>2]+(c<<2)>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}if(c){continue}break}}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=0;H[a+164|0]=1;J[a+152>>2]=0;J[a+156>>2]=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function Jd(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0);g=Q(N[c+8>>2]-N[a+16>>2]);h=N[a+48>>2];f=Q(Q(N[c+4>>2]-N[a+12>>2])*N[a+44>>2]);e=Q(Q(N[c>>2]-N[a+8>>2])*N[a+40>>2]);c=d;a:{if(e<=Q(0)){break a}c=L[a+6>>1];if(e>=Q(c>>>0)){c=c&L[a+4>>1]|d;break a}if(e<Q(4294967296)&e>=Q(0)){c=~~e>>>0}else{c=0}c=c&L[a+4>>1]|d}e=Q(g*h);I[b>>1]=c;c=d;b:{if(f<=Q(0)){break b}c=L[a+6>>1];if(Q(c>>>0)<=f){c=c&L[a+4>>1]|d;break b}if(f<Q(4294967296)&f>=Q(0)){c=~~f>>>0}else{c=0}c=c&L[a+4>>1]|d}I[b+2>>1]=c;if(!(e<=Q(0))){c=L[a+6>>1];if(e>=Q(c>>>0)){I[b+4>>1]=c&L[a+4>>1]|d;return}if(e<Q(4294967296)&e>=Q(0)){c=~~e>>>0}else{c=0}d=c&L[a+4>>1]|d}I[b+4>>1]=d}function jo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;H[d+23|0]=c;a=J[d+28>>2];N[a+4>>2]=N[J[d+24>>2]+40>>2];J[a+76>>2]=J[J[d+24>>2]>>2];a:{if(H[d+23|0]&1){b=J[d+24>>2];c=J[b+12>>2];J[a+44>>2]=J[b+8>>2];J[a+48>>2]=c;c=J[b+20>>2];J[a+52>>2]=J[b+16>>2];J[a+56>>2]=c;break a}b=ga-16|0;J[b+12>>2]=J[a+76>>2];J[b+12>>2]=J[b+12>>2]+4;wa(d,J[b+12>>2],J[d+24>>2]+8|0);b=J[d+4>>2];J[a+44>>2]=J[d>>2];J[a+48>>2]=b;b=J[d+12>>2];J[a+52>>2]=J[d+8>>2];J[a+56>>2]=b}b=J[d+24>>2];c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;ga=d+32|0;return Q(N[J[d+24>>2]+40>>2])}function Bz(a,b){a=a|0;b=Q(b);var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0;i=J[a+732>>2];if((i|0)>0){o=J[a+740>>2];while(1){c=P(h,52)+o|0;d=J[c+8>>2];f=N[d+48>>2];g=N[c+44>>2];a=J[c+12>>2];j=N[c+36>>2];k=N[d+40>>2];l=N[d+44>>2];m=N[c+40>>2];n=Q(Q(N[c+32>>2]*Q(-Q(Q(g*Q(f-N[a+48>>2]))+Q(Q(j*Q(k-N[a+40>>2]))+Q(Q(l-N[a+44>>2])*m)))))*b);e=Q(N[d+88>>2]*n);N[d+48>>2]=f+Q(g*e);N[d+44>>2]=l+Q(m*e);N[d+40>>2]=k+Q(j*e);f=N[c+44>>2];g=N[c+40>>2];e=Q(n*N[a+88>>2]);N[a+40>>2]=N[a+40>>2]-Q(N[c+36>>2]*e);N[a+44>>2]=N[a+44>>2]-Q(e*g);N[a+48>>2]=N[a+48>>2]-Q(e*f);h=h+1|0;if((i|0)!=(h|0)){continue}break}}}function ZE(a){a=a|0;var b=Q(0),c=0,d=0,e=0,f=0;c=ga-32|0;ga=c;J[a+48>>2]=-581039253;J[a+52>>2]=-581039253;J[a+32>>2]=1566444395;J[a+36>>2]=1566444395;J[a+56>>2]=-581039253;J[a+60>>2]=0;J[a+40>>2]=1566444395;J[a+44>>2]=0;if(J[a+16>>2]>0){while(1){e=J[a+24>>2]+P(d,80)|0;f=J[e+64>>2];ia[J[J[f>>2]+8>>2]](f,e,c+16|0,c);b=N[c+16>>2];if(b<N[a+32>>2]){N[a+32>>2]=b}b=N[c>>2];if(b>N[a+48>>2]){N[a+48>>2]=b}b=N[c+20>>2];if(b<N[a+36>>2]){N[a+36>>2]=b}b=N[c+4>>2];if(b>N[a+52>>2]){N[a+52>>2]=b}b=N[c+24>>2];if(b<N[a+40>>2]){N[a+40>>2]=b}b=N[c+8>>2];if(b>N[a+56>>2]){N[a+56>>2]=b}d=d+1|0;if((d|0)<J[a+16>>2]){continue}break}}ga=c+32|0}function Hz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0);c=ga-48|0;ga=c;if(J[a+136>>2]>0){while(1){g=P(f,284);d=g+J[a+144>>2]|0;e=K[d+84|0];J[c+44>>2]=0;J[c+36>>2]=0;J[c+40>>2]=1065353216;N[c+32>>2]=e?Q(0):Q(1);e=J[d+152>>2];J[c+24>>2]=J[d+148>>2];J[c+28>>2]=e;e=J[d+144>>2];J[c+16>>2]=J[d+140>>2];J[c+20>>2]=e;d=d+(J[a+120>>2]<<2)|0;h=N[d+92>>2];i=N[d+108>>2];j=N[d+124>>2];J[c+12>>2]=0;N[c+8>>2]=j+N[c+24>>2];N[c+4>>2]=i+N[c+20>>2];N[c>>2]=h+N[c+16>>2];d=c+16|0;e=c+32|0;ia[J[J[b>>2]+8>>2]](b,d,c,e);ia[J[J[b>>2]+8>>2]](b,d,(J[a+144>>2]+g|0)+16|0,e);f=f+1|0;if((f|0)<J[a+136>>2]){continue}break}}ga=c+48|0}function ot(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(1388);bl(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);b=a+1309|0;H[b|0]=0;H[b+1|0]=0;H[b+2|0]=0;H[b+3|0]=0;J[a+4>>2]=9;J[a>>2]=19604;b=a+1313|0;H[b|0]=0;H[b+1|0]=0;b=a+1316|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1324|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1332|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1340|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1348|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1356|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1380|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;b=a+1372|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[a+1364>>2]=1065353216;J[a+1368>>2]=1065353216;ga=d+16|0;return a|0}function On(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;a=J[e+44>>2]+16|0;b=ga-16|0;J[b+12>>2]=e;J[b+8>>2]=a;c=J[b+8>>2];d=J[c+4>>2];a=J[b+12>>2];J[a>>2]=J[c>>2];J[a+4>>2]=d;d=J[c+12>>2];J[a+8>>2]=J[c+8>>2];J[a+12>>2]=d;b=J[b+8>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;Gh(e,J[e+40>>2]);b=J[e+4>>2];a=J[e+36>>2];J[a>>2]=J[e>>2];J[a+4>>2]=b;b=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=b;b=J[e+20>>2];a=J[e+32>>2];J[a>>2]=J[e+16>>2];J[a+4>>2]=b;b=J[e+28>>2];J[a+8>>2]=J[e+24>>2];J[a+12>>2]=b;ga=e+48|0}function gl(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);f=Ha(c);e=N[b+444>>2];c=Ga(c);a:{if(!(Q(R(f))>Q(1.1920928955078125e-7))){h=Q(f*f);break a}h=Q(f*f);g=Q(Q(c*c)/h);i=Q(g/Q(e*e));e=N[b+448>>2];e=Q(Y(Q(Q(g+Q(1))/Q(i+Q(Q(1)/Q(e*e))))))}J[a+12>>2]=0;e=Q(e*Q(.5));g=Q(Ga(e)/Q(Y(Q(Q(c*c)+Q(h+Q(0))))));c=Q(g*Q(-c));e=Ha(e);i=Q(e*Q(0));h=Q(g*Q(0));j=Q(h*Q(0));k=Q(Q(i+Q(c*d))-j);f=Q(f*g);g=Q(Q(i+j)-Q(f*d));j=Q(c*Q(-0));i=Q(j+Q(Q(f*Q(-0))-Q(h*d)));d=Q(j+Q(Q(e*d)+Q(f*Q(0))));N[a+8>>2]=Q(k*h)+Q(Q(Q(e*g)-Q(i*c))-Q(d*f));N[a+4>>2]=Q(d*c)+Q(Q(Q(e*k)-Q(i*f))-Q(g*h));N[a>>2]=Q(g*f)+Q(Q(Q(e*d)-Q(i*h))-Q(k*c))}function _p(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;if(!K[29424]){gi(29328);H[29424]=1}b=J[e+8>>2];a=ga-16|0;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;b=J[J[a+12>>2]+12>>2]+P(J[a+8>>2],96)|0;ga=a;J[a+12>>2]=29328;J[a+8>>2]=b;c=J[a+8>>2];d=J[c+4>>2];b=J[a+12>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;J[b+24>>2]=J[c+24>>2];d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;tg(b+28|0,J[a+8>>2]+28|0);c=J[a+8>>2];d=J[c+80>>2];J[b+76>>2]=J[c+76>>2];J[b+80>>2]=d;J[b+92>>2]=J[c+92>>2];d=J[c+88>>2];J[b+84>>2]=J[c+84>>2];J[b+88>>2]=d;ga=a+16|0;ga=e+16|0;return 29328}function XE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);e=N[d+24>>2];i=N[d+8>>2];b=Q(b/Q(12));f=Q(Q(N[d>>2]-N[d+16>>2])*Q(.5));f=Q(f+f);f=Q(f*f);g=Q(Q(N[d+4>>2]-N[d+20>>2])*Q(.5));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(Q(i-e)*Q(.5));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function sD(a,b){a=a|0;b=b|0;var c=Q(0),d=0;d=ga-96|0;ga=d;Ve(a,b);H[a+88|0]=1;if(!K[29840]){J[7437]=0;J[7438]=0;J[7436]=1065353216;J[7439]=0;J[7440]=0;J[7442]=0;J[7443]=0;J[7441]=1065353216;J[7444]=0;J[7445]=0;J[7449]=0;J[7450]=0;J[7448]=-1082130432;J[7446]=1065353216;J[7447]=0;J[7451]=0;J[7452]=0;J[7454]=0;J[7455]=0;J[7453]=-1082130432;J[7456]=0;J[7457]=0;J[7458]=-1082130432;J[7459]=0;H[29840]=1}b=qa(d,0,96);ia[J[J[a>>2]+76>>2]](a,29744,b,6);c=N[a+44>>2];N[a+72>>2]=c+N[b>>2];N[a+56>>2]=N[b+48>>2]-c;N[a+76>>2]=c+N[b+20>>2];N[a+60>>2]=N[b+68>>2]-c;N[a+80>>2]=c+N[b+40>>2];N[a- -64>>2]=N[b+88>>2]-c;ga=b+96|0}function Zw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);var f=0,g=0,h=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;N[f+12>>2]=e;d=ua(44);b=J[f+28>>2];c=J[f+24>>2];g=J[f+20>>2];h=J[f+16>>2];e=N[f+12>>2];a=ga-32|0;J[a+28>>2]=d;J[a+24>>2]=b;J[a+20>>2]=c;J[a+16>>2]=g;J[a+12>>2]=h;N[a+8>>2]=e;b=J[a+28>>2];J[b>>2]=J[a+24>>2];J[b+4>>2]=J[a+20>>2];c=J[a+16>>2];g=J[c+4>>2];J[b+8>>2]=J[c>>2];J[b+12>>2]=g;g=J[c+12>>2];J[b+16>>2]=J[c+8>>2];J[b+20>>2]=g;c=J[a+12>>2];g=J[c+4>>2];J[b+24>>2]=J[c>>2];J[b+28>>2]=g;g=J[c+12>>2];J[b+32>>2]=J[c+8>>2];J[b+36>>2]=g;N[b+40>>2]=N[a+8>>2];ga=f+32|0;return d|0}function Lv(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;b=N[e+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];N[a+8>>2]=b;b=N[a+8>>2];c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;c=J[c+12>>2];N[c>>2]=N[c>>2]-b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+4>>2]=N[c+4>>2]-b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+8>>2]=N[c+8>>2]-b;b=N[a+8>>2];c=ga-16|0;d=d+16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c>>2]=N[c>>2]+b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+4>>2]=N[c+4>>2]+b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;d=J[c+12>>2];N[d+8>>2]=N[d+8>>2]+b;ga=a+16|0;ga=e+16|0}function zh(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=P(J[d+8>>2],36);J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;Ah(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Bh(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function di(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=P(J[d+8>>2],96);J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;xh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Sh(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=J[d+8>>2]<<4;J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;Oh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Sb(a){var b=0,c=Q(0);b=ga-96|0;ga=b;H[a+88|0]=1;if(!K[29840]){J[7437]=0;J[7438]=0;J[7436]=1065353216;J[7439]=0;J[7440]=0;J[7442]=0;J[7443]=0;J[7441]=1065353216;J[7444]=0;J[7445]=0;J[7449]=0;J[7450]=0;J[7448]=-1082130432;J[7446]=1065353216;J[7447]=0;J[7451]=0;J[7452]=0;J[7454]=0;J[7455]=0;J[7453]=-1082130432;J[7456]=0;J[7457]=0;J[7458]=-1082130432;J[7459]=0;H[29840]=1}b=qa(b,0,96);ia[J[J[a>>2]+76>>2]](a,29744,b,6);c=N[a+44>>2];N[a+72>>2]=N[b>>2]+c;N[a+56>>2]=N[b+48>>2]-c;N[a+76>>2]=c+N[b+20>>2];N[a+60>>2]=N[b+68>>2]-c;N[a+80>>2]=c+N[b+40>>2];N[a- -64>>2]=N[b+88>>2]-c;ga=b+96|0}function kd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;b=J[e+8>>2];c=J[e+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;c=J[a+8>>2];d=J[c+4>>2];b=J[a+12>>2];J[b+164>>2]=J[c>>2];J[b+168>>2]=d;d=J[c+12>>2];J[b+172>>2]=J[c+8>>2];J[b+176>>2]=d;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=1;a:{if(N[J[d+12>>2]>>2]!=Q(1)){break a}d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=1;if(N[J[d+12>>2]+4>>2]!=Q(1)){break a}c=ga-16|0;J[c+12>>2]=J[a+8>>2];c=N[J[c+12>>2]+8>>2]!=Q(1)}H[a+3|0]=c;if(H[a+3|0]&1){c=J[a+4>>2]}else{c=0}J[b+180>>2]=c;ga=a+16|0;ga=e+16|0}function Yw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(80);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;c=ga-16|0;a=J[b+12>>2];J[c+12>>2]=a;c=J[c+12>>2];J[c>>2]=1952;N[c+4>>2]=1;I[c+8>>1]=1;I[c+10>>1]=65535;J[a>>2]=1812;c=J[b+8>>2];d=J[c+4>>2];J[a+12>>2]=J[c>>2];J[a+16>>2]=d;d=J[c+12>>2];J[a+20>>2]=J[c+8>>2];J[a+24>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+28>>2]=J[c>>2];J[a+32>>2]=d;d=J[c+12>>2];J[a+36>>2]=J[c+8>>2];J[a+40>>2]=d;J[(ga-16|0)+12>>2]=a+44;J[(ga-16|0)+12>>2]=a+60;J[a+76>>2]=0;ga=b+16|0;ga=e+16|0;return f|0}function Mp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;b=0;c=J[e+12>>2];f=J[c+752>>2];if((f|0)>0){a=J[c+720>>2];g=a+P(J[e>>2],104)|0;h=a+P(J[e+4>>2],104)|0;i=a+P(J[e+8>>2],104)|0;c=J[c+760>>2];a=0;b=1;while(1){a:{j=P(a,44)+c|0;d=J[j+8>>2];b:{if(!((d|0)==(g|0)|(d|0)==(i|0))&(d|0)!=(h|0)){break b}d=J[j+12>>2];if(!((d|0)==(g|0)|(d|0)==(i|0))&(d|0)!=(h|0)){break b}d=J[j+16>>2];if((d|0)==(g|0)|(d|0)==(i|0)|(d|0)==(h|0)){break a}}a=a+1|0;b=(f|0)>(a|0);if((a|0)!=(f|0)){continue}}break}}ga=e+16|0;return b&1}function mh(a){var b=0,c=0,d=0,e=0,f=0;H[a+28|0]=0;J[a+24>>2]=0;J[a+72>>2]=0;H[a+20|0]=1;J[a>>2]=6004;J[a+16>>2]=0;H[a+48|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+44>>2]=0;H[a+68|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;J[a- -64>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;J[8369]=J[8369]+1;e=ia[J[6782]](32,16)|0;f=J[a+8>>2];if((f|0)>0){while(1){c=d<<4;b=c+e|0;c=c+J[a+16>>2]|0;J[b>>2]=J[c>>2];J[b+4>>2]=J[c+4>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=J[c+12>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=e;H[a+20|0]=1;J[a+12>>2]=2;an(a)}function Rm(a,b,c,d,e){a=a|0;b=b|0;c=Q(c);d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0);f=ga-48|0;ga=f;J[f+44>>2]=e;J[f+40>>2]=d;j=N[a- -64>>2];k=N[a+60>>2];l=N[a+80>>2];m=N[a+72>>2];n=N[a+76>>2];o=N[a+96>>2];p=N[a+88>>2];q=N[a+92>>2];r=N[a+56>>2];g=N[b+8>>2];h=N[b>>2];i=N[b+4>>2];b=J[a+48>>2];J[f+28>>2]=0;N[f+24>>2]=Q(o*g)+Q(Q(p*h)+Q(i*q));N[f+20>>2]=Q(l*g)+Q(Q(m*h)+Q(i*n));N[f+32>>2]=c;J[f+8>>2]=b;N[f+16>>2]=Q(j*g)+Q(Q(r*h)+Q(k*i));J[f+12>>2]=f+40;a=J[a+44>>2];c=Q(ia[J[J[a>>2]+12>>2]](a,f+8|0,1));ga=f+48|0;return Q(c)}function gy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e);return}h=K[b+53|0];g=J[a+12>>2];H[b+53|0]=0;i=K[b+52|0];H[b+52|0]=0;j=a+16|0;_f(j,b,c,d,e,f);k=K[b+53|0];h=h|k;l=K[b+52|0];i=i|l;a:{if((g|0)<2){break a}j=j+(g<<3)|0;g=a+24|0;while(1){if(K[b+54|0]){break a}b:{if(l){if(J[b+24>>2]==1){break a}if(K[a+8|0]&2){break b}break a}if(!k){break b}if(!(H[a+8|0]&1)){break a}}I[b+52>>1]=0;_f(g,b,c,d,e,f);k=K[b+53|0];h=k|h;l=K[b+52|0];i=l|i;g=g+8|0;if(j>>>0>g>>>0){continue}break}}H[b+53|0]=(h&255)!=0;H[b+52|0]=(i&255)!=0}function Yx(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;b=J[d+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[d+12>>2];J[a+40>>2]=b;J[a+36>>2]=d+4;b=J[a+44>>2];N[a+32>>2]=sf(J[a+40>>2]);N[a+28>>2]=Sa(Q(N[J[a+36>>2]>>2]*Q(.5)))/N[a+32>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+24>>2]=N[J[e+12>>2]>>2]*N[a+28>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+20>>2]=N[J[e+12>>2]+4>>2]*N[a+28>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+16>>2]=N[J[e+12>>2]+8>>2]*N[a+28>>2];N[a+12>>2]=Ta(Q(N[J[a+36>>2]>>2]*Q(.5)));xc(b,a+24|0,a+20|0,a+16|0,a+12|0);ga=a+48|0;ga=d+16|0}function gE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);f=N[a+36>>2];d=N[a+32>>2];i=N[a+28>>2];j=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(d+Q(ia[J[J[a>>2]+48>>2]](a)));k=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(b*Q(.5));g=Q(b*Q(.25));h=Q(b/Q(12));b=Q(j+i);a:{b:{switch(J[a+52>>2]){case 0:f=e;e=Q(d*d);d=Q(f*e);b=Q(Q(h*Q(b*Q(b*Q(4))))+Q(g*e));e=b;break a;case 2:b=Q(b*b);e=Q(e*b);d=Q(k+f);d=Q(Q(h*Q(d*Q(d*Q(4))))+Q(g*b));b=d;break a;default:break b}}f=e;e=Q(b*b);b=Q(f*e);d=Q(Q(h*Q(d*Q(d*Q(4))))+Q(g*e));e=d}J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=b;N[c>>2]=d}function sb(a){var b=0;b=J[a>>2];if(b){Gd(a,b)}b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=0;J[a+8>>2]=-1;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];a:{if(!(K[a+56|0]?b:0)){J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+56|0]=1;J[a+52>>2]=0;J[a+44>>2]=0;J[a+48>>2]=0;b=J[a+32>>2];if(!b|!K[a+36|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0}function KC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0;a:{f=N[b>>2];g=N[b+16>>2];i=f<g?f:g;h=N[b+32>>2];if(N[a+24>>2]<(h>i?i:h)){break a}e=!(f>g)<<4;if(N[(h<N[b+e>>2]?e:32)+b>>2]<N[a+8>>2]){break a}f=N[b+8>>2];e=b+24|0;g=N[e>>2];i=f<g?f:g;j=b+40|0;h=N[j>>2];if(N[a+32>>2]<(h>i?i:h)){break a}e=f>g?b+8|0:e;if(N[(h<N[e>>2]?e:j)>>2]<N[a+16>>2]){break a}f=N[b+4>>2];e=b+20|0;g=N[e>>2];i=f<g?f:g;j=b+36|0;h=N[j>>2];if(N[a+28>>2]<(h>i?i:h)){break a}e=f>g?b+4|0:e;if(N[(h<N[e>>2]?e:j)>>2]<N[a+12>>2]){break a}a=J[a+4>>2];ia[J[J[a>>2]+8>>2]](a,b,c,d)}}function Ri(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];N[a>>2]=N[f+24>>2];J[a+4>>2]=J[f+20>>2];d=a+8|0;Pb(d);J[a+72>>2]=J[f+16>>2];c=J[f+12>>2];e=J[c+4>>2];J[a+76>>2]=J[c>>2];J[a+80>>2]=e;e=J[c+12>>2];J[a+84>>2]=J[c+8>>2];J[a+88>>2]=e;N[a+92>>2]=0;N[a+96>>2]=0;N[a+100>>2]=.5;N[a+104>>2]=0;N[a+108>>2]=0;N[a+112>>2]=.800000011920929;N[a+116>>2]=1;H[a+120|0]=0;N[a+124>>2]=.004999999888241291;N[a+128>>2]=.009999999776482582;N[a+132>>2]=.009999999776482582;N[a+136>>2]=.009999999776482582;de(d);ga=f+32|0}function Ll(a){a=a|0;var b=0;J[a>>2]=16776;b=J[a+156>>2];if(!(b?!b|!K[a+160|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+156>>2]=0;H[a+160|0]=1;J[a+148>>2]=0;J[a+152>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;Ol(a);return a|0}function po(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;H[d+23|0]=c;a=J[d+28>>2];N[a+4>>2]=N[J[d+24>>2]+24>>2];J[a+8>>2]=J[J[d+24>>2]>>2];a:{if(H[d+23|0]&1){b=J[d+24>>2];c=J[b+12>>2];J[a+52>>2]=J[b+8>>2];J[a+56>>2]=c;c=J[b+20>>2];J[a+60>>2]=J[b+16>>2];J[a+64>>2]=c;break a}b=ga-16|0;J[b+12>>2]=J[a+8>>2];J[b+12>>2]=J[b+12>>2]+4;wa(d,J[b+12>>2],J[d+24>>2]+8|0);b=J[d+4>>2];J[a+52>>2]=J[d>>2];J[a+56>>2]=b;b=J[d+12>>2];J[a+60>>2]=J[d+8>>2];J[a+64>>2]=b}Wh(a+68|0,a+20|0,a+36|0,N[J[d+24>>2]+24>>2]);ga=d+32|0;return Q(N[J[d+24>>2]+24>>2])}function Hv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga+-64|0;ga=a;J[a+60>>2]=J[d+12>>2];J[a+56>>2]=b;b=J[a+60>>2];wb(a+40|0,J[a+56>>2],b+56|0);c=J[a+44>>2];J[b+56>>2]=J[a+40>>2];J[b+60>>2]=c;c=J[a+52>>2];J[b+64>>2]=J[a+48>>2];J[b+68>>2]=c;c=b+56|0;wb(a+24|0,J[a+56>>2],c+16|0);e=J[a+28>>2];J[b+72>>2]=J[a+24>>2];J[b+76>>2]=e;e=J[a+36>>2];J[b+80>>2]=J[a+32>>2];J[b+84>>2]=e;wb(a+8|0,J[a+56>>2],c+32|0);c=J[a+12>>2];J[b+88>>2]=J[a+8>>2];J[b+92>>2]=c;c=J[a+20>>2];J[b+96>>2]=J[a+16>>2];J[b+100>>2]=c;ga=a- -64|0;ga=d+16|0}function hf(a){a=a|0;var b=0;J[a>>2]=5460;if(J[a+108>>2]){b=J[a+112>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+112>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+88>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+84>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+80>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+60>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(K[a+100|0]){b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function BE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0);h=J[b+96>>2];if((h|0)>0){i=N[b+12>>2];f=Q(N[c>>2]*i);j=N[b+20>>2];g=Q(N[c+8>>2]*j);k=N[b+16>>2];n=Q(N[c+4>>2]*k);l=J[b+104>>2];b=0;c=-1;e=Q(-3.4028234663852886e38);while(1){d=(b<<4)+l|0;m=Q(Q(N[d+8>>2]*g)+Q(Q(N[d>>2]*f)+Q(n*N[d+4>>2])));d=m>e;e=d?m:e;c=d?b:c;b=b+1|0;if((h|0)!=(b|0)){continue}break}b=(c<<4)+l|0;e=N[b>>2];f=N[b+4>>2];g=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=j*g;N[a+4>>2]=k*f;N[a>>2]=i*e;return}J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0}function Ku(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;f=ga-16|0;ga=f;J[f+12>>2]=a;a=ua(5260);b=J[f+12>>2];J[a+4>>2]=2;J[a+5256>>2]=b;J[a+60>>2]=228;H[a+24|0]=1;J[a>>2]=6484;J[a+20>>2]=0;J[a+28>>2]=11524;J[a+12>>2]=0;J[a+16>>2]=0;J[a+64>>2]=ia[J[J[b>>2]+12>>2]](b);J[a+68>>2]=ia[J[J[b>>2]+8>>2]](b);while(1){b=0;while(1){d=(a+P(c,144)|0)+72|0;e=J[a+5256>>2];J[d+(b<<2)>>2]=ia[J[J[e>>2]+16>>2]](e,c,b);e=b|1;g=d+(e<<2)|0;d=J[a+5256>>2];J[g>>2]=ia[J[J[d>>2]+16>>2]](d,c,e);b=b+2|0;if((b|0)!=36){continue}break}c=c+1|0;if((c|0)!=36){continue}break}ga=f+16|0;return a|0}function pp(a,b){a=a|0;b=Q(b);var c=Q(0),d=0,e=Q(0),f=0,g=0,h=0,i=0,j=0,k=0;f=ga-16|0;ga=f;J[f+12>>2]=a;N[f+8>>2]=b;b=N[f+8>>2];a=0;g=J[f+12>>2];h=J[g+732>>2];a:{if((h|0)<=0){break a}i=J[g+740>>2];c=N[g+1228>>2];if((h|0)!=1){k=h&-2;while(1){d=P(a,52)+i|0;e=Q(Q(N[d+16>>2]/c)*b);N[d+16>>2]=e;N[d+28>>2]=e*e;d=P(a|1,52)+i|0;e=Q(Q(N[d+16>>2]/c)*b);N[d+16>>2]=e;N[d+28>>2]=e*e;a=a+2|0;j=j+2|0;if((k|0)!=(j|0)){continue}break}}if(!(h&1)){break a}a=P(a,52)+i|0;c=Q(Q(N[a+16>>2]/c)*b);N[a+16>>2]=c;N[a+28>>2]=c*c}N[g+1228>>2]=b;if(J[g+216>>2]==2){kb(g,0)}ga=f+16|0}function wv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;f=ua(68);a=J[d+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;a=J[b+12>>2];J[a>>2]=0;c=ga-16|0;J[c+12>>2]=a;J[J[c+12>>2]>>2]=4988;J[a>>2]=5020;J[(ga-16|0)+12>>2]=a+12;J[a+8>>2]=J[J[b+8>>2]+8>>2];J[a+28>>2]=J[J[b+8>>2]+28>>2];N[a+4>>2]=N[J[b+8>>2]+4>>2];c=J[b+8>>2];e=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=e;e=J[c+24>>2];J[a+20>>2]=J[c+20>>2];J[a+24>>2]=e;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;ga=b+16|0;ga=d+16|0;return f|0}function iy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(Ya(a,J[b>>2],e)){if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+32>>2]=d;b:{if(J[b+44>>2]==4){break b}I[b+52>>1]=0;a=J[a+8>>2];ia[J[J[a>>2]+20>>2]](a,b,c,c,1,e);if(K[b+53|0]){J[b+44>>2]=3;if(!K[b+52|0]){break b}break a}J[b+44>>2]=4}J[b+20>>2]=c;J[b+40>>2]=J[b+40>>2]+1;if(J[b+36>>2]!=1|J[b+24>>2]!=2){break a}H[b+54|0]=1;return}a=J[a+8>>2];ia[J[J[a>>2]+24>>2]](a,b,c,d,e)}}function ZD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0);e=ga-16|0;ga=e;ia[J[J[b>>2]+68>>2]](e,b,c);h=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=h;h=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=h;if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){f=N[c+4>>2];d=N[c>>2];g=N[c+8>>2];i=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(g*g)+Q(Q(d*d)+Q(f*f)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;j=d;g=b?Q(-1):g;f=b?Q(-1):f;d=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(d*d)+Q(f*f))))));N[a>>2]=N[a>>2]+Q(i*Q(j*d));N[a+4>>2]=N[a+4>>2]+Q(i*Q(f*d));N[a+8>>2]=N[a+8>>2]+Q(i*Q(g*d))}ga=e+16|0}function Np(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;ga=d+16|0;a=1;e=J[d+12>>2];h=J[e+732>>2];b=0;a:{if((h|0)<=0){break a}f=J[e+720>>2];c=f+P(J[d+4>>2],104)|0;i=J[e+740>>2];b=J[i+12>>2];g=J[i+8>>2];e=f+P(J[d+8>>2],104)|0;if(!((g|0)==(e|0)&(b|0)==(c|0)|(c|0)==(g|0)&(b|0)==(e|0))){while(1){b:{b=a;if((b|0)==(h|0)){break b}a=P(b,52)+i|0;f=J[a+12>>2];g=J[a+8>>2];if((g|0)==(e|0)&(c|0)==(f|0)){break b}a=b+1|0;if((c|0)!=(g|0)|(e|0)!=(f|0)){continue}}break}a=(b|0)<(h|0)}b=a}return b&1}function Em(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=(b|0)!=8;if(!(d|(c|0)!=8)){return J[a+60>>2]}if(!((c|0)!=1|d)){return J[a+76>>2]}if(!((b|0)!=1|(c|0)!=8)){return J[a+80>>2]}if(!(b|c)){return J[a+72>>2]}if(!((c|0)!=28|(b|0)>19)){return J[a+88>>2]}if(!((b|0)!=28|(c|0)>19)){return J[a+84>>2]}a:{if((b|0)<=19){if((c|0)<=19){return J[a+32>>2]}if(c-21>>>0>8){break a}return J[a+36>>2]}if(!((c|0)>19|b-21>>>0>8)){return J[a+40>>2]}if((b|0)!=31){break a}if((c|0)==31){return J[a+48>>2]}return J[a+44>>2]}if((c|0)==31){return J[a+52>>2]}return J[a+56>>2]}function PE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=0,i=0,j=Q(0),k=Q(0);e=Q(N[b+60>>2]*Q(.5));g=J[b+64>>2];i=J[b+68>>2];h=i<<2;d=N[c+8>>2];j=Q(d*d);d=N[c>>2];f=Q(d*d);d=N[c+4>>2];a:{b:{if(N[h+c>>2]>Q(N[b+52>>2]*Q(Y(Q(j+Q(f+Q(d*d))))))){J[(g<<2)+a>>2]=0;N[a+h>>2]=e;c=J[b+72>>2];break b}d=N[(g<<2)+c>>2];h=c;c=J[b+72>>2];f=N[h+(c<<2)>>2];k=Q(Y(Q(Q(d*d)+Q(f*f))));if(k>Q(1.1920928955078125e-7)){j=d;d=Q(N[b+56>>2]/k);N[(g<<2)+a>>2]=j*d;N[(i<<2)+a>>2]=-e;e=Q(f*d);break a}J[(g<<2)+a>>2]=0;N[(i<<2)+a>>2]=-e}e=Q(0)}N[(c<<2)+a>>2]=e}function Uq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ua(152);b=J[d+8>>2];c=J[d+4>>2];J[a+104>>2]=0;J[a+100>>2]=c;H[a+20|0]=1;J[a>>2]=20804;J[a+16>>2]=0;H[a+40|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+36>>2]=0;H[a+60|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;J[a+56>>2]=0;H[a+80|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;J[a+76>>2]=0;H[a+148|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+144>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+128>>2]=1;J[a+120>>2]=0;J[a+124>>2]=2;J[a+116>>2]=b;J[a+108>>2]=0;J[a+112>>2]=0;ga=d+16|0;return a|0}function Ch(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;b=ga-16|0;a=J[d+28>>2];J[b+12>>2]=a;J[d+16>>2]=J[J[b+12>>2]+4>>2];a:{if(J[d+24>>2]<J[d+16>>2]){J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+16>>2]){J[d+12>>2]=J[d+12>>2]+1;continue}break}break a}b=J[d+24>>2];c=ga-16|0;J[c+12>>2]=a;if(J[J[c+12>>2]+4>>2]<(b|0)){Th(a,J[d+24>>2])}J[d+8>>2]=J[d+16>>2];while(1){if(J[d+8>>2]<J[d+24>>2]){J[J[a+12>>2]+(J[d+8>>2]<<2)>>2]=J[J[d+20>>2]>>2];J[d+8>>2]=J[d+8>>2]+1;continue}break}}J[a+4>>2]=J[d+24>>2];ga=d+32|0}function FA(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{b:{c:{switch(b-2|0){case 0:if((d|0)<=0){d=a+232|0;b=512;break b}if(d>>>0<=2){d=a+264|0;b=32;break b}if((d|0)==3){d=a+248|0;b=2048;break b}if(d>>>0>5){break a}d=a+280|0;b=128;break b;case 1:if((d|0)<=0){d=a+212|0;b=1;break b}if((d|0)!=3){break a}d=a+228|0;b=4;break b;case 2:break c;default:break a}}if((d|0)<=0){d=a+244|0;b=256;break b}if(d>>>0<=2){d=a+276|0;b=16;break b}if((d|0)==3){d=a+260|0;b=1024;break b}if(d>>>0>5){break a}d=a+292|0;b=64}N[d>>2]=c;J[a+300>>2]=b|J[a+300>>2]}}function Uh(a,b){var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=ga-16|0;a=J[d+12>>2];J[b+12>>2]=a;J[d+4>>2]=J[J[b+12>>2]+4>>2];b=J[d+4>>2];c=ga-16|0;J[c+12>>2]=a;if(J[J[c+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;c=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=c;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}Sh(a,b)}c=J[a+12>>2]+(J[a+4>>2]<<4)|0;b=ga-16|0;J[b+12>>2]=16;J[b+8>>2]=c;c=J[d+8>>2];e=J[c+4>>2];b=J[b+8>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[a+4>>2]=J[a+4>>2]+1;ga=d+16|0}function Yl(a){H[a+60|0]=0;J[a+52>>2]=282;J[a+144>>2]=0;H[a+80|0]=1;J[a>>2]=12132;J[a+76>>2]=0;H[a+100|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;H[a+164|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;J[a+160>>2]=0;J[a+168>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;J[a+4>>2]=-8388609;J[a+8>>2]=-8388609;J[a+12>>2]=-8388609;J[a+16>>2]=0;J[a+20>>2]=2139095039;J[a+24>>2]=2139095039;J[a+28>>2]=2139095039;J[a+32>>2]=0;J[a>>2]=15400;return a}function tn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=J[a+108>>2];if(!e){g=L[a+56>>1];if(g){e=1;h=1;while(1){f=J[a+68>>2]+(e<<2)|0;a:{if(!(H[f|0]&1)){break a}f=J[a+60>>2]+(L[f+2>>1]<<6)|0;e=0;b:{if(N[b>>2]>N[f+32>>2]){break b}e=0;if(N[c>>2]<N[f+16>>2]){break b}e=1}if((N[c+8>>2]<N[f+24>>2]|N[b+8>>2]>N[f+40>>2]?i:e)^1|N[c+4>>2]<N[f+20>>2]|N[b+4>>2]>N[f+36>>2]){break a}ia[J[J[d>>2]+8>>2]](d,f)|0;g=L[a+56>>1]}h=h+1|0;e=h&65535;if(e>>>0<(g<<1|1)>>>0){continue}break}}return}ia[J[J[e>>2]+28>>2]](e,b,c,d)}function Wk(a){H[a+20|0]=1;J[a>>2]=19884;J[a+16>>2]=0;H[a+40|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+36>>2]=0;H[a+60|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;J[a+56>>2]=0;H[a+80|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;J[a+76>>2]=0;H[a+100|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;H[a+160|0]=1;J[a+156>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;H[a+180|0]=1;J[a+192>>2]=0;J[a+176>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0}function EA(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);d=Q(3.4028234663852886e38);a:{b:{switch(b-2|0){case 0:if((c|0)<=0){return Q(N[a+232>>2])}if(c>>>0<=2){return Q(N[a+264>>2])}if((c|0)==3){return Q(N[a+248>>2])}if(c>>>0>5){break a}return Q(N[a+280>>2]);case 1:if((c|0)<=0){return Q(N[a+212>>2])}if((c|0)!=3){break a}return Q(N[a+228>>2]);case 2:break b;default:break a}}if((c|0)<=0){return Q(N[a+244>>2])}if(c>>>0<=2){return Q(N[a+276>>2])}if((c|0)==3){return Q(N[a+260>>2])}if(c>>>0>5){break a}d=N[a+292>>2]}return Q(d)}function Db(a,b,c){var d=0;d=J[a+4>>2];a:{if(d){J[a+4>>2]=0;break a}J[8369]=J[8369]+1;d=ia[J[6782]](44,16)|0;J[d>>2]=0;J[d+4>>2]=0;J[d+40>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0}J[d+36>>2]=c;J[d+32>>2]=0;J[d+40>>2]=0;c=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=c;c=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=c;c=J[b+20>>2];J[d+16>>2]=J[b+16>>2];J[d+20>>2]=c;c=J[b+28>>2];J[d+24>>2]=J[b+24>>2];J[d+28>>2]=c;Dd(a,J[a>>2],d);J[a+12>>2]=J[a+12>>2]+1;return d}function oD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0);e=ga-16|0;ga=e;ia[J[J[b>>2]+68>>2]](e,b,c);h=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=h;h=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=h;f=N[c+4>>2];d=N[c>>2];g=N[c+8>>2];i=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(g*g)+Q(Q(d*d)+Q(f*f)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;j=d;g=b?Q(-1):g;f=b?Q(-1):f;d=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(d*d)+Q(f*f))))));N[a>>2]=N[a>>2]+Q(i*Q(j*d));N[a+4>>2]=N[a+4>>2]+Q(i*Q(f*d));N[a+8>>2]=N[a+8>>2]+Q(i*Q(g*d));ga=e+16|0}function ak(a){var b=0;b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;b=J[a+72>>2];if(!(b?!b|!K[a+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+72>>2]=0;H[a+76|0]=1;a=a- -64|0;J[a>>2]=0;J[a+4>>2]=0}function Dx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;g=ua(64);a=J[e+12>>2];b=J[e+8>>2];c=ga-16|0;ga=c;J[c+12>>2]=g;J[c+8>>2]=a;J[c+4>>2]=b;a=J[c+8>>2];d=ga-16|0;ga=d;f=J[c+12>>2];J[d+8>>2]=f;J[d+4>>2]=a;a=J[d+8>>2];J[d+12>>2]=a;h=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((h|0)!=(b|0)){continue}break}sj(a,J[d+4>>2]);ga=d+16|0;a=J[c+4>>2];b=J[a+4>>2];J[f+48>>2]=J[a>>2];J[f+52>>2]=b;b=J[a+12>>2];J[f+56>>2]=J[a+8>>2];J[f+60>>2]=b;ga=c+16|0;ga=e+16|0;return g|0}function ya(a){var b=0,c=0,d=0;d=ga-16|0;ga=d;c=J[6787];a:{if(J[c>>2]==(a|0)){b=c;break a}b=J[c+24>>2];b:{if(b){while(1){if(J[b>>2]==(a|0)){break b}b=J[b+28>>2];if(b){continue}break}}b=ua(36);J[b+4>>2]=0;J[b+8>>2]=0;J[b>>2]=a;J[b+32>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+20>>2]=c;J[b+12>>2]=0;J[b+16>>2]=0;ne(b);J[b+28>>2]=J[c+24>>2];J[c+24>>2]=b}J[6787]=b}J[b+4>>2]=J[b+4>>2]+1;a=J[b+16>>2];J[b+16>>2]=a+1;if(!a){aa(d+8|0,0)|0;a=J[8371];J[b+12>>2]=(J[d+12>>2]-J[a+4>>2]|0)+P(J[d+8>>2]-J[a>>2]|0,1e6)}ga=d+16|0}function uh(a,b,c){var d=0,e=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;c=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){a=P(J[d+12>>2],44);b=a+J[d+16>>2]|0;a=a+J[c+12>>2]|0;e=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=e;J[b+40>>2]=J[a+40>>2];e=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=e;e=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=e;e=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=e;e=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=e;J[d+12>>2]=J[d+12>>2]+1;continue}break}}function Zy(a){a=a|0;var b=0;J[a>>2]=22232;b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+96>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+96>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+100>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+100>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+104>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+104>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}af(a);return a|0}function mB(a,b){a=a|0;b=b|0;var c=0,d=0;if(K[a+1308|0]){J[b>>2]=0;J[b+4>>2]=0;return}pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);J[b>>2]=0;J[b+4>>2]=6;a:{if(!(J[a+856>>2]|K[a+788|0])){c=6;d=0;break a}J[b>>2]=1;J[b+4>>2]=5;c=5;d=1}if(K[a+789|0]?1:J[a+860>>2]){c=c-1|0;J[b+4>>2]=c;d=d+1|0;J[b>>2]=d}if(K[a+790|0]?1:J[a+864>>2]){J[b+4>>2]=c-1;J[b>>2]=d+1}if(Fe(a,0)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(Fe(a,1)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(Fe(a,2)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function rf(a,b){var c=0,d=0;d=ga-16|0;ga=d;J[d+8>>2]=a;J[d+4>>2]=b;a=J[d+8>>2];J[d+12>>2]=a;c=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((c|0)!=(b|0)){continue}break}b=J[d+4>>2];c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;b=J[d+4>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;b=J[d+4>>2];c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c;ga=d+16|0}function Yy(a){a=a|0;var b=0;J[a>>2]=22232;b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+96>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+96>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+100>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+100>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+104>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+104>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}af(a);ta(a)}function ZH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;J[7395]=J[7395]+1;d=J[b+12>>2]>J[c+12>>2];e=J[(d?b:c)+12>>2];d=J[(d?c:b)+12>>2];b=e<<16|d;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=J[a+12>>2]-1&(b>>16^b);a:{b:{if((b|0)>=J[a+36>>2]){break b}b=J[J[a+44>>2]+(b<<2)>>2];if((b|0)==-1){break b}g=J[a- -64>>2];a=J[a+16>>2];while(1){f=b<<4;c=a+f|0;if((d|0)==J[J[c>>2]+12>>2]&J[J[(a+f|0)+4>>2]+12>>2]==(e|0)){break a}b=J[(b<<2)+g>>2];if((b|0)!=-1){continue}break}}c=0}return c|0}function ox(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(84);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;a=J[b+12>>2];qj(a);J[a>>2]=1416;c=J[b+8>>2];d=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=d;d=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+36>>2]=J[c>>2];J[a+40>>2]=d;d=J[c+12>>2];J[a+44>>2]=J[c+8>>2];J[a+48>>2]=d;J[(ga-16|0)+12>>2]=a+52;J[(ga-16|0)+12>>2]=a+68;ga=b+16|0;ga=e+16|0;return f|0}function rl(a,b,c,d){var e=0,f=0;e=J[b+4>>2];J[a+292>>2]=J[b>>2];J[a+296>>2]=e;e=J[b+12>>2];J[a+300>>2]=J[b+8>>2];J[a+304>>2]=e;H[a+356|0]=1;f=J[b+4>>2];e=a+(J[a>>2]<<4)|0;J[e+4>>2]=J[b>>2];J[e+8>>2]=f;f=J[b+12>>2];J[e+12>>2]=J[b+8>>2];J[e+16>>2]=f;e=J[c+12>>2];b=(J[a>>2]<<4)+a|0;J[b+92>>2]=J[c+8>>2];J[b+96>>2]=e;e=J[c+4>>2];J[b+84>>2]=J[c>>2];J[b+88>>2]=e;c=J[d+12>>2];b=(J[a>>2]<<4)+a|0;J[b+172>>2]=J[d+8>>2];J[b+176>>2]=c;c=J[d+4>>2];J[b+164>>2]=J[d>>2];J[b+168>>2]=c;J[a>>2]=J[a>>2]+1}function mx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(132);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;a=J[b+12>>2];qj(a);J[a>>2]=1572;Mb(a+20|0);c=J[b+8>>2];d=J[c+4>>2];J[a+40>>2]=J[c>>2];J[a+44>>2]=d;d=J[c+12>>2];J[a+48>>2]=J[c+8>>2];J[a+52>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+56>>2]=J[c>>2];J[a+60>>2]=d;d=J[c+12>>2];J[a+64>>2]=J[c+8>>2];J[a+68>>2]=d;Mb(a+72|0);Mb(a+92|0);Mb(a+112|0);ga=b+16|0;ga=e+16|0;return f|0}function Nk(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;while(1){k=c;g=J[a+12>>2];l=J[g+((c+d|0)/2<<3)>>2];h=c;e=d;while(1){c=h;h=c+1|0;f=(c<<3)+g|0;if(J[f>>2]<(l|0)){continue}i=e;while(1){e=i;i=e-1|0;m=e<<3;j=m+g|0;if(J[j>>2]>(l|0)){continue}break}if((c|0)<=(e|0)){c=J[f>>2];e=J[f+4>>2];g=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=g;f=J[a+12>>2]+m|0;J[f>>2]=c;J[f+4>>2]=e;e=i;c=h}if((c|0)<=(e|0)){g=J[a+12>>2];h=c;continue}break}if((e|0)>(k|0)){Nk(a,b,k,e)}if((c|0)<(d|0)){continue}break}}function ut(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=ra(360);b=J[e+4>>2];a=J[e>>2];xb(d,3,J[e+12>>2],J[e+8>>2]);J[d>>2]=19792;c=J[b+4>>2];J[d+300>>2]=J[b>>2];J[d+304>>2]=c;c=J[b+12>>2];J[d+308>>2]=J[b+8>>2];J[d+312>>2]=c;b=J[a+4>>2];J[d+316>>2]=J[a>>2];J[d+320>>2]=b;b=J[a+12>>2];J[d+324>>2]=J[a+8>>2];J[d+328>>2]=b;J[d+356>>2]=0;J[d+348>>2]=1050253722;J[d+352>>2]=1065353216;H[d+344|0]=0;J[d+332>>2]=0;ga=e+16|0;return d|0}function RG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0);e=ga-16|0;ga=e;N[a+32>>2]=d;g=J[b+4>>2];J[a+8>>2]=J[b>>2];J[a+12>>2]=g;g=J[b+12>>2];J[a+16>>2]=J[b+8>>2];J[a+20>>2]=g;h=N[b+8>>2];i=N[c>>2];j=N[b>>2];k=N[c+4>>2];l=N[b+4>>2];m=N[c+8>>2];f=N[a+28>>2];J[e+12>>2]=0;N[e+8>>2]=m-Q(f*h);N[e+4>>2]=k-Q(f*l);N[e>>2]=i-Q(j*f);d=Q(Q(f+N[a+24>>2])+d);N[a+32>>2]=d;if(d<Q(0)){H[a+36|0]=1}a=J[a+4>>2];ia[J[J[a>>2]+16>>2]](a,b,e,d);ga=e+16|0}function MB(a,b,c){a=a|0;b=b|0;c=Q(c);var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0;H[a+171|0]=0;h=J[b+4>>2];J[a+60>>2]=J[b>>2];J[a+64>>2]=h;h=J[b+12>>2];J[a+68>>2]=J[b+8>>2];J[a+72>>2]=h;d=N[a+68>>2];e=N[a+60>>2];g=N[a- -64>>2];f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(g*g))))));d=Q(d*f);e=Q(e*f);f=Q(g*f);g=N[a+72>>2];a:{if(!(Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f)))))<Q(1.1920928955078125e-7))){break a}e=Q(0);f=Q(0);d=Q(0);g=Q(0)}N[a+76>>2]=e;N[a+88>>2]=g;N[a+84>>2]=d;N[a+80>>2]=f;N[a+172>>2]=N[a+172>>2]+c}function ho(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=ga-96|0;ga=e;J[e+92>>2]=a;J[e+88>>2]=b;J[e+84>>2]=c;J[e+80>>2]=d;b=e- -64|0;a=J[e+92>>2];wb(b,J[e+88>>2],a+56|0);c=e+48|0;d=a+56|0;wb(c,J[e+88>>2],d+16|0);f=e+32|0;wb(f,J[e+88>>2],d+32|0);aj(e,b,c,f,N[a+44>>2]);b=J[e+4>>2];a=J[e+84>>2];J[a>>2]=J[e>>2];J[a+4>>2]=b;b=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=b;b=J[e+20>>2];a=J[e+80>>2];J[a>>2]=J[e+16>>2];J[a+4>>2]=b;b=J[e+28>>2];J[a+8>>2]=J[e+24>>2];J[a+12>>2]=b;ga=e+96|0}function lo(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;i=ga-80|0;ga=i;J[i+76>>2]=a;J[i+72>>2]=b;J[i+68>>2]=c;J[i+64>>2]=d;J[i+60>>2]=e;J[i+56>>2]=f;J[i+52>>2]=g;J[i+48>>2]=h;a=J[i+76>>2];J[i+44>>2]=28648;b=J[i+44>>2];c=J[i+72>>2];d=J[i+68>>2];e=J[i+64>>2];f=J[i+60>>2];g=J[i+56>>2];h=J[i+52>>2];J[i+28>>2]=J[i+48>>2];J[i+24>>2]=h;J[i+20>>2]=g;J[i+16>>2]=f;J[i+12>>2]=e;J[i+8>>2]=d;J[i+4>>2]=c;J[i>>2]=a;j=+fa(b|0,1792,i|0);ga=i+80|0;return Q(Q(j))}function we(a,b,c){var d=Q(0),e=0,f=Q(0),g=Q(0);e=J[a+204>>2];a:{if(b==Q(0)){J[a+204>>2]=e|1;break a}J[a+204>>2]=e&-2;d=Q(Q(1)/b)}N[a+344>>2]=d;J[a+376>>2]=0;N[a+364>>2]=N[a+380>>2]*b;N[a+372>>2]=N[a+388>>2]*b;N[a+368>>2]=N[a+384>>2]*b;b=N[c+8>>2];f=N[c+4>>2];g=N[c>>2];N[a+560>>2]=N[a+348>>2]*d;N[a+564>>2]=d*N[a+352>>2];N[a+568>>2]=d*N[a+356>>2];J[a+572>>2]=0;J[a+408>>2]=0;N[a+396>>2]=g!=Q(0)?Q(Q(1)/g):Q(0);N[a+400>>2]=f!=Q(0)?Q(Q(1)/f):Q(0);N[a+404>>2]=b!=Q(0)?Q(Q(1)/b):Q(0)}function Zu(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;f=ra(168);a=J[e+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;c=J[b+12>>2];Nf(c);J[c>>2]=18016;Mb(c+148|0);J[c+144>>2]=J[b+8>>2];d=J[b+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=c;J[a+8>>2]=d;c=J[a+12>>2];J[a+4>>2]=0;while(1){d=J[a+8>>2];if(J[a+4>>2]<(ia[J[J[d>>2]+28>>2]](d)|0)){d=ra(212);Si(d,J[a+8>>2],J[a+4>>2]);J[a>>2]=d;Mf(c+148|0,a);J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=b+16|0;ga=e+16|0;return f|0}function LA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;ya(2632);ia[J[J[a>>2]+32>>2]](a,b,c,d,e,f,g,h,i);j=J[a+184>>2];k=J[h+20>>2];k=(j|0)>(k|0)?j:k;a:{if((k|0)<=0){break a}j=0;if((k|0)!=1){m=k&-2;while(1){Q(ia[J[J[a>>2]+40>>2]](a,j,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+40>>2]](a,j|1,b,c,d,e,f,g,h,i));j=j+2|0;l=l+2|0;if((m|0)!=(l|0)){continue}break}}if(!(k&1)){break a}Q(ia[J[J[a>>2]+40>>2]](a,j,b,c,d,e,f,g,h,i))}xa();return Q(Q(0))}function Im(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;J[a>>2]=9856;b=J[a+8>>2];e=J[b+8>>2];if((e|0)>0){while(1){c=J[(J[b+16>>2]+P(d,12)|0)+8>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;f=J[a+4>>2];ia[J[J[f>>2]+60>>2]](f,c)}d=d+1|0;if((e|0)!=(d|0)){continue}break}b=J[a+8>>2]}Am(b);b=J[a+8>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+8>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;return a|0}function sh(a,b,c,d){var e=0,f=0,g=0;e=ga-160|0;ga=e;J[e+156>>2]=b;J[e+152>>2]=c;N[e+148>>2]=d;b=J[e+152>>2];c=J[e+156>>2];N[e+124>>2]=Ua(b,c);g=e+128|0;Ia(g,b,e+124|0);f=e+104|0;Ma(f,c,g);b=e+88|0;J[(ga-16|0)+12>>2]=b;Ub(e+72|0,J[e+152>>2],c);c=J[e+76>>2];J[b>>2]=J[e+72>>2];J[b+4>>2]=c;c=J[e+84>>2];J[b+8>>2]=J[e+80>>2];J[b+12>>2]=c;N[e+36>>2]=Ta(N[e+148>>2]);c=e+40|0;Ia(c,f,e+36|0);f=e+56|0;va(f,g,c);N[e+12>>2]=Sa(N[e+148>>2]);c=e+16|0;Ia(c,b,e+12|0);va(a,f,c);ga=e+160|0}function kF(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=0,i=0;h=a+28|0;g=J[a+52>>2];d=N[h+((g+2|0)%3<<2)>>2];a=ga-16|0;J[a+12>>2]=0;N[a+8>>2]=d;N[a+4>>2]=d;N[a>>2]=d;g=g<<2;i=g+a|0;N[i>>2]=N[g+h>>2]+N[i>>2];d=N[a+8>>2];b=Q(b*Q(.0833333283662796));e=Q(N[a>>2]+Q(.03999999910593033));e=Q(e+e);e=Q(e*e);f=Q(N[a+4>>2]+Q(.03999999910593033));f=Q(f+f);f=Q(f*f);N[c+8>>2]=b*Q(e+f);d=Q(d+Q(.03999999910593033));d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(e+d);N[c>>2]=b*Q(f+d)}function $i(a){var b=0,c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;N[J[b+12>>2]>>2]=3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=3.4028234663852886e38;b=ga-16|0;a=a+16|0;J[b+12>>2]=a;N[J[b+12>>2]>>2]=-3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=-3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=-3.4028234663852886e38;ga=c+16|0}function Mi(a,b,c,d,e,f){var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;N[g+24>>2]=b;N[g+20>>2]=c;N[g+16>>2]=d;N[g+12>>2]=e;N[g+8>>2]=f;c=N[g+16>>2];d=N[g+12>>2];e=N[g+8>>2];a=J[g+28>>2];b=N[g+24>>2];f=Q(Q(N[g+20>>2]-b)*Q(.5));N[a+692>>2]=f;b=Pa(Q(f+b),Q(6.2831854820251465));a:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break a}if(!(b>Q(3.1415927410125732))){break a}b=Q(b+Q(-6.2831854820251465))}N[a+704>>2]=e;N[a+700>>2]=d;N[a+696>>2]=c;N[a+688>>2]=b;ga=g+32|0}function GC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=J[a+12>>2];if(f){g=J[a+4>>2];ia[J[J[g>>2]+16>>2]](g,f);J[a+12>>2]=0}f=J[a+8>>2];if(f){ia[J[J[f>>2]>>2]](f)|0;f=J[a+4>>2];ia[J[J[f>>2]+60>>2]](f,J[a+8>>2]);J[a+8>>2]=0}J[a+20>>2]=d;J[a+16>>2]=e;J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;d=J[b+4>>2];if(J[d+4>>2]==25){e=J[c+4>>2];if(J[e+4>>2]==25){Lg(a,b,c,d,e);return}ud(a,b,c,d,e,0);return}e=J[c+4>>2];if(J[e+4>>2]==25){ud(a,c,b,e,d,1)}}function lC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[c+4>>2];b=J[a+164>>2]+(b<<6)|0;J[b>>2]=J[c>>2];J[b+4>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;d=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=d;d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+44>>2];J[b+40>>2]=J[c+40>>2];J[b+44>>2]=d;d=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=d;d=J[c+52>>2];J[b+48>>2]=J[c+48>>2];J[b+52>>2]=d;d=J[c+60>>2];J[b+56>>2]=J[c+56>>2];J[b+60>>2]=d;ia[J[J[a>>2]+72>>2]](a)}function Nf(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=4660;f=a+16|0;Nd(f);g=a+52|0;J[(ga-16|0)+12>>2]=g;c=ga-16|0;ga=c;J[c+12>>2]=a+68;d=ga-16|0;ga=d;h=J[c+12>>2];J[d+12>>2]=h;e=J[d+12>>2];wf(e+4|0);Nd(e+24|0);J[(ga-16|0)+12>>2]=e+56;J[e>>2]=0;ga=d+16|0;J[h+72>>2]=0;ga=c+16|0;J[a+4>>2]=25;$i(f);H[a+48|0]=1;N[b+8>>2]=1;N[b+4>>2]=1;N[b>>2]=1;na(g,b+8|0,b+4|0,b);ga=b+16|0}function Gn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga+-64|0;ga=f;J[f+60>>2]=a;J[f+56>>2]=b;J[f+52>>2]=c;J[f+48>>2]=d;J[f+44>>2]=e;b=J[f+60>>2];a=f+8|0;Nd(a);b=ia[J[J[b>>2]+84>>2]](b)|0;ia[J[J[b>>2]+16>>2]](b,J[f+56>>2],a);Gh(a,J[f+52>>2]);c=J[a+4>>2];b=J[f+48>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c;c=J[a+20>>2];b=J[f+44>>2];J[b>>2]=J[a+16>>2];J[b+4>>2]=c;c=J[a+28>>2];J[b+8>>2]=J[a+24>>2];J[b+12>>2]=c;ga=f- -64|0}function Xi(a){var b=0,c=0;b=ga-48|0;ga=b;J[b+44>>2]=a;c=ga-16|0;a=J[b+44>>2];J[c+12>>2]=a;J[J[c+12>>2]>>2]=4988;J[a>>2]=5020;J[c+12>>2]=a+12;J[a+8>>2]=0;J[a+28>>2]=0;N[a+4>>2]=.009999999776482582;N[b+20>>2]=1;N[b+16>>2]=1;N[b+12>>2]=1;na(b+24|0,b+20|0,b+16|0,b+12|0);c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+20>>2]=J[b+32>>2];J[a+24>>2]=c;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;ga=b+48|0}function kB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;a:{b:{c:{if(d>>>0<=2){d:{switch(b-2|0){case 0:b=((d<<2)+a|0)+756|0;e=4;break b;case 2:b=((d<<2)+a|0)+772|0;e=2;break b;case 1:break d;default:break a}}b=((d<<2)+a|0)+740|0;break c}e=d-3|0;if(e>>>0>2){break a}e:{switch(b-2|0){case 0:b=((e<<6)+a|0)+900|0;e=4;break b;case 2:b=((e<<6)+a|0)+904|0;e=2;break b;case 1:break e;default:break a}}b=((e<<6)+a|0)+896|0}e=1}N[b>>2]=c;J[a+1304>>2]=J[a+1304>>2]|e<<P(d,3)}}function Sv(a,b){a=a|0;b=Q(b);var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=ra(84);d=J[c+12>>2];e=N[c+8>>2];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=16260;b=N[d+8>>2];f=N[d>>2];g=N[d+4>>2];h=N[d+12>>2];J[a+68>>2]=0;J[a+72>>2]=0;N[a+64>>2]=e;N[a+60>>2]=h;J[a+76>>2]=0;J[a+80>>2]=0;J[a+4>>2]=28;e=b;b=Q(Q(1)/Q(Y(Q(Q(b*b)+Q(Q(f*f)+Q(g*g))))));N[a+56>>2]=e*b;N[a+52>>2]=g*b;N[a+48>>2]=f*b;ga=c+16|0;return a|0}function Xm(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=6716;b=J[a+8>>2];if((b|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];d=J[e+188>>2];if(d){b=J[a+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;ia[J[J[b>>2]+40>>2]](b,d,J[a+24>>2]);b=J[a+68>>2];ia[J[J[b>>2]+12>>2]](b,d,J[a+24>>2]);J[e+188>>2]=0;b=J[a+8>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function UC(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c>>2]=13432;J[c+72>>2]=2;J[c+64>>2]=0;J[c+68>>2]=1;J[c+4>>2]=11;N[c+36>>2]=a;N[c+32>>2]=b;N[c+28>>2]=a;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function Gw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c+4>>2]=11;J[c+72>>2]=2;J[c+64>>2]=1;J[c+68>>2]=0;J[c>>2]=13632;N[c+32>>2]=a;N[c+36>>2]=a;N[c+28>>2]=b;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function Fw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c+4>>2]=11;J[c+72>>2]=1;J[c+64>>2]=0;J[c+68>>2]=2;J[c>>2]=13532;N[c+36>>2]=b;N[c+28>>2]=a;N[c+32>>2]=a;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function xx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;d=J[b+8>>2];a=ga-16|0;ga=a;f=J[b+12>>2];J[a+12>>2]=f;J[a+8>>2]=d;d=J[a+12>>2];e=J[a+8>>2];na(d,e,e+16|0,e+32|0);na(d+16|0,J[a+8>>2]+4|0,J[a+8>>2]+20|0,J[a+8>>2]+36|0);na(d+32|0,J[a+8>>2]+8|0,J[a+8>>2]+24|0,J[a+8>>2]+40|0);ga=a+16|0;na(f+48|0,J[b+8>>2]+48|0,J[b+8>>2]+52|0,J[b+8>>2]+56|0);ga=b+16|0;ga=c+16|0}function Iw(a){a=Q(a);var b=0,c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;N[d+12>>2]=a;f=ra(52);a=N[d+12>>2];c=ga-16|0;ga=c;J[c+12>>2]=f;N[c+8>>2]=a;b=J[c+12>>2];J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[b>>2]=16132;J[b+4>>2]=8;a=N[c+8>>2];e=ga-16|0;J[e+12>>2]=b+28;N[e+8>>2]=a;N[J[e+12>>2]>>2]=N[e+8>>2];N[b+44>>2]=N[c+8>>2];ga=c+16|0;ga=d+16|0;return f|0}function kl(a,b,c,d,e){J[a+176>>2]=e;J[a+60>>2]=0;J[a+64>>2]=0;J[a+56>>2]=1017370378;N[a+52>>2]=d;J[a+8>>2]=b;J[a+168>>2]=16842752;J[a+172>>2]=0;J[a+12>>2]=c;J[a+44>>2]=1105933107;J[a+48>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;H[a+180|0]=1;J[a+24>>2]=1113325568;J[a+28>>2]=1092616192;H[a+181|0]=0;H[a+182|0]=0;J[a+36>>2]=1061752795;J[a+40>>2]=1060439283;J[a+108>>2]=0;H[a+144|0]=1;J[a>>2]=19064;J[a+140>>2]=0;J[a+132>>2]=0;J[a+136>>2]=0;J[a+68>>2]=0;J[a+72>>2]=0}
  function KB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=J[b+12>>2];c=ga-16|0;d=c+8|0;J[d>>2]=J[b+8>>2];J[d+4>>2]=e;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;a=J[a+8>>2];J[a+4>>2]=1065353216;J[a+44>>2]=1065353216;J[a+48>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+260>>2]=J[a+260>>2]+1;b=J[c+4>>2];J[a+52>>2]=J[c>>2];J[a+56>>2]=b;b=J[c+12>>2];J[a+60>>2]=J[c+8>>2];J[a+64>>2]=b}function xA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;h=J[b+8>>2];if((h|0)>0){d=J[a+16>>2];j=J[b+16>>2];a=0;while(1){c=J[(e<<2)+j>>2];a:{if(!(K[c+204|0]&3)){b=a;i=b<<3;f=i+d|0;g=J[f>>2];if((b|0)!=(g|0)){while(1){b=(g<<3)+d|0;J[f>>2]=J[b>>2];b=J[b>>2];f=(b<<3)+d|0;g=J[f>>2];if((b|0)!=(g|0)){continue}break}}J[c+208>>2]=b;J[(d+i|0)+4>>2]=e;J[c+212>>2]=-1;a=a+1|0;break a}J[c+208>>2]=-1;J[c+212>>2]=-2}e=e+1|0;if((h|0)!=(e|0)){continue}break}}}function Cp(a){a=a|0;var b=Q(0),c=0,d=Q(0),e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;c=J[e+12>>2];a=J[c+712>>2];if((a|0)>0){g=a&1;c=J[c+720>>2];a:{if((a|0)==1){a=0;break a}h=a&-2;a=0;while(1){d=b;b=N[(c+P(a,104)|0)+88>>2];d=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)));b=N[(c+P(a|1,104)|0)+88>>2];b=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)));a=a+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(g){d=b;b=N[(c+P(a,104)|0)+88>>2];b=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)))}}ga=e+16|0;return Q(b)}function $n(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;c=J[e+44>>2];J[e+28>>2]=0;while(1){if(J[e+28>>2]<J[e+32>>2]){J[e+24>>2]=J[e+40>>2]+(J[e+28>>2]<<4);b=e+8|0;a=c+56|0;Vd(b,J[e+24>>2],a,a+16|0,a+32|0);a=a+(Lh(b)<<4)|0;d=J[a+4>>2];b=J[e+36>>2]+(J[e+28>>2]<<4)|0;J[b>>2]=J[a>>2];J[b+4>>2]=d;d=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=d;J[e+28>>2]=J[e+28>>2]+1;continue}break}ga=e+48|0}function mm(a,b){J[a+4>>2]=31;J[a+8>>2]=0;J[a+72>>2]=0;J[a+76>>2]=1065353216;J[a+64>>2]=0;J[a+68>>2]=1;J[a+48>>2]=-581039253;J[a+52>>2]=-581039253;J[a+32>>2]=1566444395;J[a+36>>2]=1566444395;H[a+28|0]=1;J[a>>2]=13212;J[a+24>>2]=0;J[a+88>>2]=0;J[a+80>>2]=1065353216;J[a+84>>2]=1065353216;J[a+56>>2]=-581039253;J[a+60>>2]=0;J[a+40>>2]=1566444395;J[a+44>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;if(b){J[8369]=J[8369]+1;b=ia[J[6782]](60,16)|0;jc(b);J[a+64>>2]=b}}function JB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;H[a+148|0]=0;a:{if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1}b=J[a+8>>2];c=b+52|0;d=J[c+4>>2];J[a+92>>2]=J[c>>2];J[a+96>>2]=d;c=J[b+64>>2];J[a+100>>2]=J[b+60>>2];J[a+104>>2]=c;c=J[b+52>>2];d=J[b+56>>2];e=J[b+64>>2];J[a+120>>2]=J[b+60>>2];J[a+124>>2]=e;J[a+112>>2]=c;J[a+116>>2]=d}function uF(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=Q(0);d=ia[J[J[a>>2]+28>>2]](a)|0;c=Q(N[d+8>>2]-N[b+8>>2]);e=Q(c*c);c=Q(N[d>>2]-N[b>>2]);f=Q(c*c);c=Q(N[d+4>>2]-N[b+4>>2]);if(Q(e+Q(f+Q(c*c)))>Q(1.1920928955078125e-7)){Kl(a,b);if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[8369]=J[8369]+1;b=ia[J[6782]](172,16)|0;d=Yl(b);J[a+52>>2]=b;Xl(d,J[a+48>>2],K[a+60|0],a+16|0,a+32|0);H[a+61|0]=1}}function NB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=0;H[a+171|0]=1;g=J[b+4>>2];J[a+60>>2]=J[b>>2];J[a+64>>2]=g;g=J[b+12>>2];J[a+68>>2]=J[b+8>>2];J[a+72>>2]=g;c=N[a+68>>2];d=N[a+60>>2];f=N[a- -64>>2];e=Q(Q(1)/Q(Y(Q(Q(c*c)+Q(Q(d*d)+Q(f*f))))));c=Q(c*e);d=Q(d*e);e=Q(f*e);f=N[a+72>>2];a:{if(!(Q(Y(Q(Q(c*c)+Q(Q(d*d)+Q(e*e)))))<Q(1.1920928955078125e-7))){break a}d=Q(0);e=Q(0);c=Q(0);f=Q(0)}N[a+76>>2]=d;N[a+88>>2]=f;N[a+84>>2]=c;N[a+80>>2]=e}function MH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;J[7396]=J[7396]-1;ia[J[J[a>>2]+20>>2]](a,b);c=J[b+768>>2];e=c<<2;f=J[a+20>>2];d=e+f|0;h=J[d>>2];i=d;d=J[a+12>>2]-1|0;g=d<<2;J[i>>2]=J[f+g>>2];J[J[a+20>>2]+g>>2]=h;J[J[J[a+20>>2]+e>>2]+768>>2]=c;J[a+12>>2]=d;a=J[a+68>>2];c=J[a+16>>2];if(!(c>>>0>b>>>0|c+P(J[a>>2],J[a+4>>2])>>>0<=b>>>0)){J[b>>2]=J[a+12>>2];J[a+12>>2]=b;J[a+8>>2]=J[a+8>>2]+1;return}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Lf(a,b,c,d,e){var f=0;f=ga-32|0;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];a:{if(J[a+64>>2]==3){J[f+8>>2]=J[a+52>>2]+P(J[f+24>>2],J[a+56>>2]);J[J[f+20>>2]>>2]=L[J[f+8>>2]>>1];J[J[f+16>>2]>>2]=L[J[f+8>>2]+2>>1];J[J[f+12>>2]>>2]=L[J[f+8>>2]+4>>1];break a}J[f+4>>2]=J[a+52>>2]+P(J[f+24>>2],J[a+56>>2]);J[J[f+20>>2]>>2]=J[J[f+4>>2]>>2];J[J[f+16>>2]>>2]=J[J[f+4>>2]+4>>2];J[J[f+12>>2]>>2]=J[J[f+4>>2]+8>>2]}}function Gl(a){a=a|0;var b=0;J[a>>2]=17624;b=J[a+184>>2];if(!(b?!b|!K[a+188|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+184>>2]=0;H[a+188|0]=1;J[a+176>>2]=0;J[a+180>>2]=0;b=J[a+164>>2];if(!(b?!b|!K[a+168|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+164>>2]=0;H[a+168|0]=1;J[a+156>>2]=0;J[a+160>>2]=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function Ad(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=J[b+188>>2];if(d){c=J[a+68>>2];c=ia[J[J[c>>2]+36>>2]](c)|0;ia[J[J[c>>2]+40>>2]](c,d,J[a+24>>2]);c=J[a+68>>2];ia[J[J[c>>2]+12>>2]](c,d,J[a+24>>2]);J[b+188>>2]=0}c=J[a+8>>2];a:{if((c|0)<=0){break a}e=J[a+16>>2];d=0;while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}d=c-1|0;c=d<<2;J[f>>2]=J[c+e>>2];J[c+J[a+16>>2]>>2]=b;J[a+8>>2]=d}}function LB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;J[a+172>>2]=0;I[a+168>>1]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+60>>2]=0;J[a+64>>2]=0;J[a+68>>2]=0;J[a+72>>2]=0;a=J[J[a+8>>2]+284>>2];if(J[(ia[J[J[a>>2]+28>>2]](a)|0)+4>>2]>0){while(1){d=a,e=J[J[(ia[J[J[a>>2]+28>>2]](a)|0)+12>>2]>>2],f=J[J[(ia[J[J[a>>2]+28>>2]](a)|0)+12>>2]+4>>2],g=J[b+24>>2],c=J[J[a>>2]+12>>2],ia[c](d|0,e|0,f|0,g|0)|0;if(J[(ia[J[J[a>>2]+28>>2]](a)|0)+4>>2]>0){continue}break}}}function Gv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga+-64|0;ga=a;J[a+60>>2]=J[d+12>>2];J[a+56>>2]=b;b=J[a+60>>2];e=b+56|0;f=a+24|0;Ma(f,b+72|0,e);c=a+8|0;Ma(c,e+32|0,e);b=a+40|0;Ub(b,f,c);Ld(b);f=J[a+56>>2];c=ga-16|0;J[c+12>>2]=b;c=J[c+12>>2];g=ga-16|0;J[g+12>>2]=b;g=J[g+12>>2]+4|0;h=ga-16|0;J[h+12>>2]=b;h=J[h+12>>2]+8|0;N[a+4>>2]=Ua(e,b);xc(f,c,g,h,a+4|0);ga=a- -64|0;ga=d+16|0}function kH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=f;J[g+56>>2]=e;e=J[a+212>>2];if(N[e+4>>2]>=d){J[g+8>>2]=J[a+216>>2];J[g+12>>2]=g+56;a=J[b+12>>2];J[g+24>>2]=J[b+8>>2];J[g+28>>2]=a;a=J[b+4>>2];J[g+16>>2]=J[b>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+40>>2]=J[c+8>>2];J[g+44>>2]=a;a=J[c+4>>2];J[g+32>>2]=J[c>>2];J[g+36>>2]=a;N[g+48>>2]=d;d=Q(ia[J[J[e>>2]+12>>2]](e,g+8|0,1))}ga=g- -64|0;return Q(d)}function jH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=f;J[g+56>>2]=e;e=J[a+212>>2];if(N[e+4>>2]>=d){J[g+8>>2]=J[a+216>>2];J[g+12>>2]=g+56;a=J[b+12>>2];J[g+24>>2]=J[b+8>>2];J[g+28>>2]=a;a=J[b+4>>2];J[g+16>>2]=J[b>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+40>>2]=J[c+8>>2];J[g+44>>2]=a;a=J[c+4>>2];J[g+32>>2]=J[c>>2];J[g+36>>2]=a;N[g+48>>2]=d;d=Q(ia[J[J[e>>2]+12>>2]](e,g+8|0,0))}ga=g- -64|0;return Q(d)}function Vg(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0);ia[J[J[b>>2]+68>>2]](a,b,c);if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){e=N[c+4>>2];d=N[c>>2];f=N[c+8>>2];g=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(f*f)+Q(Q(d*d)+Q(e*e)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;h=d;f=b?Q(-1):f;e=b?Q(-1):e;d=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(d*d)+Q(e*e))))));N[a>>2]=N[a>>2]+Q(g*Q(h*d));N[a+4>>2]=N[a+4>>2]+Q(g*Q(e*d));N[a+8>>2]=N[a+8>>2]+Q(g*Q(f*d))}}function mC(a,b,c){a=a|0;b=b|0;c=c|0;b=J[b+164>>2]+(c<<6)|0;c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c;c=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=c;c=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=c}function yh(a,b){var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;c=J[d+8>>2];a=ga-16|0;ga=a;b=J[d+12>>2];J[a+12>>2]=b;J[a+8>>2]=c;c=J[a+12>>2];J[(ga-16|0)+12>>2]=c;Yd(c);e=ga-16|0;J[e+12>>2]=J[a+8>>2];J[a+4>>2]=J[J[e+12>>2]+4>>2];e=J[a+4>>2];J[a>>2]=0;Ch(c,e,a);pf(J[a+8>>2],J[a+4>>2],J[c+12>>2]);ga=a+16|0;a=J[d+8>>2];c=J[a+24>>2];J[b+20>>2]=J[a+20>>2];J[b+24>>2]=c;c=J[a+32>>2];J[b+28>>2]=J[a+28>>2];J[b+32>>2]=c;ga=d+16|0}function zE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0;l=J[a+96>>2];e=J[a+104>>2]+((b|0)%(l|0)<<4)|0;f=N[e>>2];g=N[e+4>>2];h=N[e+8>>2];i=N[a+16>>2];j=N[a+20>>2];k=N[a+12>>2];J[c+12>>2]=0;N[c+8>>2]=h*j;N[c+4>>2]=g*i;N[c>>2]=f*k;b=J[a+104>>2]+((b+1|0)%(l|0)<<4)|0;f=N[b>>2];g=N[b+4>>2];h=N[b+8>>2];i=N[a+16>>2];j=N[a+20>>2];k=N[a+12>>2];J[d+12>>2]=0;N[d+8>>2]=h*j;N[d+4>>2]=g*i;N[d>>2]=f*k}function Mx(a,b){a=a|0;b=b|0;var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=a;a=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a>>2]=N[a>>2]+N[J[c+12>>2]>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+4>>2]=N[a+4>>2]+N[J[c+12>>2]+4>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+8>>2]=N[a+8>>2]+N[J[c+12>>2]+8>>2];N[a+12>>2]=N[a+12>>2]+N[J[b+8>>2]+12>>2];ga=b+16|0;ga=d+16|0;return a|0}function Lx(a,b){a=a|0;b=b|0;var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=a;a=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a>>2]=N[a>>2]-N[J[c+12>>2]>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+4>>2]=N[a+4>>2]-N[J[c+12>>2]+4>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+8>>2]=N[a+8>>2]-N[J[c+12>>2]+8>>2];N[a+12>>2]=N[a+12>>2]-N[J[b+8>>2]+12>>2];ga=b+16|0;ga=d+16|0;return a|0}function nl(a,b){var c=0,d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0);f=J[a>>2];if((f|0)>0){g=N[a+308>>2];h=N[b+8>>2];i=N[b+4>>2];j=N[b>>2];while(1){k=c;c=(e<<4)+a|0;d=Q(h-N[c+12>>2]);l=Q(d*d);d=Q(j-N[c+4>>2]);m=Q(d*d);d=Q(i-N[c+8>>2]);c=k|Q(l+Q(m+Q(d*d)))<=g;e=e+1|0;if((f|0)!=(e|0)){continue}break}}if(!(N[b+12>>2]!=N[a+304>>2]|N[b+8>>2]!=N[a+300>>2]|N[b+4>>2]!=N[a+296>>2])){c=N[b>>2]==N[a+292>>2]|c}return c&1}function bb(){var a=0,b=0;b=ga-32|0;ga=b;if(!(H[29512]&1)){a=ga-48|0;ga=a;if(!(H[29564]&1)){N[a+44>>2]=1;N[a+40>>2]=0;N[a+36>>2]=0;N[a+32>>2]=0;N[a+28>>2]=1;N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;N[a+12>>2]=1;qf(29516,a+44|0,a+40|0,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0);H[29564]=1}ga=a+48|0;N[b+12>>2]=0;N[b+8>>2]=0;N[b+4>>2]=0;a=b+16|0;na(a,b+12|0,b+8|0,b+4|0);Vf(29448,29516,a);H[29512]=1}ga=b+32|0;return 29448}function xp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;e=J[c+12>>2];b=J[c+8>>2];a=ga+-64|0;ga=a;J[a+12>>2]=0;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;J[a+20>>2]=1065353216;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1065353216;J[a+44>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a>>2]=1065353216;d=J[b+12>>2];J[a+56>>2]=J[b+8>>2];J[a+60>>2]=d;d=J[b+4>>2];J[a+48>>2]=J[b>>2];J[a+52>>2]=d;mg(e,a);ga=a- -64|0;ga=c+16|0}function _B(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b+4>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=c;c=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=c;c=J[a+152>>2];a:{if(!c){break a}d=c;if(c&1){d=c-1|0;e=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[e>>2]+24>>2]](e,b)}if((c|0)==1){break a}while(1){c=J[(J[a+160>>2]+(d<<2)|0)-4>>2];ia[J[J[c>>2]+24>>2]](c,b);d=d-2|0;c=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[c>>2]+24>>2]](c,b);if(d){continue}break}}H[a+48|0]=1}function nc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function mc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]+8>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function Zj(a){a=a|0;var b=0;J[a>>2]=22728;if(K[a+456|0]){b=J[a+452>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+452>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+420>>2];if(!(b?!b|!K[a+424|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+420>>2]=0;H[a+424|0]=1;J[a+412>>2]=0;J[a+416>>2]=0;b=J[a+336>>2];if(!(b?!b|!K[a+340|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+336>>2]=0;H[a+340|0]=1;J[a+328>>2]=0;J[a+332>>2]=0;sg(a);return a|0}function Yz(a){a=a|0;var b=0;J[a>>2]=20548;b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+80>>2]=0;H[a+84|0]=1;J[a+72>>2]=0;J[a+76>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;return a|0}function ZF(a){a=a|0;var b=0;J[a>>2]=11460;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function cI(a){a=a|0;var b=0;J[a>>2]=6004;b=J[a- -64>>2];if(!(b?!b|!K[a+68|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+64>>2]=0;H[a+68|0]=1;J[a+56>>2]=0;J[a+60>>2]=0;b=J[a+44>>2];if(!(b?!b|!K[a+48|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+44>>2]=0;H[a+48|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function oc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function gG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=J[b>>2];e=ia[J[J[e>>2]+56>>2]](e,28)|0;f=K[a+4|0];g=J[a+8>>2];a=J[a+12>>2];J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e+24>>2]=a;J[e+20>>2]=g;H[e+16|0]=f;J[e+12>>2]=0;H[e+8|0]=0;J[e>>2]=10192;a=J[e+4>>2];b=f?d:c;c=f?c:d;if(ia[J[J[a>>2]+24>>2]](a,J[b+8>>2],J[c+8>>2])|0){a=J[e+4>>2];a=ia[J[J[a>>2]+12>>2]](a,J[b+8>>2],J[c+8>>2])|0;H[e+8|0]=1;J[e+12>>2]=a}return e|0}function Mg(a,b,c){var d=0,e=0;d=J[a+12>>2];if(!d){d=J[a+4>>2];d=ia[J[J[d>>2]+12>>2]](d,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=d}J[J[a+16>>2]+4>>2]=d;e=J[a+4>>2];d=ia[J[J[e>>2]+8>>2]](e,b,c,d)|0;e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);ia[J[J[d>>2]+8>>2]](d,b,c,J[a+20>>2],J[a+16>>2]);ia[J[J[d>>2]>>2]](d)|0;a=J[a+4>>2];ia[J[J[a>>2]+60>>2]](a,d)}function vf(a,b){var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];c=J[b+4>>2];a=J[d+12>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;J[a+24>>2]=J[b+24>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;rf(a+28|0,J[d+8>>2]+28|0);b=J[d+8>>2];c=J[b+80>>2];J[a+76>>2]=J[b+76>>2];J[a+80>>2]=c;J[a+92>>2]=J[b+92>>2];c=J[b+88>>2];J[a+84>>2]=J[b+84>>2];J[a+88>>2]=c;ga=d+16|0}function ck(a,b,c,d,e){J[a>>2]=8624;J[a+4>>2]=J[b>>2];H[a+8|0]=e;J[a>>2]=21896;b=J[b>>2];H[a+88|0]=1;J[a- -64>>2]=0;J[a+60>>2]=b;J[a+12>>2]=21924;J[a+84>>2]=0;H[a+108|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;J[a+104>>2]=0;H[a+128|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;J[a+124>>2]=0;H[a+148|0]=1;J[a+116>>2]=0;J[a+120>>2]=0;J[a+144>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+16>>2]=J[(e?d:c)+8>>2];J[a+20>>2]=J[(e?c:d)+8>>2];ak(a+72|0)}function Ut(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[d+12>>2];J[a+24>>2]=b;c=J[a+24>>2];e=J[c+4>>2];b=J[a+28>>2];J[b+348>>2]=J[c>>2];J[b+352>>2]=e;e=J[c+12>>2];J[b+356>>2]=J[c+8>>2];J[b+360>>2]=e;Ia(a+8|0,b+348|0,b+344|0);c=J[a+12>>2];J[b+560>>2]=J[a+8>>2];J[b+564>>2]=c;c=J[a+20>>2];J[b+568>>2]=J[a+16>>2];J[b+572>>2]=c;ga=a+32|0;ga=d+16|0}function Pk(a,b){var c=Q(0);J[a+20>>2]=0;J[a+24>>2]=0;H[a+28|0]=0;c=N[a+4>>2];a:{if(!(c>=Q(0))){break a}b=Pa(Q(b-N[a>>2]),Q(6.2831854820251465));b:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break b}if(!(b>Q(3.1415927410125732))){break b}b=Q(b+Q(-6.2831854820251465))}c:{if(Q(-c)>b){H[a+28|0]=1;b=Q(-Q(c+b));c=Q(1);break c}if(!(b>c)){break a}H[a+28|0]=1;b=Q(c-b);c=Q(-1)}N[a+24>>2]=c;N[a+20>>2]=b}}function Oh(a,b,c){var d=0,e=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;c=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+16>>2]+(J[d+12>>2]<<4)|0;a=ga-16|0;J[a+12>>2]=16;J[a+8>>2]=b;b=J[c+12>>2]+(J[d+12>>2]<<4)|0;e=J[b+4>>2];a=J[a+8>>2];J[a>>2]=J[b>>2];J[a+4>>2]=e;e=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=e;J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function jB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{if(c>>>0<=2){c:{switch(b-2|0){case 0:a=((c<<2)+a|0)+756|0;break b;case 2:a=((c<<2)+a|0)+772|0;break b;case 1:break c;default:break a}}a=((c<<2)+a|0)+740|0;break b}c=c-3|0;if(c>>>0>2){break a}d:{switch(b-2|0){case 0:a=((c<<6)+a|0)+900|0;break b;case 2:a=((c<<6)+a|0)+904|0;break b;case 1:break d;default:break a}}a=((c<<6)+a|0)+896|0}d=N[a>>2]}return Q(d)}function qf(a,b,c,d,e,f,g,h,i,j){var k=0;k=ga-48|0;ga=k;J[k+40>>2]=a;J[k+36>>2]=b;J[k+32>>2]=c;J[k+28>>2]=d;J[k+24>>2]=e;J[k+20>>2]=f;J[k+16>>2]=g;J[k+12>>2]=h;J[k+8>>2]=i;J[k+4>>2]=j;a=J[k+40>>2];J[k+44>>2]=a;c=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((c|0)!=(b|0)){continue}break}ld(a,J[k+36>>2],J[k+32>>2],J[k+28>>2],J[k+24>>2],J[k+20>>2],J[k+16>>2],J[k+12>>2],J[k+8>>2],J[k+4>>2]);ga=k+48|0}function wH(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=6716;b=J[a+8>>2];if((b|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];d=J[e+188>>2];if(d){b=J[a+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;ia[J[J[b>>2]+40>>2]](b,d,J[a+24>>2]);b=J[a+68>>2];ia[J[J[b>>2]+12>>2]](b,d,J[a+24>>2]);J[e+188>>2]=0;b=J[a+8>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function An(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-32|0;ga=e;J[e+28>>2]=a;J[e+24>>2]=b;J[e+20>>2]=c;J[e+16>>2]=d;J[e+12>>2]=J[J[e+24>>2]>>2];J[e+8>>2]=J[J[e+20>>2]>>2];J[e+4>>2]=Md(J[e+12>>2]);J[e>>2]=Md(J[e+8>>2]);if(J[e+4>>2]){a=J[e+4>>2];ia[J[J[a>>2]+32>>2]](a,J[e+20>>2],J[e+16>>2],J[e+24>>2])}if(J[e>>2]){a=J[e>>2];ia[J[J[a>>2]+32>>2]](a,J[e+24>>2],J[e+16>>2],J[e+20>>2])}ga=e+32|0;return 0}function Gc(a,b,c){var d=0,e=0,f=0,g=0;e=Ed(a,b);a:{if(!e){e=0;break a}f=J[a+8>>2];if((f|0)>=0){if(!f){break a}while(1){d=J[e+32>>2];if(!d){break a}e=d;g=g+1|0;if((f|0)!=(g|0)){continue}break}break a}e=J[a>>2]}d=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;d=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=d;d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;Dd(a,e,b)}function En(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-160|0;ga=d;J[d+156>>2]=a;J[d+152>>2]=b;J[d+148>>2]=c;a=J[d+156>>2];Pb(d+80|0);b=J[a+4>>2];a:{if(ia[J[J[b>>2]+92>>2]](b)&1){b=d+16|0;c=J[a+4>>2];ia[J[J[c>>2]+132>>2]](b,c,J[d+152>>2]);vb(d+80|0,b);break a}de(d+80|0)}a=J[a+4>>2];J[d+12>>2]=ia[J[J[a>>2]+124>>2]](a,J[d+152>>2]);a=J[d+12>>2];b=J[d+148>>2];ia[J[J[a>>2]+8>>2]](a,d+80|0,b,b+16|0);ga=d+160|0}function Aq(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;d=J[c+12>>2];if(J[d+136>>2]>0){f=Q(Q(1)/N[J[d+116>>2]+344>>2]);while(1){b=Q(0);a=J[d+144>>2]+P(e,284)|0;if(K[a+84|0]){b=N[a+272>>2];b=Q(U(Q(f*Q(Q(Q(N[a+216>>2]*Q(N[a+204>>2]-N[a+32>>2]))*N[a+268>>2])-Q(N[a+(b<Q(0)?220:224)>>2]*b))),Q(0)))}N[a+276>>2]=b;e=e+1|0;if((e|0)<J[d+136>>2]){continue}break}}ga=c+16|0}function wa(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=0;N[d+20>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=1;N[d+16>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=2;N[d+12>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function ah(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);c=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));f=N[a+16>>2];g=N[a+32>>2];h=N[a+20>>2];i=N[a+36>>2];j=N[a+12>>2];k=N[a+28>>2];Ve(a,b);J[a+40>>2]=0;N[a+36>>2]=Q(Q(Q(e+i)/h)*N[a+20>>2])-e;N[a+32>>2]=Q(Q(Q(d+g)/f)*N[a+16>>2])-d;N[a+28>>2]=Q(Q(Q(c+k)/j)*N[a+12>>2])-c}function ph(a,b){var c=0;J[a>>2]=5668;jc(a+4|0);jc(a- -64|0);H[a+193|0]=0;H[a+194|0]=1;c=!b;H[a+192|0]=c;J[a+164>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+176>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0;J[a+156>>2]=10;J[a+160>>2]=1;J[a+148>>2]=1;J[a+152>>2]=0;if(c){J[8369]=J[8369]+1;b=ia[J[6782]](76,16)|0;mh(b)}J[a+188>>2]=0;J[a+136>>2]=b;J[a+180>>2]=0;J[a+184>>2]=0;J[a+124>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0}function cE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+32>>2];g=N[a+28>>2];k=i<<4;e=k+b|0;j=N[e>>2];h=N[e+8>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e+4>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e+4>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=h;N[e+4>>2]=f;N[e>>2]=g;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function bE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+36>>2];g=N[a+28>>2];k=i<<4;e=k+b|0;j=N[e>>2];h=N[e+4>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e+8>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e+8>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=f;N[e+4>>2]=h;N[e>>2]=g;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function qe(a){var b=0,c=0;b=ga-16|0;ga=b;N[b+8>>2]=a;c=ga-16|0;ga=c;N[c+12>>2]=N[b+8>>2];N[c+8>>2]=6.2831854820251465;a=Pa(N[c+12>>2],N[c+8>>2]);ga=c+16|0;N[b+8>>2]=a;a:{if(N[b+8>>2]<Q(-3.1415927410125732)){N[b+12>>2]=N[b+8>>2]+Q(6.2831854820251465);break a}if(N[b+8>>2]>Q(3.1415927410125732)){N[b+12>>2]=N[b+8>>2]-Q(6.2831854820251465);break a}N[b+12>>2]=N[b+8>>2]}ga=b+16|0;return N[b+12>>2]}function Dh(a,b,c,d){var e=0,f=Q(0);e=ga-32|0;ga=e;J[e+28>>2]=b;J[e+24>>2]=c;J[e+20>>2]=d;b=ga-16|0;J[b+12>>2]=a;f=Q(L[J[e+28>>2]>>1]);J[b+12>>2]=J[e+20>>2];N[e+16>>2]=f/N[J[b+12>>2]>>2];f=Q(L[J[e+28>>2]+2>>1]);J[b+12>>2]=J[e+20>>2];N[e+12>>2]=f/N[J[b+12>>2]+4>>2];f=Q(L[J[e+28>>2]+4>>1]);J[b+12>>2]=J[e+20>>2];N[e+8>>2]=f/N[J[b+12>>2]+8>>2];na(a,e+16|0,e+12|0,e+8|0);jb(a,J[e+24>>2]);ga=e+32|0}function aE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+28>>2];g=N[a+32>>2];k=i<<4;e=k+b|0;j=N[e+4>>2];h=N[e+8>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=h;N[e+4>>2]=g;N[e>>2]=f;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function Mf(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;J[c+4>>2]=J[J[b+12>>2]+4>>2];b=J[c+4>>2];d=ga-16|0;J[d+12>>2]=a;if(J[J[d+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;d=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=d;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}Th(a,b)}J[J[a+12>>2]+(J[a+4>>2]<<2)>>2]=J[J[c+8>>2]>>2];J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0}function Qg(a){var b=0;J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;H[a+88|0]=0;J[a+80>>2]=-1082130432;J[a+84>>2]=0;J[a+72>>2]=-1082130432;J[a+76>>2]=-1082130432;b=a- -64|0;J[b>>2]=1065353216;J[b+4>>2]=0;J[a+56>>2]=1065353216;J[a+60>>2]=1065353216;J[a>>2]=15908;J[a+52>>2]=0;return a}function EF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0);e=ga-48|0;ga=e;ia[J[J[a>>2]+124>>2]](a,e+32|0,d);f=N[e+32>>2];g=N[e+36>>2];h=N[e+40>>2];J[b+12>>2]=0;N[b+8>>2]=h;N[b+4>>2]=g;N[b>>2]=f;J[e+12>>2]=0;N[e+8>>2]=-h;N[e+4>>2]=-g;N[e>>2]=-f;ia[J[J[a>>2]+64>>2]](e+16|0,a,e);a=J[e+28>>2];J[c+8>>2]=J[e+24>>2];J[c+12>>2]=a;a=J[e+20>>2];J[c>>2]=J[e+16>>2];J[c+4>>2]=a;ga=e+48|0}function tg(a,b){var c=0,d=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];d=J[b+4>>2];a=J[c+12>>2];J[a>>2]=J[b>>2];J[a+4>>2]=d;d=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=d;b=J[c+8>>2];d=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=d;d=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=d;b=J[c+8>>2];c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c}function BB(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);if(K[a+527|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=3;J[b+4>>2]=3;c=J[a+28>>2];d=J[a+32>>2];zg(a,c+4|0,d+4|0,c+264|0,d+264|0);a:{if(!K[a+526|0]){break a}c=J[b>>2];J[b>>2]=c+1;d=J[b+4>>2];J[b+4>>2]=d-1;e=N[a+456>>2];if(!(e>N[a+444>>2])|!(N[a+448>>2]<e)){break a}J[b+4>>2]=d-2;J[b>>2]=c+2}if(K[a+525|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function yD(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=1;J[c+4>>2]=10;J[c>>2]=12788;J[c+40>>2]=0;N[c+36>>2]=a;N[c+32>>2]=b*Q(.5);N[c+28>>2]=a;ga=d+16|0;return c|0}function Mw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=0;J[c>>2]=12888;J[c+4>>2]=10;J[c+40>>2]=0;N[c+36>>2]=a;N[c+32>>2]=a;N[c+28>>2]=b*Q(.5);ga=d+16|0;return c|0}function Lw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=2;J[c>>2]=12988;J[c+4>>2]=10;J[c+40>>2]=0;N[c+36>>2]=b*Q(.5);N[c+32>>2]=a;N[c+28>>2]=a;ga=d+16|0;return c|0}function ei(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;J[c+4>>2]=J[J[b+12>>2]+4>>2];b=J[c+4>>2];d=ga-16|0;J[d+12>>2]=a;if(J[J[d+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;d=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=d;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}di(a,b)}vf(J[a+12>>2]+P(J[a+4>>2],96)|0,J[c+8>>2]);J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0}function _g(a,b){a=a|0;b=Q(b);var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);c=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));N[a+44>>2]=b;b=N[a+36>>2];f=N[a+32>>2];g=N[a+28>>2];h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(d+f)-i;N[a+28>>2]=Q(c+g)-h;N[a+36>>2]=Q(e+b)-j}function fH(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0),f=Q(0),g=0,h=0;c=ga-32|0;ga=c;d=J[a+184>>2];e=N[d+4>>2];a:{if(e==Q(0)){break a}b=J[b>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}f=N[a+188>>2];d=J[a+184>>2];g=J[a+192>>2];h=J[b+192>>2];J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=b+4;J[c+16>>2]=b;J[c+12>>2]=h;J[c+8>>2]=0;hh(g,a+36|0,a+100|0,c+8|0,d,f)}ga=c+32|0;return e!=Q(0)|0}function CF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);g=N[a+36>>2];h=N[a+32>>2];d=N[a+28>>2];e=Q(1);a:{b:{c:{d:{e:{switch(c|0){case 1:e=Q(-1);break b;case 2:f=Q(1);break c;case 3:f=Q(-1);break c;case 4:d=Q(1);break d;case 0:break b;case 5:break e;default:break a}}d=Q(-1)}i=d;e=Q(0);d=g;break b}e=Q(0);d=h}N[b+8>>2]=i;N[b+4>>2]=f;N[b>>2]=e;N[b+12>>2]=-d}}function dc(a){var b=0,c=0,d=0,e=0,f=Q(0);b=ga-16|0;ga=b;c=J[a+8>>2];e=J[a+12>>2];a:{if((e|0)>0|(e|0)>=0){f=Q(Q(Q(+(c>>>0)+ +(e>>>0)*4294967296)*Q(0x10000000000000000))+Q(+M[a>>2]+ +M[a+4>>2]*4294967296));break a}d=J[a+4>>2];a=J[a>>2];J[b>>2]=0-a;J[b+4>>2]=0-(d+((a|0)!=0)|0);a=!(a|d);d=c^-1;c=a+d|0;a=e^-1;J[b+8>>2]=c;J[b+12>>2]=c>>>0<d>>>0?a+1|0:a;f=Q(-dc(b))}ga=b+16|0;return f}function ug(a,b,c){var d=0;d=ga-16|0;ga=d;J[a+28>>2]=c;J[a+24>>2]=-1;I[a+20>>1]=1;J[a+16>>2]=2139095039;J[a+8>>2]=-1;J[a+12>>2]=-1;J[a+4>>2]=b;J[a>>2]=20112;if(!K[32576]){J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;qg(31960,d);H[32576]=1}J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;we(31960,Q(0),d);J[a+44>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1050253722;J[a+32>>2]=31960;ga=d+16|0}function MF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=N[b+32>>2];e=N[b+36>>2];f=N[b+28>>2];g=Q(ia[J[J[b>>2]+48>>2]](b));h=Q(ia[J[J[b>>2]+48>>2]](b));i=Q(ia[J[J[b>>2]+48>>2]](b));j=N[c>>2];k=N[c+4>>2];l=N[c+8>>2];J[a+12>>2]=0;e=Q(e+i);N[a+8>>2]=l>=Q(0)?e:Q(-e);d=Q(d+h);N[a+4>>2]=k>=Q(0)?d:Q(-d);d=Q(f+g);N[a>>2]=j>=Q(0)?d:Q(-d)}function FF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);e=N[a+36>>2];d=N[a+32>>2];f=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;d=Q(d+h);a=b>>>1&1;N[c+4>>2]=Q(d*Q(!a|0))-Q(Q(a|0)*d);d=Q(f+g);a=b&1;N[c>>2]=Q(d*Q(!a|0))-Q(Q(a|0)*d);e=Q(e+i);a=b>>>2&1;N[c+8>>2]=Q(e*Q(!a|0))-Q(Q(a|0)*e)}function he(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;b=J[f+24>>2];c=J[f+20>>2];d=J[f+16>>2];e=J[f+12>>2];a=ga-32|0;J[a+28>>2]=J[f+28>>2];J[a+24>>2]=b;J[a+20>>2]=c;J[a+16>>2]=d;J[a+12>>2]=e;b=J[a+28>>2];N[b>>2]=N[J[a+24>>2]>>2];N[b+4>>2]=N[J[a+20>>2]>>2];N[b+8>>2]=N[J[a+16>>2]>>2];N[b+12>>2]=N[J[a+12>>2]>>2];ga=f+32|0}function de(a){var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-48|0;ga=a;c=J[b+12>>2];J[a+44>>2]=c;d=J[a+44>>2];N[a+40>>2]=1;N[a+36>>2]=0;N[a+32>>2]=0;N[a+28>>2]=0;N[a+24>>2]=1;N[a+20>>2]=0;N[a+16>>2]=0;N[a+12>>2]=0;N[a+8>>2]=1;ld(d,a+40|0,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+48|0;N[b+8>>2]=0;N[b+4>>2]=0;N[b>>2]=0;na(c+48|0,b+8|0,b+4|0,b);ga=b+16|0}function _o(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;e=J[d+8>>2];a=0;b=J[d+12>>2];c=J[b+328>>2];a:{if((c|0)<=0){break a}f=J[b+336>>2];while(1){g=(a<<2)+f|0;if(J[g>>2]!=(e|0)){a=a+1|0;if((c|0)!=(a|0)){continue}break a}break}if((a|0)>=(c|0)){break a}a=c-1|0;c=a<<2;J[g>>2]=J[c+f>>2];J[c+J[b+336>>2]>>2]=e;J[b+328>>2]=a}Ad(b,e);ga=d+16|0}function HG(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=9708;d=J[a+12>>2];if((d|0)>0){while(1){e=b<<2;c=J[e+J[a+20>>2]>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+4>>2];ia[J[J[c>>2]+60>>2]](c,J[J[a+20>>2]+e>>2])}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;return a|0}function OF(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[a+36>>2];e=N[a+32>>2];f=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(b/Q(12));f=Q(f+g);f=Q(f+f);f=Q(f*f);e=Q(e+h);e=Q(e+e);e=Q(e*e);N[c+8>>2]=b*Q(f+e);d=Q(d+i);d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(f+d);N[c>>2]=b*Q(e+d)}function Io(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=a;J[g+56>>2]=b;J[g+52>>2]=c;N[g+48>>2]=d;J[g+44>>2]=e;J[g+40>>2]=f;a=J[g+60>>2];J[g+36>>2]=27474;b=J[g+36>>2];c=J[g+56>>2];e=J[g+52>>2];d=N[g+48>>2];f=J[g+44>>2];J[g+28>>2]=J[g+40>>2];J[g+24>>2]=f;O[g+16>>3]=d;J[g+8>>2]=e;J[g+4>>2]=c;J[g>>2]=a;ba(b|0,1281,g|0)|0;ga=g- -64|0}function GG(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=9708;d=J[a+12>>2];if((d|0)>0){while(1){e=b<<2;c=J[e+J[a+20>>2]>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+4>>2];ia[J[J[c>>2]+60>>2]](c,J[J[a+20>>2]+e>>2])}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;ta(a)}function Bn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;J[d+16>>2]=J[J[d+24>>2]>>2];J[d+12>>2]=J[J[d+20>>2]>>2];J[d+8>>2]=Md(J[d+16>>2]);J[d+4>>2]=Md(J[d+12>>2]);if(J[d+8>>2]){a=J[d+8>>2];ia[J[J[a>>2]+28>>2]](a,J[d+20>>2],J[d+24>>2])}if(J[d+4>>2]){a=J[d+4>>2];ia[J[J[a>>2]+28>>2]](a,J[d+24>>2],J[d+20>>2])}ga=d+32|0;return 0}function YF(a){a=a|0;var b=0;J[a>>2]=11460;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function Xz(a){a=a|0;var b=0;J[a>>2]=20548;b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+80>>2]=0;H[a+84|0]=1;J[a+72>>2]=0;J[a+76>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function bI(a){a=a|0;var b=0;J[a>>2]=6004;b=J[a- -64>>2];if(!(b?!b|!K[a+68|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+64>>2]=0;H[a+68|0]=1;J[a+56>>2]=0;J[a+60>>2]=0;b=J[a+44>>2];if(!(b?!b|!K[a+48|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+44>>2]=0;H[a+48|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function bk(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[a+4>>2]=0;while(1){if(J[a+4>>2]<3){d=ga-16|0;J[d+12>>2]=J[a+8>>2];e=qe(N[J[d+12>>2]+(J[a+4>>2]<<2)>>2]);N[((b+868|0)+(J[a+4>>2]<<6)|0)+4>>2]=e;J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=c+16|0}function am(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));e=N[b+52>>2];f=N[b+56>>2];g=N[b+48>>2];J[c+12>>2]=0;N[c+8>>2]=f-j;N[c+4>>2]=e-i;N[c>>2]=g-h;e=N[b+52>>2];f=N[b+56>>2];g=N[b+48>>2];J[d+12>>2]=0;N[d+8>>2]=j+f;N[d+4>>2]=i+e;N[d>>2]=h+g}function hy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(!Ya(a,J[b>>2],e)){break a}if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+20>>2]=c;J[b+32>>2]=d;J[b+40>>2]=J[b+40>>2]+1;if(!(J[b+36>>2]!=1|J[b+24>>2]!=2)){H[b+54|0]=1}J[b+44>>2]=4}}function qA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b+4>>2];J[a+248>>2]=J[b>>2];J[a+252>>2]=c;c=J[b+12>>2];J[a+256>>2]=J[b+8>>2];J[a+260>>2]=c;c=J[a+232>>2];if((c|0)>0){while(1){a:{b:{e=J[J[a+240>>2]+(d<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(H[e+504|0]&1){break a}ue(e,b);c=J[a+232>>2]}d=d+1|0;if((c|0)>(d|0)){continue}break}}}function _F(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;a:{e=J[a+268>>2];if((e|0)<=0){break a}h=d?d:J[a+188>>2];i=J[b>>2];f=J[a+276>>2];d=0;while(1){g=(d<<2)+f|0;if(J[g>>2]!=(i|0)){d=d+1|0;if((e|0)!=(d|0)){continue}break a}break}if((d|0)>=(e|0)){break a}d=e-1|0;J[g>>2]=J[(d<<2)+f>>2];J[a+268>>2]=d;a=J[a+284>>2];ia[J[J[a>>2]+12>>2]](a,h,b,c)|0}}function fn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=d;J[e+40>>2]=5932;d=J[b+12>>2];J[e+16>>2]=J[b+8>>2];J[e+20>>2]=d;d=J[b+4>>2];J[e+8>>2]=J[b>>2];J[e+12>>2]=d;b=J[c+12>>2];J[e+32>>2]=J[c+8>>2];J[e+36>>2]=b;b=J[c+4>>2];J[e+24>>2]=J[c>>2];J[e+28>>2]=b;b=e+8|0;c=e+40|0;Vb(a+4|0,J[a+4>>2],b,c);a=a- -64|0;Vb(a,J[a>>2],b,c);ga=e+48|0}function ek(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[a+4>>2]=0;while(1){if(J[a+4>>2]<3){d=ga-16|0;J[d+12>>2]=J[a+8>>2];e=qe(N[J[d+12>>2]+(J[a+4>>2]<<2)>>2]);N[(b+868|0)+(J[a+4>>2]<<6)>>2]=e;J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=c+16|0}function dt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;b=J[d+8>>2];c=N[d+4>>2];a=ga-16|0;J[a+12>>2]=J[d+12>>2];J[a+8>>2]=b;N[a+4>>2]=c;b=J[a+12>>2];a:{b:{switch(J[a+8>>2]-3|0){case 0:N[b+452>>2]=N[a+4>>2];break a;case 1:N[b+448>>2]=N[a+4>>2];break a;case 2:break b;default:break a}}N[b+444>>2]=N[a+4>>2]}ga=d+16|0}function Zi(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=J[c+12>>2];Nf(a);J[a>>2]=17624;b=ga-16|0;ga=b;e=a+144|0;J[b+12>>2]=e;f=ga-16|0;d=J[b+12>>2];J[f+12>>2]=d;J[J[f+12>>2]>>2]=4988;J[d>>2]=4856;J[d+4>>2]=0;ga=b+16|0;Mb(a+152|0);Mb(a+172|0);J[a+148>>2]=a;b=ga-16|0;J[b+12>>2]=a+68;J[b+8>>2]=e;J[J[b+12>>2]+72>>2]=J[b+8>>2];ga=c+16|0}function ac(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];d=N[a>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);e=N[a+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));e=N[a+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(N[a+12>>2]*N[J[c+8>>2]+12>>2])+Q(Q(e*N[J[b+12>>2]+8>>2])+d))}function tC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:{e=J[a+152>>2];if(!e){break a}f=e;if(e&1){f=e-1|0;g=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[g>>2]+144>>2]](g,b,c,d)}if((e|0)==1){break a}while(1){e=J[(J[a+160>>2]+(f<<2)|0)-4>>2];ia[J[J[e>>2]+144>>2]](e,b,c,d);f=f-2|0;e=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[e>>2]+144>>2]](e,b,c,d);if(f){continue}break}}}function Wh(a,b,c,d){var e=0;e=ga-32|0;J[e+28>>2]=a;J[e+24>>2]=b;J[e+20>>2]=c;N[e+16>>2]=d;a=J[e+28>>2];N[e+12>>2]=Q(1)-N[e+16>>2];N[a>>2]=Q(N[e+12>>2]*N[J[e+24>>2]>>2])+Q(N[e+16>>2]*N[J[e+20>>2]>>2]);N[a+4>>2]=Q(N[e+12>>2]*N[J[e+24>>2]+4>>2])+Q(N[e+16>>2]*N[J[e+20>>2]+4>>2]);N[a+8>>2]=Q(N[e+12>>2]*N[J[e+24>>2]+8>>2])+Q(N[e+16>>2]*N[J[e+20>>2]+8>>2])}function Jo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;N[g+8>>2]=f;a=J[g+28>>2];ia[J[J[a>>2]+8>>2]](a,J[g+24>>2],J[g+20>>2],J[g+12>>2]);ia[J[J[a>>2]+8>>2]](a,J[g+20>>2],J[g+16>>2],J[g+12>>2]);ia[J[J[a>>2]+8>>2]](a,J[g+16>>2],J[g+24>>2],J[g+12>>2]);ga=g+32|0}function wm(a,b,c,d,e){var f=0,g=0;while(1){a:{b:{if(L[e>>1]<L[b>>1]|L[d>>1]>L[b+6>>1]|(L[e+4>>1]<L[b+4>>1]|L[d+4>>1]>L[b+10>>1])){break b}if(L[e+2>>1]<L[b+2>>1]|L[d+2>>1]>L[b+8>>1]){break b}f=J[b+12>>2];if((f|0)<0){break a}ia[J[J[c>>2]+8>>2]](c,f>>>21|0,f&2097151)}return}f=b+16|0;wm(a,f,c,d,e);g=b+32|0;b=J[b+28>>2];b=(b|0)>=0?g:f-(b<<4)|0;continue}}function Rx(a){a=a|0;var b=0,c=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29128]){Oa(29112);H[29128]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[b+28>>2];c=J[a+12>>2];N[a+8>>2]=-N[c>>2];N[a+4>>2]=-N[c+4>>2];N[a>>2]=-N[c+8>>2];he(b+8|0,a+8|0,a+4|0,a,c+12|0);ga=a+16|0;a=J[b+12>>2];J[7278]=J[b+8>>2];J[7279]=a;a=J[b+20>>2];J[7280]=J[b+16>>2];J[7281]=a;ga=b+32|0;return 29112}function uC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:{e=J[a+152>>2];if(!e){break a}f=e;if(e&1){f=e-1|0;g=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[g>>2]+64>>2]](g,b,c,d)}if((e|0)==1){break a}while(1){e=J[(J[a+160>>2]+(f<<2)|0)-4>>2];ia[J[J[e>>2]+64>>2]](e,b,c,d);f=f-2|0;e=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[e>>2]+64>>2]](e,b,c,d);if(f){continue}break}}}function KF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0);if((d|0)>0){while(1){g=f<<4;e=g+b|0;k=N[e>>2];l=N[e+4>>2];m=N[e+8>>2];h=N[a+28>>2];i=N[a+32>>2];j=N[a+36>>2];e=c+g|0;J[e+12>>2]=0;N[e+8>>2]=m>=Q(0)?j:Q(-j);N[e+4>>2]=l>=Q(0)?i:Q(-i);N[e>>2]=k>=Q(0)?h:Q(-h);f=f+1|0;if((f|0)!=(d|0)){continue}break}}}function ID(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[a+76>>2];g=N[a+60>>2];e=N[a+72>>2];h=N[a+56>>2];f=N[a+68>>2];i=N[a+52>>2];J[c+12>>2]=0;b=Q(b/Q(12));f=Q(Q(f-i)*Q(.5));f=Q(f+f);f=Q(f*f);e=Q(Q(e-h)*Q(.5));e=Q(e+e);e=Q(e*e);N[c+8>>2]=b*Q(f+e);d=Q(Q(d-g)*Q(.5));d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(f+d);N[c>>2]=b*Q(e+d)}function YB(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0;N[a+12>>2]=b;c=J[a+152>>2];a:{if(!c){break a}d=c;if(c&1){d=c-1|0;e=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[e>>2]+44>>2]](e,b)}if((c|0)==1){break a}while(1){c=J[(J[a+160>>2]+(d<<2)|0)-4>>2];ia[J[J[c>>2]+44>>2]](c,b);d=d-2|0;c=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[c>>2]+44>>2]](c,b);if(d){continue}break}}H[a+48|0]=1}function Fp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=J[c+12>>2];e=J[a+712>>2];if((e|0)>0){f=J[a+720>>2];while(1){a=P(d,104)+f|0;if(N[a+88>>2]>Q(0)){N[a+56>>2]=N[b>>2]+N[a+56>>2];N[a+60>>2]=N[b+4>>2]+N[a+60>>2];a=a- -64|0;N[a>>2]=N[b+8>>2]+N[a>>2]}d=d+1|0;if((e|0)!=(d|0)){continue}break}}ga=c+16|0}function $f(a,b,c,d){H[a+53|0]=1;a:{if(J[a+4>>2]!=(c|0)){break a}H[a+52|0]=1;c=J[a+16>>2];b:{if(!c){J[a+36>>2]=1;J[a+24>>2]=d;J[a+16>>2]=b;if((d|0)!=1){break a}if(J[a+48>>2]==1){break b}break a}if((b|0)==(c|0)){c=J[a+24>>2];if((c|0)==2){J[a+24>>2]=d;c=d}if(J[a+48>>2]!=1){break a}if((c|0)==1){break b}break a}J[a+36>>2]=J[a+36>>2]+1}H[a+54|0]=1}}function nq(){var a=0,b=0,c=0;c=ua(100);a=ga-32|0;ga=a;J[a+28>>2]=c;b=J[a+28>>2];N[b>>2]=1.2000000476837158;N[b+4>>2]=0;N[b+8>>2]=0;N[b+12>>2]=1e3;N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;na(b+16|0,a+24|0,a+20|0,a+16|0);J[b+32>>2]=0;J[b+36>>2]=0;N[a+12>>2]=0;N[a+8>>2]=-10;N[a+4>>2]=0;na(b+40|0,a+12|0,a+8|0,a+4|0);wf(b+56|0);ga=a+32|0;return c|0}function je(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+12>>2];h=J[d+4>>2];a=ga-48|0;ga=a;c=J[d+8>>2];e=J[c+192>>2];f=a+32|0;g=a+16|0;ia[J[J[e>>2]+8>>2]](e,c+4|0,f,g);J[a+12>>2]=h;J[a+4>>2]=c;J[a>>2]=8400;J[a+8>>2]=b;b=J[b+68>>2];ia[J[J[b>>2]+28>>2]](b,f,g,a);ga=a+48|0;ga=d+16|0}function le(a,b){a:{if((b|0)>=1024){a=a*8.98846567431158e307;if(b>>>0<2047){b=b-1023|0;break a}a=a*8.98846567431158e307;b=((b|0)<3069?b:3069)-2046|0;break a}if((b|0)>-1023){break a}a=a*2.004168360008973e-292;if(b>>>0>4294965304){b=b+969|0;break a}a=a*2.004168360008973e-292;b=((b|0)>-2960?b:-2960)+1938|0}z(0,0);z(1,b+1023<<20);return a*+B()}function hm(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=Q(0);i=ga-32|0;ga=i;J[i+28>>2]=a;J[i+24>>2]=b;J[i+20>>2]=c;J[i+16>>2]=d;J[i+12>>2]=e;J[i+8>>2]=f;J[i+4>>2]=g;J[i>>2]=h;a=J[i+28>>2];j=Q(ia[J[J[a>>2]+12>>2]](a,J[i+24>>2],J[i+20>>2],J[i+16>>2],J[i+12>>2],J[i+8>>2],J[i+4>>2],J[i>>2]));ga=i+32|0;return Q(j)}function Ub(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;b=J[d+28>>2];c=J[d+24>>2];N[d+20>>2]=Q(N[b+4>>2]*N[c+8>>2])+Q(-Q(N[b+8>>2]*N[c+4>>2]));N[d+16>>2]=Q(N[b+8>>2]*N[J[d+24>>2]>>2])+Q(-Q(N[b>>2]*N[J[d+24>>2]+8>>2]));N[d+12>>2]=Q(N[b>>2]*N[J[d+24>>2]+4>>2])+Q(-Q(N[b+4>>2]*N[J[d+24>>2]>>2]));na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function gH(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0),f=0;c=ga-32|0;ga=c;d=J[a+216>>2];e=N[d+4>>2];a:{if(e==Q(0)){break a}b=J[b>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}d=J[a+216>>2];f=J[b+192>>2];J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=b+4;J[c+16>>2]=b;J[c+12>>2]=f;J[c+8>>2]=0;bf(a+68|0,a+132|0,c+8|0,d)}ga=c+32|0;return e!=Q(0)|0}function Bg(a,b,c,d,e){var f=Q(0);J[a+32>>2]=c;J[a+28>>2]=b;J[a+24>>2]=d;J[a+20>>2]=e;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a+16>>2]=0;J[a>>2]=18540;J[a+36>>2]=J[b+4>>2];J[a+40>>2]=J[c+4>>2];N[a+44>>2]=ia[J[J[b>>2]+48>>2]](b);f=Q(ia[J[J[c>>2]+48>>2]](c));J[a+72>>2]=1;J[a+76>>2]=1;J[a+60>>2]=-1;H[a+52|0]=0;N[a+48>>2]=f;return a}function xC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=0,f=0;d=ga-16|0;ga=d;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;e=J[a+152>>2];if(e){b=Q(b/Q(e|0));while(1){e=e-1|0;f=J[J[a+160>>2]+(e<<2)>>2];ia[J[J[f>>2]+32>>2]](f,b,d);N[c>>2]=N[d>>2]+N[c>>2];N[c+4>>2]=N[d+4>>2]+N[c+4>>2];N[c+8>>2]=N[d+8>>2]+N[c+8>>2];if(e){continue}break}}ga=d+16|0}function ay(a,b,c,d){a=Q(a);b=Q(b);c=Q(c);d=Q(d);var e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;N[f+12>>2]=a;N[f+8>>2]=b;N[f+4>>2]=c;N[f>>2]=d;g=ra(16);e=ga-32|0;ga=e;J[e+28>>2]=g;J[e+24>>2]=f+12;J[e+20>>2]=f+8;J[e+16>>2]=f+4;J[e+12>>2]=f;h=J[e+28>>2];na(h,J[e+24>>2],J[e+20>>2],J[e+16>>2]);N[h+12>>2]=N[J[e+12>>2]>>2];ga=e+32|0;ga=f+16|0;return g|0}function FD(a){a=a|0;var b=0;J[a>>2]=15264;b=J[a+120>>2];if(!(b?!b|!K[a+124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+120>>2]=0;H[a+124|0]=1;J[a+112>>2]=0;J[a+116>>2]=0;b=J[a+100>>2];if(!(b?!b|!K[a+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+100>>2]=0;H[a+104|0]=1;J[a+92>>2]=0;J[a+96>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Th(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){J[c+4>>2]=Qh(a,J[c+8>>2]);b=ga-16|0;J[b+12>>2]=a;pf(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Rh(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){J[c+4>>2]=Qh(a,J[c+8>>2]);b=ga-16|0;J[b+12>>2]=a;Nh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function NC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+12>>2]=b;J[e+8>>2]=16996;b=J[c+12>>2];J[e+24>>2]=J[c+8>>2];J[e+28>>2]=b;b=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=b;b=J[d+12>>2];J[e+40>>2]=J[d+8>>2];J[e+44>>2]=b;b=J[d+4>>2];J[e+32>>2]=J[d>>2];J[e+36>>2]=b;a=J[a+48>>2];ia[J[J[a>>2]+8>>2]](a,e+8|0,c,d);ga=e+48|0}function ld(a,b,c,d,e,f,g,h,i,j){var k=0;k=ga-48|0;ga=k;J[k+44>>2]=a;J[k+40>>2]=b;J[k+36>>2]=c;J[k+32>>2]=d;J[k+28>>2]=e;J[k+24>>2]=f;J[k+20>>2]=g;J[k+16>>2]=h;J[k+12>>2]=i;J[k+8>>2]=j;a=J[k+44>>2];na(a,J[k+40>>2],J[k+36>>2],J[k+32>>2]);na(a+16|0,J[k+28>>2],J[k+24>>2],J[k+20>>2]);na(a+32|0,J[k+16>>2],J[k+12>>2],J[k+8>>2]);ga=k+48|0}function Fq(a){a=a|0;var b=0,c=0,d=0,e=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(J[c+136>>2]>0){while(1){a=J[c+144>>2]+P(d,284)|0;e=N[a+204>>2];J[a+12>>2]=0;J[a+268>>2]=1065353216;J[a+272>>2]=0;N[a+32>>2]=e;N[a+8>>2]=-N[a+60>>2];N[a+4>>2]=-N[a+56>>2];N[a>>2]=-N[a+52>>2];d=d+1|0;if((d|0)<J[c+136>>2]){continue}break}}ga=b+16|0}function un(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=J[a+108>>2];if(!g){c=L[a+56>>1];if(c){e=1;b=1;while(1){e=J[a+68>>2]+(e<<2)|0;if(H[e|0]&1){ia[J[J[d>>2]+8>>2]](d,J[a+60>>2]+(L[e+2>>1]<<6)|0)|0;c=L[a+56>>1]}b=b+1|0;e=b&65535;if(e>>>0<((c&65535)<<1|1)>>>0){continue}break}}return}ia[J[J[g>>2]+24>>2]](g,b,c,d,e,f)}function Ny(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;if(!(!b|J[b+236>>2]!=8)){c=J[a+328>>2];a:{if((c|0)<=0){break a}e=J[a+336>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+336>>2]>>2]=b;J[a+328>>2]=c}Ad(a,b);return}Hk(a,b)}function wb(a,b,c){var d=0,e=0,f=0,g=0,h=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;f=J[d+24>>2];b=ga-16|0;c=J[d+28>>2];J[b+12>>2]=c;J[b+8>>2]=0;g=J[b+12>>2]+(J[b+8>>2]<<4)|0;J[b+12>>2]=c;J[b+8>>2]=1;h=J[b+12>>2]+(J[b+8>>2]<<4)|0;J[b+12>>2]=c;J[b+8>>2]=2;e=d+8|0;Vd(e,f,g,h,J[b+12>>2]+(J[b+8>>2]<<4)|0);va(a,e,c+48|0);ga=d+32|0}function aG(a){a=a|0;var b=0;J[a>>2]=11348;b=J[a+284>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+284>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function TG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;c=J[b>>2];c=ia[J[J[c>>2]+56>>2]](c,36)|0;e=J[a+8>>2];f=J[a+12>>2];d=J[b+4>>2];g=J[a+20>>2];a=J[a+16>>2];J[c>>2]=8624;J[c+4>>2]=J[b>>2];J[c>>2]=8652;J[c+28>>2]=a;J[c+32>>2]=g;H[c+24|0]=0;J[c+20>>2]=d;H[c+16|0]=0;J[c+8>>2]=lI(e,f);J[c+12>>2]=ha;J[c>>2]=8776;return c|0}function Ko(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=Q(i);var j=0;j=ga-48|0;ga=j;J[j+44>>2]=a;J[j+40>>2]=b;J[j+36>>2]=c;J[j+32>>2]=d;J[j+28>>2]=e;J[j+24>>2]=f;J[j+20>>2]=g;J[j+16>>2]=h;N[j+12>>2]=i;a=J[j+44>>2];ia[J[J[a>>2]+28>>2]](a,J[j+40>>2],J[j+36>>2],J[j+32>>2],J[j+16>>2],N[j+12>>2]);ga=j+48|0}function hG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,16)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a+12>>2]=0;H[a+8|0]=0;J[a>>2]=10120;b=J[a+4>>2];if(ia[J[J[b>>2]+24>>2]](b,J[c+8>>2],J[d+8>>2])|0){b=J[a+4>>2];b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[d+8>>2])|0;H[a+8|0]=1;J[a+12>>2]=b}return a|0}function gI(a,b){a=a|0;b=b|0;if(J[a+16>>2]==(0-J[a+76>>2]|0)){Fd(a+4|0);Fd(a- -64|0);H[a+193|0]=0;H[a+194|0]=1;J[a+164>>2]=0;J[a+144>>2]=0;J[a+156>>2]=10;J[a+160>>2]=1;J[a+148>>2]=1;J[a+152>>2]=0;J[a+124>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0;J[a+176>>2]=0;J[a+180>>2]=0;J[a+184>>2]=0;J[a+188>>2]=0}}function Uj(a){var b=0;if(J[a+12>>2]){J[a+4>>2]=0;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}if(J[a+40>>2]){J[a+32>>2]=0;b=J[a+48>>2];if(!(b?!b|!K[a+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+48>>2]=0;H[a+52|0]=1;J[a+40>>2]=0;J[a+44>>2]=0}}function Sy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a=K[a+16|0];d=a?b:c;a=J[(a?c:b)+8>>2];b=J[a+268>>2];a:{b:{if((b|0)<=0){break b}e=J[d+8>>2];f=J[a+276>>2];c=0;while(1){if(J[(c<<2)+f>>2]!=(e|0)){c=c+1|0;if((b|0)!=(c|0)){continue}break b}break}if((b|0)!=(c|0)){break a}}b=J[a+284>>2];ia[J[J[b>>2]+36>>2]](b,a,d)}}function WB(a){a=a|0;var b=0,c=0,d=0;b=J[a+152>>2];a:{if(!b){break a}c=b;if(b&1){c=b-1|0;d=J[J[a+160>>2]+(c<<2)>>2];ia[J[J[d>>2]+72>>2]](d)}if((b|0)==1){break a}while(1){b=J[(J[a+160>>2]+(c<<2)|0)-4>>2];ia[J[J[b>>2]+72>>2]](b);c=c-2|0;b=J[J[a+160>>2]+(c<<2)>>2];ia[J[J[b>>2]+72>>2]](b);if(c){continue}break}}H[a+48|0]=1}function Sz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=1;a:{if(!(K[b+236|0]&2)){break a}c=1;if(!b){break a}c=J[a+488>>2];b:{if((c|0)<=0){a=0;break b}f=J[a+496>>2];a=1;while(1){e=J[(d<<2)+f>>2];if(J[e+28>>2]==(b|0)|J[e+32>>2]==(b|0)?K[e+20|0]:0){break b}d=d+1|0;a=(c|0)>(d|0);if((d|0)!=(c|0)){continue}break}}c=!a}return c|0}function iA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=J[a+212>>2];a:{if((c|0)<=0){break a}e=J[a+220>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+220>>2]>>2]=b;J[a+212>>2]=c}tk(J[b+28>>2],b);tk(J[b+32>>2],b)}function iG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=J[b>>2];e=ia[J[J[e>>2]+56>>2]](e,20)|0;f=J[b+4>>2];a=K[a+4|0];J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e>>2]=8652;H[e+16|0]=a;J[e+12>>2]=f;H[e+8|0]=0;J[e>>2]=11660;if(!f){a=J[e+4>>2];a=ia[J[J[a>>2]+12>>2]](a,J[c+8>>2],J[d+8>>2])|0;H[e+8|0]=1;J[e+12>>2]=a}return e|0}function Ln(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];N[a+12>>2]=N[c+8>>2];J[c+4>>2]=ia[J[J[a>>2]+88>>2]](a);while(1){d=J[c+4>>2];J[c+4>>2]=d-1;if(d){J[c>>2]=ia[J[J[a>>2]+124>>2]](a,J[c+4>>2]);d=J[c>>2];ia[J[J[d>>2]+44>>2]](d,N[c+8>>2]);continue}break}H[a+48|0]=1;ga=c+16|0}function Fx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;if(!K[29148]){J[(ga-16|0)+12>>2]=29132;H[29148]=1}b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;a=J[a+12>>2]+(J[a+8>>2]<<4)|0;b=J[a+4>>2];J[7283]=J[a>>2];J[7284]=b;b=J[a+12>>2];J[7285]=J[a+8>>2];J[7286]=b;ga=c+16|0;return 29132}function Xy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=(b|0)!=32;if(!(d|(c|0)!=32)){return J[a+92>>2]}a:{b:{c:{if(!d){if((c|0)>19){break c}return J[a+96>>2]}if((c|0)!=32|(b|0)>19){break b}return J[a+100>>2]}if(c-21>>>0>8){break a}return J[a+104>>2]}if((c|0)!=32|b-21>>>0>8){break a}return J[a+108>>2]}return Em(a,b,c)|0}function GD(a){a=a|0;var b=0;J[a>>2]=15264;b=J[a+120>>2];if(!(b?!b|!K[a+124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+120>>2]=0;H[a+124|0]=1;J[a+112>>2]=0;J[a+116>>2]=0;b=J[a+100>>2];if(!(b?!b|!K[a+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+100>>2]=0;H[a+104|0]=1;J[a+92>>2]=0;J[a+96>>2]=0;return a|0}function Af(a,b,c,d){var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;b=J[e+8>>2];c=J[e+4>>2];d=H[e+3|0]&1;a=ga-16|0;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;H[a+3|0]=d;b=J[a+12>>2];a:{if(H[a+3|0]&1){J[b+84>>2]=J[a+8>>2];break a}J[b+80>>2]=J[a+8>>2]}J[b+88>>2]=J[a+4>>2];ga=e+16|0}function AA(a){a=a|0;var b=0;J[a>>2]=20232;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;Ok(a+4|0);return a|0}function Os(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;H[e+11|0]=b;N[e+4>>2]=c;N[e>>2]=d;b=H[e+11|0]&1;c=N[e+4>>2];d=N[e>>2];a=ga-16|0;J[a+12>>2]=J[e+12>>2];H[a+11|0]=b;N[a+4>>2]=c;N[a>>2]=d;b=J[a+12>>2];H[b+737|0]=H[a+11|0]&1;N[b+680>>2]=N[a+4>>2];N[b+684>>2]=N[a>>2];ga=e+16|0}function ME(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=Q(0);e=J[a+68>>2]<<2;c=N[e+b>>2];d=e;e=a+12|0;f=Q(N[a+60>>2]*Q(c/N[d+e>>2]));N[a+60>>2]=f;d=J[a+64>>2]<<2;c=Q(N[d+b>>2]/N[e+d>>2]);d=J[a+72>>2]<<2;c=Q(N[a+56>>2]*Q(Q(c+Q(N[d+b>>2]/N[e+d>>2]))*Q(.5)));N[a+56>>2]=c;N[a+52>>2]=c/Q(Y(Q(Q(c*c)+Q(f*f))));Ve(a,b)}function vv(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=ga-16|0;ga=c;J[c+12>>2]=J[b+12>>2];a=J[c+12>>2];a:{if(J[a+32>>2]>0){J[a+32>>2]=J[a+32>>2]+1;break a}d=J[a+8>>2];ia[J[J[d>>2]+16>>2]](d,a+36|0,a+40|0,a+44|0,a+48|0,a+52|0,a+56|0,a+60|0,a- -64|0,J[a+28>>2]);J[a+32>>2]=1}ga=c+16|0;ga=b+16|0}function zA(a){a=a|0;var b=0;J[a>>2]=20232;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;Ok(a+4|0);ta(a)}function Rt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];c=J[d+4>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[d+12>>2];J[a+40>>2]=b;J[a+36>>2]=c;b=J[a+44>>2];Pi(b,J[a+40>>2]);c=J[a+36>>2];Kb(a,J[a+40>>2],b+348|0);e=a+16|0;Ub(e,c,a);Qi(b,e);ga=a+48|0;ga=d+16|0}function Ox(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];d=Q(bc(b)*bc(J[a+8>>2]));e=ga-16|0;N[e+12>>2]=d;N[a+4>>2]=Y(N[e+12>>2]);d=wc(Q(ac(b,J[a+8>>2])/N[a+4>>2]));ga=a+16|0;ga=c+16|0;return Q(d)}function PD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{switch(J[a+96>>2]){case 0:return Q(N[J[a+92>>2]+(P(J[a+64>>2],c)+b<<2)>>2]);case 5:return Q(Q(N[a+88>>2]*Q(K[J[a+92>>2]+(P(J[a+64>>2],c)+b|0)|0])));case 3:d=Q(N[a+88>>2]*Q(I[J[a+92>>2]+(P(J[a+64>>2],c)+b<<1)>>1]));break;default:break a}}return Q(d)}function bG(a){a=a|0;var b=0;J[a>>2]=11348;b=J[a+284>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+284>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function sF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=J[a+52>>2];if(c){c=(f=b,g=ia[J[J[c>>2]+12>>2]](c)|0,h=1,e=J[J[b>>2]+16>>2],ia[e](f|0,g|0,h|0)|0);d=J[a+52>>2];h=b,g=c,f=ia[J[J[d>>2]+16>>2]](d,J[c+8>>2],b)|0,i=1213612625,j=J[a+52>>2],e=J[J[b>>2]+20>>2],ia[e](h|0,g|0,f|0,i|0,j|0)}}function rF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=J[a+56>>2];if(c){c=(f=b,g=ia[J[J[c>>2]+8>>2]](c)|0,h=1,e=J[J[b>>2]+16>>2],ia[e](f|0,g|0,h|0)|0);d=J[a+56>>2];h=b,g=c,f=ia[J[J[d>>2]+12>>2]](d,J[c+8>>2],b)|0,i=1346456916,j=J[a+56>>2],e=J[J[b>>2]+20>>2],ia[e](h|0,g|0,f|0,i|0,j|0)}}function xB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{switch(b-1|0){case 0:case 1:if(d>>>0<=2){N[a+600>>2]=c;J[a+592>>2]=J[a+592>>2]|2;return}N[a+432>>2]=c;return;case 2:case 3:if(d>>>0<=2){N[a+596>>2]=c;J[a+592>>2]=J[a+592>>2]|1;return}N[a+604>>2]=c;J[a+592>>2]=J[a+592>>2]|4;break;default:break a}}}function Nm(a,b,c,d,e){var f=0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;H[a+8|0]=e;J[a>>2]=9380;b=J[b>>2];J[a- -64>>2]=0;J[a+60>>2]=b;J[a+12>>2]=9408;f=e?c:d;J[a+20>>2]=f;c=e?d:c;J[a+16>>2]=c;b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[f+8>>2])|0;J[a+76>>2]=b;a=J[a+60>>2];ia[J[J[a>>2]+20>>2]](a,b)}function Ss(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=ga-32|0;ga=h;J[h+28>>2]=a;J[h+24>>2]=b;J[h+20>>2]=c;J[h+16>>2]=d;J[h+12>>2]=e;J[h+8>>2]=f;H[h+7|0]=g;a=ra(764);Zk(a,J[h+28>>2],J[h+24>>2],J[h+20>>2],J[h+16>>2],J[h+12>>2],J[h+8>>2],H[h+7|0]&1);ga=h+32|0;return a|0}function It(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+312>>2]=J[b>>2];J[a+316>>2]=d;d=J[b+12>>2];J[a+320>>2]=J[b+8>>2];J[a+324>>2]=d;ga=c+16|0}function Ht(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+328>>2]=J[b>>2];J[a+332>>2]=d;d=J[b+12>>2];J[a+336>>2]=J[b+8>>2];J[a+340>>2]=d;ga=c+16|0}function Dt(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+544>>2]=J[b>>2];J[a+548>>2]=d;d=J[b+12>>2];J[a+552>>2]=J[b+8>>2];J[a+556>>2]=d;ga=c+16|0}function tk(a,b){var c=0,d=0,e=0,f=0;c=J[a+488>>2];a:{if((c|0)<=0){break a}e=J[a+496>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((d|0)!=(c|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+496>>2]>>2]=b;J[a+488>>2]=c}J[a+256>>2]=(c|0)>0}function nA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=J[a+232>>2];a:{if((c|0)<=0){break a}e=J[a+240>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+240>>2]>>2]=b;J[a+232>>2]=c}Ad(a,b)}function lB(a){a=a|0;var b=Q(0),c=Q(0);b=Q(1);c=N[J[a+32>>2]+344>>2];if(c!=Q(0)){b=N[J[a+28>>2]+344>>2];b=Q(b/Q(b+c))}J[a+1296>>2]=0;c=Q(Q(1)-b);N[a+1292>>2]=Q(b*N[a+1120>>2])+Q(c*N[a+1184>>2]);N[a+1288>>2]=Q(b*N[a+1116>>2])+Q(c*N[a+1180>>2]);N[a+1284>>2]=Q(b*N[a+1112>>2])+Q(c*N[a+1176>>2])}function yn(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;N[d+20>>2]=c;if(!K[28960]){J[(ga-16|0)+12>>2]=28944;H[28960]=1}sh(d,J[d+28>>2],J[d+24>>2],N[d+20>>2]);a=J[d+4>>2];J[7236]=J[d>>2];J[7237]=a;a=J[d+12>>2];J[7238]=J[d+8>>2];J[7239]=a;ga=d+32|0;return 28944}function $x(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;N[d+20>>2]=c;if(!K[29068]){J[(ga-16|0)+12>>2]=29052;H[29068]=1}sh(d,J[d+28>>2],J[d+24>>2],N[d+20>>2]);a=J[d+4>>2];J[7263]=J[d>>2];J[7264]=a;a=J[d+12>>2];J[7265]=J[d+8>>2];J[7266]=a;ga=d+32|0;return 29052}function uc(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];d=ga-16|0;J[d+12>>2]=J[a+8>>2];J[a+4>>2]=J[J[d+12>>2]+4>>2];d=J[a+4>>2];J[a>>2]=0;Ch(b,d,a);pf(J[a+8>>2],J[a+4>>2],J[b+12>>2]);ga=a+16|0;ga=c+16|0}function eE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+36>>2];e=N[b+28>>2];f=N[c>>2];g=N[c+4>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c+8>>2]<Q(0)?Q(-d):d;break a}d=N[c+8>>2]<Q(0)?Q(-d):d}N[a+8>>2]=d;N[a>>2]=e;N[a+4>>2]=i}function dE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+32>>2];e=N[b+28>>2];f=N[c>>2];g=N[c+8>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c+4>>2]<Q(0)?Q(-d):d;break a}d=N[c+4>>2]<Q(0)?Q(-d):d}N[a+8>>2]=i;N[a+4>>2]=d;N[a>>2]=e}function hn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;Fc((J[b+60>>2]==2?64:4)+a|0,J[b+48>>2]);d=J[b+52>>2];J[(d?d+56|0:((J[b+60>>2]<<2)+a|0)+124|0)>>2]=J[b+56>>2];d=J[b+56>>2];if(d){J[d+52>>2]=J[b+52>>2]}d=J[a+136>>2];ia[J[J[d>>2]+16>>2]](d,b,c);if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+194|0]=1}function zx(a){a=a|0;var b=0,c=0,d=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29168]){Oa(29152);H[29168]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[b+28>>2];d=J[a+12>>2];c=b+8|0;Oa(c);Na(d,c);ga=a+16|0;a=J[b+12>>2];J[7288]=J[b+8>>2];J[7289]=a;a=J[b+20>>2];J[7290]=J[b+16>>2];J[7291]=a;ga=b+32|0;return 29152}function fE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);e=N[b+32>>2];d=N[b+28>>2];f=N[c+4>>2];g=N[c+8>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c>>2]<Q(0)?Q(-d):d;break a}d=N[c>>2]<Q(0)?Q(-d):d}N[a+8>>2]=i;N[a>>2]=d;N[a+4>>2]=e}function Wi(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];b=d+8|0;Lf(a,J[d+24>>2],b,b+4|0,b+8|0);Lb(a,J[d+8>>2],J[d+20>>2]+56|0);Lb(a,J[d+12>>2],J[d+20>>2]+72|0);Lb(a,J[d+16>>2],J[d+20>>2]+88|0);b=J[d+20>>2];ia[J[J[b>>2]+44>>2]](b,N[a+4>>2]);ga=d+32|0}function Qh(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+8>>2]=a;J[c+4>>2]=b;b=J[c+8>>2];a:{if(J[c+4>>2]){d=J[c+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=b;J[a+8>>2]=d;J[a+4>>2]=0;b=J[a+8>>2]<<2;J[8369]=J[8369]+1;b=ia[J[6782]](b,16)|0;ga=a+16|0;J[c+12>>2]=b;break a}J[c+12>>2]=0}ga=c+16|0;return J[c+12>>2]}function mf(a,b){var c=0,d=0;c=ga+-64|0;ga=c;J[c+60>>2]=a;J[c+56>>2]=b;b=J[c+60>>2];a=b+56|0;d=c+24|0;Ma(d,b+72|0,a);b=c+8|0;Ma(b,a+32|0,a);a=c+40|0;Ub(a,d,b);d=J[a+4>>2];b=J[c+56>>2];J[b>>2]=J[a>>2];J[b+4>>2]=d;d=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=d;Ld(J[c+56>>2]);ga=c- -64|0}function fA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;a:{c=J[a+280>>2];if((c|0)<=0){break a}e=J[a+288>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+288>>2]>>2]=b;J[a+280>>2]=c}}function uv(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=ga-16|0;ga=c;J[c+12>>2]=J[b+12>>2];a=J[c+12>>2];a:{if(!J[a+32>>2]){break a}if(J[a+32>>2]>1){J[a+32>>2]=J[a+32>>2]-1;break a}d=J[a+8>>2];ia[J[J[d>>2]+24>>2]](d,J[a+28>>2]);J[a+36>>2]=0;J[a+32>>2]=0}ga=c+16|0;ga=b+16|0}function Cn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];b=d+8|0;Lf(a,J[d+24>>2],b,b+4|0,b+8|0);Lb(a,J[d+8>>2],J[d+20>>2]);Lb(a,J[d+12>>2],J[d+20>>2]+16|0);Lb(a,J[d+16>>2],J[d+20>>2]+32|0);N[J[d+20>>2]+64>>2]=N[a+4>>2];ga=d+32|0}function wB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{switch(b-1|0){case 0:case 1:if(c>>>0<=2){return Q(N[a+600>>2])}if(c-3>>>0>2){break a}return Q(N[a+432>>2]);case 2:case 3:break b;default:break a}}if(c>>>0<=2){return Q(N[a+596>>2])}if(c-3>>>0>2){break a}d=N[a+604>>2]}return Q(d)}function cG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;a:{c=J[a+268>>2];if((c|0)<=0){break a}f=J[b>>2];d=J[a+276>>2];b=0;while(1){e=(b<<2)+d|0;if(J[e>>2]!=(f|0)){b=b+1|0;if((c|0)!=(b|0)){continue}break a}break}if((b|0)>=(c|0)){break a}b=c-1|0;J[e>>2]=J[(b<<2)+d>>2];J[a+268>>2]=b}}function IC(a){a=a|0;var b=0,c=0;J[a>>2]=17188;b=J[a+12>>2];if(b){c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b);J[a+12>>2]=0}b=J[a+8>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[a+8>>2]);J[a+8>>2]=0}J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;return a|0}function $E(a){a=a|0;var b=0;J[a>>2]=13212;b=J[a+64>>2];if(b){sb(b);b=J[a+64>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function xa(){var a=0,b=0,c=0;c=ga-16|0;ga=c;a=J[6787];b=J[a+16>>2]-1|0;J[a+16>>2]=b;if(!(!J[a+4>>2]|b)){aa(c+8|0,0)|0;b=J[8371];N[a+8>>2]=N[a+8>>2]+Q(Q(J[c+12>>2]+P(J[c+8>>2]-J[b>>2]|0,1e6)-(J[b+4>>2]+J[a+12>>2])>>>0)/Q(1e3));b=J[a+16>>2]}if(!b){J[6787]=J[J[6787]+20>>2]}ga=c+16|0}function ue(a,b){var c=Q(0),d=0,e=Q(0),f=Q(0),g=Q(0);c=N[a+344>>2];if(c!=Q(0)){e=N[b>>2];f=N[b+4>>2];g=N[b+8>>2];J[a+376>>2]=0;c=Q(Q(1)/c);N[a+372>>2]=g*c;N[a+368>>2]=c*f;N[a+364>>2]=c*e}d=J[b+4>>2];J[a+380>>2]=J[b>>2];J[a+384>>2]=d;d=J[b+12>>2];J[a+388>>2]=J[b+8>>2];J[a+392>>2]=d}function St(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[c+12>>2];J[a+40>>2]=b;d=ga-16|0;b=J[a+44>>2];J[d+12>>2]=b+4;e=a+8|0;wa(e,J[d+12>>2],J[a+40>>2]);d=a+24|0;Kb(d,e,b+544|0);jb(b+428|0,d);ga=a+48|0;ga=c+16|0}function Pt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[c+12>>2];J[a+40>>2]=b;d=ga-16|0;b=J[a+44>>2];J[d+12>>2]=b+4;e=a+8|0;wa(e,J[d+12>>2],J[a+40>>2]);d=a+24|0;Kb(d,e,b+348|0);jb(b+412|0,d);ga=a+48|0;ga=c+16|0}function Ep(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];a=J[J[d+12>>2]+720>>2]+P(J[d+4>>2],104)|0;if(N[a+88>>2]>Q(0)){N[a+56>>2]=N[b>>2]+N[a+56>>2];N[a+60>>2]=N[b+4>>2]+N[a+60>>2];a=a- -64|0;N[a>>2]=N[b+8>>2]+N[a>>2]}ga=d+16|0}function np(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2]+288;J[a+8>>2]=b;b=J[a+12>>2];sa(b,J[a+8>>2],104);uc(b+104|0,J[a+8>>2]+104|0);uc(b+124|0,J[a+8>>2]+124|0);uc(b+144|0,J[a+8>>2]+144|0);ga=a+16|0;ga=c+16|0}function hF(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+52>>2];return 3959}function _D(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+52>>2];return 3761}function HE(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+68>>2];return 3920}function HC(a){a=a|0;var b=0,c=0;J[a>>2]=17188;b=J[a+12>>2];if(b){c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b);J[a+12>>2]=0}b=J[a+8>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[a+8>>2]);J[a+8>>2]=0}J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;ta(a)}function dw(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+12;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[(J[J[b+12>>2]+12>>2]+P(J[b+8>>2],80)|0)+64>>2]}function VB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;if(N[a+36>>2]>d){H[a+40|0]=1;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;N[a+36>>2]=d}}function Ya(a,b,c){var d=0;if(!c){return J[a+4>>2]==J[b+4>>2]}if((a|0)==(b|0)){return 1}d=J[a+4>>2];a=K[d|0];c=J[b+4>>2];b=K[c|0];a:{if(!a|(b|0)!=(a|0)){break a}while(1){b=K[c+1|0];a=K[d+1|0];if(!a){break a}c=c+1|0;d=d+1|0;if((a|0)==(b|0)){continue}break}}return(a|0)==(b|0)}function Qm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];N[a>>2]=N[a>>2]-N[J[b+8>>2]>>2];N[a+4>>2]=N[a+4>>2]-N[J[b+8>>2]+4>>2];N[a+8>>2]=N[a+8>>2]-N[J[b+8>>2]+8>>2];ga=c+16|0;return a|0}function jt(a){a=a|0;var b=0,c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];yg(a);N[a+1316>>2]=N[a+1256>>2];d=a+1260|0;e=J[d+4>>2];b=a+1320|0;J[b>>2]=J[d>>2];J[b+4>>2]=e;N[a+1328>>2]=N[a+1192>>2];b=a+1332|0;a=a+1196|0;d=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=d;ga=c+16|0}function Oo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;a=J[e+44>>2];J[e+28>>2]=27254;b=J[e+28>>2];c=J[e+40>>2];d=J[e+36>>2];J[e+12>>2]=J[e+32>>2];J[e+8>>2]=d;J[e+4>>2]=c;J[e>>2]=a;ba(b|0,1276,e|0)|0;ga=e+48|0}function DF(a,b,c){a=a|0;b=b|0;c=Q(c);var d=Q(0),e=Q(0),f=0;d=N[b>>2];e=N[a+28>>2];a:{if(!(d<=Q(e+c))|!(d>=Q(Q(-e)-c))){break a}d=N[b+4>>2];e=N[a+32>>2];if(!(d<=Q(e+c))|!(d>=Q(Q(-e)-c))){break a}d=N[b+8>>2];e=N[a+36>>2];if(!(d<=Q(e+c))){break a}f=d>=Q(Q(-e)-c)}return f|0}function xt(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-32|0;ga=a;J[a+28>>2]=J[b+12>>2];c=J[a+28>>2];N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;na(c+412|0,a+24|0,a+20|0,a+16|0);N[a+12>>2]=0;N[a+8>>2]=0;N[a+4>>2]=0;na(c+428|0,a+12|0,a+8|0,a+4|0);ga=a+32|0;ga=b+16|0}function wh(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],104);sa(b+J[d+16>>2]|0,b+J[a+12>>2]|0,104);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function pc(a,b,c){var d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;c=ga-16|0;b=J[d+12>>2];J[c+12>>2]=b;c=J[c+12>>2]+(J[d+8>>2]<<2)|0;e=ga-16|0;J[e+12>>2]=b+16;e=J[e+12>>2]+(J[d+8>>2]<<2)|0;f=ga-16|0;J[f+12>>2]=b+32;na(a,c,e,J[f+12>>2]+(J[d+8>>2]<<2)|0);ga=d+16|0}function ao(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;c=J[d+28>>2];b=c+56|0;e=d+8|0;Vd(e,J[d+24>>2],c+56|0,b+16|0,b+32|0);b=b+(Lh(e)<<4)|0;c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;ga=d+32|0}function wj(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+264;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[J[J[b+12>>2]+12>>2]+(J[b+8>>2]<<2)>>2]}function Wu(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+148;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[J[J[b+12>>2]+12>>2]+(J[b+8>>2]<<2)>>2]}function tt(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+300>>2]=J[a>>2];J[b+304>>2]=d;d=J[a+12>>2];J[b+308>>2]=J[a+8>>2];J[b+312>>2]=d;ga=c+16|0}function st(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+316>>2]=J[a>>2];J[b+320>>2]=d;d=J[a+12>>2];J[b+324>>2]=J[a+8>>2];J[b+328>>2]=d;ga=c+16|0}function ok(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+680>>2]=J[a>>2];J[b+684>>2]=d;d=J[a+12>>2];J[b+688>>2]=J[a+8>>2];J[b+692>>2]=d;ga=c+16|0}function gk(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+696>>2]=J[a>>2];J[b+700>>2]=d;d=J[a+12>>2];J[b+704>>2]=J[a+8>>2];J[b+708>>2]=d;ga=c+16|0}function yw(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=ga-16|0;ga=b;J[b+12>>2]=a;e=J[b+12>>2];if(e){a=ga-16|0;ga=a;J[a+12>>2]=e;c=ga-16|0;ga=c;J[c+12>>2]=J[a+12>>2];f=ga-16|0;d=J[c+12>>2];J[f+12>>2]=d;Bh(d,J[J[f+12>>2]+4>>2]);lb(d);Yd(d);ga=c+16|0;ga=a+16|0;ta(e)}ga=b+16|0}function xh(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],96);vf(b+J[d+16>>2]|0,b+J[a+12>>2]|0);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function Ah(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],36);yh(b+J[d+16>>2]|0,b+J[a+12>>2]|0);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function $A(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{b:{switch(d+1|0){case 0:case 6:break b;default:break a}}c:{d:{switch(b-2|0){case 0:d=a+760|0;b=2;break c;case 2:d=a+756|0;b=1;break c;case 1:break d;default:break a}}d=a+752|0;b=4}N[d>>2]=c;J[a+748>>2]=b|J[a+748>>2]}}function Ts(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;a=ra(764);Zk(a,J[g+28>>2],J[g+24>>2],J[g+20>>2],J[g+16>>2],J[g+12>>2],J[g+8>>2],0);ga=g+32|0;return a|0}function od(a,b,c,d,e){var f=Q(0);f=Q(1);a:{if(b>c){break a}f=Q(0);if(b==c){break a}d=Q(d/e);if(d<Q(0)){if(!(!(a>=b)|!(Q(b-d)>a))){return Q(Q(b-a)/d)}return a<b?Q(0):Q(1)}if(!(d>Q(0))){break a}if(!(!(a<=c)|!(Q(c-d)<a))){return Q(Q(c-a)/d)}f=a>c?Q(0):Q(1)}return f}function zu(a,b,c){a=Q(a);b=b|0;c=c|0;var d=0,e=0,f=0;d=ga-48|0;ga=d;N[d+44>>2]=a;J[d+40>>2]=b;J[d+36>>2]=c;b=ua(140);a=N[d+44>>2];c=J[d+40>>2];f=J[d+36>>2];N[d+12>>2]=0;N[d+8>>2]=0;N[d+4>>2]=0;e=d+16|0;na(e,d+12|0,d+8|0,d+4|0);Ri(b,a,c,f,e);ga=d+48|0;return b|0}function sC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;fb(a,b,c);d=J[a+144>>2];ia[J[J[d>>2]+56>>2]](d,b+12|0,c)|0;N[b+56>>2]=N[a+12>>2];N[b+40>>2]=N[a+52>>2];N[b+44>>2]=N[a+56>>2];N[b+48>>2]=N[a+60>>2];N[b+52>>2]=N[a- -64>>2];J[b+60>>2]=ia[J[J[a>>2]+80>>2]](a);return 3850}function ki(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;N[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;a=J[g+28>>2];ia[J[J[a>>2]+32>>2]](a,J[g+24>>2],J[g+20>>2],N[g+16>>2],J[g+12>>2],J[g+8>>2]);ga=g+32|0}function jG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,16)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a+12>>2]=0;H[a+8|0]=0;J[a>>2]=11584;b=J[a+4>>2];b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[d+8>>2])|0;H[a+8|0]=1;J[a+12>>2]=b;return a|0}function Nl(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;a=J[a+32>>2]+(j<<5)|0;J[c>>2]=J[a+12>>2];J[b>>2]=J[a+16>>2];J[d>>2]=J[a+28>>2];J[e>>2]=J[a+20>>2];J[h>>2]=J[a>>2];J[f>>2]=J[a+4>>2];J[g>>2]=J[a+8>>2];J[i>>2]=J[a+24>>2]}function vH(a){a=a|0;var b=0,c=0,d=0;ya(2810);b=J[a+8>>2];if((b|0)>0){while(1){d=J[J[a+16>>2]+(c<<2)>>2];a:{b:{if(K[a+76|0]){break b}switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}Wm(a,d);b=J[a+8>>2]}c=c+1|0;if((b|0)>(c|0)){continue}break}}xa()}function jf(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=b;d=ga-16|0;b=J[c+12>>2];N[d+12>>2]=N[b>>2];N[c+8>>2]=R(N[d+12>>2]);d=ga-16|0;N[d+12>>2]=N[b+4>>2];N[c+4>>2]=R(N[d+12>>2]);d=ga-16|0;N[d+12>>2]=N[b+8>>2];N[c>>2]=R(N[d+12>>2]);na(a,c+8|0,c+4|0,c);ga=c+16|0}function Jl(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+4>>2]=J[a>>2];J[b+8>>2]=d;d=J[a+12>>2];J[b+12>>2]=J[a+8>>2];J[b+16>>2]=d;ga=c+16|0}function ry(a){a=a|0;var b=0,c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29048]){J[(ga-16|0)+12>>2]=29032;H[29048]=1}a=c+8|0;b=J[c+28>>2];ia[J[J[b>>2]+76>>2]](a,b);b=J[a+4>>2];J[7258]=J[a>>2];J[7259]=b;b=J[a+12>>2];J[7260]=J[a+8>>2];J[7261]=b;ga=c+32|0;return 29032}function Xo(a){a=a|0;var b=0,c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29444]){J[(ga-16|0)+12>>2]=29428;H[29444]=1}a=c+8|0;b=J[c+28>>2];ia[J[J[b>>2]+76>>2]](a,b);b=J[a+4>>2];J[7357]=J[a>>2];J[7358]=b;b=J[a+12>>2];J[7359]=J[a+8>>2];J[7360]=b;ga=c+32|0;return 29428}function ky(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d);return}e=J[a+12>>2];f=a+16|0;Ij(f,b,c,d);a:{if((e|0)<2){break a}e=(e<<3)+f|0;a=a+24|0;while(1){Ij(a,b,c,d);if(K[b+54|0]){break a}a=a+8|0;if(e>>>0>a>>>0){continue}break}}}function SB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;H[a+40|0]=1;N[a+36>>2]=d}function Fd(a){var b=0;b=J[a>>2];if(b){Gd(a,b)}b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=0;J[a+8>>2]=-1;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0}function Ag(a,b,c,d){var e=0;J[a>>2]=18872;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;J[a+40>>2]=1065353216;J[a+36>>2]=d}function fD(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+12>>2]=N[a+68>>2];N[b+16>>2]=N[a+72>>2];N[b+20>>2]=N[a+76>>2];N[b+24>>2]=N[a+80>>2];N[b+28>>2]=N[a+48>>2];N[b+32>>2]=N[a+52>>2];N[b+36>>2]=N[a+56>>2];N[b+40>>2]=N[a+60>>2];N[b+44>>2]=N[a+64>>2];return 3936}function tH(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;ya(2926);ia[J[J[a>>2]+8>>2]](a);ia[J[J[a>>2]+12>>2]](a);b=J[a+24>>2];ya(2537);if(b){c=J[a+68>>2];e=b,f=ia[J[J[c>>2]+36>>2]](c)|0,g=a+28|0,h=J[a+24>>2],d=J[J[b>>2]+32>>2],ia[d](e|0,f|0,g|0,h|0)}xa();xa()}function Un(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];mf(a,J[e+4>>2]);c=J[a+60>>2];b=J[e>>2];J[b>>2]=J[a+56>>2];J[b+4>>2]=c;c=J[a+68>>2];J[b+8>>2]=J[a+64>>2];J[b+12>>2]=c;ga=e+16|0}function rp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ga-16|0;ga=a;J[a+8>>2]=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[a+8>>2];a:{if(J[J[b+12>>2]+236>>2]==8){J[a+12>>2]=J[a+8>>2];break a}J[a+12>>2]=0}ga=a+16|0;ga=c+16|0;return J[a+12>>2]}function pf(a,b,c){var d=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+12>>2]<<2;J[b+J[d+16>>2]>>2]=J[b+J[a+12>>2]>>2];J[d+12>>2]=J[d+12>>2]+1;continue}break}}
  function aF(a){a=a|0;var b=0;J[a>>2]=13212;b=J[a+64>>2];if(b){sb(b);b=J[a+64>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;return a|0}function Ft(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[b+480>>2]=J[a+8>>2];if(J[b+480>>2]){d=J[a+8>>2];ia[J[J[d>>2]+8>>2]](d,b+4|0)}ga=a+16|0;ga=c+16|0}function js(a){a=a|0;var b=0,c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;d=ua(8);b=J[c+12>>2];a=ga-16|0;ga=a;J[a+12>>2]=d;J[a+8>>2]=b;e=ga-16|0;b=J[a+12>>2];J[e+12>>2]=b;J[J[e+12>>2]>>2]=5116;J[b>>2]=20840;J[b+4>>2]=J[a+8>>2];ga=a+16|0;ga=c+16|0;return d|0}function Nh(a,b,c){var d=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+12>>2]<<2;N[b+J[d+16>>2]>>2]=N[b+J[a+12>>2]>>2];J[d+12>>2]=J[d+12>>2]+1;continue}break}}function Ct(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ga-16|0;ga=a;J[a+8>>2]=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[a+8>>2];a:{if(J[J[b+12>>2]+236>>2]&2){J[a+12>>2]=J[a+8>>2];break a}J[a+12>>2]=0}ga=a+16|0;ga=c+16|0;return J[a+12>>2]}function zH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+16>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+20>>2]](a,J[c+8>>2],b)|0,h=1245859651,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function bF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+52>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+56>>2]](a,J[c+8>>2],b)|0,h=1346455635,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function Pz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+16>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+20>>2]](a,J[c+8>>2],b)|0,h=1497645650,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function Px(a){a=a|0;var b=Q(0),c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];d=J[a+12>>2];a:{if(ac(d,d)<Q(0)){b=wc(N[d+12>>2]);N[a+8>>2]=b+b;break a}b=wc(Q(-N[d+12>>2]));N[a+8>>2]=b+b}ga=a+16|0;ga=c+16|0;return Q(N[a+8>>2])}function ub(a,b,c){var d=0;d=ga-48|0;ga=d;J[d+44>>2]=a;J[d+40>>2]=b;J[d+36>>2]=c;a=J[d+44>>2];if(N[a+344>>2]!=Q(0)){Ni(a,J[d+40>>2]);b=ga-16|0;J[b+12>>2]=a+544;if(J[b+12>>2]){b=J[d+36>>2];Kb(d,J[d+40>>2],a+348|0);c=d+16|0;Ub(c,b,d);Oi(a,c)}}ga=d+48|0}function bo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];J[d>>2]=J[d+8>>2];fb(a,J[d>>2],J[d+4>>2]);Mh(a+28|0,J[d>>2]+28|0);Mh(a+12|0,J[d>>2]+12|0);N[J[d>>2]+44>>2]=N[a+44>>2];ga=d+16|0;return 3824}function Si(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];Nf(a);J[a>>2]=17820;c=a+144|0;Xi(c);J[a+152>>2]=J[d+8>>2];J[a+172>>2]=J[d+4>>2];b=ga-16|0;J[b+12>>2]=a+68;J[b+8>>2]=c;J[J[b+12>>2]+72>>2]=J[b+8>>2];ga=d+16|0}function $t(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;b=N[d+8>>2];c=N[d+4>>2];a=ga-16|0;J[a+12>>2]=J[d+12>>2];N[a+8>>2]=b;N[a+4>>2]=c;e=J[a+12>>2];N[e+472>>2]=N[a+8>>2];N[e+476>>2]=N[a+4>>2];ga=d+16|0}function $c(a){a=a|0;var b=0,c=0,d=0,e=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];d=ga-16|0;e=J[a+12>>2];J[d+12>>2]=e;if(J[J[d+12>>2]+216>>2]!=2){c=ga-16|0;J[c+12>>2]=e;c=J[J[c+12>>2]+216>>2]!=5}ga=a+16|0;ga=b+16|0;return c|0}function va(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]+N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]+N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]+N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function Ma(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]-N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]-N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]-N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function Kb(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]*N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]*N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]*N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function XH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if(J[a+8>>2]>0){while(1){e=J[a+16>>2]+(d<<4)|0;a:{if(ia[J[J[b>>2]+8>>2]](b,e)|0){ia[J[J[a>>2]+12>>2]](a,J[e>>2],J[e+4>>2],c)|0;J[7392]=J[7392]-1;break a}d=d+1|0}if(J[a+8>>2]>(d|0)){continue}break}}}function uA(a){a=a|0;var b=0,c=0;if(J[a+232>>2]>0){while(1){b=J[J[a+240>>2]+(c<<2)>>2];J[b+412>>2]=0;J[b+416>>2]=0;J[b+436>>2]=0;J[b+440>>2]=0;J[b+428>>2]=0;J[b+432>>2]=0;J[b+420>>2]=0;J[b+424>>2]=0;c=c+1|0;if((c|0)<J[a+232>>2]){continue}break}}}function gn(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;c=ga-16|0;ga=c;J[c+8>>2]=5860;J[c+12>>2]=d;g=d+4|0;h=d+20|0;i=c+8|0;oh(a+4|0,J[a+4>>2],b,g,h,N[d+32>>2],e,f,i);a=a- -64|0;oh(a,J[a>>2],b,g,h,N[d+32>>2],e,f,i);ga=c+16|0}function al(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=J[a+32>>2];e=c+328|0;d=J[a+28>>2];f=d+328|0;g=c+312|0;h=d+312|0;c=c+4|0;d=d+4|0;if(K[a+1301|0]){_k(a,b,$k(a,b,0,d,c,h,g,f,e),d,c,h,g,f,e);return}$k(a,b,_k(a,b,0,d,c,h,g,f,e),d,c,h,g,f,e)}function Ps(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;N[g+24>>2]=b;N[g+20>>2]=c;N[g+16>>2]=d;N[g+12>>2]=e;N[g+8>>2]=f;Mi(J[g+28>>2],N[g+24>>2],N[g+20>>2],N[g+16>>2],N[g+12>>2],N[g+8>>2]);ga=g+32|0}function LF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+32>>2];e=N[b+36>>2];g=N[c+4>>2];h=N[c+8>>2];f=N[b+28>>2];i=N[c>>2];J[a+12>>2]=0;N[a>>2]=i>=Q(0)?f:Q(-f);N[a+8>>2]=h>=Q(0)?e:Q(-e);N[a+4>>2]=g>=Q(0)?d:Q(-d)}function Ia(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]*N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]*N[J[d+24>>2]>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]*N[J[d+24>>2]>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function SA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+300>>2];N[b+56>>2]=N[a+304>>2];N[b+60>>2]=N[a+308>>2];N[b+64>>2]=N[a+312>>2];N[b+68>>2]=N[a+316>>2];N[b+72>>2]=N[a+320>>2];N[b+76>>2]=N[a+324>>2];N[b+80>>2]=N[a+328>>2];return 3463}function $u(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];c=J[d+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[d+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;Lb(J[a+12>>2]+144|0,J[a+8>>2],J[a+4>>2]);ga=a+16|0;ga=d+16|0}function se(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;N[g+8>>2]=f;ic(J[g+28>>2],J[g+24>>2],J[g+20>>2],J[g+16>>2],J[g+12>>2],N[g+8>>2]);ga=g+32|0}function JA(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ya(2851);Q(ia[J[J[a>>2]+44>>2]](a,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+48>>2]](a,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+36>>2]](a,b,c,h));xa();return Q(Q(0))}function lb(a){var b=0,c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];if(J[a+12>>2]){if(H[a+16|0]&1){d=J[a+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=a;J[b+8>>2]=d;d=J[b+8>>2];if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}ga=b+16|0}J[a+12>>2]=0}ga=c+16|0}function _A(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{switch(c+1|0){case 0:case 6:break b;default:break a}}c:{switch(b-2|0){case 0:return Q(N[a+760>>2]);case 2:return Q(N[a+756>>2]);case 1:break c;default:break a}}d=N[a+752>>2]}return Q(d)}function WC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[b+4>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=d;d=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=d;b=J[c+4>>2];J[a+68>>2]=J[c>>2];J[a+72>>2]=b;b=J[c+12>>2];J[a+76>>2]=J[c+8>>2];J[a+80>>2]=b;J[a+48>>2]=1}function JH(a,b,c){a=a|0;b=b|0;c=c|0;a:{b:{c:{switch(J[b+216>>2]-2|0){case 0:case 3:break c;default:break b}}a=0;switch(J[c+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(!J[b+256>>2]){return 1}a=ia[J[J[b>>2]>>2]](b,c)|0}return a|0}function GH(a,b){a=a|0;b=b|0;var c=0;a:{if(!b){break a}a=J[a+64>>2];c=J[a+16>>2];if(c>>>0>b>>>0|P(J[a>>2],J[a+4>>2])+c>>>0<=b>>>0){break a}J[b>>2]=J[a+12>>2];J[a+12>>2]=b;J[a+8>>2]=J[a+8>>2]+1;return}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Fu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(116);Kd(a,J[f+28>>2],J[f+24>>2],J[f+20>>2]&65535,J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function Uf(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=ga-16|0;a=J[d+12>>2];J[b+12>>2]=a;J[J[b+12>>2]>>2]=1392;J[a>>2]=1308;_b(a+4|0,J[d+8>>2]);_b(a+68|0,J[d+4>>2]);_b(a+132|0,J[d+8>>2]);J[a+196>>2]=0;ga=d+16|0}function Yn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+108>>2]](a,J[e+8>>2],J[e+4>>2]);ia[J[J[a>>2]+108>>2]](a,(J[e+8>>2]+1|0)%3|0,J[e>>2]);ga=e+16|0}function qz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+896>>2];J[b>>2]=J[a+892>>2];J[b+4>>2]=d;d=J[a+904>>2];J[b+8>>2]=J[a+900>>2];J[b+12>>2]=d;b=J[a+920>>2];J[c+8>>2]=J[a+916>>2];J[c+12>>2]=b;b=J[a+912>>2];J[c>>2]=J[a+908>>2];J[c+4>>2]=b}function NH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if(J[b+748>>2]>0){a=0;while(1){c=P(a,184)+b|0;d=J[c+116>>2];a:{if(!d){break a}e=J[7969];if(!e){break a}ia[e|0](d)|0;J[c+116>>2]=0}a=a+1|0;if((a|0)<J[b+748>>2]){continue}break}}J[b+748>>2]=0}function kr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];if(J[a+8>>2]<0){J[a+8>>2]=0}if(J[a+8>>2]>2){J[a+8>>2]=2}J[b+176>>2]=J[a+8>>2];ga=c+16|0}function Dz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(1312);cl(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function zv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];ia[J[J[a>>2]+120>>2]](a,J[f+24>>2],J[f+20>>2],J[f+16>>2],J[f+12>>2]);ga=f+32|0}function Us(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(764);Yk(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function yE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);b=J[a+104>>2]+(b<<4)|0;d=N[b>>2];e=N[b+4>>2];f=N[b+8>>2];g=N[a+16>>2];h=N[a+20>>2];i=N[a+12>>2];J[c+12>>2]=0;N[c+8>>2]=f*h;N[c+4>>2]=e*g;N[c>>2]=d*i}function xz(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;if(N[a+68>>2]>Q(0)){b=N[a+92>>2];d=N[a+96>>2];e=N[a+88>>2];J[c+12>>2]=0;N[c>>2]=-e;N[c+8>>2]=-d;N[c+4>>2]=-b;zc(a+4|0,c,a+164|0);zc(a+16|0,a+88|0,a+180|0)}ga=c+16|0}function lH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);d=ga-16|0;ga=d;J[d+8>>2]=-1;J[d+12>>2]=J[a+24>>2];if(!J[b+4>>2]){J[b+4>>2]=d+8}e=J[a+20>>2];f=Q(ia[J[J[e>>2]+12>>2]](e,b,c));N[a+4>>2]=N[J[a+20>>2]+4>>2];ga=d+16|0;return Q(f)}function hH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);d=ga-16|0;ga=d;J[d+8>>2]=-1;J[d+12>>2]=J[a+16>>2];if(!J[b+4>>2]){J[b+4>>2]=d+8}e=J[a+12>>2];f=Q(ia[J[J[e>>2]+12>>2]](e,b,c));N[a+4>>2]=N[J[a+12>>2]+4>>2];ga=d+16|0;return Q(f)}function Pg(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];J[a+8>>2]=(J[c+52>>2]+2|0)%3;d=ga-16|0;J[d+12>>2]=c+28;ga=a+16|0;ga=b+16|0;return Q(N[J[d+12>>2]+(J[a+8>>2]<<2)>>2])}function mt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;c=J[d+12>>2];a=J[d+8>>2];e=c+a|0;b=H[d+7|0]&1;H[e+1309|0]=b;a:{if((a|0)<=2){H[e+788|0]=b;break a}H[(c+(a<<6)|0)+720|0]=b}ga=d+16|0}function Mn(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];d=J[b+4>>2];a=J[c+12>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=d;d=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=d;ia[J[J[a>>2]+72>>2]](a);ga=c+16|0}function nw(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(48);c=J[b+12>>2];H[a+16|0]=1;J[a+44>>2]=c;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+40>>2]=0;H[a+36|0]=1;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;ga=b+16|0;return a|0}function tA(a){a=a|0;var b=0,c=0,d=0;b=J[a+232>>2];if((b|0)>0){while(1){a:{b:{d=J[J[a+240>>2]+(c<<2)>>2];switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}yk(d);b=J[a+232>>2]}c=c+1|0;if((b|0)>(c|0)){continue}break}}}function Ie(a){H[a+356|0]=1;J[a>>2]=0;H[a+312|0]=0;J[a+292>>2]=1566444395;J[a+296>>2]=1566444395;J[a+336>>2]=0;J[a+340>>2]=0;J[a+300>>2]=1566444395;J[a+304>>2]=0;J[a+344>>2]=0;J[a+348>>2]=0;H[a+352|0]=0;H[a+332|0]=K[a+332|0]&240}function Vd(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=b;J[f+24>>2]=c;J[f+20>>2]=d;J[f+16>>2]=e;b=J[f+28>>2];N[f+12>>2]=Ua(b,J[f+24>>2]);N[f+8>>2]=Ua(b,J[f+20>>2]);N[f+4>>2]=Ua(b,J[f+16>>2]);na(a,f+12|0,f+8|0,f+4|0);ga=f+32|0}function th(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b+20>>2];J[c>>2]=J[b+16>>2];J[c+4>>2]=a;a=J[b+28>>2];J[c+8>>2]=J[b+24>>2];J[c+12>>2]=a;a=J[b+44>>2];J[d+8>>2]=J[b+40>>2];J[d+12>>2]=a;a=J[b+36>>2];J[d>>2]=J[b+32>>2];J[d+4>>2]=a}function Xn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=(J[d+12>>2]+56|0)+(J[d+8>>2]<<4)|0;c=J[a+4>>2];b=J[d+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c}function VC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+56>>2];J[b>>2]=J[a+52>>2];J[b+4>>2]=d;d=J[a+64>>2];J[b+8>>2]=J[a+60>>2];J[b+12>>2]=d;b=J[a+80>>2];J[c+8>>2]=J[a+76>>2];J[c+12>>2]=b;b=J[a+72>>2];J[c>>2]=J[a+68>>2];J[c+4>>2]=b}function Go(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];J[d+16>>2]=27968;b=J[d+16>>2];c=J[d+24>>2];J[d+8>>2]=J[d+20>>2];J[d+4>>2]=c;J[d>>2]=a;ba(b|0,1291,d|0)|0;ga=d+32|0}function xc(a,b,c,d,e){var f=0;f=ga-32|0;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];N[a>>2]=N[J[f+24>>2]>>2];N[a+4>>2]=N[J[f+20>>2]>>2];N[a+8>>2]=N[J[f+16>>2]>>2];N[a+12>>2]=N[J[f+12>>2]>>2]}function rn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+12>>2];J[b>>2]=J[a+8>>2];J[b+4>>2]=d;d=J[a+20>>2];J[b+8>>2]=J[a+16>>2];J[b+12>>2]=d;b=J[a+36>>2];J[c+8>>2]=J[a+32>>2];J[c+12>>2]=b;b=J[a+28>>2];J[c>>2]=J[a+24>>2];J[c+4>>2]=b}function Lm(a,b,c,d,e){J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;H[a+24|0]=1;J[a>>2]=9708;J[a+20>>2]=0;H[a+28|0]=e;J[a+12>>2]=0;J[a+16>>2]=0;b=J[b+4>>2];H[a+36|0]=0;J[a+32>>2]=b;J[a+40>>2]=J[J[(e?d:c)+4>>2]+68>>2];Km(a,c,d)}function Cy(a){a=a|0;var b=0,c=0,d=0;b=J[a+24>>2];if((b|0)>0){while(1){a:{b:{d=J[J[a+32>>2]+(c<<2)>>2];switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}lg(d);b=J[a+24>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}}function qn(a,b){a=a|0;b=b|0;var c=0,d=0;if(!L[a+56>>1]){b=1;I[a+64>>1]=1;d=J[a+60>>2];c=L[a+58>>1];if(c>>>0>1){while(1){c=(b<<6)+d|0;b=b+1|0;I[c+48>>1]=b;c=L[a+58>>1];if(c>>>0>b>>>0){continue}break}}I[((c<<6)+d|0)-16>>1]=0}}function tj(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]*N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]*N[J[c+8>>2]>>2];N[a+8>>2]=N[a+8>>2]*N[J[c+8>>2]>>2];N[a+12>>2]=N[a+12>>2]*N[J[c+8>>2]>>2];return a}function eG(a){a=a|0;var b=0;J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Nz(a){a=a|0;var b=0;J[a>>2]=20740;b=J[a+496>>2];if(!(b?!b|!K[a+500|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+496>>2]=0;H[a+500|0]=1;J[a+488>>2]=0;J[a+492>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function ml(a,b,c){var d=0;pl(a);d=J[a+248>>2];J[b>>2]=J[a+244>>2];J[b+4>>2]=d;d=J[a+256>>2];J[b+8>>2]=J[a+252>>2];J[b+12>>2]=d;b=J[a+272>>2];J[c+8>>2]=J[a+268>>2];J[c+12>>2]=b;b=J[a+264>>2];J[c>>2]=J[a+260>>2];J[c+4>>2]=b}function Su(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ua(40);b=J[d+12>>2];J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a>>2]=17188;J[a+8>>2]=0;J[a+12>>2]=0;ga=d+16|0;return a|0}function _E(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;J[a+68>>2]=J[a+68>>2]+1;c=J[a+16>>2];if((c|0)>0){while(1){d=c-1|0;if(J[(J[a+24>>2]+P(d,80)|0)+64>>2]==(b|0)){km(a,d)}e=c>>>0>1;c=d;if(e){continue}break}}ia[J[J[a>>2]+68>>2]](a)}function Vf(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];rf(a,J[d+8>>2]);b=J[d+4>>2];c=J[b+4>>2];J[a+48>>2]=J[b>>2];J[a+52>>2]=c;c=J[b+12>>2];J[a+56>>2]=J[b+8>>2];J[a+60>>2]=c;ga=d+16|0}function Lo(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-80|0;ga=e;J[e+76>>2]=a;J[e+72>>2]=b;N[e+68>>2]=c;J[e+64>>2]=d;a=J[e+76>>2];Pb(e);de(e);Wf(e,J[e+72>>2]);ia[J[J[a>>2]+16>>2]](a,N[e+68>>2],e,J[e+64>>2]);ga=e+80|0}function Yt(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;b=N[d+8>>2];a=J[d+12>>2];c=N[d+4>>2];N[a+448>>2]=c<Q(0)?Q(0):Q(T(c,Q(1)));N[a+444>>2]=b<Q(0)?Q(0):Q(T(b,Q(1)));ga=d+16|0}function No(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];ia[J[J[a>>2]+8>>2]](a,J[f+24>>2],J[f+20>>2],J[f+16>>2]);ga=f+32|0}function LH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=d;J[e+8>>2]=a;a=J[((P(J[J[b+4>>2]+4>>2],144)+a|0)+(J[J[c+4>>2]+4>>2]<<2)|0)+72>>2];a=ia[J[J[a>>2]+8>>2]](a,e+8|0,b,c)|0;ga=e+16|0;return a|0}function _i(a){var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=J[b+8>>2];J[b+12>>2]=a;d=a+48|0;c=a;while(1){J[(ga-16|0)+12>>2]=c;c=c+16|0;if((d|0)!=(c|0)){continue}break}Oa(a+48|0);N[a+64>>2]=.009999999776482582;ga=b+16|0}function Qs(a,b,c,d,e){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;N[f+20>>2]=c;N[f+16>>2]=d;N[f+12>>2]=e;Mi(J[f+28>>2],N[f+24>>2],N[f+20>>2],N[f+16>>2],N[f+12>>2],Q(1));ga=f+32|0}function Pn(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;d=J[b+12>>2];J[d>>2]=4660;a=ga-16|0;ga=a;J[a+12>>2]=d+68;c=ga-16|0;ga=c;J[c+12>>2]=J[a+12>>2];tc(J[c+12>>2]+4|0);ga=c+16|0;ga=a+16|0;ga=b+16|0;return d|0}function TA(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);d=Q(3.4028234663852886e38);a:{if((c|0)!=-1){break a}b:{switch(b-1|0){case 0:case 1:return Q(N[a+336>>2]);case 2:case 3:break b;default:break a}}d=N[a+340>>2]}return Q(d)}function cF(a){a=a|0;var b=0,c=Q(0),d=Q(0),e=Q(0);b=ga-32|0;ga=b;ia[J[J[a>>2]+12>>2]](a,b+16|0,b+12|0);ga=b+32|0;c=N[b+24>>2];d=Q(c*c);c=N[b+16>>2];e=Q(c*c);c=N[b+20>>2];return Q(Q(N[b+12>>2]+Q(Y(Q(d+Q(e+Q(c*c)))))))}function UA(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{if((d|0)!=-1){break a}b:{c:{switch(b-1|0){case 0:case 1:d=a+336|0;b=1;break b;case 2:case 3:break c;default:break a}}d=a+340|0;b=2}N[d>>2]=c;J[a+332>>2]=b|J[a+332>>2]}}function Pc(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[b+260>>2]=J[b+260>>2]+1;vb(b+4|0,J[a+8>>2]);ga=a+16|0;ga=c+16|0}function vb(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];tg(a,J[c+8>>2]);b=J[c+8>>2];d=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=d;d=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=d;ga=c+16|0}function uE(a){a=a|0;var b=0;J[a>>2]=13816;b=J[a+104>>2];if(!(b?!b|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+104>>2]=0;H[a+108|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;Qa(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function jI(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0;e=c>>>16|0;f=a>>>16|0;j=P(e,f);g=c&65535;h=a&65535;i=P(g,h);f=(i>>>16|0)+P(f,g)|0;e=(f&65535)+P(e,h)|0;ha=(P(b,c)+j|0)+P(a,d)+(f>>>16)+(e>>>16)|0;return i&65535|e<<16}function _w(){var a=0,b=0,c=0,d=0;b=ua(8);J[b>>2]=0;J[b+4>>2]=0;c=ga-16|0;ga=c;J[c+12>>2]=b;a=ga-16|0;d=J[c+12>>2];J[a+12>>2]=d;a=J[a+12>>2];J[a>>2]=1776;I[a+4>>1]=1;I[a+6>>1]=65535;J[d>>2]=1656;ga=c+16|0;return b|0}function _b(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];rf(a,J[c+8>>2]);b=J[c+8>>2];d=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=d;d=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=d;ga=c+16|0}function Tu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ua(8);d=J[c+12>>2];e=J[c+8>>2];a=ga-16|0;J[a+12>>2]=b;J[a+8>>2]=d;J[a+4>>2]=e;J[J[a+12>>2]>>2]=J[a+8>>2];ga=c+16|0;return b|0}function Bh(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=0;J[c+4>>2]=b;a=J[c+12>>2];J[c>>2]=J[c+8>>2];while(1){if(J[c>>2]<J[c+4>>2]){tc(J[a+12>>2]+P(J[c>>2],36)|0);J[c>>2]=J[c>>2]+1;continue}break}ga=c+16|0}function Qo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ig(J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function AG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[a+8>>2];d=J[c+8>>2];if((d|0)>0){a=0;while(1){e=J[(J[c+16>>2]+P(a,12)|0)+8>>2];if(e){ia[J[J[e>>2]+16>>2]](e,b);d=J[c+8>>2]}a=a+1|0;if((d|0)>(a|0)){continue}break}}}function OB(a){a=a|0;var b=0;J[a>>2]=19064;b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+140>>2]=0;H[a+144|0]=1;J[a+132>>2]=0;J[a+136>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function ks(){var a=0,b=0;b=ua(24);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];N[a>>2]=5.880000114440918;N[a+4>>2]=.8299999833106995;N[a+8>>2]=.8799999952316284;N[a+12>>2]=500;N[a+16>>2]=10.5;N[a+20>>2]=6e3;return b|0}function Xv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;Ml(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0}function Jp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;Ja(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0}function Ip(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;rb(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],J[f+12>>2]);ga=f+32|0}function Az(a,b){a=a|0;b=b|0;var c=Q(0);b=J[b+36>>2];c=jk(a+4|0,a+36|0,J[b+8>>2]+8|0,J[b+12>>2]+8|0,J[b+16>>2]+8|0,N[a+52>>2]);if(!(!(c>Q(0))|!(N[a+52>>2]>c))){J[a+56>>2]=b;N[a+52>>2]=c}J[a+60>>2]=J[a+60>>2]+1}function Ap(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];c=N[d+4>>2];N[(J[a+720>>2]+P(J[d+8>>2],104)|0)+88>>2]=c>Q(0)?Q(Q(1)/c):Q(0);H[a+924|0]=1;ga=d+16|0}function ag(a,b,c){var d=0;d=J[a+16>>2];if(!d){J[a+36>>2]=1;J[a+24>>2]=c;J[a+16>>2]=b;return}a:{if((b|0)==(d|0)){if(J[a+24>>2]!=2){break a}J[a+24>>2]=c;return}H[a+54|0]=1;J[a+24>>2]=2;J[a+36>>2]=J[a+36>>2]+1}}function Uc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+228>>2]=N[a+8>>2];ga=c+16|0}function Tc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+224>>2]=N[a+8>>2];ga=c+16|0}function Sc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+232>>2]=N[a+8>>2];ga=c+16|0}function bC(a){a=a|0;var b=0;a=J[a+140>>2];b=J[a+32>>2];if((b|0)>0){J[a+32>>2]=b+1;return}b=J[a+8>>2];ia[J[J[b>>2]+16>>2]](b,a+36|0,a+40|0,a+44|0,a+48|0,a+52|0,a+56|0,a+60|0,a- -64|0,J[a+28>>2]);J[a+32>>2]=1}function Rk(){var a=0;a=ga-16|0;ga=a;if(!K[32576]){J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;qg(31960,a);H[32576]=1}J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;we(31960,Q(0),a);ga=a+16|0;return 31960}function yv(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;if(!K[29304]){Pb(29240);H[29304]=1}a=c+8|0;b=J[c+76>>2];ia[J[J[b>>2]+132>>2]](a,b,J[c+72>>2]);vb(29240,a);ga=c+80|0;return 29240}function PA(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;if(!K[29028]){Pb(28964);H[29028]=1}a=c+8|0;b=J[c+76>>2];ia[J[J[b>>2]+132>>2]](a,b,J[c+72>>2]);vb(28964,a);ga=c+80|0;return 28964}function Ej(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;J[e+4>>2]=c;N[e>>2]=d;a=J[e+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[e+8>>2],J[e+4>>2],N[e>>2])|0;ga=e+16|0;return a|0}function kw(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2];J[c+8>>2]=0;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+12>>2]+(J[c+8>>2]<<4)|0}function YC(a){a=a|0;var b=0;J[a>>2]=16664;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Bb(a){J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;J[a+52>>2]=0;J[a>>2]=15776;return a}function jC(a){a=a|0;var b=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Og(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d+28;ga=a+16|0;ga=b+16|0;return Q(N[J[c+12>>2]+(J[d+52>>2]<<2)>>2])}function Ld(a){var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];N[b+8>>2]=sf(c);a=ga-16|0;ga=a;J[a+12>>2]=c;J[a+8>>2]=b+8;c=J[a+12>>2];N[a+4>>2]=Q(1)/N[J[a+8>>2]>>2];ih(c,a+4|0);ga=a+16|0;ga=b+16|0}function Fj(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[d+8>>2],J[d+4>>2],Q(.01666666753590107))|0;ga=d+16|0;return a|0}function qo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+14>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+12>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function ye(a){var b=Q(0);b=Pa(Q(N[a>>2]+N[a+4>>2]),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){return Q(b+Q(6.2831854820251465))}return b>Q(3.1415927410125732)?Q(b+Q(-6.2831854820251465)):b}function xe(a){var b=Q(0);b=Pa(Q(N[a>>2]-N[a+4>>2]),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){return Q(b+Q(6.2831854820251465))}return b>Q(3.1415927410125732)?Q(b+Q(-6.2831854820251465)):b}function nD(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0);d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(e*Q(d*Q(b*Q(.4000000059604645))));N[c+8>>2]=b;N[c+4>>2]=b;N[c>>2]=b}function ko(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+10>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+8>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function Gu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(116);Kd(a,J[e+12>>2],J[e+8>>2],J[e+4>>2]&65535,J[e>>2],0);ga=e+16|0;return a|0}function vj(a,b,c,d,e){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;N[f+20>>2]=c;N[f+16>>2]=d;N[f+12>>2]=e;xc(J[f+28>>2],f+24|0,f+20|0,f+16|0,f+12|0);ga=f+32|0}function rv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;Lf(J[f+28>>2],J[f+24>>2],f+20|0,f+16|0,f+12|0);ga=f+32|0}function mo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+6>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+4>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function xb(a,b,c,d){J[a+44>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1050253722;J[a+32>>2]=d;J[a+28>>2]=c;J[a+24>>2]=-1;I[a+20>>1]=1;J[a+16>>2]=2139095039;J[a+8>>2]=-1;J[a+12>>2]=-1;J[a+4>>2]=b;J[a>>2]=20112}function pq(){var a=0,b=0;a=ra(288);Bd(a);J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a+236>>2]=4;J[a>>2]=11348;J[8369]=J[8369]+1;b=ia[J[6782]](76,16)|0;mh(b);J[a+284>>2]=b;return a|0}function _s(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];N[d+572>>2]=N[a+8>>2];H[d+553|0]=1;ga=c+16|0}function Dc(a){a:{switch(J[a+4>>2]){case 8:return Q(N[a+28>>2]*N[a+12>>2]);default:return Q(ia[J[J[a>>2]+48>>2]](a));case 0:case 1:case 4:case 5:case 10:case 11:case 13:break a}}return N[a+44>>2]}function $s(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];N[d+572>>2]=N[a+8>>2];H[d+553|0]=0;ga=c+16|0}function ob(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];d=ga-16|0;c=J[a+12>>2];J[d+12>>2]=c;Eb(c,J[J[d+12>>2]+4>>2]);lb(c);Yd(c);ga=a+16|0;ga=b+16|0}function fG(a){a=a|0;var b=0;J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function Oz(a){a=a|0;var b=0;J[a>>2]=20740;b=J[a+496>>2];if(!(b?!b|!K[a+500|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+496>>2]=0;H[a+500|0]=1;J[a+488>>2]=0;J[a+492>>2]=0;J[a>>2]=6652;return a|0}function nx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return Q(N[J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<2)>>2])}function Pe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;I[e+6>>1]=c;I[e+4>>1]=d;a=J[e+12>>2];ia[J[J[a>>2]+36>>2]](a,J[e+8>>2],I[e+6>>1],I[e+4>>1]);ga=e+16|0}function Nj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;I[e+6>>1]=c;I[e+4>>1]=d;a=J[e+12>>2];ia[J[J[a>>2]+88>>2]](a,J[e+8>>2],I[e+6>>1],I[e+4>>1]);ga=e+16|0}function Es(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+192>>2]=qe(N[a+8>>2]);ga=a+16|0;ga=c+16|0}function Ds(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+196>>2]=qe(N[a+8>>2]);ga=a+16|0;ga=c+16|0}function kD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;J[c+8>>2]=-581039253;J[c+12>>2]=0;J[c>>2]=-581039253;J[c+4>>2]=-581039253;J[d+8>>2]=1566444395;J[d+12>>2]=0;J[d>>2]=1566444395;J[d+4>>2]=1566444395}function Vs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(764);Yk(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2],0);ga=e+16|0;return a|0}function Uz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b>>2];d=J[a+80>>2];if(!(!(L[b+6>>1]&L[a+8>>1])|(!(L[a+10>>1]&L[b+4>>1])|(c|0)==(d|0)))){a=J[a+92>>2];e=ia[J[J[a>>2]+28>>2]](a,d,c)|0}return e|0}function zr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+188>>2]=J[a>>2];J[b+192>>2]=c;c=J[a+12>>2];J[b+196>>2]=J[a+8>>2];J[b+200>>2]=c}function yu(a,b,c,d){a=Q(a);b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;N[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;b=ua(140);Ri(b,N[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0;return b|0}function lr(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;J[e>>2]=d;a=ra(184);kl(a,J[e+12>>2],J[e+8>>2],N[e+4>>2],J[e>>2]);ga=e+16|0;return a|0}function Op(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(1252);Ac(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0;return a|0}function Er(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+156>>2]=J[a>>2];J[b+160>>2]=c;c=J[a+12>>2];J[b+164>>2]=J[a+8>>2];J[b+168>>2]=c}function Br(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+172>>2]=J[a>>2];J[b+176>>2]=c;c=J[a+12>>2];J[b+180>>2]=J[a+8>>2];J[b+184>>2]=c}function yj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+8>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2])|0;ga=e+16|0}function ce(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<2)>>2]}function Wn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+124>>2]](a,J[e>>2],J[e+8>>2],J[e+4>>2]);ga=e+16|0}function Nv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;N[e>>2]=d;a=ua(32);aj(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],N[e>>2]);ga=e+16|0;return a|0}function Mh(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];J[c+4>>2]=0;while(1){if(J[c+4>>2]<4){b=J[c+4>>2]<<2;N[b+J[c+8>>2]>>2]=N[a+b>>2];J[c+4>>2]=J[c+4>>2]+1;continue}break}}function Fb(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+28>>2]](a,J[e+8>>2],N[e+4>>2],J[e>>2]);ga=e+16|0}function DG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[a+12>>2];if((c|0)>0){while(1){e=J[J[a+20>>2]+(d<<2)>>2];if(e){ia[J[J[e>>2]+16>>2]](e,b);c=J[a+12>>2]}d=d+1|0;if((c|0)>(d|0)){continue}break}}}function jb(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]+N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]+N[J[c+8>>2]+4>>2];N[a+8>>2]=N[a+8>>2]+N[J[c+8>>2]+8>>2];return a}function ee(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+28>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Xd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+32>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Sn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+80>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Kq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+24>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function yk(a){if(!(K[a+204|0]&3)){N[a+412>>2]=Q(N[a+364>>2]*N[a+348>>2])+N[a+412>>2];N[a+416>>2]=Q(N[a+368>>2]*N[a+352>>2])+N[a+416>>2];N[a+420>>2]=Q(N[a+372>>2]*N[a+356>>2])+N[a+420>>2]}}function xf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+8>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function sf(a){var b=0,c=0,d=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];d=Ua(c,c);ga=a+16|0;a=ga-16|0;N[a+12>>2]=d;ga=b+16|0;return Q(Y(N[a+12>>2]))}function dq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],104)|0}function zw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],36)|0}function pj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+20>>2]=J[a>>2];J[b+24>>2]=c;c=J[a+12>>2];J[b+28>>2]=J[a+8>>2];J[b+32>>2]=c}function nj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+36>>2]=J[a>>2];J[b+40>>2]=c;c=J[a+12>>2];J[b+44>>2]=J[a+8>>2];J[b+48>>2]=c}function mj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+52>>2]=J[a>>2];J[b+56>>2]=c;c=J[a+12>>2];J[b+60>>2]=J[a+8>>2];J[b+64>>2]=c}function kj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+68>>2]=J[a>>2];J[b+72>>2]=c;c=J[a+12>>2];J[b+76>>2]=J[a+8>>2];J[b+80>>2]=c}function ij(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+56>>2]=J[a>>2];J[b+60>>2]=c;c=J[a+12>>2];J[b+64>>2]=J[a+8>>2];J[b+68>>2]=c}function hq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],44)|0}function gq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+72>>2]=J[a>>2];J[b+76>>2]=c;c=J[a+12>>2];J[b+80>>2]=J[a+8>>2];J[b+84>>2]=c}function fj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+32>>2]=J[a>>2];J[b+36>>2]=c;c=J[a+12>>2];J[b+40>>2]=J[a+8>>2];J[b+44>>2]=c}function fd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+16>>2]=J[a>>2];J[b+20>>2]=c;c=J[a+12>>2];J[b+24>>2]=J[a+8>>2];J[b+28>>2]=c}function dj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+24>>2]=J[a>>2];J[b+28>>2]=c;c=J[a+12>>2];J[b+32>>2]=J[a+8>>2];J[b+36>>2]=c}function bx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+64>>2]=J[a>>2];J[b+68>>2]=c;c=J[a+12>>2];J[b+72>>2]=J[a+8>>2];J[b+76>>2]=c}function bu(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(616);c=J[b+12>>2];Bd(a);H[a+500|0]=1;J[a>>2]=20740;J[a+496>>2]=0;J[a+488>>2]=0;J[a+492>>2]=0;zk(a,c);ga=b+16|0;return a|0}function Wf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+48>>2]=J[a>>2];J[b+52>>2]=c;c=J[a+12>>2];J[b+56>>2]=J[a+8>>2];J[b+60>>2]=c}function Vw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+12>>2]=J[a>>2];J[b+16>>2]=c;c=J[a+12>>2];J[b+20>>2]=J[a+8>>2];J[b+24>>2]=c}function Uw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+28>>2]=J[a>>2];J[b+32>>2]=c;c=J[a+12>>2];J[b+36>>2]=J[a+8>>2];J[b+40>>2]=c}function Sw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+44>>2]=J[a>>2];J[b+48>>2]=c;c=J[a+12>>2];J[b+52>>2]=J[a+8>>2];J[b+56>>2]=c}function Qw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+60>>2]=J[a>>2];J[b+64>>2]=c;c=J[a+12>>2];J[b+68>>2]=J[a+8>>2];J[b+72>>2]=c}function Qf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+40>>2]=J[a>>2];J[b+44>>2]=c;c=J[a+12>>2];J[b+48>>2]=J[a+8>>2];J[b+52>>2]=c}function Gb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];e=Q(ia[J[J[a>>2]+32>>2]](a,J[d+8>>2],J[d+4>>2]));ga=d+16|0;return Q(e)}function $p(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+76>>2]=J[a>>2];J[b+80>>2]=c;c=J[a+12>>2];J[b+84>>2]=J[a+8>>2];J[b+88>>2]=c}function vE(a){a=a|0;var b=0;J[a>>2]=13816;b=J[a+104>>2];if(!(b?!b|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+104>>2]=0;H[a+108|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;Qa(a);return a|0}function jc(a){J[a+16>>2]=0;J[a+8>>2]=-1;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a+32>>2]=0;H[a+36|0]=1;H[a+56|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;J[a+52>>2]=0;J[a+44>>2]=0;J[a+48>>2]=0;return a}function go(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;N[d+24>>2]=b;J[d+20>>2]=c;a=J[d+20>>2];N[d+16>>2]=0;N[d+12>>2]=0;N[d+8>>2]=0;na(a,d+16|0,d+12|0,d+8|0);ga=d+32|0}function ej(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+8>>2]=J[a>>2];J[b+12>>2]=c;c=J[a+12>>2];J[b+16>>2]=J[a+8>>2];J[b+20>>2]=c}function aw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<5)|0}function Pp(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(c){a=ga-16|0;ga=a;J[a+12>>2]=c;d=J[a+12>>2];ob(d+144|0);ob(d+124|0);ob(d+104|0);ga=a+16|0;ta(c)}ga=b+16|0}function Aw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<4)|0}function wF(a){a=a|0;var b=0;J[a>>2]=12196;if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function na(a,b,c,d){var e=0;e=ga-16|0;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];N[a>>2]=N[J[e+8>>2]>>2];N[a+4>>2]=N[J[e+4>>2]>>2];N[a+8>>2]=N[J[e>>2]>>2];N[a+12>>2]=0}function ih(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]*N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]*N[J[c+8>>2]>>2];N[a+8>>2]=N[a+8>>2]*N[J[c+8>>2]>>2];return a}function cq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+4>>2]=J[a>>2];J[b+8>>2]=c;c=J[a+12>>2];J[b+12>>2]=J[a+8>>2];J[b+16>>2]=c}function Lu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return(J[a+12>>2]+4|0)+P(J[a+8>>2],184)|0}function fb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ia[J[J[c>>2]+40>>2]](c,a)|0;e=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b>>2]=e;if(e){ia[J[J[c>>2]+48>>2]](c,d)}J[b+4>>2]=J[a+4>>2];return 3781}function be(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c}function Zz(a,b){a=a|0;b=Q(b);var c=0,d=0;ya(2618);if(J[a+280>>2]>0){while(1){d=J[J[a+288>>2]+(c<<2)>>2];ia[J[J[d>>2]+8>>2]](d,a,b);c=c+1|0;if((c|0)<J[a+280>>2]){continue}break}}xa()}function Oe(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];if(H[c+48|0]&1){ia[J[J[c>>2]+68>>2]](c);H[c+48|0]=0}ga=a+16|0;ga=b+16|0}function Gy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(324);Lk(a,J[e+12>>2],J[e+8>>2],J[e+4>>2]);ga=e+16|0;return a|0}function Bt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];b=J[a+192>>2];ia[J[J[b>>2]+8>>2]](b,a+4|0,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ax(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;sj(J[a+12>>2],J[a+8>>2]);ga=a+16|0;ga=c+16|0}function ln(a){a=a|0;var b=0;J[a>>2]=5668;if(K[a+192|0]){b=J[a+136>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+136>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}sb(a- -64|0);sb(a+4|0);return a|0}function PB(a){a=a|0;var b=0;J[a>>2]=19064;b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+140>>2]=0;H[a+144|0]=1;J[a+132>>2]=0;J[a+136>>2]=0;return a|0}function Md(a){var b=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+8>>2];a:{if(J[J[a+12>>2]+236>>2]==4){J[b+12>>2]=J[b+8>>2];break a}J[b+12>>2]=0}ga=b+16|0;return J[b+12>>2]}function av(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+144;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+40>>2]}function Qx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=wc(N[J[a+12>>2]+12>>2]);N[a+8>>2]=c+c;ga=a+16|0;ga=b+16|0;return Q(N[a+8>>2])}function Ho(a,b){a=a|0;b=b|0;var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=J[c+28>>2];J[c+20>>2]=27724;b=J[c+20>>2];J[c+4>>2]=J[c+24>>2];J[c>>2]=a;ba(b|0,1288,c|0)|0;ga=c+32|0}function Fo(a,b){a=a|0;b=b|0;var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=J[c+28>>2];J[c+20>>2]=28191;b=J[c+20>>2];J[c+4>>2]=J[c+24>>2];J[c>>2]=a;ba(b|0,1295,c|0)|0;ga=c+32|0}function xj(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+264;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function _x(a,b,c,d){a=Q(a);b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;N[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;f=ua(16);he(f,e+12|0,e+8|0,e+4|0,e);ga=e+16|0;return f|0}function Xu(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+148;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function Oq(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+132;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function AC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,40)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a>>2]=17188;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function ew(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+12;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function Qd(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[J[a+12>>2]+68>>2];c=ia[J[J[c>>2]+36>>2]](c)|0;ga=a+16|0;ga=b+16|0;return c|0}function HH(a,b){a=a|0;b=b|0;var c=0,d=0;a=J[a+64>>2];c=J[a+8>>2];if(c){b=J[a+12>>2];d=J[b>>2];J[a+8>>2]=c-1;J[a+12>>2]=d;return b|0}J[8369]=J[8369]+1;return ia[J[6782]](b,16)|0}function Cs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+1096|0]=H[a+11|0]&1;ga=c+16|0}function kn(a){a=a|0;var b=0;J[a>>2]=5668;if(K[a+192|0]){b=J[a+136>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+136>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}sb(a- -64|0);sb(a+4|0);ta(a)}function ct(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+524|0]=H[a+11|0]&1;ga=c+16|0}function at(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+552|0]=H[a+11|0]&1;ga=c+16|0}function Xq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+170|0]=H[a+11|0]&1;ga=c+16|0}function Ns(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+736|0]=H[a+11|0]&1;ga=c+16|0}function Ms(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+737|0]=H[a+11|0]&1;ga=c+16|0}function Ol(a){a=a|0;var b=0;J[a>>2]=16664;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;return a|0}function Jb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+21|0]=H[a+11|0]&1;ga=c+16|0}function Fy(a){a=a|0;var b=0;J[a>>2]=23088;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;return a|0}function Bs(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+1104>>2]=N[a+8>>2];ga=c+16|0}function As(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+1100>>2]=N[a+8>>2];ga=c+16|0}function vc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+184>>2]=N[a+8>>2];ga=c+16|0}function kC(a){a=a|0;var b=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function bt(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+440>>2]=N[a+8>>2];ga=c+16|0}function QH(a){a=a|0;var b=0;J[a>>2]=6484;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;return a|0}function Oc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+252>>2]=N[a+8>>2];ga=c+16|0}function Ls(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+684>>2]=N[a+8>>2];ga=c+16|0}function Lc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+248>>2]=N[a+8>>2];ga=c+16|0}function Hu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ra(116);Kd(a,J[d+12>>2],J[d+8>>2],J[d+4>>2]&65535,0,0);ga=d+16|0;return a|0}function Fs(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+188>>2]=N[a+8>>2];ga=c+16|0}function Bq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+104>>2]=N[a+8>>2];ga=c+16|0}function on(a){a=a|0;var b=0;J[a>>2]=5524;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function mb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+240>>2]=J[a+8>>2];ga=c+16|0}function cc(a){var b=0,c=0;b=J[6788];c=a+3&-4;a=b+c|0;a:{if(a>>>0<=b>>>0?c:0){break a}if(a>>>0>ja()<<16>>>0){if(!(da(a|0)|0)){break a}}J[6788]=a;return b}J[8386]=48;return-1}function Qc(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+204>>2]=J[a+8>>2];ga=c+16|0}function Hb(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+16>>2]=N[a+8>>2];ga=c+16|0}function Gj(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[c+8>>2],1,Q(.01666666753590107))|0;ga=c+16|0;return a|0}function Fm(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+12>>2]=N[a+8>>2];ga=c+16|0}function sq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+84>>2]=J[a+8>>2];ga=c+16|0}function rq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+88>>2]=J[a+8>>2];ga=c+16|0}function Zn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;mf(J[d+12>>2],J[d+4>>2]);if(J[d+8>>2]){N[d>>2]=-1;ih(J[d+4>>2],d)}ga=d+16|0}function Pd(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+4>>2]=N[a+8>>2];ga=c+16|0}function Od(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+8>>2]=N[a+8>>2];ga=c+16|0}function GF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if(b>>>0<=11){b=b<<2;e=J[b+12076>>2];b=J[b+12028>>2]}else{b=0}ia[J[J[a>>2]+108>>2]](a,b,c);ia[J[J[a>>2]+108>>2]](a,e,d)}function yf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;Af(J[e+12>>2],J[e+8>>2],J[e+4>>2],H[e+3|0]&1);ga=e+16|0}function so(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-144|0;ga=c;J[c+140>>2]=a;J[c+136>>2]=b;a=c+8|0;b=J[c+140>>2];rj(a,b+68|0);d=c+72|0;Td(d,a,b+4|0);vb(J[c+136>>2],d);ga=c+144|0}function it(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=J[c+12>>2];yg(b);b=b+(a<<2)|0;N[b+1316>>2]=N[b+((a|0)<3?1256:1180)>>2];ga=c+16|0}function cy(){var a=0,b=0,c=0,d=0;b=ua(4);J[b>>2]=0;a=ga-16|0;ga=a;J[a+12>>2]=b;c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;J[J[c+12>>2]>>2]=1184;J[d>>2]=1032;ga=a+16|0;return b|0}function bw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;lm(J[e+12>>2],J[e+8>>2],J[e+4>>2],H[e+3|0]&1);ga=e+16|0}function Rd(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]>>2]=N[a+8>>2];ga=c+16|0}function fI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)!=(c|0)){d=J[J[a+4>>2]+136>>2];ia[J[J[d>>2]+8>>2]](d,J[b+36>>2],J[c+36>>2])|0;a=J[a+4>>2];J[a+160>>2]=J[a+160>>2]+1}}function Yv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;Ml(J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2],0);ga=e+16|0}function Vh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=1572;ob(a+112|0);ob(a+92|0);ob(a+72|0);ob(a+20|0);J[(ga-16|0)+12>>2]=a;ga=b+16|0;return a|0}function Tq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+252>>2]=N[d+8>>2];ga=d+16|0}function Sq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+232>>2]=N[d+8>>2];ga=d+16|0}function PH(a){a=a|0;var b=0;J[a>>2]=6484;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;ta(a)}function Lq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+256>>2]=N[d+8>>2];ga=d+16|0}function Qk(a){var b=0,c=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=J[b+8>>2];J[b+12>>2]=a;c=a+48|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}ga=b+16|0}function $b(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=b;N[c+8>>2]=-N[J[c+12>>2]>>2];N[c+4>>2]=-N[J[c+12>>2]+4>>2];N[c>>2]=-N[J[c+12>>2]+8>>2];na(a,c+8|0,c+4|0,c);ga=c+16|0}function mr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=ra(184);kl(a,J[d+12>>2],J[d+8>>2],N[d+4>>2],1);ga=d+16|0;return a|0}function Qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;H[d+11|0]=b;H[d+10|0]=c;a=ra(76);qm(a,J[d+12>>2],H[d+11|0]&1,H[d+10|0]&1);ga=d+16|0;return a|0}function zj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;I[d+6>>1]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],I[d+6>>1],-3);ga=d+16|0}function em(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;I[d+6>>1]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],I[d+6>>1],-1);ga=d+16|0}function aC(a){a=a|0;var b=0;a=J[a+140>>2];b=J[a+32>>2];if(b){if((b|0)>=2){b=b-1|0}else{b=J[a+8>>2];ia[J[J[b>>2]+24>>2]](b,J[a+28>>2]);J[a+36>>2]=0;b=0}J[a+32>>2]=b}}function Lz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(1312);bl(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Gd(a,b){var c=0;if(J[b+40>>2]){Gd(a,J[b+36>>2]);Gd(a,J[b+40>>2])}if(J[a>>2]==(b|0)){J[a>>2]=0}c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=b}function pt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];b=J[c+8>>2];c=J[b+4>>2];J[a+348>>2]=J[b>>2];J[a+352>>2]=c;J[a+356>>2]=J[b+8>>2]}function jr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+20>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function gr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function Ws(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(764);Xk(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Vy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=J[b>>2];c=ia[J[J[c>>2]+56>>2]](c,20)|0;a=K[a+4|0];J[c>>2]=8624;J[c+4>>2]=J[b>>2];H[c+16|0]=a;J[c>>2]=22656;return c|0}function PG(a){a=a|0;var b=0;J[a+12>>2]=9408;J[a>>2]=9380;b=J[a+60>>2];ia[J[J[b>>2]+20>>2]](b,J[a+76>>2]);b=J[a+60>>2];ia[J[J[b>>2]+16>>2]](b,J[a+76>>2]);return a|0}function Oi(a,b){var c=0,d=0;c=ga-48|0;ga=c;J[c+44>>2]=a;J[c+40>>2]=b;b=c+8|0;a=J[c+44>>2];wa(b,a+264|0,J[c+40>>2]);d=c+24|0;Kb(d,b,a+544|0);jb(a+328|0,d);ga=c+48|0}function Ni(a,b){var c=0,d=0;c=ga-48|0;ga=c;J[c+44>>2]=a;J[c+40>>2]=b;b=c+8|0;a=J[c+44>>2];Kb(b,J[c+40>>2],a+348|0);d=c+24|0;Ia(d,b,a+344|0);jb(a+312|0,d);ga=c+48|0}function Ik(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+136>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ea(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+32>>2]](a,N[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ce(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+104>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Be(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+108>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function fi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+40>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Yf(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+8>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function Hj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=J[d+12>>2];ia[J[J[a>>2]+56>>2]](a,J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function Fl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+16>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Cl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+20>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ua(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];b=J[c+8>>2];return Q(Q(N[a+8>>2]*N[b+8>>2])+Q(Q(N[a>>2]*N[b>>2])+Q(N[a+4>>2]*N[b+4>>2])))}function oq(){var a=0,b=0,c=0,d=0;b=ua(4);a=ga-16|0;ga=a;J[a+12>>2]=b;c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;J[J[c+12>>2]>>2]=5268;J[d>>2]=5168;ga=a+16|0;return b|0}function Ij(a,b,c,d){var e=0,f=0;e=J[a+4>>2];f=J[a>>2];a=0;a:{if(!c){break a}a=e>>8;if(!(e&1)){break a}a=J[a+J[c>>2]>>2]}ia[J[J[f>>2]+28>>2]](f,b,a+c|0,e&2?d:2)}function Dj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7403]=J[a+8>>2];ga=c+16|0}function Cj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7970]=J[a+8>>2];ga=c+16|0}function Bj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7969]=J[a+8>>2];ga=c+16|0}function OG(a){a=a|0;var b=0;J[a+12>>2]=9408;J[a>>2]=9380;b=J[a+60>>2];ia[J[J[b>>2]+20>>2]](b,J[a+76>>2]);b=J[a+60>>2];ia[J[J[b>>2]+16>>2]](b,J[a+76>>2]);ta(a)}function lt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1340>>2]=N[d+4>>2];ga=d+16|0}function kt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1364>>2]=N[d+4>>2];ga=d+16|0}function ht(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1316>>2]=N[d+4>>2];ga=d+16|0}function ep(a,b,c){a=Q(a);b=Q(b);c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;e=ra(16);na(e,d+12|0,d+8|0,d+4|0);ga=d+16|0;return e|0}function Xx(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];N[a+8>>2]=Xf(c);uj(c,a+8|0);ga=a+16|0;ga=b+16|0}function xF(a){a=a|0;var b=0;J[a>>2]=12196;if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function Nn(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;na(J[e+12>>2],e+8|0,e+4|0,e);ga=e+16|0}function iC(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+156>>2]=J[b>>2];J[a+160>>2]=c;c=J[b+12>>2];J[a+164>>2]=J[b+8>>2];J[a+168>>2]=c;ia[J[J[a>>2]+72>>2]](a)}function Mz(a){a=a|0;J[8148]=20740;a=J[8272];if(!(a?!a|!K[33092]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[33092]=1;J[8270]=0;J[8271]=0;J[8272]=0;J[8148]=6652}function BA(a){a=a|0;J[7990]=20740;a=J[8114];if(!(a?!a|!K[32460]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[32460]=1;J[8112]=0;J[8113]=0;J[8114]=0;J[7990]=6652}function wc(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;if(N[b+12>>2]<Q(-1)){N[b+12>>2]=-1}if(N[b+12>>2]>Q(1)){N[b+12>>2]=1}a=qb(N[b+12>>2]);ga=b+16|0;return a}function tp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=mk(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0;return a|0}function dn(){var a=0;a=ua(8);J[8371]=a;aa(a|0,0)|0;J[8373]=0;J[8374]=0;J[8372]=2439;J[8375]=0;J[8376]=0;J[8377]=0;J[8378]=0;J[8379]=0;J[8380]=0;ne(33488)}function cb(a){var b=0,c=0;b=a*a;c=b*a;return Q(c*(b*b)*(b*2718311493989822e-21+-.00019839334836096632)+(c*(b*.008333329385889463+-.16666666641626524)+a))}function bA(a,b){a=a|0;b=b|0;var c=0;if(K[a+273|0]){c=J[a+200>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[a+200>>2]=b;H[a+273|0]=0;J[J[a+196>>2]+8>>2]=b}function Wv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=Qe(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Eb(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=0;J[c+4>>2]=b;J[c>>2]=J[c+8>>2];while(1){if(J[c>>2]<J[c+4>>2]){J[c>>2]=J[c>>2]+1;continue}break}}function kq(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(c){a=ga-16|0;ga=a;J[a+12>>2]=c;tc(J[a+12>>2]+56|0);ga=a+16|0;ta(c)}ga=b+16|0}function Eo(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[b+8>>2]=28417;c=J[b+8>>2];J[b>>2]=a;a=ba(c|0,1298,b|0)|0;ga=b+16|0;return a|0}function wx(a){a=a|0;var b=0;b=ga-80|0;ga=b;J[b+76>>2]=a;if(!K[29236]){Pb(29172);H[29236]=1}a=b+8|0;rj(a,J[b+76>>2]);vb(29172,a);ga=b+80|0;return 29172}function cm(a){a=a|0;var b=Q(0),c=Q(0);b=N[a+28>>2];c=Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));return Q(Q(b+c))}function aI(a,b,c){a=a|0;b=b|0;c=c|0;a:{if(!c){break a}a=J[b+8>>2];if(!a){break a}ia[J[J[a>>2]>>2]](a)|0;ia[J[J[c>>2]+60>>2]](c,J[b+8>>2]);J[b+8>>2]=0}}function XD(a){a=a|0;var b=Q(0),c=Q(0);b=N[a+32>>2];Q(ia[J[J[a>>2]+48>>2]](a));c=Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));return Q(Q(b+c))}function Lh(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];a:{if(N[a>>2]<N[a+4>>2]){a=N[a+4>>2]<N[a+8>>2]?2:1;break a}a=N[a>>2]<N[a+8>>2]?2:0}return a}function id(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=J[c+12>>2];if((J[b+216>>2]&-2)!=4){J[b+216>>2]=a}ga=c+16|0}function Vk(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+124>>2]](a,J[c+8>>2])|0;ga=c+16|0;return a|0}function wG(a){a=a|0;var b=0,c=0;J[a>>2]=10120;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function vk(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+40>>2]](a,J[c+8>>2])|0;ga=c+16|0;return a|0}function tG(a){a=a|0;var b=0,c=0;J[a>>2]=10192;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function pw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+92>>2]](a,J[c+8>>2])&1;ga=c+16|0;return a|0}function ms(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;J[b+12>>2]=a;c=N[J[b+12>>2]+48>>2];a:{if(Q(R(c))<Q(2147483648)){a=~~c;break a}a=-2147483648}return a|0}function kE(a,b){a=a|0;b=b|0;var c=0,d=0;d=J[b+4>>2];c=J[a+92>>2];J[c+4>>2]=J[b>>2];J[c+8>>2]=d;d=J[b+12>>2];J[c+12>>2]=J[b+8>>2];J[c+16>>2]=d;Sb(a)}function XG(a){a=a|0;var b=0,c=0;J[a>>2]=8776;a:{if(!K[a+16|0]){break a}b=J[a+20>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function Ve(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0);c=N[b>>2];d=N[b+4>>2];e=N[b+8>>2];J[a+24>>2]=0;N[a+20>>2]=R(e);N[a+16>>2]=R(d);N[a+12>>2]=R(c)}function UF(a){a=a|0;var b=0,c=0;J[a>>2]=11584;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function RF(a){a=a|0;var b=0,c=0;J[a>>2]=11660;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function Qa(a){a=a|0;var b=0;J[a>>2]=15776;b=J[a+52>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function MG(a){a=a|0;var b=0;J[a>>2]=9408;b=J[a+48>>2];ia[J[J[b>>2]+20>>2]](b,J[a+64>>2]);b=J[a+48>>2];ia[J[J[b>>2]+16>>2]](b,J[a+64>>2]);return a|0}function Eq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return Q(N[(J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0)+232>>2])}function fy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e);return}a=J[a+8>>2];ia[J[J[a>>2]+20>>2]](a,b,c,d,e,f)}function $H(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=c;J[d+8>>2]=a;J[d+4>>2]=b;J[d>>2]=6124;ia[J[J[a>>2]+48>>2]](a,d,c);ga=d+16|0}function Lj(a){var b=0,c=0;c=a>>>23&255;b=0;a:{if(c>>>0<127){break a}b=2;if(c>>>0>150){break a}c=1<<150-c;b=0;if(c-1&a){break a}b=a&c?1:2}return b}function TH(a,b){a=a|0;b=b|0;var c=0;c=J[a+4>>2];if(!((c|0)!=J[b>>2]&(c|0)!=J[b+4>>2])){c=J[a+8>>2];ia[J[J[c>>2]+32>>2]](c,b,J[a+12>>2])}return 0}function ro(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;a=c+8|0;b=J[c+76>>2];Td(a,J[c+72>>2],b+68|0);vb(b+4|0,a);ga=c+80|0}function Iu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(116);Kd(a,J[c+12>>2],J[c+8>>2],16384,0,0);ga=c+16|0;return a|0}function zf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Af(J[d+12>>2],J[d+8>>2],J[d+4>>2],0);ga=d+16|0}function vG(a){a=a|0;var b=0,c=0;J[a>>2]=10120;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function sG(a){a=a|0;var b=0,c=0;J[a>>2]=10192;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function cw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;lm(J[d+12>>2],J[d+8>>2],J[d+4>>2],1);ga=d+16|0}function bD(a,b,c){a=a|0;b=b|0;c=c|0;a=(b<<4)+a|0;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b}function WG(a){a=a|0;var b=0,c=0;J[a>>2]=8776;a:{if(!K[a+16|0]){break a}b=J[a+20>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function TF(a){a=a|0;var b=0,c=0;J[a>>2]=11584;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function QF(a){a=a|0;var b=0,c=0;J[a>>2]=11660;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function LG(a){a=a|0;var b=0;J[a>>2]=9408;b=J[a+48>>2];ia[J[J[b>>2]+20>>2]](b,J[a+64>>2]);b=J[a+48>>2];ia[J[J[b>>2]+16>>2]](b,J[a+64>>2]);ta(a)}function KH(a,b,c){a=a|0;b=b|0;c=c|0;a=0;b=J[b+204>>2];a:{if(b&4){break a}c=J[c+204>>2];if(c&4){break a}if(!(b&3)){return 1}a=!(c&3)}return a|0}function _q(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];b=N[c+8>>2];N[a+36>>2]=b;N[a+40>>2]=Ha(b);ga=c+16|0}function Xt(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;we(J[d+12>>2],N[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ok(a){var b=0;b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0}function IH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+8>>2]=a;J[e+4>>2]=c;J[e>>2]=6592;ia[J[J[b>>2]+48>>2]](b,e,d);ga=e+16|0}function uj(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[c+4>>2]=Q(1)/N[J[c+8>>2]>>2];a=tj(a,c+4|0);ga=c+16|0;return a}function rw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;jm(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Lb(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function pv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Wi(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function db(a){var b=0;a=a*a;b=a*a;return Q(a*b*(a*2439044879627741e-20+-.001388676377460993)+(b*.04166662332373906+(a*-.499999997251031+1)))}function Wy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,24)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=23016;return a|0}function Qq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;pg(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function Nt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;ub(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Dp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;te(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Cw(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+20|0)+(J[d+8>>2]<<2)>>2]=N[d+4>>2]}function Cq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;og(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function ol(a,b){var c=0,d=0;d=pl(a);c=J[a+288>>2];J[b+8>>2]=J[a+284>>2];J[b+12>>2]=c;c=J[a+280>>2];J[b>>2]=J[a+276>>2];J[b+4>>2]=c;return d}function kG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,8)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=11244;return a|0}function JF(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<=5){J[c+12>>2]=0;a=b<<2;N[c+8>>2]=N[a+12004>>2];N[c+4>>2]=N[a+11980>>2];N[c>>2]=N[a+11956>>2]}}function iq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;J[(J[d+12>>2]+8|0)+(J[d+8>>2]<<2)>>2]=J[d+4>>2]}function Rq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return(J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0)+92|0}function tm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2],1,-1);ga=c+16|0}function qj(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=1548;N[a+4>>2]=1;J[a+8>>2]=0;I[a+12>>1]=1;I[a+14>>1]=65535;J[a+16>>2]=0}function Aj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2],2,-3);ga=c+16|0}function rg(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=4096;J[a+12>>2]=4096;J[a+16>>2]=0;J[a+20>>2]=1}function Yj(a){J[a+12>>2]=1065353216;J[a+4>>2]=5;J[a+8>>2]=0;H[a+16|0]=1;H[a+36|0]=1;J[a>>2]=23088;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0}function Rv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=ra(76);qm(a,J[c+12>>2],H[c+11|0]&1,1);ga=c+16|0;return a|0}function Zv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;H[c+15|0]=a;H[c+14|0]=b;a=ra(172);Ng(a,H[c+15|0]&1,H[c+14|0]&1);ga=c+16|0;return a|0}function Xs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(764);Xk(a,J[c+12>>2],J[c+8>>2],0);ga=c+16|0;return a|0}function _f(a,b,c,d,e,f){var g=0,h=0;g=J[a+4>>2];h=g>>8;a=J[a>>2];if(g&1){h=J[J[d>>2]+h>>2]}ia[J[J[a>>2]+20>>2]](a,b,c,d+h|0,g&2?e:2,f)}function Vq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=J[c+12>>2];ia[J[J[a>>2]+52>>2]](a,H[c+11|0]&1);ga=c+16|0}function Qi(a,b){var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=c+8|0;b=J[c+28>>2];Kb(a,J[c+24>>2],b+544|0);jb(b+428|0,a);ga=c+32|0}function Pi(a,b){var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=c+8|0;b=J[c+28>>2];Kb(a,J[c+24>>2],b+348|0);jb(b+412|0,a);ga=c+32|0}function Ow(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=ra(96);gm(a,J[c+12>>2],H[c+11|0]&1);ga=c+16|0;return a|0}function Jj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+56>>2]](a,J[c+8>>2],0);ga=c+16|0}function zq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+20>>2]](a,N[c+8>>2]);ga=c+16|0}function tw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(112);Xe(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function sx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(200);Uf(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function bv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(212);Si(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function _c(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return(J[J[a+12>>2]+204>>2]&2)!=0|0}function Yc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return(J[J[a+12>>2]+204>>2]&3)!=0|0}function Wa(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+44>>2]](a,N[c+8>>2]);ga=c+16|0}function Gq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+16>>2]](a,N[c+8>>2]);ga=c+16|0}function md(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+16>>2]](a,J[c+8>>2]);ga=c+16|0}function ir(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+28>>2]](a,J[c+8>>2]);ga=c+16|0}function ii(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2]);ga=c+16|0}function hr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+32>>2]](a,J[c+8>>2]);ga=c+16|0}function ai(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+44>>2]](a,J[c+8>>2]);ga=c+16|0}function _d(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+64>>2]](a,J[c+8>>2]);ga=c+16|0}function Zf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+60>>2]](a,J[c+8>>2]);ga=c+16|0}function Zb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+12>>2]](a,J[c+8>>2]);ga=c+16|0}function Yp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];a=J[a+12>>2];J[a+4>>2]=J[a+4>>2]-1;ga=b+16|0}function Xj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+72>>2]](a,J[c+8>>2]);ga=c+16|0}function Pj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+84>>2]](a,J[c+8>>2]);ga=c+16|0}function Mq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0}function Kj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+92>>2]](a,J[c+8>>2]);ga=c+16|0}function He(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+40>>2]](a,J[c+8>>2]);ga=c+16|0}function Fv(){var a=0,b=0,c=0;c=ra(160);a=ga-16|0;ga=a;J[a+12>>2]=c;b=J[a+12>>2];Se(b);J[b>>2]=4488;J[b+92>>2]=4;ga=a+16|0;return c|0}function Df(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+68>>2]](a,J[c+8>>2]);ga=c+16|0}function CE(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+12>>2]=J[b>>2];J[a+16>>2]=c;c=J[b+12>>2];J[a+20>>2]=J[b+8>>2];J[a+24>>2]=c;Sb(a)}function Ba(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+24>>2]](a,J[c+8>>2]);ga=c+16|0}function wt(){var a=0,b=0;b=ua(12);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];N[a>>2]=.30000001192092896;N[a+4>>2]=1;N[a+8>>2]=0;return b|0}function _m(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=Ua(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Ux(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=ac(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Hq(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=rk(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Bm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+8>>2]](a,J[c+8>>2]);ga=c+16|0}function pA(a,b){a=a|0;b=b|0;var c=0;c=J[b+252>>2];J[a>>2]=J[b+248>>2];J[a+4>>2]=c;c=J[b+260>>2];J[a+8>>2]=J[b+256>>2];J[a+12>>2]=c}function ke(a,b,c,d,e){var f=0,g=0;f=J[a+4>>2];g=f>>8;a=J[a>>2];if(f&1){g=J[J[c>>2]+g>>2]}ia[J[J[a>>2]+24>>2]](a,b,c+g|0,f&2?d:2,e)}function gi(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a+4;Qk(a+28|0);J[(ga-16|0)+12>>2]=a+76;ga=b+16|0}function fm(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return N[J[a+12>>2]+4>>2]<Q(1)|0}function dy(){var a=0;a=ra(284);Bd(a);H[a+280|0]=1;J[a>>2]=11304;J[a+276>>2]=0;J[a+268>>2]=0;J[a+272>>2]=0;J[a+236>>2]=4;return a|0}function Xf(a){var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=bc(J[b+12>>2]);a=ga-16|0;N[a+12>>2]=c;ga=b+16|0;return Q(Y(N[a+12>>2]))}function ND(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+108>>2]=J[b>>2];J[a+112>>2]=c;c=J[b+12>>2];J[a+116>>2]=J[b+8>>2];J[a+120>>2]=c}function Kw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);J[a+52>>2]=0;J[a>>2]=14736;ga=b+16|0;return a|0}function Jw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);J[a+52>>2]=2;J[a>>2]=14840;ga=b+16|0;return a|0}function Hs(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+1080>>2])}function Gs(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+1084>>2])}function up(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=mk(J[c+12>>2],J[c+8>>2],8192);ga=c+16|0;return a|0}function oz(a){a=a|0;if(!(H[33228]&1)){J[8305]=1065353216;J[8306]=0;J[8303]=1065353216;J[8304]=1065353216;H[33228]=1}return 33212}function ch(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+8>>2]!=0|0}function _t(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+444>>2])}function _H(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=6296;ia[J[J[a>>2]+48>>2]](a,d+8|0,c);ga=d+16|0}function Zt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+448>>2])}function Xc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+228>>2])}function Wc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+224>>2])}function Vc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+232>>2])}function Jq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+112>>2])}function fh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+12>>2])}function eo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=b;N[c+8>>2]=1;N[c+4>>2]=1;N[c>>2]=1;na(a,c+8|0,c+4|0,c);ga=c+16|0}function Zc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+204>>2]&1}function Ib(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+16>>2])}function iD(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+68>>2]=J[b>>2];J[a+72>>2]=c;c=J[b+12>>2];J[a+76>>2]=J[b+8>>2];J[a+80>>2]=c}function Va(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];c=Q(ia[J[J[a>>2]+48>>2]](a));ga=b+16|0;return Q(c)}function VD(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+16>>2]=J[b>>2];J[a+20>>2]=c;c=J[b+12>>2];J[a+24>>2]=J[b+8>>2];J[a+28>>2]=c}function Ud(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+4>>2])}function Sd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+8>>2])}function yq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+120>>2]}function xq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+124>>2]}function wq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+128>>2]}function rc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+188>>2]}function nb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+240>>2]}function jd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+192>>2]}function fx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return+N[J[a+12>>2]+120>>2]}function _u(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+172>>2]}function Yu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+144>>2]}function Rc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+204>>2]}function Ou(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+740>>2]}function Nu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+744>>2]}function Nq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+116>>2]}function Mu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+748>>2]}function Gt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+480>>2]}function Fn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[J[b+12>>2]+4>>2];a=ia[J[J[a>>2]+88>>2]](a)|0;ga=b+16|0;return a|0}function ze(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+68>>2]}function uq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+84>>2]}function tv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+40>>2]}function qx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+12>>2]}function qq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+88>>2]}function ly(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d);return}a=J[a+8>>2];ia[J[J[a>>2]+28>>2]](a,b,c,d)}function ex(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return+N[J[a+12>>2]+80>>2]}function Zd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+24>>2]}function Wd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]>>2])}function Te(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+52>>2]}function px(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+8>>2]}function _a(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+4>>2]}function Tm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=jb(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function Ju(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+36>>2]](a)|0;ga=b+16|0;return Q(Q(a|0))}function ua(a){var b=0;a=a?a:1;a:{while(1){b=bg(a);if(b){break a}b=J[8511];if(b){ia[b|0]();continue}break}ca();Z()}return b}function Yi(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+144|0}
  function zt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+380|0}function rt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+300|0}function ra(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[8369]=J[8369]+1;a=ia[J[6782]](a,16)|0;ga=b+16|0;return a}function qt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+316|0}function Zo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+352|0}function Yo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+324|0}function Wt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+348|0}function Kt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+312|0}function Jt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+328|0}function Et(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+544|0}function oe(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+48|0}function gx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+32|0}function df(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+28|0}function Ym(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=ih(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Uv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+20|0}function Kx(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=tj(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Ix(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=uj(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Cf(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+92|0}function sc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+4|0}function Tv(){var a=0;a=ra(32);J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a+4>>2]=27;J[a>>2]=15040;return a|0}function Dw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;return Q(N[(J[c+12>>2]+20|0)+(J[c+8>>2]<<2)>>2])}function CC(a,b){a=a|0;b=b|0;var c=0,d=0;c=J[a+4>>2];d=J[c>>2];ia[J[J[d>>2]+108>>2]](d,b,c+108|0);return J[a+4>>2]+108|0}function Fc(a,b){var c=0;Ed(a,b);c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=b;J[a+12>>2]=J[a+12>>2]-1}function Ey(a){a=a|0;var b=0;J[a>>2]=23088;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function Ee(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+100>>2]](a)&1;ga=b+16|0;return a|0}function sd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+36>>2]](a)|0;ga=b+16|0;return a|0}function qw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+96>>2]](a)|0;ga=b+16|0;return a|0}function ql(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+80>>2]](a)|0;ga=b+16|0;return a|0}function nn(a){a=a|0;var b=0;J[a>>2]=5524;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function jl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+84>>2]](a)|0;ga=b+16|0;return a|0}function hl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+88>>2]](a)|0;ga=b+16|0;return a|0}function ge(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ga=b+16|0;return a|0}function el(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+92>>2]](a)&1;ga=b+16|0;return a|0}function cr(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+40>>2]](a)&1;ga=b+16|0;return a|0}function Wq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+48>>2]](a)&1;ga=b+16|0;return a|0}function Vu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+52>>2]](a)|0;ga=b+16|0;return a|0}function Nd(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;J[(ga-16|0)+12>>2]=a+16;ga=b+16|0}function Le(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+76>>2]](a)|0;ga=b+16|0;return a|0}function Hl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+12>>2]](a)|0;ga=b+16|0;return a|0}function Ge(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+96>>2]](a)&1;ga=b+16|0;return a|0}function Aa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+28>>2]](a)|0;ga=b+16|0;return a|0}function $h(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+48>>2]](a)|0;ga=b+16|0;return a|0}function hp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2]+868|0,J[c+8>>2]);ga=c+16|0}function gd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+216>>2]=J[c+8>>2];ga=c+16|0}function fr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+24>>2]=N[c+8>>2];ga=c+16|0}function er(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+28>>2]=N[c+8>>2];ga=c+16|0}function dr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+32>>2]=N[c+8>>2];ga=c+16|0}function ar(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+44>>2]=N[c+8>>2];ga=c+16|0}function Kg(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+8>>2]](a)&1;ga=b+16|0;return a|0}function CG(a,b){a=a|0;b=b|0;var c=0,d=0;c=a;d=J[J[J[a+4>>2]+4>>2]+24>>2];a=J[b+36>>2];Jm(c,J[(d+P(a,80)|0)+64>>2],a)}function yx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]}function lx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2]+20|0,J[c+8>>2]);ga=c+16|0}function kx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+72|0,J[c+8>>2]);ga=c+16|0}function jx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+92|0,J[c+8>>2]);ga=c+16|0}function jq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;return J[(J[c+12>>2]+8|0)+(J[c+8>>2]<<2)>>2]}function bq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;tg(J[c+12>>2]+28|0,J[c+8>>2]);ga=c+16|0}function Dr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;vb(J[c+12>>2]+92|0,J[c+8>>2]);ga=c+16|0}function DC(a,b){a=a|0;b=b|0;var c=0,d=0;c=J[a+4>>2];d=J[c>>2];ia[J[J[d>>2]+104>>2]](d,b,c+4|0);return J[a+4>>2]+4|0}function xw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+4|0,J[c+8>>2]);ga=c+16|0}function rx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;vb(J[c+12>>2]+4|0,J[c+8>>2]);ga=c+16|0}function ne(a){var b=0;while(1){J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+24>>2];if(b){ne(b)}a=J[a+28>>2];if(a){continue}break}}function Bf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Af(J[c+12>>2],J[c+8>>2],0,0);ga=c+16|0}function Hy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=J[b+8>>2];b=J[a+284>>2];ia[J[J[b>>2]+40>>2]](b,a,J[c+8>>2])}function Gr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;sa(J[c+12>>2],J[c+8>>2],92);ga=c+16|0}function sw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;jm(J[c+12>>2],J[c+8>>2],1);ga=c+16|0}function ad(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;kb(J[c+12>>2],H[c+11|0]&1);ga=c+16|0}function Dq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;og(J[c+12>>2],J[c+8>>2],1);ga=c+16|0}function Ec(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=b+16|0}function yt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ue(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function yp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;mg(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function vh(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];J[J[a+12>>2]>>2]=0;ga=b+16|0}function ie(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Wm(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function fw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;km(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function au(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;wk(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Zp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ei(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ys(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;fl(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Vv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Re(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Uy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,156)|0;ck(a,b,c,d,0);return a|0}function Ty(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,156)|0;ck(a,b,c,d,1);return a|0}function Tt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Qi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Qt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ot(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Oi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Oa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;ga=b+16|0;return a|0}function Mt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Ni(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Gx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Na(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ew(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Bx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Wf(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function ty(a,b){a=a|0;b=b|0;var c=0;a=ia[J[6784]]((a+b|0)+3|0)|0;if(a){c=(a+b|0)+3&0-b;J[c-4>>2]=a}return c|0}function pG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,80)|0;Nm(a,b,c,d,0);return a|0}function om(a,b){a=a|0;b=b|0;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+(J[b+52>>2]<<2)>>2]=1065353216}function oG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,80)|0;Nm(a,b,c,d,1);return a|0}function nG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,44)|0;Lm(a,b,c,d,0);return a|0}function lG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,44)|0;Lm(a,b,c,d,1);return a|0}function tx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(200);Uf(a,J[b+12>>2],bb());ga=b+16|0;return a|0}function kf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d}function Ml(a,b,c,d,e){var f=0;f=J[a+32>>2];J[f>>2]=J[f>>2]+1;Re(a,Qe(a,b,e));Re(a,Qe(a,c,e));Re(a,Qe(a,d,e))}function oa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ia[J[J[a>>2]+4>>2]](a)}ga=b+16|0}function Kc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ia[J[J[a>>2]+8>>2]](a)}ga=b+16|0}function Yd(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];H[a+16|0]=1;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0}function uw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(112);Xe(a,J[b+12>>2],0);ga=b+16|0;return a|0}function _v(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(172);Ng(a,H[b+15|0]&1,1);ga=b+16|0;return a|0}function Pw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(96);gm(a,J[b+12>>2],1);ga=b+16|0;return a|0}function cp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ua(112);$j(a,J[b+12>>2]);ga=b+16|0;return a|0}function Cv(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(192);Zi(a,H[b+15|0]&1);ga=b+16|0;return a|0}function za(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;wb(a,J[d+12>>2],J[d+8>>2]);ga=d+16|0}function xr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+236>>2]=N[c+8>>2]}function vr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+240>>2]=N[c+8>>2]}function uu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+100>>2]=N[c+8>>2]}function tr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+256>>2]=N[c+8>>2]}function su(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+104>>2]=N[c+8>>2]}function rr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+268>>2]=N[c+8>>2]}function qu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+108>>2]=N[c+8>>2]}function pr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+272>>2]=N[c+8>>2]}function ou(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+112>>2]=N[c+8>>2]}function ns(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;J[J[c+12>>2]+44>>2]=H[c+11|0]&1}function nr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+280>>2]=N[c+8>>2]}function mu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+116>>2]=N[c+8>>2]}function ku(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+120|0]=H[c+11|0]&1}function iu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+124>>2]=N[c+8>>2]}function hw(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(92);mm(a,H[b+15|0]&1);ga=b+16|0;return a|0}function gu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+128>>2]=N[c+8>>2]}function fe(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+24>>2]](a);ga=b+16|0}function eu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+132>>2]=N[c+8>>2]}function cu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+136>>2]=N[c+8>>2]}function br(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+44>>2]](a);ga=b+16|0}function as(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+216>>2]=N[c+8>>2]}function _l(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+10>>1]=L[c+10>>1]}function _C(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);ga=b+16|0;return a|0}function Zr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+252>>2]=N[c+8>>2]}function Zg(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+12>>1]=L[c+10>>1]}function Xr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+244>>2]=N[c+8>>2]}function Xb(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;Ia(a,J[d+8>>2],J[d+12>>2]);ga=d+16|0}function Wg(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+14>>1]=L[c+10>>1]}function Vz(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ua(92);eh(a,J[b+12>>2]);ga=b+16|0;return a|0}function Vr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+204>>2]=N[c+8>>2]}function Tr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+212>>2]=N[c+8>>2]}function Rr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+220>>2]=N[c+8>>2]}function Qr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+224>>2]=N[c+8>>2]}function Pr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+232>>2]=N[c+8>>2]}function Pb(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Qk(a);J[(ga-16|0)+12>>2]=a+48;ga=b+16|0}function Nr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+248>>2]=N[c+8>>2]}function Ne(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+72>>2]](a);ga=b+16|0}function Lr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+208>>2]=N[c+8>>2]}function Jr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+276>>2]=N[c+8>>2]}function Hr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+260|0]=H[c+11|0]&1}function $r(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+228>>2]=N[c+8>>2]}function yi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+52>>2]=N[c+8>>2]}function xs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+16|0]=H[c+11|0]&1}function wu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+96>>2]=N[c+8>>2]}function wi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+56>>2]=N[c+8>>2]}function vs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+24|0]=H[c+11|0]&1}function ui(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+60>>2]=N[c+8>>2]}function ts(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+25|0]=H[c+11|0]&1}function si(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+64>>2]=N[c+8>>2]}function rs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+26|0]=H[c+11|0]&1}function qi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+68>>2]=N[c+8>>2]}function ps(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+32|0]=H[c+11|0]&1}function oi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+72>>2]=N[c+8>>2]}function mi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+76>>2]=N[c+8>>2]}function hs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+84|0]=H[c+11|0]&1}function hi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+24>>2]=N[c+8>>2]}function fs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+80|0]=H[c+11|0]&1}function eq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+88>>2]=N[c+8>>2]}function bm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+8>>1]=L[c+10>>1]}function bj(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+40>>2]=N[c+8>>2]}function bi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+44>>2]=N[c+8>>2]}function Yh(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=sf(J[b+12>>2]);ga=b+16|0;return Q(c)}function Xp(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+80>>2]=N[c+8>>2]}function Wx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=bc(J[b+12>>2]);ga=b+16|0;return Q(c)}function Vx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=Xf(J[b+12>>2]);ga=b+16|0;return Q(c)}function Uu(){var a=0,b=0;b=ua(8);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];J[a>>2]=0;J[a+4>>2]=0;return b|0}function Qp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+100>>2]=J[c+8>>2]}function Ki(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+28>>2]=N[c+8>>2]}function Jf(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+92>>2]=N[c+8>>2]}function Jc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+12>>2]=N[c+8>>2]}function Hi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+16>>2]=N[c+8>>2]}function Gf(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+36>>2]=N[c+8>>2]}function Ei(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+20>>2]=N[c+8>>2]}function Ef(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+32>>2]=N[c+8>>2]}function Ai(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+48>>2]=N[c+8>>2]}function $w(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+112>>2]=J[c+8>>2]}function nv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+28>>2]=J[c+8>>2]}function lv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+40>>2]=J[c+8>>2]}function ls(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;N[J[c+12>>2]+48>>2]=J[c+8>>2]}function lq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+36>>2]=J[c+8>>2]}function jv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+44>>2]=J[c+8>>2]}function hv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+48>>2]=J[c+8>>2]}function gb(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+4>>2]=N[c+8>>2]}function fv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+56>>2]=J[c+8>>2]}function ev(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+60>>2]=J[c+8>>2]}function cv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+64>>2]=J[c+8>>2]}function Ww(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+76>>2]=J[c+8>>2]}function Wp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+84>>2]=J[c+8>>2]}function We(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+16>>2]=J[c+8>>2]}function Up(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+92>>2]=J[c+8>>2]}function Ui(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+32>>2]=J[c+8>>2]}function Sp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+96>>2]=J[c+8>>2]}function Mc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+8>>2]=N[c+8>>2]}function Ii(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+20>>2]=J[c+8>>2]}function Ci(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+88>>2]=J[c+8>>2]}function wd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+8>>2]=J[c+8>>2]}function cd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+4>>2]=J[c+8>>2]}function Mb(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;Yd(a);ga=b+16|0}function Cu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;I[J[c+12>>2]+4>>1]=J[c+8>>2]}function Au(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;I[J[c+12>>2]+6>>1]=J[c+8>>2]}function bc(a){var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];c=ac(a,a);ga=b+16|0;return c}function $d(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]>>2]=N[c+8>>2]}function qp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+1228>>2])}function dd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]>>2]=J[c+8>>2]}function Iq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+116>>2]+4|0}function pb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ob(a);ta(a)}ga=b+16|0}function ds(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+204>>2])}function dp(){var a=0,b=0,c=0;a=ga-32|0;ga=a;b=ua(112);c=a+8|0;rg(c);$j(b,c);ga=a+32|0;return b|0}function Bw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){tc(a);ta(a)}ga=b+16|0}function of(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];nf(a);ga=b+16|0;return a|0}function nf(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Qa(a);ga=b+16|0;return a|0}function hA(){var a=0,b=0,c=0;a=ga-32|0;ga=a;b=ua(92);c=a+8|0;rg(c);eh(b,c);ga=a+32|0;return b|0}function Zq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+36>>2])}function Ih(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];of(a);ga=b+16|0;return a|0}function Hk(a,b){a=a|0;b=b|0;if(!(!b|!(J[b+236>>2]&2))){ia[J[J[a>>2]+92>>2]](a,b);return}Ad(a,b)}function $q(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+44>>2])}function ey(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e)}}function Lp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=qk(J[b+12>>2]);ga=b+16|0;return a|0}function lw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+4>>2]}function Yq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+8>>2]}function zd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){Ec(a)}ga=b+16|0}function to(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Oa(a);Ec(a);ga=b+16|0}function oo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Vh(a);ta(a);ga=b+16|0}function lf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c}function io(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];of(a);Ec(a);ga=b+16|0}function dD(a){a=a|0;a=J[a+92>>2]-2|0;if(a>>>0<=2){a=J[(a<<2)+16532>>2]}else{a=0}return a|0}function Yb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Oa(a);ta(a);ga=b+16|0}function Tn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];nf(a);Ec(a);ga=b+16|0}function Rn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Ih(a);Ec(a);ga=b+16|0}function Py(a,b){a=a|0;b=Q(b);Ck(a,b);ya(2310);a=J[a+452>>2];ia[J[J[a>>2]+24>>2]](a,b);xa()}function Fa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ta(a)}ga=b+16|0}function DB(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+32>>2]](a,b);ia[J[J[a>>2]+36>>2]](a,b,c)}function CH(a,b){a=a|0;b=b|0;var c=0;c=b;b=J[a+8>>2];ia[J[b+60>>2]](c,b,J[a+4>>2]);return 0}function uH(a){a=a|0;var b=0;ya(2563);b=J[a+68>>2];ia[J[J[b>>2]+32>>2]](b,J[a+24>>2]);xa()}function kb(a,b){if(K[a+204|0]&3?b:1){if((J[a+216>>2]&-2)!=4){J[a+216>>2]=1}J[a+220>>2]=0}}function dg(a){var b=0;b=J[a+24>>2];if(b){ta(dg(b))}b=J[a+28>>2];if(b){ta(dg(b))}return a}function vl(a,b,c,d,e){if(wl(a,29448,b,c,d,e)){a=1}else{a=Eg(a,29448,b,c,d,e,0)}return a}function gm(a,b,c){var d=0;d=Qg(a);J[a+92>>2]=b;J[a>>2]=14396;J[a+4>>2]=3;if(c){Sb(d)}}function Ta(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;a=Ha(N[b+12>>2]);ga=b+16|0;return a}function Sa(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;a=Ga(N[b+12>>2]);ga=b+16|0;return a}function GB(a){a=a|0;if(ia[J[J[a>>2]+40>>2]](a)|0){H[a+169|0]=1;N[a+16>>2]=N[a+28>>2]}}function Ez(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;J[a+128>>2]=d;J[a+124>>2]=c;J[a+120>>2]=b}function qH(a,b){a=a|0;b=b|0;ia[J[J[b>>2]+32>>2]](b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function Rg(a,b,c){a=a|0;b=Q(b);c=c|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0}function IE(a,b){a=a|0;b=b|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=1065353216}function FE(a,b){a=a|0;b=b|0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0}function DE(a,b){a=a|0;b=b|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=1065353216;J[a+4>>2]=0}function qD(a,b,c){a=a|0;b=b|0;c=c|0;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0}function os(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+44>>2]!=0|0}function bd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;kb(J[b+12>>2],0);ga=b+16|0}function yr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+236>>2])}function yH(a,b){a=a|0;b=b|0;J[a+200>>2]=b;J[a+192>>2]=b;J[a+260>>2]=J[a+260>>2]+1}function wr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+240>>2])}function vu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+100>>2])}function ur(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+256>>2])}function tu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+104>>2])}function sr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+268>>2])}function ru(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+108>>2])}function qr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+272>>2])}function pu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+112>>2])}function or(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+280>>2])}function nu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+116>>2])}function mv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+232>>2])}function ju(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+124>>2])}function hu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+128>>2])}function fu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+132>>2])}function du(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+136>>2])}function bs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+216>>2])}function _r(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+252>>2])}function Yr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+244>>2])}function Wr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+204>>2])}function Ur(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+212>>2])}function Sr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+220>>2])}function Pv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+228>>2])}function Or(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+248>>2])}function Mr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+208>>2])}function Kr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+276>>2])}function EC(a,b){a=a|0;b=b|0;a=J[J[a+4>>2]>>2];return ia[J[J[a>>2]+128>>2]](a,b)|0}function Bv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+224>>2])}function zi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+52>>2])}function xu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+96>>2])}function xi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+56>>2])}function vi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+60>>2])}function ti(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+64>>2])}function ri(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+68>>2])}function qc(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+12>>2])}function pi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+72>>2])}function ow(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Sb(J[b+12>>2]);ga=b+16|0}function ni(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+76>>2])}function ji(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+24>>2])}function fq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+88>>2])}function dx(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+80>>2])}function cj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+40>>2])}function ci(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+44>>2])}function YG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=a-4|0;ia[J[J[a>>2]+8>>2]](a,b,c,d)}function Mv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;$i(J[b+12>>2]);ga=b+16|0}function Li(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+28>>2])}function Kf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+92>>2])}function Hf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+36>>2])}function Gi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+16>>2])}function Fi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+20>>2])}function Ff(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+32>>2])}function Eh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Ld(J[b+12>>2]);ga=b+16|0}function Cx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;de(J[b+12>>2]);ga=b+16|0}function Bi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+48>>2])}function At(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;yk(J[b+12>>2]);ga=b+16|0}function lu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+120|0]&1}function hb(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+4>>2])}function Nc(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+8>>2])}function Ir(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+260|0]&1}function ys(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+16|0]&1}function ws(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+24|0]&1}function us(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+25|0]&1}function ss(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+26|0]&1}function qs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+32|0]&1}function is(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+84|0]&1}function gs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+80|0]&1}function ax(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+112>>2]}function Rp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+100>>2]}function tq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+84>>2]}function sv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+40>>2]}function ov(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+28>>2]}function mq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+36>>2]}function kv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+44>>2]}function iv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+48>>2]}function gv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+56>>2]}function dv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+64>>2]}function ae(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]>>2])}function Ye(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+16>>2]}function Xw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+76>>2]}function Xg(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+14>>1]}function Vp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+92>>2]}function Vi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+32>>2]}function Tp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+96>>2]}function Ti(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+60>>2]}function SH(a,b){a=a|0;b=b|0;a=J[a+4>>2];return(a|0)==J[b>>2]|(a|0)==J[b+4>>2]}function Ji(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+20>>2]}function Di(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+88>>2]}function $l(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+10>>1]}function $g(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+12>>1]}function xd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+8>>2]}function nd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+4>>2]}function my(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d)}}function dm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+8>>1]}function Du(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+4>>1]}function Bu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+6>>1]}function cx(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]- -64|0}function bn(a,b){a=a|0;b=b|0;a=J[a+4>>2];ia[J[J[a>>2]+8>>2]](a,J[b+36>>2])|0}function wf(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Mb(J[b+12>>2]);ga=b+16|0}function tc(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ob(J[b+12>>2]);ga=b+16|0}function op(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+288|0}function mp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+708|0}function mH(a,b){a=a|0;b=b|0;a=J[a+20>>2];return ia[J[J[a>>2]+8>>2]](a,b)|0}function kp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+748|0}function ix(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+112|0}function ip(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+868|0}function iH(a,b){a=a|0;b=b|0;a=J[a+12>>2];return ia[J[J[a>>2]+8>>2]](a,b)|0}function gp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+788|0}function ed(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]>>2]}function Vt(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+348|0}function Fr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+156|0}function Cr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+172|0}function Ar(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+188|0}function oj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+36|0}function lj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+68|0}function li(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+92|0}function kI(a){var b=0;b=a&31;a=0-a&31;return(-1>>>b&-2)<<b|(-1<<a&-2)>>>a}function jj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+56|0}function hj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+72|0}function hd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+16|0}function gj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+32|0}function gc(a){a=a|0;J[a>>2]=20112;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function aq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+76|0}function Tw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+44|0}function Tf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+20|0}function Sf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+52|0}function Rw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+60|0}function Rf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+40|0}function RD(a){a=a|0;J[a>>2]=15144;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Qy(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+48|0}function Pm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+28|0}function Of(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+24|0}function LE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia[J[J[a>>2]+80>>2]](a,b,c,d)}function Gm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+12|0}function Ph(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+8|0}function If(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+4|0}function AH(a){a=a|0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function $G(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia[J[J[a>>2]+8>>2]](a,b,c,d)}function eI(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+8>>2]](a,b,J[J[a+8>>2]+48>>2])}function In(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;H[J[b+12>>2]+48|0]=1}function dF(a,b){a=a|0;b=Q(b);return Q(Q(Q(ia[J[J[a>>2]+16>>2]](a))*b))}function pD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)>0){qa(c,0,d<<4)}}function Xa(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]}function xD(a){a=a|0;a=Wl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function wA(a){a=a|0;a=sg(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function rC(a){a=a|0;a=Gl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function pn(a){a=a|0;a=hf(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function aD(a){a=a|0;a=J[a+92>>2];return((a|0)==4?4:((a|0)==3)<<1)|0}function Ry(a){a=a|0;a=Zj(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function RC(a){a=a|0;a=Ll(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function RA(a){a=a|0;a=Uk(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Cz(a){a=a|0;a=pk(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function BF(a){a=a|0;a=_e(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function $B(a){a=a|0;a=Bl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function yG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Q(Q(0))}function fC(a,b){a=a|0;b=Q(b);N[a+148>>2]=b;ia[J[J[a>>2]+72>>2]](a)}function WA(a,b){a=a|0;b=b|0;a=K[a+344|0]?0:3;J[b+4>>2]=a;J[b>>2]=a}function Tb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Q(Q(1))}function zn(a){a=a|0;hf(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function bh(a){a=a|0;Qa(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function CD(a){a=a|0;_e(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function BD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return sm(a,b,c,d)|0}function oF(a,b,c){a=a|0;b=b|0;c=c|0;ia[J[J[b>>2]+68>>2]](a,b,c)}function hz(a,b,c){a=a|0;b=b|0;c=c|0;ia[J[J[b>>2]+64>>2]](a,b,c)}function dI(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+12>>2]](a,b)}function Fz(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+16>>2]](a,c)}function zp(){var a=0;a=ra(16);J[(ga-16|0)+12>>2]=a;return a|0}function dH(a,b,c){a=a|0;b=b|0;c=c|0;J[a+24>>2]=c;J[a+16>>2]=b}function cH(a,b,c){a=a|0;b=b|0;c=c|0;J[a+28>>2]=c;J[a+20>>2]=b}function FB(a){a=a|0;return N[a+16>>2]==Q(0)&N[a+20>>2]==Q(0)}function Ra(a){a=a|0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Dl(a,b){a=a|0;b=b|0;return J[J[a+184>>2]+(b<<2)>>2]}function Bk(a,b){a=a|0;b=b|0;return J[J[a+220>>2]+(b<<2)>>2]}function Se(a){Qg(a);J[a+92>>2]=0;J[a>>2]=16372;J[a+4>>2]=2}function EH(a,b){a=a|0;b=b|0;return J[J[a+20>>2]+(b<<2)>>2]}function ux(){var a=0;a=ra(200);Uf(a,bb(),bb());return a|0}function jz(a){a=a|0;return Q(Q(ia[J[J[a>>2]+48>>2]](a)))}function oA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;jh(a,b,c,d)}function eD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Sl(a,b,c,d)}function dz(a){a=a|0;J[a>>2]=21896;pe(a+12|0);return a|0}function lD(a){a=a|0;return Q(Q(N[a+28>>2]*N[a+12>>2]))}function Gk(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+64>>2]](a,b)}function Fk(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+68>>2]](a,b)}function DH(a){a=a|0;return(J[a+12>>2]?J[a+20>>2]:0)|0}function uB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e)}function mn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function fo(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 3151}function Qn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 4288}function HB(a){a=a|0;return ia[J[J[a>>2]+48>>2]](a)|0}function vw(){var a=0;a=ra(112);Xe(a,0,0);return a|0}function cC(a,b,c){a=a|0;b=b|0;c=c|0;Wi(a+144|0,b,c)}function Cm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0}function $v(){var a=0;a=ra(172);Ng(a,1,1);return a|0}function oB(a,b,c){a=a|0;b=b|0;c=c|0;return Q(Q(0))}function cz(a){a=a|0;J[a>>2]=21896;pe(a+12|0);ta(a)}function co(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 52}function Kn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 12}function Hn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 25}function yg(a){pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function uy(a){a=a|0;if(a){ia[J[6785]](J[a-4>>2])}}function rB(a,b){a=a|0;b=b|0;J[b>>2]=6;J[b+4>>2]=6}function _n(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 2}function Kh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 3}function Jh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 1}function Hh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 0}function Eu(){var a=0;a=ua(196);ph(a,0);return a|0}function Dv(){var a=0;a=ra(192);Zi(a,1);return a|0}function iw(){var a=0;a=ra(92);mm(a,1);return a|0}function ve(a,b,c){Rb(a+4|0,a+312|0,a+328|0,b,c)}function gt(){var a=0;a=ra(196);Wk(a);return a|0}function xv(){var a=0;a=ua(68);Xi(a);return a|0}function by(){var a=0;a=ra(16);Oa(a);return a|0}function bp(){var a=0;a=ua(40);Yj(a);return a|0}function Qu(){var a=0;a=ua(24);rg(a);return a|0}function Jv(){var a=0;a=ua(72);_i(a);return a|0}function Ex(){var a=0;a=ua(64);Pb(a);return a|0}function Ug(a,b,c){a=a|0;b=b|0;c=Q(c);return 0}function tb(a){a=a|0;J[(ga-16|0)+12>>2]=a;Z()}function rh(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function pB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0}function dl(a){a=a|0;J[a>>2]=20112;return a|0}function SD(a){a=a|0;J[a>>2]=15144;return a|0}function Om(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d)}function zy(a,b,c){a=a|0;b=b|0;c=c|0;fk(b,c)}function oC(a){a=a|0;return J[a+156>>2]!=0|0}function Cb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0}function BH(a){a=a|0;J[a>>2]=6652;return a|0}function qy(a){a=a|0;a=J[8371];if(a){ta(a)}}function XC(a){a=a|0;return J[a+48>>2]==1|0}function pF(a,b){a=a|0;b=Q(b);N[a+12>>2]=b}function jE(a){a=a|0;return J[a+92>>2]+4|0}function eC(a){a=a|0;return Q(N[a+148>>2])}function SE(a,b){a=a|0;b=Q(b);N[a+72>>2]=b}function Ql(a,b){a=a|0;b=Q(b);N[a+44>>2]=b}function OC(a){a=a|0;return J[a+48>>2]+4|0}function UH(a,b){a=a|0;b=b|0;J[a+24>>2]=b}function RE(a){a=a|0;return Q(N[a+72>>2])}function Fh(a){a=a|0;J[(ga-16|0)+12>>2]=a}function EB(a,b){a=a|0;b=b|0;H[a+180|0]=b}function $m(a,b){a=a|0;b=b|0;J[a+72>>2]=b}function wy(a,b){a=a|0;b=b|0;J[a+4>>2]=b}function vy(a,b){a=a|0;b=b|0;J[a+8>>2]=b}function pC(a){a=a|0;return J[a+176>>2]}function dC(a){a=a|0;return J[a+204>>2]}function cn(a){a=a|0;return J[a+136>>2]}function aA(a){a=a|0;return J[a+200>>2]}function $z(a){a=a|0;return J[a+212>>2]}function pH(a){a=a|0;return J[a+72>>2]}function kc(a){a=a|0;return J[a+16>>2]}function im(a){a=a|0;return J[a+96>>2]}function gf(a){a=a|0;return J[a+92>>2]}function Zm(a){a=a|0;return J[a+68>>2]}function FH(a){a=a|0;return J[a+12>>2]}function Dm(a){a=a|0;return J[a+24>>2]}function vd(a,b){a=a|0;b=b|0;return 0}function rD(a){a=a|0;return J[a+4>>2]}function nh(a,b){a=a|0;b=b|0;return 1}function lh(a){a=a|0;return J[a+8>>2]}function Sg(a,b,c){a=a|0;b=Q(b);c=c|0}function DD(a){a=a|0;_e(a);return a|0}function Da(a,b,c){a=a|0;b=b|0;c=c|0}function sy(a){a=a|0;return bg(a)|0}function hC(a){a=a|0;return a+156|0}function MD(a){a=a|0;return a+108|0}function El(a){a=a|0;return a+144|0}function hD(a){a=a|0;return a+68|0}function UE(a){a=a|0;return a+76|0}function UD(a){a=a|0;return a+16|0}function IA(a){a=a|0;J[a+192>>2]=0}function qh(a){a=a|0;return a+4|0}function _G(a){a=a|0;return a-4|0}function tE(a){a=a|0;return 2348}function qF(a){a=a|0;return 4241}function qC(a){a=a|0;return 3160}function nz(a){a=a|0;return 2335}function mD(a){a=a|0;return 4257}function kz(a){a=a|0;return 4229}function iF(a){a=a|0;return 3133}function iE(a){a=a|0;return 3053}function gF(a){a=a|0;return 4220}function gD(a){a=a|0;return 4264}function gC(a){a=a|0;return 2418}function fF(a){a=a|0;return 4185}function ZB(a){a=a|0;return 3067}function YD(a){a=a|0;return 4204}function WD(a){a=a|0;return 4169}function TE(a){a=a|0;return 3187}function TD(a){a=a|0;return 2304}function NF(a){a=a|0;return 2344}function LD(a){a=a|0;return 4276}function LC(a){a=a|0;return 4244}function JE(a){a=a|0;return 3146}function GE(a){a=a|0;return 4179}function EE(a){a=a|0;return 4214}function ED(a){a=a|0;return 3121}function $D(a){a=a|0;return 4194}function xH(a){a=a|0;return 256}function tB(a){a=a|0;return 212}function sz(a){a=a|0;return 428}function lI(a,b){ha=a;return b}
  function iB(a){a=a|0;return 252}function eB(a){a=a|0;return 348}function ZA(a){a=a|0;return 220}function Rz(a){a=a|0;return 488}function DA(a){a=a|0;return 204}function Ca(a){a=a|0;return a|0}function sE(a){a=a|0;return 68}function rm(a){a=a|0;return 84}function qG(a){a=a|0;ta(af(a))}function py(a){a=a|0;dg(33488)}function gz(a){a=a|0;return 32}function bz(a){a=a|0;ta(pe(a))}function Zl(a){a=a|0;return 64}function Ze(a){a=a|0;return 60}function ZG(a){a=a|0;ta(a-4|0)}function QE(a){a=a|0;return 24}function QC(a){a=a|0;return 28}function Pl(a){a=a|0;return 52}function Kz(a){a=a|0;ta(sk(a))}function HF(a){a=a|0;return 12}function BG(a){a=a|0;ta(Im(a))}function xm(a){a=a|0;return 6}function oH(a,b){a=a|0;b=Q(b)}function La(a){a=a|0;return 0}function Jy(a){a=a|0;return 4}function Ig(a){a=a|0;return 2}function Ic(a){a=a|0;return 1}function IF(a){a=a|0;return 8}function Wo(){return ua(1)|0}function Ka(a,b){a=a|0;b=b|0}function pa(a){a=a|0;ta(a)}function xk(a,b){wk(a,b)}function ib(a){a=a|0;Z()}function uf(){return 1}function tf(){return 2}function oy(){ca();Z()}function _h(){return 0}function Zh(){return 3}function Xh(){return 4}function Po(){return 5}function Wb(a){a=a|0}
  // EMSCRIPTEN_END_FUNCS
  g=K;r(la);var ia=e([null,Oa,Yb,Oo,No,Mo,Lo,Ko,Jo,Io,Ho,Go,Fo,Eo,Do,Co,Bo,Ao,zo,yo,xo,wo,vo,uo,Xa,tb,oy,Oa,to,so,ro,Xa,tb,Oa,Yb,qo,po,Xa,tb,Vh,oo,no,Oa,Yb,mo,lo,Xa,tb,Oa,Yb,ko,jo,Xa,tb,of,io,ho,eF,cF,dF,Ve,Gm,go,fo,eo,bi,ci,co,bo,bF,Vg,ao,oE,$n,rE,_n,Zn,wD,Kh,Kh,Yn,Xn,Jh,Wn,Vn,Un,nf,Tn,Sn,Ih,Rn,eD,sD,tD,Qn,vD,uD,Hh,lf,gf,dD,cD,bD,aD,Cb,Ug,vd,Pn,tb,On,Mn,Sf,Ln,qc,Kn,fb,kf,Jn,In,Hn,Fh,Fh,Gn,kf,kf,Oa,Yb,Hh,Fn,En,lf,Xa,tb,Oa,Yb,Jh,Ti,Dn,Cn,Xa,tb,Oa,Yb,Bn,An,lf,Xa,tb,hf,zn,xn,wn,vn,th,un,tn,sn,gf,gf,rn,qn,Wb,pn,on,nn,rh,mn,Da,kc,kc,qh,Da,La,Da,Ka,Da,rh,Ic,Ka,Ka,ln,kn,jn,hn,en,th,gn,fn,iI,cn,cn,hI,gI,Wb,Ca,pa,fI,eI,dI,nh,nh,pa,Da,bn,pa,bn,cI,bI,VH,YH,_H,kc,kc,qh,aI,lh,$H,UH,XH,ZH,La,$m,WH,Ca,pa,TH,pa,SH,RH,QH,PH,LH,OH,MH,NH,JH,KH,IH,FH,EH,DH,Zm,Zm,HH,GH,pa,CH,nh,BH,AH,yH,xH,kh,zH,Xm,wH,vH,uH,$m,pH,Um,rH,sH,jh,Ad,tH,qH,oH,Ka,Da,Ca,pa,Ca,pa,RB,Rm,pa,Rm,pa,nH,pa,mH,lH,pa,QB,kH,pa,jH,pa,iH,hH,Ca,pa,gH,pa,fH,pa,eH,Ca,pa,dH,cH,bH,Ca,pa,aH,$G,_G,ZG,YG,Ca,ib,Ca,ib,Ca,pa,TG,XG,WG,VG,UG,SG,pa,Da,Da,Om,pa,Da,Da,RG,pa,QG,PG,OG,JG,IG,NG,MG,LG,KG,pa,Mm,HG,GG,FG,EG,DG,pa,CG,Im,BG,zG,yG,AG,pa,xG,Ka,Ca,pa,Hm,wG,vG,uG,Tb,yd,tG,sG,rG,Tb,yd,af,qG,lh,kc,Em,Dm,Ca,pa,pG,pa,oG,pa,nG,pa,mG,pa,lG,pa,kG,pa,jG,pa,iG,pa,hG,pa,gG,pa,Cm,Tb,Ka,fG,eG,dG,cG,bG,aG,$F,_F,ZF,YF,XF,WF,kc,pa,VF,UF,TF,SF,Tb,yd,RF,QF,PF,Tb,yd,pa,zm,Qa,bh,ym,ah,OF,NF,_g,MF,LF,KF,xm,JF,IF,HF,GF,FF,xm,EF,DF,CF,_e,BF,sm,rm,yF,AF,zF,xF,wF,PC,uF,OC,Rg,qF,pF,Ze,tF,vF,MC,oF,sF,rF,Ca,pa,pm,pa,pm,pa,nF,Ca,Ra,jF,ah,kF,iF,om,_g,Ze,hF,mF,lF,Ra,gF,Ra,fF,aF,$E,YE,WE,UE,XE,TE,SE,RE,QE,VE,_E,ZE,Ca,ib,Ra,LE,ME,KE,JE,IE,Ze,HE,NE,PE,OE,Ra,GE,FE,Ra,EE,DE,vE,uE,Sl,CE,tE,sE,xE,Vg,BE,AE,im,im,zE,yE,La,Cb,Ug,wE,ib,ib,qE,pE,ib,bh,kE,jE,iE,Vg,mE,lE,La,La,Cb,Da,La,Cb,Ug,Ca,pa,hE,Ra,ym,ah,gE,$D,om,_g,Ze,_D,ZD,dE,cE,cm,Ra,YD,fE,aE,XD,Ra,WD,eE,bE,cm,Ca,Ra,am,VD,UD,Sg,TD,Cb,SD,RD,QD,ND,MD,Rg,LD,OD,PD,GD,FD,ID,ED,Zl,HD,KD,JD,DD,CD,BD,pa,AD,pa,zD,Wl,xD,ib,ib,Ra,am,nD,mD,Ql,lD,oD,qD,pD,Ca,Ra,kD,iD,hD,Rg,gD,Pl,fD,jD,bh,Ol,YC,$C,Nl,Nl,Ka,Ka,Dm,Ka,Ka,XC,WC,VC,QC,ZC,Ll,RC,TC,SC,Ca,Ra,Kl,LC,NC,pa,KC,pa,JC,IC,HC,GC,Tb,FC,EC,Ca,pa,DC,pa,CC,pa,pa,BC,pa,AC,Gl,rC,zC,qC,La,El,pC,oC,La,La,Da,Da,nC,Dl,Dl,mC,lC,kC,jC,iC,hC,yC,gC,fC,eC,vC,Ic,El,dC,La,Ic,La,cC,Da,bC,aC,vd,vd,Da,Da,wC,Bl,$B,_B,xC,ZB,YB,Zl,sC,uC,XB,WB,Ig,La,La,La,La,La,Da,Da,Wb,Wb,Cm,vd,vd,Da,Da,Cb,tC,Ca,pa,xl,pa,Da,Da,VB,pa,Hg,nE,Ue,Ca,pa,UB,pa,zb,pa,TB,pa,Da,Da,SB,ib,ib,pa,sl,PB,OB,DB,Ka,NB,MB,LB,KB,JB,IB,HB,GB,FB,EB,pa,CB,dl,gc,zB,uB,BB,AB,yB,xB,wB,tB,sB,vB,dl,gc,Wb,rB,qB,Om,pB,oB,Pl,fc,gc,nB,mB,al,kB,jB,iB,hB,lB,gc,gB,eB,dB,fB,gc,cB,bB,aB,$A,_A,ZA,YA,gc,XA,WA,VA,UA,TA,rm,SA,Uk,RA,Da,JA,Da,IA,Ic,QA,MA,KA,NA,OA,LA,gc,HA,GA,FA,EA,DA,CA,BA,ib,AA,zA,yA,xA,sg,wA,Kk,oA,Hk,_z,rA,jA,iA,gA,fA,qA,pA,sA,mA,lA,nA,bA,aA,$z,Bk,Bk,Ig,uA,Gk,Fk,Gk,Fk,Ck,cA,dA,eA,kA,Jk,vA,tA,Ka,Zz,Yz,Xz,Wz,pa,Uz,Tz,Sz,Oz,Nz,Rz,Qz,Pz,Mz,sk,Kz,Fz,Hz,Jz,Iz,Ez,pa,Gz,Bz,pk,Cz,Ka,sz,rz,qz,pa,Az,Ca,pa,zz,yz,xz,Ig,Ra,pz,Ka,oz,Sg,nz,Cb,pa,mz,pa,lz,Ra,Cb,Sg,kz,Ql,jz,iz,hz,Cb,gz,pa,fz,pa,ez,tz,wz,vz,uz,dz,cz,$y,_y,Ka,pe,bz,az,pa,Mm,Zy,Yy,Xy,pa,Wy,pa,Vy,pa,Uy,pa,Ty,Ca,pa,Sy,Tb,Ka,Zj,Ry,My,Ly,Ny,Ky,Jy,Py,Oy,pa,Iy,Ca,pa,Hy,Tb,yd,Fy,Ey,La,Ic,Dy,Ka,xy,By,Cy,yy,zy,wy,rD,vy,lh,Ay,ty,uy,sy,pa,qy,py,Ca,pa,Wb,Wb,ny,ey,hy,my,pa,fy,iy,ly,pa,gy,jy,ky]);function ja(){return G.byteLength/65536|0}return{"h":dn,"i":Ba,"j":Aa,"k":Ea,"l":Wa,"m":Va,"n":oa,"o":Zd,"p":Xd,"q":Qd,"r":df,"s":tm,"t":em,"u":Pe,"v":He,"w":ze,"x":se,"y":me,"z":je,"A":ie,"B":md,"C":ge,"D":fe,"E":ee,"F":oa,"G":kd,"H":jd,"I":vc,"J":id,"K":gd,"L":bd,"M":ad,"N":$c,"O":_c,"P":Zc,"Q":Yc,"R":Xc,"S":Wc,"T":Vc,"U":Uc,"V":Tc,"W":Sc,"X":sc,"Y":Rc,"Z":Qc,"_":Pc,"$":Zb,"aa":Oc,"ba":Lc,"ca":nb,"da":mb,"ea":nb,"fa":mb,"ga":rc,"ha":Kc,"ia":Ba,"ja":Aa,"ka":Ea,"la":oa,"ma":oa,"na":Jb,"oa":Ib,"pa":Hb,"qa":Gb,"ra":Fb,"sa":oa,"ta":_d,"ua":Df,"va":Cf,"wa":Bf,"xa":zf,"ya":yf,"za":Zd,"Aa":Xd,"Ba":Qd,"Ca":df,"Da":tm,"Ea":em,"Fa":Pe,"Ga":He,"Ha":ze,"Ia":se,"Ja":me,"Ka":je,"La":ie,"Ma":md,"Na":ge,"Oa":fe,"Pa":ee,"Qa":oa,"Ra":xf,"Sa":ki,"Ta":ii,"Ua":fi,"Va":ai,"Wa":$h,"Xa":oa,"Ya":zp,"Za":ep,"_a":Yh,"$a":Wd,"ab":Ud,"bb":Sd,"cb":Rd,"db":Pd,"eb":Od,"fb":Nn,"gb":Eh,"hb":yn,"ib":_m,"jb":Ym,"kb":Tm,"lb":Qm,"mb":zd,"nb":Wd,"ob":Ud,"pb":Sd,"qb":fh,"rb":Rd,"sb":Pd,"tb":Od,"ub":Fm,"vb":Fa,"wb":Bm,"xb":Zb,"yb":oa,"zb":ch,"Ab":$g,"Bb":Zg,"Cb":Xg,"Db":Wg,"Eb":hb,"Fb":gb,"Gb":xd,"Hb":wd,"Ib":Ye,"Jb":We,"Kb":oa,"Lb":hm,"Mb":oa,"Nb":fm,"Ob":dm,"Pb":bm,"Qb":$l,"Rb":_l,"Sb":hb,"Tb":gb,"Ub":oa,"Vb":Ba,"Wb":Aa,"Xb":Ea,"Yb":Wa,"Zb":Va,"_b":oa,"$b":yD,"ac":Wa,"bc":Va,"cc":Te,"dc":Pg,"ec":Og,"fc":Ba,"gc":Aa,"hc":Ea,"ic":oa,"jc":_C,"kc":Wa,"lc":Va,"mc":Ba,"nc":Aa,"oc":Ea,"pc":oa,"qc":UC,"rc":Ba,"sc":Aa,"tc":Ea,"uc":oa,"vc":Jl,"wc":oa,"xc":Ba,"yc":Aa,"zc":Ea,"Ac":oa,"Bc":Kg,"Cc":Hl,"Dc":Fl,"Ec":Cl,"Fc":oa,"Gc":Oe,"Hc":Ne,"Ic":Le,"Jc":sd,"Kc":ql,"Lc":jl,"Mc":hl,"Nc":el,"Oc":Ge,"Pc":Ee,"Qc":Ce,"Rc":Be,"Sc":Vk,"Tc":PA,"Uc":Ik,"Vc":Ba,"Wc":Aa,"Xc":Ea,"Yc":oa,"Zc":oa,"_c":hA,"$c":Vz,"ad":oa,"bd":sd,"cd":vk,"dd":oa,"ed":Lz,"fd":Dz,"gd":ok,"hd":gk,"id":ek,"jd":bk,"kd":oe,"ld":Jb,"md":Ib,"nd":Hb,"od":Gb,"pd":Fb,"qd":oa,"rd":Gy,"sd":Xj,"td":ry,"ud":Pj,"vd":Nj,"wd":Kj,"xd":Jj,"yd":Hj,"zd":Zf,"Ad":Gj,"Bd":Fj,"Cd":Ej,"Dd":Dj,"Ed":Cj,"Fd":Bj,"Gd":Zd,"Hd":Xd,"Id":Qd,"Jd":df,"Kd":Aj,"Ld":zj,"Md":Pe,"Nd":He,"Od":ze,"Pd":se,"Qd":me,"Rd":je,"Sd":ie,"Td":md,"Ud":ge,"Vd":fe,"Wd":ee,"Xd":_d,"Yd":Df,"Zd":Cf,"_d":Bf,"$d":zf,"ae":yf,"be":oa,"ce":yj,"de":oa,"ee":Yf,"fe":oa,"ge":dy,"he":xj,"ie":wj,"je":kd,"ke":jd,"le":vc,"me":id,"ne":gd,"oe":bd,"pe":ad,"qe":$c,"re":_c,"se":Zc,"te":Yc,"ue":Xc,"ve":Wc,"we":Vc,"xe":Uc,"ye":Tc,"ze":Sc,"Ae":sc,"Be":Rc,"Ce":Qc,"De":Pc,"Ee":Zb,"Fe":Oc,"Ge":Lc,"He":nb,"Ie":mb,"Je":nb,"Ke":mb,"Le":rc,"Me":Kc,"Ne":oa,"Oe":Fa,"Pe":cy,"Qe":xf,"Re":ki,"Se":ii,"Te":fi,"Ue":ai,"Ve":$h,"We":oa,"Xe":by,"Ye":ay,"Ze":fh,"_e":vj,"$e":Yh,"af":Wd,"bf":Ud,"cf":Sd,"df":Rd,"ef":Pd,"ff":Od,"gf":Eh,"hf":$x,"jf":_m,"kf":Ym,"lf":Tm,"mf":Qm,"nf":zd,"of":_x,"pf":vj,"qf":Zx,"rf":Yx,"sf":Xx,"tf":Wx,"uf":Vx,"vf":Ux,"wf":Tx,"xf":Sx,"yf":Rx,"zf":Qx,"Af":Px,"Bf":Ox,"Cf":Nx,"Df":Mx,"Ef":Lx,"Ff":Kx,"Gf":Jx,"Hf":Ix,"If":Wd,"Jf":Ud,"Kf":Sd,"Lf":fh,"Mf":Rd,"Nf":Pd,"Of":Od,"Pf":Fm,"Qf":Fa,"Rf":Hx,"Sf":Gx,"Tf":Fx,"Uf":Fa,"Vf":Ex,"Wf":Dx,"Xf":Cx,"Yf":Bx,"Zf":Ax,"_f":oe,"$f":zx,"ag":yx,"bg":xx,"cg":wx,"dg":vx,"eg":Fa,"fg":ux,"gg":tx,"hg":sx,"ig":Bm,"jg":Zb,"kg":If,"lg":rx,"mg":oa,"ng":qx,"og":px,"pg":_a,"qg":ox,"rg":ch,"sg":Tf,"tg":pj,"ug":oj,"vg":nj,"wg":Sf,"xg":mj,"yg":lj,"zg":kj,"Ag":$g,"Bg":Zg,"Cg":Xg,"Dg":Wg,"Eg":hb,"Fg":gb,"Gg":xd,"Hg":wd,"Ig":Ye,"Jg":We,"Kg":oa,"Lg":_a,"Mg":ce,"Ng":pb,"Og":_a,"Pg":nx,"Qg":pb,"Rg":mx,"Sg":ch,"Tg":Tf,"Ug":lx,"Vg":Rf,"Wg":Qf,"Xg":jj,"Yg":ij,"Zg":hj,"_g":kx,"$g":li,"ah":jx,"bh":ix,"ch":hx,"dh":$g,"eh":Zg,"fh":Xg,"gh":Wg,"hh":hb,"ih":gb,"jh":xd,"kh":wd,"lh":Ye,"mh":We,"nh":oa,"oh":oe,"ph":gx,"qh":fx,"rh":ex,"sh":Xa,"th":be,"uh":hd,"vh":fd,"wh":gj,"xh":fj,"yh":Qy,"zh":Wf,"Ah":cx,"Bh":bx,"Ch":ax,"Dh":$w,"Eh":Fa,"Fh":_w,"Gh":hm,"Hh":oa,"Ih":ed,"Jh":dd,"Kh":nd,"Lh":cd,"Mh":Fa,"Nh":Zw,"Oh":ed,"Ph":dd,"Qh":nd,"Rh":cd,"Sh":Ph,"Th":ej,"Uh":Of,"Vh":dj,"Wh":cj,"Xh":bj,"Yh":Fa,"Zh":Yw,"_h":fm,"$h":Xw,"ai":Ww,"bi":Gm,"ci":Vw,"di":Pm,"ei":Uw,"fi":Tw,"gi":Sw,"hi":Rw,"ii":Qw,"ji":dm,"ki":bm,"li":$l,"mi":_l,"ni":hb,"oi":gb,"pi":oa,"qi":Pw,"ri":Ow,"si":Ba,"ti":Aa,"ui":Ea,"vi":Wa,"wi":Va,"xi":oa,"yi":Nw,"zi":Wa,"Ai":Va,"Bi":Ba,"Ci":Aa,"Di":Ea,"Ei":oa,"Fi":Mw,"Gi":Wa,"Hi":Va,"Ii":Te,"Ji":Pg,"Ki":Og,"Li":Ba,"Mi":Aa,"Ni":Ea,"Oi":oa,"Pi":Lw,"Qi":Wa,"Ri":Va,"Si":Te,"Ti":Pg,"Ui":Og,"Vi":Ba,"Wi":Aa,"Xi":Ea,"Yi":oa,"Zi":Kw,"_i":Wa,"$i":Va,"aj":Ba,"bj":Aa,"cj":Ea,"dj":oa,"ej":Jw,"fj":Wa,"gj":Va,"hj":Ba,"ij":Aa,"jj":Ea,"kj":oa,"lj":Iw,"mj":Wa,"nj":Va,"oj":Ba,"pj":Aa,"qj":Ea,"rj":oa,"sj":Hw,"tj":Ba,"uj":Aa,"vj":Ea,"wj":oa,"xj":Gw,"yj":Ba,"zj":Aa,"Aj":Ea,"Bj":oa,"Cj":Fw,"Dj":Ba,"Ej":Aa,"Fj":Ea,"Gj":oa,"Hj":_a,"Ij":ce,"Jj":pb,"Kj":Xa,"Lj":Ew,"Mj":Dw,"Nj":Cw,"Oj":Bw,"Pj":_a,"Qj":Aw,"Rj":pb,"Sj":_a,"Tj":zw,"Uj":yw,"Vj":If,"Wj":xw,"Xj":Of,"Yj":ww,"Zj":oa,"_j":vw,"$j":uw,"ak":tw,"bk":sw,"ck":rw,"dk":Wa,"ek":Va,"fk":qw,"gk":pw,"hk":ow,"ik":Te,"jk":Ba,"kk":Aa,"lk":Ea,"mk":oa,"nk":nw,"ok":mw,"pk":lw,"qk":kw,"rk":jw,"sk":iw,"tk":hw,"uk":gw,"vk":_d,"wk":fw,"xk":ew,"yk":dw,"zk":cw,"Ak":bw,"Bk":Wa,"Ck":Va,"Dk":Ba,"Ek":Aa,"Fk":Ea,"Gk":oa,"Hk":ed,"Ik":dd,"Jk":zd,"Kk":_a,"Lk":aw,"Mk":pb,"Nk":$v,"Ok":_v,"Pk":Zv,"Qk":Yv,"Rk":Xv,"Sk":Wv,"Tk":Vv,"Uk":Uv,"Vk":Jl,"Wk":oa,"Xk":Tv,"Yk":Ba,"Zk":Aa,"_k":Ea,"$k":oa,"al":Sv,"bl":Ba,"cl":Aa,"dl":Ea,"el":oa,"fl":Rv,"gl":Qv,"hl":Ba,"il":Aa,"jl":Ea,"kl":oa,"ll":Ov,"ml":Wa,"nl":Va,"ol":Ba,"pl":Aa,"ql":Ea,"rl":oa,"sl":Nv,"tl":Mv,"ul":Lv,"vl":Kv,"wl":Fa,"xl":Jv,"yl":Fa,"zl":Iv,"Al":xf,"Bl":Hv,"Cl":Gv,"Dl":oa,"El":Fv,"Fl":Ev,"Gl":oa,"Hl":Hl,"Il":Fl,"Jl":Cl,"Kl":Kg,"Ll":nd,"Ml":cd,"Nl":oa,"Ol":Dv,"Pl":Cv,"Ql":el,"Rl":jl,"Sl":Yi,"Tl":hl,"Ul":Av,"Vl":Vk,"Wl":zv,"Xl":yv,"Yl":Ik,"Zl":Ea,"_l":sd,"$l":ql,"am":Ba,"bm":Aa,"cm":Oe,"dm":Ne,"em":Le,"fm":Ge,"gm":Ee,"hm":Ce,"im":Be,"jm":oa,"km":xv,"lm":wv,"mm":vv,"nm":uv,"om":Kg,"pm":tv,"qm":rv,"rm":qv,"sm":pv,"tm":hb,"um":gb,"vm":xd,"wm":wd,"xm":ov,"ym":nv,"zm":Vi,"Am":Ui,"Bm":sv,"Cm":lv,"Dm":kv,"Em":jv,"Fm":iv,"Gm":hv,"Hm":gv,"Im":fv,"Jm":Ti,"Km":ev,"Lm":dv,"Mm":cv,"Nm":oa,"Om":bv,"Pm":Yi,"Qm":av,"Rm":$u,"Sm":_u,"Tm":Ba,"Um":Aa,"Vm":Oe,"Wm":Ne,"Xm":Le,"Ym":Ge,"Zm":Ee,"_m":Ce,"$m":Be,"an":oa,"bn":Zu,"cn":Yu,"dn":Xu,"en":Wu,"fn":Vu,"gn":Ba,"hn":Aa,"jn":Oe,"kn":Ne,"ln":Le,"mn":Ge,"nn":Ee,"on":Ce,"pn":Be,"qn":oa,"rn":Uu,"sn":Tu,"tn":ed,"un":dd,"vn":nd,"wn":cd,"xn":Fa,"yn":Su,"zn":Ru,"An":oa,"Bn":Qu,"Cn":Fa,"Dn":Pu,"En":Ou,"Fn":Nu,"Gn":Mu,"Hn":Lu,"In":zd,"Jn":Ku,"Kn":sd,"Ln":vk,"Mn":oa,"Nn":oa,"On":Zf,"Pn":Ju,"Qn":oa,"Rn":Iu,"Sn":Hu,"Tn":Gu,"Un":Fu,"Vn":oa,"Wn":sd,"Xn":oa,"Yn":oa,"Zn":Eu,"_n":oa,"$n":Du,"ao":Cu,"bo":Bu,"co":Au,"eo":zd,"fo":zu,"go":yu,"ho":Kf,"io":Jf,"jo":xu,"ko":wu,"lo":vu,"mo":uu,"no":tu,"oo":su,"po":ru,"qo":qu,"ro":pu,"so":ou,"to":nu,"uo":mu,"vo":lu,"wo":ku,"xo":ju,"yo":iu,"zo":hu,"Ao":gu,"Bo":fu,"Co":eu,"Do":du,"Eo":cu,"Fo":Fa,"Go":bu,"Ho":sc,"Io":au,"Jo":$t,"Ko":_t,"Lo":Zt,"Mo":Yt,"No":Xt,"Oo":Wt,"Po":Ut,"Qo":Tt,"Ro":St,"So":Rt,"To":Qt,"Uo":Pt,"Vo":Ot,"Wo":Nt,"Xo":Mt,"Yo":Lt,"Zo":Kt,"_o":Jt,"$o":It,"ap":Ht,"bp":Gt,"cp":Ft,"dp":Et,"ep":Dt,"fp":Ct,"gp":Bt,"hp":At,"ip":zt,"jp":yt,"kp":rc,"lp":xt,"mp":kd,"np":jd,"op":vc,"pp":id,"qp":gd,"rp":bd,"sp":ad,"tp":$c,"up":_c,"vp":Zc,"wp":Yc,"xp":Xc,"yp":Wc,"zp":Vc,"Ap":Uc,"Bp":Tc,"Cp":Sc,"Dp":sc,"Ep":Rc,"Fp":Qc,"Gp":Pc,"Hp":Zb,"Ip":Oc,"Jp":Lc,"Kp":nb,"Lp":mb,"Mp":nb,"Np":mb,"Op":rc,"Pp":Kc,"Qp":wt,"Rp":ae,"Sp":$d,"Tp":hb,"Up":gb,"Vp":Nc,"Wp":Mc,"Xp":Fa,"Yp":vt,"Zp":ut,"_p":tt,"$p":st,"aq":rt,"bq":qt,"cq":Jb,"dq":Ib,"eq":Hb,"fq":Gb,"gq":Fb,"hq":Vt,"iq":pt,"jq":oa,"kq":ot,"lq":nt,"mq":mt,"nq":lt,"oq":kt,"pq":jt,"qq":it,"rq":ht,"sq":ok,"tq":gk,"uq":ek,"vq":bk,"wq":oe,"xq":Jb,"yq":Ib,"zq":Hb,"Aq":Gb,"Bq":Fb,"Cq":oa,"Dq":gt,"Eq":oa,"Fq":ft,"Gq":et,"Hq":dt,"Iq":ct,"Jq":bt,"Kq":at,"Lq":$s,"Mq":_s,"Nq":Zs,"Oq":Ys,"Pq":Jb,"Qq":Ib,"Rq":Hb,"Sq":Gb,"Tq":Fb,"Uq":oa,"Vq":Xs,"Wq":Ws,"Xq":Vs,"Yq":Us,"Zq":Ts,"_q":Ss,"$q":Rs,"ar":Qs,"br":Ps,"cr":Os,"dr":Ns,"er":Ms,"fr":Ls,"gr":Ks,"hr":Jb,"ir":Ib,"jr":Hb,"kr":Gb,"lr":Fb,"mr":oa,"nr":Js,"or":Is,"pr":Hs,"qr":Gs,"rr":vc,"sr":Fs,"tr":Es,"ur":Ds,"vr":Cs,"wr":Bs,"xr":As,"yr":Jb,"zr":Ib,"Ar":Hb,"Br":Gb,"Cr":Fb,"Dr":oa,"Er":zs,"Fr":Jb,"Gr":Ib,"Hr":Hb,"Ir":Gb,"Jr":Fb,"Kr":oa,"Lr":oa,"Mr":ae,"Nr":$d,"Or":nd,"Pr":cd,"Qr":xd,"Rr":wd,"Sr":qc,"Tr":Jc,"Ur":ys,"Vr":xs,"Wr":ws,"Xr":vs,"Yr":us,"Zr":ts,"_r":ss,"$r":rs,"as":Li,"bs":Ki,"cs":qs,"ds":ps,"es":Hf,"fs":Gf,"gs":Fa,"hs":os,"is":ns,"js":ms,"ks":ls,"ls":Ji,"ms":Ii,"ns":Fa,"os":ks,"ps":ae,"qs":$d,"rs":hb,"ss":gb,"ts":Nc,"us":Mc,"vs":qc,"ws":Jc,"xs":Gi,"ys":Hi,"zs":Fi,"As":Ei,"Bs":Xa,"Cs":be,"Ds":hd,"Es":fd,"Fs":Ff,"Gs":Ef,"Hs":Fa,"Is":js,"Js":yj,"Ks":oa,"Ls":Xa,"Ms":be,"Ns":hd,"Os":fd,"Ps":Ff,"Qs":Ef,"Rs":oj,"Ss":nj,"Ts":Sf,"Us":mj,"Vs":lj,"Ws":kj,"Xs":is,"Ys":hs,"Zs":Di,"_s":Ci,"$s":Fa,"at":Xa,"bt":be,"ct":hd,"dt":fd,"et":gj,"ft":fj,"gt":Bi,"ht":Ai,"it":zi,"jt":yi,"kt":xi,"lt":wi,"mt":vi,"nt":ui,"ot":ti,"pt":si,"qt":ri,"rt":qi,"st":pi,"tt":oi,"ut":ni,"vt":mi,"wt":gs,"xt":fs,"yt":Fa,"zt":es,"At":ds,"Bt":cs,"Ct":bs,"Dt":as,"Et":Pv,"Ft":$r,"Gt":_r,"Ht":Zr,"It":Yr,"Jt":Xr,"Kt":Wr,"Lt":Vr,"Mt":Ur,"Nt":Tr,"Ot":Sr,"Pt":Rr,"Qt":Bv,"Rt":Qr,"St":mv,"Tt":Pr,"Ut":Or,"Vt":Nr,"Wt":Mr,"Xt":Lr,"Yt":Kr,"Zt":Jr,"_t":Ir,"$t":Hr,"au":Xa,"bu":Gr,"cu":Fr,"du":Er,"eu":li,"fu":Dr,"gu":Cr,"hu":Br,"iu":Ar,"ju":zr,"ku":yr,"lu":xr,"mu":wr,"nu":vr,"ou":ur,"pu":tr,"qu":sr,"ru":rr,"su":qr,"tu":pr,"uu":or,"vu":nr,"wu":Fa,"xu":mr,"yu":lr,"zu":kr,"Au":md,"Bu":jr,"Cu":ir,"Du":hr,"Eu":gr,"Fu":fr,"Gu":er,"Hu":dr,"Iu":cr,"Ju":br,"Ku":ar,"Lu":$q,"Mu":_q,"Nu":Zq,"Ou":Yq,"Pu":Xq,"Qu":Wq,"Ru":Vq,"Su":Yf,"Tu":oa,"Uu":Uq,"Vu":Tq,"Wu":Sq,"Xu":Rq,"Yu":Qq,"Zu":Pq,"_u":Oq,"$u":Nq,"av":Mq,"bv":Lq,"cv":Kq,"dv":Jq,"ev":Iq,"fv":Hq,"gv":Gq,"hv":Fq,"iv":Eq,"jv":Dq,"kv":Cq,"lv":Bq,"mv":Aq,"nv":zq,"ov":yq,"pv":xq,"qv":wq,"rv":vq,"sv":uq,"tv":sq,"uv":rq,"vv":qq,"wv":Yf,"xv":oa,"yv":pq,"zv":kd,"Av":jd,"Bv":vc,"Cv":id,"Dv":gd,"Ev":bd,"Fv":ad,"Gv":$c,"Hv":_c,"Iv":Zc,"Jv":Yc,"Kv":Xc,"Lv":Wc,"Mv":Vc,"Nv":Uc,"Ov":Tc,"Pv":Sc,"Qv":sc,"Rv":Rc,"Sv":Qc,"Tv":Pc,"Uv":Zb,"Vv":Oc,"Wv":Lc,"Xv":nb,"Yv":mb,"Zv":nb,"_v":mb,"$v":rc,"aw":xj,"bw":wj,"cw":Kc,"dw":oq,"ew":oa,"fw":nq,"gw":ae,"hw":$d,"iw":hb,"jw":gb,"kw":Nc,"lw":Mc,"mw":qc,"nw":Jc,"ow":hd,"pw":fd,"qw":Vi,"rw":Ui,"sw":mq,"tw":lq,"uw":Rf,"vw":Qf,"ww":kq,"xw":jq,"yw":iq,"zw":Tf,"Aw":pj,"Bw":Hf,"Cw":Gf,"Dw":Fa,"Ew":_a,"Fw":hq,"Gw":pb,"Hw":Ph,"Iw":ej,"Jw":Of,"Kw":dj,"Lw":Rf,"Mw":Qf,"Nw":jj,"Ow":ij,"Pw":hj,"Qw":gq,"Rw":fq,"Sw":eq,"Tw":Kf,"Uw":Jf,"Vw":Fa,"Ww":_a,"Xw":dq,"Yw":pb,"Zw":hb,"_w":gb,"$w":Nc,"ax":Mc,"bx":qc,"cx":Jc,"dx":Ye,"ex":We,"fx":Fa,"gx":_a,"hx":ce,"ix":pb,"jx":ed,"kx":dd,"lx":If,"mx":cq,"nx":Ji,"ox":Ii,"px":ji,"qx":hi,"rx":Pm,"sx":bq,"tx":aq,"ux":$p,"vx":Kf,"wx":Jf,"xx":Fa,"yx":_a,"zx":_p,"Ax":ob,"Bx":Zp,"Cx":Yp,"Dx":pb,"Ex":hb,"Fx":gb,"Gx":Nc,"Hx":Mc,"Ix":qc,"Jx":Jc,"Kx":Gi,"Lx":Hi,"Mx":Fi,"Nx":Ei,"Ox":ji,"Px":hi,"Qx":Li,"Rx":Ki,"Sx":Ff,"Tx":Ef,"Ux":Hf,"Vx":Gf,"Wx":cj,"Xx":bj,"Yx":ci,"Zx":bi,"_x":Bi,"$x":Ai,"ay":zi,"by":yi,"cy":xi,"dy":wi,"ey":vi,"fy":ui,"gy":ti,"hy":si,"iy":ri,"jy":qi,"ky":pi,"ly":oi,"my":ni,"ny":mi,"oy":dx,"py":Xp,"qy":tq,"ry":Wp,"sy":Di,"ty":Ci,"uy":Vp,"vy":Up,"wy":Tp,"xy":Sp,"yy":Rp,"zy":Qp,"Ay":Pp,"By":Op,"Cy":Np,"Dy":Mp,"Ey":Lp,"Fy":Kp,"Gy":Jp,"Hy":Ip,"Iy":Hp,"Jy":Gp,"Ky":Fp,"Ly":Ep,"My":Dp,"Ny":Cp,"Oy":Bp,"Py":Ap,"Qy":yp,"Ry":xp,"Sy":wp,"Ty":vp,"Uy":up,"Vy":tp,"Wy":sp,"Xy":rp,"Yy":qp,"Zy":pp,"_y":kd,"$y":jd,"az":vc,"bz":id,"cz":gd,"dz":bd,"ez":ad,"fz":$c,"gz":_c,"hz":Zc,"iz":Yc,"jz":Xc,"kz":Wc,"lz":Vc,"mz":Uc,"nz":Tc,"oz":Sc,"pz":sc,"qz":Rc,"rz":Qc,"sz":Pc,"tz":Zb,"uz":Oc,"vz":Lc,"wz":nb,"xz":mb,"yz":nb,"zz":mb,"Az":rc,"Bz":op,"Cz":np,"Dz":mp,"Ez":lp,"Fz":kp,"Gz":jp,"Hz":ip,"Iz":hp,"Jz":gp,"Kz":fp,"Lz":Kc,"Mz":dp,"Nz":cp,"Oz":oa,"Pz":bp,"Qz":oa,"Rz":_a,"Sz":ce,"Tz":pb,"Uz":ap,"Vz":$o,"Wz":_o,"Xz":He,"Yz":Zo,"Zz":Yo,"_z":Zd,"$z":Xd,"aA":Qd,"bA":df,"cA":Aj,"dA":zj,"eA":Pe,"fA":ze,"gA":se,"hA":me,"iA":je,"jA":ie,"kA":md,"lA":ge,"mA":fe,"nA":ee,"oA":Xj,"pA":Xo,"qA":Pj,"rA":Nj,"sA":Kj,"tA":Jj,"uA":Hj,"vA":Zf,"wA":Gj,"xA":Fj,"yA":Ej,"zA":Dj,"AA":Cj,"BA":Bj,"CA":_d,"DA":Df,"EA":Cf,"FA":Bf,"GA":zf,"HA":yf,"IA":oa,"JA":Wo,"KA":Vo,"LA":Uo,"MA":To,"NA":So,"OA":Ro,"PA":Qo,"QA":Fa,"RA":_h,"SA":uf,"TA":tf,"UA":Zh,"VA":Xh,"WA":Po,"XA":_h,"YA":uf,"ZA":tf,"_A":uf,"$A":tf,"aB":Zh,"bB":Xh,"cB":ia,"dB":bg}}return ka(ma)}
  // EMSCRIPTEN_END_ASM
  
  
  
  
  )(Fa)}function Ga(){return{then:function(a){a({instance:new Ea})}}}
  var Ia=Error,WebAssembly={};Ba=[];"object"!=typeof WebAssembly&&xa("no native wasm support detected");var Ja,Ka=!1,La="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;
  function Ma(a,c){if(a){var d=Na,e=a+c;for(c=a;d[c]&&!(c>=e);)++c;if(16<c-a&&d.subarray&&La)a=La.decode(d.subarray(a,c));else{for(e="";a<c;){var f=d[a++];if(f&128){var m=d[a++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|m);else{var y=d[a++]&63;f=224==(f&240)?(f&15)<<12|m<<6|y:(f&7)<<18|m<<12|y<<6|d[a++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}a=e}}else a="";return a}
  var Oa,Pa,Na,Qa,Ra,Sa,Da=b.INITIAL_MEMORY||67108864;if(Ja=b.wasmMemory?b.wasmMemory:new Ca)Oa=Ja.buffer;Da=Oa.byteLength;var Ta=Oa;Oa=Ta;b.HEAP8=Pa=new Int8Array(Ta);b.HEAP16=new Int16Array(Ta);b.HEAP32=Qa=new Int32Array(Ta);b.HEAPU8=Na=new Uint8Array(Ta);b.HEAPU16=new Uint16Array(Ta);b.HEAPU32=new Uint32Array(Ta);b.HEAPF32=Ra=new Float32Array(Ta);b.HEAPF64=Sa=new Float64Array(Ta);var Ua,Va=[],Wa=[],Xa=[],Ya=!1;function Za(){var a=b.preRun.shift();Va.unshift(a)}
  Math.imul||(Math.imul=function(a,c){var d=a&65535,e=c&65535;return d*e+((a>>>16)*e+d*(c>>>16)<<16)|0});if(!Math.fround){var $a=new Float32Array(1);Math.fround=function(a){$a[0]=a;return $a[0]}}Math.clz32||(Math.clz32=function(a){var c=32,d=a>>16;d&&(c-=16,a=d);if(d=a>>8)c-=8,a=d;if(d=a>>4)c-=4,a=d;if(d=a>>2)c-=2,a=d;return a>>1?c-2:c-a});Math.trunc||(Math.trunc=function(a){return 0>a?Math.ceil(a):Math.floor(a)});var ab=0,bb=null,cb=null;b.preloadedImages={};b.preloadedAudios={};
  function xa(a){if(b.onAbort)b.onAbort(a);a="Aborted("+a+")";ya(a);Ka=!0;a=new Ia(a+". Build with -s ASSERTIONS=1 for more info.");ka(a);throw a;}var db="data:application/octet-stream;base64,",eb;eb="<<< WASM_BINARY_FILE >>>";if(!eb.startsWith(db)){var fb=eb;eb=b.locateFile?b.locateFile(fb,pa):pa+fb}function gb(){var a=eb;try{if(a==eb&&Ba)return new Uint8Array(Ba);var c=va(a);if(c)return c;if(sa)return sa(a);throw"both async and sync fetching of the wasm failed";}catch(d){xa(d)}}
  function hb(){if(!Ba&&(ma||na)){if("function"==typeof fetch&&!eb.startsWith("file://"))return fetch(eb,{credentials:"same-origin"}).then(function(a){if(!a.ok)throw"failed to load wasm binary file at '"+eb+"'";return a.arrayBuffer()}).catch(function(){return gb()});if(ra)return new Promise(function(a,c){ra(eb,function(d){a(new Uint8Array(d))},c)})}return Promise.resolve().then(function(){return gb()})}
  var ib={27254:function(a,c,d,e){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("drawLine"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::drawLine.";a.drawLine(c,d,e)},27474:function(a,c,d,e,f,m){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("drawContactPoint"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::drawContactPoint.";a.drawContactPoint(c,d,e,f,m)},27724:function(a,c){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("reportErrorWarning"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::reportErrorWarning.";
  a.reportErrorWarning(c)},27968:function(a,c,d){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("draw3dText"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::draw3dText.";a.draw3dText(c,d)},28191:function(a,c){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("setDebugMode"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::setDebugMode.";a.setDebugMode(c)},28417:function(a){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty("getDebugMode"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::getDebugMode.";
  return a.getDebugMode()},28648:function(a,c,d,e,f,m,y,W){a=b.getCache(b.ConcreteContactResultCallback)[a];if(!a.hasOwnProperty("addSingleResult"))throw"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";return a.addSingleResult(c,d,e,f,m,y,W)}};function jb(a){for(;0<a.length;){var c=a.shift();if("function"==typeof c)c(b);else{var d=c.QH;"number"==typeof d?void 0===c.HB?kb(d)():kb(d)(c.HB):d(void 0===c.HB?null:c.HB)}}}var lb=[];
  function kb(a){var c=lb[a];c||(a>=lb.length&&(lb.length=a+1),lb[a]=c=Ua.get(a));return c}var mb=[];function nb(a,c,d){mb.length=0;var e;for(d>>=2;e=Na[c++];)(e=105>e)&&d&1&&d++,mb.push(e?Sa[d++>>1]:Qa[d]),++d;return ib[a].apply(null,mb)}
  var wa=!1,ob="function"==typeof atob?atob:function(a){var c="",d=0;a=a.replace(/[^A-Za-z0-9\+\/=]/g,"");do{var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var f="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var m="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));e=e<<2|
  f>>4;f=(f&15)<<4|m>>2;var W=(m&3)<<6|y;c+=String.fromCharCode(e);64!==m&&(c+=String.fromCharCode(f));64!==y&&(c+=String.fromCharCode(W))}while(d<a.length);return c};
  function va(a){if(a.startsWith(db)){a=a.slice(db.length);if("boolean"==typeof oa&&oa){var c=Buffer.from(a,"base64");c=new Uint8Array(c.buffer,c.byteOffset,c.byteLength)}else try{var d=ob(a),e=new Uint8Array(d.length);for(a=0;a<d.length;++a)e[a]=d.charCodeAt(a);c=e}catch(f){throw Error("Converting base64 string to bytes failed.");}return c}}
  var Fa={d:function(){xa("")},g:function(a,c,d){return nb(a,c,d)},c:nb,f:Uint8Array.prototype.copyWithin?function(a,c,d){Na.copyWithin(a,c,c+d)}:function(a,c,d){Na.set(Na.subarray(c,c+d),a)},e:function(){xa("OOM")},b:function(a){var c=Date.now();Qa[a>>2]=c/1E3|0;Qa[a+4>>2]=c%1E3*1E3|0;return 0},a:Ja};
  (function(){function a(f){b.asm=f.exports;Ua=b.asm.cB;Wa.unshift(b.asm.h);ab--;b.monitorRunDependencies&&b.monitorRunDependencies(ab);0==ab&&(null!==bb&&(clearInterval(bb),bb=null),cb&&(f=cb,cb=null,f()))}function c(f){a(f.instance)}function d(f){return hb().then(function(){return Ga()}).then(function(m){return m}).then(f,function(m){ya("failed to asynchronously prepare wasm: "+m);xa(m)})}var e={a:Fa};ab++;b.monitorRunDependencies&&b.monitorRunDependencies(ab);if(b.instantiateWasm)try{return b.instantiateWasm(e,
  a)}catch(f){return ya("Module.instantiateWasm callback failed with error: "+f),!1}(function(){return Ba||"function"!=typeof WebAssembly.instantiateStreaming||eb.startsWith(db)||eb.startsWith("file://")||"function"!=typeof fetch?d(c):fetch(eb,{credentials:"same-origin"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(c,function(m){ya("wasm streaming compile failed: "+m);ya("falling back to ArrayBuffer instantiation");return d(c)})})})().catch(ka);return{}})();
  b.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.h).apply(null,arguments)};
  var pb=b._emscripten_bind_btCollisionShape_setLocalScaling_1=function(){return(pb=b._emscripten_bind_btCollisionShape_setLocalScaling_1=b.asm.i).apply(null,arguments)},qb=b._emscripten_bind_btCollisionShape_getLocalScaling_0=function(){return(qb=b._emscripten_bind_btCollisionShape_getLocalScaling_0=b.asm.j).apply(null,arguments)},rb=b._emscripten_bind_btCollisionShape_calculateLocalInertia_2=function(){return(rb=b._emscripten_bind_btCollisionShape_calculateLocalInertia_2=b.asm.k).apply(null,arguments)},
  sb=b._emscripten_bind_btCollisionShape_setMargin_1=function(){return(sb=b._emscripten_bind_btCollisionShape_setMargin_1=b.asm.l).apply(null,arguments)},tb=b._emscripten_bind_btCollisionShape_getMargin_0=function(){return(tb=b._emscripten_bind_btCollisionShape_getMargin_0=b.asm.m).apply(null,arguments)},ub=b._emscripten_bind_btCollisionShape___destroy___0=function(){return(ub=b._emscripten_bind_btCollisionShape___destroy___0=b.asm.n).apply(null,arguments)},vb=b._emscripten_bind_btCollisionWorld_getDispatcher_0=
  function(){return(vb=b._emscripten_bind_btCollisionWorld_getDispatcher_0=b.asm.o).apply(null,arguments)},wb=b._emscripten_bind_btCollisionWorld_rayTest_3=function(){return(wb=b._emscripten_bind_btCollisionWorld_rayTest_3=b.asm.p).apply(null,arguments)},xb=b._emscripten_bind_btCollisionWorld_getPairCache_0=function(){return(xb=b._emscripten_bind_btCollisionWorld_getPairCache_0=b.asm.q).apply(null,arguments)},yb=b._emscripten_bind_btCollisionWorld_getDispatchInfo_0=function(){return(yb=b._emscripten_bind_btCollisionWorld_getDispatchInfo_0=
  b.asm.r).apply(null,arguments)},zb=b._emscripten_bind_btCollisionWorld_addCollisionObject_1=function(){return(zb=b._emscripten_bind_btCollisionWorld_addCollisionObject_1=b.asm.s).apply(null,arguments)},Ab=b._emscripten_bind_btCollisionWorld_addCollisionObject_2=function(){return(Ab=b._emscripten_bind_btCollisionWorld_addCollisionObject_2=b.asm.t).apply(null,arguments)},Bb=b._emscripten_bind_btCollisionWorld_addCollisionObject_3=function(){return(Bb=b._emscripten_bind_btCollisionWorld_addCollisionObject_3=
  b.asm.u).apply(null,arguments)},Cb=b._emscripten_bind_btCollisionWorld_removeCollisionObject_1=function(){return(Cb=b._emscripten_bind_btCollisionWorld_removeCollisionObject_1=b.asm.v).apply(null,arguments)},Db=b._emscripten_bind_btCollisionWorld_getBroadphase_0=function(){return(Db=b._emscripten_bind_btCollisionWorld_getBroadphase_0=b.asm.w).apply(null,arguments)},Fb=b._emscripten_bind_btCollisionWorld_convexSweepTest_5=function(){return(Fb=b._emscripten_bind_btCollisionWorld_convexSweepTest_5=b.asm.x).apply(null,
  arguments)},Gb=b._emscripten_bind_btCollisionWorld_contactPairTest_3=function(){return(Gb=b._emscripten_bind_btCollisionWorld_contactPairTest_3=b.asm.y).apply(null,arguments)},Hb=b._emscripten_bind_btCollisionWorld_contactTest_2=function(){return(Hb=b._emscripten_bind_btCollisionWorld_contactTest_2=b.asm.z).apply(null,arguments)},Ib=b._emscripten_bind_btCollisionWorld_updateSingleAabb_1=function(){return(Ib=b._emscripten_bind_btCollisionWorld_updateSingleAabb_1=b.asm.A).apply(null,arguments)},Jb=
  b._emscripten_bind_btCollisionWorld_setDebugDrawer_1=function(){return(Jb=b._emscripten_bind_btCollisionWorld_setDebugDrawer_1=b.asm.B).apply(null,arguments)},Kb=b._emscripten_bind_btCollisionWorld_getDebugDrawer_0=function(){return(Kb=b._emscripten_bind_btCollisionWorld_getDebugDrawer_0=b.asm.C).apply(null,arguments)},Lb=b._emscripten_bind_btCollisionWorld_debugDrawWorld_0=function(){return(Lb=b._emscripten_bind_btCollisionWorld_debugDrawWorld_0=b.asm.D).apply(null,arguments)},Mb=b._emscripten_bind_btCollisionWorld_debugDrawObject_3=
  function(){return(Mb=b._emscripten_bind_btCollisionWorld_debugDrawObject_3=b.asm.E).apply(null,arguments)},Nb=b._emscripten_bind_btCollisionWorld___destroy___0=function(){return(Nb=b._emscripten_bind_btCollisionWorld___destroy___0=b.asm.F).apply(null,arguments)},Ob=b._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=function(){return(Ob=b._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=b.asm.G).apply(null,arguments)},Pb=b._emscripten_bind_btCollisionObject_getCollisionShape_0=
  function(){return(Pb=b._emscripten_bind_btCollisionObject_getCollisionShape_0=b.asm.H).apply(null,arguments)},Qb=b._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=function(){return(Qb=b._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=b.asm.I).apply(null,arguments)},Rb=b._emscripten_bind_btCollisionObject_setActivationState_1=function(){return(Rb=b._emscripten_bind_btCollisionObject_setActivationState_1=b.asm.J).apply(null,arguments)},Sb=b._emscripten_bind_btCollisionObject_forceActivationState_1=
  function(){return(Sb=b._emscripten_bind_btCollisionObject_forceActivationState_1=b.asm.K).apply(null,arguments)},Tb=b._emscripten_bind_btCollisionObject_activate_0=function(){return(Tb=b._emscripten_bind_btCollisionObject_activate_0=b.asm.L).apply(null,arguments)},Ub=b._emscripten_bind_btCollisionObject_activate_1=function(){return(Ub=b._emscripten_bind_btCollisionObject_activate_1=b.asm.M).apply(null,arguments)},Vb=b._emscripten_bind_btCollisionObject_isActive_0=function(){return(Vb=b._emscripten_bind_btCollisionObject_isActive_0=
  b.asm.N).apply(null,arguments)},Wb=b._emscripten_bind_btCollisionObject_isKinematicObject_0=function(){return(Wb=b._emscripten_bind_btCollisionObject_isKinematicObject_0=b.asm.O).apply(null,arguments)},Xb=b._emscripten_bind_btCollisionObject_isStaticObject_0=function(){return(Xb=b._emscripten_bind_btCollisionObject_isStaticObject_0=b.asm.P).apply(null,arguments)},Yb=b._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=function(){return(Yb=b._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=
  b.asm.Q).apply(null,arguments)},Zb=b._emscripten_bind_btCollisionObject_getRestitution_0=function(){return(Zb=b._emscripten_bind_btCollisionObject_getRestitution_0=b.asm.R).apply(null,arguments)},$b=b._emscripten_bind_btCollisionObject_getFriction_0=function(){return($b=b._emscripten_bind_btCollisionObject_getFriction_0=b.asm.S).apply(null,arguments)},ac=b._emscripten_bind_btCollisionObject_getRollingFriction_0=function(){return(ac=b._emscripten_bind_btCollisionObject_getRollingFriction_0=b.asm.T).apply(null,
  arguments)},bc=b._emscripten_bind_btCollisionObject_setRestitution_1=function(){return(bc=b._emscripten_bind_btCollisionObject_setRestitution_1=b.asm.U).apply(null,arguments)},cc=b._emscripten_bind_btCollisionObject_setFriction_1=function(){return(cc=b._emscripten_bind_btCollisionObject_setFriction_1=b.asm.V).apply(null,arguments)},dc=b._emscripten_bind_btCollisionObject_setRollingFriction_1=function(){return(dc=b._emscripten_bind_btCollisionObject_setRollingFriction_1=b.asm.W).apply(null,arguments)},
  ec=b._emscripten_bind_btCollisionObject_getWorldTransform_0=function(){return(ec=b._emscripten_bind_btCollisionObject_getWorldTransform_0=b.asm.X).apply(null,arguments)},gc=b._emscripten_bind_btCollisionObject_getCollisionFlags_0=function(){return(gc=b._emscripten_bind_btCollisionObject_getCollisionFlags_0=b.asm.Y).apply(null,arguments)},hc=b._emscripten_bind_btCollisionObject_setCollisionFlags_1=function(){return(hc=b._emscripten_bind_btCollisionObject_setCollisionFlags_1=b.asm.Z).apply(null,arguments)},
  ic=b._emscripten_bind_btCollisionObject_setWorldTransform_1=function(){return(ic=b._emscripten_bind_btCollisionObject_setWorldTransform_1=b.asm._).apply(null,arguments)},jc=b._emscripten_bind_btCollisionObject_setCollisionShape_1=function(){return(jc=b._emscripten_bind_btCollisionObject_setCollisionShape_1=b.asm.$).apply(null,arguments)},kc=b._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=function(){return(kc=b._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=b.asm.aa).apply(null,
  arguments)},lc=b._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=function(){return(lc=b._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=b.asm.ba).apply(null,arguments)},mc=b._emscripten_bind_btCollisionObject_getUserIndex_0=function(){return(mc=b._emscripten_bind_btCollisionObject_getUserIndex_0=b.asm.ca).apply(null,arguments)},nc=b._emscripten_bind_btCollisionObject_setUserIndex_1=function(){return(nc=b._emscripten_bind_btCollisionObject_setUserIndex_1=b.asm.da).apply(null,
  arguments)},oc=b._emscripten_bind_btCollisionObject_getUserPointer_0=function(){return(oc=b._emscripten_bind_btCollisionObject_getUserPointer_0=b.asm.ea).apply(null,arguments)},pc=b._emscripten_bind_btCollisionObject_setUserPointer_1=function(){return(pc=b._emscripten_bind_btCollisionObject_setUserPointer_1=b.asm.fa).apply(null,arguments)},qc=b._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=function(){return(qc=b._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=b.asm.ga).apply(null,
  arguments)},sc=b._emscripten_bind_btCollisionObject___destroy___0=function(){return(sc=b._emscripten_bind_btCollisionObject___destroy___0=b.asm.ha).apply(null,arguments)},tc=b._emscripten_bind_btConcaveShape_setLocalScaling_1=function(){return(tc=b._emscripten_bind_btConcaveShape_setLocalScaling_1=b.asm.ia).apply(null,arguments)},uc=b._emscripten_bind_btConcaveShape_getLocalScaling_0=function(){return(uc=b._emscripten_bind_btConcaveShape_getLocalScaling_0=b.asm.ja).apply(null,arguments)},vc=b._emscripten_bind_btConcaveShape_calculateLocalInertia_2=
  function(){return(vc=b._emscripten_bind_btConcaveShape_calculateLocalInertia_2=b.asm.ka).apply(null,arguments)},wc=b._emscripten_bind_btConcaveShape___destroy___0=function(){return(wc=b._emscripten_bind_btConcaveShape___destroy___0=b.asm.la).apply(null,arguments)},xc=b._emscripten_bind_btCollisionAlgorithm___destroy___0=function(){return(xc=b._emscripten_bind_btCollisionAlgorithm___destroy___0=b.asm.ma).apply(null,arguments)},yc=b._emscripten_bind_btTypedConstraint_enableFeedback_1=function(){return(yc=
  b._emscripten_bind_btTypedConstraint_enableFeedback_1=b.asm.na).apply(null,arguments)},zc=b._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=function(){return(zc=b._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=b.asm.oa).apply(null,arguments)},Ac=b._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=function(){return(Ac=b._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=b.asm.pa).apply(null,arguments)},Bc=b._emscripten_bind_btTypedConstraint_getParam_2=
  function(){return(Bc=b._emscripten_bind_btTypedConstraint_getParam_2=b.asm.qa).apply(null,arguments)},Cc=b._emscripten_bind_btTypedConstraint_setParam_3=function(){return(Cc=b._emscripten_bind_btTypedConstraint_setParam_3=b.asm.ra).apply(null,arguments)},Dc=b._emscripten_bind_btTypedConstraint___destroy___0=function(){return(Dc=b._emscripten_bind_btTypedConstraint___destroy___0=b.asm.sa).apply(null,arguments)},Fc=b._emscripten_bind_btDynamicsWorld_addAction_1=function(){return(Fc=b._emscripten_bind_btDynamicsWorld_addAction_1=
  b.asm.ta).apply(null,arguments)},Gc=b._emscripten_bind_btDynamicsWorld_removeAction_1=function(){return(Gc=b._emscripten_bind_btDynamicsWorld_removeAction_1=b.asm.ua).apply(null,arguments)},Hc=b._emscripten_bind_btDynamicsWorld_getSolverInfo_0=function(){return(Hc=b._emscripten_bind_btDynamicsWorld_getSolverInfo_0=b.asm.va).apply(null,arguments)},Ic=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_1=function(){return(Ic=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_1=b.asm.wa).apply(null,
  arguments)},Jc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_2=function(){return(Jc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_2=b.asm.xa).apply(null,arguments)},Kc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_3=function(){return(Kc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_3=b.asm.ya).apply(null,arguments)},Lc=b._emscripten_bind_btDynamicsWorld_getDispatcher_0=function(){return(Lc=b._emscripten_bind_btDynamicsWorld_getDispatcher_0=b.asm.za).apply(null,
  arguments)},Mc=b._emscripten_bind_btDynamicsWorld_rayTest_3=function(){return(Mc=b._emscripten_bind_btDynamicsWorld_rayTest_3=b.asm.Aa).apply(null,arguments)},Nc=b._emscripten_bind_btDynamicsWorld_getPairCache_0=function(){return(Nc=b._emscripten_bind_btDynamicsWorld_getPairCache_0=b.asm.Ba).apply(null,arguments)},Oc=b._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=function(){return(Oc=b._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=b.asm.Ca).apply(null,arguments)},Pc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_1=
  function(){return(Pc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_1=b.asm.Da).apply(null,arguments)},Qc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_2=function(){return(Qc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_2=b.asm.Ea).apply(null,arguments)},Rc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_3=function(){return(Rc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_3=b.asm.Fa).apply(null,arguments)},Sc=b._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=
  function(){return(Sc=b._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=b.asm.Ga).apply(null,arguments)},Tc=b._emscripten_bind_btDynamicsWorld_getBroadphase_0=function(){return(Tc=b._emscripten_bind_btDynamicsWorld_getBroadphase_0=b.asm.Ha).apply(null,arguments)},Uc=b._emscripten_bind_btDynamicsWorld_convexSweepTest_5=function(){return(Uc=b._emscripten_bind_btDynamicsWorld_convexSweepTest_5=b.asm.Ia).apply(null,arguments)},Vc=b._emscripten_bind_btDynamicsWorld_contactPairTest_3=function(){return(Vc=
  b._emscripten_bind_btDynamicsWorld_contactPairTest_3=b.asm.Ja).apply(null,arguments)},Yc=b._emscripten_bind_btDynamicsWorld_contactTest_2=function(){return(Yc=b._emscripten_bind_btDynamicsWorld_contactTest_2=b.asm.Ka).apply(null,arguments)},Zc=b._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=function(){return(Zc=b._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=b.asm.La).apply(null,arguments)},$c=b._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=function(){return($c=b._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=
  b.asm.Ma).apply(null,arguments)},ad=b._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=function(){return(ad=b._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=b.asm.Na).apply(null,arguments)},bd=b._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=function(){return(bd=b._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=b.asm.Oa).apply(null,arguments)},cd=b._emscripten_bind_btDynamicsWorld_debugDrawObject_3=function(){return(cd=b._emscripten_bind_btDynamicsWorld_debugDrawObject_3=b.asm.Pa).apply(null,
  arguments)},dd=b._emscripten_bind_btDynamicsWorld___destroy___0=function(){return(dd=b._emscripten_bind_btDynamicsWorld___destroy___0=b.asm.Qa).apply(null,arguments)},ed=b._emscripten_bind_btIDebugDraw_drawLine_3=function(){return(ed=b._emscripten_bind_btIDebugDraw_drawLine_3=b.asm.Ra).apply(null,arguments)},fd=b._emscripten_bind_btIDebugDraw_drawContactPoint_5=function(){return(fd=b._emscripten_bind_btIDebugDraw_drawContactPoint_5=b.asm.Sa).apply(null,arguments)},gd=b._emscripten_bind_btIDebugDraw_reportErrorWarning_1=
  function(){return(gd=b._emscripten_bind_btIDebugDraw_reportErrorWarning_1=b.asm.Ta).apply(null,arguments)},hd=b._emscripten_bind_btIDebugDraw_draw3dText_2=function(){return(hd=b._emscripten_bind_btIDebugDraw_draw3dText_2=b.asm.Ua).apply(null,arguments)},jd=b._emscripten_bind_btIDebugDraw_setDebugMode_1=function(){return(jd=b._emscripten_bind_btIDebugDraw_setDebugMode_1=b.asm.Va).apply(null,arguments)},kd=b._emscripten_bind_btIDebugDraw_getDebugMode_0=function(){return(kd=b._emscripten_bind_btIDebugDraw_getDebugMode_0=
  b.asm.Wa).apply(null,arguments)},ld=b._emscripten_bind_btIDebugDraw___destroy___0=function(){return(ld=b._emscripten_bind_btIDebugDraw___destroy___0=b.asm.Xa).apply(null,arguments)},md=b._emscripten_bind_btVector3_btVector3_0=function(){return(md=b._emscripten_bind_btVector3_btVector3_0=b.asm.Ya).apply(null,arguments)},nd=b._emscripten_bind_btVector3_btVector3_3=function(){return(nd=b._emscripten_bind_btVector3_btVector3_3=b.asm.Za).apply(null,arguments)},od=b._emscripten_bind_btVector3_length_0=
  function(){return(od=b._emscripten_bind_btVector3_length_0=b.asm._a).apply(null,arguments)},pd=b._emscripten_bind_btVector3_x_0=function(){return(pd=b._emscripten_bind_btVector3_x_0=b.asm.$a).apply(null,arguments)},qd=b._emscripten_bind_btVector3_y_0=function(){return(qd=b._emscripten_bind_btVector3_y_0=b.asm.ab).apply(null,arguments)},rd=b._emscripten_bind_btVector3_z_0=function(){return(rd=b._emscripten_bind_btVector3_z_0=b.asm.bb).apply(null,arguments)},sd=b._emscripten_bind_btVector3_setX_1=function(){return(sd=
  b._emscripten_bind_btVector3_setX_1=b.asm.cb).apply(null,arguments)},td=b._emscripten_bind_btVector3_setY_1=function(){return(td=b._emscripten_bind_btVector3_setY_1=b.asm.db).apply(null,arguments)},ud=b._emscripten_bind_btVector3_setZ_1=function(){return(ud=b._emscripten_bind_btVector3_setZ_1=b.asm.eb).apply(null,arguments)},vd=b._emscripten_bind_btVector3_setValue_3=function(){return(vd=b._emscripten_bind_btVector3_setValue_3=b.asm.fb).apply(null,arguments)},wd=b._emscripten_bind_btVector3_normalize_0=
  function(){return(wd=b._emscripten_bind_btVector3_normalize_0=b.asm.gb).apply(null,arguments)},xd=b._emscripten_bind_btVector3_rotate_2=function(){return(xd=b._emscripten_bind_btVector3_rotate_2=b.asm.hb).apply(null,arguments)},yd=b._emscripten_bind_btVector3_dot_1=function(){return(yd=b._emscripten_bind_btVector3_dot_1=b.asm.ib).apply(null,arguments)},zd=b._emscripten_bind_btVector3_op_mul_1=function(){return(zd=b._emscripten_bind_btVector3_op_mul_1=b.asm.jb).apply(null,arguments)},Ad=b._emscripten_bind_btVector3_op_add_1=
  function(){return(Ad=b._emscripten_bind_btVector3_op_add_1=b.asm.kb).apply(null,arguments)},Bd=b._emscripten_bind_btVector3_op_sub_1=function(){return(Bd=b._emscripten_bind_btVector3_op_sub_1=b.asm.lb).apply(null,arguments)},Cd=b._emscripten_bind_btVector3___destroy___0=function(){return(Cd=b._emscripten_bind_btVector3___destroy___0=b.asm.mb).apply(null,arguments)},Dd=b._emscripten_bind_btQuadWord_x_0=function(){return(Dd=b._emscripten_bind_btQuadWord_x_0=b.asm.nb).apply(null,arguments)},Ed=b._emscripten_bind_btQuadWord_y_0=
  function(){return(Ed=b._emscripten_bind_btQuadWord_y_0=b.asm.ob).apply(null,arguments)},Fd=b._emscripten_bind_btQuadWord_z_0=function(){return(Fd=b._emscripten_bind_btQuadWord_z_0=b.asm.pb).apply(null,arguments)},Gd=b._emscripten_bind_btQuadWord_w_0=function(){return(Gd=b._emscripten_bind_btQuadWord_w_0=b.asm.qb).apply(null,arguments)},Hd=b._emscripten_bind_btQuadWord_setX_1=function(){return(Hd=b._emscripten_bind_btQuadWord_setX_1=b.asm.rb).apply(null,arguments)},Id=b._emscripten_bind_btQuadWord_setY_1=
  function(){return(Id=b._emscripten_bind_btQuadWord_setY_1=b.asm.sb).apply(null,arguments)},Jd=b._emscripten_bind_btQuadWord_setZ_1=function(){return(Jd=b._emscripten_bind_btQuadWord_setZ_1=b.asm.tb).apply(null,arguments)},Kd=b._emscripten_bind_btQuadWord_setW_1=function(){return(Kd=b._emscripten_bind_btQuadWord_setW_1=b.asm.ub).apply(null,arguments)},Ld=b._emscripten_bind_btQuadWord___destroy___0=function(){return(Ld=b._emscripten_bind_btQuadWord___destroy___0=b.asm.vb).apply(null,arguments)},Md=
  b._emscripten_bind_btMotionState_getWorldTransform_1=function(){return(Md=b._emscripten_bind_btMotionState_getWorldTransform_1=b.asm.wb).apply(null,arguments)},Nd=b._emscripten_bind_btMotionState_setWorldTransform_1=function(){return(Nd=b._emscripten_bind_btMotionState_setWorldTransform_1=b.asm.xb).apply(null,arguments)},Od=b._emscripten_bind_btMotionState___destroy___0=function(){return(Od=b._emscripten_bind_btMotionState___destroy___0=b.asm.yb).apply(null,arguments)},Pd=b._emscripten_bind_RayResultCallback_hasHit_0=
  function(){return(Pd=b._emscripten_bind_RayResultCallback_hasHit_0=b.asm.zb).apply(null,arguments)},Qd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=function(){return(Qd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=b.asm.Ab).apply(null,arguments)},Rd=b._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=function(){return(Rd=b._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=b.asm.Bb).apply(null,arguments)},Sd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=
  function(){return(Sd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=b.asm.Cb).apply(null,arguments)},Td=b._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=function(){return(Td=b._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=b.asm.Db).apply(null,arguments)},Ud=b._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=function(){return(Ud=b._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=b.asm.Eb).apply(null,arguments)},Vd=b._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=
  function(){return(Vd=b._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=b.asm.Fb).apply(null,arguments)},Wd=b._emscripten_bind_RayResultCallback_get_m_collisionObject_0=function(){return(Wd=b._emscripten_bind_RayResultCallback_get_m_collisionObject_0=b.asm.Gb).apply(null,arguments)},Xd=b._emscripten_bind_RayResultCallback_set_m_collisionObject_1=function(){return(Xd=b._emscripten_bind_RayResultCallback_set_m_collisionObject_1=b.asm.Hb).apply(null,arguments)},Yd=b._emscripten_bind_RayResultCallback_get_m_flags_0=
  function(){return(Yd=b._emscripten_bind_RayResultCallback_get_m_flags_0=b.asm.Ib).apply(null,arguments)},Zd=b._emscripten_bind_RayResultCallback_set_m_flags_1=function(){return(Zd=b._emscripten_bind_RayResultCallback_set_m_flags_1=b.asm.Jb).apply(null,arguments)},$d=b._emscripten_bind_RayResultCallback___destroy___0=function(){return($d=b._emscripten_bind_RayResultCallback___destroy___0=b.asm.Kb).apply(null,arguments)},ae=b._emscripten_bind_ContactResultCallback_addSingleResult_7=function(){return(ae=
  b._emscripten_bind_ContactResultCallback_addSingleResult_7=b.asm.Lb).apply(null,arguments)},be=b._emscripten_bind_ContactResultCallback___destroy___0=function(){return(be=b._emscripten_bind_ContactResultCallback___destroy___0=b.asm.Mb).apply(null,arguments)},ce=b._emscripten_bind_ConvexResultCallback_hasHit_0=function(){return(ce=b._emscripten_bind_ConvexResultCallback_hasHit_0=b.asm.Nb).apply(null,arguments)},de=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=function(){return(de=
  b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=b.asm.Ob).apply(null,arguments)},ee=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=function(){return(ee=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=b.asm.Pb).apply(null,arguments)},fe=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=function(){return(fe=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=b.asm.Qb).apply(null,arguments)},ge=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=
  function(){return(ge=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=b.asm.Rb).apply(null,arguments)},he=b._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=function(){return(he=b._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=b.asm.Sb).apply(null,arguments)},ie=b._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=function(){return(ie=b._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=b.asm.Tb).apply(null,arguments)},
  je=b._emscripten_bind_ConvexResultCallback___destroy___0=function(){return(je=b._emscripten_bind_ConvexResultCallback___destroy___0=b.asm.Ub).apply(null,arguments)},ke=b._emscripten_bind_btConvexShape_setLocalScaling_1=function(){return(ke=b._emscripten_bind_btConvexShape_setLocalScaling_1=b.asm.Vb).apply(null,arguments)},le=b._emscripten_bind_btConvexShape_getLocalScaling_0=function(){return(le=b._emscripten_bind_btConvexShape_getLocalScaling_0=b.asm.Wb).apply(null,arguments)},me=b._emscripten_bind_btConvexShape_calculateLocalInertia_2=
  function(){return(me=b._emscripten_bind_btConvexShape_calculateLocalInertia_2=b.asm.Xb).apply(null,arguments)},ne=b._emscripten_bind_btConvexShape_setMargin_1=function(){return(ne=b._emscripten_bind_btConvexShape_setMargin_1=b.asm.Yb).apply(null,arguments)},oe=b._emscripten_bind_btConvexShape_getMargin_0=function(){return(oe=b._emscripten_bind_btConvexShape_getMargin_0=b.asm.Zb).apply(null,arguments)},pe=b._emscripten_bind_btConvexShape___destroy___0=function(){return(pe=b._emscripten_bind_btConvexShape___destroy___0=
  b.asm._b).apply(null,arguments)},qe=b._emscripten_bind_btCapsuleShape_btCapsuleShape_2=function(){return(qe=b._emscripten_bind_btCapsuleShape_btCapsuleShape_2=b.asm.$b).apply(null,arguments)},re=b._emscripten_bind_btCapsuleShape_setMargin_1=function(){return(re=b._emscripten_bind_btCapsuleShape_setMargin_1=b.asm.ac).apply(null,arguments)},se=b._emscripten_bind_btCapsuleShape_getMargin_0=function(){return(se=b._emscripten_bind_btCapsuleShape_getMargin_0=b.asm.bc).apply(null,arguments)},te=b._emscripten_bind_btCapsuleShape_getUpAxis_0=
  function(){return(te=b._emscripten_bind_btCapsuleShape_getUpAxis_0=b.asm.cc).apply(null,arguments)},ue=b._emscripten_bind_btCapsuleShape_getRadius_0=function(){return(ue=b._emscripten_bind_btCapsuleShape_getRadius_0=b.asm.dc).apply(null,arguments)},ve=b._emscripten_bind_btCapsuleShape_getHalfHeight_0=function(){return(ve=b._emscripten_bind_btCapsuleShape_getHalfHeight_0=b.asm.ec).apply(null,arguments)},we=b._emscripten_bind_btCapsuleShape_setLocalScaling_1=function(){return(we=b._emscripten_bind_btCapsuleShape_setLocalScaling_1=
  b.asm.fc).apply(null,arguments)},xe=b._emscripten_bind_btCapsuleShape_getLocalScaling_0=function(){return(xe=b._emscripten_bind_btCapsuleShape_getLocalScaling_0=b.asm.gc).apply(null,arguments)},ye=b._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=function(){return(ye=b._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=b.asm.hc).apply(null,arguments)},ze=b._emscripten_bind_btCapsuleShape___destroy___0=function(){return(ze=b._emscripten_bind_btCapsuleShape___destroy___0=b.asm.ic).apply(null,
  arguments)},Ae=b._emscripten_bind_btCylinderShape_btCylinderShape_1=function(){return(Ae=b._emscripten_bind_btCylinderShape_btCylinderShape_1=b.asm.jc).apply(null,arguments)},Be=b._emscripten_bind_btCylinderShape_setMargin_1=function(){return(Be=b._emscripten_bind_btCylinderShape_setMargin_1=b.asm.kc).apply(null,arguments)},Ce=b._emscripten_bind_btCylinderShape_getMargin_0=function(){return(Ce=b._emscripten_bind_btCylinderShape_getMargin_0=b.asm.lc).apply(null,arguments)},De=b._emscripten_bind_btCylinderShape_setLocalScaling_1=
  function(){return(De=b._emscripten_bind_btCylinderShape_setLocalScaling_1=b.asm.mc).apply(null,arguments)},Ee=b._emscripten_bind_btCylinderShape_getLocalScaling_0=function(){return(Ee=b._emscripten_bind_btCylinderShape_getLocalScaling_0=b.asm.nc).apply(null,arguments)},Fe=b._emscripten_bind_btCylinderShape_calculateLocalInertia_2=function(){return(Fe=b._emscripten_bind_btCylinderShape_calculateLocalInertia_2=b.asm.oc).apply(null,arguments)},Ge=b._emscripten_bind_btCylinderShape___destroy___0=function(){return(Ge=
  b._emscripten_bind_btCylinderShape___destroy___0=b.asm.pc).apply(null,arguments)},He=b._emscripten_bind_btConeShape_btConeShape_2=function(){return(He=b._emscripten_bind_btConeShape_btConeShape_2=b.asm.qc).apply(null,arguments)},Ie=b._emscripten_bind_btConeShape_setLocalScaling_1=function(){return(Ie=b._emscripten_bind_btConeShape_setLocalScaling_1=b.asm.rc).apply(null,arguments)},Je=b._emscripten_bind_btConeShape_getLocalScaling_0=function(){return(Je=b._emscripten_bind_btConeShape_getLocalScaling_0=
  b.asm.sc).apply(null,arguments)},Ke=b._emscripten_bind_btConeShape_calculateLocalInertia_2=function(){return(Ke=b._emscripten_bind_btConeShape_calculateLocalInertia_2=b.asm.tc).apply(null,arguments)},Le=b._emscripten_bind_btConeShape___destroy___0=function(){return(Le=b._emscripten_bind_btConeShape___destroy___0=b.asm.uc).apply(null,arguments)},Me=b._emscripten_bind_btStridingMeshInterface_setScaling_1=function(){return(Me=b._emscripten_bind_btStridingMeshInterface_setScaling_1=b.asm.vc).apply(null,
  arguments)},Ne=b._emscripten_bind_btStridingMeshInterface___destroy___0=function(){return(Ne=b._emscripten_bind_btStridingMeshInterface___destroy___0=b.asm.wc).apply(null,arguments)},Oe=b._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=function(){return(Oe=b._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=b.asm.xc).apply(null,arguments)},Pe=b._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=function(){return(Pe=b._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=b.asm.yc).apply(null,
  arguments)},Qe=b._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=function(){return(Qe=b._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=b.asm.zc).apply(null,arguments)},Re=b._emscripten_bind_btTriangleMeshShape___destroy___0=function(){return(Re=b._emscripten_bind_btTriangleMeshShape___destroy___0=b.asm.Ac).apply(null,arguments)},Se=b._emscripten_bind_btPrimitiveManagerBase_is_trimesh_0=function(){return(Se=b._emscripten_bind_btPrimitiveManagerBase_is_trimesh_0=b.asm.Bc).apply(null,
  arguments)},Te=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_count_0=function(){return(Te=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_count_0=b.asm.Cc).apply(null,arguments)},Ue=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_box_2=function(){return(Ue=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_box_2=b.asm.Dc).apply(null,arguments)},Ve=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_triangle_2=function(){return(Ve=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_triangle_2=
  b.asm.Ec).apply(null,arguments)},We=b._emscripten_bind_btPrimitiveManagerBase___destroy___0=function(){return(We=b._emscripten_bind_btPrimitiveManagerBase___destroy___0=b.asm.Fc).apply(null,arguments)},Xe=b._emscripten_bind_btGImpactShapeInterface_updateBound_0=function(){return(Xe=b._emscripten_bind_btGImpactShapeInterface_updateBound_0=b.asm.Gc).apply(null,arguments)},Ye=b._emscripten_bind_btGImpactShapeInterface_postUpdate_0=function(){return(Ye=b._emscripten_bind_btGImpactShapeInterface_postUpdate_0=
  b.asm.Hc).apply(null,arguments)},Ze=b._emscripten_bind_btGImpactShapeInterface_getShapeType_0=function(){return(Ze=b._emscripten_bind_btGImpactShapeInterface_getShapeType_0=b.asm.Ic).apply(null,arguments)},$e=b._emscripten_bind_btGImpactShapeInterface_getName_0=function(){return($e=b._emscripten_bind_btGImpactShapeInterface_getName_0=b.asm.Jc).apply(null,arguments)},af=b._emscripten_bind_btGImpactShapeInterface_getGImpactShapeType_0=function(){return(af=b._emscripten_bind_btGImpactShapeInterface_getGImpactShapeType_0=
  b.asm.Kc).apply(null,arguments)},bf=b._emscripten_bind_btGImpactShapeInterface_getPrimitiveManager_0=function(){return(bf=b._emscripten_bind_btGImpactShapeInterface_getPrimitiveManager_0=b.asm.Lc).apply(null,arguments)},cf=b._emscripten_bind_btGImpactShapeInterface_getNumChildShapes_0=function(){return(cf=b._emscripten_bind_btGImpactShapeInterface_getNumChildShapes_0=b.asm.Mc).apply(null,arguments)},df=b._emscripten_bind_btGImpactShapeInterface_childrenHasTransform_0=function(){return(df=b._emscripten_bind_btGImpactShapeInterface_childrenHasTransform_0=
  b.asm.Nc).apply(null,arguments)},ef=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTriangles_0=function(){return(ef=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTriangles_0=b.asm.Oc).apply(null,arguments)},ff=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTetrahedrons_0=function(){return(ff=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTetrahedrons_0=b.asm.Pc).apply(null,arguments)},gf=b._emscripten_bind_btGImpactShapeInterface_getBulletTriangle_2=function(){return(gf=
  b._emscripten_bind_btGImpactShapeInterface_getBulletTriangle_2=b.asm.Qc).apply(null,arguments)},hf=b._emscripten_bind_btGImpactShapeInterface_getBulletTetrahedron_2=function(){return(hf=b._emscripten_bind_btGImpactShapeInterface_getBulletTetrahedron_2=b.asm.Rc).apply(null,arguments)},jf=b._emscripten_bind_btGImpactShapeInterface_getChildShape_1=function(){return(jf=b._emscripten_bind_btGImpactShapeInterface_getChildShape_1=b.asm.Sc).apply(null,arguments)},kf=b._emscripten_bind_btGImpactShapeInterface_getChildTransform_1=
  function(){return(kf=b._emscripten_bind_btGImpactShapeInterface_getChildTransform_1=b.asm.Tc).apply(null,arguments)},lf=b._emscripten_bind_btGImpactShapeInterface_setChildTransform_2=function(){return(lf=b._emscripten_bind_btGImpactShapeInterface_setChildTransform_2=b.asm.Uc).apply(null,arguments)},mf=b._emscripten_bind_btGImpactShapeInterface_setLocalScaling_1=function(){return(mf=b._emscripten_bind_btGImpactShapeInterface_setLocalScaling_1=b.asm.Vc).apply(null,arguments)},nf=b._emscripten_bind_btGImpactShapeInterface_getLocalScaling_0=
  function(){return(nf=b._emscripten_bind_btGImpactShapeInterface_getLocalScaling_0=b.asm.Wc).apply(null,arguments)},of=b._emscripten_bind_btGImpactShapeInterface_calculateLocalInertia_2=function(){return(of=b._emscripten_bind_btGImpactShapeInterface_calculateLocalInertia_2=b.asm.Xc).apply(null,arguments)},pf=b._emscripten_bind_btGImpactShapeInterface___destroy___0=function(){return(pf=b._emscripten_bind_btGImpactShapeInterface___destroy___0=b.asm.Yc).apply(null,arguments)},qf=b._emscripten_bind_btActivatingCollisionAlgorithm___destroy___0=
  function(){return(qf=b._emscripten_bind_btActivatingCollisionAlgorithm___destroy___0=b.asm.Zc).apply(null,arguments)},rf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=function(){return(rf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=b.asm._c).apply(null,arguments)},sf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=function(){return(sf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=
  b.asm.$c).apply(null,arguments)},tf=b._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=function(){return(tf=b._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=b.asm.ad).apply(null,arguments)},uf=b._emscripten_bind_btDispatcher_getNumManifolds_0=function(){return(uf=b._emscripten_bind_btDispatcher_getNumManifolds_0=b.asm.bd).apply(null,arguments)},vf=b._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=function(){return(vf=b._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=
  b.asm.cd).apply(null,arguments)},wf=b._emscripten_bind_btDispatcher___destroy___0=function(){return(wf=b._emscripten_bind_btDispatcher___destroy___0=b.asm.dd).apply(null,arguments)},xf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=function(){return(xf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=b.asm.ed).apply(null,arguments)},yf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=function(){return(yf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=
  b.asm.fd).apply(null,arguments)},zf=b._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=function(){return(zf=b._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=b.asm.gd).apply(null,arguments)},Af=b._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=function(){return(Af=b._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=b.asm.hd).apply(null,arguments)},Bf=b._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=function(){return(Bf=b._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=
  b.asm.id).apply(null,arguments)},Cf=b._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=function(){return(Cf=b._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=b.asm.jd).apply(null,arguments)},Df=b._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=function(){return(Df=b._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=b.asm.kd).apply(null,arguments)},Ef=b._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=function(){return(Ef=b._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=
  b.asm.ld).apply(null,arguments)},Ff=b._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=function(){return(Ff=b._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=b.asm.md).apply(null,arguments)},Gf=b._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=function(){return(Gf=b._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=b.asm.nd).apply(null,arguments)},Hf=b._emscripten_bind_btGeneric6DofConstraint_getParam_2=function(){return(Hf=
  b._emscripten_bind_btGeneric6DofConstraint_getParam_2=b.asm.od).apply(null,arguments)},If=b._emscripten_bind_btGeneric6DofConstraint_setParam_3=function(){return(If=b._emscripten_bind_btGeneric6DofConstraint_setParam_3=b.asm.pd).apply(null,arguments)},Jf=b._emscripten_bind_btGeneric6DofConstraint___destroy___0=function(){return(Jf=b._emscripten_bind_btGeneric6DofConstraint___destroy___0=b.asm.qd).apply(null,arguments)},Kf=b._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=function(){return(Kf=
  b._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=b.asm.rd).apply(null,arguments)},Lf=b._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=function(){return(Lf=b._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=b.asm.sd).apply(null,arguments)},Mf=b._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=function(){return(Mf=b._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=b.asm.td).apply(null,arguments)},Nf=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=
  function(){return(Nf=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=b.asm.ud).apply(null,arguments)},Of=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=function(){return(Of=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=b.asm.vd).apply(null,arguments)},Pf=b._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=function(){return(Pf=b._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=b.asm.wd).apply(null,arguments)},Qf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=
  function(){return(Qf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=b.asm.xd).apply(null,arguments)},Rf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=function(){return(Rf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=b.asm.yd).apply(null,arguments)},Sf=b._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=function(){return(Sf=b._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=b.asm.zd).apply(null,arguments)},Tf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=
  function(){return(Tf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=b.asm.Ad).apply(null,arguments)},Uf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=function(){return(Uf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=b.asm.Bd).apply(null,arguments)},Vf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=function(){return(Vf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=b.asm.Cd).apply(null,arguments)},Wf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=
  function(){return(Wf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=b.asm.Dd).apply(null,arguments)},Xf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=function(){return(Xf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=b.asm.Ed).apply(null,arguments)},Yf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=function(){return(Yf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=b.asm.Fd).apply(null,
  arguments)},Zf=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=function(){return(Zf=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=b.asm.Gd).apply(null,arguments)},$f=b._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=function(){return($f=b._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=b.asm.Hd).apply(null,arguments)},ag=b._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=function(){return(ag=b._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=b.asm.Id).apply(null,
  arguments)},bg=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=function(){return(bg=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=b.asm.Jd).apply(null,arguments)},cg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=function(){return(cg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=b.asm.Kd).apply(null,arguments)},dg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=function(){return(dg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=
  b.asm.Ld).apply(null,arguments)},eg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=function(){return(eg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=b.asm.Md).apply(null,arguments)},fg=b._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=function(){return(fg=b._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=b.asm.Nd).apply(null,arguments)},gg=b._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=function(){return(gg=b._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=
  b.asm.Od).apply(null,arguments)},hg=b._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=function(){return(hg=b._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=b.asm.Pd).apply(null,arguments)},ig=b._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=function(){return(ig=b._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=b.asm.Qd).apply(null,arguments)},jg=b._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=function(){return(jg=b._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=
  b.asm.Rd).apply(null,arguments)},kg=b._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=function(){return(kg=b._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=b.asm.Sd).apply(null,arguments)},lg=b._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=function(){return(lg=b._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=b.asm.Td).apply(null,arguments)},mg=b._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=function(){return(mg=b._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=
  b.asm.Ud).apply(null,arguments)},ng=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=function(){return(ng=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=b.asm.Vd).apply(null,arguments)},og=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=function(){return(og=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=b.asm.Wd).apply(null,arguments)},pg=b._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=function(){return(pg=b._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=
  b.asm.Xd).apply(null,arguments)},qg=b._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=function(){return(qg=b._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=b.asm.Yd).apply(null,arguments)},rg=b._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=function(){return(rg=b._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=b.asm.Zd).apply(null,arguments)},sg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_1=function(){return(sg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_1=
  b.asm._d).apply(null,arguments)},tg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_2=function(){return(tg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_2=b.asm.$d).apply(null,arguments)},ug=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_3=function(){return(ug=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_3=b.asm.ae).apply(null,arguments)},vg=b._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=function(){return(vg=
  b._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=b.asm.be).apply(null,arguments)},wg=b._emscripten_bind_btVehicleRaycaster_castRay_3=function(){return(wg=b._emscripten_bind_btVehicleRaycaster_castRay_3=b.asm.ce).apply(null,arguments)},xg=b._emscripten_bind_btVehicleRaycaster___destroy___0=function(){return(xg=b._emscripten_bind_btVehicleRaycaster___destroy___0=b.asm.de).apply(null,arguments)},yg=b._emscripten_bind_btActionInterface_updateAction_2=function(){return(yg=b._emscripten_bind_btActionInterface_updateAction_2=
  b.asm.ee).apply(null,arguments)},zg=b._emscripten_bind_btActionInterface___destroy___0=function(){return(zg=b._emscripten_bind_btActionInterface___destroy___0=b.asm.fe).apply(null,arguments)},Ag=b._emscripten_bind_btGhostObject_btGhostObject_0=function(){return(Ag=b._emscripten_bind_btGhostObject_btGhostObject_0=b.asm.ge).apply(null,arguments)},Bg=b._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=function(){return(Bg=b._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=b.asm.he).apply(null,
  arguments)},Cg=b._emscripten_bind_btGhostObject_getOverlappingObject_1=function(){return(Cg=b._emscripten_bind_btGhostObject_getOverlappingObject_1=b.asm.ie).apply(null,arguments)},Dg=b._emscripten_bind_btGhostObject_setAnisotropicFriction_2=function(){return(Dg=b._emscripten_bind_btGhostObject_setAnisotropicFriction_2=b.asm.je).apply(null,arguments)},Eg=b._emscripten_bind_btGhostObject_getCollisionShape_0=function(){return(Eg=b._emscripten_bind_btGhostObject_getCollisionShape_0=b.asm.ke).apply(null,
  arguments)},Fg=b._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=function(){return(Fg=b._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=b.asm.le).apply(null,arguments)},Gg=b._emscripten_bind_btGhostObject_setActivationState_1=function(){return(Gg=b._emscripten_bind_btGhostObject_setActivationState_1=b.asm.me).apply(null,arguments)},Hg=b._emscripten_bind_btGhostObject_forceActivationState_1=function(){return(Hg=b._emscripten_bind_btGhostObject_forceActivationState_1=b.asm.ne).apply(null,
  arguments)},Ig=b._emscripten_bind_btGhostObject_activate_0=function(){return(Ig=b._emscripten_bind_btGhostObject_activate_0=b.asm.oe).apply(null,arguments)},Jg=b._emscripten_bind_btGhostObject_activate_1=function(){return(Jg=b._emscripten_bind_btGhostObject_activate_1=b.asm.pe).apply(null,arguments)},Kg=b._emscripten_bind_btGhostObject_isActive_0=function(){return(Kg=b._emscripten_bind_btGhostObject_isActive_0=b.asm.qe).apply(null,arguments)},Lg=b._emscripten_bind_btGhostObject_isKinematicObject_0=
  function(){return(Lg=b._emscripten_bind_btGhostObject_isKinematicObject_0=b.asm.re).apply(null,arguments)},Mg=b._emscripten_bind_btGhostObject_isStaticObject_0=function(){return(Mg=b._emscripten_bind_btGhostObject_isStaticObject_0=b.asm.se).apply(null,arguments)},Ng=b._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=function(){return(Ng=b._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=b.asm.te).apply(null,arguments)},Og=b._emscripten_bind_btGhostObject_getRestitution_0=function(){return(Og=
  b._emscripten_bind_btGhostObject_getRestitution_0=b.asm.ue).apply(null,arguments)},Pg=b._emscripten_bind_btGhostObject_getFriction_0=function(){return(Pg=b._emscripten_bind_btGhostObject_getFriction_0=b.asm.ve).apply(null,arguments)},Qg=b._emscripten_bind_btGhostObject_getRollingFriction_0=function(){return(Qg=b._emscripten_bind_btGhostObject_getRollingFriction_0=b.asm.we).apply(null,arguments)},Rg=b._emscripten_bind_btGhostObject_setRestitution_1=function(){return(Rg=b._emscripten_bind_btGhostObject_setRestitution_1=
  b.asm.xe).apply(null,arguments)},Sg=b._emscripten_bind_btGhostObject_setFriction_1=function(){return(Sg=b._emscripten_bind_btGhostObject_setFriction_1=b.asm.ye).apply(null,arguments)},Tg=b._emscripten_bind_btGhostObject_setRollingFriction_1=function(){return(Tg=b._emscripten_bind_btGhostObject_setRollingFriction_1=b.asm.ze).apply(null,arguments)},Ug=b._emscripten_bind_btGhostObject_getWorldTransform_0=function(){return(Ug=b._emscripten_bind_btGhostObject_getWorldTransform_0=b.asm.Ae).apply(null,arguments)},
  Vg=b._emscripten_bind_btGhostObject_getCollisionFlags_0=function(){return(Vg=b._emscripten_bind_btGhostObject_getCollisionFlags_0=b.asm.Be).apply(null,arguments)},Wg=b._emscripten_bind_btGhostObject_setCollisionFlags_1=function(){return(Wg=b._emscripten_bind_btGhostObject_setCollisionFlags_1=b.asm.Ce).apply(null,arguments)},Xg=b._emscripten_bind_btGhostObject_setWorldTransform_1=function(){return(Xg=b._emscripten_bind_btGhostObject_setWorldTransform_1=b.asm.De).apply(null,arguments)},Yg=b._emscripten_bind_btGhostObject_setCollisionShape_1=
  function(){return(Yg=b._emscripten_bind_btGhostObject_setCollisionShape_1=b.asm.Ee).apply(null,arguments)},Zg=b._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=function(){return(Zg=b._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=b.asm.Fe).apply(null,arguments)},$g=b._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=function(){return($g=b._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=b.asm.Ge).apply(null,arguments)},ah=b._emscripten_bind_btGhostObject_getUserIndex_0=
  function(){return(ah=b._emscripten_bind_btGhostObject_getUserIndex_0=b.asm.He).apply(null,arguments)},bh=b._emscripten_bind_btGhostObject_setUserIndex_1=function(){return(bh=b._emscripten_bind_btGhostObject_setUserIndex_1=b.asm.Ie).apply(null,arguments)},ch=b._emscripten_bind_btGhostObject_getUserPointer_0=function(){return(ch=b._emscripten_bind_btGhostObject_getUserPointer_0=b.asm.Je).apply(null,arguments)},dh=b._emscripten_bind_btGhostObject_setUserPointer_1=function(){return(dh=b._emscripten_bind_btGhostObject_setUserPointer_1=
  b.asm.Ke).apply(null,arguments)},eh=b._emscripten_bind_btGhostObject_getBroadphaseHandle_0=function(){return(eh=b._emscripten_bind_btGhostObject_getBroadphaseHandle_0=b.asm.Le).apply(null,arguments)},fh=b._emscripten_bind_btGhostObject___destroy___0=function(){return(fh=b._emscripten_bind_btGhostObject___destroy___0=b.asm.Me).apply(null,arguments)},gh=b._emscripten_bind_btSoftBodySolver___destroy___0=function(){return(gh=b._emscripten_bind_btSoftBodySolver___destroy___0=b.asm.Ne).apply(null,arguments)},
  hh=b._emscripten_bind_VoidPtr___destroy___0=function(){return(hh=b._emscripten_bind_VoidPtr___destroy___0=b.asm.Oe).apply(null,arguments)},ih=b._emscripten_bind_DebugDrawer_DebugDrawer_0=function(){return(ih=b._emscripten_bind_DebugDrawer_DebugDrawer_0=b.asm.Pe).apply(null,arguments)},jh=b._emscripten_bind_DebugDrawer_drawLine_3=function(){return(jh=b._emscripten_bind_DebugDrawer_drawLine_3=b.asm.Qe).apply(null,arguments)},kh=b._emscripten_bind_DebugDrawer_drawContactPoint_5=function(){return(kh=
  b._emscripten_bind_DebugDrawer_drawContactPoint_5=b.asm.Re).apply(null,arguments)},lh=b._emscripten_bind_DebugDrawer_reportErrorWarning_1=function(){return(lh=b._emscripten_bind_DebugDrawer_reportErrorWarning_1=b.asm.Se).apply(null,arguments)},mh=b._emscripten_bind_DebugDrawer_draw3dText_2=function(){return(mh=b._emscripten_bind_DebugDrawer_draw3dText_2=b.asm.Te).apply(null,arguments)},nh=b._emscripten_bind_DebugDrawer_setDebugMode_1=function(){return(nh=b._emscripten_bind_DebugDrawer_setDebugMode_1=
  b.asm.Ue).apply(null,arguments)},oh=b._emscripten_bind_DebugDrawer_getDebugMode_0=function(){return(oh=b._emscripten_bind_DebugDrawer_getDebugMode_0=b.asm.Ve).apply(null,arguments)},ph=b._emscripten_bind_DebugDrawer___destroy___0=function(){return(ph=b._emscripten_bind_DebugDrawer___destroy___0=b.asm.We).apply(null,arguments)},qh=b._emscripten_bind_btVector4_btVector4_0=function(){return(qh=b._emscripten_bind_btVector4_btVector4_0=b.asm.Xe).apply(null,arguments)},rh=b._emscripten_bind_btVector4_btVector4_4=
  function(){return(rh=b._emscripten_bind_btVector4_btVector4_4=b.asm.Ye).apply(null,arguments)},sh=b._emscripten_bind_btVector4_w_0=function(){return(sh=b._emscripten_bind_btVector4_w_0=b.asm.Ze).apply(null,arguments)},th=b._emscripten_bind_btVector4_setValue_4=function(){return(th=b._emscripten_bind_btVector4_setValue_4=b.asm._e).apply(null,arguments)},uh=b._emscripten_bind_btVector4_length_0=function(){return(uh=b._emscripten_bind_btVector4_length_0=b.asm.$e).apply(null,arguments)},vh=b._emscripten_bind_btVector4_x_0=
  function(){return(vh=b._emscripten_bind_btVector4_x_0=b.asm.af).apply(null,arguments)},wh=b._emscripten_bind_btVector4_y_0=function(){return(wh=b._emscripten_bind_btVector4_y_0=b.asm.bf).apply(null,arguments)},xh=b._emscripten_bind_btVector4_z_0=function(){return(xh=b._emscripten_bind_btVector4_z_0=b.asm.cf).apply(null,arguments)},yh=b._emscripten_bind_btVector4_setX_1=function(){return(yh=b._emscripten_bind_btVector4_setX_1=b.asm.df).apply(null,arguments)},zh=b._emscripten_bind_btVector4_setY_1=
  function(){return(zh=b._emscripten_bind_btVector4_setY_1=b.asm.ef).apply(null,arguments)},Ah=b._emscripten_bind_btVector4_setZ_1=function(){return(Ah=b._emscripten_bind_btVector4_setZ_1=b.asm.ff).apply(null,arguments)},Bh=b._emscripten_bind_btVector4_normalize_0=function(){return(Bh=b._emscripten_bind_btVector4_normalize_0=b.asm.gf).apply(null,arguments)},Ch=b._emscripten_bind_btVector4_rotate_2=function(){return(Ch=b._emscripten_bind_btVector4_rotate_2=b.asm.hf).apply(null,arguments)},Dh=b._emscripten_bind_btVector4_dot_1=
  function(){return(Dh=b._emscripten_bind_btVector4_dot_1=b.asm.jf).apply(null,arguments)},Eh=b._emscripten_bind_btVector4_op_mul_1=function(){return(Eh=b._emscripten_bind_btVector4_op_mul_1=b.asm.kf).apply(null,arguments)},Fh=b._emscripten_bind_btVector4_op_add_1=function(){return(Fh=b._emscripten_bind_btVector4_op_add_1=b.asm.lf).apply(null,arguments)},Gh=b._emscripten_bind_btVector4_op_sub_1=function(){return(Gh=b._emscripten_bind_btVector4_op_sub_1=b.asm.mf).apply(null,arguments)},Hh=b._emscripten_bind_btVector4___destroy___0=
  function(){return(Hh=b._emscripten_bind_btVector4___destroy___0=b.asm.nf).apply(null,arguments)},Ih=b._emscripten_bind_btQuaternion_btQuaternion_4=function(){return(Ih=b._emscripten_bind_btQuaternion_btQuaternion_4=b.asm.of).apply(null,arguments)},Jh=b._emscripten_bind_btQuaternion_setValue_4=function(){return(Jh=b._emscripten_bind_btQuaternion_setValue_4=b.asm.pf).apply(null,arguments)},Kh=b._emscripten_bind_btQuaternion_setEulerZYX_3=function(){return(Kh=b._emscripten_bind_btQuaternion_setEulerZYX_3=
  b.asm.qf).apply(null,arguments)},Lh=b._emscripten_bind_btQuaternion_setRotation_2=function(){return(Lh=b._emscripten_bind_btQuaternion_setRotation_2=b.asm.rf).apply(null,arguments)},Mh=b._emscripten_bind_btQuaternion_normalize_0=function(){return(Mh=b._emscripten_bind_btQuaternion_normalize_0=b.asm.sf).apply(null,arguments)},Nh=b._emscripten_bind_btQuaternion_length2_0=function(){return(Nh=b._emscripten_bind_btQuaternion_length2_0=b.asm.tf).apply(null,arguments)},Oh=b._emscripten_bind_btQuaternion_length_0=
  function(){return(Oh=b._emscripten_bind_btQuaternion_length_0=b.asm.uf).apply(null,arguments)},Ph=b._emscripten_bind_btQuaternion_dot_1=function(){return(Ph=b._emscripten_bind_btQuaternion_dot_1=b.asm.vf).apply(null,arguments)},Qh=b._emscripten_bind_btQuaternion_normalized_0=function(){return(Qh=b._emscripten_bind_btQuaternion_normalized_0=b.asm.wf).apply(null,arguments)},Rh=b._emscripten_bind_btQuaternion_getAxis_0=function(){return(Rh=b._emscripten_bind_btQuaternion_getAxis_0=b.asm.xf).apply(null,
  arguments)},Sh=b._emscripten_bind_btQuaternion_inverse_0=function(){return(Sh=b._emscripten_bind_btQuaternion_inverse_0=b.asm.yf).apply(null,arguments)},Th=b._emscripten_bind_btQuaternion_getAngle_0=function(){return(Th=b._emscripten_bind_btQuaternion_getAngle_0=b.asm.zf).apply(null,arguments)},Uh=b._emscripten_bind_btQuaternion_getAngleShortestPath_0=function(){return(Uh=b._emscripten_bind_btQuaternion_getAngleShortestPath_0=b.asm.Af).apply(null,arguments)},Vh=b._emscripten_bind_btQuaternion_angle_1=
  function(){return(Vh=b._emscripten_bind_btQuaternion_angle_1=b.asm.Bf).apply(null,arguments)},Wh=b._emscripten_bind_btQuaternion_angleShortestPath_1=function(){return(Wh=b._emscripten_bind_btQuaternion_angleShortestPath_1=b.asm.Cf).apply(null,arguments)},Xh=b._emscripten_bind_btQuaternion_op_add_1=function(){return(Xh=b._emscripten_bind_btQuaternion_op_add_1=b.asm.Df).apply(null,arguments)},Yh=b._emscripten_bind_btQuaternion_op_sub_1=function(){return(Yh=b._emscripten_bind_btQuaternion_op_sub_1=b.asm.Ef).apply(null,
  arguments)},Zh=b._emscripten_bind_btQuaternion_op_mul_1=function(){return(Zh=b._emscripten_bind_btQuaternion_op_mul_1=b.asm.Ff).apply(null,arguments)},$h=b._emscripten_bind_btQuaternion_op_mulq_1=function(){return($h=b._emscripten_bind_btQuaternion_op_mulq_1=b.asm.Gf).apply(null,arguments)},ai=b._emscripten_bind_btQuaternion_op_div_1=function(){return(ai=b._emscripten_bind_btQuaternion_op_div_1=b.asm.Hf).apply(null,arguments)},bi=b._emscripten_bind_btQuaternion_x_0=function(){return(bi=b._emscripten_bind_btQuaternion_x_0=
  b.asm.If).apply(null,arguments)},ci=b._emscripten_bind_btQuaternion_y_0=function(){return(ci=b._emscripten_bind_btQuaternion_y_0=b.asm.Jf).apply(null,arguments)},di=b._emscripten_bind_btQuaternion_z_0=function(){return(di=b._emscripten_bind_btQuaternion_z_0=b.asm.Kf).apply(null,arguments)},ei=b._emscripten_bind_btQuaternion_w_0=function(){return(ei=b._emscripten_bind_btQuaternion_w_0=b.asm.Lf).apply(null,arguments)},fi=b._emscripten_bind_btQuaternion_setX_1=function(){return(fi=b._emscripten_bind_btQuaternion_setX_1=
  b.asm.Mf).apply(null,arguments)},gi=b._emscripten_bind_btQuaternion_setY_1=function(){return(gi=b._emscripten_bind_btQuaternion_setY_1=b.asm.Nf).apply(null,arguments)},hi=b._emscripten_bind_btQuaternion_setZ_1=function(){return(hi=b._emscripten_bind_btQuaternion_setZ_1=b.asm.Of).apply(null,arguments)},ii=b._emscripten_bind_btQuaternion_setW_1=function(){return(ii=b._emscripten_bind_btQuaternion_setW_1=b.asm.Pf).apply(null,arguments)},ji=b._emscripten_bind_btQuaternion___destroy___0=function(){return(ji=
  b._emscripten_bind_btQuaternion___destroy___0=b.asm.Qf).apply(null,arguments)},ki=b._emscripten_bind_btMatrix3x3_setEulerZYX_3=function(){return(ki=b._emscripten_bind_btMatrix3x3_setEulerZYX_3=b.asm.Rf).apply(null,arguments)},li=b._emscripten_bind_btMatrix3x3_getRotation_1=function(){return(li=b._emscripten_bind_btMatrix3x3_getRotation_1=b.asm.Sf).apply(null,arguments)},mi=b._emscripten_bind_btMatrix3x3_getRow_1=function(){return(mi=b._emscripten_bind_btMatrix3x3_getRow_1=b.asm.Tf).apply(null,arguments)},
  ni=b._emscripten_bind_btMatrix3x3___destroy___0=function(){return(ni=b._emscripten_bind_btMatrix3x3___destroy___0=b.asm.Uf).apply(null,arguments)},oi=b._emscripten_bind_btTransform_btTransform_0=function(){return(oi=b._emscripten_bind_btTransform_btTransform_0=b.asm.Vf).apply(null,arguments)},pi=b._emscripten_bind_btTransform_btTransform_2=function(){return(pi=b._emscripten_bind_btTransform_btTransform_2=b.asm.Wf).apply(null,arguments)},qi=b._emscripten_bind_btTransform_setIdentity_0=function(){return(qi=
  b._emscripten_bind_btTransform_setIdentity_0=b.asm.Xf).apply(null,arguments)},ri=b._emscripten_bind_btTransform_setOrigin_1=function(){return(ri=b._emscripten_bind_btTransform_setOrigin_1=b.asm.Yf).apply(null,arguments)},si=b._emscripten_bind_btTransform_setRotation_1=function(){return(si=b._emscripten_bind_btTransform_setRotation_1=b.asm.Zf).apply(null,arguments)},ti=b._emscripten_bind_btTransform_getOrigin_0=function(){return(ti=b._emscripten_bind_btTransform_getOrigin_0=b.asm._f).apply(null,arguments)},
  ui=b._emscripten_bind_btTransform_getRotation_0=function(){return(ui=b._emscripten_bind_btTransform_getRotation_0=b.asm.$f).apply(null,arguments)},vi=b._emscripten_bind_btTransform_getBasis_0=function(){return(vi=b._emscripten_bind_btTransform_getBasis_0=b.asm.ag).apply(null,arguments)},wi=b._emscripten_bind_btTransform_setFromOpenGLMatrix_1=function(){return(wi=b._emscripten_bind_btTransform_setFromOpenGLMatrix_1=b.asm.bg).apply(null,arguments)},xi=b._emscripten_bind_btTransform_inverse_0=function(){return(xi=
  b._emscripten_bind_btTransform_inverse_0=b.asm.cg).apply(null,arguments)},yi=b._emscripten_bind_btTransform_op_mul_1=function(){return(yi=b._emscripten_bind_btTransform_op_mul_1=b.asm.dg).apply(null,arguments)},zi=b._emscripten_bind_btTransform___destroy___0=function(){return(zi=b._emscripten_bind_btTransform___destroy___0=b.asm.eg).apply(null,arguments)},Ai=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=function(){return(Ai=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=
  b.asm.fg).apply(null,arguments)},Bi=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=function(){return(Bi=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=b.asm.gg).apply(null,arguments)},Ci=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=function(){return(Ci=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=b.asm.hg).apply(null,arguments)},Di=b._emscripten_bind_btDefaultMotionState_getWorldTransform_1=function(){return(Di=b._emscripten_bind_btDefaultMotionState_getWorldTransform_1=
  b.asm.ig).apply(null,arguments)},Ei=b._emscripten_bind_btDefaultMotionState_setWorldTransform_1=function(){return(Ei=b._emscripten_bind_btDefaultMotionState_setWorldTransform_1=b.asm.jg).apply(null,arguments)},Fi=b._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=function(){return(Fi=b._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=b.asm.kg).apply(null,arguments)},Gi=b._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=function(){return(Gi=b._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=
  b.asm.lg).apply(null,arguments)},Hi=b._emscripten_bind_btDefaultMotionState___destroy___0=function(){return(Hi=b._emscripten_bind_btDefaultMotionState___destroy___0=b.asm.mg).apply(null,arguments)},Ii=b._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=function(){return(Ii=b._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=b.asm.ng).apply(null,arguments)},Ji=b._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=function(){return(Ji=b._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=
  b.asm.og).apply(null,arguments)},Ki=b._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=function(){return(Ki=b._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=b.asm.pg).apply(null,arguments)},Li=b._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=function(){return(Li=b._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=b.asm.qg).apply(null,arguments)},Mi=b._emscripten_bind_ClosestRayResultCallback_hasHit_0=function(){return(Mi=b._emscripten_bind_ClosestRayResultCallback_hasHit_0=
  b.asm.rg).apply(null,arguments)},Ni=b._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=function(){return(Ni=b._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=b.asm.sg).apply(null,arguments)},Oi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=function(){return(Oi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=b.asm.tg).apply(null,arguments)},Pi=b._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=function(){return(Pi=b._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=
  b.asm.ug).apply(null,arguments)},Qi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=function(){return(Qi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=b.asm.vg).apply(null,arguments)},Ri=b._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=function(){return(Ri=b._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=b.asm.wg).apply(null,arguments)},Si=b._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=function(){return(Si=b._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=
  b.asm.xg).apply(null,arguments)},Ti=b._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=function(){return(Ti=b._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=b.asm.yg).apply(null,arguments)},Ui=b._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=function(){return(Ui=b._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=b.asm.zg).apply(null,arguments)},Vi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=function(){return(Vi=
  b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=b.asm.Ag).apply(null,arguments)},Wi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=function(){return(Wi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=b.asm.Bg).apply(null,arguments)},Xi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=function(){return(Xi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=b.asm.Cg).apply(null,arguments)},
  Yi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=function(){return(Yi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=b.asm.Dg).apply(null,arguments)},Zi=b._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=function(){return(Zi=b._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=b.asm.Eg).apply(null,arguments)},$i=b._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=function(){return($i=b._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=
  b.asm.Fg).apply(null,arguments)},aj=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=function(){return(aj=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=b.asm.Gg).apply(null,arguments)},bj=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=function(){return(bj=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=b.asm.Hg).apply(null,arguments)},cj=b._emscripten_bind_ClosestRayResultCallback_get_m_flags_0=function(){return(cj=
  b._emscripten_bind_ClosestRayResultCallback_get_m_flags_0=b.asm.Ig).apply(null,arguments)},dj=b._emscripten_bind_ClosestRayResultCallback_set_m_flags_1=function(){return(dj=b._emscripten_bind_ClosestRayResultCallback_set_m_flags_1=b.asm.Jg).apply(null,arguments)},ej=b._emscripten_bind_ClosestRayResultCallback___destroy___0=function(){return(ej=b._emscripten_bind_ClosestRayResultCallback___destroy___0=b.asm.Kg).apply(null,arguments)},fj=b._emscripten_bind_btConstCollisionObjectArray_size_0=function(){return(fj=
  b._emscripten_bind_btConstCollisionObjectArray_size_0=b.asm.Lg).apply(null,arguments)},gj=b._emscripten_bind_btConstCollisionObjectArray_at_1=function(){return(gj=b._emscripten_bind_btConstCollisionObjectArray_at_1=b.asm.Mg).apply(null,arguments)},hj=b._emscripten_bind_btConstCollisionObjectArray___destroy___0=function(){return(hj=b._emscripten_bind_btConstCollisionObjectArray___destroy___0=b.asm.Ng).apply(null,arguments)},ij=b._emscripten_bind_btScalarArray_size_0=function(){return(ij=b._emscripten_bind_btScalarArray_size_0=
  b.asm.Og).apply(null,arguments)},jj=b._emscripten_bind_btScalarArray_at_1=function(){return(jj=b._emscripten_bind_btScalarArray_at_1=b.asm.Pg).apply(null,arguments)},kj=b._emscripten_bind_btScalarArray___destroy___0=function(){return(kj=b._emscripten_bind_btScalarArray___destroy___0=b.asm.Qg).apply(null,arguments)},lj=b._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=function(){return(lj=b._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=b.asm.Rg).apply(null,
  arguments)},mj=b._emscripten_bind_AllHitsRayResultCallback_hasHit_0=function(){return(mj=b._emscripten_bind_AllHitsRayResultCallback_hasHit_0=b.asm.Sg).apply(null,arguments)},nj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=function(){return(nj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=b.asm.Tg).apply(null,arguments)},oj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=function(){return(oj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=
  b.asm.Ug).apply(null,arguments)},pj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=function(){return(pj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=b.asm.Vg).apply(null,arguments)},qj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=function(){return(qj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=b.asm.Wg).apply(null,arguments)},rj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=function(){return(rj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=
  b.asm.Xg).apply(null,arguments)},sj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=function(){return(sj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=b.asm.Yg).apply(null,arguments)},tj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=function(){return(tj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=b.asm.Zg).apply(null,arguments)},uj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=function(){return(uj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=
  b.asm._g).apply(null,arguments)},vj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=function(){return(vj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=b.asm.$g).apply(null,arguments)},wj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=function(){return(wj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=b.asm.ah).apply(null,arguments)},xj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=function(){return(xj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=
  b.asm.bh).apply(null,arguments)},yj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=function(){return(yj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=b.asm.ch).apply(null,arguments)},zj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=function(){return(zj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=b.asm.dh).apply(null,arguments)},Aj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=function(){return(Aj=
  b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=b.asm.eh).apply(null,arguments)},Bj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=function(){return(Bj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=b.asm.fh).apply(null,arguments)},Cj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=function(){return(Cj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=b.asm.gh).apply(null,arguments)},
  Dj=b._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=function(){return(Dj=b._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=b.asm.hh).apply(null,arguments)},Ej=b._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=function(){return(Ej=b._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=b.asm.ih).apply(null,arguments)},Fj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=function(){return(Fj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=
  b.asm.jh).apply(null,arguments)},Gj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=function(){return(Gj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=b.asm.kh).apply(null,arguments)},Hj=b._emscripten_bind_AllHitsRayResultCallback_get_m_flags_0=function(){return(Hj=b._emscripten_bind_AllHitsRayResultCallback_get_m_flags_0=b.asm.lh).apply(null,arguments)},Ij=b._emscripten_bind_AllHitsRayResultCallback_set_m_flags_1=function(){return(Ij=b._emscripten_bind_AllHitsRayResultCallback_set_m_flags_1=
  b.asm.mh).apply(null,arguments)},Jj=b._emscripten_bind_AllHitsRayResultCallback___destroy___0=function(){return(Jj=b._emscripten_bind_AllHitsRayResultCallback___destroy___0=b.asm.nh).apply(null,arguments)},Kj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=function(){return(Kj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=b.asm.oh).apply(null,arguments)},Lj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=function(){return(Lj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=
  b.asm.ph).apply(null,arguments)},Mj=b._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=function(){return(Mj=b._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=b.asm.qh).apply(null,arguments)},Nj=b._emscripten_bind_btManifoldPoint_getDistance_0=function(){return(Nj=b._emscripten_bind_btManifoldPoint_getDistance_0=b.asm.rh).apply(null,arguments)},Oj=b._emscripten_bind_btManifoldPoint_get_m_localPointA_0=function(){return(Oj=b._emscripten_bind_btManifoldPoint_get_m_localPointA_0=b.asm.sh).apply(null,
  arguments)},Pj=b._emscripten_bind_btManifoldPoint_set_m_localPointA_1=function(){return(Pj=b._emscripten_bind_btManifoldPoint_set_m_localPointA_1=b.asm.th).apply(null,arguments)},Qj=b._emscripten_bind_btManifoldPoint_get_m_localPointB_0=function(){return(Qj=b._emscripten_bind_btManifoldPoint_get_m_localPointB_0=b.asm.uh).apply(null,arguments)},Rj=b._emscripten_bind_btManifoldPoint_set_m_localPointB_1=function(){return(Rj=b._emscripten_bind_btManifoldPoint_set_m_localPointB_1=b.asm.vh).apply(null,
  arguments)},Sj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=function(){return(Sj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=b.asm.wh).apply(null,arguments)},Tj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=function(){return(Tj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=b.asm.xh).apply(null,arguments)},Uj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=function(){return(Uj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=
  b.asm.yh).apply(null,arguments)},Vj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=function(){return(Vj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=b.asm.zh).apply(null,arguments)},Wj=b._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=function(){return(Wj=b._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=b.asm.Ah).apply(null,arguments)},Xj=b._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=function(){return(Xj=b._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=
  b.asm.Bh).apply(null,arguments)},Yj=b._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=function(){return(Yj=b._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=b.asm.Ch).apply(null,arguments)},Zj=b._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=function(){return(Zj=b._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=b.asm.Dh).apply(null,arguments)},ak=b._emscripten_bind_btManifoldPoint___destroy___0=function(){return(ak=b._emscripten_bind_btManifoldPoint___destroy___0=
  b.asm.Eh).apply(null,arguments)},bk=b._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=function(){return(bk=b._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=b.asm.Fh).apply(null,arguments)},ck=b._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=function(){return(ck=b._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=b.asm.Gh).apply(null,arguments)},dk=b._emscripten_bind_ConcreteContactResultCallback___destroy___0=
  function(){return(dk=b._emscripten_bind_ConcreteContactResultCallback___destroy___0=b.asm.Hh).apply(null,arguments)},ek=b._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=function(){return(ek=b._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=b.asm.Ih).apply(null,arguments)},fk=b._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=function(){return(fk=b._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=b.asm.Jh).apply(null,arguments)},gk=b._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=function(){return(gk=
  b._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=b.asm.Kh).apply(null,arguments)},hk=b._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=function(){return(hk=b._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=b.asm.Lh).apply(null,arguments)},ik=b._emscripten_bind_LocalShapeInfo___destroy___0=function(){return(ik=b._emscripten_bind_LocalShapeInfo___destroy___0=b.asm.Mh).apply(null,arguments)},jk=b._emscripten_bind_LocalConvexResult_LocalConvexResult_5=function(){return(jk=b._emscripten_bind_LocalConvexResult_LocalConvexResult_5=
  b.asm.Nh).apply(null,arguments)},kk=b._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=function(){return(kk=b._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=b.asm.Oh).apply(null,arguments)},lk=b._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=function(){return(lk=b._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=b.asm.Ph).apply(null,arguments)},mk=b._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=function(){return(mk=b._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=
  b.asm.Qh).apply(null,arguments)},nk=b._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=function(){return(nk=b._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=b.asm.Rh).apply(null,arguments)},ok=b._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=function(){return(ok=b._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=b.asm.Sh).apply(null,arguments)},pk=b._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=function(){return(pk=b._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=
  b.asm.Th).apply(null,arguments)},qk=b._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=function(){return(qk=b._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=b.asm.Uh).apply(null,arguments)},rk=b._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=function(){return(rk=b._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=b.asm.Vh).apply(null,arguments)},sk=b._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=function(){return(sk=b._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=
  b.asm.Wh).apply(null,arguments)},tk=b._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=function(){return(tk=b._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=b.asm.Xh).apply(null,arguments)},uk=b._emscripten_bind_LocalConvexResult___destroy___0=function(){return(uk=b._emscripten_bind_LocalConvexResult___destroy___0=b.asm.Yh).apply(null,arguments)},vk=b._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=function(){return(vk=b._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=
  b.asm.Zh).apply(null,arguments)},wk=b._emscripten_bind_ClosestConvexResultCallback_hasHit_0=function(){return(wk=b._emscripten_bind_ClosestConvexResultCallback_hasHit_0=b.asm._h).apply(null,arguments)},xk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitCollisionObject_0=function(){return(xk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitCollisionObject_0=b.asm.$h).apply(null,arguments)},yk=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitCollisionObject_1=function(){return(yk=
  b._emscripten_bind_ClosestConvexResultCallback_set_m_hitCollisionObject_1=b.asm.ai).apply(null,arguments)},zk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=function(){return(zk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=b.asm.bi).apply(null,arguments)},Ak=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=function(){return(Ak=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=b.asm.ci).apply(null,arguments)},
  Bk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=function(){return(Bk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=b.asm.di).apply(null,arguments)},Ck=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=function(){return(Ck=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=b.asm.ei).apply(null,arguments)},Dk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=function(){return(Dk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=
  b.asm.fi).apply(null,arguments)},Ek=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=function(){return(Ek=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=b.asm.gi).apply(null,arguments)},Fk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=function(){return(Fk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=b.asm.hi).apply(null,arguments)},Gk=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=function(){return(Gk=
  b._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=b.asm.ii).apply(null,arguments)},Hk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=function(){return(Hk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=b.asm.ji).apply(null,arguments)},Ik=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=function(){return(Ik=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=b.asm.ki).apply(null,
  arguments)},Jk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=function(){return(Jk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=b.asm.li).apply(null,arguments)},Kk=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=function(){return(Kk=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=b.asm.mi).apply(null,arguments)},Lk=b._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=
  function(){return(Lk=b._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=b.asm.ni).apply(null,arguments)},Mk=b._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=function(){return(Mk=b._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=b.asm.oi).apply(null,arguments)},Nk=b._emscripten_bind_ClosestConvexResultCallback___destroy___0=function(){return(Nk=b._emscripten_bind_ClosestConvexResultCallback___destroy___0=b.asm.pi).apply(null,arguments)},
  Ok=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=function(){return(Ok=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=b.asm.qi).apply(null,arguments)},Pk=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=function(){return(Pk=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=b.asm.ri).apply(null,arguments)},Qk=b._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=function(){return(Qk=b._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=
  b.asm.si).apply(null,arguments)},Rk=b._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=function(){return(Rk=b._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=b.asm.ti).apply(null,arguments)},Sk=b._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=function(){return(Sk=b._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=b.asm.ui).apply(null,arguments)},Tk=b._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=function(){return(Tk=b._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=
  b.asm.vi).apply(null,arguments)},Uk=b._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=function(){return(Uk=b._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=b.asm.wi).apply(null,arguments)},Vk=b._emscripten_bind_btConvexTriangleMeshShape___destroy___0=function(){return(Vk=b._emscripten_bind_btConvexTriangleMeshShape___destroy___0=b.asm.xi).apply(null,arguments)},Wk=b._emscripten_bind_btBoxShape_btBoxShape_1=function(){return(Wk=b._emscripten_bind_btBoxShape_btBoxShape_1=b.asm.yi).apply(null,
  arguments)},Xk=b._emscripten_bind_btBoxShape_setMargin_1=function(){return(Xk=b._emscripten_bind_btBoxShape_setMargin_1=b.asm.zi).apply(null,arguments)},Yk=b._emscripten_bind_btBoxShape_getMargin_0=function(){return(Yk=b._emscripten_bind_btBoxShape_getMargin_0=b.asm.Ai).apply(null,arguments)},Zk=b._emscripten_bind_btBoxShape_setLocalScaling_1=function(){return(Zk=b._emscripten_bind_btBoxShape_setLocalScaling_1=b.asm.Bi).apply(null,arguments)},$k=b._emscripten_bind_btBoxShape_getLocalScaling_0=function(){return($k=
  b._emscripten_bind_btBoxShape_getLocalScaling_0=b.asm.Ci).apply(null,arguments)},al=b._emscripten_bind_btBoxShape_calculateLocalInertia_2=function(){return(al=b._emscripten_bind_btBoxShape_calculateLocalInertia_2=b.asm.Di).apply(null,arguments)},bl=b._emscripten_bind_btBoxShape___destroy___0=function(){return(bl=b._emscripten_bind_btBoxShape___destroy___0=b.asm.Ei).apply(null,arguments)},cl=b._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=function(){return(cl=b._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=
  b.asm.Fi).apply(null,arguments)},dl=b._emscripten_bind_btCapsuleShapeX_setMargin_1=function(){return(dl=b._emscripten_bind_btCapsuleShapeX_setMargin_1=b.asm.Gi).apply(null,arguments)},el=b._emscripten_bind_btCapsuleShapeX_getMargin_0=function(){return(el=b._emscripten_bind_btCapsuleShapeX_getMargin_0=b.asm.Hi).apply(null,arguments)},fl=b._emscripten_bind_btCapsuleShapeX_getUpAxis_0=function(){return(fl=b._emscripten_bind_btCapsuleShapeX_getUpAxis_0=b.asm.Ii).apply(null,arguments)},gl=b._emscripten_bind_btCapsuleShapeX_getRadius_0=
  function(){return(gl=b._emscripten_bind_btCapsuleShapeX_getRadius_0=b.asm.Ji).apply(null,arguments)},hl=b._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=function(){return(hl=b._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=b.asm.Ki).apply(null,arguments)},il=b._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=function(){return(il=b._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=b.asm.Li).apply(null,arguments)},jl=b._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=function(){return(jl=b._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=
  b.asm.Mi).apply(null,arguments)},kl=b._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=function(){return(kl=b._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=b.asm.Ni).apply(null,arguments)},ll=b._emscripten_bind_btCapsuleShapeX___destroy___0=function(){return(ll=b._emscripten_bind_btCapsuleShapeX___destroy___0=b.asm.Oi).apply(null,arguments)},ml=b._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=function(){return(ml=b._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=b.asm.Pi).apply(null,
  arguments)},nl=b._emscripten_bind_btCapsuleShapeZ_setMargin_1=function(){return(nl=b._emscripten_bind_btCapsuleShapeZ_setMargin_1=b.asm.Qi).apply(null,arguments)},ol=b._emscripten_bind_btCapsuleShapeZ_getMargin_0=function(){return(ol=b._emscripten_bind_btCapsuleShapeZ_getMargin_0=b.asm.Ri).apply(null,arguments)},pl=b._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=function(){return(pl=b._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=b.asm.Si).apply(null,arguments)},ql=b._emscripten_bind_btCapsuleShapeZ_getRadius_0=
  function(){return(ql=b._emscripten_bind_btCapsuleShapeZ_getRadius_0=b.asm.Ti).apply(null,arguments)},rl=b._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=function(){return(rl=b._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=b.asm.Ui).apply(null,arguments)},sl=b._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=function(){return(sl=b._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=b.asm.Vi).apply(null,arguments)},tl=b._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=function(){return(tl=b._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=
  b.asm.Wi).apply(null,arguments)},ul=b._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=function(){return(ul=b._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=b.asm.Xi).apply(null,arguments)},vl=b._emscripten_bind_btCapsuleShapeZ___destroy___0=function(){return(vl=b._emscripten_bind_btCapsuleShapeZ___destroy___0=b.asm.Yi).apply(null,arguments)},wl=b._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=function(){return(wl=b._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=b.asm.Zi).apply(null,
  arguments)},xl=b._emscripten_bind_btCylinderShapeX_setMargin_1=function(){return(xl=b._emscripten_bind_btCylinderShapeX_setMargin_1=b.asm._i).apply(null,arguments)},yl=b._emscripten_bind_btCylinderShapeX_getMargin_0=function(){return(yl=b._emscripten_bind_btCylinderShapeX_getMargin_0=b.asm.$i).apply(null,arguments)},zl=b._emscripten_bind_btCylinderShapeX_setLocalScaling_1=function(){return(zl=b._emscripten_bind_btCylinderShapeX_setLocalScaling_1=b.asm.aj).apply(null,arguments)},Al=b._emscripten_bind_btCylinderShapeX_getLocalScaling_0=
  function(){return(Al=b._emscripten_bind_btCylinderShapeX_getLocalScaling_0=b.asm.bj).apply(null,arguments)},Bl=b._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=function(){return(Bl=b._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=b.asm.cj).apply(null,arguments)},Cl=b._emscripten_bind_btCylinderShapeX___destroy___0=function(){return(Cl=b._emscripten_bind_btCylinderShapeX___destroy___0=b.asm.dj).apply(null,arguments)},Dl=b._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=function(){return(Dl=
  b._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=b.asm.ej).apply(null,arguments)},El=b._emscripten_bind_btCylinderShapeZ_setMargin_1=function(){return(El=b._emscripten_bind_btCylinderShapeZ_setMargin_1=b.asm.fj).apply(null,arguments)},Fl=b._emscripten_bind_btCylinderShapeZ_getMargin_0=function(){return(Fl=b._emscripten_bind_btCylinderShapeZ_getMargin_0=b.asm.gj).apply(null,arguments)},Gl=b._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=function(){return(Gl=b._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=
  b.asm.hj).apply(null,arguments)},Hl=b._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=function(){return(Hl=b._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=b.asm.ij).apply(null,arguments)},Il=b._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=function(){return(Il=b._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=b.asm.jj).apply(null,arguments)},Jl=b._emscripten_bind_btCylinderShapeZ___destroy___0=function(){return(Jl=b._emscripten_bind_btCylinderShapeZ___destroy___0=b.asm.kj).apply(null,
  arguments)},Kl=b._emscripten_bind_btSphereShape_btSphereShape_1=function(){return(Kl=b._emscripten_bind_btSphereShape_btSphereShape_1=b.asm.lj).apply(null,arguments)},Ll=b._emscripten_bind_btSphereShape_setMargin_1=function(){return(Ll=b._emscripten_bind_btSphereShape_setMargin_1=b.asm.mj).apply(null,arguments)},Ml=b._emscripten_bind_btSphereShape_getMargin_0=function(){return(Ml=b._emscripten_bind_btSphereShape_getMargin_0=b.asm.nj).apply(null,arguments)},Nl=b._emscripten_bind_btSphereShape_setLocalScaling_1=
  function(){return(Nl=b._emscripten_bind_btSphereShape_setLocalScaling_1=b.asm.oj).apply(null,arguments)},Ol=b._emscripten_bind_btSphereShape_getLocalScaling_0=function(){return(Ol=b._emscripten_bind_btSphereShape_getLocalScaling_0=b.asm.pj).apply(null,arguments)},Pl=b._emscripten_bind_btSphereShape_calculateLocalInertia_2=function(){return(Pl=b._emscripten_bind_btSphereShape_calculateLocalInertia_2=b.asm.qj).apply(null,arguments)},Ql=b._emscripten_bind_btSphereShape___destroy___0=function(){return(Ql=
  b._emscripten_bind_btSphereShape___destroy___0=b.asm.rj).apply(null,arguments)},Rl=b._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=function(){return(Rl=b._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=b.asm.sj).apply(null,arguments)},Sl=b._emscripten_bind_btMultiSphereShape_setLocalScaling_1=function(){return(Sl=b._emscripten_bind_btMultiSphereShape_setLocalScaling_1=b.asm.tj).apply(null,arguments)},Tl=b._emscripten_bind_btMultiSphereShape_getLocalScaling_0=function(){return(Tl=
  b._emscripten_bind_btMultiSphereShape_getLocalScaling_0=b.asm.uj).apply(null,arguments)},Ul=b._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=function(){return(Ul=b._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=b.asm.vj).apply(null,arguments)},Vl=b._emscripten_bind_btMultiSphereShape___destroy___0=function(){return(Vl=b._emscripten_bind_btMultiSphereShape___destroy___0=b.asm.wj).apply(null,arguments)},Wl=b._emscripten_bind_btConeShapeX_btConeShapeX_2=function(){return(Wl=
  b._emscripten_bind_btConeShapeX_btConeShapeX_2=b.asm.xj).apply(null,arguments)},Xl=b._emscripten_bind_btConeShapeX_setLocalScaling_1=function(){return(Xl=b._emscripten_bind_btConeShapeX_setLocalScaling_1=b.asm.yj).apply(null,arguments)},Yl=b._emscripten_bind_btConeShapeX_getLocalScaling_0=function(){return(Yl=b._emscripten_bind_btConeShapeX_getLocalScaling_0=b.asm.zj).apply(null,arguments)},Zl=b._emscripten_bind_btConeShapeX_calculateLocalInertia_2=function(){return(Zl=b._emscripten_bind_btConeShapeX_calculateLocalInertia_2=
  b.asm.Aj).apply(null,arguments)},$l=b._emscripten_bind_btConeShapeX___destroy___0=function(){return($l=b._emscripten_bind_btConeShapeX___destroy___0=b.asm.Bj).apply(null,arguments)},am=b._emscripten_bind_btConeShapeZ_btConeShapeZ_2=function(){return(am=b._emscripten_bind_btConeShapeZ_btConeShapeZ_2=b.asm.Cj).apply(null,arguments)},bm=b._emscripten_bind_btConeShapeZ_setLocalScaling_1=function(){return(bm=b._emscripten_bind_btConeShapeZ_setLocalScaling_1=b.asm.Dj).apply(null,arguments)},cm=b._emscripten_bind_btConeShapeZ_getLocalScaling_0=
  function(){return(cm=b._emscripten_bind_btConeShapeZ_getLocalScaling_0=b.asm.Ej).apply(null,arguments)},dm=b._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=function(){return(dm=b._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=b.asm.Fj).apply(null,arguments)},em=b._emscripten_bind_btConeShapeZ___destroy___0=function(){return(em=b._emscripten_bind_btConeShapeZ___destroy___0=b.asm.Gj).apply(null,arguments)},fm=b._emscripten_bind_btIntArray_size_0=function(){return(fm=b._emscripten_bind_btIntArray_size_0=
  b.asm.Hj).apply(null,arguments)},gm=b._emscripten_bind_btIntArray_at_1=function(){return(gm=b._emscripten_bind_btIntArray_at_1=b.asm.Ij).apply(null,arguments)},hm=b._emscripten_bind_btIntArray___destroy___0=function(){return(hm=b._emscripten_bind_btIntArray___destroy___0=b.asm.Jj).apply(null,arguments)},im=b._emscripten_bind_btFace_get_m_indices_0=function(){return(im=b._emscripten_bind_btFace_get_m_indices_0=b.asm.Kj).apply(null,arguments)},jm=b._emscripten_bind_btFace_set_m_indices_1=function(){return(jm=
  b._emscripten_bind_btFace_set_m_indices_1=b.asm.Lj).apply(null,arguments)},km=b._emscripten_bind_btFace_get_m_plane_1=function(){return(km=b._emscripten_bind_btFace_get_m_plane_1=b.asm.Mj).apply(null,arguments)},lm=b._emscripten_bind_btFace_set_m_plane_2=function(){return(lm=b._emscripten_bind_btFace_set_m_plane_2=b.asm.Nj).apply(null,arguments)},mm=b._emscripten_bind_btFace___destroy___0=function(){return(mm=b._emscripten_bind_btFace___destroy___0=b.asm.Oj).apply(null,arguments)},nm=b._emscripten_bind_btVector3Array_size_0=
  function(){return(nm=b._emscripten_bind_btVector3Array_size_0=b.asm.Pj).apply(null,arguments)},om=b._emscripten_bind_btVector3Array_at_1=function(){return(om=b._emscripten_bind_btVector3Array_at_1=b.asm.Qj).apply(null,arguments)},pm=b._emscripten_bind_btVector3Array___destroy___0=function(){return(pm=b._emscripten_bind_btVector3Array___destroy___0=b.asm.Rj).apply(null,arguments)},qm=b._emscripten_bind_btFaceArray_size_0=function(){return(qm=b._emscripten_bind_btFaceArray_size_0=b.asm.Sj).apply(null,
  arguments)},rm=b._emscripten_bind_btFaceArray_at_1=function(){return(rm=b._emscripten_bind_btFaceArray_at_1=b.asm.Tj).apply(null,arguments)},sm=b._emscripten_bind_btFaceArray___destroy___0=function(){return(sm=b._emscripten_bind_btFaceArray___destroy___0=b.asm.Uj).apply(null,arguments)},tm=b._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=function(){return(tm=b._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=b.asm.Vj).apply(null,arguments)},um=b._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=
  function(){return(um=b._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=b.asm.Wj).apply(null,arguments)},wm=b._emscripten_bind_btConvexPolyhedron_get_m_faces_0=function(){return(wm=b._emscripten_bind_btConvexPolyhedron_get_m_faces_0=b.asm.Xj).apply(null,arguments)},xm=b._emscripten_bind_btConvexPolyhedron_set_m_faces_1=function(){return(xm=b._emscripten_bind_btConvexPolyhedron_set_m_faces_1=b.asm.Yj).apply(null,arguments)},ym=b._emscripten_bind_btConvexPolyhedron___destroy___0=function(){return(ym=
  b._emscripten_bind_btConvexPolyhedron___destroy___0=b.asm.Zj).apply(null,arguments)},zm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_0=function(){return(zm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_0=b.asm._j).apply(null,arguments)},Am=b._emscripten_bind_btConvexHullShape_btConvexHullShape_1=function(){return(Am=b._emscripten_bind_btConvexHullShape_btConvexHullShape_1=b.asm.$j).apply(null,arguments)},Bm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_2=function(){return(Bm=
  b._emscripten_bind_btConvexHullShape_btConvexHullShape_2=b.asm.ak).apply(null,arguments)},Cm=b._emscripten_bind_btConvexHullShape_addPoint_1=function(){return(Cm=b._emscripten_bind_btConvexHullShape_addPoint_1=b.asm.bk).apply(null,arguments)},Dm=b._emscripten_bind_btConvexHullShape_addPoint_2=function(){return(Dm=b._emscripten_bind_btConvexHullShape_addPoint_2=b.asm.ck).apply(null,arguments)},Em=b._emscripten_bind_btConvexHullShape_setMargin_1=function(){return(Em=b._emscripten_bind_btConvexHullShape_setMargin_1=
  b.asm.dk).apply(null,arguments)},Fm=b._emscripten_bind_btConvexHullShape_getMargin_0=function(){return(Fm=b._emscripten_bind_btConvexHullShape_getMargin_0=b.asm.ek).apply(null,arguments)},Gm=b._emscripten_bind_btConvexHullShape_getNumVertices_0=function(){return(Gm=b._emscripten_bind_btConvexHullShape_getNumVertices_0=b.asm.fk).apply(null,arguments)},Hm=b._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=function(){return(Hm=b._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=
  b.asm.gk).apply(null,arguments)},Im=b._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=function(){return(Im=b._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=b.asm.hk).apply(null,arguments)},Jm=b._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=function(){return(Jm=b._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=b.asm.ik).apply(null,arguments)},Km=b._emscripten_bind_btConvexHullShape_setLocalScaling_1=function(){return(Km=b._emscripten_bind_btConvexHullShape_setLocalScaling_1=
  b.asm.jk).apply(null,arguments)},Lm=b._emscripten_bind_btConvexHullShape_getLocalScaling_0=function(){return(Lm=b._emscripten_bind_btConvexHullShape_getLocalScaling_0=b.asm.kk).apply(null,arguments)},Mm=b._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=function(){return(Mm=b._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=b.asm.lk).apply(null,arguments)},Nm=b._emscripten_bind_btConvexHullShape___destroy___0=function(){return(Nm=b._emscripten_bind_btConvexHullShape___destroy___0=
  b.asm.mk).apply(null,arguments)},Om=b._emscripten_bind_btShapeHull_btShapeHull_1=function(){return(Om=b._emscripten_bind_btShapeHull_btShapeHull_1=b.asm.nk).apply(null,arguments)},Pm=b._emscripten_bind_btShapeHull_buildHull_1=function(){return(Pm=b._emscripten_bind_btShapeHull_buildHull_1=b.asm.ok).apply(null,arguments)},Qm=b._emscripten_bind_btShapeHull_numVertices_0=function(){return(Qm=b._emscripten_bind_btShapeHull_numVertices_0=b.asm.pk).apply(null,arguments)},Rm=b._emscripten_bind_btShapeHull_getVertexPointer_0=
  function(){return(Rm=b._emscripten_bind_btShapeHull_getVertexPointer_0=b.asm.qk).apply(null,arguments)},Sm=b._emscripten_bind_btShapeHull___destroy___0=function(){return(Sm=b._emscripten_bind_btShapeHull___destroy___0=b.asm.rk).apply(null,arguments)},Tm=b._emscripten_bind_btCompoundShape_btCompoundShape_0=function(){return(Tm=b._emscripten_bind_btCompoundShape_btCompoundShape_0=b.asm.sk).apply(null,arguments)},Um=b._emscripten_bind_btCompoundShape_btCompoundShape_1=function(){return(Um=b._emscripten_bind_btCompoundShape_btCompoundShape_1=
  b.asm.tk).apply(null,arguments)},Vm=b._emscripten_bind_btCompoundShape_addChildShape_2=function(){return(Vm=b._emscripten_bind_btCompoundShape_addChildShape_2=b.asm.uk).apply(null,arguments)},Wm=b._emscripten_bind_btCompoundShape_removeChildShape_1=function(){return(Wm=b._emscripten_bind_btCompoundShape_removeChildShape_1=b.asm.vk).apply(null,arguments)},Xm=b._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=function(){return(Xm=b._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=
  b.asm.wk).apply(null,arguments)},Ym=b._emscripten_bind_btCompoundShape_getNumChildShapes_0=function(){return(Ym=b._emscripten_bind_btCompoundShape_getNumChildShapes_0=b.asm.xk).apply(null,arguments)},Zm=b._emscripten_bind_btCompoundShape_getChildShape_1=function(){return(Zm=b._emscripten_bind_btCompoundShape_getChildShape_1=b.asm.yk).apply(null,arguments)},$m=b._emscripten_bind_btCompoundShape_updateChildTransform_2=function(){return($m=b._emscripten_bind_btCompoundShape_updateChildTransform_2=b.asm.zk).apply(null,
  arguments)},an=b._emscripten_bind_btCompoundShape_updateChildTransform_3=function(){return(an=b._emscripten_bind_btCompoundShape_updateChildTransform_3=b.asm.Ak).apply(null,arguments)},bn=b._emscripten_bind_btCompoundShape_setMargin_1=function(){return(bn=b._emscripten_bind_btCompoundShape_setMargin_1=b.asm.Bk).apply(null,arguments)},cn=b._emscripten_bind_btCompoundShape_getMargin_0=function(){return(cn=b._emscripten_bind_btCompoundShape_getMargin_0=b.asm.Ck).apply(null,arguments)},dn=b._emscripten_bind_btCompoundShape_setLocalScaling_1=
  function(){return(dn=b._emscripten_bind_btCompoundShape_setLocalScaling_1=b.asm.Dk).apply(null,arguments)},en=b._emscripten_bind_btCompoundShape_getLocalScaling_0=function(){return(en=b._emscripten_bind_btCompoundShape_getLocalScaling_0=b.asm.Ek).apply(null,arguments)},fn=b._emscripten_bind_btCompoundShape_calculateLocalInertia_2=function(){return(fn=b._emscripten_bind_btCompoundShape_calculateLocalInertia_2=b.asm.Fk).apply(null,arguments)},gn=b._emscripten_bind_btCompoundShape___destroy___0=function(){return(gn=
  b._emscripten_bind_btCompoundShape___destroy___0=b.asm.Gk).apply(null,arguments)},hn=b._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=function(){return(hn=b._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=b.asm.Hk).apply(null,arguments)},jn=b._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=function(){return(jn=b._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=b.asm.Ik).apply(null,arguments)},kn=b._emscripten_bind_btIndexedMesh___destroy___0=function(){return(kn=b._emscripten_bind_btIndexedMesh___destroy___0=
  b.asm.Jk).apply(null,arguments)},ln=b._emscripten_bind_btIndexedMeshArray_size_0=function(){return(ln=b._emscripten_bind_btIndexedMeshArray_size_0=b.asm.Kk).apply(null,arguments)},mn=b._emscripten_bind_btIndexedMeshArray_at_1=function(){return(mn=b._emscripten_bind_btIndexedMeshArray_at_1=b.asm.Lk).apply(null,arguments)},nn=b._emscripten_bind_btIndexedMeshArray___destroy___0=function(){return(nn=b._emscripten_bind_btIndexedMeshArray___destroy___0=b.asm.Mk).apply(null,arguments)},on=b._emscripten_bind_btTriangleMesh_btTriangleMesh_0=
  function(){return(on=b._emscripten_bind_btTriangleMesh_btTriangleMesh_0=b.asm.Nk).apply(null,arguments)},pn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_1=function(){return(pn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_1=b.asm.Ok).apply(null,arguments)},qn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_2=function(){return(qn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_2=b.asm.Pk).apply(null,arguments)},rn=b._emscripten_bind_btTriangleMesh_addTriangle_3=function(){return(rn=b._emscripten_bind_btTriangleMesh_addTriangle_3=
  b.asm.Qk).apply(null,arguments)},sn=b._emscripten_bind_btTriangleMesh_addTriangle_4=function(){return(sn=b._emscripten_bind_btTriangleMesh_addTriangle_4=b.asm.Rk).apply(null,arguments)},tn=b._emscripten_bind_btTriangleMesh_findOrAddVertex_2=function(){return(tn=b._emscripten_bind_btTriangleMesh_findOrAddVertex_2=b.asm.Sk).apply(null,arguments)},un=b._emscripten_bind_btTriangleMesh_addIndex_1=function(){return(un=b._emscripten_bind_btTriangleMesh_addIndex_1=b.asm.Tk).apply(null,arguments)},vn=b._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=
  function(){return(vn=b._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=b.asm.Uk).apply(null,arguments)},wn=b._emscripten_bind_btTriangleMesh_setScaling_1=function(){return(wn=b._emscripten_bind_btTriangleMesh_setScaling_1=b.asm.Vk).apply(null,arguments)},xn=b._emscripten_bind_btTriangleMesh___destroy___0=function(){return(xn=b._emscripten_bind_btTriangleMesh___destroy___0=b.asm.Wk).apply(null,arguments)},yn=b._emscripten_bind_btEmptyShape_btEmptyShape_0=function(){return(yn=b._emscripten_bind_btEmptyShape_btEmptyShape_0=
  b.asm.Xk).apply(null,arguments)},zn=b._emscripten_bind_btEmptyShape_setLocalScaling_1=function(){return(zn=b._emscripten_bind_btEmptyShape_setLocalScaling_1=b.asm.Yk).apply(null,arguments)},An=b._emscripten_bind_btEmptyShape_getLocalScaling_0=function(){return(An=b._emscripten_bind_btEmptyShape_getLocalScaling_0=b.asm.Zk).apply(null,arguments)},Bn=b._emscripten_bind_btEmptyShape_calculateLocalInertia_2=function(){return(Bn=b._emscripten_bind_btEmptyShape_calculateLocalInertia_2=b.asm._k).apply(null,
  arguments)},Cn=b._emscripten_bind_btEmptyShape___destroy___0=function(){return(Cn=b._emscripten_bind_btEmptyShape___destroy___0=b.asm.$k).apply(null,arguments)},Dn=b._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=function(){return(Dn=b._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=b.asm.al).apply(null,arguments)},En=b._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=function(){return(En=b._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=b.asm.bl).apply(null,arguments)},
  Fn=b._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=function(){return(Fn=b._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=b.asm.cl).apply(null,arguments)},Gn=b._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=function(){return(Gn=b._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=b.asm.dl).apply(null,arguments)},Hn=b._emscripten_bind_btStaticPlaneShape___destroy___0=function(){return(Hn=b._emscripten_bind_btStaticPlaneShape___destroy___0=b.asm.el).apply(null,arguments)},
  In=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=function(){return(In=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=b.asm.fl).apply(null,arguments)},Jn=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=function(){return(Jn=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=b.asm.gl).apply(null,arguments)},Kn=b._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=function(){return(Kn=b._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=
  b.asm.hl).apply(null,arguments)},Ln=b._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=function(){return(Ln=b._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=b.asm.il).apply(null,arguments)},Mn=b._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=function(){return(Mn=b._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=b.asm.jl).apply(null,arguments)},Nn=b._emscripten_bind_btBvhTriangleMeshShape___destroy___0=function(){return(Nn=b._emscripten_bind_btBvhTriangleMeshShape___destroy___0=
  b.asm.kl).apply(null,arguments)},On=b._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=function(){return(On=b._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=b.asm.ll).apply(null,arguments)},Pn=b._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=function(){return(Pn=b._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=b.asm.ml).apply(null,arguments)},Qn=b._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=function(){return(Qn=b._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=
  b.asm.nl).apply(null,arguments)},Rn=b._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=function(){return(Rn=b._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=b.asm.ol).apply(null,arguments)},Sn=b._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=function(){return(Sn=b._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=b.asm.pl).apply(null,arguments)},Tn=b._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=function(){return(Tn=b._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=
  b.asm.ql).apply(null,arguments)},Un=b._emscripten_bind_btHeightfieldTerrainShape___destroy___0=function(){return(Un=b._emscripten_bind_btHeightfieldTerrainShape___destroy___0=b.asm.rl).apply(null,arguments)},Vn=b._emscripten_bind_btAABB_btAABB_4=function(){return(Vn=b._emscripten_bind_btAABB_btAABB_4=b.asm.sl).apply(null,arguments)},Wn=b._emscripten_bind_btAABB_invalidate_0=function(){return(Wn=b._emscripten_bind_btAABB_invalidate_0=b.asm.tl).apply(null,arguments)},Xn=b._emscripten_bind_btAABB_increment_margin_1=
  function(){return(Xn=b._emscripten_bind_btAABB_increment_margin_1=b.asm.ul).apply(null,arguments)},Yn=b._emscripten_bind_btAABB_copy_with_margin_2=function(){return(Yn=b._emscripten_bind_btAABB_copy_with_margin_2=b.asm.vl).apply(null,arguments)},Zn=b._emscripten_bind_btAABB___destroy___0=function(){return(Zn=b._emscripten_bind_btAABB___destroy___0=b.asm.wl).apply(null,arguments)},$n=b._emscripten_bind_btPrimitiveTriangle_btPrimitiveTriangle_0=function(){return($n=b._emscripten_bind_btPrimitiveTriangle_btPrimitiveTriangle_0=
  b.asm.xl).apply(null,arguments)},ao=b._emscripten_bind_btPrimitiveTriangle___destroy___0=function(){return(ao=b._emscripten_bind_btPrimitiveTriangle___destroy___0=b.asm.yl).apply(null,arguments)},bo=b._emscripten_bind_btTriangleShapeEx_btTriangleShapeEx_3=function(){return(bo=b._emscripten_bind_btTriangleShapeEx_btTriangleShapeEx_3=b.asm.zl).apply(null,arguments)},co=b._emscripten_bind_btTriangleShapeEx_getAabb_3=function(){return(co=b._emscripten_bind_btTriangleShapeEx_getAabb_3=b.asm.Al).apply(null,
  arguments)},eo=b._emscripten_bind_btTriangleShapeEx_applyTransform_1=function(){return(eo=b._emscripten_bind_btTriangleShapeEx_applyTransform_1=b.asm.Bl).apply(null,arguments)},fo=b._emscripten_bind_btTriangleShapeEx_buildTriPlane_1=function(){return(fo=b._emscripten_bind_btTriangleShapeEx_buildTriPlane_1=b.asm.Cl).apply(null,arguments)},go=b._emscripten_bind_btTriangleShapeEx___destroy___0=function(){return(go=b._emscripten_bind_btTriangleShapeEx___destroy___0=b.asm.Dl).apply(null,arguments)},ho=
  b._emscripten_bind_btTetrahedronShapeEx_btTetrahedronShapeEx_0=function(){return(ho=b._emscripten_bind_btTetrahedronShapeEx_btTetrahedronShapeEx_0=b.asm.El).apply(null,arguments)},io=b._emscripten_bind_btTetrahedronShapeEx_setVertices_4=function(){return(io=b._emscripten_bind_btTetrahedronShapeEx_setVertices_4=b.asm.Fl).apply(null,arguments)},jo=b._emscripten_bind_btTetrahedronShapeEx___destroy___0=function(){return(jo=b._emscripten_bind_btTetrahedronShapeEx___destroy___0=b.asm.Gl).apply(null,arguments)},
  ko=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_count_0=function(){return(ko=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_count_0=b.asm.Hl).apply(null,arguments)},lo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_box_2=function(){return(lo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_box_2=b.asm.Il).apply(null,arguments)},mo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_triangle_2=function(){return(mo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_triangle_2=
  b.asm.Jl).apply(null,arguments)},no=b._emscripten_bind_CompoundPrimitiveManager_is_trimesh_0=function(){return(no=b._emscripten_bind_CompoundPrimitiveManager_is_trimesh_0=b.asm.Kl).apply(null,arguments)},oo=b._emscripten_bind_CompoundPrimitiveManager_get_m_compoundShape_0=function(){return(oo=b._emscripten_bind_CompoundPrimitiveManager_get_m_compoundShape_0=b.asm.Ll).apply(null,arguments)},po=b._emscripten_bind_CompoundPrimitiveManager_set_m_compoundShape_1=function(){return(po=b._emscripten_bind_CompoundPrimitiveManager_set_m_compoundShape_1=
  b.asm.Ml).apply(null,arguments)},qo=b._emscripten_bind_CompoundPrimitiveManager___destroy___0=function(){return(qo=b._emscripten_bind_CompoundPrimitiveManager___destroy___0=b.asm.Nl).apply(null,arguments)},ro=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_0=function(){return(ro=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_0=b.asm.Ol).apply(null,arguments)},so=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_1=function(){return(so=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_1=
  b.asm.Pl).apply(null,arguments)},to=b._emscripten_bind_btGImpactCompoundShape_childrenHasTransform_0=function(){return(to=b._emscripten_bind_btGImpactCompoundShape_childrenHasTransform_0=b.asm.Ql).apply(null,arguments)},uo=b._emscripten_bind_btGImpactCompoundShape_getPrimitiveManager_0=function(){return(uo=b._emscripten_bind_btGImpactCompoundShape_getPrimitiveManager_0=b.asm.Rl).apply(null,arguments)},vo=b._emscripten_bind_btGImpactCompoundShape_getCompoundPrimitiveManager_0=function(){return(vo=
  b._emscripten_bind_btGImpactCompoundShape_getCompoundPrimitiveManager_0=b.asm.Sl).apply(null,arguments)},wo=b._emscripten_bind_btGImpactCompoundShape_getNumChildShapes_0=function(){return(wo=b._emscripten_bind_btGImpactCompoundShape_getNumChildShapes_0=b.asm.Tl).apply(null,arguments)},xo=b._emscripten_bind_btGImpactCompoundShape_addChildShape_2=function(){return(xo=b._emscripten_bind_btGImpactCompoundShape_addChildShape_2=b.asm.Ul).apply(null,arguments)},yo=b._emscripten_bind_btGImpactCompoundShape_getChildShape_1=
  function(){return(yo=b._emscripten_bind_btGImpactCompoundShape_getChildShape_1=b.asm.Vl).apply(null,arguments)},zo=b._emscripten_bind_btGImpactCompoundShape_getChildAabb_4=function(){return(zo=b._emscripten_bind_btGImpactCompoundShape_getChildAabb_4=b.asm.Wl).apply(null,arguments)},Ao=b._emscripten_bind_btGImpactCompoundShape_getChildTransform_1=function(){return(Ao=b._emscripten_bind_btGImpactCompoundShape_getChildTransform_1=b.asm.Xl).apply(null,arguments)},Bo=b._emscripten_bind_btGImpactCompoundShape_setChildTransform_2=
  function(){return(Bo=b._emscripten_bind_btGImpactCompoundShape_setChildTransform_2=b.asm.Yl).apply(null,arguments)},Co=b._emscripten_bind_btGImpactCompoundShape_calculateLocalInertia_2=function(){return(Co=b._emscripten_bind_btGImpactCompoundShape_calculateLocalInertia_2=b.asm.Zl).apply(null,arguments)},Do=b._emscripten_bind_btGImpactCompoundShape_getName_0=function(){return(Do=b._emscripten_bind_btGImpactCompoundShape_getName_0=b.asm._l).apply(null,arguments)},Eo=b._emscripten_bind_btGImpactCompoundShape_getGImpactShapeType_0=
  function(){return(Eo=b._emscripten_bind_btGImpactCompoundShape_getGImpactShapeType_0=b.asm.$l).apply(null,arguments)},Fo=b._emscripten_bind_btGImpactCompoundShape_setLocalScaling_1=function(){return(Fo=b._emscripten_bind_btGImpactCompoundShape_setLocalScaling_1=b.asm.am).apply(null,arguments)},Go=b._emscripten_bind_btGImpactCompoundShape_getLocalScaling_0=function(){return(Go=b._emscripten_bind_btGImpactCompoundShape_getLocalScaling_0=b.asm.bm).apply(null,arguments)},Ho=b._emscripten_bind_btGImpactCompoundShape_updateBound_0=
  function(){return(Ho=b._emscripten_bind_btGImpactCompoundShape_updateBound_0=b.asm.cm).apply(null,arguments)},Io=b._emscripten_bind_btGImpactCompoundShape_postUpdate_0=function(){return(Io=b._emscripten_bind_btGImpactCompoundShape_postUpdate_0=b.asm.dm).apply(null,arguments)},Jo=b._emscripten_bind_btGImpactCompoundShape_getShapeType_0=function(){return(Jo=b._emscripten_bind_btGImpactCompoundShape_getShapeType_0=b.asm.em).apply(null,arguments)},Ko=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTriangles_0=
  function(){return(Ko=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTriangles_0=b.asm.fm).apply(null,arguments)},Lo=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTetrahedrons_0=function(){return(Lo=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTetrahedrons_0=b.asm.gm).apply(null,arguments)},Mo=b._emscripten_bind_btGImpactCompoundShape_getBulletTriangle_2=function(){return(Mo=b._emscripten_bind_btGImpactCompoundShape_getBulletTriangle_2=b.asm.hm).apply(null,arguments)},No=
  b._emscripten_bind_btGImpactCompoundShape_getBulletTetrahedron_2=function(){return(No=b._emscripten_bind_btGImpactCompoundShape_getBulletTetrahedron_2=b.asm.im).apply(null,arguments)},Oo=b._emscripten_bind_btGImpactCompoundShape___destroy___0=function(){return(Oo=b._emscripten_bind_btGImpactCompoundShape___destroy___0=b.asm.jm).apply(null,arguments)},Po=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_0=function(){return(Po=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_0=
  b.asm.km).apply(null,arguments)},Qo=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_1=function(){return(Qo=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_1=b.asm.lm).apply(null,arguments)},Ro=b._emscripten_bind_TrimeshPrimitiveManager_lock_0=function(){return(Ro=b._emscripten_bind_TrimeshPrimitiveManager_lock_0=b.asm.mm).apply(null,arguments)},So=b._emscripten_bind_TrimeshPrimitiveManager_unlock_0=function(){return(So=b._emscripten_bind_TrimeshPrimitiveManager_unlock_0=
  b.asm.nm).apply(null,arguments)},To=b._emscripten_bind_TrimeshPrimitiveManager_is_trimesh_0=function(){return(To=b._emscripten_bind_TrimeshPrimitiveManager_is_trimesh_0=b.asm.om).apply(null,arguments)},Uo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_count_0=function(){return(Uo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_count_0=b.asm.pm).apply(null,arguments)},Vo=b._emscripten_bind_TrimeshPrimitiveManager_get_indices_4=function(){return(Vo=b._emscripten_bind_TrimeshPrimitiveManager_get_indices_4=
  b.asm.qm).apply(null,arguments)},Wo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_2=function(){return(Wo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_2=b.asm.rm).apply(null,arguments)},Xo=b._emscripten_bind_TrimeshPrimitiveManager_get_bullet_triangle_2=function(){return(Xo=b._emscripten_bind_TrimeshPrimitiveManager_get_bullet_triangle_2=b.asm.sm).apply(null,arguments)},Yo=b._emscripten_bind_TrimeshPrimitiveManager_get_m_margin_0=function(){return(Yo=b._emscripten_bind_TrimeshPrimitiveManager_get_m_margin_0=
  b.asm.tm).apply(null,arguments)},Zo=b._emscripten_bind_TrimeshPrimitiveManager_set_m_margin_1=function(){return(Zo=b._emscripten_bind_TrimeshPrimitiveManager_set_m_margin_1=b.asm.um).apply(null,arguments)},$o=b._emscripten_bind_TrimeshPrimitiveManager_get_m_meshInterface_0=function(){return($o=b._emscripten_bind_TrimeshPrimitiveManager_get_m_meshInterface_0=b.asm.vm).apply(null,arguments)},ap=b._emscripten_bind_TrimeshPrimitiveManager_set_m_meshInterface_1=function(){return(ap=b._emscripten_bind_TrimeshPrimitiveManager_set_m_meshInterface_1=
  b.asm.wm).apply(null,arguments)},bp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_part_0=function(){return(bp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_part_0=b.asm.xm).apply(null,arguments)},cp=b._emscripten_bind_TrimeshPrimitiveManager_set_m_part_1=function(){return(cp=b._emscripten_bind_TrimeshPrimitiveManager_set_m_part_1=b.asm.ym).apply(null,arguments)},dp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_lock_count_0=function(){return(dp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_lock_count_0=
  b.asm.zm).apply(null,arguments)},ep=b._emscripten_bind_TrimeshPrimitiveManager_set_m_lock_count_1=function(){return(ep=b._emscripten_bind_TrimeshPrimitiveManager_set_m_lock_count_1=b.asm.Am).apply(null,arguments)},fp=b._emscripten_bind_TrimeshPrimitiveManager_get_numverts_0=function(){return(fp=b._emscripten_bind_TrimeshPrimitiveManager_get_numverts_0=b.asm.Bm).apply(null,arguments)},gp=b._emscripten_bind_TrimeshPrimitiveManager_set_numverts_1=function(){return(gp=b._emscripten_bind_TrimeshPrimitiveManager_set_numverts_1=
  b.asm.Cm).apply(null,arguments)},hp=b._emscripten_bind_TrimeshPrimitiveManager_get_type_0=function(){return(hp=b._emscripten_bind_TrimeshPrimitiveManager_get_type_0=b.asm.Dm).apply(null,arguments)},ip=b._emscripten_bind_TrimeshPrimitiveManager_set_type_1=function(){return(ip=b._emscripten_bind_TrimeshPrimitiveManager_set_type_1=b.asm.Em).apply(null,arguments)},jp=b._emscripten_bind_TrimeshPrimitiveManager_get_stride_0=function(){return(jp=b._emscripten_bind_TrimeshPrimitiveManager_get_stride_0=b.asm.Fm).apply(null,
  arguments)},kp=b._emscripten_bind_TrimeshPrimitiveManager_set_stride_1=function(){return(kp=b._emscripten_bind_TrimeshPrimitiveManager_set_stride_1=b.asm.Gm).apply(null,arguments)},lp=b._emscripten_bind_TrimeshPrimitiveManager_get_indexstride_0=function(){return(lp=b._emscripten_bind_TrimeshPrimitiveManager_get_indexstride_0=b.asm.Hm).apply(null,arguments)},mp=b._emscripten_bind_TrimeshPrimitiveManager_set_indexstride_1=function(){return(mp=b._emscripten_bind_TrimeshPrimitiveManager_set_indexstride_1=
  b.asm.Im).apply(null,arguments)},np=b._emscripten_bind_TrimeshPrimitiveManager_get_numfaces_0=function(){return(np=b._emscripten_bind_TrimeshPrimitiveManager_get_numfaces_0=b.asm.Jm).apply(null,arguments)},op=b._emscripten_bind_TrimeshPrimitiveManager_set_numfaces_1=function(){return(op=b._emscripten_bind_TrimeshPrimitiveManager_set_numfaces_1=b.asm.Km).apply(null,arguments)},pp=b._emscripten_bind_TrimeshPrimitiveManager_get_indicestype_0=function(){return(pp=b._emscripten_bind_TrimeshPrimitiveManager_get_indicestype_0=
  b.asm.Lm).apply(null,arguments)},qp=b._emscripten_bind_TrimeshPrimitiveManager_set_indicestype_1=function(){return(qp=b._emscripten_bind_TrimeshPrimitiveManager_set_indicestype_1=b.asm.Mm).apply(null,arguments)},rp=b._emscripten_bind_TrimeshPrimitiveManager___destroy___0=function(){return(rp=b._emscripten_bind_TrimeshPrimitiveManager___destroy___0=b.asm.Nm).apply(null,arguments)},sp=b._emscripten_bind_btGImpactMeshShapePart_btGImpactMeshShapePart_2=function(){return(sp=b._emscripten_bind_btGImpactMeshShapePart_btGImpactMeshShapePart_2=
  b.asm.Om).apply(null,arguments)},tp=b._emscripten_bind_btGImpactMeshShapePart_getTrimeshPrimitiveManager_0=function(){return(tp=b._emscripten_bind_btGImpactMeshShapePart_getTrimeshPrimitiveManager_0=b.asm.Pm).apply(null,arguments)},up=b._emscripten_bind_btGImpactMeshShapePart_getVertexCount_0=function(){return(up=b._emscripten_bind_btGImpactMeshShapePart_getVertexCount_0=b.asm.Qm).apply(null,arguments)},vp=b._emscripten_bind_btGImpactMeshShapePart_getVertex_2=function(){return(vp=b._emscripten_bind_btGImpactMeshShapePart_getVertex_2=
  b.asm.Rm).apply(null,arguments)},wp=b._emscripten_bind_btGImpactMeshShapePart_getPart_0=function(){return(wp=b._emscripten_bind_btGImpactMeshShapePart_getPart_0=b.asm.Sm).apply(null,arguments)},xp=b._emscripten_bind_btGImpactMeshShapePart_setLocalScaling_1=function(){return(xp=b._emscripten_bind_btGImpactMeshShapePart_setLocalScaling_1=b.asm.Tm).apply(null,arguments)},yp=b._emscripten_bind_btGImpactMeshShapePart_getLocalScaling_0=function(){return(yp=b._emscripten_bind_btGImpactMeshShapePart_getLocalScaling_0=
  b.asm.Um).apply(null,arguments)},zp=b._emscripten_bind_btGImpactMeshShapePart_updateBound_0=function(){return(zp=b._emscripten_bind_btGImpactMeshShapePart_updateBound_0=b.asm.Vm).apply(null,arguments)},Ap=b._emscripten_bind_btGImpactMeshShapePart_postUpdate_0=function(){return(Ap=b._emscripten_bind_btGImpactMeshShapePart_postUpdate_0=b.asm.Wm).apply(null,arguments)},Bp=b._emscripten_bind_btGImpactMeshShapePart_getShapeType_0=function(){return(Bp=b._emscripten_bind_btGImpactMeshShapePart_getShapeType_0=
  b.asm.Xm).apply(null,arguments)},Cp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTriangles_0=function(){return(Cp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTriangles_0=b.asm.Ym).apply(null,arguments)},Dp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTetrahedrons_0=function(){return(Dp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTetrahedrons_0=b.asm.Zm).apply(null,arguments)},Ep=b._emscripten_bind_btGImpactMeshShapePart_getBulletTriangle_2=function(){return(Ep=
  b._emscripten_bind_btGImpactMeshShapePart_getBulletTriangle_2=b.asm._m).apply(null,arguments)},Fp=b._emscripten_bind_btGImpactMeshShapePart_getBulletTetrahedron_2=function(){return(Fp=b._emscripten_bind_btGImpactMeshShapePart_getBulletTetrahedron_2=b.asm.$m).apply(null,arguments)},Gp=b._emscripten_bind_btGImpactMeshShapePart___destroy___0=function(){return(Gp=b._emscripten_bind_btGImpactMeshShapePart___destroy___0=b.asm.an).apply(null,arguments)},Hp=b._emscripten_bind_btGImpactMeshShape_btGImpactMeshShape_1=
  function(){return(Hp=b._emscripten_bind_btGImpactMeshShape_btGImpactMeshShape_1=b.asm.bn).apply(null,arguments)},Ip=b._emscripten_bind_btGImpactMeshShape_getMeshInterface_0=function(){return(Ip=b._emscripten_bind_btGImpactMeshShape_getMeshInterface_0=b.asm.cn).apply(null,arguments)},Jp=b._emscripten_bind_btGImpactMeshShape_getMeshPartCount_0=function(){return(Jp=b._emscripten_bind_btGImpactMeshShape_getMeshPartCount_0=b.asm.dn).apply(null,arguments)},Kp=b._emscripten_bind_btGImpactMeshShape_getMeshPart_1=
  function(){return(Kp=b._emscripten_bind_btGImpactMeshShape_getMeshPart_1=b.asm.en).apply(null,arguments)},Lp=b._emscripten_bind_btGImpactMeshShape_calculateSerializeBufferSize_0=function(){return(Lp=b._emscripten_bind_btGImpactMeshShape_calculateSerializeBufferSize_0=b.asm.fn).apply(null,arguments)},Mp=b._emscripten_bind_btGImpactMeshShape_setLocalScaling_1=function(){return(Mp=b._emscripten_bind_btGImpactMeshShape_setLocalScaling_1=b.asm.gn).apply(null,arguments)},Np=b._emscripten_bind_btGImpactMeshShape_getLocalScaling_0=
  function(){return(Np=b._emscripten_bind_btGImpactMeshShape_getLocalScaling_0=b.asm.hn).apply(null,arguments)},Op=b._emscripten_bind_btGImpactMeshShape_updateBound_0=function(){return(Op=b._emscripten_bind_btGImpactMeshShape_updateBound_0=b.asm.jn).apply(null,arguments)},Pp=b._emscripten_bind_btGImpactMeshShape_postUpdate_0=function(){return(Pp=b._emscripten_bind_btGImpactMeshShape_postUpdate_0=b.asm.kn).apply(null,arguments)},Qp=b._emscripten_bind_btGImpactMeshShape_getShapeType_0=function(){return(Qp=
  b._emscripten_bind_btGImpactMeshShape_getShapeType_0=b.asm.ln).apply(null,arguments)},Rp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTriangles_0=function(){return(Rp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTriangles_0=b.asm.mn).apply(null,arguments)},Sp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTetrahedrons_0=function(){return(Sp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTetrahedrons_0=b.asm.nn).apply(null,arguments)},Tp=b._emscripten_bind_btGImpactMeshShape_getBulletTriangle_2=
  function(){return(Tp=b._emscripten_bind_btGImpactMeshShape_getBulletTriangle_2=b.asm.on).apply(null,arguments)},Up=b._emscripten_bind_btGImpactMeshShape_getBulletTetrahedron_2=function(){return(Up=b._emscripten_bind_btGImpactMeshShape_getBulletTetrahedron_2=b.asm.pn).apply(null,arguments)},Vp=b._emscripten_bind_btGImpactMeshShape___destroy___0=function(){return(Vp=b._emscripten_bind_btGImpactMeshShape___destroy___0=b.asm.qn).apply(null,arguments)},Wp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_0=
  function(){return(Wp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_0=b.asm.rn).apply(null,arguments)},Xp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_2=function(){return(Xp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_2=b.asm.sn).apply(null,arguments)},Yp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_dispatcher1_0=function(){return(Yp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_dispatcher1_0=
  b.asm.tn).apply(null,arguments)},Zp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_dispatcher1_1=function(){return(Zp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_dispatcher1_1=b.asm.un).apply(null,arguments)},$p=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_manifold_0=function(){return($p=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_manifold_0=b.asm.vn).apply(null,arguments)},aq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_manifold_1=
  function(){return(aq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_manifold_1=b.asm.wn).apply(null,arguments)},bq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo___destroy___0=function(){return(bq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo___destroy___0=b.asm.xn).apply(null,arguments)},cq=b._emscripten_bind_btGImpactCollisionAlgorithm_btGImpactCollisionAlgorithm_3=function(){return(cq=b._emscripten_bind_btGImpactCollisionAlgorithm_btGImpactCollisionAlgorithm_3=
  b.asm.yn).apply(null,arguments)},dq=b._emscripten_bind_btGImpactCollisionAlgorithm_registerAlgorithm_1=function(){return(dq=b._emscripten_bind_btGImpactCollisionAlgorithm_registerAlgorithm_1=b.asm.zn).apply(null,arguments)},eq=b._emscripten_bind_btGImpactCollisionAlgorithm___destroy___0=function(){return(eq=b._emscripten_bind_btGImpactCollisionAlgorithm___destroy___0=b.asm.An).apply(null,arguments)},fq=b._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=function(){return(fq=
  b._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=b.asm.Bn).apply(null,arguments)},gq=b._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=function(){return(gq=b._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=b.asm.Cn).apply(null,arguments)},hq=b._emscripten_bind_btPersistentManifold_btPersistentManifold_0=function(){return(hq=b._emscripten_bind_btPersistentManifold_btPersistentManifold_0=b.asm.Dn).apply(null,arguments)},iq=
  b._emscripten_bind_btPersistentManifold_getBody0_0=function(){return(iq=b._emscripten_bind_btPersistentManifold_getBody0_0=b.asm.En).apply(null,arguments)},jq=b._emscripten_bind_btPersistentManifold_getBody1_0=function(){return(jq=b._emscripten_bind_btPersistentManifold_getBody1_0=b.asm.Fn).apply(null,arguments)},kq=b._emscripten_bind_btPersistentManifold_getNumContacts_0=function(){return(kq=b._emscripten_bind_btPersistentManifold_getNumContacts_0=b.asm.Gn).apply(null,arguments)},lq=b._emscripten_bind_btPersistentManifold_getContactPoint_1=
  function(){return(lq=b._emscripten_bind_btPersistentManifold_getContactPoint_1=b.asm.Hn).apply(null,arguments)},mq=b._emscripten_bind_btPersistentManifold___destroy___0=function(){return(mq=b._emscripten_bind_btPersistentManifold___destroy___0=b.asm.In).apply(null,arguments)},nq=b._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=function(){return(nq=b._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=b.asm.Jn).apply(null,arguments)},oq=b._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=
  function(){return(oq=b._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=b.asm.Kn).apply(null,arguments)},pq=b._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=function(){return(pq=b._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=b.asm.Ln).apply(null,arguments)},qq=b._emscripten_bind_btCollisionDispatcher___destroy___0=function(){return(qq=b._emscripten_bind_btCollisionDispatcher___destroy___0=b.asm.Mn).apply(null,arguments)},rq=b._emscripten_bind_btOverlappingPairCallback___destroy___0=
  function(){return(rq=b._emscripten_bind_btOverlappingPairCallback___destroy___0=b.asm.Nn).apply(null,arguments)},sq=b._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=function(){return(sq=b._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=b.asm.On).apply(null,arguments)},tq=b._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=function(){return(tq=b._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=b.asm.Pn).apply(null,arguments)},
  uq=b._emscripten_bind_btOverlappingPairCache___destroy___0=function(){return(uq=b._emscripten_bind_btOverlappingPairCache___destroy___0=b.asm.Qn).apply(null,arguments)},vq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_2=function(){return(vq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_2=b.asm.Rn).apply(null,arguments)},wq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_3=function(){return(wq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_3=b.asm.Sn).apply(null,arguments)},xq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_4=
  function(){return(xq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_4=b.asm.Tn).apply(null,arguments)},yq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_5=function(){return(yq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_5=b.asm.Un).apply(null,arguments)},zq=b._emscripten_bind_btAxisSweep3___destroy___0=function(){return(zq=b._emscripten_bind_btAxisSweep3___destroy___0=b.asm.Vn).apply(null,arguments)},Aq=b._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=function(){return(Aq=b._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=
  b.asm.Wn).apply(null,arguments)},Bq=b._emscripten_bind_btBroadphaseInterface___destroy___0=function(){return(Bq=b._emscripten_bind_btBroadphaseInterface___destroy___0=b.asm.Xn).apply(null,arguments)},Cq=b._emscripten_bind_btCollisionConfiguration___destroy___0=function(){return(Cq=b._emscripten_bind_btCollisionConfiguration___destroy___0=b.asm.Yn).apply(null,arguments)},Dq=b._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=function(){return(Dq=b._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=
  b.asm.Zn).apply(null,arguments)},Eq=b._emscripten_bind_btDbvtBroadphase___destroy___0=function(){return(Eq=b._emscripten_bind_btDbvtBroadphase___destroy___0=b.asm._n).apply(null,arguments)},Fq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=function(){return(Fq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=b.asm.$n).apply(null,arguments)},Gq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=function(){return(Gq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=
  b.asm.ao).apply(null,arguments)},Hq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=function(){return(Hq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=b.asm.bo).apply(null,arguments)},Iq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=function(){return(Iq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=b.asm.co).apply(null,arguments)},Jq=b._emscripten_bind_btBroadphaseProxy___destroy___0=function(){return(Jq=b._emscripten_bind_btBroadphaseProxy___destroy___0=
  b.asm.eo).apply(null,arguments)},Kq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=function(){return(Kq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=b.asm.fo).apply(null,arguments)},Lq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=function(){return(Lq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=b.asm.go).apply(null,arguments)},Mq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=
  function(){return(Mq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=b.asm.ho).apply(null,arguments)},Nq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=function(){return(Nq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=b.asm.io).apply(null,arguments)},Oq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=function(){return(Oq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=b.asm.jo).apply(null,
  arguments)},Pq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=function(){return(Pq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=b.asm.ko).apply(null,arguments)},Qq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=function(){return(Qq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=b.asm.lo).apply(null,arguments)},Rq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=function(){return(Rq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=
  b.asm.mo).apply(null,arguments)},Sq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=function(){return(Sq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=b.asm.no).apply(null,arguments)},Tq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=function(){return(Tq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=b.asm.oo).apply(null,arguments)},Uq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=
  function(){return(Uq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=b.asm.po).apply(null,arguments)},Vq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=function(){return(Vq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=b.asm.qo).apply(null,arguments)},Wq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=function(){return(Wq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=b.asm.ro).apply(null,
  arguments)},Xq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=function(){return(Xq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=b.asm.so).apply(null,arguments)},Yq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=function(){return(Yq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=b.asm.to).apply(null,arguments)},Zq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=
  function(){return(Zq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=b.asm.uo).apply(null,arguments)},$q=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=function(){return($q=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=b.asm.vo).apply(null,arguments)},ar=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=function(){return(ar=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=
  b.asm.wo).apply(null,arguments)},br=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=function(){return(br=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=b.asm.xo).apply(null,arguments)},cr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=function(){return(cr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=b.asm.yo).apply(null,arguments)},dr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=
  function(){return(dr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=b.asm.zo).apply(null,arguments)},er=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=function(){return(er=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=b.asm.Ao).apply(null,arguments)},fr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=function(){return(fr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=
  b.asm.Bo).apply(null,arguments)},gr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=function(){return(gr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=b.asm.Co).apply(null,arguments)},hr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=function(){return(hr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=b.asm.Do).apply(null,arguments)},
  ir=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=function(){return(ir=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=b.asm.Eo).apply(null,arguments)},jr=b._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=function(){return(jr=b._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=b.asm.Fo).apply(null,arguments)},kr=b._emscripten_bind_btRigidBody_btRigidBody_1=function(){return(kr=b._emscripten_bind_btRigidBody_btRigidBody_1=
  b.asm.Go).apply(null,arguments)},lr=b._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=function(){return(lr=b._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=b.asm.Ho).apply(null,arguments)},mr=b._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=function(){return(mr=b._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=b.asm.Io).apply(null,arguments)},nr=b._emscripten_bind_btRigidBody_setSleepingThresholds_2=function(){return(nr=b._emscripten_bind_btRigidBody_setSleepingThresholds_2=
  b.asm.Jo).apply(null,arguments)},or=b._emscripten_bind_btRigidBody_getLinearDamping_0=function(){return(or=b._emscripten_bind_btRigidBody_getLinearDamping_0=b.asm.Ko).apply(null,arguments)},pr=b._emscripten_bind_btRigidBody_getAngularDamping_0=function(){return(pr=b._emscripten_bind_btRigidBody_getAngularDamping_0=b.asm.Lo).apply(null,arguments)},qr=b._emscripten_bind_btRigidBody_setDamping_2=function(){return(qr=b._emscripten_bind_btRigidBody_setDamping_2=b.asm.Mo).apply(null,arguments)},rr=b._emscripten_bind_btRigidBody_setMassProps_2=
  function(){return(rr=b._emscripten_bind_btRigidBody_setMassProps_2=b.asm.No).apply(null,arguments)},sr=b._emscripten_bind_btRigidBody_getLinearFactor_0=function(){return(sr=b._emscripten_bind_btRigidBody_getLinearFactor_0=b.asm.Oo).apply(null,arguments)},tr=b._emscripten_bind_btRigidBody_setLinearFactor_1=function(){return(tr=b._emscripten_bind_btRigidBody_setLinearFactor_1=b.asm.Po).apply(null,arguments)},ur=b._emscripten_bind_btRigidBody_applyTorque_1=function(){return(ur=b._emscripten_bind_btRigidBody_applyTorque_1=
  b.asm.Qo).apply(null,arguments)},vr=b._emscripten_bind_btRigidBody_applyLocalTorque_1=function(){return(vr=b._emscripten_bind_btRigidBody_applyLocalTorque_1=b.asm.Ro).apply(null,arguments)},wr=b._emscripten_bind_btRigidBody_applyForce_2=function(){return(wr=b._emscripten_bind_btRigidBody_applyForce_2=b.asm.So).apply(null,arguments)},xr=b._emscripten_bind_btRigidBody_applyCentralForce_1=function(){return(xr=b._emscripten_bind_btRigidBody_applyCentralForce_1=b.asm.To).apply(null,arguments)},yr=b._emscripten_bind_btRigidBody_applyCentralLocalForce_1=
  function(){return(yr=b._emscripten_bind_btRigidBody_applyCentralLocalForce_1=b.asm.Uo).apply(null,arguments)},zr=b._emscripten_bind_btRigidBody_applyTorqueImpulse_1=function(){return(zr=b._emscripten_bind_btRigidBody_applyTorqueImpulse_1=b.asm.Vo).apply(null,arguments)},Ar=b._emscripten_bind_btRigidBody_applyImpulse_2=function(){return(Ar=b._emscripten_bind_btRigidBody_applyImpulse_2=b.asm.Wo).apply(null,arguments)},Br=b._emscripten_bind_btRigidBody_applyCentralImpulse_1=function(){return(Br=b._emscripten_bind_btRigidBody_applyCentralImpulse_1=
  b.asm.Xo).apply(null,arguments)},Cr=b._emscripten_bind_btRigidBody_updateInertiaTensor_0=function(){return(Cr=b._emscripten_bind_btRigidBody_updateInertiaTensor_0=b.asm.Yo).apply(null,arguments)},Dr=b._emscripten_bind_btRigidBody_getLinearVelocity_0=function(){return(Dr=b._emscripten_bind_btRigidBody_getLinearVelocity_0=b.asm.Zo).apply(null,arguments)},Er=b._emscripten_bind_btRigidBody_getAngularVelocity_0=function(){return(Er=b._emscripten_bind_btRigidBody_getAngularVelocity_0=b.asm._o).apply(null,
  arguments)},Fr=b._emscripten_bind_btRigidBody_setLinearVelocity_1=function(){return(Fr=b._emscripten_bind_btRigidBody_setLinearVelocity_1=b.asm.$o).apply(null,arguments)},Gr=b._emscripten_bind_btRigidBody_setAngularVelocity_1=function(){return(Gr=b._emscripten_bind_btRigidBody_setAngularVelocity_1=b.asm.ap).apply(null,arguments)},Hr=b._emscripten_bind_btRigidBody_getMotionState_0=function(){return(Hr=b._emscripten_bind_btRigidBody_getMotionState_0=b.asm.bp).apply(null,arguments)},Ir=b._emscripten_bind_btRigidBody_setMotionState_1=
  function(){return(Ir=b._emscripten_bind_btRigidBody_setMotionState_1=b.asm.cp).apply(null,arguments)},Jr=b._emscripten_bind_btRigidBody_getAngularFactor_0=function(){return(Jr=b._emscripten_bind_btRigidBody_getAngularFactor_0=b.asm.dp).apply(null,arguments)},Kr=b._emscripten_bind_btRigidBody_setAngularFactor_1=function(){return(Kr=b._emscripten_bind_btRigidBody_setAngularFactor_1=b.asm.ep).apply(null,arguments)},Lr=b._emscripten_bind_btRigidBody_upcast_1=function(){return(Lr=b._emscripten_bind_btRigidBody_upcast_1=
  b.asm.fp).apply(null,arguments)},Mr=b._emscripten_bind_btRigidBody_getAabb_2=function(){return(Mr=b._emscripten_bind_btRigidBody_getAabb_2=b.asm.gp).apply(null,arguments)},Nr=b._emscripten_bind_btRigidBody_applyGravity_0=function(){return(Nr=b._emscripten_bind_btRigidBody_applyGravity_0=b.asm.hp).apply(null,arguments)},Or=b._emscripten_bind_btRigidBody_getGravity_0=function(){return(Or=b._emscripten_bind_btRigidBody_getGravity_0=b.asm.ip).apply(null,arguments)},Pr=b._emscripten_bind_btRigidBody_setGravity_1=
  function(){return(Pr=b._emscripten_bind_btRigidBody_setGravity_1=b.asm.jp).apply(null,arguments)},Qr=b._emscripten_bind_btRigidBody_getBroadphaseProxy_0=function(){return(Qr=b._emscripten_bind_btRigidBody_getBroadphaseProxy_0=b.asm.kp).apply(null,arguments)},Rr=b._emscripten_bind_btRigidBody_clearForces_0=function(){return(Rr=b._emscripten_bind_btRigidBody_clearForces_0=b.asm.lp).apply(null,arguments)},Sr=b._emscripten_bind_btRigidBody_setAnisotropicFriction_2=function(){return(Sr=b._emscripten_bind_btRigidBody_setAnisotropicFriction_2=
  b.asm.mp).apply(null,arguments)},Tr=b._emscripten_bind_btRigidBody_getCollisionShape_0=function(){return(Tr=b._emscripten_bind_btRigidBody_getCollisionShape_0=b.asm.np).apply(null,arguments)},Ur=b._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=function(){return(Ur=b._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=b.asm.op).apply(null,arguments)},Vr=b._emscripten_bind_btRigidBody_setActivationState_1=function(){return(Vr=b._emscripten_bind_btRigidBody_setActivationState_1=
  b.asm.pp).apply(null,arguments)},Wr=b._emscripten_bind_btRigidBody_forceActivationState_1=function(){return(Wr=b._emscripten_bind_btRigidBody_forceActivationState_1=b.asm.qp).apply(null,arguments)},Xr=b._emscripten_bind_btRigidBody_activate_0=function(){return(Xr=b._emscripten_bind_btRigidBody_activate_0=b.asm.rp).apply(null,arguments)},Yr=b._emscripten_bind_btRigidBody_activate_1=function(){return(Yr=b._emscripten_bind_btRigidBody_activate_1=b.asm.sp).apply(null,arguments)},Zr=b._emscripten_bind_btRigidBody_isActive_0=
  function(){return(Zr=b._emscripten_bind_btRigidBody_isActive_0=b.asm.tp).apply(null,arguments)},$r=b._emscripten_bind_btRigidBody_isKinematicObject_0=function(){return($r=b._emscripten_bind_btRigidBody_isKinematicObject_0=b.asm.up).apply(null,arguments)},as=b._emscripten_bind_btRigidBody_isStaticObject_0=function(){return(as=b._emscripten_bind_btRigidBody_isStaticObject_0=b.asm.vp).apply(null,arguments)},bs=b._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=function(){return(bs=b._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=
  b.asm.wp).apply(null,arguments)},cs=b._emscripten_bind_btRigidBody_getRestitution_0=function(){return(cs=b._emscripten_bind_btRigidBody_getRestitution_0=b.asm.xp).apply(null,arguments)},ds=b._emscripten_bind_btRigidBody_getFriction_0=function(){return(ds=b._emscripten_bind_btRigidBody_getFriction_0=b.asm.yp).apply(null,arguments)},es=b._emscripten_bind_btRigidBody_getRollingFriction_0=function(){return(es=b._emscripten_bind_btRigidBody_getRollingFriction_0=b.asm.zp).apply(null,arguments)},gs=b._emscripten_bind_btRigidBody_setRestitution_1=
  function(){return(gs=b._emscripten_bind_btRigidBody_setRestitution_1=b.asm.Ap).apply(null,arguments)},hs=b._emscripten_bind_btRigidBody_setFriction_1=function(){return(hs=b._emscripten_bind_btRigidBody_setFriction_1=b.asm.Bp).apply(null,arguments)},is=b._emscripten_bind_btRigidBody_setRollingFriction_1=function(){return(is=b._emscripten_bind_btRigidBody_setRollingFriction_1=b.asm.Cp).apply(null,arguments)},js=b._emscripten_bind_btRigidBody_getWorldTransform_0=function(){return(js=b._emscripten_bind_btRigidBody_getWorldTransform_0=
  b.asm.Dp).apply(null,arguments)},ks=b._emscripten_bind_btRigidBody_getCollisionFlags_0=function(){return(ks=b._emscripten_bind_btRigidBody_getCollisionFlags_0=b.asm.Ep).apply(null,arguments)},ls=b._emscripten_bind_btRigidBody_setCollisionFlags_1=function(){return(ls=b._emscripten_bind_btRigidBody_setCollisionFlags_1=b.asm.Fp).apply(null,arguments)},ms=b._emscripten_bind_btRigidBody_setWorldTransform_1=function(){return(ms=b._emscripten_bind_btRigidBody_setWorldTransform_1=b.asm.Gp).apply(null,arguments)},
  ns=b._emscripten_bind_btRigidBody_setCollisionShape_1=function(){return(ns=b._emscripten_bind_btRigidBody_setCollisionShape_1=b.asm.Hp).apply(null,arguments)},ps=b._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=function(){return(ps=b._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=b.asm.Ip).apply(null,arguments)},qs=b._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=function(){return(qs=b._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=b.asm.Jp).apply(null,arguments)},rs=b._emscripten_bind_btRigidBody_getUserIndex_0=
  function(){return(rs=b._emscripten_bind_btRigidBody_getUserIndex_0=b.asm.Kp).apply(null,arguments)},ss=b._emscripten_bind_btRigidBody_setUserIndex_1=function(){return(ss=b._emscripten_bind_btRigidBody_setUserIndex_1=b.asm.Lp).apply(null,arguments)},ts=b._emscripten_bind_btRigidBody_getUserPointer_0=function(){return(ts=b._emscripten_bind_btRigidBody_getUserPointer_0=b.asm.Mp).apply(null,arguments)},us=b._emscripten_bind_btRigidBody_setUserPointer_1=function(){return(us=b._emscripten_bind_btRigidBody_setUserPointer_1=
  b.asm.Np).apply(null,arguments)},vs=b._emscripten_bind_btRigidBody_getBroadphaseHandle_0=function(){return(vs=b._emscripten_bind_btRigidBody_getBroadphaseHandle_0=b.asm.Op).apply(null,arguments)},xs=b._emscripten_bind_btRigidBody___destroy___0=function(){return(xs=b._emscripten_bind_btRigidBody___destroy___0=b.asm.Pp).apply(null,arguments)},ys=b._emscripten_bind_btConstraintSetting_btConstraintSetting_0=function(){return(ys=b._emscripten_bind_btConstraintSetting_btConstraintSetting_0=b.asm.Qp).apply(null,
  arguments)},zs=b._emscripten_bind_btConstraintSetting_get_m_tau_0=function(){return(zs=b._emscripten_bind_btConstraintSetting_get_m_tau_0=b.asm.Rp).apply(null,arguments)},As=b._emscripten_bind_btConstraintSetting_set_m_tau_1=function(){return(As=b._emscripten_bind_btConstraintSetting_set_m_tau_1=b.asm.Sp).apply(null,arguments)},Bs=b._emscripten_bind_btConstraintSetting_get_m_damping_0=function(){return(Bs=b._emscripten_bind_btConstraintSetting_get_m_damping_0=b.asm.Tp).apply(null,arguments)},Cs=b._emscripten_bind_btConstraintSetting_set_m_damping_1=
  function(){return(Cs=b._emscripten_bind_btConstraintSetting_set_m_damping_1=b.asm.Up).apply(null,arguments)},Ds=b._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=function(){return(Ds=b._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=b.asm.Vp).apply(null,arguments)},Es=b._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=function(){return(Es=b._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=b.asm.Wp).apply(null,arguments)},Fs=b._emscripten_bind_btConstraintSetting___destroy___0=
  function(){return(Fs=b._emscripten_bind_btConstraintSetting___destroy___0=b.asm.Xp).apply(null,arguments)},Gs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=function(){return(Gs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=b.asm.Yp).apply(null,arguments)},Hs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=function(){return(Hs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=b.asm.Zp).apply(null,arguments)},Is=b._emscripten_bind_btPoint2PointConstraint_setPivotA_1=
  function(){return(Is=b._emscripten_bind_btPoint2PointConstraint_setPivotA_1=b.asm._p).apply(null,arguments)},Js=b._emscripten_bind_btPoint2PointConstraint_setPivotB_1=function(){return(Js=b._emscripten_bind_btPoint2PointConstraint_setPivotB_1=b.asm.$p).apply(null,arguments)},Ks=b._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=function(){return(Ks=b._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=b.asm.aq).apply(null,arguments)},Ls=b._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=
  function(){return(Ls=b._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=b.asm.bq).apply(null,arguments)},Ms=b._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=function(){return(Ms=b._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=b.asm.cq).apply(null,arguments)},Ns=b._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=function(){return(Ns=b._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=b.asm.dq).apply(null,arguments)},Os=b._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=
  function(){return(Os=b._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=b.asm.eq).apply(null,arguments)},Ps=b._emscripten_bind_btPoint2PointConstraint_getParam_2=function(){return(Ps=b._emscripten_bind_btPoint2PointConstraint_getParam_2=b.asm.fq).apply(null,arguments)},Qs=b._emscripten_bind_btPoint2PointConstraint_setParam_3=function(){return(Qs=b._emscripten_bind_btPoint2PointConstraint_setParam_3=b.asm.gq).apply(null,arguments)},Rs=b._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=
  function(){return(Rs=b._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=b.asm.hq).apply(null,arguments)},Ss=b._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=function(){return(Ss=b._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=b.asm.iq).apply(null,arguments)},Ts=b._emscripten_bind_btPoint2PointConstraint___destroy___0=function(){return(Ts=b._emscripten_bind_btPoint2PointConstraint___destroy___0=b.asm.jq).apply(null,arguments)},Us=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=
  function(){return(Us=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=b.asm.kq).apply(null,arguments)},Vs=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=function(){return(Vs=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=b.asm.lq).apply(null,arguments)},Ws=b._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=function(){return(Ws=b._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=
  b.asm.mq).apply(null,arguments)},Xs=b._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=function(){return(Xs=b._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=b.asm.nq).apply(null,arguments)},Ys=b._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=function(){return(Ys=b._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=b.asm.oq).apply(null,arguments)},Zs=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=function(){return(Zs=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=
  b.asm.pq).apply(null,arguments)},$s=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=function(){return($s=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=b.asm.qq).apply(null,arguments)},at=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=function(){return(at=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=b.asm.rq).apply(null,arguments)},bt=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=
  function(){return(bt=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=b.asm.sq).apply(null,arguments)},ct=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=function(){return(ct=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=b.asm.tq).apply(null,arguments)},dt=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=function(){return(dt=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=b.asm.uq).apply(null,
  arguments)},et=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=function(){return(et=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=b.asm.vq).apply(null,arguments)},ft=b._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=function(){return(ft=b._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=b.asm.wq).apply(null,arguments)},gt=b._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=function(){return(gt=b._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=
  b.asm.xq).apply(null,arguments)},ht=b._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=function(){return(ht=b._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=b.asm.yq).apply(null,arguments)},it=b._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=function(){return(it=b._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=b.asm.zq).apply(null,arguments)},jt=b._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=
  function(){return(jt=b._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=b.asm.Aq).apply(null,arguments)},kt=b._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=function(){return(kt=b._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=b.asm.Bq).apply(null,arguments)},lt=b._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=function(){return(lt=b._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=b.asm.Cq).apply(null,arguments)},mt=b._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=
  function(){return(mt=b._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=b.asm.Dq).apply(null,arguments)},nt=b._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=function(){return(nt=b._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=b.asm.Eq).apply(null,arguments)},ot=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=function(){return(ot=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=b.asm.Fq).apply(null,
  arguments)},pt=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=function(){return(pt=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=b.asm.Gq).apply(null,arguments)},qt=b._emscripten_bind_btConeTwistConstraint_setLimit_2=function(){return(qt=b._emscripten_bind_btConeTwistConstraint_setLimit_2=b.asm.Hq).apply(null,arguments)},rt=b._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=function(){return(rt=b._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=b.asm.Iq).apply(null,
  arguments)},st=b._emscripten_bind_btConeTwistConstraint_setDamping_1=function(){return(st=b._emscripten_bind_btConeTwistConstraint_setDamping_1=b.asm.Jq).apply(null,arguments)},tt=b._emscripten_bind_btConeTwistConstraint_enableMotor_1=function(){return(tt=b._emscripten_bind_btConeTwistConstraint_enableMotor_1=b.asm.Kq).apply(null,arguments)},ut=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=function(){return(ut=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=b.asm.Lq).apply(null,
  arguments)},vt=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=function(){return(vt=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=b.asm.Mq).apply(null,arguments)},wt=b._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=function(){return(wt=b._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=b.asm.Nq).apply(null,arguments)},xt=b._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=function(){return(xt=b._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=
  b.asm.Oq).apply(null,arguments)},yt=b._emscripten_bind_btConeTwistConstraint_enableFeedback_1=function(){return(yt=b._emscripten_bind_btConeTwistConstraint_enableFeedback_1=b.asm.Pq).apply(null,arguments)},zt=b._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=function(){return(zt=b._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=b.asm.Qq).apply(null,arguments)},At=b._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=function(){return(At=b._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=
  b.asm.Rq).apply(null,arguments)},Bt=b._emscripten_bind_btConeTwistConstraint_getParam_2=function(){return(Bt=b._emscripten_bind_btConeTwistConstraint_getParam_2=b.asm.Sq).apply(null,arguments)},Ct=b._emscripten_bind_btConeTwistConstraint_setParam_3=function(){return(Ct=b._emscripten_bind_btConeTwistConstraint_setParam_3=b.asm.Tq).apply(null,arguments)},Dt=b._emscripten_bind_btConeTwistConstraint___destroy___0=function(){return(Dt=b._emscripten_bind_btConeTwistConstraint___destroy___0=b.asm.Uq).apply(null,
  arguments)},Et=b._emscripten_bind_btHingeConstraint_btHingeConstraint_2=function(){return(Et=b._emscripten_bind_btHingeConstraint_btHingeConstraint_2=b.asm.Vq).apply(null,arguments)},Ft=b._emscripten_bind_btHingeConstraint_btHingeConstraint_3=function(){return(Ft=b._emscripten_bind_btHingeConstraint_btHingeConstraint_3=b.asm.Wq).apply(null,arguments)},Gt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_4=function(){return(Gt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_4=b.asm.Xq).apply(null,
  arguments)},Ht=b._emscripten_bind_btHingeConstraint_btHingeConstraint_5=function(){return(Ht=b._emscripten_bind_btHingeConstraint_btHingeConstraint_5=b.asm.Yq).apply(null,arguments)},It=b._emscripten_bind_btHingeConstraint_btHingeConstraint_6=function(){return(It=b._emscripten_bind_btHingeConstraint_btHingeConstraint_6=b.asm.Zq).apply(null,arguments)},Jt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_7=function(){return(Jt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_7=b.asm._q).apply(null,
  arguments)},Kt=b._emscripten_bind_btHingeConstraint_getHingeAngle_0=function(){return(Kt=b._emscripten_bind_btHingeConstraint_getHingeAngle_0=b.asm.$q).apply(null,arguments)},Lt=b._emscripten_bind_btHingeConstraint_setLimit_4=function(){return(Lt=b._emscripten_bind_btHingeConstraint_setLimit_4=b.asm.ar).apply(null,arguments)},Mt=b._emscripten_bind_btHingeConstraint_setLimit_5=function(){return(Mt=b._emscripten_bind_btHingeConstraint_setLimit_5=b.asm.br).apply(null,arguments)},Nt=b._emscripten_bind_btHingeConstraint_enableAngularMotor_3=
  function(){return(Nt=b._emscripten_bind_btHingeConstraint_enableAngularMotor_3=b.asm.cr).apply(null,arguments)},Ot=b._emscripten_bind_btHingeConstraint_setAngularOnly_1=function(){return(Ot=b._emscripten_bind_btHingeConstraint_setAngularOnly_1=b.asm.dr).apply(null,arguments)},Pt=b._emscripten_bind_btHingeConstraint_enableMotor_1=function(){return(Pt=b._emscripten_bind_btHingeConstraint_enableMotor_1=b.asm.er).apply(null,arguments)},Qt=b._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=function(){return(Qt=
  b._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=b.asm.fr).apply(null,arguments)},Rt=b._emscripten_bind_btHingeConstraint_setMotorTarget_2=function(){return(Rt=b._emscripten_bind_btHingeConstraint_setMotorTarget_2=b.asm.gr).apply(null,arguments)},St=b._emscripten_bind_btHingeConstraint_enableFeedback_1=function(){return(St=b._emscripten_bind_btHingeConstraint_enableFeedback_1=b.asm.hr).apply(null,arguments)},Tt=b._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=function(){return(Tt=
  b._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=b.asm.ir).apply(null,arguments)},Ut=b._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=function(){return(Ut=b._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=b.asm.jr).apply(null,arguments)},Vt=b._emscripten_bind_btHingeConstraint_getParam_2=function(){return(Vt=b._emscripten_bind_btHingeConstraint_getParam_2=b.asm.kr).apply(null,arguments)},Wt=b._emscripten_bind_btHingeConstraint_setParam_3=function(){return(Wt=
  b._emscripten_bind_btHingeConstraint_setParam_3=b.asm.lr).apply(null,arguments)},Xt=b._emscripten_bind_btHingeConstraint___destroy___0=function(){return(Xt=b._emscripten_bind_btHingeConstraint___destroy___0=b.asm.mr).apply(null,arguments)},Yt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_3=function(){return(Yt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_3=b.asm.nr).apply(null,arguments)},Zt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_5=function(){return(Zt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_5=
  b.asm.or).apply(null,arguments)},$t=b._emscripten_bind_btSliderConstraint_getLinearPos_0=function(){return($t=b._emscripten_bind_btSliderConstraint_getLinearPos_0=b.asm.pr).apply(null,arguments)},au=b._emscripten_bind_btSliderConstraint_getAngularPos_0=function(){return(au=b._emscripten_bind_btSliderConstraint_getAngularPos_0=b.asm.qr).apply(null,arguments)},bu=b._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=function(){return(bu=b._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=b.asm.rr).apply(null,
  arguments)},cu=b._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=function(){return(cu=b._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=b.asm.sr).apply(null,arguments)},du=b._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=function(){return(du=b._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=b.asm.tr).apply(null,arguments)},eu=b._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=function(){return(eu=b._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=b.asm.ur).apply(null,
  arguments)},fu=b._emscripten_bind_btSliderConstraint_setPoweredLinMotor_1=function(){return(fu=b._emscripten_bind_btSliderConstraint_setPoweredLinMotor_1=b.asm.vr).apply(null,arguments)},gu=b._emscripten_bind_btSliderConstraint_setMaxLinMotorForce_1=function(){return(gu=b._emscripten_bind_btSliderConstraint_setMaxLinMotorForce_1=b.asm.wr).apply(null,arguments)},hu=b._emscripten_bind_btSliderConstraint_setTargetLinMotorVelocity_1=function(){return(hu=b._emscripten_bind_btSliderConstraint_setTargetLinMotorVelocity_1=
  b.asm.xr).apply(null,arguments)},iu=b._emscripten_bind_btSliderConstraint_enableFeedback_1=function(){return(iu=b._emscripten_bind_btSliderConstraint_enableFeedback_1=b.asm.yr).apply(null,arguments)},ju=b._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=function(){return(ju=b._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=b.asm.zr).apply(null,arguments)},ku=b._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=function(){return(ku=b._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=
  b.asm.Ar).apply(null,arguments)},lu=b._emscripten_bind_btSliderConstraint_getParam_2=function(){return(lu=b._emscripten_bind_btSliderConstraint_getParam_2=b.asm.Br).apply(null,arguments)},mu=b._emscripten_bind_btSliderConstraint_setParam_3=function(){return(mu=b._emscripten_bind_btSliderConstraint_setParam_3=b.asm.Cr).apply(null,arguments)},nu=b._emscripten_bind_btSliderConstraint___destroy___0=function(){return(nu=b._emscripten_bind_btSliderConstraint___destroy___0=b.asm.Dr).apply(null,arguments)},
  ou=b._emscripten_bind_btFixedConstraint_btFixedConstraint_4=function(){return(ou=b._emscripten_bind_btFixedConstraint_btFixedConstraint_4=b.asm.Er).apply(null,arguments)},pu=b._emscripten_bind_btFixedConstraint_enableFeedback_1=function(){return(pu=b._emscripten_bind_btFixedConstraint_enableFeedback_1=b.asm.Fr).apply(null,arguments)},qu=b._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=function(){return(qu=b._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=b.asm.Gr).apply(null,
  arguments)},ru=b._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=function(){return(ru=b._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=b.asm.Hr).apply(null,arguments)},su=b._emscripten_bind_btFixedConstraint_getParam_2=function(){return(su=b._emscripten_bind_btFixedConstraint_getParam_2=b.asm.Ir).apply(null,arguments)},tu=b._emscripten_bind_btFixedConstraint_setParam_3=function(){return(tu=b._emscripten_bind_btFixedConstraint_setParam_3=b.asm.Jr).apply(null,arguments)},
  uu=b._emscripten_bind_btFixedConstraint___destroy___0=function(){return(uu=b._emscripten_bind_btFixedConstraint___destroy___0=b.asm.Kr).apply(null,arguments)},vu=b._emscripten_bind_btConstraintSolver___destroy___0=function(){return(vu=b._emscripten_bind_btConstraintSolver___destroy___0=b.asm.Lr).apply(null,arguments)},wu=b._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=function(){return(wu=b._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=b.asm.Mr).apply(null,arguments)},xu=b._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=
  function(){return(xu=b._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=b.asm.Nr).apply(null,arguments)},yu=b._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=function(){return(yu=b._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=b.asm.Or).apply(null,arguments)},zu=b._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=function(){return(zu=b._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=b.asm.Pr).apply(null,arguments)},Au=b._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=function(){return(Au=
  b._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=b.asm.Qr).apply(null,arguments)},Bu=b._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=function(){return(Bu=b._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=b.asm.Rr).apply(null,arguments)},Cu=b._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=function(){return(Cu=b._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=b.asm.Sr).apply(null,arguments)},Du=b._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=function(){return(Du=
  b._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=b.asm.Tr).apply(null,arguments)},Eu=b._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=function(){return(Eu=b._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=b.asm.Ur).apply(null,arguments)},Fu=b._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=function(){return(Fu=b._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=b.asm.Vr).apply(null,arguments)},Gu=b._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=function(){return(Gu=
  b._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=b.asm.Wr).apply(null,arguments)},Hu=b._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=function(){return(Hu=b._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=b.asm.Xr).apply(null,arguments)},Iu=b._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=function(){return(Iu=b._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=b.asm.Yr).apply(null,arguments)},Ju=b._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=function(){return(Ju=
  b._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=b.asm.Zr).apply(null,arguments)},Ku=b._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=function(){return(Ku=b._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=b.asm._r).apply(null,arguments)},Lu=b._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=function(){return(Lu=b._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=b.asm.$r).apply(null,arguments)},Mu=b._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=function(){return(Mu=b._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=
  b.asm.as).apply(null,arguments)},Nu=b._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=function(){return(Nu=b._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=b.asm.bs).apply(null,arguments)},Ou=b._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=function(){return(Ou=b._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=b.asm.cs).apply(null,arguments)},Pu=b._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=
  function(){return(Pu=b._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=b.asm.ds).apply(null,arguments)},Qu=b._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=function(){return(Qu=b._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=b.asm.es).apply(null,arguments)},Ru=b._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=function(){return(Ru=b._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=
  b.asm.fs).apply(null,arguments)},Su=b._emscripten_bind_btDispatcherInfo___destroy___0=function(){return(Su=b._emscripten_bind_btDispatcherInfo___destroy___0=b.asm.gs).apply(null,arguments)},Tu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=function(){return(Tu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=b.asm.hs).apply(null,arguments)},Uu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=function(){return(Uu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=
  b.asm.is).apply(null,arguments)},Vu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=function(){return(Vu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=b.asm.js).apply(null,arguments)},Wu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=function(){return(Wu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=b.asm.ks).apply(null,arguments)},Xu=b._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=
  function(){return(Xu=b._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=b.asm.ls).apply(null,arguments)},Yu=b._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=function(){return(Yu=b._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=b.asm.ms).apply(null,arguments)},Zu=b._emscripten_bind_btContactSolverInfo___destroy___0=function(){return(Zu=b._emscripten_bind_btContactSolverInfo___destroy___0=b.asm.ns).apply(null,arguments)},$u=b._emscripten_bind_btVehicleTuning_btVehicleTuning_0=
  function(){return($u=b._emscripten_bind_btVehicleTuning_btVehicleTuning_0=b.asm.os).apply(null,arguments)},av=b._emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=function(){return(av=b._emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=b.asm.ps).apply(null,arguments)},bv=b._emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=function(){return(bv=b._emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=b.asm.qs).apply(null,arguments)},cv=b._emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=
  function(){return(cv=b._emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=b.asm.rs).apply(null,arguments)},dv=b._emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=function(){return(dv=b._emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=b.asm.ss).apply(null,arguments)},ev=b._emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=function(){return(ev=b._emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=b.asm.ts).apply(null,arguments)},fv=b._emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=
  function(){return(fv=b._emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=b.asm.us).apply(null,arguments)},gv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=function(){return(gv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=b.asm.vs).apply(null,arguments)},hv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=function(){return(hv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=b.asm.ws).apply(null,arguments)},iv=b._emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=
  function(){return(iv=b._emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=b.asm.xs).apply(null,arguments)},jv=b._emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=function(){return(jv=b._emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=b.asm.ys).apply(null,arguments)},kv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=function(){return(kv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=b.asm.zs).apply(null,arguments)},lv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=
  function(){return(lv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=b.asm.As).apply(null,arguments)},mv=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0=function(){return(mv=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0=b.asm.Bs).apply(null,arguments)},nv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1=function(){return(nv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1=b.asm.Cs).apply(null,arguments)},
  ov=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0=function(){return(ov=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0=b.asm.Ds).apply(null,arguments)},pv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1=function(){return(pv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1=b.asm.Es).apply(null,arguments)},qv=b._emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0=function(){return(qv=b._emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0=
  b.asm.Fs).apply(null,arguments)},rv=b._emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1=function(){return(rv=b._emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1=b.asm.Gs).apply(null,arguments)},sv=b._emscripten_bind_btVehicleRaycasterResult___destroy___0=function(){return(sv=b._emscripten_bind_btVehicleRaycasterResult___destroy___0=b.asm.Hs).apply(null,arguments)},tv=b._emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=function(){return(tv=b._emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=
  b.asm.Is).apply(null,arguments)},uv=b._emscripten_bind_btDefaultVehicleRaycaster_castRay_3=function(){return(uv=b._emscripten_bind_btDefaultVehicleRaycaster_castRay_3=b.asm.Js).apply(null,arguments)},vv=b._emscripten_bind_btDefaultVehicleRaycaster___destroy___0=function(){return(vv=b._emscripten_bind_btDefaultVehicleRaycaster___destroy___0=b.asm.Ks).apply(null,arguments)},wv=b._emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=function(){return(wv=b._emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=
  b.asm.Ls).apply(null,arguments)},xv=b._emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=function(){return(xv=b._emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=b.asm.Ms).apply(null,arguments)},yv=b._emscripten_bind_RaycastInfo_get_m_contactPointWS_0=function(){return(yv=b._emscripten_bind_RaycastInfo_get_m_contactPointWS_0=b.asm.Ns).apply(null,arguments)},zv=b._emscripten_bind_RaycastInfo_set_m_contactPointWS_1=function(){return(zv=b._emscripten_bind_RaycastInfo_set_m_contactPointWS_1=b.asm.Os).apply(null,
  arguments)},Av=b._emscripten_bind_RaycastInfo_get_m_suspensionLength_0=function(){return(Av=b._emscripten_bind_RaycastInfo_get_m_suspensionLength_0=b.asm.Ps).apply(null,arguments)},Bv=b._emscripten_bind_RaycastInfo_set_m_suspensionLength_1=function(){return(Bv=b._emscripten_bind_RaycastInfo_set_m_suspensionLength_1=b.asm.Qs).apply(null,arguments)},Cv=b._emscripten_bind_RaycastInfo_get_m_hardPointWS_0=function(){return(Cv=b._emscripten_bind_RaycastInfo_get_m_hardPointWS_0=b.asm.Rs).apply(null,arguments)},
  Dv=b._emscripten_bind_RaycastInfo_set_m_hardPointWS_1=function(){return(Dv=b._emscripten_bind_RaycastInfo_set_m_hardPointWS_1=b.asm.Ss).apply(null,arguments)},Ev=b._emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=function(){return(Ev=b._emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=b.asm.Ts).apply(null,arguments)},Fv=b._emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=function(){return(Fv=b._emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=b.asm.Us).apply(null,arguments)},Gv=b._emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=
  function(){return(Gv=b._emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=b.asm.Vs).apply(null,arguments)},Hv=b._emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=function(){return(Hv=b._emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=b.asm.Ws).apply(null,arguments)},Iv=b._emscripten_bind_RaycastInfo_get_m_isInContact_0=function(){return(Iv=b._emscripten_bind_RaycastInfo_get_m_isInContact_0=b.asm.Xs).apply(null,arguments)},Jv=b._emscripten_bind_RaycastInfo_set_m_isInContact_1=function(){return(Jv=b._emscripten_bind_RaycastInfo_set_m_isInContact_1=
  b.asm.Ys).apply(null,arguments)},Kv=b._emscripten_bind_RaycastInfo_get_m_groundObject_0=function(){return(Kv=b._emscripten_bind_RaycastInfo_get_m_groundObject_0=b.asm.Zs).apply(null,arguments)},Lv=b._emscripten_bind_RaycastInfo_set_m_groundObject_1=function(){return(Lv=b._emscripten_bind_RaycastInfo_set_m_groundObject_1=b.asm._s).apply(null,arguments)},Mv=b._emscripten_bind_RaycastInfo___destroy___0=function(){return(Mv=b._emscripten_bind_RaycastInfo___destroy___0=b.asm.$s).apply(null,arguments)},
  Nv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0=function(){return(Nv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0=b.asm.at).apply(null,arguments)},Ov=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1=function(){return(Ov=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1=b.asm.bt).apply(null,arguments)},Pv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0=function(){return(Pv=
  b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0=b.asm.ct).apply(null,arguments)},Qv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1=function(){return(Qv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1=b.asm.dt).apply(null,arguments)},Rv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0=function(){return(Rv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0=b.asm.et).apply(null,arguments)},Sv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1=
  function(){return(Sv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1=b.asm.ft).apply(null,arguments)},Tv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0=function(){return(Tv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0=b.asm.gt).apply(null,arguments)},Uv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1=function(){return(Uv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1=
  b.asm.ht).apply(null,arguments)},Vv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0=function(){return(Vv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0=b.asm.it).apply(null,arguments)},Wv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1=function(){return(Wv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1=b.asm.jt).apply(null,arguments)},Xv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0=
  function(){return(Xv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0=b.asm.kt).apply(null,arguments)},Yv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1=function(){return(Yv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1=b.asm.lt).apply(null,arguments)},Zv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0=function(){return(Zv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0=b.asm.mt).apply(null,
  arguments)},$v=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1=function(){return($v=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1=b.asm.nt).apply(null,arguments)},aw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0=function(){return(aw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0=b.asm.ot).apply(null,arguments)},bw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1=
  function(){return(bw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1=b.asm.pt).apply(null,arguments)},cw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0=function(){return(cw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0=b.asm.qt).apply(null,arguments)},dw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1=function(){return(dw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1=
  b.asm.rt).apply(null,arguments)},ew=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0=function(){return(ew=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0=b.asm.st).apply(null,arguments)},fw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1=function(){return(fw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1=b.asm.tt).apply(null,arguments)},gw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0=function(){return(gw=
  b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0=b.asm.ut).apply(null,arguments)},hw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1=function(){return(hw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1=b.asm.vt).apply(null,arguments)},iw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0=function(){return(iw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0=b.asm.wt).apply(null,arguments)},
  jw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1=function(){return(jw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1=b.asm.xt).apply(null,arguments)},kw=b._emscripten_bind_btWheelInfoConstructionInfo___destroy___0=function(){return(kw=b._emscripten_bind_btWheelInfoConstructionInfo___destroy___0=b.asm.yt).apply(null,arguments)},lw=b._emscripten_bind_btWheelInfo_btWheelInfo_1=function(){return(lw=b._emscripten_bind_btWheelInfo_btWheelInfo_1=b.asm.zt).apply(null,
  arguments)},mw=b._emscripten_bind_btWheelInfo_getSuspensionRestLength_0=function(){return(mw=b._emscripten_bind_btWheelInfo_getSuspensionRestLength_0=b.asm.At).apply(null,arguments)},nw=b._emscripten_bind_btWheelInfo_updateWheel_2=function(){return(nw=b._emscripten_bind_btWheelInfo_updateWheel_2=b.asm.Bt).apply(null,arguments)},ow=b._emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=function(){return(ow=b._emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=b.asm.Ct).apply(null,arguments)},
  pw=b._emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=function(){return(pw=b._emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=b.asm.Dt).apply(null,arguments)},qw=b._emscripten_bind_btWheelInfo_get_m_frictionSlip_0=function(){return(qw=b._emscripten_bind_btWheelInfo_get_m_frictionSlip_0=b.asm.Et).apply(null,arguments)},rw=b._emscripten_bind_btWheelInfo_set_m_frictionSlip_1=function(){return(rw=b._emscripten_bind_btWheelInfo_set_m_frictionSlip_1=b.asm.Ft).apply(null,arguments)},sw=b._emscripten_bind_btWheelInfo_get_m_engineForce_0=
  function(){return(sw=b._emscripten_bind_btWheelInfo_get_m_engineForce_0=b.asm.Gt).apply(null,arguments)},tw=b._emscripten_bind_btWheelInfo_set_m_engineForce_1=function(){return(tw=b._emscripten_bind_btWheelInfo_set_m_engineForce_1=b.asm.Ht).apply(null,arguments)},uw=b._emscripten_bind_btWheelInfo_get_m_rollInfluence_0=function(){return(uw=b._emscripten_bind_btWheelInfo_get_m_rollInfluence_0=b.asm.It).apply(null,arguments)},vw=b._emscripten_bind_btWheelInfo_set_m_rollInfluence_1=function(){return(vw=
  b._emscripten_bind_btWheelInfo_set_m_rollInfluence_1=b.asm.Jt).apply(null,arguments)},ww=b._emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=function(){return(ww=b._emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=b.asm.Kt).apply(null,arguments)},xw=b._emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=function(){return(xw=b._emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=b.asm.Lt).apply(null,arguments)},yw=b._emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=function(){return(yw=
  b._emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=b.asm.Mt).apply(null,arguments)},zw=b._emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=function(){return(zw=b._emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=b.asm.Nt).apply(null,arguments)},Aw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=function(){return(Aw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=b.asm.Ot).apply(null,arguments)},Bw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=function(){return(Bw=
  b._emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=b.asm.Pt).apply(null,arguments)},Cw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=function(){return(Cw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=b.asm.Qt).apply(null,arguments)},Dw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=function(){return(Dw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=b.asm.Rt).apply(null,arguments)},Ew=b._emscripten_bind_btWheelInfo_get_m_steering_0=
  function(){return(Ew=b._emscripten_bind_btWheelInfo_get_m_steering_0=b.asm.St).apply(null,arguments)},Fw=b._emscripten_bind_btWheelInfo_set_m_steering_1=function(){return(Fw=b._emscripten_bind_btWheelInfo_set_m_steering_1=b.asm.Tt).apply(null,arguments)},Gw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=function(){return(Gw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=b.asm.Ut).apply(null,arguments)},Hw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=function(){return(Hw=
  b._emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=b.asm.Vt).apply(null,arguments)},Iw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=function(){return(Iw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=b.asm.Wt).apply(null,arguments)},Jw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=function(){return(Jw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=b.asm.Xt).apply(null,arguments)},Kw=b._emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=
  function(){return(Kw=b._emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=b.asm.Yt).apply(null,arguments)},Lw=b._emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=function(){return(Lw=b._emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=b.asm.Zt).apply(null,arguments)},Mw=b._emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=function(){return(Mw=b._emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=b.asm._t).apply(null,arguments)},Nw=b._emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=
  function(){return(Nw=b._emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=b.asm.$t).apply(null,arguments)},Ow=b._emscripten_bind_btWheelInfo_get_m_raycastInfo_0=function(){return(Ow=b._emscripten_bind_btWheelInfo_get_m_raycastInfo_0=b.asm.au).apply(null,arguments)},Pw=b._emscripten_bind_btWheelInfo_set_m_raycastInfo_1=function(){return(Pw=b._emscripten_bind_btWheelInfo_set_m_raycastInfo_1=b.asm.bu).apply(null,arguments)},Qw=b._emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=function(){return(Qw=
  b._emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=b.asm.cu).apply(null,arguments)},Rw=b._emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=function(){return(Rw=b._emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=b.asm.du).apply(null,arguments)},Sw=b._emscripten_bind_btWheelInfo_get_m_worldTransform_0=function(){return(Sw=b._emscripten_bind_btWheelInfo_get_m_worldTransform_0=b.asm.eu).apply(null,arguments)},Tw=b._emscripten_bind_btWheelInfo_set_m_worldTransform_1=
  function(){return(Tw=b._emscripten_bind_btWheelInfo_set_m_worldTransform_1=b.asm.fu).apply(null,arguments)},Uw=b._emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0=function(){return(Uw=b._emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0=b.asm.gu).apply(null,arguments)},Vw=b._emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1=function(){return(Vw=b._emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1=b.asm.hu).apply(null,arguments)},Ww=b._emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0=function(){return(Ww=
  b._emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0=b.asm.iu).apply(null,arguments)},Xw=b._emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1=function(){return(Xw=b._emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1=b.asm.ju).apply(null,arguments)},Yw=b._emscripten_bind_btWheelInfo_get_m_rotation_0=function(){return(Yw=b._emscripten_bind_btWheelInfo_get_m_rotation_0=b.asm.ku).apply(null,arguments)},Zw=b._emscripten_bind_btWheelInfo_set_m_rotation_1=function(){return(Zw=b._emscripten_bind_btWheelInfo_set_m_rotation_1=
  b.asm.lu).apply(null,arguments)},$w=b._emscripten_bind_btWheelInfo_get_m_deltaRotation_0=function(){return($w=b._emscripten_bind_btWheelInfo_get_m_deltaRotation_0=b.asm.mu).apply(null,arguments)},ax=b._emscripten_bind_btWheelInfo_set_m_deltaRotation_1=function(){return(ax=b._emscripten_bind_btWheelInfo_set_m_deltaRotation_1=b.asm.nu).apply(null,arguments)},bx=b._emscripten_bind_btWheelInfo_get_m_brake_0=function(){return(bx=b._emscripten_bind_btWheelInfo_get_m_brake_0=b.asm.ou).apply(null,arguments)},
  cx=b._emscripten_bind_btWheelInfo_set_m_brake_1=function(){return(cx=b._emscripten_bind_btWheelInfo_set_m_brake_1=b.asm.pu).apply(null,arguments)},dx=b._emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0=function(){return(dx=b._emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0=b.asm.qu).apply(null,arguments)},ex=b._emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1=function(){return(ex=b._emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1=
  b.asm.ru).apply(null,arguments)},fx=b._emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0=function(){return(fx=b._emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0=b.asm.su).apply(null,arguments)},gx=b._emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1=function(){return(gx=b._emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1=b.asm.tu).apply(null,arguments)},hx=b._emscripten_bind_btWheelInfo_get_m_skidInfo_0=function(){return(hx=b._emscripten_bind_btWheelInfo_get_m_skidInfo_0=
  b.asm.uu).apply(null,arguments)},ix=b._emscripten_bind_btWheelInfo_set_m_skidInfo_1=function(){return(ix=b._emscripten_bind_btWheelInfo_set_m_skidInfo_1=b.asm.vu).apply(null,arguments)},jx=b._emscripten_bind_btWheelInfo___destroy___0=function(){return(jx=b._emscripten_bind_btWheelInfo___destroy___0=b.asm.wu).apply(null,arguments)},kx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=function(){return(kx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=
  b.asm.xu).apply(null,arguments)},lx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=function(){return(lx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=b.asm.yu).apply(null,arguments)},mx=b._emscripten_bind_btKinematicCharacterController_setUpAxis_1=function(){return(mx=b._emscripten_bind_btKinematicCharacterController_setUpAxis_1=b.asm.zu).apply(null,arguments)},nx=b._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=
  function(){return(nx=b._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=b.asm.Au).apply(null,arguments)},ox=b._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=function(){return(ox=b._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=b.asm.Bu).apply(null,arguments)},px=b._emscripten_bind_btKinematicCharacterController_warp_1=function(){return(px=b._emscripten_bind_btKinematicCharacterController_warp_1=b.asm.Cu).apply(null,arguments)},
  qx=b._emscripten_bind_btKinematicCharacterController_preStep_1=function(){return(qx=b._emscripten_bind_btKinematicCharacterController_preStep_1=b.asm.Du).apply(null,arguments)},rx=b._emscripten_bind_btKinematicCharacterController_playerStep_2=function(){return(rx=b._emscripten_bind_btKinematicCharacterController_playerStep_2=b.asm.Eu).apply(null,arguments)},sx=b._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=function(){return(sx=b._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=
  b.asm.Fu).apply(null,arguments)},tx=b._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=function(){return(tx=b._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=b.asm.Gu).apply(null,arguments)},ux=b._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=function(){return(ux=b._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=b.asm.Hu).apply(null,arguments)},vx=b._emscripten_bind_btKinematicCharacterController_canJump_0=function(){return(vx=b._emscripten_bind_btKinematicCharacterController_canJump_0=
  b.asm.Iu).apply(null,arguments)},wx=b._emscripten_bind_btKinematicCharacterController_jump_0=function(){return(wx=b._emscripten_bind_btKinematicCharacterController_jump_0=b.asm.Ju).apply(null,arguments)},xx=b._emscripten_bind_btKinematicCharacterController_setGravity_1=function(){return(xx=b._emscripten_bind_btKinematicCharacterController_setGravity_1=b.asm.Ku).apply(null,arguments)},yx=b._emscripten_bind_btKinematicCharacterController_getGravity_0=function(){return(yx=b._emscripten_bind_btKinematicCharacterController_getGravity_0=
  b.asm.Lu).apply(null,arguments)},zx=b._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=function(){return(zx=b._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=b.asm.Mu).apply(null,arguments)},Ax=b._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=function(){return(Ax=b._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=b.asm.Nu).apply(null,arguments)},Bx=b._emscripten_bind_btKinematicCharacterController_getGhostObject_0=function(){return(Bx=b._emscripten_bind_btKinematicCharacterController_getGhostObject_0=
  b.asm.Ou).apply(null,arguments)},Cx=b._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=function(){return(Cx=b._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=b.asm.Pu).apply(null,arguments)},Dx=b._emscripten_bind_btKinematicCharacterController_onGround_0=function(){return(Dx=b._emscripten_bind_btKinematicCharacterController_onGround_0=b.asm.Qu).apply(null,arguments)},Ex=b._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=function(){return(Ex=
  b._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=b.asm.Ru).apply(null,arguments)},Fx=b._emscripten_bind_btKinematicCharacterController_updateAction_2=function(){return(Fx=b._emscripten_bind_btKinematicCharacterController_updateAction_2=b.asm.Su).apply(null,arguments)},Gx=b._emscripten_bind_btKinematicCharacterController___destroy___0=function(){return(Gx=b._emscripten_bind_btKinematicCharacterController___destroy___0=b.asm.Tu).apply(null,arguments)},Hx=b._emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=
  function(){return(Hx=b._emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=b.asm.Uu).apply(null,arguments)},Ix=b._emscripten_bind_btRaycastVehicle_applyEngineForce_2=function(){return(Ix=b._emscripten_bind_btRaycastVehicle_applyEngineForce_2=b.asm.Vu).apply(null,arguments)},Jx=b._emscripten_bind_btRaycastVehicle_setSteeringValue_2=function(){return(Jx=b._emscripten_bind_btRaycastVehicle_setSteeringValue_2=b.asm.Wu).apply(null,arguments)},Kx=b._emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=
  function(){return(Kx=b._emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=b.asm.Xu).apply(null,arguments)},Lx=b._emscripten_bind_btRaycastVehicle_updateWheelTransform_2=function(){return(Lx=b._emscripten_bind_btRaycastVehicle_updateWheelTransform_2=b.asm.Yu).apply(null,arguments)},Mx=b._emscripten_bind_btRaycastVehicle_addWheel_7=function(){return(Mx=b._emscripten_bind_btRaycastVehicle_addWheel_7=b.asm.Zu).apply(null,arguments)},Nx=b._emscripten_bind_btRaycastVehicle_getNumWheels_0=function(){return(Nx=
  b._emscripten_bind_btRaycastVehicle_getNumWheels_0=b.asm._u).apply(null,arguments)},Ox=b._emscripten_bind_btRaycastVehicle_getRigidBody_0=function(){return(Ox=b._emscripten_bind_btRaycastVehicle_getRigidBody_0=b.asm.$u).apply(null,arguments)},Px=b._emscripten_bind_btRaycastVehicle_getWheelInfo_1=function(){return(Px=b._emscripten_bind_btRaycastVehicle_getWheelInfo_1=b.asm.av).apply(null,arguments)},Qx=b._emscripten_bind_btRaycastVehicle_setBrake_2=function(){return(Qx=b._emscripten_bind_btRaycastVehicle_setBrake_2=
  b.asm.bv).apply(null,arguments)},Rx=b._emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=function(){return(Rx=b._emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=b.asm.cv).apply(null,arguments)},Sx=b._emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=function(){return(Sx=b._emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=b.asm.dv).apply(null,arguments)},Tx=b._emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0=function(){return(Tx=b._emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0=
  b.asm.ev).apply(null,arguments)},Ux=b._emscripten_bind_btRaycastVehicle_rayCast_1=function(){return(Ux=b._emscripten_bind_btRaycastVehicle_rayCast_1=b.asm.fv).apply(null,arguments)},Vx=b._emscripten_bind_btRaycastVehicle_updateVehicle_1=function(){return(Vx=b._emscripten_bind_btRaycastVehicle_updateVehicle_1=b.asm.gv).apply(null,arguments)},Wx=b._emscripten_bind_btRaycastVehicle_resetSuspension_0=function(){return(Wx=b._emscripten_bind_btRaycastVehicle_resetSuspension_0=b.asm.hv).apply(null,arguments)},
  Xx=b._emscripten_bind_btRaycastVehicle_getSteeringValue_1=function(){return(Xx=b._emscripten_bind_btRaycastVehicle_getSteeringValue_1=b.asm.iv).apply(null,arguments)},Yx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1=function(){return(Yx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1=b.asm.jv).apply(null,arguments)},Zx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2=function(){return(Zx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2=b.asm.kv).apply(null,
  arguments)},$x=b._emscripten_bind_btRaycastVehicle_setPitchControl_1=function(){return($x=b._emscripten_bind_btRaycastVehicle_setPitchControl_1=b.asm.lv).apply(null,arguments)},ay=b._emscripten_bind_btRaycastVehicle_updateSuspension_1=function(){return(ay=b._emscripten_bind_btRaycastVehicle_updateSuspension_1=b.asm.mv).apply(null,arguments)},by=b._emscripten_bind_btRaycastVehicle_updateFriction_1=function(){return(by=b._emscripten_bind_btRaycastVehicle_updateFriction_1=b.asm.nv).apply(null,arguments)},
  cy=b._emscripten_bind_btRaycastVehicle_getRightAxis_0=function(){return(cy=b._emscripten_bind_btRaycastVehicle_getRightAxis_0=b.asm.ov).apply(null,arguments)},dy=b._emscripten_bind_btRaycastVehicle_getUpAxis_0=function(){return(dy=b._emscripten_bind_btRaycastVehicle_getUpAxis_0=b.asm.pv).apply(null,arguments)},ey=b._emscripten_bind_btRaycastVehicle_getForwardAxis_0=function(){return(ey=b._emscripten_bind_btRaycastVehicle_getForwardAxis_0=b.asm.qv).apply(null,arguments)},fy=b._emscripten_bind_btRaycastVehicle_getForwardVector_0=
  function(){return(fy=b._emscripten_bind_btRaycastVehicle_getForwardVector_0=b.asm.rv).apply(null,arguments)},gy=b._emscripten_bind_btRaycastVehicle_getUserConstraintType_0=function(){return(gy=b._emscripten_bind_btRaycastVehicle_getUserConstraintType_0=b.asm.sv).apply(null,arguments)},hy=b._emscripten_bind_btRaycastVehicle_setUserConstraintType_1=function(){return(hy=b._emscripten_bind_btRaycastVehicle_setUserConstraintType_1=b.asm.tv).apply(null,arguments)},iy=b._emscripten_bind_btRaycastVehicle_setUserConstraintId_1=
  function(){return(iy=b._emscripten_bind_btRaycastVehicle_setUserConstraintId_1=b.asm.uv).apply(null,arguments)},jy=b._emscripten_bind_btRaycastVehicle_getUserConstraintId_0=function(){return(jy=b._emscripten_bind_btRaycastVehicle_getUserConstraintId_0=b.asm.vv).apply(null,arguments)},ky=b._emscripten_bind_btRaycastVehicle_updateAction_2=function(){return(ky=b._emscripten_bind_btRaycastVehicle_updateAction_2=b.asm.wv).apply(null,arguments)},ly=b._emscripten_bind_btRaycastVehicle___destroy___0=function(){return(ly=
  b._emscripten_bind_btRaycastVehicle___destroy___0=b.asm.xv).apply(null,arguments)},my=b._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=function(){return(my=b._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=b.asm.yv).apply(null,arguments)},ny=b._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=function(){return(ny=b._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=b.asm.zv).apply(null,arguments)},oy=b._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=
  function(){return(oy=b._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=b.asm.Av).apply(null,arguments)},py=b._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=function(){return(py=b._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=b.asm.Bv).apply(null,arguments)},qy=b._emscripten_bind_btPairCachingGhostObject_setActivationState_1=function(){return(qy=b._emscripten_bind_btPairCachingGhostObject_setActivationState_1=b.asm.Cv).apply(null,
  arguments)},ry=b._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=function(){return(ry=b._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=b.asm.Dv).apply(null,arguments)},sy=b._emscripten_bind_btPairCachingGhostObject_activate_0=function(){return(sy=b._emscripten_bind_btPairCachingGhostObject_activate_0=b.asm.Ev).apply(null,arguments)},ty=b._emscripten_bind_btPairCachingGhostObject_activate_1=function(){return(ty=b._emscripten_bind_btPairCachingGhostObject_activate_1=
  b.asm.Fv).apply(null,arguments)},uy=b._emscripten_bind_btPairCachingGhostObject_isActive_0=function(){return(uy=b._emscripten_bind_btPairCachingGhostObject_isActive_0=b.asm.Gv).apply(null,arguments)},vy=b._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=function(){return(vy=b._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=b.asm.Hv).apply(null,arguments)},wy=b._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=function(){return(wy=b._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=
  b.asm.Iv).apply(null,arguments)},xy=b._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=function(){return(xy=b._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=b.asm.Jv).apply(null,arguments)},yy=b._emscripten_bind_btPairCachingGhostObject_getRestitution_0=function(){return(yy=b._emscripten_bind_btPairCachingGhostObject_getRestitution_0=b.asm.Kv).apply(null,arguments)},zy=b._emscripten_bind_btPairCachingGhostObject_getFriction_0=function(){return(zy=b._emscripten_bind_btPairCachingGhostObject_getFriction_0=
  b.asm.Lv).apply(null,arguments)},Ay=b._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=function(){return(Ay=b._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=b.asm.Mv).apply(null,arguments)},By=b._emscripten_bind_btPairCachingGhostObject_setRestitution_1=function(){return(By=b._emscripten_bind_btPairCachingGhostObject_setRestitution_1=b.asm.Nv).apply(null,arguments)},Cy=b._emscripten_bind_btPairCachingGhostObject_setFriction_1=function(){return(Cy=b._emscripten_bind_btPairCachingGhostObject_setFriction_1=
  b.asm.Ov).apply(null,arguments)},Dy=b._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=function(){return(Dy=b._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=b.asm.Pv).apply(null,arguments)},Ey=b._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=function(){return(Ey=b._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=b.asm.Qv).apply(null,arguments)},Fy=b._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=function(){return(Fy=b._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=
  b.asm.Rv).apply(null,arguments)},Gy=b._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=function(){return(Gy=b._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=b.asm.Sv).apply(null,arguments)},Hy=b._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=function(){return(Hy=b._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=b.asm.Tv).apply(null,arguments)},Iy=b._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=function(){return(Iy=b._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=
  b.asm.Uv).apply(null,arguments)},Jy=b._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=function(){return(Jy=b._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=b.asm.Vv).apply(null,arguments)},Ky=b._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=function(){return(Ky=b._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=b.asm.Wv).apply(null,arguments)},Ly=b._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=function(){return(Ly=
  b._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=b.asm.Xv).apply(null,arguments)},My=b._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=function(){return(My=b._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=b.asm.Yv).apply(null,arguments)},Ny=b._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=function(){return(Ny=b._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=b.asm.Zv).apply(null,arguments)},Oy=b._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=
  function(){return(Oy=b._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=b.asm._v).apply(null,arguments)},Py=b._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=function(){return(Py=b._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=b.asm.$v).apply(null,arguments)},Qy=b._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=function(){return(Qy=b._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=b.asm.aw).apply(null,arguments)},
  Ry=b._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=function(){return(Ry=b._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=b.asm.bw).apply(null,arguments)},Sy=b._emscripten_bind_btPairCachingGhostObject___destroy___0=function(){return(Sy=b._emscripten_bind_btPairCachingGhostObject___destroy___0=b.asm.cw).apply(null,arguments)},Ty=b._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=function(){return(Ty=b._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=
  b.asm.dw).apply(null,arguments)},Uy=b._emscripten_bind_btGhostPairCallback___destroy___0=function(){return(Uy=b._emscripten_bind_btGhostPairCallback___destroy___0=b.asm.ew).apply(null,arguments)},Vy=b._emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=function(){return(Vy=b._emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=b.asm.fw).apply(null,arguments)},Wy=b._emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=function(){return(Wy=b._emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=
  b.asm.gw).apply(null,arguments)},Xy=b._emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=function(){return(Xy=b._emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=b.asm.hw).apply(null,arguments)},Yy=b._emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=function(){return(Yy=b._emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=b.asm.iw).apply(null,arguments)},Zy=b._emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=function(){return(Zy=b._emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=
  b.asm.jw).apply(null,arguments)},$y=b._emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=function(){return($y=b._emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=b.asm.kw).apply(null,arguments)},az=b._emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=function(){return(az=b._emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=b.asm.lw).apply(null,arguments)},bz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=function(){return(bz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=
  b.asm.mw).apply(null,arguments)},cz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=function(){return(cz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=b.asm.nw).apply(null,arguments)},dz=b._emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=function(){return(dz=b._emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=b.asm.ow).apply(null,arguments)},ez=b._emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=function(){return(ez=b._emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=
  b.asm.pw).apply(null,arguments)},fz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=function(){return(fz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=b.asm.qw).apply(null,arguments)},gz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=function(){return(gz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=b.asm.rw).apply(null,arguments)},hz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=function(){return(hz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=
  b.asm.sw).apply(null,arguments)},iz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=function(){return(iz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=b.asm.tw).apply(null,arguments)},jz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=function(){return(jz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=b.asm.uw).apply(null,arguments)},kz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=function(){return(kz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=
  b.asm.vw).apply(null,arguments)},lz=b._emscripten_bind_btSoftBodyWorldInfo___destroy___0=function(){return(lz=b._emscripten_bind_btSoftBodyWorldInfo___destroy___0=b.asm.ww).apply(null,arguments)},mz=b._emscripten_bind_Face_get_m_n_1=function(){return(mz=b._emscripten_bind_Face_get_m_n_1=b.asm.xw).apply(null,arguments)},nz=b._emscripten_bind_Face_set_m_n_2=function(){return(nz=b._emscripten_bind_Face_set_m_n_2=b.asm.yw).apply(null,arguments)},oz=b._emscripten_bind_Face_get_m_normal_0=function(){return(oz=
  b._emscripten_bind_Face_get_m_normal_0=b.asm.zw).apply(null,arguments)},pz=b._emscripten_bind_Face_set_m_normal_1=function(){return(pz=b._emscripten_bind_Face_set_m_normal_1=b.asm.Aw).apply(null,arguments)},qz=b._emscripten_bind_Face_get_m_ra_0=function(){return(qz=b._emscripten_bind_Face_get_m_ra_0=b.asm.Bw).apply(null,arguments)},rz=b._emscripten_bind_Face_set_m_ra_1=function(){return(rz=b._emscripten_bind_Face_set_m_ra_1=b.asm.Cw).apply(null,arguments)},sz=b._emscripten_bind_Face___destroy___0=
  function(){return(sz=b._emscripten_bind_Face___destroy___0=b.asm.Dw).apply(null,arguments)},tz=b._emscripten_bind_tFaceArray_size_0=function(){return(tz=b._emscripten_bind_tFaceArray_size_0=b.asm.Ew).apply(null,arguments)},uz=b._emscripten_bind_tFaceArray_at_1=function(){return(uz=b._emscripten_bind_tFaceArray_at_1=b.asm.Fw).apply(null,arguments)},vz=b._emscripten_bind_tFaceArray___destroy___0=function(){return(vz=b._emscripten_bind_tFaceArray___destroy___0=b.asm.Gw).apply(null,arguments)},wz=b._emscripten_bind_Node_get_m_x_0=
  function(){return(wz=b._emscripten_bind_Node_get_m_x_0=b.asm.Hw).apply(null,arguments)},xz=b._emscripten_bind_Node_set_m_x_1=function(){return(xz=b._emscripten_bind_Node_set_m_x_1=b.asm.Iw).apply(null,arguments)},yz=b._emscripten_bind_Node_get_m_q_0=function(){return(yz=b._emscripten_bind_Node_get_m_q_0=b.asm.Jw).apply(null,arguments)},zz=b._emscripten_bind_Node_set_m_q_1=function(){return(zz=b._emscripten_bind_Node_set_m_q_1=b.asm.Kw).apply(null,arguments)},Az=b._emscripten_bind_Node_get_m_v_0=function(){return(Az=
  b._emscripten_bind_Node_get_m_v_0=b.asm.Lw).apply(null,arguments)},Bz=b._emscripten_bind_Node_set_m_v_1=function(){return(Bz=b._emscripten_bind_Node_set_m_v_1=b.asm.Mw).apply(null,arguments)},Cz=b._emscripten_bind_Node_get_m_f_0=function(){return(Cz=b._emscripten_bind_Node_get_m_f_0=b.asm.Nw).apply(null,arguments)},Dz=b._emscripten_bind_Node_set_m_f_1=function(){return(Dz=b._emscripten_bind_Node_set_m_f_1=b.asm.Ow).apply(null,arguments)},Ez=b._emscripten_bind_Node_get_m_n_0=function(){return(Ez=b._emscripten_bind_Node_get_m_n_0=
  b.asm.Pw).apply(null,arguments)},Fz=b._emscripten_bind_Node_set_m_n_1=function(){return(Fz=b._emscripten_bind_Node_set_m_n_1=b.asm.Qw).apply(null,arguments)},Gz=b._emscripten_bind_Node_get_m_im_0=function(){return(Gz=b._emscripten_bind_Node_get_m_im_0=b.asm.Rw).apply(null,arguments)},Hz=b._emscripten_bind_Node_set_m_im_1=function(){return(Hz=b._emscripten_bind_Node_set_m_im_1=b.asm.Sw).apply(null,arguments)},Iz=b._emscripten_bind_Node_get_m_area_0=function(){return(Iz=b._emscripten_bind_Node_get_m_area_0=
  b.asm.Tw).apply(null,arguments)},Jz=b._emscripten_bind_Node_set_m_area_1=function(){return(Jz=b._emscripten_bind_Node_set_m_area_1=b.asm.Uw).apply(null,arguments)},Kz=b._emscripten_bind_Node___destroy___0=function(){return(Kz=b._emscripten_bind_Node___destroy___0=b.asm.Vw).apply(null,arguments)},Lz=b._emscripten_bind_tNodeArray_size_0=function(){return(Lz=b._emscripten_bind_tNodeArray_size_0=b.asm.Ww).apply(null,arguments)},Mz=b._emscripten_bind_tNodeArray_at_1=function(){return(Mz=b._emscripten_bind_tNodeArray_at_1=
  b.asm.Xw).apply(null,arguments)},Nz=b._emscripten_bind_tNodeArray___destroy___0=function(){return(Nz=b._emscripten_bind_tNodeArray___destroy___0=b.asm.Yw).apply(null,arguments)},Oz=b._emscripten_bind_Material_get_m_kLST_0=function(){return(Oz=b._emscripten_bind_Material_get_m_kLST_0=b.asm.Zw).apply(null,arguments)},Pz=b._emscripten_bind_Material_set_m_kLST_1=function(){return(Pz=b._emscripten_bind_Material_set_m_kLST_1=b.asm._w).apply(null,arguments)},Qz=b._emscripten_bind_Material_get_m_kAST_0=function(){return(Qz=
  b._emscripten_bind_Material_get_m_kAST_0=b.asm.$w).apply(null,arguments)},Rz=b._emscripten_bind_Material_set_m_kAST_1=function(){return(Rz=b._emscripten_bind_Material_set_m_kAST_1=b.asm.ax).apply(null,arguments)},Sz=b._emscripten_bind_Material_get_m_kVST_0=function(){return(Sz=b._emscripten_bind_Material_get_m_kVST_0=b.asm.bx).apply(null,arguments)},Tz=b._emscripten_bind_Material_set_m_kVST_1=function(){return(Tz=b._emscripten_bind_Material_set_m_kVST_1=b.asm.cx).apply(null,arguments)},Uz=b._emscripten_bind_Material_get_m_flags_0=
  function(){return(Uz=b._emscripten_bind_Material_get_m_flags_0=b.asm.dx).apply(null,arguments)},Vz=b._emscripten_bind_Material_set_m_flags_1=function(){return(Vz=b._emscripten_bind_Material_set_m_flags_1=b.asm.ex).apply(null,arguments)},Wz=b._emscripten_bind_Material___destroy___0=function(){return(Wz=b._emscripten_bind_Material___destroy___0=b.asm.fx).apply(null,arguments)},Xz=b._emscripten_bind_tMaterialArray_size_0=function(){return(Xz=b._emscripten_bind_tMaterialArray_size_0=b.asm.gx).apply(null,
  arguments)},Yz=b._emscripten_bind_tMaterialArray_at_1=function(){return(Yz=b._emscripten_bind_tMaterialArray_at_1=b.asm.hx).apply(null,arguments)},Zz=b._emscripten_bind_tMaterialArray___destroy___0=function(){return(Zz=b._emscripten_bind_tMaterialArray___destroy___0=b.asm.ix).apply(null,arguments)},$z=b._emscripten_bind_Anchor_get_m_node_0=function(){return($z=b._emscripten_bind_Anchor_get_m_node_0=b.asm.jx).apply(null,arguments)},aA=b._emscripten_bind_Anchor_set_m_node_1=function(){return(aA=b._emscripten_bind_Anchor_set_m_node_1=
  b.asm.kx).apply(null,arguments)},bA=b._emscripten_bind_Anchor_get_m_local_0=function(){return(bA=b._emscripten_bind_Anchor_get_m_local_0=b.asm.lx).apply(null,arguments)},cA=b._emscripten_bind_Anchor_set_m_local_1=function(){return(cA=b._emscripten_bind_Anchor_set_m_local_1=b.asm.mx).apply(null,arguments)},dA=b._emscripten_bind_Anchor_get_m_body_0=function(){return(dA=b._emscripten_bind_Anchor_get_m_body_0=b.asm.nx).apply(null,arguments)},eA=b._emscripten_bind_Anchor_set_m_body_1=function(){return(eA=
  b._emscripten_bind_Anchor_set_m_body_1=b.asm.ox).apply(null,arguments)},fA=b._emscripten_bind_Anchor_get_m_influence_0=function(){return(fA=b._emscripten_bind_Anchor_get_m_influence_0=b.asm.px).apply(null,arguments)},gA=b._emscripten_bind_Anchor_set_m_influence_1=function(){return(gA=b._emscripten_bind_Anchor_set_m_influence_1=b.asm.qx).apply(null,arguments)},hA=b._emscripten_bind_Anchor_get_m_c0_0=function(){return(hA=b._emscripten_bind_Anchor_get_m_c0_0=b.asm.rx).apply(null,arguments)},iA=b._emscripten_bind_Anchor_set_m_c0_1=
  function(){return(iA=b._emscripten_bind_Anchor_set_m_c0_1=b.asm.sx).apply(null,arguments)},jA=b._emscripten_bind_Anchor_get_m_c1_0=function(){return(jA=b._emscripten_bind_Anchor_get_m_c1_0=b.asm.tx).apply(null,arguments)},kA=b._emscripten_bind_Anchor_set_m_c1_1=function(){return(kA=b._emscripten_bind_Anchor_set_m_c1_1=b.asm.ux).apply(null,arguments)},lA=b._emscripten_bind_Anchor_get_m_c2_0=function(){return(lA=b._emscripten_bind_Anchor_get_m_c2_0=b.asm.vx).apply(null,arguments)},mA=b._emscripten_bind_Anchor_set_m_c2_1=
  function(){return(mA=b._emscripten_bind_Anchor_set_m_c2_1=b.asm.wx).apply(null,arguments)},nA=b._emscripten_bind_Anchor___destroy___0=function(){return(nA=b._emscripten_bind_Anchor___destroy___0=b.asm.xx).apply(null,arguments)},oA=b._emscripten_bind_tAnchorArray_size_0=function(){return(oA=b._emscripten_bind_tAnchorArray_size_0=b.asm.yx).apply(null,arguments)},pA=b._emscripten_bind_tAnchorArray_at_1=function(){return(pA=b._emscripten_bind_tAnchorArray_at_1=b.asm.zx).apply(null,arguments)},qA=b._emscripten_bind_tAnchorArray_clear_0=
  function(){return(qA=b._emscripten_bind_tAnchorArray_clear_0=b.asm.Ax).apply(null,arguments)},rA=b._emscripten_bind_tAnchorArray_push_back_1=function(){return(rA=b._emscripten_bind_tAnchorArray_push_back_1=b.asm.Bx).apply(null,arguments)},sA=b._emscripten_bind_tAnchorArray_pop_back_0=function(){return(sA=b._emscripten_bind_tAnchorArray_pop_back_0=b.asm.Cx).apply(null,arguments)},tA=b._emscripten_bind_tAnchorArray___destroy___0=function(){return(tA=b._emscripten_bind_tAnchorArray___destroy___0=b.asm.Dx).apply(null,
  arguments)},uA=b._emscripten_bind_Config_get_kVCF_0=function(){return(uA=b._emscripten_bind_Config_get_kVCF_0=b.asm.Ex).apply(null,arguments)},vA=b._emscripten_bind_Config_set_kVCF_1=function(){return(vA=b._emscripten_bind_Config_set_kVCF_1=b.asm.Fx).apply(null,arguments)},wA=b._emscripten_bind_Config_get_kDP_0=function(){return(wA=b._emscripten_bind_Config_get_kDP_0=b.asm.Gx).apply(null,arguments)},xA=b._emscripten_bind_Config_set_kDP_1=function(){return(xA=b._emscripten_bind_Config_set_kDP_1=b.asm.Hx).apply(null,
  arguments)},yA=b._emscripten_bind_Config_get_kDG_0=function(){return(yA=b._emscripten_bind_Config_get_kDG_0=b.asm.Ix).apply(null,arguments)},zA=b._emscripten_bind_Config_set_kDG_1=function(){return(zA=b._emscripten_bind_Config_set_kDG_1=b.asm.Jx).apply(null,arguments)},AA=b._emscripten_bind_Config_get_kLF_0=function(){return(AA=b._emscripten_bind_Config_get_kLF_0=b.asm.Kx).apply(null,arguments)},BA=b._emscripten_bind_Config_set_kLF_1=function(){return(BA=b._emscripten_bind_Config_set_kLF_1=b.asm.Lx).apply(null,
  arguments)},CA=b._emscripten_bind_Config_get_kPR_0=function(){return(CA=b._emscripten_bind_Config_get_kPR_0=b.asm.Mx).apply(null,arguments)},DA=b._emscripten_bind_Config_set_kPR_1=function(){return(DA=b._emscripten_bind_Config_set_kPR_1=b.asm.Nx).apply(null,arguments)},EA=b._emscripten_bind_Config_get_kVC_0=function(){return(EA=b._emscripten_bind_Config_get_kVC_0=b.asm.Ox).apply(null,arguments)},FA=b._emscripten_bind_Config_set_kVC_1=function(){return(FA=b._emscripten_bind_Config_set_kVC_1=b.asm.Px).apply(null,
  arguments)},GA=b._emscripten_bind_Config_get_kDF_0=function(){return(GA=b._emscripten_bind_Config_get_kDF_0=b.asm.Qx).apply(null,arguments)},HA=b._emscripten_bind_Config_set_kDF_1=function(){return(HA=b._emscripten_bind_Config_set_kDF_1=b.asm.Rx).apply(null,arguments)},IA=b._emscripten_bind_Config_get_kMT_0=function(){return(IA=b._emscripten_bind_Config_get_kMT_0=b.asm.Sx).apply(null,arguments)},JA=b._emscripten_bind_Config_set_kMT_1=function(){return(JA=b._emscripten_bind_Config_set_kMT_1=b.asm.Tx).apply(null,
  arguments)},KA=b._emscripten_bind_Config_get_kCHR_0=function(){return(KA=b._emscripten_bind_Config_get_kCHR_0=b.asm.Ux).apply(null,arguments)},LA=b._emscripten_bind_Config_set_kCHR_1=function(){return(LA=b._emscripten_bind_Config_set_kCHR_1=b.asm.Vx).apply(null,arguments)},MA=b._emscripten_bind_Config_get_kKHR_0=function(){return(MA=b._emscripten_bind_Config_get_kKHR_0=b.asm.Wx).apply(null,arguments)},NA=b._emscripten_bind_Config_set_kKHR_1=function(){return(NA=b._emscripten_bind_Config_set_kKHR_1=
  b.asm.Xx).apply(null,arguments)},OA=b._emscripten_bind_Config_get_kSHR_0=function(){return(OA=b._emscripten_bind_Config_get_kSHR_0=b.asm.Yx).apply(null,arguments)},PA=b._emscripten_bind_Config_set_kSHR_1=function(){return(PA=b._emscripten_bind_Config_set_kSHR_1=b.asm.Zx).apply(null,arguments)},QA=b._emscripten_bind_Config_get_kAHR_0=function(){return(QA=b._emscripten_bind_Config_get_kAHR_0=b.asm._x).apply(null,arguments)},RA=b._emscripten_bind_Config_set_kAHR_1=function(){return(RA=b._emscripten_bind_Config_set_kAHR_1=
  b.asm.$x).apply(null,arguments)},SA=b._emscripten_bind_Config_get_kSRHR_CL_0=function(){return(SA=b._emscripten_bind_Config_get_kSRHR_CL_0=b.asm.ay).apply(null,arguments)},TA=b._emscripten_bind_Config_set_kSRHR_CL_1=function(){return(TA=b._emscripten_bind_Config_set_kSRHR_CL_1=b.asm.by).apply(null,arguments)},UA=b._emscripten_bind_Config_get_kSKHR_CL_0=function(){return(UA=b._emscripten_bind_Config_get_kSKHR_CL_0=b.asm.cy).apply(null,arguments)},VA=b._emscripten_bind_Config_set_kSKHR_CL_1=function(){return(VA=
  b._emscripten_bind_Config_set_kSKHR_CL_1=b.asm.dy).apply(null,arguments)},WA=b._emscripten_bind_Config_get_kSSHR_CL_0=function(){return(WA=b._emscripten_bind_Config_get_kSSHR_CL_0=b.asm.ey).apply(null,arguments)},XA=b._emscripten_bind_Config_set_kSSHR_CL_1=function(){return(XA=b._emscripten_bind_Config_set_kSSHR_CL_1=b.asm.fy).apply(null,arguments)},YA=b._emscripten_bind_Config_get_kSR_SPLT_CL_0=function(){return(YA=b._emscripten_bind_Config_get_kSR_SPLT_CL_0=b.asm.gy).apply(null,arguments)},ZA=b._emscripten_bind_Config_set_kSR_SPLT_CL_1=
  function(){return(ZA=b._emscripten_bind_Config_set_kSR_SPLT_CL_1=b.asm.hy).apply(null,arguments)},$A=b._emscripten_bind_Config_get_kSK_SPLT_CL_0=function(){return($A=b._emscripten_bind_Config_get_kSK_SPLT_CL_0=b.asm.iy).apply(null,arguments)},aB=b._emscripten_bind_Config_set_kSK_SPLT_CL_1=function(){return(aB=b._emscripten_bind_Config_set_kSK_SPLT_CL_1=b.asm.jy).apply(null,arguments)},bB=b._emscripten_bind_Config_get_kSS_SPLT_CL_0=function(){return(bB=b._emscripten_bind_Config_get_kSS_SPLT_CL_0=b.asm.ky).apply(null,
  arguments)},cB=b._emscripten_bind_Config_set_kSS_SPLT_CL_1=function(){return(cB=b._emscripten_bind_Config_set_kSS_SPLT_CL_1=b.asm.ly).apply(null,arguments)},dB=b._emscripten_bind_Config_get_maxvolume_0=function(){return(dB=b._emscripten_bind_Config_get_maxvolume_0=b.asm.my).apply(null,arguments)},eB=b._emscripten_bind_Config_set_maxvolume_1=function(){return(eB=b._emscripten_bind_Config_set_maxvolume_1=b.asm.ny).apply(null,arguments)},fB=b._emscripten_bind_Config_get_timescale_0=function(){return(fB=
  b._emscripten_bind_Config_get_timescale_0=b.asm.oy).apply(null,arguments)},gB=b._emscripten_bind_Config_set_timescale_1=function(){return(gB=b._emscripten_bind_Config_set_timescale_1=b.asm.py).apply(null,arguments)},hB=b._emscripten_bind_Config_get_viterations_0=function(){return(hB=b._emscripten_bind_Config_get_viterations_0=b.asm.qy).apply(null,arguments)},iB=b._emscripten_bind_Config_set_viterations_1=function(){return(iB=b._emscripten_bind_Config_set_viterations_1=b.asm.ry).apply(null,arguments)},
  jB=b._emscripten_bind_Config_get_piterations_0=function(){return(jB=b._emscripten_bind_Config_get_piterations_0=b.asm.sy).apply(null,arguments)},kB=b._emscripten_bind_Config_set_piterations_1=function(){return(kB=b._emscripten_bind_Config_set_piterations_1=b.asm.ty).apply(null,arguments)},lB=b._emscripten_bind_Config_get_diterations_0=function(){return(lB=b._emscripten_bind_Config_get_diterations_0=b.asm.uy).apply(null,arguments)},mB=b._emscripten_bind_Config_set_diterations_1=function(){return(mB=
  b._emscripten_bind_Config_set_diterations_1=b.asm.vy).apply(null,arguments)},nB=b._emscripten_bind_Config_get_citerations_0=function(){return(nB=b._emscripten_bind_Config_get_citerations_0=b.asm.wy).apply(null,arguments)},oB=b._emscripten_bind_Config_set_citerations_1=function(){return(oB=b._emscripten_bind_Config_set_citerations_1=b.asm.xy).apply(null,arguments)},pB=b._emscripten_bind_Config_get_collisions_0=function(){return(pB=b._emscripten_bind_Config_get_collisions_0=b.asm.yy).apply(null,arguments)},
  qB=b._emscripten_bind_Config_set_collisions_1=function(){return(qB=b._emscripten_bind_Config_set_collisions_1=b.asm.zy).apply(null,arguments)},rB=b._emscripten_bind_Config___destroy___0=function(){return(rB=b._emscripten_bind_Config___destroy___0=b.asm.Ay).apply(null,arguments)},sB=b._emscripten_bind_btSoftBody_btSoftBody_4=function(){return(sB=b._emscripten_bind_btSoftBody_btSoftBody_4=b.asm.By).apply(null,arguments)},tB=b._emscripten_bind_btSoftBody_checkLink_2=function(){return(tB=b._emscripten_bind_btSoftBody_checkLink_2=
  b.asm.Cy).apply(null,arguments)},uB=b._emscripten_bind_btSoftBody_checkFace_3=function(){return(uB=b._emscripten_bind_btSoftBody_checkFace_3=b.asm.Dy).apply(null,arguments)},vB=b._emscripten_bind_btSoftBody_appendMaterial_0=function(){return(vB=b._emscripten_bind_btSoftBody_appendMaterial_0=b.asm.Ey).apply(null,arguments)},wB=b._emscripten_bind_btSoftBody_appendNode_2=function(){return(wB=b._emscripten_bind_btSoftBody_appendNode_2=b.asm.Fy).apply(null,arguments)},xB=b._emscripten_bind_btSoftBody_appendLink_4=
  function(){return(xB=b._emscripten_bind_btSoftBody_appendLink_4=b.asm.Gy).apply(null,arguments)},yB=b._emscripten_bind_btSoftBody_appendFace_4=function(){return(yB=b._emscripten_bind_btSoftBody_appendFace_4=b.asm.Hy).apply(null,arguments)},zB=b._emscripten_bind_btSoftBody_appendTetra_5=function(){return(zB=b._emscripten_bind_btSoftBody_appendTetra_5=b.asm.Iy).apply(null,arguments)},AB=b._emscripten_bind_btSoftBody_appendAnchor_4=function(){return(AB=b._emscripten_bind_btSoftBody_appendAnchor_4=b.asm.Jy).apply(null,
  arguments)},BB=b._emscripten_bind_btSoftBody_addForce_1=function(){return(BB=b._emscripten_bind_btSoftBody_addForce_1=b.asm.Ky).apply(null,arguments)},CB=b._emscripten_bind_btSoftBody_addForce_2=function(){return(CB=b._emscripten_bind_btSoftBody_addForce_2=b.asm.Ly).apply(null,arguments)},DB=b._emscripten_bind_btSoftBody_addAeroForceToNode_2=function(){return(DB=b._emscripten_bind_btSoftBody_addAeroForceToNode_2=b.asm.My).apply(null,arguments)},EB=b._emscripten_bind_btSoftBody_getTotalMass_0=function(){return(EB=
  b._emscripten_bind_btSoftBody_getTotalMass_0=b.asm.Ny).apply(null,arguments)},FB=b._emscripten_bind_btSoftBody_setTotalMass_2=function(){return(FB=b._emscripten_bind_btSoftBody_setTotalMass_2=b.asm.Oy).apply(null,arguments)},GB=b._emscripten_bind_btSoftBody_setMass_2=function(){return(GB=b._emscripten_bind_btSoftBody_setMass_2=b.asm.Py).apply(null,arguments)},HB=b._emscripten_bind_btSoftBody_transform_1=function(){return(HB=b._emscripten_bind_btSoftBody_transform_1=b.asm.Qy).apply(null,arguments)},
  IB=b._emscripten_bind_btSoftBody_translate_1=function(){return(IB=b._emscripten_bind_btSoftBody_translate_1=b.asm.Ry).apply(null,arguments)},JB=b._emscripten_bind_btSoftBody_rotate_1=function(){return(JB=b._emscripten_bind_btSoftBody_rotate_1=b.asm.Sy).apply(null,arguments)},KB=b._emscripten_bind_btSoftBody_scale_1=function(){return(KB=b._emscripten_bind_btSoftBody_scale_1=b.asm.Ty).apply(null,arguments)},LB=b._emscripten_bind_btSoftBody_generateClusters_1=function(){return(LB=b._emscripten_bind_btSoftBody_generateClusters_1=
  b.asm.Uy).apply(null,arguments)},MB=b._emscripten_bind_btSoftBody_generateClusters_2=function(){return(MB=b._emscripten_bind_btSoftBody_generateClusters_2=b.asm.Vy).apply(null,arguments)},NB=b._emscripten_bind_btSoftBody_generateBendingConstraints_2=function(){return(NB=b._emscripten_bind_btSoftBody_generateBendingConstraints_2=b.asm.Wy).apply(null,arguments)},OB=b._emscripten_bind_btSoftBody_upcast_1=function(){return(OB=b._emscripten_bind_btSoftBody_upcast_1=b.asm.Xy).apply(null,arguments)},PB=
  b._emscripten_bind_btSoftBody_getRestLengthScale_0=function(){return(PB=b._emscripten_bind_btSoftBody_getRestLengthScale_0=b.asm.Yy).apply(null,arguments)},QB=b._emscripten_bind_btSoftBody_setRestLengthScale_1=function(){return(QB=b._emscripten_bind_btSoftBody_setRestLengthScale_1=b.asm.Zy).apply(null,arguments)},RB=b._emscripten_bind_btSoftBody_setAnisotropicFriction_2=function(){return(RB=b._emscripten_bind_btSoftBody_setAnisotropicFriction_2=b.asm._y).apply(null,arguments)},SB=b._emscripten_bind_btSoftBody_getCollisionShape_0=
  function(){return(SB=b._emscripten_bind_btSoftBody_getCollisionShape_0=b.asm.$y).apply(null,arguments)},TB=b._emscripten_bind_btSoftBody_setContactProcessingThreshold_1=function(){return(TB=b._emscripten_bind_btSoftBody_setContactProcessingThreshold_1=b.asm.az).apply(null,arguments)},UB=b._emscripten_bind_btSoftBody_setActivationState_1=function(){return(UB=b._emscripten_bind_btSoftBody_setActivationState_1=b.asm.bz).apply(null,arguments)},VB=b._emscripten_bind_btSoftBody_forceActivationState_1=function(){return(VB=
  b._emscripten_bind_btSoftBody_forceActivationState_1=b.asm.cz).apply(null,arguments)},WB=b._emscripten_bind_btSoftBody_activate_0=function(){return(WB=b._emscripten_bind_btSoftBody_activate_0=b.asm.dz).apply(null,arguments)},XB=b._emscripten_bind_btSoftBody_activate_1=function(){return(XB=b._emscripten_bind_btSoftBody_activate_1=b.asm.ez).apply(null,arguments)},YB=b._emscripten_bind_btSoftBody_isActive_0=function(){return(YB=b._emscripten_bind_btSoftBody_isActive_0=b.asm.fz).apply(null,arguments)},
  ZB=b._emscripten_bind_btSoftBody_isKinematicObject_0=function(){return(ZB=b._emscripten_bind_btSoftBody_isKinematicObject_0=b.asm.gz).apply(null,arguments)},$B=b._emscripten_bind_btSoftBody_isStaticObject_0=function(){return($B=b._emscripten_bind_btSoftBody_isStaticObject_0=b.asm.hz).apply(null,arguments)},aC=b._emscripten_bind_btSoftBody_isStaticOrKinematicObject_0=function(){return(aC=b._emscripten_bind_btSoftBody_isStaticOrKinematicObject_0=b.asm.iz).apply(null,arguments)},bC=b._emscripten_bind_btSoftBody_getRestitution_0=
  function(){return(bC=b._emscripten_bind_btSoftBody_getRestitution_0=b.asm.jz).apply(null,arguments)},cC=b._emscripten_bind_btSoftBody_getFriction_0=function(){return(cC=b._emscripten_bind_btSoftBody_getFriction_0=b.asm.kz).apply(null,arguments)},dC=b._emscripten_bind_btSoftBody_getRollingFriction_0=function(){return(dC=b._emscripten_bind_btSoftBody_getRollingFriction_0=b.asm.lz).apply(null,arguments)},eC=b._emscripten_bind_btSoftBody_setRestitution_1=function(){return(eC=b._emscripten_bind_btSoftBody_setRestitution_1=
  b.asm.mz).apply(null,arguments)},fC=b._emscripten_bind_btSoftBody_setFriction_1=function(){return(fC=b._emscripten_bind_btSoftBody_setFriction_1=b.asm.nz).apply(null,arguments)},gC=b._emscripten_bind_btSoftBody_setRollingFriction_1=function(){return(gC=b._emscripten_bind_btSoftBody_setRollingFriction_1=b.asm.oz).apply(null,arguments)},hC=b._emscripten_bind_btSoftBody_getWorldTransform_0=function(){return(hC=b._emscripten_bind_btSoftBody_getWorldTransform_0=b.asm.pz).apply(null,arguments)},iC=b._emscripten_bind_btSoftBody_getCollisionFlags_0=
  function(){return(iC=b._emscripten_bind_btSoftBody_getCollisionFlags_0=b.asm.qz).apply(null,arguments)},jC=b._emscripten_bind_btSoftBody_setCollisionFlags_1=function(){return(jC=b._emscripten_bind_btSoftBody_setCollisionFlags_1=b.asm.rz).apply(null,arguments)},kC=b._emscripten_bind_btSoftBody_setWorldTransform_1=function(){return(kC=b._emscripten_bind_btSoftBody_setWorldTransform_1=b.asm.sz).apply(null,arguments)},lC=b._emscripten_bind_btSoftBody_setCollisionShape_1=function(){return(lC=b._emscripten_bind_btSoftBody_setCollisionShape_1=
  b.asm.tz).apply(null,arguments)},mC=b._emscripten_bind_btSoftBody_setCcdMotionThreshold_1=function(){return(mC=b._emscripten_bind_btSoftBody_setCcdMotionThreshold_1=b.asm.uz).apply(null,arguments)},nC=b._emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=function(){return(nC=b._emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=b.asm.vz).apply(null,arguments)},oC=b._emscripten_bind_btSoftBody_getUserIndex_0=function(){return(oC=b._emscripten_bind_btSoftBody_getUserIndex_0=b.asm.wz).apply(null,
  arguments)},pC=b._emscripten_bind_btSoftBody_setUserIndex_1=function(){return(pC=b._emscripten_bind_btSoftBody_setUserIndex_1=b.asm.xz).apply(null,arguments)},qC=b._emscripten_bind_btSoftBody_getUserPointer_0=function(){return(qC=b._emscripten_bind_btSoftBody_getUserPointer_0=b.asm.yz).apply(null,arguments)},rC=b._emscripten_bind_btSoftBody_setUserPointer_1=function(){return(rC=b._emscripten_bind_btSoftBody_setUserPointer_1=b.asm.zz).apply(null,arguments)},sC=b._emscripten_bind_btSoftBody_getBroadphaseHandle_0=
  function(){return(sC=b._emscripten_bind_btSoftBody_getBroadphaseHandle_0=b.asm.Az).apply(null,arguments)},tC=b._emscripten_bind_btSoftBody_get_m_cfg_0=function(){return(tC=b._emscripten_bind_btSoftBody_get_m_cfg_0=b.asm.Bz).apply(null,arguments)},uC=b._emscripten_bind_btSoftBody_set_m_cfg_1=function(){return(uC=b._emscripten_bind_btSoftBody_set_m_cfg_1=b.asm.Cz).apply(null,arguments)},vC=b._emscripten_bind_btSoftBody_get_m_nodes_0=function(){return(vC=b._emscripten_bind_btSoftBody_get_m_nodes_0=b.asm.Dz).apply(null,
  arguments)},wC=b._emscripten_bind_btSoftBody_set_m_nodes_1=function(){return(wC=b._emscripten_bind_btSoftBody_set_m_nodes_1=b.asm.Ez).apply(null,arguments)},xC=b._emscripten_bind_btSoftBody_get_m_faces_0=function(){return(xC=b._emscripten_bind_btSoftBody_get_m_faces_0=b.asm.Fz).apply(null,arguments)},yC=b._emscripten_bind_btSoftBody_set_m_faces_1=function(){return(yC=b._emscripten_bind_btSoftBody_set_m_faces_1=b.asm.Gz).apply(null,arguments)},zC=b._emscripten_bind_btSoftBody_get_m_materials_0=function(){return(zC=
  b._emscripten_bind_btSoftBody_get_m_materials_0=b.asm.Hz).apply(null,arguments)},AC=b._emscripten_bind_btSoftBody_set_m_materials_1=function(){return(AC=b._emscripten_bind_btSoftBody_set_m_materials_1=b.asm.Iz).apply(null,arguments)},BC=b._emscripten_bind_btSoftBody_get_m_anchors_0=function(){return(BC=b._emscripten_bind_btSoftBody_get_m_anchors_0=b.asm.Jz).apply(null,arguments)},CC=b._emscripten_bind_btSoftBody_set_m_anchors_1=function(){return(CC=b._emscripten_bind_btSoftBody_set_m_anchors_1=b.asm.Kz).apply(null,
  arguments)},DC=b._emscripten_bind_btSoftBody___destroy___0=function(){return(DC=b._emscripten_bind_btSoftBody___destroy___0=b.asm.Lz).apply(null,arguments)},EC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=function(){return(EC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=b.asm.Mz).apply(null,arguments)},FC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=
  function(){return(FC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=b.asm.Nz).apply(null,arguments)},GC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=function(){return(GC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=b.asm.Oz).apply(null,arguments)},HC=b._emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=function(){return(HC=b._emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=
  b.asm.Pz).apply(null,arguments)},IC=b._emscripten_bind_btDefaultSoftBodySolver___destroy___0=function(){return(IC=b._emscripten_bind_btDefaultSoftBodySolver___destroy___0=b.asm.Qz).apply(null,arguments)},JC=b._emscripten_bind_btSoftBodyArray_size_0=function(){return(JC=b._emscripten_bind_btSoftBodyArray_size_0=b.asm.Rz).apply(null,arguments)},KC=b._emscripten_bind_btSoftBodyArray_at_1=function(){return(KC=b._emscripten_bind_btSoftBodyArray_at_1=b.asm.Sz).apply(null,arguments)},LC=b._emscripten_bind_btSoftBodyArray___destroy___0=
  function(){return(LC=b._emscripten_bind_btSoftBodyArray___destroy___0=b.asm.Tz).apply(null,arguments)},MC=b._emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=function(){return(MC=b._emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=b.asm.Uz).apply(null,arguments)},NC=b._emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=function(){return(NC=b._emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=b.asm.Vz).apply(null,arguments)},OC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=
  function(){return(OC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=b.asm.Wz).apply(null,arguments)},PC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=function(){return(PC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=b.asm.Xz).apply(null,arguments)},QC=b._emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=function(){return(QC=b._emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=b.asm.Yz).apply(null,arguments)},RC=b._emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=
  function(){return(RC=b._emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=b.asm.Zz).apply(null,arguments)},SC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=function(){return(SC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=b.asm._z).apply(null,arguments)},TC=b._emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=function(){return(TC=b._emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=b.asm.$z).apply(null,arguments)},UC=b._emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=
  function(){return(UC=b._emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=b.asm.aA).apply(null,arguments)},VC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=function(){return(VC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=b.asm.bA).apply(null,arguments)},WC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=function(){return(WC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=b.asm.cA).apply(null,arguments)},XC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=
  function(){return(XC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=b.asm.dA).apply(null,arguments)},YC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=function(){return(YC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=b.asm.eA).apply(null,arguments)},ZC=b._emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=function(){return(ZC=b._emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=b.asm.fA).apply(null,arguments)},$C=b._emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=
  function(){return($C=b._emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=b.asm.gA).apply(null,arguments)},aD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=function(){return(aD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=b.asm.hA).apply(null,arguments)},bD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=function(){return(bD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=b.asm.iA).apply(null,arguments)},cD=b._emscripten_bind_btSoftRigidDynamicsWorld_updateSingleAabb_1=
  function(){return(cD=b._emscripten_bind_btSoftRigidDynamicsWorld_updateSingleAabb_1=b.asm.jA).apply(null,arguments)},dD=b._emscripten_bind_btSoftRigidDynamicsWorld_setDebugDrawer_1=function(){return(dD=b._emscripten_bind_btSoftRigidDynamicsWorld_setDebugDrawer_1=b.asm.kA).apply(null,arguments)},eD=b._emscripten_bind_btSoftRigidDynamicsWorld_getDebugDrawer_0=function(){return(eD=b._emscripten_bind_btSoftRigidDynamicsWorld_getDebugDrawer_0=b.asm.lA).apply(null,arguments)},fD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawWorld_0=
  function(){return(fD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawWorld_0=b.asm.mA).apply(null,arguments)},gD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawObject_3=function(){return(gD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawObject_3=b.asm.nA).apply(null,arguments)},hD=b._emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=function(){return(hD=b._emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=b.asm.oA).apply(null,arguments)},iD=b._emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=
  function(){return(iD=b._emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=b.asm.pA).apply(null,arguments)},jD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=function(){return(jD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=b.asm.qA).apply(null,arguments)},kD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=function(){return(kD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=b.asm.rA).apply(null,arguments)},lD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=
  function(){return(lD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=b.asm.sA).apply(null,arguments)},mD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=function(){return(mD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=b.asm.tA).apply(null,arguments)},nD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=function(){return(nD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=b.asm.uA).apply(null,arguments)},oD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=
  function(){return(oD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=b.asm.vA).apply(null,arguments)},pD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=function(){return(pD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=b.asm.wA).apply(null,arguments)},qD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=function(){return(qD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=b.asm.xA).apply(null,arguments)},rD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=
  function(){return(rD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=b.asm.yA).apply(null,arguments)},sD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactAddedCallback_1=function(){return(sD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactAddedCallback_1=b.asm.zA).apply(null,arguments)},tD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactProcessedCallback_1=function(){return(tD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactProcessedCallback_1=b.asm.AA).apply(null,
  arguments)},uD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactDestroyedCallback_1=function(){return(uD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactDestroyedCallback_1=b.asm.BA).apply(null,arguments)},vD=b._emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=function(){return(vD=b._emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=b.asm.CA).apply(null,arguments)},wD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=function(){return(wD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=
  b.asm.DA).apply(null,arguments)},xD=b._emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=function(){return(xD=b._emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=b.asm.EA).apply(null,arguments)},yD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_1=function(){return(yD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_1=b.asm.FA).apply(null,arguments)},zD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_2=function(){return(zD=
  b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_2=b.asm.GA).apply(null,arguments)},AD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_3=function(){return(AD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_3=b.asm.HA).apply(null,arguments)},BD=b._emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=function(){return(BD=b._emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=b.asm.IA).apply(null,arguments)},CD=b._emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=
  function(){return(CD=b._emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=b.asm.JA).apply(null,arguments)},DD=b._emscripten_bind_btSoftBodyHelpers_CreateRope_5=function(){return(DD=b._emscripten_bind_btSoftBodyHelpers_CreateRope_5=b.asm.KA).apply(null,arguments)},ED=b._emscripten_bind_btSoftBodyHelpers_CreatePatch_9=function(){return(ED=b._emscripten_bind_btSoftBodyHelpers_CreatePatch_9=b.asm.LA).apply(null,arguments)},FD=b._emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=function(){return(FD=
  b._emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=b.asm.MA).apply(null,arguments)},GD=b._emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=function(){return(GD=b._emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=b.asm.NA).apply(null,arguments)},HD=b._emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=function(){return(HD=b._emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=b.asm.OA).apply(null,arguments)},ID=b._emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=function(){return(ID=
  b._emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=b.asm.PA).apply(null,arguments)},JD=b._emscripten_bind_btSoftBodyHelpers___destroy___0=function(){return(JD=b._emscripten_bind_btSoftBodyHelpers___destroy___0=b.asm.QA).apply(null,arguments)},KD=b._emscripten_enum_PHY_ScalarType_PHY_FLOAT=function(){return(KD=b._emscripten_enum_PHY_ScalarType_PHY_FLOAT=b.asm.RA).apply(null,arguments)},LD=b._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=function(){return(LD=b._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=
  b.asm.SA).apply(null,arguments)},MD=b._emscripten_enum_PHY_ScalarType_PHY_INTEGER=function(){return(MD=b._emscripten_enum_PHY_ScalarType_PHY_INTEGER=b.asm.TA).apply(null,arguments)},ND=b._emscripten_enum_PHY_ScalarType_PHY_SHORT=function(){return(ND=b._emscripten_enum_PHY_ScalarType_PHY_SHORT=b.asm.UA).apply(null,arguments)},OD=b._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=function(){return(OD=b._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=b.asm.VA).apply(null,arguments)},PD=b._emscripten_enum_PHY_ScalarType_PHY_UCHAR=
  function(){return(PD=b._emscripten_enum_PHY_ScalarType_PHY_UCHAR=b.asm.WA).apply(null,arguments)},QD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_COMPOUND_SHAPE=function(){return(QD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_COMPOUND_SHAPE=b.asm.XA).apply(null,arguments)},RD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE_PART=function(){return(RD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE_PART=b.asm.YA).apply(null,arguments)},SD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE=
  function(){return(SD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE=b.asm.ZA).apply(null,arguments)},TD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=function(){return(TD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=b.asm._A).apply(null,arguments)},UD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=function(){return(UD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=b.asm.$A).apply(null,arguments)},VD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=
  function(){return(VD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=b.asm.aB).apply(null,arguments)},WD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=function(){return(WD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=b.asm.bB).apply(null,arguments)};b._malloc=function(){return(b._malloc=b.asm.dB).apply(null,arguments)};b.UTF8ToString=Ma;
  b.addFunction=function(a){if(!Aa){Aa=new WeakMap;for(var c=Ua.length,d=0;d<0+c;d++){var e=kb(d);e&&Aa.set(e,d)}}if(Aa.has(a))return Aa.get(a);if(za.length)c=za.pop();else{try{Ua.grow(1)}catch(f){if(!(f instanceof RangeError))throw f;throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";}c=Ua.length-1}try{d=c,Ua.set(d,a),lb[d]=a}catch(f){if(!(f instanceof TypeError))throw f;d=c;Ua.set(d,a);lb[d]=a}Aa.set(a,c);return c};var XD;cb=function YD(){XD||ZD();XD||(cb=YD)};
  function ZD(){function a(){if(!XD&&(XD=!0,b.calledRun=!0,!Ka)){Ya=!0;jb(Wa);ja(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for("function"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();Xa.unshift(c)}jb(Xa)}}if(!(0<ab)){if(b.preRun)for("function"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)Za();jb(Va);0<ab||(b.setStatus?(b.setStatus("Running..."),setTimeout(function(){setTimeout(function(){b.setStatus("")},1);a()},1)):a())}}
  b.run=ZD;if(b.preInit)for("function"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();ZD();function g(){}g.prototype=Object.create(g.prototype);g.prototype.constructor=g;g.prototype.fB=g;g.gB={};b.WrapperObject=g;function h(a){return(a||g).gB}b.getCache=h;function k(a,c){var d=h(c),e=d[a];if(e)return e;e=Object.create((c||g).prototype);e.eB=a;return d[a]=e}b.wrapPointer=k;b.castObject=function(a,c){return k(a.eB,c)};b.NULL=k(0);
  b.destroy=function(a){if(!a.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";a.__destroy__();delete h(a.fB)[a.eB]};b.compare=function(a,c){return a.eB===c.eB};b.getPointer=function(a){return a.eB};b.getClass=function(a){return a.fB};var $D=0,aE=0,bE=0,cE=[],dE=0;function eE(){if(dE){for(var a=0;a<cE.length;a++)b._free(cE[a]);cE.length=0;b._free($D);$D=0;aE+=dE;dE=0}$D||(aE+=128,($D=b._malloc(aE))||xa(void 0));bE=0}
  function fE(a,c){$D||xa(void 0);a=a.length*c.BYTES_PER_ELEMENT;a=a+7&-8;bE+a>=aE?(0<a||xa(void 0),dE+=a,c=b._malloc(a),cE.push(c)):(c=$D+bE,bE+=a);return c}function gE(a,c,d){d>>>=0;switch(c.BYTES_PER_ELEMENT){case 2:d>>>=1;break;case 4:d>>>=2;break;case 8:d>>>=3}for(var e=0;e<a.length;e++)c[d+e]=a[e]}
  function hE(a){if("string"===typeof a){for(var c=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++c:c=2047>=e?c+2:65535>=e?c+3:c+4}c=Array(c+1);e=c.length;d=0;if(0<e){e=d+e-1;for(var f=0;f<a.length;++f){var m=a.charCodeAt(f);if(55296<=m&&57343>=m){var y=a.charCodeAt(++f);m=65536+((m&1023)<<10)|y&1023}if(127>=m){if(d>=e)break;c[d++]=m}else{if(2047>=m){if(d+1>=e)break;c[d++]=192|m>>6}else{if(65535>=m){if(d+2>=e)break;c[d++]=224|
  m>>12}else{if(d+3>=e)break;c[d++]=240|m>>18;c[d++]=128|m>>12&63}c[d++]=128|m>>6&63}c[d++]=128|m&63}}c[d]=0}a=fE(c,Pa);gE(c,Pa,a);return a}return a}function iE(a){if("object"===typeof a){var c=fE(a,Ra);gE(a,Ra,c);return c}return a}function l(){throw"cannot construct a btCollisionShape, no constructor in IDL";}l.prototype=Object.create(g.prototype);l.prototype.constructor=l;l.prototype.fB=l;l.gB={};b.btCollisionShape=l;
  l.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pb(c,a)};l.prototype.getLocalScaling=function(){return k(qb(this.eB),n)};l.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);rb(d,a,c)};l.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sb(c,a)};l.prototype.getMargin=function(){return tb(this.eB)};l.prototype.__destroy__=function(){ub(this.eB)};
  function jE(){throw"cannot construct a btCollisionWorld, no constructor in IDL";}jE.prototype=Object.create(g.prototype);jE.prototype.constructor=jE;jE.prototype.fB=jE;jE.gB={};b.btCollisionWorld=jE;jE.prototype.getDispatcher=function(){return k(vb(this.eB),kE)};jE.prototype.rayTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);wb(e,a,c,d)};jE.prototype.getPairCache=function(){return k(xb(this.eB),lE)};
  jE.prototype.getDispatchInfo=function(){return k(yb(this.eB),q)};jE.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?zb(e,a):void 0===d?Ab(e,a,c):Bb(e,a,c,d)};jE.prototype.removeCollisionObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cb(c,a)};jE.prototype.getBroadphase=function(){return k(Db(this.eB),mE)};
  jE.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);Fb(m,a,c,d,e,f)};jE.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Gb(e,a,c,d)};
  jE.prototype.contactTest=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Hb(d,a,c)};jE.prototype.updateSingleAabb=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ib(c,a)};jE.prototype.setDebugDrawer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jb(c,a)};jE.prototype.getDebugDrawer=function(){return k(Kb(this.eB),nE)};jE.prototype.debugDrawWorld=function(){Lb(this.eB)};
  jE.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Mb(e,a,c,d)};jE.prototype.__destroy__=function(){Nb(this.eB)};function r(){throw"cannot construct a btCollisionObject, no constructor in IDL";}r.prototype=Object.create(g.prototype);r.prototype.constructor=r;r.prototype.fB=r;r.gB={};b.btCollisionObject=r;
  r.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ob(d,a,c)};r.prototype.getCollisionShape=function(){return k(Pb(this.eB),l)};r.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Qb(c,a)};r.prototype.setActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rb(c,a)};
  r.prototype.forceActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sb(c,a)};r.prototype.activate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);void 0===a?Tb(c):Ub(c,a)};r.prototype.isActive=function(){return!!Vb(this.eB)};r.prototype.isKinematicObject=function(){return!!Wb(this.eB)};r.prototype.isStaticObject=function(){return!!Xb(this.eB)};r.prototype.isStaticOrKinematicObject=function(){return!!Yb(this.eB)};r.prototype.getRestitution=function(){return Zb(this.eB)};
  r.prototype.getFriction=function(){return $b(this.eB)};r.prototype.getRollingFriction=function(){return ac(this.eB)};r.prototype.setRestitution=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bc(c,a)};r.prototype.setFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cc(c,a)};r.prototype.setRollingFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dc(c,a)};r.prototype.getWorldTransform=function(){return k(ec(this.eB),t)};r.prototype.getCollisionFlags=function(){return gc(this.eB)};
  r.prototype.setCollisionFlags=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hc(c,a)};r.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ic(c,a)};r.prototype.setCollisionShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jc(c,a)};r.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kc(c,a)};r.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lc(c,a)};
  r.prototype.getUserIndex=function(){return mc(this.eB)};r.prototype.setUserIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nc(c,a)};r.prototype.getUserPointer=function(){return k(oc(this.eB),oE)};r.prototype.setUserPointer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pc(c,a)};r.prototype.getBroadphaseHandle=function(){return k(qc(this.eB),pE)};r.prototype.__destroy__=function(){sc(this.eB)};
  function qE(){throw"cannot construct a btConcaveShape, no constructor in IDL";}qE.prototype=Object.create(l.prototype);qE.prototype.constructor=qE;qE.prototype.fB=qE;qE.gB={};b.btConcaveShape=qE;qE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tc(c,a)};qE.prototype.getLocalScaling=function(){return k(uc(this.eB),n)};qE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);vc(d,a,c)};
  qE.prototype.__destroy__=function(){wc(this.eB)};function rE(){throw"cannot construct a btCollisionAlgorithm, no constructor in IDL";}rE.prototype=Object.create(g.prototype);rE.prototype.constructor=rE;rE.prototype.fB=rE;rE.gB={};b.btCollisionAlgorithm=rE;rE.prototype.__destroy__=function(){xc(this.eB)};function sE(){throw"cannot construct a btTypedConstraint, no constructor in IDL";}sE.prototype=Object.create(g.prototype);sE.prototype.constructor=sE;sE.prototype.fB=sE;sE.gB={};
  b.btTypedConstraint=sE;sE.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yc(c,a)};sE.prototype.getBreakingImpulseThreshold=function(){return zc(this.eB)};sE.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ac(c,a)};sE.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return Bc(d,a,c)};
  sE.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Cc(e,a,c,d)};sE.prototype.__destroy__=function(){Dc(this.eB)};function tE(){throw"cannot construct a btDynamicsWorld, no constructor in IDL";}tE.prototype=Object.create(jE.prototype);tE.prototype.constructor=tE;tE.prototype.fB=tE;tE.gB={};b.btDynamicsWorld=tE;tE.prototype.addAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fc(c,a)};
  tE.prototype.removeAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gc(c,a)};tE.prototype.getSolverInfo=function(){return k(Hc(this.eB),u)};tE.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?Ic(e,a):void 0===d?Jc(e,a,c):Kc(e,a,c,d)};tE.prototype.getDispatcher=function(){return k(Lc(this.eB),kE)};
  tE.prototype.rayTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Mc(e,a,c,d)};tE.prototype.getPairCache=function(){return k(Nc(this.eB),lE)};tE.prototype.getDispatchInfo=function(){return k(Oc(this.eB),q)};
  tE.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?Pc(e,a):void 0===d?Qc(e,a,c):Rc(e,a,c,d)};tE.prototype.removeCollisionObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sc(c,a)};tE.prototype.getBroadphase=function(){return k(Tc(this.eB),mE)};
  tE.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);Uc(m,a,c,d,e,f)};tE.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Vc(e,a,c,d)};
  tE.prototype.contactTest=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Yc(d,a,c)};tE.prototype.updateSingleAabb=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zc(c,a)};tE.prototype.setDebugDrawer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);$c(c,a)};tE.prototype.getDebugDrawer=function(){return k(ad(this.eB),nE)};tE.prototype.debugDrawWorld=function(){bd(this.eB)};
  tE.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);cd(e,a,c,d)};tE.prototype.__destroy__=function(){dd(this.eB)};function nE(){throw"cannot construct a btIDebugDraw, no constructor in IDL";}nE.prototype=Object.create(g.prototype);nE.prototype.constructor=nE;nE.prototype.fB=nE;nE.gB={};b.btIDebugDraw=nE;
  nE.prototype.drawLine=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);ed(e,a,c,d)};nE.prototype.drawContactPoint=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);fd(m,a,c,d,e,f)};
  nE.prototype.reportErrorWarning=function(a){var c=this.eB;eE();a=a&&"object"===typeof a?a.eB:hE(a);gd(c,a)};nE.prototype.draw3dText=function(a,c){var d=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);c=c&&"object"===typeof c?c.eB:hE(c);hd(d,a,c)};nE.prototype.setDebugMode=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jd(c,a)};nE.prototype.getDebugMode=function(){return kd(this.eB)};nE.prototype.__destroy__=function(){ld(this.eB)};
  function n(a,c,d){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);this.eB=void 0===a?md():void 0===c?_emscripten_bind_btVector3_btVector3_1(a):void 0===d?_emscripten_bind_btVector3_btVector3_2(a,c):nd(a,c,d);h(n)[this.eB]=this}n.prototype=Object.create(g.prototype);n.prototype.constructor=n;n.prototype.fB=n;n.gB={};b.btVector3=n;n.prototype.length=n.prototype.length=function(){return od(this.eB)};n.prototype.x=n.prototype.x=function(){return pd(this.eB)};
  n.prototype.y=n.prototype.y=function(){return qd(this.eB)};n.prototype.z=n.prototype.z=function(){return rd(this.eB)};n.prototype.setX=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sd(c,a)};n.prototype.setY=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);td(c,a)};n.prototype.setZ=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ud(c,a)};
  n.prototype.setValue=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);vd(e,a,c,d)};n.prototype.normalize=n.prototype.normalize=function(){wd(this.eB)};n.prototype.rotate=n.prototype.rotate=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return k(xd(d,a,c),n)};n.prototype.dot=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return yd(c,a)};
  n.prototype.op_mul=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(zd(c,a),n)};n.prototype.op_add=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Ad(c,a),n)};n.prototype.op_sub=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Bd(c,a),n)};n.prototype.__destroy__=function(){Cd(this.eB)};function uE(){throw"cannot construct a btQuadWord, no constructor in IDL";}uE.prototype=Object.create(g.prototype);uE.prototype.constructor=uE;
  uE.prototype.fB=uE;uE.gB={};b.btQuadWord=uE;uE.prototype.x=uE.prototype.x=function(){return Dd(this.eB)};uE.prototype.y=uE.prototype.y=function(){return Ed(this.eB)};uE.prototype.z=uE.prototype.z=function(){return Fd(this.eB)};uE.prototype.w=uE.prototype.w=function(){return Gd(this.eB)};uE.prototype.setX=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hd(c,a)};uE.prototype.setY=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Id(c,a)};
  uE.prototype.setZ=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jd(c,a)};uE.prototype.setW=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Kd(c,a)};uE.prototype.__destroy__=function(){Ld(this.eB)};function vE(){throw"cannot construct a btMotionState, no constructor in IDL";}vE.prototype=Object.create(g.prototype);vE.prototype.constructor=vE;vE.prototype.fB=vE;vE.gB={};b.btMotionState=vE;
  vE.prototype.getWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Md(c,a)};vE.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Nd(c,a)};vE.prototype.__destroy__=function(){Od(this.eB)};function v(){throw"cannot construct a RayResultCallback, no constructor in IDL";}v.prototype=Object.create(g.prototype);v.prototype.constructor=v;v.prototype.fB=v;v.gB={};b.RayResultCallback=v;v.prototype.hasHit=function(){return!!Pd(this.eB)};
  v.prototype.get_m_collisionFilterGroup=v.prototype.hB=function(){return Qd(this.eB)};v.prototype.set_m_collisionFilterGroup=v.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rd(c,a)};Object.defineProperty(v.prototype,"m_collisionFilterGroup",{get:v.prototype.hB,set:v.prototype.jB});v.prototype.get_m_collisionFilterMask=v.prototype.iB=function(){return Sd(this.eB)};
  v.prototype.set_m_collisionFilterMask=v.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Td(c,a)};Object.defineProperty(v.prototype,"m_collisionFilterMask",{get:v.prototype.iB,set:v.prototype.kB});v.prototype.get_m_closestHitFraction=v.prototype.lB=function(){return Ud(this.eB)};v.prototype.set_m_closestHitFraction=v.prototype.mB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vd(c,a)};Object.defineProperty(v.prototype,"m_closestHitFraction",{get:v.prototype.lB,set:v.prototype.mB});
  v.prototype.get_m_collisionObject=v.prototype.sB=function(){return k(Wd(this.eB),r)};v.prototype.set_m_collisionObject=v.prototype.AB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xd(c,a)};Object.defineProperty(v.prototype,"m_collisionObject",{get:v.prototype.sB,set:v.prototype.AB});v.prototype.get_m_flags=v.prototype.pB=function(){return Yd(this.eB)};v.prototype.set_m_flags=v.prototype.qB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zd(c,a)};
  Object.defineProperty(v.prototype,"m_flags",{get:v.prototype.pB,set:v.prototype.qB});v.prototype.__destroy__=function(){$d(this.eB)};function wE(){throw"cannot construct a ContactResultCallback, no constructor in IDL";}wE.prototype=Object.create(g.prototype);wE.prototype.constructor=wE;wE.prototype.fB=wE;wE.gB={};b.ContactResultCallback=wE;
  wE.prototype.addSingleResult=function(a,c,d,e,f,m,y){var W=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);return ae(W,a,c,d,e,f,m,y)};wE.prototype.__destroy__=function(){be(this.eB)};function w(){throw"cannot construct a ConvexResultCallback, no constructor in IDL";}w.prototype=Object.create(g.prototype);
  w.prototype.constructor=w;w.prototype.fB=w;w.gB={};b.ConvexResultCallback=w;w.prototype.hasHit=function(){return!!ce(this.eB)};w.prototype.get_m_collisionFilterGroup=w.prototype.hB=function(){return de(this.eB)};w.prototype.set_m_collisionFilterGroup=w.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ee(c,a)};Object.defineProperty(w.prototype,"m_collisionFilterGroup",{get:w.prototype.hB,set:w.prototype.jB});w.prototype.get_m_collisionFilterMask=w.prototype.iB=function(){return fe(this.eB)};
  w.prototype.set_m_collisionFilterMask=w.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ge(c,a)};Object.defineProperty(w.prototype,"m_collisionFilterMask",{get:w.prototype.iB,set:w.prototype.kB});w.prototype.get_m_closestHitFraction=w.prototype.lB=function(){return he(this.eB)};w.prototype.set_m_closestHitFraction=w.prototype.mB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ie(c,a)};Object.defineProperty(w.prototype,"m_closestHitFraction",{get:w.prototype.lB,set:w.prototype.mB});
  w.prototype.__destroy__=function(){je(this.eB)};function xE(){throw"cannot construct a btConvexShape, no constructor in IDL";}xE.prototype=Object.create(l.prototype);xE.prototype.constructor=xE;xE.prototype.fB=xE;xE.gB={};b.btConvexShape=xE;xE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ke(c,a)};xE.prototype.getLocalScaling=function(){return k(le(this.eB),n)};
  xE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);me(d,a,c)};xE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ne(c,a)};xE.prototype.getMargin=function(){return oe(this.eB)};xE.prototype.__destroy__=function(){pe(this.eB)};function yE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=qe(a,c);h(yE)[this.eB]=this}yE.prototype=Object.create(l.prototype);
  yE.prototype.constructor=yE;yE.prototype.fB=yE;yE.gB={};b.btCapsuleShape=yE;yE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);re(c,a)};yE.prototype.getMargin=function(){return se(this.eB)};yE.prototype.getUpAxis=function(){return te(this.eB)};yE.prototype.getRadius=function(){return ue(this.eB)};yE.prototype.getHalfHeight=function(){return ve(this.eB)};yE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);we(c,a)};
  yE.prototype.getLocalScaling=function(){return k(xe(this.eB),n)};yE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);ye(d,a,c)};yE.prototype.__destroy__=function(){ze(this.eB)};function zE(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Ae(a);h(zE)[this.eB]=this}zE.prototype=Object.create(l.prototype);zE.prototype.constructor=zE;zE.prototype.fB=zE;zE.gB={};b.btCylinderShape=zE;
  zE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Be(c,a)};zE.prototype.getMargin=function(){return Ce(this.eB)};zE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);De(c,a)};zE.prototype.getLocalScaling=function(){return k(Ee(this.eB),n)};zE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Fe(d,a,c)};zE.prototype.__destroy__=function(){Ge(this.eB)};
  function AE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=He(a,c);h(AE)[this.eB]=this}AE.prototype=Object.create(l.prototype);AE.prototype.constructor=AE;AE.prototype.fB=AE;AE.gB={};b.btConeShape=AE;AE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ie(c,a)};AE.prototype.getLocalScaling=function(){return k(Je(this.eB),n)};
  AE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ke(d,a,c)};AE.prototype.__destroy__=function(){Le(this.eB)};function BE(){throw"cannot construct a btStridingMeshInterface, no constructor in IDL";}BE.prototype=Object.create(g.prototype);BE.prototype.constructor=BE;BE.prototype.fB=BE;BE.gB={};b.btStridingMeshInterface=BE;BE.prototype.setScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Me(c,a)};
  BE.prototype.__destroy__=function(){Ne(this.eB)};function CE(){throw"cannot construct a btTriangleMeshShape, no constructor in IDL";}CE.prototype=Object.create(qE.prototype);CE.prototype.constructor=CE;CE.prototype.fB=CE;CE.gB={};b.btTriangleMeshShape=CE;CE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Oe(c,a)};CE.prototype.getLocalScaling=function(){return k(Pe(this.eB),n)};
  CE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Qe(d,a,c)};CE.prototype.__destroy__=function(){Re(this.eB)};function DE(){throw"cannot construct a btPrimitiveManagerBase, no constructor in IDL";}DE.prototype=Object.create(g.prototype);DE.prototype.constructor=DE;DE.prototype.fB=DE;DE.gB={};b.btPrimitiveManagerBase=DE;DE.prototype.is_trimesh=function(){return!!Se(this.eB)};DE.prototype.get_primitive_count=function(){return Te(this.eB)};
  DE.prototype.get_primitive_box=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ue(d,a,c)};DE.prototype.get_primitive_triangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ve(d,a,c)};DE.prototype.__destroy__=function(){We(this.eB)};function EE(){throw"cannot construct a btGImpactShapeInterface, no constructor in IDL";}EE.prototype=Object.create(qE.prototype);EE.prototype.constructor=EE;EE.prototype.fB=EE;
  EE.gB={};b.btGImpactShapeInterface=EE;EE.prototype.updateBound=function(){Xe(this.eB)};EE.prototype.postUpdate=function(){Ye(this.eB)};EE.prototype.getShapeType=function(){return Ze(this.eB)};EE.prototype.getName=function(){return Ma($e(this.eB))};EE.prototype.getGImpactShapeType=function(){return af(this.eB)};EE.prototype.getPrimitiveManager=function(){return k(bf(this.eB),DE)};EE.prototype.getNumChildShapes=function(){return cf(this.eB)};EE.prototype.childrenHasTransform=function(){return!!df(this.eB)};
  EE.prototype.needsRetrieveTriangles=function(){return!!ef(this.eB)};EE.prototype.needsRetrieveTetrahedrons=function(){return!!ff(this.eB)};EE.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);gf(d,a,c)};EE.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);hf(d,a,c)};
  EE.prototype.getChildShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(jf(c,a),l)};EE.prototype.getChildTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(kf(c,a),t)};EE.prototype.setChildTransform=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);lf(d,a,c)};EE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mf(c,a)};
  EE.prototype.getLocalScaling=function(){return k(nf(this.eB),n)};EE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);of(d,a,c)};EE.prototype.__destroy__=function(){pf(this.eB)};function FE(){throw"cannot construct a btActivatingCollisionAlgorithm, no constructor in IDL";}FE.prototype=Object.create(rE.prototype);FE.prototype.constructor=FE;FE.prototype.fB=FE;FE.gB={};b.btActivatingCollisionAlgorithm=FE;
  FE.prototype.__destroy__=function(){qf(this.eB)};function GE(a){a&&"object"===typeof a&&(a=a.eB);this.eB=void 0===a?rf():sf(a);h(GE)[this.eB]=this}GE.prototype=Object.create(g.prototype);GE.prototype.constructor=GE;GE.prototype.fB=GE;GE.gB={};b.btDefaultCollisionConfiguration=GE;GE.prototype.__destroy__=function(){tf(this.eB)};function kE(){throw"cannot construct a btDispatcher, no constructor in IDL";}kE.prototype=Object.create(g.prototype);kE.prototype.constructor=kE;kE.prototype.fB=kE;kE.gB={};
  b.btDispatcher=kE;kE.prototype.getNumManifolds=function(){return uf(this.eB)};kE.prototype.getManifoldByIndexInternal=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(vf(c,a),HE)};kE.prototype.__destroy__=function(){wf(this.eB)};
  function IE(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=void 0===e?xf(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(a,c,d,e):yf(a,c,d,e,f);h(IE)[this.eB]=this}IE.prototype=Object.create(sE.prototype);IE.prototype.constructor=IE;IE.prototype.fB=IE;IE.gB={};b.btGeneric6DofConstraint=IE;
  IE.prototype.setLinearLowerLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zf(c,a)};IE.prototype.setLinearUpperLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Af(c,a)};IE.prototype.setAngularLowerLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Bf(c,a)};IE.prototype.setAngularUpperLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cf(c,a)};IE.prototype.getFrameOffsetA=function(){return k(Df(this.eB),t)};
  IE.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ef(c,a)};IE.prototype.getBreakingImpulseThreshold=function(){return Ff(this.eB)};IE.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gf(c,a)};IE.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return Hf(d,a,c)};
  IE.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);If(e,a,c,d)};IE.prototype.__destroy__=function(){Jf(this.eB)};function x(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=Kf(a,c,d,e);h(x)[this.eB]=this}x.prototype=Object.create(tE.prototype);x.prototype.constructor=x;x.prototype.fB=x;x.gB={};
  b.btDiscreteDynamicsWorld=x;x.prototype.setGravity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Lf(c,a)};x.prototype.getGravity=function(){return k(Mf(this.eB),n)};x.prototype.addRigidBody=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?Nf(e,a):void 0===d?_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(e,a,c):Of(e,a,c,d)};
  x.prototype.removeRigidBody=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pf(c,a)};x.prototype.addConstraint=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===c?Qf(d,a):Rf(d,a,c)};x.prototype.removeConstraint=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sf(c,a)};
  x.prototype.stepSimulation=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);return void 0===c?Tf(e,a):void 0===d?Uf(e,a,c):Vf(e,a,c,d)};x.prototype.setContactAddedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wf(c,a)};x.prototype.setContactProcessedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xf(c,a)};
  x.prototype.setContactDestroyedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Yf(c,a)};x.prototype.getDispatcher=function(){return k(Zf(this.eB),kE)};x.prototype.rayTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);$f(e,a,c,d)};x.prototype.getPairCache=function(){return k(ag(this.eB),lE)};x.prototype.getDispatchInfo=function(){return k(bg(this.eB),q)};
  x.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?cg(e,a):void 0===d?dg(e,a,c):eg(e,a,c,d)};x.prototype.removeCollisionObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fg(c,a)};x.prototype.getBroadphase=function(){return k(gg(this.eB),mE)};
  x.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);hg(m,a,c,d,e,f)};x.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);ig(e,a,c,d)};
  x.prototype.contactTest=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);jg(d,a,c)};x.prototype.updateSingleAabb=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kg(c,a)};x.prototype.setDebugDrawer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lg(c,a)};x.prototype.getDebugDrawer=function(){return k(mg(this.eB),nE)};x.prototype.debugDrawWorld=function(){ng(this.eB)};
  x.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);og(e,a,c,d)};x.prototype.addAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pg(c,a)};x.prototype.removeAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qg(c,a)};x.prototype.getSolverInfo=function(){return k(rg(this.eB),u)};
  x.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?sg(e,a):void 0===d?tg(e,a,c):ug(e,a,c,d)};x.prototype.__destroy__=function(){vg(this.eB)};function JE(){throw"cannot construct a btVehicleRaycaster, no constructor in IDL";}JE.prototype=Object.create(g.prototype);JE.prototype.constructor=JE;JE.prototype.fB=JE;JE.gB={};b.btVehicleRaycaster=JE;
  JE.prototype.castRay=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);wg(e,a,c,d)};JE.prototype.__destroy__=function(){xg(this.eB)};function KE(){throw"cannot construct a btActionInterface, no constructor in IDL";}KE.prototype=Object.create(g.prototype);KE.prototype.constructor=KE;KE.prototype.fB=KE;KE.gB={};b.btActionInterface=KE;
  KE.prototype.updateAction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);yg(d,a,c)};KE.prototype.__destroy__=function(){zg(this.eB)};function z(){this.eB=Ag();h(z)[this.eB]=this}z.prototype=Object.create(r.prototype);z.prototype.constructor=z;z.prototype.fB=z;z.gB={};b.btGhostObject=z;z.prototype.getNumOverlappingObjects=function(){return Bg(this.eB)};
  z.prototype.getOverlappingObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Cg(c,a),r)};z.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Dg(d,a,c)};z.prototype.getCollisionShape=function(){return k(Eg(this.eB),l)};z.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fg(c,a)};
  z.prototype.setActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gg(c,a)};z.prototype.forceActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hg(c,a)};z.prototype.activate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);void 0===a?Ig(c):Jg(c,a)};z.prototype.isActive=function(){return!!Kg(this.eB)};z.prototype.isKinematicObject=function(){return!!Lg(this.eB)};z.prototype.isStaticObject=function(){return!!Mg(this.eB)};
  z.prototype.isStaticOrKinematicObject=function(){return!!Ng(this.eB)};z.prototype.getRestitution=function(){return Og(this.eB)};z.prototype.getFriction=function(){return Pg(this.eB)};z.prototype.getRollingFriction=function(){return Qg(this.eB)};z.prototype.setRestitution=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rg(c,a)};z.prototype.setFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sg(c,a)};
  z.prototype.setRollingFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tg(c,a)};z.prototype.getWorldTransform=function(){return k(Ug(this.eB),t)};z.prototype.getCollisionFlags=function(){return Vg(this.eB)};z.prototype.setCollisionFlags=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wg(c,a)};z.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xg(c,a)};
  z.prototype.setCollisionShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Yg(c,a)};z.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zg(c,a)};z.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);$g(c,a)};z.prototype.getUserIndex=function(){return ah(this.eB)};z.prototype.setUserIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bh(c,a)};
  z.prototype.getUserPointer=function(){return k(ch(this.eB),oE)};z.prototype.setUserPointer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dh(c,a)};z.prototype.getBroadphaseHandle=function(){return k(eh(this.eB),pE)};z.prototype.__destroy__=function(){fh(this.eB)};function LE(){throw"cannot construct a btSoftBodySolver, no constructor in IDL";}LE.prototype=Object.create(g.prototype);LE.prototype.constructor=LE;LE.prototype.fB=LE;LE.gB={};b.btSoftBodySolver=LE;LE.prototype.__destroy__=function(){gh(this.eB)};
  function oE(){throw"cannot construct a VoidPtr, no constructor in IDL";}oE.prototype=Object.create(g.prototype);oE.prototype.constructor=oE;oE.prototype.fB=oE;oE.gB={};b.VoidPtr=oE;oE.prototype.__destroy__=function(){hh(this.eB)};function ME(){this.eB=ih();h(ME)[this.eB]=this}ME.prototype=Object.create(nE.prototype);ME.prototype.constructor=ME;ME.prototype.fB=ME;ME.gB={};b.DebugDrawer=ME;
  ME.prototype.drawLine=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);jh(e,a,c,d)};ME.prototype.drawContactPoint=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);kh(m,a,c,d,e,f)};
  ME.prototype.reportErrorWarning=function(a){var c=this.eB;eE();a=a&&"object"===typeof a?a.eB:hE(a);lh(c,a)};ME.prototype.draw3dText=function(a,c){var d=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);c=c&&"object"===typeof c?c.eB:hE(c);mh(d,a,c)};ME.prototype.setDebugMode=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nh(c,a)};ME.prototype.getDebugMode=function(){return oh(this.eB)};ME.prototype.__destroy__=function(){ph(this.eB)};
  function A(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=void 0===a?qh():void 0===c?_emscripten_bind_btVector4_btVector4_1(a):void 0===d?_emscripten_bind_btVector4_btVector4_2(a,c):void 0===e?_emscripten_bind_btVector4_btVector4_3(a,c,d):rh(a,c,d,e);h(A)[this.eB]=this}A.prototype=Object.create(n.prototype);A.prototype.constructor=A;A.prototype.fB=A;A.gB={};b.btVector4=A;
  A.prototype.w=A.prototype.w=function(){return sh(this.eB)};A.prototype.setValue=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);th(f,a,c,d,e)};A.prototype.length=A.prototype.length=function(){return uh(this.eB)};A.prototype.x=A.prototype.x=function(){return vh(this.eB)};A.prototype.y=A.prototype.y=function(){return wh(this.eB)};A.prototype.z=A.prototype.z=function(){return xh(this.eB)};
  A.prototype.setX=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yh(c,a)};A.prototype.setY=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zh(c,a)};A.prototype.setZ=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ah(c,a)};A.prototype.normalize=A.prototype.normalize=function(){Bh(this.eB)};A.prototype.rotate=A.prototype.rotate=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return k(Ch(d,a,c),n)};
  A.prototype.dot=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Dh(c,a)};A.prototype.op_mul=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Eh(c,a),n)};A.prototype.op_add=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Fh(c,a),n)};A.prototype.op_sub=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Gh(c,a),n)};A.prototype.__destroy__=function(){Hh(this.eB)};
  function B(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=Ih(a,c,d,e);h(B)[this.eB]=this}B.prototype=Object.create(uE.prototype);B.prototype.constructor=B;B.prototype.fB=B;B.gB={};b.btQuaternion=B;B.prototype.setValue=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);Jh(f,a,c,d,e)};
  B.prototype.setEulerZYX=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Kh(e,a,c,d)};B.prototype.setRotation=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Lh(d,a,c)};B.prototype.normalize=B.prototype.normalize=function(){Mh(this.eB)};B.prototype.length2=function(){return Nh(this.eB)};B.prototype.length=B.prototype.length=function(){return Oh(this.eB)};
  B.prototype.dot=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Ph(c,a)};B.prototype.normalized=function(){return k(Qh(this.eB),B)};B.prototype.getAxis=function(){return k(Rh(this.eB),n)};B.prototype.inverse=B.prototype.inverse=function(){return k(Sh(this.eB),B)};B.prototype.getAngle=function(){return Th(this.eB)};B.prototype.getAngleShortestPath=function(){return Uh(this.eB)};
  B.prototype.angle=B.prototype.angle=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Vh(c,a)};B.prototype.angleShortestPath=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Wh(c,a)};B.prototype.op_add=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Xh(c,a),B)};B.prototype.op_sub=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Yh(c,a),B)};
  B.prototype.op_mul=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Zh(c,a),B)};B.prototype.op_mulq=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k($h(c,a),B)};B.prototype.op_div=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(ai(c,a),B)};B.prototype.x=B.prototype.x=function(){return bi(this.eB)};B.prototype.y=B.prototype.y=function(){return ci(this.eB)};B.prototype.z=B.prototype.z=function(){return di(this.eB)};
  B.prototype.w=B.prototype.w=function(){return ei(this.eB)};B.prototype.setX=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fi(c,a)};B.prototype.setY=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gi(c,a)};B.prototype.setZ=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hi(c,a)};B.prototype.setW=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ii(c,a)};B.prototype.__destroy__=function(){ji(this.eB)};
  function NE(){throw"cannot construct a btMatrix3x3, no constructor in IDL";}NE.prototype=Object.create(g.prototype);NE.prototype.constructor=NE;NE.prototype.fB=NE;NE.gB={};b.btMatrix3x3=NE;NE.prototype.setEulerZYX=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);ki(e,a,c,d)};NE.prototype.getRotation=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);li(c,a)};
  NE.prototype.getRow=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(mi(c,a),n)};NE.prototype.__destroy__=function(){ni(this.eB)};function t(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===a?oi():void 0===c?_emscripten_bind_btTransform_btTransform_1(a):pi(a,c);h(t)[this.eB]=this}t.prototype=Object.create(g.prototype);t.prototype.constructor=t;t.prototype.fB=t;t.gB={};b.btTransform=t;t.prototype.setIdentity=function(){qi(this.eB)};
  t.prototype.setOrigin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ri(c,a)};t.prototype.setRotation=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);si(c,a)};t.prototype.getOrigin=function(){return k(ti(this.eB),n)};t.prototype.getRotation=function(){return k(ui(this.eB),B)};t.prototype.getBasis=function(){return k(vi(this.eB),NE)};t.prototype.setFromOpenGLMatrix=function(a){var c=this.eB;eE();"object"==typeof a&&(a=iE(a));wi(c,a)};
  t.prototype.inverse=t.prototype.inverse=function(){return k(xi(this.eB),t)};t.prototype.op_mul=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(yi(c,a),t)};t.prototype.__destroy__=function(){zi(this.eB)};function OE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===a?Ai():void 0===c?Bi(a):Ci(a,c);h(OE)[this.eB]=this}OE.prototype=Object.create(vE.prototype);OE.prototype.constructor=OE;OE.prototype.fB=OE;OE.gB={};b.btDefaultMotionState=OE;
  OE.prototype.getWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Di(c,a)};OE.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ei(c,a)};OE.prototype.get_m_graphicsWorldTrans=OE.prototype.nD=function(){return k(Fi(this.eB),t)};OE.prototype.set_m_graphicsWorldTrans=OE.prototype.gG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gi(c,a)};Object.defineProperty(OE.prototype,"m_graphicsWorldTrans",{get:OE.prototype.nD,set:OE.prototype.gG});
  OE.prototype.__destroy__=function(){Hi(this.eB)};function PE(){throw"cannot construct a btCollisionObjectWrapper, no constructor in IDL";}PE.prototype=Object.create(g.prototype);PE.prototype.constructor=PE;PE.prototype.fB=PE;PE.gB={};b.btCollisionObjectWrapper=PE;PE.prototype.getWorldTransform=function(){return k(Ii(this.eB),t)};PE.prototype.getCollisionObject=function(){return k(Ji(this.eB),r)};PE.prototype.getCollisionShape=function(){return k(Ki(this.eB),l)};
  function C(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=Li(a,c);h(C)[this.eB]=this}C.prototype=Object.create(v.prototype);C.prototype.constructor=C;C.prototype.fB=C;C.gB={};b.ClosestRayResultCallback=C;C.prototype.hasHit=function(){return!!Mi(this.eB)};C.prototype.get_m_rayFromWorld=C.prototype.MB=function(){return k(Ni(this.eB),n)};C.prototype.set_m_rayFromWorld=C.prototype.WB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Oi(c,a)};
  Object.defineProperty(C.prototype,"m_rayFromWorld",{get:C.prototype.MB,set:C.prototype.WB});C.prototype.get_m_rayToWorld=C.prototype.NB=function(){return k(Pi(this.eB),n)};C.prototype.set_m_rayToWorld=C.prototype.XB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Qi(c,a)};Object.defineProperty(C.prototype,"m_rayToWorld",{get:C.prototype.NB,set:C.prototype.XB});C.prototype.get_m_hitNormalWorld=C.prototype.uB=function(){return k(Ri(this.eB),n)};
  C.prototype.set_m_hitNormalWorld=C.prototype.CB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Si(c,a)};Object.defineProperty(C.prototype,"m_hitNormalWorld",{get:C.prototype.uB,set:C.prototype.CB});C.prototype.get_m_hitPointWorld=C.prototype.vB=function(){return k(Ti(this.eB),n)};C.prototype.set_m_hitPointWorld=C.prototype.DB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ui(c,a)};Object.defineProperty(C.prototype,"m_hitPointWorld",{get:C.prototype.vB,set:C.prototype.DB});
  C.prototype.get_m_collisionFilterGroup=C.prototype.hB=function(){return Vi(this.eB)};C.prototype.set_m_collisionFilterGroup=C.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wi(c,a)};Object.defineProperty(C.prototype,"m_collisionFilterGroup",{get:C.prototype.hB,set:C.prototype.jB});C.prototype.get_m_collisionFilterMask=C.prototype.iB=function(){return Xi(this.eB)};
  C.prototype.set_m_collisionFilterMask=C.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Yi(c,a)};Object.defineProperty(C.prototype,"m_collisionFilterMask",{get:C.prototype.iB,set:C.prototype.kB});C.prototype.get_m_closestHitFraction=C.prototype.lB=function(){return Zi(this.eB)};C.prototype.set_m_closestHitFraction=C.prototype.mB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);$i(c,a)};Object.defineProperty(C.prototype,"m_closestHitFraction",{get:C.prototype.lB,set:C.prototype.mB});
  C.prototype.get_m_collisionObject=C.prototype.sB=function(){return k(aj(this.eB),r)};C.prototype.set_m_collisionObject=C.prototype.AB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bj(c,a)};Object.defineProperty(C.prototype,"m_collisionObject",{get:C.prototype.sB,set:C.prototype.AB});C.prototype.get_m_flags=C.prototype.pB=function(){return cj(this.eB)};C.prototype.set_m_flags=C.prototype.qB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dj(c,a)};
  Object.defineProperty(C.prototype,"m_flags",{get:C.prototype.pB,set:C.prototype.qB});C.prototype.__destroy__=function(){ej(this.eB)};function QE(){throw"cannot construct a btConstCollisionObjectArray, no constructor in IDL";}QE.prototype=Object.create(g.prototype);QE.prototype.constructor=QE;QE.prototype.fB=QE;QE.gB={};b.btConstCollisionObjectArray=QE;QE.prototype.size=QE.prototype.size=function(){return fj(this.eB)};
  QE.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(gj(c,a),r)};QE.prototype.__destroy__=function(){hj(this.eB)};function RE(){throw"cannot construct a btScalarArray, no constructor in IDL";}RE.prototype=Object.create(g.prototype);RE.prototype.constructor=RE;RE.prototype.fB=RE;RE.gB={};b.btScalarArray=RE;RE.prototype.size=RE.prototype.size=function(){return ij(this.eB)};RE.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return jj(c,a)};
  RE.prototype.__destroy__=function(){kj(this.eB)};function D(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=lj(a,c);h(D)[this.eB]=this}D.prototype=Object.create(v.prototype);D.prototype.constructor=D;D.prototype.fB=D;D.gB={};b.AllHitsRayResultCallback=D;D.prototype.hasHit=function(){return!!mj(this.eB)};D.prototype.get_m_collisionObjects=D.prototype.WC=function(){return k(nj(this.eB),QE)};
  D.prototype.set_m_collisionObjects=D.prototype.PF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);oj(c,a)};Object.defineProperty(D.prototype,"m_collisionObjects",{get:D.prototype.WC,set:D.prototype.PF});D.prototype.get_m_rayFromWorld=D.prototype.MB=function(){return k(pj(this.eB),n)};D.prototype.set_m_rayFromWorld=D.prototype.WB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qj(c,a)};Object.defineProperty(D.prototype,"m_rayFromWorld",{get:D.prototype.MB,set:D.prototype.WB});
  D.prototype.get_m_rayToWorld=D.prototype.NB=function(){return k(rj(this.eB),n)};D.prototype.set_m_rayToWorld=D.prototype.XB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sj(c,a)};Object.defineProperty(D.prototype,"m_rayToWorld",{get:D.prototype.NB,set:D.prototype.XB});D.prototype.get_m_hitNormalWorld=D.prototype.uB=function(){return k(tj(this.eB),SE)};D.prototype.set_m_hitNormalWorld=D.prototype.CB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);uj(c,a)};
  Object.defineProperty(D.prototype,"m_hitNormalWorld",{get:D.prototype.uB,set:D.prototype.CB});D.prototype.get_m_hitPointWorld=D.prototype.vB=function(){return k(vj(this.eB),SE)};D.prototype.set_m_hitPointWorld=D.prototype.DB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);wj(c,a)};Object.defineProperty(D.prototype,"m_hitPointWorld",{get:D.prototype.vB,set:D.prototype.DB});D.prototype.get_m_hitFractions=D.prototype.sD=function(){return k(xj(this.eB),RE)};
  D.prototype.set_m_hitFractions=D.prototype.lG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yj(c,a)};Object.defineProperty(D.prototype,"m_hitFractions",{get:D.prototype.sD,set:D.prototype.lG});D.prototype.get_m_collisionFilterGroup=D.prototype.hB=function(){return zj(this.eB)};D.prototype.set_m_collisionFilterGroup=D.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Aj(c,a)};Object.defineProperty(D.prototype,"m_collisionFilterGroup",{get:D.prototype.hB,set:D.prototype.jB});
  D.prototype.get_m_collisionFilterMask=D.prototype.iB=function(){return Bj(this.eB)};D.prototype.set_m_collisionFilterMask=D.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cj(c,a)};Object.defineProperty(D.prototype,"m_collisionFilterMask",{get:D.prototype.iB,set:D.prototype.kB});D.prototype.get_m_closestHitFraction=D.prototype.lB=function(){return Dj(this.eB)};
  D.prototype.set_m_closestHitFraction=D.prototype.mB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ej(c,a)};Object.defineProperty(D.prototype,"m_closestHitFraction",{get:D.prototype.lB,set:D.prototype.mB});D.prototype.get_m_collisionObject=D.prototype.sB=function(){return k(Fj(this.eB),r)};D.prototype.set_m_collisionObject=D.prototype.AB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gj(c,a)};Object.defineProperty(D.prototype,"m_collisionObject",{get:D.prototype.sB,set:D.prototype.AB});
  D.prototype.get_m_flags=D.prototype.pB=function(){return Hj(this.eB)};D.prototype.set_m_flags=D.prototype.qB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ij(c,a)};Object.defineProperty(D.prototype,"m_flags",{get:D.prototype.pB,set:D.prototype.qB});D.prototype.__destroy__=function(){Jj(this.eB)};function F(){throw"cannot construct a btManifoldPoint, no constructor in IDL";}F.prototype=Object.create(g.prototype);F.prototype.constructor=F;F.prototype.fB=F;F.gB={};b.btManifoldPoint=F;
  F.prototype.getPositionWorldOnA=function(){return k(Kj(this.eB),n)};F.prototype.getPositionWorldOnB=function(){return k(Lj(this.eB),n)};F.prototype.getAppliedImpulse=function(){return Mj(this.eB)};F.prototype.getDistance=function(){return Nj(this.eB)};F.prototype.get_m_localPointA=F.prototype.ID=function(){return k(Oj(this.eB),n)};F.prototype.set_m_localPointA=F.prototype.BG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pj(c,a)};
  Object.defineProperty(F.prototype,"m_localPointA",{get:F.prototype.ID,set:F.prototype.BG});F.prototype.get_m_localPointB=F.prototype.JD=function(){return k(Qj(this.eB),n)};F.prototype.set_m_localPointB=F.prototype.CG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rj(c,a)};Object.defineProperty(F.prototype,"m_localPointB",{get:F.prototype.JD,set:F.prototype.CG});F.prototype.get_m_positionWorldOnB=F.prototype.$D=function(){return k(Sj(this.eB),n)};
  F.prototype.set_m_positionWorldOnB=F.prototype.UG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tj(c,a)};Object.defineProperty(F.prototype,"m_positionWorldOnB",{get:F.prototype.$D,set:F.prototype.UG});F.prototype.get_m_positionWorldOnA=F.prototype.ZD=function(){return k(Uj(this.eB),n)};F.prototype.set_m_positionWorldOnA=F.prototype.TG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vj(c,a)};Object.defineProperty(F.prototype,"m_positionWorldOnA",{get:F.prototype.ZD,set:F.prototype.TG});
  F.prototype.get_m_normalWorldOnB=F.prototype.UD=function(){return k(Wj(this.eB),n)};F.prototype.set_m_normalWorldOnB=F.prototype.NG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xj(c,a)};Object.defineProperty(F.prototype,"m_normalWorldOnB",{get:F.prototype.UD,set:F.prototype.NG});F.prototype.get_m_userPersistentData=F.prototype.BE=function(){return Yj(this.eB)};F.prototype.set_m_userPersistentData=F.prototype.vH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zj(c,a)};
  Object.defineProperty(F.prototype,"m_userPersistentData",{get:F.prototype.BE,set:F.prototype.vH});F.prototype.__destroy__=function(){ak(this.eB)};function TE(){this.eB=bk();h(TE)[this.eB]=this}TE.prototype=Object.create(wE.prototype);TE.prototype.constructor=TE;TE.prototype.fB=TE;TE.gB={};b.ConcreteContactResultCallback=TE;
  TE.prototype.addSingleResult=function(a,c,d,e,f,m,y){var W=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);return ck(W,a,c,d,e,f,m,y)};TE.prototype.__destroy__=function(){dk(this.eB)};function UE(){throw"cannot construct a LocalShapeInfo, no constructor in IDL";}UE.prototype=Object.create(g.prototype);
  UE.prototype.constructor=UE;UE.prototype.fB=UE;UE.gB={};b.LocalShapeInfo=UE;UE.prototype.get_m_shapePart=UE.prototype.iE=function(){return ek(this.eB)};UE.prototype.set_m_shapePart=UE.prototype.cH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fk(c,a)};Object.defineProperty(UE.prototype,"m_shapePart",{get:UE.prototype.iE,set:UE.prototype.cH});UE.prototype.get_m_triangleIndex=UE.prototype.xE=function(){return gk(this.eB)};
  UE.prototype.set_m_triangleIndex=UE.prototype.rH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hk(c,a)};Object.defineProperty(UE.prototype,"m_triangleIndex",{get:UE.prototype.xE,set:UE.prototype.rH});UE.prototype.__destroy__=function(){ik(this.eB)};function H(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=jk(a,c,d,e,f);h(H)[this.eB]=this}
  H.prototype=Object.create(g.prototype);H.prototype.constructor=H;H.prototype.fB=H;H.gB={};b.LocalConvexResult=H;H.prototype.get_m_hitCollisionObject=H.prototype.KB=function(){return k(kk(this.eB),r)};H.prototype.set_m_hitCollisionObject=H.prototype.UB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lk(c,a)};Object.defineProperty(H.prototype,"m_hitCollisionObject",{get:H.prototype.KB,set:H.prototype.UB});H.prototype.get_m_localShapeInfo=H.prototype.KD=function(){return k(mk(this.eB),UE)};
  H.prototype.set_m_localShapeInfo=H.prototype.DG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nk(c,a)};Object.defineProperty(H.prototype,"m_localShapeInfo",{get:H.prototype.KD,set:H.prototype.DG});H.prototype.get_m_hitNormalLocal=H.prototype.uD=function(){return k(ok(this.eB),n)};H.prototype.set_m_hitNormalLocal=H.prototype.nG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pk(c,a)};Object.defineProperty(H.prototype,"m_hitNormalLocal",{get:H.prototype.uD,set:H.prototype.nG});
  H.prototype.get_m_hitPointLocal=H.prototype.wD=function(){return k(qk(this.eB),n)};H.prototype.set_m_hitPointLocal=H.prototype.pG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rk(c,a)};Object.defineProperty(H.prototype,"m_hitPointLocal",{get:H.prototype.wD,set:H.prototype.pG});H.prototype.get_m_hitFraction=H.prototype.rD=function(){return sk(this.eB)};H.prototype.set_m_hitFraction=H.prototype.kG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tk(c,a)};
  Object.defineProperty(H.prototype,"m_hitFraction",{get:H.prototype.rD,set:H.prototype.kG});H.prototype.__destroy__=function(){uk(this.eB)};function I(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=vk(a,c);h(I)[this.eB]=this}I.prototype=Object.create(w.prototype);I.prototype.constructor=I;I.prototype.fB=I;I.gB={};b.ClosestConvexResultCallback=I;I.prototype.hasHit=function(){return!!wk(this.eB)};
  I.prototype.get_m_hitCollisionObject=I.prototype.KB=function(){return k(xk(this.eB),r)};I.prototype.set_m_hitCollisionObject=I.prototype.UB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yk(c,a)};Object.defineProperty(I.prototype,"m_hitCollisionObject",{get:I.prototype.KB,set:I.prototype.UB});I.prototype.get_m_convexFromWorld=I.prototype.aD=function(){return k(zk(this.eB),n)};
  I.prototype.set_m_convexFromWorld=I.prototype.UF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ak(c,a)};Object.defineProperty(I.prototype,"m_convexFromWorld",{get:I.prototype.aD,set:I.prototype.UF});I.prototype.get_m_convexToWorld=I.prototype.bD=function(){return k(Bk(this.eB),n)};I.prototype.set_m_convexToWorld=I.prototype.VF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ck(c,a)};Object.defineProperty(I.prototype,"m_convexToWorld",{get:I.prototype.bD,set:I.prototype.VF});
  I.prototype.get_m_hitNormalWorld=I.prototype.uB=function(){return k(Dk(this.eB),n)};I.prototype.set_m_hitNormalWorld=I.prototype.CB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ek(c,a)};Object.defineProperty(I.prototype,"m_hitNormalWorld",{get:I.prototype.uB,set:I.prototype.CB});I.prototype.get_m_hitPointWorld=I.prototype.vB=function(){return k(Fk(this.eB),n)};I.prototype.set_m_hitPointWorld=I.prototype.DB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gk(c,a)};
  Object.defineProperty(I.prototype,"m_hitPointWorld",{get:I.prototype.vB,set:I.prototype.DB});I.prototype.get_m_collisionFilterGroup=I.prototype.hB=function(){return Hk(this.eB)};I.prototype.set_m_collisionFilterGroup=I.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ik(c,a)};Object.defineProperty(I.prototype,"m_collisionFilterGroup",{get:I.prototype.hB,set:I.prototype.jB});I.prototype.get_m_collisionFilterMask=I.prototype.iB=function(){return Jk(this.eB)};
  I.prototype.set_m_collisionFilterMask=I.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Kk(c,a)};Object.defineProperty(I.prototype,"m_collisionFilterMask",{get:I.prototype.iB,set:I.prototype.kB});I.prototype.get_m_closestHitFraction=I.prototype.lB=function(){return Lk(this.eB)};I.prototype.set_m_closestHitFraction=I.prototype.mB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Mk(c,a)};Object.defineProperty(I.prototype,"m_closestHitFraction",{get:I.prototype.lB,set:I.prototype.mB});
  I.prototype.__destroy__=function(){Nk(this.eB)};function VE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===c?Ok(a):Pk(a,c);h(VE)[this.eB]=this}VE.prototype=Object.create(xE.prototype);VE.prototype.constructor=VE;VE.prototype.fB=VE;VE.gB={};b.btConvexTriangleMeshShape=VE;VE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Qk(c,a)};VE.prototype.getLocalScaling=function(){return k(Rk(this.eB),n)};
  VE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Sk(d,a,c)};VE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tk(c,a)};VE.prototype.getMargin=function(){return Uk(this.eB)};VE.prototype.__destroy__=function(){Vk(this.eB)};function WE(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Wk(a);h(WE)[this.eB]=this}WE.prototype=Object.create(l.prototype);WE.prototype.constructor=WE;WE.prototype.fB=WE;
  WE.gB={};b.btBoxShape=WE;WE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xk(c,a)};WE.prototype.getMargin=function(){return Yk(this.eB)};WE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zk(c,a)};WE.prototype.getLocalScaling=function(){return k($k(this.eB),n)};WE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);al(d,a,c)};WE.prototype.__destroy__=function(){bl(this.eB)};
  function XE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=cl(a,c);h(XE)[this.eB]=this}XE.prototype=Object.create(yE.prototype);XE.prototype.constructor=XE;XE.prototype.fB=XE;XE.gB={};b.btCapsuleShapeX=XE;XE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dl(c,a)};XE.prototype.getMargin=function(){return el(this.eB)};XE.prototype.getUpAxis=function(){return fl(this.eB)};XE.prototype.getRadius=function(){return gl(this.eB)};
  XE.prototype.getHalfHeight=function(){return hl(this.eB)};XE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);il(c,a)};XE.prototype.getLocalScaling=function(){return k(jl(this.eB),n)};XE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);kl(d,a,c)};XE.prototype.__destroy__=function(){ll(this.eB)};
  function YE(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=ml(a,c);h(YE)[this.eB]=this}YE.prototype=Object.create(yE.prototype);YE.prototype.constructor=YE;YE.prototype.fB=YE;YE.gB={};b.btCapsuleShapeZ=YE;YE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nl(c,a)};YE.prototype.getMargin=function(){return ol(this.eB)};YE.prototype.getUpAxis=function(){return pl(this.eB)};YE.prototype.getRadius=function(){return ql(this.eB)};
  YE.prototype.getHalfHeight=function(){return rl(this.eB)};YE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sl(c,a)};YE.prototype.getLocalScaling=function(){return k(tl(this.eB),n)};YE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);ul(d,a,c)};YE.prototype.__destroy__=function(){vl(this.eB)};function ZE(a){a&&"object"===typeof a&&(a=a.eB);this.eB=wl(a);h(ZE)[this.eB]=this}
  ZE.prototype=Object.create(zE.prototype);ZE.prototype.constructor=ZE;ZE.prototype.fB=ZE;ZE.gB={};b.btCylinderShapeX=ZE;ZE.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xl(c,a)};ZE.prototype.getMargin=function(){return yl(this.eB)};ZE.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zl(c,a)};ZE.prototype.getLocalScaling=function(){return k(Al(this.eB),n)};
  ZE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Bl(d,a,c)};ZE.prototype.__destroy__=function(){Cl(this.eB)};function $E(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Dl(a);h($E)[this.eB]=this}$E.prototype=Object.create(zE.prototype);$E.prototype.constructor=$E;$E.prototype.fB=$E;$E.gB={};b.btCylinderShapeZ=$E;$E.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);El(c,a)};
  $E.prototype.getMargin=function(){return Fl(this.eB)};$E.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gl(c,a)};$E.prototype.getLocalScaling=function(){return k(Hl(this.eB),n)};$E.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Il(d,a,c)};$E.prototype.__destroy__=function(){Jl(this.eB)};function aF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Kl(a);h(aF)[this.eB]=this}aF.prototype=Object.create(l.prototype);
  aF.prototype.constructor=aF;aF.prototype.fB=aF;aF.gB={};b.btSphereShape=aF;aF.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ll(c,a)};aF.prototype.getMargin=function(){return Ml(this.eB)};aF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Nl(c,a)};aF.prototype.getLocalScaling=function(){return k(Ol(this.eB),n)};
  aF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Pl(d,a,c)};aF.prototype.__destroy__=function(){Ql(this.eB)};function bF(a,c,d){eE();a&&"object"===typeof a&&(a=a.eB);"object"==typeof c&&(c=iE(c));d&&"object"===typeof d&&(d=d.eB);this.eB=Rl(a,c,d);h(bF)[this.eB]=this}bF.prototype=Object.create(l.prototype);bF.prototype.constructor=bF;bF.prototype.fB=bF;bF.gB={};b.btMultiSphereShape=bF;
  bF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sl(c,a)};bF.prototype.getLocalScaling=function(){return k(Tl(this.eB),n)};bF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ul(d,a,c)};bF.prototype.__destroy__=function(){Vl(this.eB)};function cF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=Wl(a,c);h(cF)[this.eB]=this}cF.prototype=Object.create(AE.prototype);
  cF.prototype.constructor=cF;cF.prototype.fB=cF;cF.gB={};b.btConeShapeX=cF;cF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xl(c,a)};cF.prototype.getLocalScaling=function(){return k(Yl(this.eB),n)};cF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Zl(d,a,c)};cF.prototype.__destroy__=function(){$l(this.eB)};
  function dF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=am(a,c);h(dF)[this.eB]=this}dF.prototype=Object.create(AE.prototype);dF.prototype.constructor=dF;dF.prototype.fB=dF;dF.gB={};b.btConeShapeZ=dF;dF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bm(c,a)};dF.prototype.getLocalScaling=function(){return k(cm(this.eB),n)};
  dF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);dm(d,a,c)};dF.prototype.__destroy__=function(){em(this.eB)};function eF(){throw"cannot construct a btIntArray, no constructor in IDL";}eF.prototype=Object.create(g.prototype);eF.prototype.constructor=eF;eF.prototype.fB=eF;eF.gB={};b.btIntArray=eF;eF.prototype.size=eF.prototype.size=function(){return fm(this.eB)};
  eF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return gm(c,a)};eF.prototype.__destroy__=function(){hm(this.eB)};function fF(){throw"cannot construct a btFace, no constructor in IDL";}fF.prototype=Object.create(g.prototype);fF.prototype.constructor=fF;fF.prototype.fB=fF;fF.gB={};b.btFace=fF;fF.prototype.get_m_indices=fF.prototype.zD=function(){return k(im(this.eB),eF)};
  fF.prototype.set_m_indices=fF.prototype.sG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jm(c,a)};Object.defineProperty(fF.prototype,"m_indices",{get:fF.prototype.zD,set:fF.prototype.sG});fF.prototype.get_m_plane=fF.prototype.YD=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return km(c,a)};fF.prototype.set_m_plane=fF.prototype.SG=function(a,c){var d=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);lm(d,a,c)};
  Object.defineProperty(fF.prototype,"m_plane",{get:fF.prototype.YD,set:fF.prototype.SG});fF.prototype.__destroy__=function(){mm(this.eB)};function SE(){throw"cannot construct a btVector3Array, no constructor in IDL";}SE.prototype=Object.create(g.prototype);SE.prototype.constructor=SE;SE.prototype.fB=SE;SE.gB={};b.btVector3Array=SE;SE.prototype.size=SE.prototype.size=function(){return nm(this.eB)};SE.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(om(c,a),n)};
  SE.prototype.__destroy__=function(){pm(this.eB)};function gF(){throw"cannot construct a btFaceArray, no constructor in IDL";}gF.prototype=Object.create(g.prototype);gF.prototype.constructor=gF;gF.prototype.fB=gF;gF.gB={};b.btFaceArray=gF;gF.prototype.size=gF.prototype.size=function(){return qm(this.eB)};gF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(rm(c,a),fF)};gF.prototype.__destroy__=function(){sm(this.eB)};
  function hF(){throw"cannot construct a btConvexPolyhedron, no constructor in IDL";}hF.prototype=Object.create(g.prototype);hF.prototype.constructor=hF;hF.prototype.fB=hF;hF.gB={};b.btConvexPolyhedron=hF;hF.prototype.get_m_vertices=hF.prototype.DE=function(){return k(tm(this.eB),SE)};hF.prototype.set_m_vertices=hF.prototype.xH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);um(c,a)};Object.defineProperty(hF.prototype,"m_vertices",{get:hF.prototype.DE,set:hF.prototype.xH});
  hF.prototype.get_m_faces=hF.prototype.JB=function(){return k(wm(this.eB),gF)};hF.prototype.set_m_faces=hF.prototype.TB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xm(c,a)};Object.defineProperty(hF.prototype,"m_faces",{get:hF.prototype.JB,set:hF.prototype.TB});hF.prototype.__destroy__=function(){ym(this.eB)};function iF(a,c){eE();"object"==typeof a&&(a=iE(a));c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===a?zm():void 0===c?Am(a):Bm(a,c);h(iF)[this.eB]=this}iF.prototype=Object.create(l.prototype);
  iF.prototype.constructor=iF;iF.prototype.fB=iF;iF.gB={};b.btConvexHullShape=iF;iF.prototype.addPoint=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===c?Cm(d,a):Dm(d,a,c)};iF.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Em(c,a)};iF.prototype.getMargin=function(){return Fm(this.eB)};iF.prototype.getNumVertices=function(){return Gm(this.eB)};
  iF.prototype.initializePolyhedralFeatures=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return!!Hm(c,a)};iF.prototype.recalcLocalAabb=function(){Im(this.eB)};iF.prototype.getConvexPolyhedron=function(){return k(Jm(this.eB),hF)};iF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Km(c,a)};iF.prototype.getLocalScaling=function(){return k(Lm(this.eB),n)};
  iF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Mm(d,a,c)};iF.prototype.__destroy__=function(){Nm(this.eB)};function jF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Om(a);h(jF)[this.eB]=this}jF.prototype=Object.create(g.prototype);jF.prototype.constructor=jF;jF.prototype.fB=jF;jF.gB={};b.btShapeHull=jF;jF.prototype.buildHull=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return!!Pm(c,a)};
  jF.prototype.numVertices=function(){return Qm(this.eB)};jF.prototype.getVertexPointer=function(){return k(Rm(this.eB),n)};jF.prototype.__destroy__=function(){Sm(this.eB)};function kF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=void 0===a?Tm():Um(a);h(kF)[this.eB]=this}kF.prototype=Object.create(l.prototype);kF.prototype.constructor=kF;kF.prototype.fB=kF;kF.gB={};b.btCompoundShape=kF;
  kF.prototype.addChildShape=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Vm(d,a,c)};kF.prototype.removeChildShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wm(c,a)};kF.prototype.removeChildShapeByIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xm(c,a)};kF.prototype.getNumChildShapes=function(){return Ym(this.eB)};kF.prototype.getChildShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Zm(c,a),l)};
  kF.prototype.updateChildTransform=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===d?$m(e,a,c):an(e,a,c,d)};kF.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bn(c,a)};kF.prototype.getMargin=function(){return cn(this.eB)};kF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dn(c,a)};kF.prototype.getLocalScaling=function(){return k(en(this.eB),n)};
  kF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);fn(d,a,c)};kF.prototype.__destroy__=function(){gn(this.eB)};function lF(){throw"cannot construct a btIndexedMesh, no constructor in IDL";}lF.prototype=Object.create(g.prototype);lF.prototype.constructor=lF;lF.prototype.fB=lF;lF.gB={};b.btIndexedMesh=lF;lF.prototype.get_m_numTriangles=lF.prototype.WD=function(){return hn(this.eB)};
  lF.prototype.set_m_numTriangles=lF.prototype.PG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jn(c,a)};Object.defineProperty(lF.prototype,"m_numTriangles",{get:lF.prototype.WD,set:lF.prototype.PG});lF.prototype.__destroy__=function(){kn(this.eB)};function mF(){throw"cannot construct a btIndexedMeshArray, no constructor in IDL";}mF.prototype=Object.create(g.prototype);mF.prototype.constructor=mF;mF.prototype.fB=mF;mF.gB={};b.btIndexedMeshArray=mF;mF.prototype.size=mF.prototype.size=function(){return ln(this.eB)};
  mF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(mn(c,a),lF)};mF.prototype.__destroy__=function(){nn(this.eB)};function nF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===a?on():void 0===c?pn(a):qn(a,c);h(nF)[this.eB]=this}nF.prototype=Object.create(BE.prototype);nF.prototype.constructor=nF;nF.prototype.fB=nF;nF.gB={};b.btTriangleMesh=nF;
  nF.prototype.addTriangle=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);void 0===e?rn(f,a,c,d):sn(f,a,c,d,e)};nF.prototype.findOrAddVertex=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return tn(d,a,c)};nF.prototype.addIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);un(c,a)};
  nF.prototype.getIndexedMeshArray=function(){return k(vn(this.eB),mF)};nF.prototype.setScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);wn(c,a)};nF.prototype.__destroy__=function(){xn(this.eB)};function oF(){this.eB=yn();h(oF)[this.eB]=this}oF.prototype=Object.create(qE.prototype);oF.prototype.constructor=oF;oF.prototype.fB=oF;oF.gB={};b.btEmptyShape=oF;oF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zn(c,a)};
  oF.prototype.getLocalScaling=function(){return k(An(this.eB),n)};oF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Bn(d,a,c)};oF.prototype.__destroy__=function(){Cn(this.eB)};function pF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=Dn(a,c);h(pF)[this.eB]=this}pF.prototype=Object.create(qE.prototype);pF.prototype.constructor=pF;pF.prototype.fB=pF;pF.gB={};b.btStaticPlaneShape=pF;
  pF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);En(c,a)};pF.prototype.getLocalScaling=function(){return k(Fn(this.eB),n)};pF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Gn(d,a,c)};pF.prototype.__destroy__=function(){Hn(this.eB)};
  function qF(a,c,d){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);this.eB=void 0===d?In(a,c):Jn(a,c,d);h(qF)[this.eB]=this}qF.prototype=Object.create(CE.prototype);qF.prototype.constructor=qF;qF.prototype.fB=qF;qF.gB={};b.btBvhTriangleMeshShape=qF;qF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Kn(c,a)};qF.prototype.getLocalScaling=function(){return k(Ln(this.eB),n)};
  qF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Mn(d,a,c)};qF.prototype.__destroy__=function(){Nn(this.eB)};
  function rF(a,c,d,e,f,m,y,W,E){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);W&&"object"===typeof W&&(W=W.eB);E&&"object"===typeof E&&(E=E.eB);this.eB=On(a,c,d,e,f,m,y,W,E);h(rF)[this.eB]=this}rF.prototype=Object.create(qE.prototype);rF.prototype.constructor=rF;rF.prototype.fB=rF;rF.gB={};
  b.btHeightfieldTerrainShape=rF;rF.prototype.setMargin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pn(c,a)};rF.prototype.getMargin=function(){return Qn(this.eB)};rF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rn(c,a)};rF.prototype.getLocalScaling=function(){return k(Sn(this.eB),n)};rF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Tn(d,a,c)};
  rF.prototype.__destroy__=function(){Un(this.eB)};function sF(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=Vn(a,c,d,e);h(sF)[this.eB]=this}sF.prototype=Object.create(g.prototype);sF.prototype.constructor=sF;sF.prototype.fB=sF;sF.gB={};b.btAABB=sF;sF.prototype.invalidate=function(){Wn(this.eB)};sF.prototype.increment_margin=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xn(c,a)};
  sF.prototype.copy_with_margin=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Yn(d,a,c)};sF.prototype.__destroy__=function(){Zn(this.eB)};function tF(){this.eB=$n();h(tF)[this.eB]=this}tF.prototype=Object.create(g.prototype);tF.prototype.constructor=tF;tF.prototype.fB=tF;tF.gB={};b.btPrimitiveTriangle=tF;tF.prototype.__destroy__=function(){ao(this.eB)};
  function uF(a,c,d){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);this.eB=bo(a,c,d);h(uF)[this.eB]=this}uF.prototype=Object.create(g.prototype);uF.prototype.constructor=uF;uF.prototype.fB=uF;uF.gB={};b.btTriangleShapeEx=uF;uF.prototype.getAabb=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);co(e,a,c,d)};
  uF.prototype.applyTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);eo(c,a)};uF.prototype.buildTriPlane=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fo(c,a)};uF.prototype.__destroy__=function(){go(this.eB)};function vF(){this.eB=ho();h(vF)[this.eB]=this}vF.prototype=Object.create(g.prototype);vF.prototype.constructor=vF;vF.prototype.fB=vF;vF.gB={};b.btTetrahedronShapeEx=vF;
  vF.prototype.setVertices=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);io(f,a,c,d,e)};vF.prototype.__destroy__=function(){jo(this.eB)};function wF(){throw"cannot construct a CompoundPrimitiveManager, no constructor in IDL";}wF.prototype=Object.create(DE.prototype);wF.prototype.constructor=wF;wF.prototype.fB=wF;wF.gB={};b.CompoundPrimitiveManager=wF;
  wF.prototype.get_primitive_count=function(){return ko(this.eB)};wF.prototype.get_primitive_box=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);lo(d,a,c)};wF.prototype.get_primitive_triangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);mo(d,a,c)};wF.prototype.is_trimesh=function(){return!!no(this.eB)};wF.prototype.get_m_compoundShape=wF.prototype.XC=function(){return k(oo(this.eB),J)};
  wF.prototype.set_m_compoundShape=wF.prototype.QF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);po(c,a)};Object.defineProperty(wF.prototype,"m_compoundShape",{get:wF.prototype.XC,set:wF.prototype.QF});wF.prototype.__destroy__=function(){qo(this.eB)};function J(a){a&&"object"===typeof a&&(a=a.eB);this.eB=void 0===a?ro():so(a);h(J)[this.eB]=this}J.prototype=Object.create(EE.prototype);J.prototype.constructor=J;J.prototype.fB=J;J.gB={};b.btGImpactCompoundShape=J;
  J.prototype.childrenHasTransform=function(){return!!to(this.eB)};J.prototype.getPrimitiveManager=function(){return k(uo(this.eB),DE)};J.prototype.getCompoundPrimitiveManager=function(){return k(vo(this.eB),wF)};J.prototype.getNumChildShapes=function(){return wo(this.eB)};J.prototype.addChildShape=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);xo(d,a,c)};
  J.prototype.getChildShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(yo(c,a),l)};J.prototype.getChildAabb=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);zo(f,a,c,d,e)};J.prototype.getChildTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Ao(c,a),t)};
  J.prototype.setChildTransform=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Bo(d,a,c)};J.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Co(d,a,c)};J.prototype.getName=function(){return Ma(Do(this.eB))};J.prototype.getGImpactShapeType=function(){return Eo(this.eB)};J.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fo(c,a)};
  J.prototype.getLocalScaling=function(){return k(Go(this.eB),n)};J.prototype.updateBound=function(){Ho(this.eB)};J.prototype.postUpdate=function(){Io(this.eB)};J.prototype.getShapeType=function(){return Jo(this.eB)};J.prototype.needsRetrieveTriangles=function(){return!!Ko(this.eB)};J.prototype.needsRetrieveTetrahedrons=function(){return!!Lo(this.eB)};J.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Mo(d,a,c)};
  J.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);No(d,a,c)};J.prototype.__destroy__=function(){Oo(this.eB)};function K(a){a&&"object"===typeof a&&(a=a.eB);this.eB=void 0===a?Po():Qo(a);h(K)[this.eB]=this}K.prototype=Object.create(DE.prototype);K.prototype.constructor=K;K.prototype.fB=K;K.gB={};b.TrimeshPrimitiveManager=K;K.prototype.lock=K.prototype.lock=function(){Ro(this.eB)};K.prototype.unlock=K.prototype.unlock=function(){So(this.eB)};
  K.prototype.is_trimesh=function(){return!!To(this.eB)};K.prototype.get_vertex_count=function(){return Uo(this.eB)};K.prototype.get_indices=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);Vo(f,a,c,d,e)};K.prototype.get_vertex=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Wo(d,a,c)};
  K.prototype.get_bullet_triangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Xo(d,a,c)};K.prototype.get_m_margin=K.prototype.ND=function(){return Yo(this.eB)};K.prototype.set_m_margin=K.prototype.GG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zo(c,a)};Object.defineProperty(K.prototype,"m_margin",{get:K.prototype.ND,set:K.prototype.GG});K.prototype.get_m_meshInterface=K.prototype.QD=function(){return k($o(this.eB),BE)};
  K.prototype.set_m_meshInterface=K.prototype.JG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ap(c,a)};Object.defineProperty(K.prototype,"m_meshInterface",{get:K.prototype.QD,set:K.prototype.JG});K.prototype.get_m_part=K.prototype.XD=function(){return bp(this.eB)};K.prototype.set_m_part=K.prototype.QG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cp(c,a)};Object.defineProperty(K.prototype,"m_part",{get:K.prototype.XD,set:K.prototype.QG});
  K.prototype.get_m_lock_count=K.prototype.LD=function(){return dp(this.eB)};K.prototype.set_m_lock_count=K.prototype.EG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ep(c,a)};Object.defineProperty(K.prototype,"m_lock_count",{get:K.prototype.LD,set:K.prototype.EG});K.prototype.get_numverts=K.prototype.NE=function(){return fp(this.eB)};K.prototype.set_numverts=K.prototype.HH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gp(c,a)};
  Object.defineProperty(K.prototype,"numverts",{get:K.prototype.NE,set:K.prototype.HH});K.prototype.get_type=K.prototype.RE=function(){return hp(this.eB)};K.prototype.set_type=K.prototype.LH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ip(c,a)};Object.defineProperty(K.prototype,"type",{get:K.prototype.RE,set:K.prototype.LH});K.prototype.get_stride=K.prototype.PE=function(){return jp(this.eB)};
  K.prototype.set_stride=K.prototype.JH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kp(c,a)};Object.defineProperty(K.prototype,"stride",{get:K.prototype.PE,set:K.prototype.JH});K.prototype.get_indexstride=K.prototype.iC=function(){return lp(this.eB)};K.prototype.set_indexstride=K.prototype.bF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mp(c,a)};Object.defineProperty(K.prototype,"indexstride",{get:K.prototype.iC,set:K.prototype.bF});
  K.prototype.get_numfaces=K.prototype.ME=function(){return np(this.eB)};K.prototype.set_numfaces=K.prototype.GH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);op(c,a)};Object.defineProperty(K.prototype,"numfaces",{get:K.prototype.ME,set:K.prototype.GH});K.prototype.get_indicestype=K.prototype.jC=function(){return pp(this.eB)};K.prototype.set_indicestype=K.prototype.cF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qp(c,a)};
  Object.defineProperty(K.prototype,"indicestype",{get:K.prototype.jC,set:K.prototype.cF});K.prototype.__destroy__=function(){rp(this.eB)};function xF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=sp(a,c);h(xF)[this.eB]=this}xF.prototype=Object.create(EE.prototype);xF.prototype.constructor=xF;xF.prototype.fB=xF;xF.gB={};b.btGImpactMeshShapePart=xF;xF.prototype.getTrimeshPrimitiveManager=function(){return k(tp(this.eB),K)};xF.prototype.getVertexCount=function(){return up(this.eB)};
  xF.prototype.getVertex=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);vp(d,a,c)};xF.prototype.getPart=function(){return wp(this.eB)};xF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xp(c,a)};xF.prototype.getLocalScaling=function(){return k(yp(this.eB),n)};xF.prototype.updateBound=function(){zp(this.eB)};xF.prototype.postUpdate=function(){Ap(this.eB)};xF.prototype.getShapeType=function(){return Bp(this.eB)};
  xF.prototype.needsRetrieveTriangles=function(){return!!Cp(this.eB)};xF.prototype.needsRetrieveTetrahedrons=function(){return!!Dp(this.eB)};xF.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ep(d,a,c)};xF.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Fp(d,a,c)};xF.prototype.__destroy__=function(){Gp(this.eB)};
  function yF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=Hp(a);h(yF)[this.eB]=this}yF.prototype=Object.create(EE.prototype);yF.prototype.constructor=yF;yF.prototype.fB=yF;yF.gB={};b.btGImpactMeshShape=yF;yF.prototype.getMeshInterface=function(){return k(Ip(this.eB),BE)};yF.prototype.getMeshPartCount=function(){return Jp(this.eB)};yF.prototype.getMeshPart=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Kp(c,a),xF)};yF.prototype.calculateSerializeBufferSize=function(){return Lp(this.eB)};
  yF.prototype.setLocalScaling=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Mp(c,a)};yF.prototype.getLocalScaling=function(){return k(Np(this.eB),n)};yF.prototype.updateBound=function(){Op(this.eB)};yF.prototype.postUpdate=function(){Pp(this.eB)};yF.prototype.getShapeType=function(){return Qp(this.eB)};yF.prototype.needsRetrieveTriangles=function(){return!!Rp(this.eB)};yF.prototype.needsRetrieveTetrahedrons=function(){return!!Sp(this.eB)};
  yF.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Tp(d,a,c)};yF.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Up(d,a,c)};yF.prototype.__destroy__=function(){Vp(this.eB)};
  function zF(a,c){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);this.eB=void 0===a?Wp():void 0===c?_emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_1(a):Xp(a,c);h(zF)[this.eB]=this}zF.prototype=Object.create(g.prototype);zF.prototype.constructor=zF;zF.prototype.fB=zF;zF.gB={};b.btCollisionAlgorithmConstructionInfo=zF;zF.prototype.get_m_dispatcher1=zF.prototype.gD=function(){return k(Yp(this.eB),kE)};
  zF.prototype.set_m_dispatcher1=zF.prototype.$F=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zp(c,a)};Object.defineProperty(zF.prototype,"m_dispatcher1",{get:zF.prototype.gD,set:zF.prototype.$F});zF.prototype.get_m_manifold=zF.prototype.MD=function(){return k($p(this.eB),HE)};zF.prototype.set_m_manifold=zF.prototype.FG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);aq(c,a)};Object.defineProperty(zF.prototype,"m_manifold",{get:zF.prototype.MD,set:zF.prototype.FG});
  zF.prototype.__destroy__=function(){bq(this.eB)};function AF(a,c,d){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);this.eB=cq(a,c,d);h(AF)[this.eB]=this}AF.prototype=Object.create(FE.prototype);AF.prototype.constructor=AF;AF.prototype.fB=AF;AF.gB={};b.btGImpactCollisionAlgorithm=AF;AF.prototype.registerAlgorithm=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dq(c,a)};AF.prototype.__destroy__=function(){eq(this.eB)};
  function BF(){this.eB=fq();h(BF)[this.eB]=this}BF.prototype=Object.create(g.prototype);BF.prototype.constructor=BF;BF.prototype.fB=BF;BF.gB={};b.btDefaultCollisionConstructionInfo=BF;BF.prototype.__destroy__=function(){gq(this.eB)};function HE(){this.eB=hq();h(HE)[this.eB]=this}HE.prototype=Object.create(g.prototype);HE.prototype.constructor=HE;HE.prototype.fB=HE;HE.gB={};b.btPersistentManifold=HE;HE.prototype.getBody0=function(){return k(iq(this.eB),r)};
  HE.prototype.getBody1=function(){return k(jq(this.eB),r)};HE.prototype.getNumContacts=function(){return kq(this.eB)};HE.prototype.getContactPoint=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(lq(c,a),F)};HE.prototype.__destroy__=function(){mq(this.eB)};function CF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=nq(a);h(CF)[this.eB]=this}CF.prototype=Object.create(kE.prototype);CF.prototype.constructor=CF;CF.prototype.fB=CF;CF.gB={};b.btCollisionDispatcher=CF;
  CF.prototype.getNumManifolds=function(){return oq(this.eB)};CF.prototype.getManifoldByIndexInternal=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(pq(c,a),HE)};CF.prototype.__destroy__=function(){qq(this.eB)};function DF(){throw"cannot construct a btOverlappingPairCallback, no constructor in IDL";}DF.prototype=Object.create(g.prototype);DF.prototype.constructor=DF;DF.prototype.fB=DF;DF.gB={};b.btOverlappingPairCallback=DF;DF.prototype.__destroy__=function(){rq(this.eB)};
  function lE(){throw"cannot construct a btOverlappingPairCache, no constructor in IDL";}lE.prototype=Object.create(g.prototype);lE.prototype.constructor=lE;lE.prototype.fB=lE;lE.gB={};b.btOverlappingPairCache=lE;lE.prototype.setInternalGhostPairCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sq(c,a)};lE.prototype.getNumOverlappingPairs=function(){return tq(this.eB)};lE.prototype.__destroy__=function(){uq(this.eB)};
  function EF(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=void 0===d?vq(a,c):void 0===e?wq(a,c,d):void 0===f?xq(a,c,d,e):yq(a,c,d,e,f);h(EF)[this.eB]=this}EF.prototype=Object.create(g.prototype);EF.prototype.constructor=EF;EF.prototype.fB=EF;EF.gB={};b.btAxisSweep3=EF;EF.prototype.__destroy__=function(){zq(this.eB)};
  function mE(){throw"cannot construct a btBroadphaseInterface, no constructor in IDL";}mE.prototype=Object.create(g.prototype);mE.prototype.constructor=mE;mE.prototype.fB=mE;mE.gB={};b.btBroadphaseInterface=mE;mE.prototype.getOverlappingPairCache=function(){return k(Aq(this.eB),lE)};mE.prototype.__destroy__=function(){Bq(this.eB)};function FF(){throw"cannot construct a btCollisionConfiguration, no constructor in IDL";}FF.prototype=Object.create(g.prototype);FF.prototype.constructor=FF;
  FF.prototype.fB=FF;FF.gB={};b.btCollisionConfiguration=FF;FF.prototype.__destroy__=function(){Cq(this.eB)};function GF(){this.eB=Dq();h(GF)[this.eB]=this}GF.prototype=Object.create(g.prototype);GF.prototype.constructor=GF;GF.prototype.fB=GF;GF.gB={};b.btDbvtBroadphase=GF;GF.prototype.__destroy__=function(){Eq(this.eB)};function pE(){throw"cannot construct a btBroadphaseProxy, no constructor in IDL";}pE.prototype=Object.create(g.prototype);pE.prototype.constructor=pE;pE.prototype.fB=pE;pE.gB={};
  b.btBroadphaseProxy=pE;pE.prototype.get_m_collisionFilterGroup=pE.prototype.hB=function(){return Fq(this.eB)};pE.prototype.set_m_collisionFilterGroup=pE.prototype.jB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gq(c,a)};Object.defineProperty(pE.prototype,"m_collisionFilterGroup",{get:pE.prototype.hB,set:pE.prototype.jB});pE.prototype.get_m_collisionFilterMask=pE.prototype.iB=function(){return Hq(this.eB)};
  pE.prototype.set_m_collisionFilterMask=pE.prototype.kB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Iq(c,a)};Object.defineProperty(pE.prototype,"m_collisionFilterMask",{get:pE.prototype.iB,set:pE.prototype.kB});pE.prototype.__destroy__=function(){Jq(this.eB)};function L(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=void 0===e?Kq(a,c,d):Lq(a,c,d,e);h(L)[this.eB]=this}L.prototype=Object.create(g.prototype);
  L.prototype.constructor=L;L.prototype.fB=L;L.gB={};b.btRigidBodyConstructionInfo=L;L.prototype.get_m_linearDamping=L.prototype.FD=function(){return Mq(this.eB)};L.prototype.set_m_linearDamping=L.prototype.yG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Nq(c,a)};Object.defineProperty(L.prototype,"m_linearDamping",{get:L.prototype.FD,set:L.prototype.yG});L.prototype.get_m_angularDamping=L.prototype.JC=function(){return Oq(this.eB)};
  L.prototype.set_m_angularDamping=L.prototype.CF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pq(c,a)};Object.defineProperty(L.prototype,"m_angularDamping",{get:L.prototype.JC,set:L.prototype.CF});L.prototype.get_m_friction=L.prototype.mD=function(){return Qq(this.eB)};L.prototype.set_m_friction=L.prototype.fG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rq(c,a)};Object.defineProperty(L.prototype,"m_friction",{get:L.prototype.mD,set:L.prototype.fG});
  L.prototype.get_m_rollingFriction=L.prototype.fE=function(){return Sq(this.eB)};L.prototype.set_m_rollingFriction=L.prototype.$G=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tq(c,a)};Object.defineProperty(L.prototype,"m_rollingFriction",{get:L.prototype.fE,set:L.prototype.$G});L.prototype.get_m_restitution=L.prototype.dE=function(){return Uq(this.eB)};L.prototype.set_m_restitution=L.prototype.YG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vq(c,a)};
  Object.defineProperty(L.prototype,"m_restitution",{get:L.prototype.dE,set:L.prototype.YG});L.prototype.get_m_linearSleepingThreshold=L.prototype.GD=function(){return Wq(this.eB)};L.prototype.set_m_linearSleepingThreshold=L.prototype.zG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xq(c,a)};Object.defineProperty(L.prototype,"m_linearSleepingThreshold",{get:L.prototype.GD,set:L.prototype.zG});L.prototype.get_m_angularSleepingThreshold=L.prototype.KC=function(){return Yq(this.eB)};
  L.prototype.set_m_angularSleepingThreshold=L.prototype.DF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zq(c,a)};Object.defineProperty(L.prototype,"m_angularSleepingThreshold",{get:L.prototype.KC,set:L.prototype.DF});L.prototype.get_m_additionalDamping=L.prototype.EC=function(){return!!$q(this.eB)};L.prototype.set_m_additionalDamping=L.prototype.xF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ar(c,a)};
  Object.defineProperty(L.prototype,"m_additionalDamping",{get:L.prototype.EC,set:L.prototype.xF});L.prototype.get_m_additionalDampingFactor=L.prototype.FC=function(){return br(this.eB)};L.prototype.set_m_additionalDampingFactor=L.prototype.yF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cr(c,a)};Object.defineProperty(L.prototype,"m_additionalDampingFactor",{get:L.prototype.FC,set:L.prototype.yF});L.prototype.get_m_additionalLinearDampingThresholdSqr=L.prototype.GC=function(){return dr(this.eB)};
  L.prototype.set_m_additionalLinearDampingThresholdSqr=L.prototype.zF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);er(c,a)};Object.defineProperty(L.prototype,"m_additionalLinearDampingThresholdSqr",{get:L.prototype.GC,set:L.prototype.zF});L.prototype.get_m_additionalAngularDampingThresholdSqr=L.prototype.DC=function(){return fr(this.eB)};L.prototype.set_m_additionalAngularDampingThresholdSqr=L.prototype.wF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gr(c,a)};
  Object.defineProperty(L.prototype,"m_additionalAngularDampingThresholdSqr",{get:L.prototype.DC,set:L.prototype.wF});L.prototype.get_m_additionalAngularDampingFactor=L.prototype.CC=function(){return hr(this.eB)};L.prototype.set_m_additionalAngularDampingFactor=L.prototype.vF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ir(c,a)};Object.defineProperty(L.prototype,"m_additionalAngularDampingFactor",{get:L.prototype.CC,set:L.prototype.vF});L.prototype.__destroy__=function(){jr(this.eB)};
  function M(a){a&&"object"===typeof a&&(a=a.eB);this.eB=kr(a);h(M)[this.eB]=this}M.prototype=Object.create(r.prototype);M.prototype.constructor=M;M.prototype.fB=M;M.gB={};b.btRigidBody=M;M.prototype.getCenterOfMassTransform=function(){return k(lr(this.eB),t)};M.prototype.setCenterOfMassTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mr(c,a)};M.prototype.setSleepingThresholds=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);nr(d,a,c)};
  M.prototype.getLinearDamping=function(){return or(this.eB)};M.prototype.getAngularDamping=function(){return pr(this.eB)};M.prototype.setDamping=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);qr(d,a,c)};M.prototype.setMassProps=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);rr(d,a,c)};M.prototype.getLinearFactor=function(){return k(sr(this.eB),n)};
  M.prototype.setLinearFactor=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tr(c,a)};M.prototype.applyTorque=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ur(c,a)};M.prototype.applyLocalTorque=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);vr(c,a)};M.prototype.applyForce=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);wr(d,a,c)};
  M.prototype.applyCentralForce=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xr(c,a)};M.prototype.applyCentralLocalForce=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yr(c,a)};M.prototype.applyTorqueImpulse=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zr(c,a)};M.prototype.applyImpulse=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ar(d,a,c)};
  M.prototype.applyCentralImpulse=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Br(c,a)};M.prototype.updateInertiaTensor=function(){Cr(this.eB)};M.prototype.getLinearVelocity=function(){return k(Dr(this.eB),n)};M.prototype.getAngularVelocity=function(){return k(Er(this.eB),n)};M.prototype.setLinearVelocity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fr(c,a)};M.prototype.setAngularVelocity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gr(c,a)};
  M.prototype.getMotionState=function(){return k(Hr(this.eB),vE)};M.prototype.setMotionState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ir(c,a)};M.prototype.getAngularFactor=function(){return k(Jr(this.eB),n)};M.prototype.setAngularFactor=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Kr(c,a)};M.prototype.upcast=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Lr(c,a),M)};
  M.prototype.getAabb=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Mr(d,a,c)};M.prototype.applyGravity=function(){Nr(this.eB)};M.prototype.getGravity=function(){return k(Or(this.eB),n)};M.prototype.setGravity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pr(c,a)};M.prototype.getBroadphaseProxy=function(){return k(Qr(this.eB),pE)};M.prototype.clearForces=function(){Rr(this.eB)};
  M.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Sr(d,a,c)};M.prototype.getCollisionShape=function(){return k(Tr(this.eB),l)};M.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ur(c,a)};M.prototype.setActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vr(c,a)};
  M.prototype.forceActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wr(c,a)};M.prototype.activate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);void 0===a?Xr(c):Yr(c,a)};M.prototype.isActive=function(){return!!Zr(this.eB)};M.prototype.isKinematicObject=function(){return!!$r(this.eB)};M.prototype.isStaticObject=function(){return!!as(this.eB)};M.prototype.isStaticOrKinematicObject=function(){return!!bs(this.eB)};M.prototype.getRestitution=function(){return cs(this.eB)};
  M.prototype.getFriction=function(){return ds(this.eB)};M.prototype.getRollingFriction=function(){return es(this.eB)};M.prototype.setRestitution=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gs(c,a)};M.prototype.setFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hs(c,a)};M.prototype.setRollingFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);is(c,a)};M.prototype.getWorldTransform=function(){return k(js(this.eB),t)};M.prototype.getCollisionFlags=function(){return ks(this.eB)};
  M.prototype.setCollisionFlags=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ls(c,a)};M.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ms(c,a)};M.prototype.setCollisionShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ns(c,a)};M.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ps(c,a)};M.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qs(c,a)};
  M.prototype.getUserIndex=function(){return rs(this.eB)};M.prototype.setUserIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ss(c,a)};M.prototype.getUserPointer=function(){return k(ts(this.eB),oE)};M.prototype.setUserPointer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);us(c,a)};M.prototype.getBroadphaseHandle=function(){return k(vs(this.eB),pE)};M.prototype.__destroy__=function(){xs(this.eB)};function HF(){this.eB=ys();h(HF)[this.eB]=this}HF.prototype=Object.create(g.prototype);
  HF.prototype.constructor=HF;HF.prototype.fB=HF;HF.gB={};b.btConstraintSetting=HF;HF.prototype.get_m_tau=HF.prototype.uE=function(){return zs(this.eB)};HF.prototype.set_m_tau=HF.prototype.oH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);As(c,a)};Object.defineProperty(HF.prototype,"m_tau",{get:HF.prototype.uE,set:HF.prototype.oH});HF.prototype.get_m_damping=HF.prototype.cD=function(){return Bs(this.eB)};
  HF.prototype.set_m_damping=HF.prototype.WF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cs(c,a)};Object.defineProperty(HF.prototype,"m_damping",{get:HF.prototype.cD,set:HF.prototype.WF});HF.prototype.get_m_impulseClamp=HF.prototype.yD=function(){return Ds(this.eB)};HF.prototype.set_m_impulseClamp=HF.prototype.rG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Es(c,a)};Object.defineProperty(HF.prototype,"m_impulseClamp",{get:HF.prototype.yD,set:HF.prototype.rG});
  HF.prototype.__destroy__=function(){Fs(this.eB)};function IF(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=void 0===d?Gs(a,c):void 0===e?_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(a,c,d):Hs(a,c,d,e);h(IF)[this.eB]=this}IF.prototype=Object.create(sE.prototype);IF.prototype.constructor=IF;IF.prototype.fB=IF;IF.gB={};b.btPoint2PointConstraint=IF;
  IF.prototype.setPivotA=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Is(c,a)};IF.prototype.setPivotB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Js(c,a)};IF.prototype.getPivotInA=function(){return k(Ks(this.eB),n)};IF.prototype.getPivotInB=function(){return k(Ls(this.eB),n)};IF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ms(c,a)};IF.prototype.getBreakingImpulseThreshold=function(){return Ns(this.eB)};
  IF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Os(c,a)};IF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return Ps(d,a,c)};IF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Qs(e,a,c,d)};IF.prototype.get_m_setting=IF.prototype.hE=function(){return k(Rs(this.eB),HF)};
  IF.prototype.set_m_setting=IF.prototype.bH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ss(c,a)};Object.defineProperty(IF.prototype,"m_setting",{get:IF.prototype.hE,set:IF.prototype.bH});IF.prototype.__destroy__=function(){Ts(this.eB)};
  function JF(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=void 0===e?Us(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(a,c,d,e):Vs(a,c,d,e,f);h(JF)[this.eB]=this}JF.prototype=Object.create(IE.prototype);JF.prototype.constructor=JF;JF.prototype.fB=JF;JF.gB={};b.btGeneric6DofSpringConstraint=JF;
  JF.prototype.enableSpring=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ws(d,a,c)};JF.prototype.setStiffness=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Xs(d,a,c)};JF.prototype.setDamping=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ys(d,a,c)};
  JF.prototype.setEquilibriumPoint=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===a?Zs(d):void 0===c?$s(d,a):at(d,a,c)};JF.prototype.setLinearLowerLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bt(c,a)};JF.prototype.setLinearUpperLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ct(c,a)};JF.prototype.setAngularLowerLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dt(c,a)};
  JF.prototype.setAngularUpperLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);et(c,a)};JF.prototype.getFrameOffsetA=function(){return k(ft(this.eB),t)};JF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gt(c,a)};JF.prototype.getBreakingImpulseThreshold=function(){return ht(this.eB)};JF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);it(c,a)};
  JF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return jt(d,a,c)};JF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);kt(e,a,c,d)};JF.prototype.__destroy__=function(){lt(this.eB)};function KF(){this.eB=mt();h(KF)[this.eB]=this}KF.prototype=Object.create(g.prototype);KF.prototype.constructor=KF;KF.prototype.fB=KF;KF.gB={};
  b.btSequentialImpulseConstraintSolver=KF;KF.prototype.__destroy__=function(){nt(this.eB)};function LF(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=void 0===d?ot(a,c):void 0===e?_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(a,c,d):pt(a,c,d,e);h(LF)[this.eB]=this}LF.prototype=Object.create(sE.prototype);LF.prototype.constructor=LF;LF.prototype.fB=LF;LF.gB={};
  b.btConeTwistConstraint=LF;LF.prototype.setLimit=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);qt(d,a,c)};LF.prototype.setAngularOnly=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rt(c,a)};LF.prototype.setDamping=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);st(c,a)};LF.prototype.enableMotor=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tt(c,a)};
  LF.prototype.setMaxMotorImpulse=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ut(c,a)};LF.prototype.setMaxMotorImpulseNormalized=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);vt(c,a)};LF.prototype.setMotorTarget=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);wt(c,a)};LF.prototype.setMotorTargetInConstraintSpace=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xt(c,a)};
  LF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yt(c,a)};LF.prototype.getBreakingImpulseThreshold=function(){return zt(this.eB)};LF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);At(c,a)};LF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return Bt(d,a,c)};
  LF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Ct(e,a,c,d)};LF.prototype.__destroy__=function(){Dt(this.eB)};
  function MF(a,c,d,e,f,m,y){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);this.eB=void 0===d?Et(a,c):void 0===e?Ft(a,c,d):void 0===f?Gt(a,c,d,e):void 0===m?Ht(a,c,d,e,f):void 0===y?It(a,c,d,e,f,m):Jt(a,c,d,e,f,m,y);h(MF)[this.eB]=this}MF.prototype=Object.create(sE.prototype);MF.prototype.constructor=MF;
  MF.prototype.fB=MF;MF.gB={};b.btHingeConstraint=MF;MF.prototype.getHingeAngle=function(){return Kt(this.eB)};MF.prototype.setLimit=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);void 0===f?Lt(m,a,c,d,e):Mt(m,a,c,d,e,f)};
  MF.prototype.enableAngularMotor=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Nt(e,a,c,d)};MF.prototype.setAngularOnly=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ot(c,a)};MF.prototype.enableMotor=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pt(c,a)};MF.prototype.setMaxMotorImpulse=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Qt(c,a)};
  MF.prototype.setMotorTarget=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Rt(d,a,c)};MF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);St(c,a)};MF.prototype.getBreakingImpulseThreshold=function(){return Tt(this.eB)};MF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ut(c,a)};
  MF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return Vt(d,a,c)};MF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Wt(e,a,c,d)};MF.prototype.__destroy__=function(){Xt(this.eB)};
  function NF(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=void 0===e?Yt(a,c,d):void 0===f?_emscripten_bind_btSliderConstraint_btSliderConstraint_4(a,c,d,e):Zt(a,c,d,e,f);h(NF)[this.eB]=this}NF.prototype=Object.create(sE.prototype);NF.prototype.constructor=NF;NF.prototype.fB=NF;NF.gB={};b.btSliderConstraint=NF;NF.prototype.getLinearPos=function(){return $t(this.eB)};
  NF.prototype.getAngularPos=function(){return au(this.eB)};NF.prototype.setLowerLinLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bu(c,a)};NF.prototype.setUpperLinLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cu(c,a)};NF.prototype.setLowerAngLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);du(c,a)};NF.prototype.setUpperAngLimit=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);eu(c,a)};
  NF.prototype.setPoweredLinMotor=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fu(c,a)};NF.prototype.setMaxLinMotorForce=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gu(c,a)};NF.prototype.setTargetLinMotorVelocity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hu(c,a)};NF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);iu(c,a)};NF.prototype.getBreakingImpulseThreshold=function(){return ju(this.eB)};
  NF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ku(c,a)};NF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return lu(d,a,c)};NF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);mu(e,a,c,d)};NF.prototype.__destroy__=function(){nu(this.eB)};
  function OF(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=ou(a,c,d,e);h(OF)[this.eB]=this}OF.prototype=Object.create(sE.prototype);OF.prototype.constructor=OF;OF.prototype.fB=OF;OF.gB={};b.btFixedConstraint=OF;OF.prototype.enableFeedback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pu(c,a)};OF.prototype.getBreakingImpulseThreshold=function(){return qu(this.eB)};
  OF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ru(c,a)};OF.prototype.getParam=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return su(d,a,c)};OF.prototype.setParam=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);tu(e,a,c,d)};OF.prototype.__destroy__=function(){uu(this.eB)};
  function PF(){throw"cannot construct a btConstraintSolver, no constructor in IDL";}PF.prototype=Object.create(g.prototype);PF.prototype.constructor=PF;PF.prototype.fB=PF;PF.gB={};b.btConstraintSolver=PF;PF.prototype.__destroy__=function(){vu(this.eB)};function q(){throw"cannot construct a btDispatcherInfo, no constructor in IDL";}q.prototype=Object.create(g.prototype);q.prototype.constructor=q;q.prototype.fB=q;q.gB={};b.btDispatcherInfo=q;q.prototype.get_m_timeStep=q.prototype.wE=function(){return wu(this.eB)};
  q.prototype.set_m_timeStep=q.prototype.qH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xu(c,a)};Object.defineProperty(q.prototype,"m_timeStep",{get:q.prototype.wE,set:q.prototype.qH});q.prototype.get_m_stepCount=q.prototype.nE=function(){return yu(this.eB)};q.prototype.set_m_stepCount=q.prototype.hH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zu(c,a)};Object.defineProperty(q.prototype,"m_stepCount",{get:q.prototype.nE,set:q.prototype.hH});
  q.prototype.get_m_dispatchFunc=q.prototype.eD=function(){return Au(this.eB)};q.prototype.set_m_dispatchFunc=q.prototype.YF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Bu(c,a)};Object.defineProperty(q.prototype,"m_dispatchFunc",{get:q.prototype.eD,set:q.prototype.YF});q.prototype.get_m_timeOfImpact=q.prototype.vE=function(){return Cu(this.eB)};q.prototype.set_m_timeOfImpact=q.prototype.pH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Du(c,a)};
  Object.defineProperty(q.prototype,"m_timeOfImpact",{get:q.prototype.vE,set:q.prototype.pH});q.prototype.get_m_useContinuous=q.prototype.yE=function(){return!!Eu(this.eB)};q.prototype.set_m_useContinuous=q.prototype.sH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fu(c,a)};Object.defineProperty(q.prototype,"m_useContinuous",{get:q.prototype.yE,set:q.prototype.sH});q.prototype.get_m_enableSatConvex=q.prototype.jD=function(){return!!Gu(this.eB)};
  q.prototype.set_m_enableSatConvex=q.prototype.cG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hu(c,a)};Object.defineProperty(q.prototype,"m_enableSatConvex",{get:q.prototype.jD,set:q.prototype.cG});q.prototype.get_m_enableSPU=q.prototype.iD=function(){return!!Iu(this.eB)};q.prototype.set_m_enableSPU=q.prototype.bG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ju(c,a)};Object.defineProperty(q.prototype,"m_enableSPU",{get:q.prototype.iD,set:q.prototype.bG});
  q.prototype.get_m_useEpa=q.prototype.AE=function(){return!!Ku(this.eB)};q.prototype.set_m_useEpa=q.prototype.uH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Lu(c,a)};Object.defineProperty(q.prototype,"m_useEpa",{get:q.prototype.AE,set:q.prototype.uH});q.prototype.get_m_allowedCcdPenetration=q.prototype.HC=function(){return Mu(this.eB)};q.prototype.set_m_allowedCcdPenetration=q.prototype.AF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Nu(c,a)};
  Object.defineProperty(q.prototype,"m_allowedCcdPenetration",{get:q.prototype.HC,set:q.prototype.AF});q.prototype.get_m_useConvexConservativeDistanceUtil=q.prototype.zE=function(){return!!Ou(this.eB)};q.prototype.set_m_useConvexConservativeDistanceUtil=q.prototype.tH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pu(c,a)};Object.defineProperty(q.prototype,"m_useConvexConservativeDistanceUtil",{get:q.prototype.zE,set:q.prototype.tH});
  q.prototype.get_m_convexConservativeDistanceThreshold=q.prototype.$C=function(){return Qu(this.eB)};q.prototype.set_m_convexConservativeDistanceThreshold=q.prototype.TF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ru(c,a)};Object.defineProperty(q.prototype,"m_convexConservativeDistanceThreshold",{get:q.prototype.$C,set:q.prototype.TF});q.prototype.__destroy__=function(){Su(this.eB)};function u(){throw"cannot construct a btContactSolverInfo, no constructor in IDL";}u.prototype=Object.create(g.prototype);
  u.prototype.constructor=u;u.prototype.fB=u;u.gB={};b.btContactSolverInfo=u;u.prototype.get_m_splitImpulse=u.prototype.kE=function(){return!!Tu(this.eB)};u.prototype.set_m_splitImpulse=u.prototype.eH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Uu(c,a)};Object.defineProperty(u.prototype,"m_splitImpulse",{get:u.prototype.kE,set:u.prototype.eH});u.prototype.get_m_splitImpulsePenetrationThreshold=u.prototype.lE=function(){return Vu(this.eB)};
  u.prototype.set_m_splitImpulsePenetrationThreshold=u.prototype.fH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wu(c,a)};Object.defineProperty(u.prototype,"m_splitImpulsePenetrationThreshold",{get:u.prototype.lE,set:u.prototype.fH});u.prototype.get_m_numIterations=u.prototype.VD=function(){return Xu(this.eB)};u.prototype.set_m_numIterations=u.prototype.OG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Yu(c,a)};
  Object.defineProperty(u.prototype,"m_numIterations",{get:u.prototype.VD,set:u.prototype.OG});u.prototype.__destroy__=function(){Zu(this.eB)};function N(){this.eB=$u();h(N)[this.eB]=this}N.prototype=Object.create(g.prototype);N.prototype.constructor=N;N.prototype.fB=N;N.gB={};b.btVehicleTuning=N;N.prototype.get_m_suspensionStiffness=N.prototype.yB=function(){return av(this.eB)};N.prototype.set_m_suspensionStiffness=N.prototype.GB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bv(c,a)};
  Object.defineProperty(N.prototype,"m_suspensionStiffness",{get:N.prototype.yB,set:N.prototype.GB});N.prototype.get_m_suspensionCompression=N.prototype.oE=function(){return cv(this.eB)};N.prototype.set_m_suspensionCompression=N.prototype.iH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dv(c,a)};Object.defineProperty(N.prototype,"m_suspensionCompression",{get:N.prototype.oE,set:N.prototype.iH});N.prototype.get_m_suspensionDamping=N.prototype.pE=function(){return ev(this.eB)};
  N.prototype.set_m_suspensionDamping=N.prototype.jH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fv(c,a)};Object.defineProperty(N.prototype,"m_suspensionDamping",{get:N.prototype.pE,set:N.prototype.jH});N.prototype.get_m_maxSuspensionTravelCm=N.prototype.xB=function(){return gv(this.eB)};N.prototype.set_m_maxSuspensionTravelCm=N.prototype.FB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hv(c,a)};
  Object.defineProperty(N.prototype,"m_maxSuspensionTravelCm",{get:N.prototype.xB,set:N.prototype.FB});N.prototype.get_m_frictionSlip=N.prototype.tB=function(){return iv(this.eB)};N.prototype.set_m_frictionSlip=N.prototype.BB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jv(c,a)};Object.defineProperty(N.prototype,"m_frictionSlip",{get:N.prototype.tB,set:N.prototype.BB});N.prototype.get_m_maxSuspensionForce=N.prototype.wB=function(){return kv(this.eB)};
  N.prototype.set_m_maxSuspensionForce=N.prototype.EB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lv(c,a)};Object.defineProperty(N.prototype,"m_maxSuspensionForce",{get:N.prototype.wB,set:N.prototype.EB});function QF(){throw"cannot construct a btVehicleRaycasterResult, no constructor in IDL";}QF.prototype=Object.create(g.prototype);QF.prototype.constructor=QF;QF.prototype.fB=QF;QF.gB={};b.btVehicleRaycasterResult=QF;
  QF.prototype.get_m_hitPointInWorld=QF.prototype.vD=function(){return k(mv(this.eB),n)};QF.prototype.set_m_hitPointInWorld=QF.prototype.oG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nv(c,a)};Object.defineProperty(QF.prototype,"m_hitPointInWorld",{get:QF.prototype.vD,set:QF.prototype.oG});QF.prototype.get_m_hitNormalInWorld=QF.prototype.tD=function(){return k(ov(this.eB),n)};
  QF.prototype.set_m_hitNormalInWorld=QF.prototype.mG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pv(c,a)};Object.defineProperty(QF.prototype,"m_hitNormalInWorld",{get:QF.prototype.tD,set:QF.prototype.mG});QF.prototype.get_m_distFraction=QF.prototype.hD=function(){return qv(this.eB)};QF.prototype.set_m_distFraction=QF.prototype.aG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rv(c,a)};Object.defineProperty(QF.prototype,"m_distFraction",{get:QF.prototype.hD,set:QF.prototype.aG});
  QF.prototype.__destroy__=function(){sv(this.eB)};function RF(a){a&&"object"===typeof a&&(a=a.eB);this.eB=tv(a);h(RF)[this.eB]=this}RF.prototype=Object.create(JE.prototype);RF.prototype.constructor=RF;RF.prototype.fB=RF;RF.gB={};b.btDefaultVehicleRaycaster=RF;RF.prototype.castRay=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);uv(e,a,c,d)};RF.prototype.__destroy__=function(){vv(this.eB)};
  function O(){throw"cannot construct a RaycastInfo, no constructor in IDL";}O.prototype=Object.create(g.prototype);O.prototype.constructor=O;O.prototype.fB=O;O.gB={};b.RaycastInfo=O;O.prototype.get_m_contactNormalWS=O.prototype.YC=function(){return k(wv(this.eB),n)};O.prototype.set_m_contactNormalWS=O.prototype.RF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xv(c,a)};Object.defineProperty(O.prototype,"m_contactNormalWS",{get:O.prototype.YC,set:O.prototype.RF});
  O.prototype.get_m_contactPointWS=O.prototype.ZC=function(){return k(yv(this.eB),n)};O.prototype.set_m_contactPointWS=O.prototype.SF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zv(c,a)};Object.defineProperty(O.prototype,"m_contactPointWS",{get:O.prototype.ZC,set:O.prototype.SF});O.prototype.get_m_suspensionLength=O.prototype.qE=function(){return Av(this.eB)};O.prototype.set_m_suspensionLength=O.prototype.kH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Bv(c,a)};
  Object.defineProperty(O.prototype,"m_suspensionLength",{get:O.prototype.qE,set:O.prototype.kH});O.prototype.get_m_hardPointWS=O.prototype.qD=function(){return k(Cv(this.eB),n)};O.prototype.set_m_hardPointWS=O.prototype.jG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Dv(c,a)};Object.defineProperty(O.prototype,"m_hardPointWS",{get:O.prototype.qD,set:O.prototype.jG});O.prototype.get_m_wheelDirectionWS=O.prototype.FE=function(){return k(Ev(this.eB),n)};
  O.prototype.set_m_wheelDirectionWS=O.prototype.zH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fv(c,a)};Object.defineProperty(O.prototype,"m_wheelDirectionWS",{get:O.prototype.FE,set:O.prototype.zH});O.prototype.get_m_wheelAxleWS=O.prototype.EE=function(){return k(Gv(this.eB),n)};O.prototype.set_m_wheelAxleWS=O.prototype.yH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hv(c,a)};Object.defineProperty(O.prototype,"m_wheelAxleWS",{get:O.prototype.EE,set:O.prototype.yH});
  O.prototype.get_m_isInContact=O.prototype.BD=function(){return!!Iv(this.eB)};O.prototype.set_m_isInContact=O.prototype.uG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jv(c,a)};Object.defineProperty(O.prototype,"m_isInContact",{get:O.prototype.BD,set:O.prototype.uG});O.prototype.get_m_groundObject=O.prototype.pD=function(){return Kv(this.eB)};O.prototype.set_m_groundObject=O.prototype.iG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Lv(c,a)};
  Object.defineProperty(O.prototype,"m_groundObject",{get:O.prototype.pD,set:O.prototype.iG});O.prototype.__destroy__=function(){Mv(this.eB)};function P(){throw"cannot construct a btWheelInfoConstructionInfo, no constructor in IDL";}P.prototype=Object.create(g.prototype);P.prototype.constructor=P;P.prototype.fB=P;P.gB={};b.btWheelInfoConstructionInfo=P;P.prototype.get_m_chassisConnectionCS=P.prototype.TC=function(){return k(Nv(this.eB),n)};
  P.prototype.set_m_chassisConnectionCS=P.prototype.MF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ov(c,a)};Object.defineProperty(P.prototype,"m_chassisConnectionCS",{get:P.prototype.TC,set:P.prototype.MF});P.prototype.get_m_wheelDirectionCS=P.prototype.PB=function(){return k(Pv(this.eB),n)};P.prototype.set_m_wheelDirectionCS=P.prototype.ZB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Qv(c,a)};Object.defineProperty(P.prototype,"m_wheelDirectionCS",{get:P.prototype.PB,set:P.prototype.ZB});
  P.prototype.get_m_wheelAxleCS=P.prototype.OB=function(){return k(Rv(this.eB),n)};P.prototype.set_m_wheelAxleCS=P.prototype.YB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Sv(c,a)};Object.defineProperty(P.prototype,"m_wheelAxleCS",{get:P.prototype.OB,set:P.prototype.YB});P.prototype.get_m_suspensionRestLength=P.prototype.sE=function(){return Tv(this.eB)};P.prototype.set_m_suspensionRestLength=P.prototype.mH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Uv(c,a)};
  Object.defineProperty(P.prototype,"m_suspensionRestLength",{get:P.prototype.sE,set:P.prototype.mH});P.prototype.get_m_maxSuspensionTravelCm=P.prototype.xB=function(){return Vv(this.eB)};P.prototype.set_m_maxSuspensionTravelCm=P.prototype.FB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Wv(c,a)};Object.defineProperty(P.prototype,"m_maxSuspensionTravelCm",{get:P.prototype.xB,set:P.prototype.FB});P.prototype.get_m_wheelRadius=P.prototype.GE=function(){return Xv(this.eB)};
  P.prototype.set_m_wheelRadius=P.prototype.AH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Yv(c,a)};Object.defineProperty(P.prototype,"m_wheelRadius",{get:P.prototype.GE,set:P.prototype.AH});P.prototype.get_m_suspensionStiffness=P.prototype.yB=function(){return Zv(this.eB)};P.prototype.set_m_suspensionStiffness=P.prototype.GB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);$v(c,a)};Object.defineProperty(P.prototype,"m_suspensionStiffness",{get:P.prototype.yB,set:P.prototype.GB});
  P.prototype.get_m_wheelsDampingCompression=P.prototype.QB=function(){return aw(this.eB)};P.prototype.set_m_wheelsDampingCompression=P.prototype.$B=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);bw(c,a)};Object.defineProperty(P.prototype,"m_wheelsDampingCompression",{get:P.prototype.QB,set:P.prototype.$B});P.prototype.get_m_wheelsDampingRelaxation=P.prototype.RB=function(){return cw(this.eB)};
  P.prototype.set_m_wheelsDampingRelaxation=P.prototype.aC=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dw(c,a)};Object.defineProperty(P.prototype,"m_wheelsDampingRelaxation",{get:P.prototype.RB,set:P.prototype.aC});P.prototype.get_m_frictionSlip=P.prototype.tB=function(){return ew(this.eB)};P.prototype.set_m_frictionSlip=P.prototype.BB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fw(c,a)};Object.defineProperty(P.prototype,"m_frictionSlip",{get:P.prototype.tB,set:P.prototype.BB});
  P.prototype.get_m_maxSuspensionForce=P.prototype.wB=function(){return gw(this.eB)};P.prototype.set_m_maxSuspensionForce=P.prototype.EB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hw(c,a)};Object.defineProperty(P.prototype,"m_maxSuspensionForce",{get:P.prototype.wB,set:P.prototype.EB});P.prototype.get_m_bIsFrontWheel=P.prototype.IB=function(){return!!iw(this.eB)};P.prototype.set_m_bIsFrontWheel=P.prototype.SB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jw(c,a)};
  Object.defineProperty(P.prototype,"m_bIsFrontWheel",{get:P.prototype.IB,set:P.prototype.SB});P.prototype.__destroy__=function(){kw(this.eB)};function Q(a){a&&"object"===typeof a&&(a=a.eB);this.eB=lw(a);h(Q)[this.eB]=this}Q.prototype=Object.create(g.prototype);Q.prototype.constructor=Q;Q.prototype.fB=Q;Q.gB={};b.btWheelInfo=Q;Q.prototype.getSuspensionRestLength=function(){return mw(this.eB)};
  Q.prototype.updateWheel=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);nw(d,a,c)};Q.prototype.get_m_suspensionStiffness=Q.prototype.yB=function(){return ow(this.eB)};Q.prototype.set_m_suspensionStiffness=Q.prototype.GB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pw(c,a)};Object.defineProperty(Q.prototype,"m_suspensionStiffness",{get:Q.prototype.yB,set:Q.prototype.GB});Q.prototype.get_m_frictionSlip=Q.prototype.tB=function(){return qw(this.eB)};
  Q.prototype.set_m_frictionSlip=Q.prototype.BB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rw(c,a)};Object.defineProperty(Q.prototype,"m_frictionSlip",{get:Q.prototype.tB,set:Q.prototype.BB});Q.prototype.get_m_engineForce=Q.prototype.kD=function(){return sw(this.eB)};Q.prototype.set_m_engineForce=Q.prototype.dG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tw(c,a)};Object.defineProperty(Q.prototype,"m_engineForce",{get:Q.prototype.kD,set:Q.prototype.dG});
  Q.prototype.get_m_rollInfluence=Q.prototype.eE=function(){return uw(this.eB)};Q.prototype.set_m_rollInfluence=Q.prototype.ZG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);vw(c,a)};Object.defineProperty(Q.prototype,"m_rollInfluence",{get:Q.prototype.eE,set:Q.prototype.ZG});Q.prototype.get_m_suspensionRestLength1=Q.prototype.tE=function(){return ww(this.eB)};Q.prototype.set_m_suspensionRestLength1=Q.prototype.nH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xw(c,a)};
  Object.defineProperty(Q.prototype,"m_suspensionRestLength1",{get:Q.prototype.tE,set:Q.prototype.nH});Q.prototype.get_m_wheelsRadius=Q.prototype.HE=function(){return yw(this.eB)};Q.prototype.set_m_wheelsRadius=Q.prototype.BH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zw(c,a)};Object.defineProperty(Q.prototype,"m_wheelsRadius",{get:Q.prototype.HE,set:Q.prototype.BH});Q.prototype.get_m_wheelsDampingCompression=Q.prototype.QB=function(){return Aw(this.eB)};
  Q.prototype.set_m_wheelsDampingCompression=Q.prototype.$B=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Bw(c,a)};Object.defineProperty(Q.prototype,"m_wheelsDampingCompression",{get:Q.prototype.QB,set:Q.prototype.$B});Q.prototype.get_m_wheelsDampingRelaxation=Q.prototype.RB=function(){return Cw(this.eB)};Q.prototype.set_m_wheelsDampingRelaxation=Q.prototype.aC=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Dw(c,a)};
  Object.defineProperty(Q.prototype,"m_wheelsDampingRelaxation",{get:Q.prototype.RB,set:Q.prototype.aC});Q.prototype.get_m_steering=Q.prototype.mE=function(){return Ew(this.eB)};Q.prototype.set_m_steering=Q.prototype.gH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fw(c,a)};Object.defineProperty(Q.prototype,"m_steering",{get:Q.prototype.mE,set:Q.prototype.gH});Q.prototype.get_m_maxSuspensionForce=Q.prototype.wB=function(){return Gw(this.eB)};
  Q.prototype.set_m_maxSuspensionForce=Q.prototype.EB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hw(c,a)};Object.defineProperty(Q.prototype,"m_maxSuspensionForce",{get:Q.prototype.wB,set:Q.prototype.EB});Q.prototype.get_m_maxSuspensionTravelCm=Q.prototype.xB=function(){return Iw(this.eB)};Q.prototype.set_m_maxSuspensionTravelCm=Q.prototype.FB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jw(c,a)};
  Object.defineProperty(Q.prototype,"m_maxSuspensionTravelCm",{get:Q.prototype.xB,set:Q.prototype.FB});Q.prototype.get_m_wheelsSuspensionForce=Q.prototype.IE=function(){return Kw(this.eB)};Q.prototype.set_m_wheelsSuspensionForce=Q.prototype.CH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Lw(c,a)};Object.defineProperty(Q.prototype,"m_wheelsSuspensionForce",{get:Q.prototype.IE,set:Q.prototype.CH});Q.prototype.get_m_bIsFrontWheel=Q.prototype.IB=function(){return!!Mw(this.eB)};
  Q.prototype.set_m_bIsFrontWheel=Q.prototype.SB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Nw(c,a)};Object.defineProperty(Q.prototype,"m_bIsFrontWheel",{get:Q.prototype.IB,set:Q.prototype.SB});Q.prototype.get_m_raycastInfo=Q.prototype.cE=function(){return k(Ow(this.eB),O)};Q.prototype.set_m_raycastInfo=Q.prototype.XG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pw(c,a)};Object.defineProperty(Q.prototype,"m_raycastInfo",{get:Q.prototype.cE,set:Q.prototype.XG});
  Q.prototype.get_m_chassisConnectionPointCS=Q.prototype.UC=function(){return k(Qw(this.eB),n)};Q.prototype.set_m_chassisConnectionPointCS=Q.prototype.NF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rw(c,a)};Object.defineProperty(Q.prototype,"m_chassisConnectionPointCS",{get:Q.prototype.UC,set:Q.prototype.NF});Q.prototype.get_m_worldTransform=Q.prototype.JE=function(){return k(Sw(this.eB),t)};
  Q.prototype.set_m_worldTransform=Q.prototype.DH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tw(c,a)};Object.defineProperty(Q.prototype,"m_worldTransform",{get:Q.prototype.JE,set:Q.prototype.DH});Q.prototype.get_m_wheelDirectionCS=Q.prototype.PB=function(){return k(Uw(this.eB),n)};Q.prototype.set_m_wheelDirectionCS=Q.prototype.ZB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vw(c,a)};Object.defineProperty(Q.prototype,"m_wheelDirectionCS",{get:Q.prototype.PB,set:Q.prototype.ZB});
  Q.prototype.get_m_wheelAxleCS=Q.prototype.OB=function(){return k(Ww(this.eB),n)};Q.prototype.set_m_wheelAxleCS=Q.prototype.YB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xw(c,a)};Object.defineProperty(Q.prototype,"m_wheelAxleCS",{get:Q.prototype.OB,set:Q.prototype.YB});Q.prototype.get_m_rotation=Q.prototype.gE=function(){return Yw(this.eB)};Q.prototype.set_m_rotation=Q.prototype.aH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zw(c,a)};
  Object.defineProperty(Q.prototype,"m_rotation",{get:Q.prototype.gE,set:Q.prototype.aH});Q.prototype.get_m_deltaRotation=Q.prototype.dD=function(){return $w(this.eB)};Q.prototype.set_m_deltaRotation=Q.prototype.XF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ax(c,a)};Object.defineProperty(Q.prototype,"m_deltaRotation",{get:Q.prototype.dD,set:Q.prototype.XF});Q.prototype.get_m_brake=Q.prototype.NC=function(){return bx(this.eB)};
  Q.prototype.set_m_brake=Q.prototype.GF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cx(c,a)};Object.defineProperty(Q.prototype,"m_brake",{get:Q.prototype.NC,set:Q.prototype.GF});Q.prototype.get_m_clippedInvContactDotSuspension=Q.prototype.VC=function(){return dx(this.eB)};Q.prototype.set_m_clippedInvContactDotSuspension=Q.prototype.OF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ex(c,a)};
  Object.defineProperty(Q.prototype,"m_clippedInvContactDotSuspension",{get:Q.prototype.VC,set:Q.prototype.OF});Q.prototype.get_m_suspensionRelativeVelocity=Q.prototype.rE=function(){return fx(this.eB)};Q.prototype.set_m_suspensionRelativeVelocity=Q.prototype.lH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gx(c,a)};Object.defineProperty(Q.prototype,"m_suspensionRelativeVelocity",{get:Q.prototype.rE,set:Q.prototype.lH});Q.prototype.get_m_skidInfo=Q.prototype.jE=function(){return hx(this.eB)};
  Q.prototype.set_m_skidInfo=Q.prototype.dH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ix(c,a)};Object.defineProperty(Q.prototype,"m_skidInfo",{get:Q.prototype.jE,set:Q.prototype.dH});Q.prototype.__destroy__=function(){jx(this.eB)};function SF(a,c,d,e){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);this.eB=void 0===e?kx(a,c,d):lx(a,c,d,e);h(SF)[this.eB]=this}SF.prototype=Object.create(KE.prototype);
  SF.prototype.constructor=SF;SF.prototype.fB=SF;SF.gB={};b.btKinematicCharacterController=SF;SF.prototype.setUpAxis=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mx(c,a)};SF.prototype.setWalkDirection=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nx(c,a)};SF.prototype.setVelocityForTimeInterval=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);ox(d,a,c)};
  SF.prototype.warp=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);px(c,a)};SF.prototype.preStep=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qx(c,a)};SF.prototype.playerStep=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);rx(d,a,c)};SF.prototype.setFallSpeed=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sx(c,a)};SF.prototype.setJumpSpeed=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tx(c,a)};
  SF.prototype.setMaxJumpHeight=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ux(c,a)};SF.prototype.canJump=function(){return!!vx(this.eB)};SF.prototype.jump=function(){wx(this.eB)};SF.prototype.setGravity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xx(c,a)};SF.prototype.getGravity=function(){return yx(this.eB)};SF.prototype.setMaxSlope=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zx(c,a)};SF.prototype.getMaxSlope=function(){return Ax(this.eB)};
  SF.prototype.getGhostObject=function(){return k(Bx(this.eB),R)};SF.prototype.setUseGhostSweepTest=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cx(c,a)};SF.prototype.onGround=function(){return!!Dx(this.eB)};SF.prototype.setUpInterpolate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ex(c,a)};SF.prototype.updateAction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Fx(d,a,c)};SF.prototype.__destroy__=function(){Gx(this.eB)};
  function S(a,c,d){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);this.eB=Hx(a,c,d);h(S)[this.eB]=this}S.prototype=Object.create(KE.prototype);S.prototype.constructor=S;S.prototype.fB=S;S.gB={};b.btRaycastVehicle=S;S.prototype.applyEngineForce=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Ix(d,a,c)};
  S.prototype.setSteeringValue=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Jx(d,a,c)};S.prototype.getWheelTransformWS=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Kx(c,a),t)};S.prototype.updateWheelTransform=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Lx(d,a,c)};
  S.prototype.addWheel=function(a,c,d,e,f,m,y){var W=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);return k(Mx(W,a,c,d,e,f,m,y),Q)};S.prototype.getNumWheels=function(){return Nx(this.eB)};S.prototype.getRigidBody=function(){return k(Ox(this.eB),M)};
  S.prototype.getWheelInfo=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Px(c,a),Q)};S.prototype.setBrake=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);Qx(d,a,c)};S.prototype.setCoordinateSystem=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);Rx(e,a,c,d)};S.prototype.getCurrentSpeedKmHour=function(){return Sx(this.eB)};
  S.prototype.getChassisWorldTransform=function(){return k(Tx(this.eB),t)};S.prototype.rayCast=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Ux(c,a)};S.prototype.updateVehicle=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vx(c,a)};S.prototype.resetSuspension=function(){Wx(this.eB)};S.prototype.getSteeringValue=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return Xx(c,a)};
  S.prototype.updateWheelTransformsWS=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===c?Yx(d,a):Zx(d,a,c)};S.prototype.setPitchControl=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);$x(c,a)};S.prototype.updateSuspension=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ay(c,a)};S.prototype.updateFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);by(c,a)};S.prototype.getRightAxis=function(){return cy(this.eB)};
  S.prototype.getUpAxis=function(){return dy(this.eB)};S.prototype.getForwardAxis=function(){return ey(this.eB)};S.prototype.getForwardVector=function(){return k(fy(this.eB),n)};S.prototype.getUserConstraintType=function(){return gy(this.eB)};S.prototype.setUserConstraintType=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hy(c,a)};S.prototype.setUserConstraintId=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);iy(c,a)};S.prototype.getUserConstraintId=function(){return jy(this.eB)};
  S.prototype.updateAction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);ky(d,a,c)};S.prototype.__destroy__=function(){ly(this.eB)};function R(){this.eB=my();h(R)[this.eB]=this}R.prototype=Object.create(z.prototype);R.prototype.constructor=R;R.prototype.fB=R;R.gB={};b.btPairCachingGhostObject=R;R.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);ny(d,a,c)};
  R.prototype.getCollisionShape=function(){return k(oy(this.eB),l)};R.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);py(c,a)};R.prototype.setActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qy(c,a)};R.prototype.forceActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ry(c,a)};R.prototype.activate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);void 0===a?sy(c):ty(c,a)};
  R.prototype.isActive=function(){return!!uy(this.eB)};R.prototype.isKinematicObject=function(){return!!vy(this.eB)};R.prototype.isStaticObject=function(){return!!wy(this.eB)};R.prototype.isStaticOrKinematicObject=function(){return!!xy(this.eB)};R.prototype.getRestitution=function(){return yy(this.eB)};R.prototype.getFriction=function(){return zy(this.eB)};R.prototype.getRollingFriction=function(){return Ay(this.eB)};
  R.prototype.setRestitution=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);By(c,a)};R.prototype.setFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Cy(c,a)};R.prototype.setRollingFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Dy(c,a)};R.prototype.getWorldTransform=function(){return k(Ey(this.eB),t)};R.prototype.getCollisionFlags=function(){return Fy(this.eB)};
  R.prototype.setCollisionFlags=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Gy(c,a)};R.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hy(c,a)};R.prototype.setCollisionShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Iy(c,a)};R.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jy(c,a)};R.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Ky(c,a)};
  R.prototype.getUserIndex=function(){return Ly(this.eB)};R.prototype.setUserIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);My(c,a)};R.prototype.getUserPointer=function(){return k(Ny(this.eB),oE)};R.prototype.setUserPointer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Oy(c,a)};R.prototype.getBroadphaseHandle=function(){return k(Py(this.eB),pE)};R.prototype.getNumOverlappingObjects=function(){return Qy(this.eB)};
  R.prototype.getOverlappingObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Ry(c,a),r)};R.prototype.__destroy__=function(){Sy(this.eB)};function UF(){this.eB=Ty();h(UF)[this.eB]=this}UF.prototype=Object.create(g.prototype);UF.prototype.constructor=UF;UF.prototype.fB=UF;UF.gB={};b.btGhostPairCallback=UF;UF.prototype.__destroy__=function(){Uy(this.eB)};function T(){this.eB=Vy();h(T)[this.eB]=this}T.prototype=Object.create(g.prototype);T.prototype.constructor=T;
  T.prototype.fB=T;T.gB={};b.btSoftBodyWorldInfo=T;T.prototype.get_air_density=T.prototype.eC=function(){return Wy(this.eB)};T.prototype.set_air_density=T.prototype.YE=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Xy(c,a)};Object.defineProperty(T.prototype,"air_density",{get:T.prototype.eC,set:T.prototype.YE});T.prototype.get_water_density=T.prototype.TE=function(){return Yy(this.eB)};
  T.prototype.set_water_density=T.prototype.NH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Zy(c,a)};Object.defineProperty(T.prototype,"water_density",{get:T.prototype.TE,set:T.prototype.NH});T.prototype.get_water_offset=T.prototype.VE=function(){return $y(this.eB)};T.prototype.set_water_offset=T.prototype.PH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);az(c,a)};Object.defineProperty(T.prototype,"water_offset",{get:T.prototype.VE,set:T.prototype.PH});
  T.prototype.get_m_maxDisplacement=T.prototype.PD=function(){return bz(this.eB)};T.prototype.set_m_maxDisplacement=T.prototype.IG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cz(c,a)};Object.defineProperty(T.prototype,"m_maxDisplacement",{get:T.prototype.PD,set:T.prototype.IG});T.prototype.get_water_normal=T.prototype.UE=function(){return k(dz(this.eB),n)};T.prototype.set_water_normal=T.prototype.OH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ez(c,a)};
  Object.defineProperty(T.prototype,"water_normal",{get:T.prototype.UE,set:T.prototype.OH});T.prototype.get_m_broadphase=T.prototype.OC=function(){return k(fz(this.eB),mE)};T.prototype.set_m_broadphase=T.prototype.HF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gz(c,a)};Object.defineProperty(T.prototype,"m_broadphase",{get:T.prototype.OC,set:T.prototype.HF});T.prototype.get_m_dispatcher=T.prototype.fD=function(){return k(hz(this.eB),kE)};
  T.prototype.set_m_dispatcher=T.prototype.ZF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);iz(c,a)};Object.defineProperty(T.prototype,"m_dispatcher",{get:T.prototype.fD,set:T.prototype.ZF});T.prototype.get_m_gravity=T.prototype.oD=function(){return k(jz(this.eB),n)};T.prototype.set_m_gravity=T.prototype.hG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kz(c,a)};Object.defineProperty(T.prototype,"m_gravity",{get:T.prototype.oD,set:T.prototype.hG});T.prototype.__destroy__=function(){lz(this.eB)};
  function VF(){throw"cannot construct a Face, no constructor in IDL";}VF.prototype=Object.create(g.prototype);VF.prototype.constructor=VF;VF.prototype.fB=VF;VF.gB={};b.Face=VF;VF.prototype.get_m_n=VF.prototype.LB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(mz(c,a),Node)};VF.prototype.set_m_n=VF.prototype.VB=function(a,c){var d=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);nz(d,a,c)};
  Object.defineProperty(VF.prototype,"m_n",{get:VF.prototype.LB,set:VF.prototype.VB});VF.prototype.get_m_normal=VF.prototype.TD=function(){return k(oz(this.eB),n)};VF.prototype.set_m_normal=VF.prototype.MG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pz(c,a)};Object.defineProperty(VF.prototype,"m_normal",{get:VF.prototype.TD,set:VF.prototype.MG});VF.prototype.get_m_ra=VF.prototype.bE=function(){return qz(this.eB)};
  VF.prototype.set_m_ra=VF.prototype.WG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rz(c,a)};Object.defineProperty(VF.prototype,"m_ra",{get:VF.prototype.bE,set:VF.prototype.WG});VF.prototype.__destroy__=function(){sz(this.eB)};function WF(){throw"cannot construct a tFaceArray, no constructor in IDL";}WF.prototype=Object.create(g.prototype);WF.prototype.constructor=WF;WF.prototype.fB=WF;WF.gB={};b.tFaceArray=WF;WF.prototype.size=WF.prototype.size=function(){return tz(this.eB)};
  WF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(uz(c,a),VF)};WF.prototype.__destroy__=function(){vz(this.eB)};function Node(){throw"cannot construct a Node, no constructor in IDL";}Node.prototype=Object.create(g.prototype);Node.prototype.constructor=Node;Node.prototype.fB=Node;Node.gB={};b.Node=Node;Node.prototype.get_m_x=Node.prototype.KE=function(){return k(wz(this.eB),n)};
  Node.prototype.set_m_x=Node.prototype.EH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xz(c,a)};Object.defineProperty(Node.prototype,"m_x",{get:Node.prototype.KE,set:Node.prototype.EH});Node.prototype.get_m_q=Node.prototype.aE=function(){return k(yz(this.eB),n)};Node.prototype.set_m_q=Node.prototype.VG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zz(c,a)};Object.defineProperty(Node.prototype,"m_q",{get:Node.prototype.aE,set:Node.prototype.VG});
  Node.prototype.get_m_v=Node.prototype.CE=function(){return k(Az(this.eB),n)};Node.prototype.set_m_v=Node.prototype.wH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Bz(c,a)};Object.defineProperty(Node.prototype,"m_v",{get:Node.prototype.CE,set:Node.prototype.wH});Node.prototype.get_m_f=Node.prototype.lD=function(){return k(Cz(this.eB),n)};Node.prototype.set_m_f=Node.prototype.eG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Dz(c,a)};
  Object.defineProperty(Node.prototype,"m_f",{get:Node.prototype.lD,set:Node.prototype.eG});Node.prototype.get_m_n=Node.prototype.LB=function(){return k(Ez(this.eB),n)};Node.prototype.set_m_n=Node.prototype.VB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Fz(c,a)};Object.defineProperty(Node.prototype,"m_n",{get:Node.prototype.LB,set:Node.prototype.VB});Node.prototype.get_m_im=Node.prototype.xD=function(){return Gz(this.eB)};
  Node.prototype.set_m_im=Node.prototype.qG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Hz(c,a)};Object.defineProperty(Node.prototype,"m_im",{get:Node.prototype.xD,set:Node.prototype.qG});Node.prototype.get_m_area=Node.prototype.LC=function(){return Iz(this.eB)};Node.prototype.set_m_area=Node.prototype.EF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Jz(c,a)};Object.defineProperty(Node.prototype,"m_area",{get:Node.prototype.LC,set:Node.prototype.EF});
  Node.prototype.__destroy__=function(){Kz(this.eB)};function XF(){throw"cannot construct a tNodeArray, no constructor in IDL";}XF.prototype=Object.create(g.prototype);XF.prototype.constructor=XF;XF.prototype.fB=XF;XF.gB={};b.tNodeArray=XF;XF.prototype.size=XF.prototype.size=function(){return Lz(this.eB)};XF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Mz(c,a),Node)};XF.prototype.__destroy__=function(){Nz(this.eB)};
  function U(){throw"cannot construct a Material, no constructor in IDL";}U.prototype=Object.create(g.prototype);U.prototype.constructor=U;U.prototype.fB=U;U.gB={};b.Material=U;U.prototype.get_m_kLST=U.prototype.DD=function(){return Oz(this.eB)};U.prototype.set_m_kLST=U.prototype.wG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Pz(c,a)};Object.defineProperty(U.prototype,"m_kLST",{get:U.prototype.DD,set:U.prototype.wG});U.prototype.get_m_kAST=U.prototype.CD=function(){return Qz(this.eB)};
  U.prototype.set_m_kAST=U.prototype.vG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Rz(c,a)};Object.defineProperty(U.prototype,"m_kAST",{get:U.prototype.CD,set:U.prototype.vG});U.prototype.get_m_kVST=U.prototype.ED=function(){return Sz(this.eB)};U.prototype.set_m_kVST=U.prototype.xG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Tz(c,a)};Object.defineProperty(U.prototype,"m_kVST",{get:U.prototype.ED,set:U.prototype.xG});U.prototype.get_m_flags=U.prototype.pB=function(){return Uz(this.eB)};
  U.prototype.set_m_flags=U.prototype.qB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);Vz(c,a)};Object.defineProperty(U.prototype,"m_flags",{get:U.prototype.pB,set:U.prototype.qB});U.prototype.__destroy__=function(){Wz(this.eB)};function YF(){throw"cannot construct a tMaterialArray, no constructor in IDL";}YF.prototype=Object.create(g.prototype);YF.prototype.constructor=YF;YF.prototype.fB=YF;YF.gB={};b.tMaterialArray=YF;YF.prototype.size=YF.prototype.size=function(){return Xz(this.eB)};
  YF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(Yz(c,a),U)};YF.prototype.__destroy__=function(){Zz(this.eB)};function V(){throw"cannot construct a Anchor, no constructor in IDL";}V.prototype=Object.create(g.prototype);V.prototype.constructor=V;V.prototype.fB=V;V.gB={};b.Anchor=V;V.prototype.get_m_node=V.prototype.RD=function(){return k($z(this.eB),Node)};V.prototype.set_m_node=V.prototype.KG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);aA(c,a)};
  Object.defineProperty(V.prototype,"m_node",{get:V.prototype.RD,set:V.prototype.KG});V.prototype.get_m_local=V.prototype.HD=function(){return k(bA(this.eB),n)};V.prototype.set_m_local=V.prototype.AG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cA(c,a)};Object.defineProperty(V.prototype,"m_local",{get:V.prototype.HD,set:V.prototype.AG});V.prototype.get_m_body=V.prototype.MC=function(){return k(dA(this.eB),M)};
  V.prototype.set_m_body=V.prototype.FF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);eA(c,a)};Object.defineProperty(V.prototype,"m_body",{get:V.prototype.MC,set:V.prototype.FF});V.prototype.get_m_influence=V.prototype.AD=function(){return fA(this.eB)};V.prototype.set_m_influence=V.prototype.tG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gA(c,a)};Object.defineProperty(V.prototype,"m_influence",{get:V.prototype.AD,set:V.prototype.tG});
  V.prototype.get_m_c0=V.prototype.PC=function(){return k(hA(this.eB),NE)};V.prototype.set_m_c0=V.prototype.IF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);iA(c,a)};Object.defineProperty(V.prototype,"m_c0",{get:V.prototype.PC,set:V.prototype.IF});V.prototype.get_m_c1=V.prototype.QC=function(){return k(jA(this.eB),n)};V.prototype.set_m_c1=V.prototype.JF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kA(c,a)};Object.defineProperty(V.prototype,"m_c1",{get:V.prototype.QC,set:V.prototype.JF});
  V.prototype.get_m_c2=V.prototype.RC=function(){return lA(this.eB)};V.prototype.set_m_c2=V.prototype.KF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mA(c,a)};Object.defineProperty(V.prototype,"m_c2",{get:V.prototype.RC,set:V.prototype.KF});V.prototype.__destroy__=function(){nA(this.eB)};function ZF(){throw"cannot construct a tAnchorArray, no constructor in IDL";}ZF.prototype=Object.create(g.prototype);ZF.prototype.constructor=ZF;ZF.prototype.fB=ZF;ZF.gB={};b.tAnchorArray=ZF;
  ZF.prototype.size=ZF.prototype.size=function(){return oA(this.eB)};ZF.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(pA(c,a),V)};ZF.prototype.clear=ZF.prototype.clear=function(){qA(this.eB)};ZF.prototype.push_back=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rA(c,a)};ZF.prototype.pop_back=function(){sA(this.eB)};ZF.prototype.__destroy__=function(){tA(this.eB)};function X(){throw"cannot construct a Config, no constructor in IDL";}X.prototype=Object.create(g.prototype);
  X.prototype.constructor=X;X.prototype.fB=X;X.gB={};b.Config=X;X.prototype.get_kVCF=X.prototype.BC=function(){return uA(this.eB)};X.prototype.set_kVCF=X.prototype.uF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);vA(c,a)};Object.defineProperty(X.prototype,"kVCF",{get:X.prototype.BC,set:X.prototype.uF});X.prototype.get_kDP=X.prototype.oC=function(){return wA(this.eB)};X.prototype.set_kDP=X.prototype.hF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);xA(c,a)};
  Object.defineProperty(X.prototype,"kDP",{get:X.prototype.oC,set:X.prototype.hF});X.prototype.get_kDG=X.prototype.nC=function(){return yA(this.eB)};X.prototype.set_kDG=X.prototype.gF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);zA(c,a)};Object.defineProperty(X.prototype,"kDG",{get:X.prototype.nC,set:X.prototype.gF});X.prototype.get_kLF=X.prototype.qC=function(){return AA(this.eB)};X.prototype.set_kLF=X.prototype.jF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);BA(c,a)};
  Object.defineProperty(X.prototype,"kLF",{get:X.prototype.qC,set:X.prototype.jF});X.prototype.get_kPR=X.prototype.sC=function(){return CA(this.eB)};X.prototype.set_kPR=X.prototype.lF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);DA(c,a)};Object.defineProperty(X.prototype,"kPR",{get:X.prototype.sC,set:X.prototype.lF});X.prototype.get_kVC=X.prototype.AC=function(){return EA(this.eB)};X.prototype.set_kVC=X.prototype.tF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);FA(c,a)};
  Object.defineProperty(X.prototype,"kVC",{get:X.prototype.AC,set:X.prototype.tF});X.prototype.get_kDF=X.prototype.mC=function(){return GA(this.eB)};X.prototype.set_kDF=X.prototype.fF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);HA(c,a)};Object.defineProperty(X.prototype,"kDF",{get:X.prototype.mC,set:X.prototype.fF});X.prototype.get_kMT=X.prototype.rC=function(){return IA(this.eB)};X.prototype.set_kMT=X.prototype.kF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);JA(c,a)};
  Object.defineProperty(X.prototype,"kMT",{get:X.prototype.rC,set:X.prototype.kF});X.prototype.get_kCHR=X.prototype.lC=function(){return KA(this.eB)};X.prototype.set_kCHR=X.prototype.eF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);LA(c,a)};Object.defineProperty(X.prototype,"kCHR",{get:X.prototype.lC,set:X.prototype.eF});X.prototype.get_kKHR=X.prototype.pC=function(){return MA(this.eB)};
  X.prototype.set_kKHR=X.prototype.iF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);NA(c,a)};Object.defineProperty(X.prototype,"kKHR",{get:X.prototype.pC,set:X.prototype.iF});X.prototype.get_kSHR=X.prototype.tC=function(){return OA(this.eB)};X.prototype.set_kSHR=X.prototype.mF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);PA(c,a)};Object.defineProperty(X.prototype,"kSHR",{get:X.prototype.tC,set:X.prototype.mF});X.prototype.get_kAHR=X.prototype.kC=function(){return QA(this.eB)};
  X.prototype.set_kAHR=X.prototype.dF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);RA(c,a)};Object.defineProperty(X.prototype,"kAHR",{get:X.prototype.kC,set:X.prototype.dF});X.prototype.get_kSRHR_CL=X.prototype.wC=function(){return SA(this.eB)};X.prototype.set_kSRHR_CL=X.prototype.pF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);TA(c,a)};Object.defineProperty(X.prototype,"kSRHR_CL",{get:X.prototype.wC,set:X.prototype.pF});X.prototype.get_kSKHR_CL=X.prototype.uC=function(){return UA(this.eB)};
  X.prototype.set_kSKHR_CL=X.prototype.nF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);VA(c,a)};Object.defineProperty(X.prototype,"kSKHR_CL",{get:X.prototype.uC,set:X.prototype.nF});X.prototype.get_kSSHR_CL=X.prototype.yC=function(){return WA(this.eB)};X.prototype.set_kSSHR_CL=X.prototype.rF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);XA(c,a)};Object.defineProperty(X.prototype,"kSSHR_CL",{get:X.prototype.yC,set:X.prototype.rF});
  X.prototype.get_kSR_SPLT_CL=X.prototype.xC=function(){return YA(this.eB)};X.prototype.set_kSR_SPLT_CL=X.prototype.qF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);ZA(c,a)};Object.defineProperty(X.prototype,"kSR_SPLT_CL",{get:X.prototype.xC,set:X.prototype.qF});X.prototype.get_kSK_SPLT_CL=X.prototype.vC=function(){return $A(this.eB)};X.prototype.set_kSK_SPLT_CL=X.prototype.oF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);aB(c,a)};
  Object.defineProperty(X.prototype,"kSK_SPLT_CL",{get:X.prototype.vC,set:X.prototype.oF});X.prototype.get_kSS_SPLT_CL=X.prototype.zC=function(){return bB(this.eB)};X.prototype.set_kSS_SPLT_CL=X.prototype.sF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cB(c,a)};Object.defineProperty(X.prototype,"kSS_SPLT_CL",{get:X.prototype.zC,set:X.prototype.sF});X.prototype.get_maxvolume=X.prototype.LE=function(){return dB(this.eB)};
  X.prototype.set_maxvolume=X.prototype.FH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);eB(c,a)};Object.defineProperty(X.prototype,"maxvolume",{get:X.prototype.LE,set:X.prototype.FH});X.prototype.get_timescale=X.prototype.QE=function(){return fB(this.eB)};X.prototype.set_timescale=X.prototype.KH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gB(c,a)};Object.defineProperty(X.prototype,"timescale",{get:X.prototype.QE,set:X.prototype.KH});
  X.prototype.get_viterations=X.prototype.SE=function(){return hB(this.eB)};X.prototype.set_viterations=X.prototype.MH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);iB(c,a)};Object.defineProperty(X.prototype,"viterations",{get:X.prototype.SE,set:X.prototype.MH});X.prototype.get_piterations=X.prototype.OE=function(){return jB(this.eB)};X.prototype.set_piterations=X.prototype.IH=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kB(c,a)};
  Object.defineProperty(X.prototype,"piterations",{get:X.prototype.OE,set:X.prototype.IH});X.prototype.get_diterations=X.prototype.hC=function(){return lB(this.eB)};X.prototype.set_diterations=X.prototype.aF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mB(c,a)};Object.defineProperty(X.prototype,"diterations",{get:X.prototype.hC,set:X.prototype.aF});X.prototype.get_citerations=X.prototype.fC=function(){return nB(this.eB)};
  X.prototype.set_citerations=X.prototype.ZE=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);oB(c,a)};Object.defineProperty(X.prototype,"citerations",{get:X.prototype.fC,set:X.prototype.ZE});X.prototype.get_collisions=X.prototype.gC=function(){return pB(this.eB)};X.prototype.set_collisions=X.prototype.$E=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);qB(c,a)};Object.defineProperty(X.prototype,"collisions",{get:X.prototype.gC,set:X.prototype.$E});X.prototype.__destroy__=function(){rB(this.eB)};
  function Y(a,c,d,e){eE();a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);"object"==typeof e&&(e=iE(e));this.eB=sB(a,c,d,e);h(Y)[this.eB]=this}Y.prototype=Object.create(r.prototype);Y.prototype.constructor=Y;Y.prototype.fB=Y;Y.gB={};b.btSoftBody=Y;Y.prototype.checkLink=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return!!tB(d,a,c)};
  Y.prototype.checkFace=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);return!!uB(e,a,c,d)};Y.prototype.appendMaterial=function(){return k(vB(this.eB),U)};Y.prototype.appendNode=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);wB(d,a,c)};
  Y.prototype.appendLink=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);xB(f,a,c,d,e)};Y.prototype.appendFace=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);yB(f,a,c,d,e)};
  Y.prototype.appendTetra=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);zB(m,a,c,d,e,f)};Y.prototype.appendAnchor=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);AB(f,a,c,d,e)};
  Y.prototype.addForce=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===c?BB(d,a):CB(d,a,c)};Y.prototype.addAeroForceToNode=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);DB(d,a,c)};Y.prototype.getTotalMass=function(){return EB(this.eB)};Y.prototype.setTotalMass=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);FB(d,a,c)};
  Y.prototype.setMass=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);GB(d,a,c)};Y.prototype.transform=Y.prototype.transform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);HB(c,a)};Y.prototype.translate=Y.prototype.translate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);IB(c,a)};Y.prototype.rotate=Y.prototype.rotate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);JB(c,a)};
  Y.prototype.scale=Y.prototype.scale=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);KB(c,a)};Y.prototype.generateClusters=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return void 0===c?LB(d,a):MB(d,a,c)};Y.prototype.generateBendingConstraints=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);return NB(d,a,c)};
  Y.prototype.upcast=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(OB(c,a),Y)};Y.prototype.getRestLengthScale=function(){return PB(this.eB)};Y.prototype.setRestLengthScale=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);QB(c,a)};Y.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);RB(d,a,c)};Y.prototype.getCollisionShape=function(){return k(SB(this.eB),l)};
  Y.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);TB(c,a)};Y.prototype.setActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);UB(c,a)};Y.prototype.forceActivationState=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);VB(c,a)};Y.prototype.activate=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);void 0===a?WB(c):XB(c,a)};Y.prototype.isActive=function(){return!!YB(this.eB)};Y.prototype.isKinematicObject=function(){return!!ZB(this.eB)};
  Y.prototype.isStaticObject=function(){return!!$B(this.eB)};Y.prototype.isStaticOrKinematicObject=function(){return!!aC(this.eB)};Y.prototype.getRestitution=function(){return bC(this.eB)};Y.prototype.getFriction=function(){return cC(this.eB)};Y.prototype.getRollingFriction=function(){return dC(this.eB)};Y.prototype.setRestitution=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);eC(c,a)};Y.prototype.setFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);fC(c,a)};
  Y.prototype.setRollingFriction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);gC(c,a)};Y.prototype.getWorldTransform=function(){return k(hC(this.eB),t)};Y.prototype.getCollisionFlags=function(){return iC(this.eB)};Y.prototype.setCollisionFlags=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);jC(c,a)};Y.prototype.setWorldTransform=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);kC(c,a)};
  Y.prototype.setCollisionShape=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lC(c,a)};Y.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);mC(c,a)};Y.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);nC(c,a)};Y.prototype.getUserIndex=function(){return oC(this.eB)};Y.prototype.setUserIndex=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);pC(c,a)};
  Y.prototype.getUserPointer=function(){return k(qC(this.eB),oE)};Y.prototype.setUserPointer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);rC(c,a)};Y.prototype.getBroadphaseHandle=function(){return k(sC(this.eB),pE)};Y.prototype.get_m_cfg=Y.prototype.SC=function(){return k(tC(this.eB),X)};Y.prototype.set_m_cfg=Y.prototype.LF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);uC(c,a)};Object.defineProperty(Y.prototype,"m_cfg",{get:Y.prototype.SC,set:Y.prototype.LF});
  Y.prototype.get_m_nodes=Y.prototype.SD=function(){return k(vC(this.eB),XF)};Y.prototype.set_m_nodes=Y.prototype.LG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);wC(c,a)};Object.defineProperty(Y.prototype,"m_nodes",{get:Y.prototype.SD,set:Y.prototype.LG});Y.prototype.get_m_faces=Y.prototype.JB=function(){return k(xC(this.eB),WF)};Y.prototype.set_m_faces=Y.prototype.TB=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);yC(c,a)};
  Object.defineProperty(Y.prototype,"m_faces",{get:Y.prototype.JB,set:Y.prototype.TB});Y.prototype.get_m_materials=Y.prototype.OD=function(){return k(zC(this.eB),YF)};Y.prototype.set_m_materials=Y.prototype.HG=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);AC(c,a)};Object.defineProperty(Y.prototype,"m_materials",{get:Y.prototype.OD,set:Y.prototype.HG});Y.prototype.get_m_anchors=Y.prototype.IC=function(){return k(BC(this.eB),ZF)};
  Y.prototype.set_m_anchors=Y.prototype.BF=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);CC(c,a)};Object.defineProperty(Y.prototype,"m_anchors",{get:Y.prototype.IC,set:Y.prototype.BF});Y.prototype.__destroy__=function(){DC(this.eB)};function $F(a){a&&"object"===typeof a&&(a=a.eB);this.eB=void 0===a?EC():FC(a);h($F)[this.eB]=this}$F.prototype=Object.create(GE.prototype);$F.prototype.constructor=$F;$F.prototype.fB=$F;$F.gB={};b.btSoftBodyRigidBodyCollisionConfiguration=$F;
  $F.prototype.__destroy__=function(){GC(this.eB)};function aG(){this.eB=HC();h(aG)[this.eB]=this}aG.prototype=Object.create(LE.prototype);aG.prototype.constructor=aG;aG.prototype.fB=aG;aG.gB={};b.btDefaultSoftBodySolver=aG;aG.prototype.__destroy__=function(){IC(this.eB)};function bG(){throw"cannot construct a btSoftBodyArray, no constructor in IDL";}bG.prototype=Object.create(g.prototype);bG.prototype.constructor=bG;bG.prototype.fB=bG;bG.gB={};b.btSoftBodyArray=bG;
  bG.prototype.size=bG.prototype.size=function(){return JC(this.eB)};bG.prototype.at=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);return k(KC(c,a),Y)};bG.prototype.__destroy__=function(){LC(this.eB)};function Z(a,c,d,e,f){a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);this.eB=MC(a,c,d,e,f);h(Z)[this.eB]=this}Z.prototype=Object.create(x.prototype);
  Z.prototype.constructor=Z;Z.prototype.fB=Z;Z.gB={};b.btSoftRigidDynamicsWorld=Z;Z.prototype.addSoftBody=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);NC(e,a,c,d)};Z.prototype.removeSoftBody=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);OC(c,a)};Z.prototype.removeCollisionObject=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);PC(c,a)};Z.prototype.getWorldInfo=function(){return k(QC(this.eB),T)};
  Z.prototype.getSoftBodyArray=function(){return k(RC(this.eB),bG)};Z.prototype.getDispatcher=function(){return k(SC(this.eB),kE)};Z.prototype.rayTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);TC(e,a,c,d)};Z.prototype.getPairCache=function(){return k(UC(this.eB),lE)};Z.prototype.getDispatchInfo=function(){return k(VC(this.eB),q)};
  Z.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?WC(e,a):void 0===d?XC(e,a,c):YC(e,a,c,d)};Z.prototype.getBroadphase=function(){return k(ZC(this.eB),mE)};
  Z.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);$C(m,a,c,d,e,f)};Z.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);aD(e,a,c,d)};
  Z.prototype.contactTest=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);bD(d,a,c)};Z.prototype.updateSingleAabb=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);cD(c,a)};Z.prototype.setDebugDrawer=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);dD(c,a)};Z.prototype.getDebugDrawer=function(){return k(eD(this.eB),nE)};Z.prototype.debugDrawWorld=function(){fD(this.eB)};
  Z.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);gD(e,a,c,d)};Z.prototype.setGravity=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);hD(c,a)};Z.prototype.getGravity=function(){return k(iD(this.eB),n)};
  Z.prototype.addRigidBody=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?jD(e,a):void 0===d?_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_2(e,a,c):kD(e,a,c,d)};Z.prototype.removeRigidBody=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);lD(c,a)};
  Z.prototype.addConstraint=function(a,c){var d=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);void 0===c?mD(d,a):nD(d,a,c)};Z.prototype.removeConstraint=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);oD(c,a)};Z.prototype.stepSimulation=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);return void 0===c?pD(e,a):void 0===d?qD(e,a,c):rD(e,a,c,d)};
  Z.prototype.setContactAddedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);sD(c,a)};Z.prototype.setContactProcessedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);tD(c,a)};Z.prototype.setContactDestroyedCallback=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);uD(c,a)};Z.prototype.addAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);vD(c,a)};Z.prototype.removeAction=function(a){var c=this.eB;a&&"object"===typeof a&&(a=a.eB);wD(c,a)};
  Z.prototype.getSolverInfo=function(){return k(xD(this.eB),u)};Z.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);void 0===c?yD(e,a):void 0===d?zD(e,a,c):AD(e,a,c,d)};Z.prototype.__destroy__=function(){BD(this.eB)};function cG(){this.eB=CD();h(cG)[this.eB]=this}cG.prototype=Object.create(g.prototype);cG.prototype.constructor=cG;cG.prototype.fB=cG;cG.gB={};b.btSoftBodyHelpers=cG;
  cG.prototype.CreateRope=function(a,c,d,e,f){var m=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);return k(DD(m,a,c,d,e,f),Y)};
  cG.prototype.CreatePatch=function(a,c,d,e,f,m,y,W,E){var p=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);W&&"object"===typeof W&&(W=W.eB);E&&"object"===typeof E&&(E=E.eB);return k(ED(p,a,c,d,e,f,m,y,W,E),Y)};
  cG.prototype.CreatePatchUV=function(a,c,d,e,f,m,y,W,E,p){var G=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);m&&"object"===typeof m&&(m=m.eB);y&&"object"===typeof y&&(y=y.eB);W&&"object"===typeof W&&(W=W.eB);E&&"object"===typeof E&&(E=E.eB);"object"==typeof p&&(p=iE(p));return k(FD(G,a,c,d,e,f,m,y,W,E,p),Y)};
  cG.prototype.CreateEllipsoid=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);return k(GD(f,a,c,d,e),Y)};
  cG.prototype.CreateFromTriMesh=function(a,c,d,e,f){var m=this.eB;eE();a&&"object"===typeof a&&(a=a.eB);"object"==typeof c&&(c=iE(c));if("object"==typeof d&&"object"===typeof d){var y=fE(d,Qa);gE(d,Qa,y);d=y}e&&"object"===typeof e&&(e=e.eB);f&&"object"===typeof f&&(f=f.eB);return k(HD(m,a,c,d,e,f),Y)};
  cG.prototype.CreateFromConvexHull=function(a,c,d,e){var f=this.eB;a&&"object"===typeof a&&(a=a.eB);c&&"object"===typeof c&&(c=c.eB);d&&"object"===typeof d&&(d=d.eB);e&&"object"===typeof e&&(e=e.eB);return k(ID(f,a,c,d,e),Y)};cG.prototype.__destroy__=function(){JD(this.eB)};
  (function(){function a(){b.PHY_FLOAT=KD();b.PHY_DOUBLE=LD();b.PHY_INTEGER=MD();b.PHY_SHORT=ND();b.PHY_FIXEDPOINT88=OD();b.PHY_UCHAR=PD();b.CONST_GIMPACT_COMPOUND_SHAPE=QD();b.CONST_GIMPACT_TRIMESH_SHAPE_PART=RD();b.CONST_GIMPACT_TRIMESH_SHAPE=SD();b.BT_CONSTRAINT_ERP=TD();b.BT_CONSTRAINT_STOP_ERP=UD();b.BT_CONSTRAINT_CFM=VD();b.BT_CONSTRAINT_STOP_CFM=WD()}Ya?a():Wa.unshift(a)})();b.CONTACT_ADDED_CALLBACK_SIGNATURE="iiiiiiii";b.CONTACT_DESTROYED_CALLBACK_SIGNATURE="ii";
  b.CONTACT_PROCESSED_CALLBACK_SIGNATURE="iiii";b.INTERNAL_TICK_CALLBACK_SIGNATURE="vif";this.Ammo=b;
  
  
    return Ammo.ready
  }
  );
  })();
  if (true)
    module.exports = Ammo;
  else {}

/***/ }),

/***/ "?6793":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?3419":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/three/build/three.module.js":
/*!**************************************************!*\
  !*** ./node_modules/three/build/three.module.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACESFilmicToneMapping": () => (/* binding */ ACESFilmicToneMapping),
/* harmony export */   "AddEquation": () => (/* binding */ AddEquation),
/* harmony export */   "AddOperation": () => (/* binding */ AddOperation),
/* harmony export */   "AdditiveAnimationBlendMode": () => (/* binding */ AdditiveAnimationBlendMode),
/* harmony export */   "AdditiveBlending": () => (/* binding */ AdditiveBlending),
/* harmony export */   "AlphaFormat": () => (/* binding */ AlphaFormat),
/* harmony export */   "AlwaysDepth": () => (/* binding */ AlwaysDepth),
/* harmony export */   "AlwaysStencilFunc": () => (/* binding */ AlwaysStencilFunc),
/* harmony export */   "AmbientLight": () => (/* binding */ AmbientLight),
/* harmony export */   "AmbientLightProbe": () => (/* binding */ AmbientLightProbe),
/* harmony export */   "AnimationClip": () => (/* binding */ AnimationClip),
/* harmony export */   "AnimationLoader": () => (/* binding */ AnimationLoader),
/* harmony export */   "AnimationMixer": () => (/* binding */ AnimationMixer),
/* harmony export */   "AnimationObjectGroup": () => (/* binding */ AnimationObjectGroup),
/* harmony export */   "AnimationUtils": () => (/* binding */ AnimationUtils),
/* harmony export */   "ArcCurve": () => (/* binding */ ArcCurve),
/* harmony export */   "ArrayCamera": () => (/* binding */ ArrayCamera),
/* harmony export */   "ArrowHelper": () => (/* binding */ ArrowHelper),
/* harmony export */   "Audio": () => (/* binding */ Audio),
/* harmony export */   "AudioAnalyser": () => (/* binding */ AudioAnalyser),
/* harmony export */   "AudioContext": () => (/* binding */ AudioContext),
/* harmony export */   "AudioListener": () => (/* binding */ AudioListener),
/* harmony export */   "AudioLoader": () => (/* binding */ AudioLoader),
/* harmony export */   "AxesHelper": () => (/* binding */ AxesHelper),
/* harmony export */   "AxisHelper": () => (/* binding */ AxisHelper),
/* harmony export */   "BackSide": () => (/* binding */ BackSide),
/* harmony export */   "BasicDepthPacking": () => (/* binding */ BasicDepthPacking),
/* harmony export */   "BasicShadowMap": () => (/* binding */ BasicShadowMap),
/* harmony export */   "BinaryTextureLoader": () => (/* binding */ BinaryTextureLoader),
/* harmony export */   "Bone": () => (/* binding */ Bone),
/* harmony export */   "BooleanKeyframeTrack": () => (/* binding */ BooleanKeyframeTrack),
/* harmony export */   "BoundingBoxHelper": () => (/* binding */ BoundingBoxHelper),
/* harmony export */   "Box2": () => (/* binding */ Box2),
/* harmony export */   "Box3": () => (/* binding */ Box3),
/* harmony export */   "Box3Helper": () => (/* binding */ Box3Helper),
/* harmony export */   "BoxBufferGeometry": () => (/* binding */ BoxGeometry),
/* harmony export */   "BoxGeometry": () => (/* binding */ BoxGeometry),
/* harmony export */   "BoxHelper": () => (/* binding */ BoxHelper),
/* harmony export */   "BufferAttribute": () => (/* binding */ BufferAttribute),
/* harmony export */   "BufferGeometry": () => (/* binding */ BufferGeometry),
/* harmony export */   "BufferGeometryLoader": () => (/* binding */ BufferGeometryLoader),
/* harmony export */   "ByteType": () => (/* binding */ ByteType),
/* harmony export */   "Cache": () => (/* binding */ Cache),
/* harmony export */   "Camera": () => (/* binding */ Camera),
/* harmony export */   "CameraHelper": () => (/* binding */ CameraHelper),
/* harmony export */   "CanvasRenderer": () => (/* binding */ CanvasRenderer),
/* harmony export */   "CanvasTexture": () => (/* binding */ CanvasTexture),
/* harmony export */   "CatmullRomCurve3": () => (/* binding */ CatmullRomCurve3),
/* harmony export */   "CineonToneMapping": () => (/* binding */ CineonToneMapping),
/* harmony export */   "CircleBufferGeometry": () => (/* binding */ CircleGeometry),
/* harmony export */   "CircleGeometry": () => (/* binding */ CircleGeometry),
/* harmony export */   "ClampToEdgeWrapping": () => (/* binding */ ClampToEdgeWrapping),
/* harmony export */   "Clock": () => (/* binding */ Clock),
/* harmony export */   "Color": () => (/* binding */ Color),
/* harmony export */   "ColorKeyframeTrack": () => (/* binding */ ColorKeyframeTrack),
/* harmony export */   "CompressedTexture": () => (/* binding */ CompressedTexture),
/* harmony export */   "CompressedTextureLoader": () => (/* binding */ CompressedTextureLoader),
/* harmony export */   "ConeBufferGeometry": () => (/* binding */ ConeGeometry),
/* harmony export */   "ConeGeometry": () => (/* binding */ ConeGeometry),
/* harmony export */   "CubeCamera": () => (/* binding */ CubeCamera),
/* harmony export */   "CubeReflectionMapping": () => (/* binding */ CubeReflectionMapping),
/* harmony export */   "CubeRefractionMapping": () => (/* binding */ CubeRefractionMapping),
/* harmony export */   "CubeTexture": () => (/* binding */ CubeTexture),
/* harmony export */   "CubeTextureLoader": () => (/* binding */ CubeTextureLoader),
/* harmony export */   "CubeUVReflectionMapping": () => (/* binding */ CubeUVReflectionMapping),
/* harmony export */   "CubeUVRefractionMapping": () => (/* binding */ CubeUVRefractionMapping),
/* harmony export */   "CubicBezierCurve": () => (/* binding */ CubicBezierCurve),
/* harmony export */   "CubicBezierCurve3": () => (/* binding */ CubicBezierCurve3),
/* harmony export */   "CubicInterpolant": () => (/* binding */ CubicInterpolant),
/* harmony export */   "CullFaceBack": () => (/* binding */ CullFaceBack),
/* harmony export */   "CullFaceFront": () => (/* binding */ CullFaceFront),
/* harmony export */   "CullFaceFrontBack": () => (/* binding */ CullFaceFrontBack),
/* harmony export */   "CullFaceNone": () => (/* binding */ CullFaceNone),
/* harmony export */   "Curve": () => (/* binding */ Curve),
/* harmony export */   "CurvePath": () => (/* binding */ CurvePath),
/* harmony export */   "CustomBlending": () => (/* binding */ CustomBlending),
/* harmony export */   "CustomToneMapping": () => (/* binding */ CustomToneMapping),
/* harmony export */   "CylinderBufferGeometry": () => (/* binding */ CylinderGeometry),
/* harmony export */   "CylinderGeometry": () => (/* binding */ CylinderGeometry),
/* harmony export */   "Cylindrical": () => (/* binding */ Cylindrical),
/* harmony export */   "Data3DTexture": () => (/* binding */ Data3DTexture),
/* harmony export */   "DataArrayTexture": () => (/* binding */ DataArrayTexture),
/* harmony export */   "DataTexture": () => (/* binding */ DataTexture),
/* harmony export */   "DataTexture2DArray": () => (/* binding */ DataTexture2DArray),
/* harmony export */   "DataTexture3D": () => (/* binding */ DataTexture3D),
/* harmony export */   "DataTextureLoader": () => (/* binding */ DataTextureLoader),
/* harmony export */   "DataUtils": () => (/* binding */ DataUtils),
/* harmony export */   "DecrementStencilOp": () => (/* binding */ DecrementStencilOp),
/* harmony export */   "DecrementWrapStencilOp": () => (/* binding */ DecrementWrapStencilOp),
/* harmony export */   "DefaultLoadingManager": () => (/* binding */ DefaultLoadingManager),
/* harmony export */   "DepthFormat": () => (/* binding */ DepthFormat),
/* harmony export */   "DepthStencilFormat": () => (/* binding */ DepthStencilFormat),
/* harmony export */   "DepthTexture": () => (/* binding */ DepthTexture),
/* harmony export */   "DirectionalLight": () => (/* binding */ DirectionalLight),
/* harmony export */   "DirectionalLightHelper": () => (/* binding */ DirectionalLightHelper),
/* harmony export */   "DiscreteInterpolant": () => (/* binding */ DiscreteInterpolant),
/* harmony export */   "DodecahedronBufferGeometry": () => (/* binding */ DodecahedronGeometry),
/* harmony export */   "DodecahedronGeometry": () => (/* binding */ DodecahedronGeometry),
/* harmony export */   "DoubleSide": () => (/* binding */ DoubleSide),
/* harmony export */   "DstAlphaFactor": () => (/* binding */ DstAlphaFactor),
/* harmony export */   "DstColorFactor": () => (/* binding */ DstColorFactor),
/* harmony export */   "DynamicBufferAttribute": () => (/* binding */ DynamicBufferAttribute),
/* harmony export */   "DynamicCopyUsage": () => (/* binding */ DynamicCopyUsage),
/* harmony export */   "DynamicDrawUsage": () => (/* binding */ DynamicDrawUsage),
/* harmony export */   "DynamicReadUsage": () => (/* binding */ DynamicReadUsage),
/* harmony export */   "EdgesGeometry": () => (/* binding */ EdgesGeometry),
/* harmony export */   "EdgesHelper": () => (/* binding */ EdgesHelper),
/* harmony export */   "EllipseCurve": () => (/* binding */ EllipseCurve),
/* harmony export */   "EqualDepth": () => (/* binding */ EqualDepth),
/* harmony export */   "EqualStencilFunc": () => (/* binding */ EqualStencilFunc),
/* harmony export */   "EquirectangularReflectionMapping": () => (/* binding */ EquirectangularReflectionMapping),
/* harmony export */   "EquirectangularRefractionMapping": () => (/* binding */ EquirectangularRefractionMapping),
/* harmony export */   "Euler": () => (/* binding */ Euler),
/* harmony export */   "EventDispatcher": () => (/* binding */ EventDispatcher),
/* harmony export */   "ExtrudeBufferGeometry": () => (/* binding */ ExtrudeGeometry),
/* harmony export */   "ExtrudeGeometry": () => (/* binding */ ExtrudeGeometry),
/* harmony export */   "FaceColors": () => (/* binding */ FaceColors),
/* harmony export */   "FileLoader": () => (/* binding */ FileLoader),
/* harmony export */   "FlatShading": () => (/* binding */ FlatShading),
/* harmony export */   "Float16BufferAttribute": () => (/* binding */ Float16BufferAttribute),
/* harmony export */   "Float32Attribute": () => (/* binding */ Float32Attribute),
/* harmony export */   "Float32BufferAttribute": () => (/* binding */ Float32BufferAttribute),
/* harmony export */   "Float64Attribute": () => (/* binding */ Float64Attribute),
/* harmony export */   "Float64BufferAttribute": () => (/* binding */ Float64BufferAttribute),
/* harmony export */   "FloatType": () => (/* binding */ FloatType),
/* harmony export */   "Fog": () => (/* binding */ Fog),
/* harmony export */   "FogExp2": () => (/* binding */ FogExp2),
/* harmony export */   "Font": () => (/* binding */ Font),
/* harmony export */   "FontLoader": () => (/* binding */ FontLoader),
/* harmony export */   "FramebufferTexture": () => (/* binding */ FramebufferTexture),
/* harmony export */   "FrontSide": () => (/* binding */ FrontSide),
/* harmony export */   "Frustum": () => (/* binding */ Frustum),
/* harmony export */   "GLBufferAttribute": () => (/* binding */ GLBufferAttribute),
/* harmony export */   "GLSL1": () => (/* binding */ GLSL1),
/* harmony export */   "GLSL3": () => (/* binding */ GLSL3),
/* harmony export */   "GreaterDepth": () => (/* binding */ GreaterDepth),
/* harmony export */   "GreaterEqualDepth": () => (/* binding */ GreaterEqualDepth),
/* harmony export */   "GreaterEqualStencilFunc": () => (/* binding */ GreaterEqualStencilFunc),
/* harmony export */   "GreaterStencilFunc": () => (/* binding */ GreaterStencilFunc),
/* harmony export */   "GridHelper": () => (/* binding */ GridHelper),
/* harmony export */   "Group": () => (/* binding */ Group),
/* harmony export */   "HalfFloatType": () => (/* binding */ HalfFloatType),
/* harmony export */   "HemisphereLight": () => (/* binding */ HemisphereLight),
/* harmony export */   "HemisphereLightHelper": () => (/* binding */ HemisphereLightHelper),
/* harmony export */   "HemisphereLightProbe": () => (/* binding */ HemisphereLightProbe),
/* harmony export */   "IcosahedronBufferGeometry": () => (/* binding */ IcosahedronGeometry),
/* harmony export */   "IcosahedronGeometry": () => (/* binding */ IcosahedronGeometry),
/* harmony export */   "ImageBitmapLoader": () => (/* binding */ ImageBitmapLoader),
/* harmony export */   "ImageLoader": () => (/* binding */ ImageLoader),
/* harmony export */   "ImageUtils": () => (/* binding */ ImageUtils),
/* harmony export */   "ImmediateRenderObject": () => (/* binding */ ImmediateRenderObject),
/* harmony export */   "IncrementStencilOp": () => (/* binding */ IncrementStencilOp),
/* harmony export */   "IncrementWrapStencilOp": () => (/* binding */ IncrementWrapStencilOp),
/* harmony export */   "InstancedBufferAttribute": () => (/* binding */ InstancedBufferAttribute),
/* harmony export */   "InstancedBufferGeometry": () => (/* binding */ InstancedBufferGeometry),
/* harmony export */   "InstancedInterleavedBuffer": () => (/* binding */ InstancedInterleavedBuffer),
/* harmony export */   "InstancedMesh": () => (/* binding */ InstancedMesh),
/* harmony export */   "Int16Attribute": () => (/* binding */ Int16Attribute),
/* harmony export */   "Int16BufferAttribute": () => (/* binding */ Int16BufferAttribute),
/* harmony export */   "Int32Attribute": () => (/* binding */ Int32Attribute),
/* harmony export */   "Int32BufferAttribute": () => (/* binding */ Int32BufferAttribute),
/* harmony export */   "Int8Attribute": () => (/* binding */ Int8Attribute),
/* harmony export */   "Int8BufferAttribute": () => (/* binding */ Int8BufferAttribute),
/* harmony export */   "IntType": () => (/* binding */ IntType),
/* harmony export */   "InterleavedBuffer": () => (/* binding */ InterleavedBuffer),
/* harmony export */   "InterleavedBufferAttribute": () => (/* binding */ InterleavedBufferAttribute),
/* harmony export */   "Interpolant": () => (/* binding */ Interpolant),
/* harmony export */   "InterpolateDiscrete": () => (/* binding */ InterpolateDiscrete),
/* harmony export */   "InterpolateLinear": () => (/* binding */ InterpolateLinear),
/* harmony export */   "InterpolateSmooth": () => (/* binding */ InterpolateSmooth),
/* harmony export */   "InvertStencilOp": () => (/* binding */ InvertStencilOp),
/* harmony export */   "JSONLoader": () => (/* binding */ JSONLoader),
/* harmony export */   "KeepStencilOp": () => (/* binding */ KeepStencilOp),
/* harmony export */   "KeyframeTrack": () => (/* binding */ KeyframeTrack),
/* harmony export */   "LOD": () => (/* binding */ LOD),
/* harmony export */   "LatheBufferGeometry": () => (/* binding */ LatheGeometry),
/* harmony export */   "LatheGeometry": () => (/* binding */ LatheGeometry),
/* harmony export */   "Layers": () => (/* binding */ Layers),
/* harmony export */   "LensFlare": () => (/* binding */ LensFlare),
/* harmony export */   "LessDepth": () => (/* binding */ LessDepth),
/* harmony export */   "LessEqualDepth": () => (/* binding */ LessEqualDepth),
/* harmony export */   "LessEqualStencilFunc": () => (/* binding */ LessEqualStencilFunc),
/* harmony export */   "LessStencilFunc": () => (/* binding */ LessStencilFunc),
/* harmony export */   "Light": () => (/* binding */ Light),
/* harmony export */   "LightProbe": () => (/* binding */ LightProbe),
/* harmony export */   "Line": () => (/* binding */ Line),
/* harmony export */   "Line3": () => (/* binding */ Line3),
/* harmony export */   "LineBasicMaterial": () => (/* binding */ LineBasicMaterial),
/* harmony export */   "LineCurve": () => (/* binding */ LineCurve),
/* harmony export */   "LineCurve3": () => (/* binding */ LineCurve3),
/* harmony export */   "LineDashedMaterial": () => (/* binding */ LineDashedMaterial),
/* harmony export */   "LineLoop": () => (/* binding */ LineLoop),
/* harmony export */   "LinePieces": () => (/* binding */ LinePieces),
/* harmony export */   "LineSegments": () => (/* binding */ LineSegments),
/* harmony export */   "LineStrip": () => (/* binding */ LineStrip),
/* harmony export */   "LinearEncoding": () => (/* binding */ LinearEncoding),
/* harmony export */   "LinearFilter": () => (/* binding */ LinearFilter),
/* harmony export */   "LinearInterpolant": () => (/* binding */ LinearInterpolant),
/* harmony export */   "LinearMipMapLinearFilter": () => (/* binding */ LinearMipMapLinearFilter),
/* harmony export */   "LinearMipMapNearestFilter": () => (/* binding */ LinearMipMapNearestFilter),
/* harmony export */   "LinearMipmapLinearFilter": () => (/* binding */ LinearMipmapLinearFilter),
/* harmony export */   "LinearMipmapNearestFilter": () => (/* binding */ LinearMipmapNearestFilter),
/* harmony export */   "LinearToneMapping": () => (/* binding */ LinearToneMapping),
/* harmony export */   "Loader": () => (/* binding */ Loader),
/* harmony export */   "LoaderUtils": () => (/* binding */ LoaderUtils),
/* harmony export */   "LoadingManager": () => (/* binding */ LoadingManager),
/* harmony export */   "LoopOnce": () => (/* binding */ LoopOnce),
/* harmony export */   "LoopPingPong": () => (/* binding */ LoopPingPong),
/* harmony export */   "LoopRepeat": () => (/* binding */ LoopRepeat),
/* harmony export */   "LuminanceAlphaFormat": () => (/* binding */ LuminanceAlphaFormat),
/* harmony export */   "LuminanceFormat": () => (/* binding */ LuminanceFormat),
/* harmony export */   "MOUSE": () => (/* binding */ MOUSE),
/* harmony export */   "Material": () => (/* binding */ Material),
/* harmony export */   "MaterialLoader": () => (/* binding */ MaterialLoader),
/* harmony export */   "Math": () => (/* binding */ MathUtils),
/* harmony export */   "MathUtils": () => (/* binding */ MathUtils),
/* harmony export */   "Matrix3": () => (/* binding */ Matrix3),
/* harmony export */   "Matrix4": () => (/* binding */ Matrix4),
/* harmony export */   "MaxEquation": () => (/* binding */ MaxEquation),
/* harmony export */   "Mesh": () => (/* binding */ Mesh),
/* harmony export */   "MeshBasicMaterial": () => (/* binding */ MeshBasicMaterial),
/* harmony export */   "MeshDepthMaterial": () => (/* binding */ MeshDepthMaterial),
/* harmony export */   "MeshDistanceMaterial": () => (/* binding */ MeshDistanceMaterial),
/* harmony export */   "MeshFaceMaterial": () => (/* binding */ MeshFaceMaterial),
/* harmony export */   "MeshLambertMaterial": () => (/* binding */ MeshLambertMaterial),
/* harmony export */   "MeshMatcapMaterial": () => (/* binding */ MeshMatcapMaterial),
/* harmony export */   "MeshNormalMaterial": () => (/* binding */ MeshNormalMaterial),
/* harmony export */   "MeshPhongMaterial": () => (/* binding */ MeshPhongMaterial),
/* harmony export */   "MeshPhysicalMaterial": () => (/* binding */ MeshPhysicalMaterial),
/* harmony export */   "MeshStandardMaterial": () => (/* binding */ MeshStandardMaterial),
/* harmony export */   "MeshToonMaterial": () => (/* binding */ MeshToonMaterial),
/* harmony export */   "MinEquation": () => (/* binding */ MinEquation),
/* harmony export */   "MirroredRepeatWrapping": () => (/* binding */ MirroredRepeatWrapping),
/* harmony export */   "MixOperation": () => (/* binding */ MixOperation),
/* harmony export */   "MultiMaterial": () => (/* binding */ MultiMaterial),
/* harmony export */   "MultiplyBlending": () => (/* binding */ MultiplyBlending),
/* harmony export */   "MultiplyOperation": () => (/* binding */ MultiplyOperation),
/* harmony export */   "NearestFilter": () => (/* binding */ NearestFilter),
/* harmony export */   "NearestMipMapLinearFilter": () => (/* binding */ NearestMipMapLinearFilter),
/* harmony export */   "NearestMipMapNearestFilter": () => (/* binding */ NearestMipMapNearestFilter),
/* harmony export */   "NearestMipmapLinearFilter": () => (/* binding */ NearestMipmapLinearFilter),
/* harmony export */   "NearestMipmapNearestFilter": () => (/* binding */ NearestMipmapNearestFilter),
/* harmony export */   "NeverDepth": () => (/* binding */ NeverDepth),
/* harmony export */   "NeverStencilFunc": () => (/* binding */ NeverStencilFunc),
/* harmony export */   "NoBlending": () => (/* binding */ NoBlending),
/* harmony export */   "NoColors": () => (/* binding */ NoColors),
/* harmony export */   "NoToneMapping": () => (/* binding */ NoToneMapping),
/* harmony export */   "NormalAnimationBlendMode": () => (/* binding */ NormalAnimationBlendMode),
/* harmony export */   "NormalBlending": () => (/* binding */ NormalBlending),
/* harmony export */   "NotEqualDepth": () => (/* binding */ NotEqualDepth),
/* harmony export */   "NotEqualStencilFunc": () => (/* binding */ NotEqualStencilFunc),
/* harmony export */   "NumberKeyframeTrack": () => (/* binding */ NumberKeyframeTrack),
/* harmony export */   "Object3D": () => (/* binding */ Object3D),
/* harmony export */   "ObjectLoader": () => (/* binding */ ObjectLoader),
/* harmony export */   "ObjectSpaceNormalMap": () => (/* binding */ ObjectSpaceNormalMap),
/* harmony export */   "OctahedronBufferGeometry": () => (/* binding */ OctahedronGeometry),
/* harmony export */   "OctahedronGeometry": () => (/* binding */ OctahedronGeometry),
/* harmony export */   "OneFactor": () => (/* binding */ OneFactor),
/* harmony export */   "OneMinusDstAlphaFactor": () => (/* binding */ OneMinusDstAlphaFactor),
/* harmony export */   "OneMinusDstColorFactor": () => (/* binding */ OneMinusDstColorFactor),
/* harmony export */   "OneMinusSrcAlphaFactor": () => (/* binding */ OneMinusSrcAlphaFactor),
/* harmony export */   "OneMinusSrcColorFactor": () => (/* binding */ OneMinusSrcColorFactor),
/* harmony export */   "OrthographicCamera": () => (/* binding */ OrthographicCamera),
/* harmony export */   "PCFShadowMap": () => (/* binding */ PCFShadowMap),
/* harmony export */   "PCFSoftShadowMap": () => (/* binding */ PCFSoftShadowMap),
/* harmony export */   "PMREMGenerator": () => (/* binding */ PMREMGenerator),
/* harmony export */   "ParametricGeometry": () => (/* binding */ ParametricGeometry),
/* harmony export */   "Particle": () => (/* binding */ Particle),
/* harmony export */   "ParticleBasicMaterial": () => (/* binding */ ParticleBasicMaterial),
/* harmony export */   "ParticleSystem": () => (/* binding */ ParticleSystem),
/* harmony export */   "ParticleSystemMaterial": () => (/* binding */ ParticleSystemMaterial),
/* harmony export */   "Path": () => (/* binding */ Path),
/* harmony export */   "PerspectiveCamera": () => (/* binding */ PerspectiveCamera),
/* harmony export */   "Plane": () => (/* binding */ Plane),
/* harmony export */   "PlaneBufferGeometry": () => (/* binding */ PlaneGeometry),
/* harmony export */   "PlaneGeometry": () => (/* binding */ PlaneGeometry),
/* harmony export */   "PlaneHelper": () => (/* binding */ PlaneHelper),
/* harmony export */   "PointCloud": () => (/* binding */ PointCloud),
/* harmony export */   "PointCloudMaterial": () => (/* binding */ PointCloudMaterial),
/* harmony export */   "PointLight": () => (/* binding */ PointLight),
/* harmony export */   "PointLightHelper": () => (/* binding */ PointLightHelper),
/* harmony export */   "Points": () => (/* binding */ Points),
/* harmony export */   "PointsMaterial": () => (/* binding */ PointsMaterial),
/* harmony export */   "PolarGridHelper": () => (/* binding */ PolarGridHelper),
/* harmony export */   "PolyhedronBufferGeometry": () => (/* binding */ PolyhedronGeometry),
/* harmony export */   "PolyhedronGeometry": () => (/* binding */ PolyhedronGeometry),
/* harmony export */   "PositionalAudio": () => (/* binding */ PositionalAudio),
/* harmony export */   "PropertyBinding": () => (/* binding */ PropertyBinding),
/* harmony export */   "PropertyMixer": () => (/* binding */ PropertyMixer),
/* harmony export */   "QuadraticBezierCurve": () => (/* binding */ QuadraticBezierCurve),
/* harmony export */   "QuadraticBezierCurve3": () => (/* binding */ QuadraticBezierCurve3),
/* harmony export */   "Quaternion": () => (/* binding */ Quaternion),
/* harmony export */   "QuaternionKeyframeTrack": () => (/* binding */ QuaternionKeyframeTrack),
/* harmony export */   "QuaternionLinearInterpolant": () => (/* binding */ QuaternionLinearInterpolant),
/* harmony export */   "REVISION": () => (/* binding */ REVISION),
/* harmony export */   "RGBADepthPacking": () => (/* binding */ RGBADepthPacking),
/* harmony export */   "RGBAFormat": () => (/* binding */ RGBAFormat),
/* harmony export */   "RGBAIntegerFormat": () => (/* binding */ RGBAIntegerFormat),
/* harmony export */   "RGBA_ASTC_10x10_Format": () => (/* binding */ RGBA_ASTC_10x10_Format),
/* harmony export */   "RGBA_ASTC_10x5_Format": () => (/* binding */ RGBA_ASTC_10x5_Format),
/* harmony export */   "RGBA_ASTC_10x6_Format": () => (/* binding */ RGBA_ASTC_10x6_Format),
/* harmony export */   "RGBA_ASTC_10x8_Format": () => (/* binding */ RGBA_ASTC_10x8_Format),
/* harmony export */   "RGBA_ASTC_12x10_Format": () => (/* binding */ RGBA_ASTC_12x10_Format),
/* harmony export */   "RGBA_ASTC_12x12_Format": () => (/* binding */ RGBA_ASTC_12x12_Format),
/* harmony export */   "RGBA_ASTC_4x4_Format": () => (/* binding */ RGBA_ASTC_4x4_Format),
/* harmony export */   "RGBA_ASTC_5x4_Format": () => (/* binding */ RGBA_ASTC_5x4_Format),
/* harmony export */   "RGBA_ASTC_5x5_Format": () => (/* binding */ RGBA_ASTC_5x5_Format),
/* harmony export */   "RGBA_ASTC_6x5_Format": () => (/* binding */ RGBA_ASTC_6x5_Format),
/* harmony export */   "RGBA_ASTC_6x6_Format": () => (/* binding */ RGBA_ASTC_6x6_Format),
/* harmony export */   "RGBA_ASTC_8x5_Format": () => (/* binding */ RGBA_ASTC_8x5_Format),
/* harmony export */   "RGBA_ASTC_8x6_Format": () => (/* binding */ RGBA_ASTC_8x6_Format),
/* harmony export */   "RGBA_ASTC_8x8_Format": () => (/* binding */ RGBA_ASTC_8x8_Format),
/* harmony export */   "RGBA_BPTC_Format": () => (/* binding */ RGBA_BPTC_Format),
/* harmony export */   "RGBA_ETC2_EAC_Format": () => (/* binding */ RGBA_ETC2_EAC_Format),
/* harmony export */   "RGBA_PVRTC_2BPPV1_Format": () => (/* binding */ RGBA_PVRTC_2BPPV1_Format),
/* harmony export */   "RGBA_PVRTC_4BPPV1_Format": () => (/* binding */ RGBA_PVRTC_4BPPV1_Format),
/* harmony export */   "RGBA_S3TC_DXT1_Format": () => (/* binding */ RGBA_S3TC_DXT1_Format),
/* harmony export */   "RGBA_S3TC_DXT3_Format": () => (/* binding */ RGBA_S3TC_DXT3_Format),
/* harmony export */   "RGBA_S3TC_DXT5_Format": () => (/* binding */ RGBA_S3TC_DXT5_Format),
/* harmony export */   "RGBFormat": () => (/* binding */ RGBFormat),
/* harmony export */   "RGB_ETC1_Format": () => (/* binding */ RGB_ETC1_Format),
/* harmony export */   "RGB_ETC2_Format": () => (/* binding */ RGB_ETC2_Format),
/* harmony export */   "RGB_PVRTC_2BPPV1_Format": () => (/* binding */ RGB_PVRTC_2BPPV1_Format),
/* harmony export */   "RGB_PVRTC_4BPPV1_Format": () => (/* binding */ RGB_PVRTC_4BPPV1_Format),
/* harmony export */   "RGB_S3TC_DXT1_Format": () => (/* binding */ RGB_S3TC_DXT1_Format),
/* harmony export */   "RGFormat": () => (/* binding */ RGFormat),
/* harmony export */   "RGIntegerFormat": () => (/* binding */ RGIntegerFormat),
/* harmony export */   "RawShaderMaterial": () => (/* binding */ RawShaderMaterial),
/* harmony export */   "Ray": () => (/* binding */ Ray),
/* harmony export */   "Raycaster": () => (/* binding */ Raycaster),
/* harmony export */   "RectAreaLight": () => (/* binding */ RectAreaLight),
/* harmony export */   "RedFormat": () => (/* binding */ RedFormat),
/* harmony export */   "RedIntegerFormat": () => (/* binding */ RedIntegerFormat),
/* harmony export */   "ReinhardToneMapping": () => (/* binding */ ReinhardToneMapping),
/* harmony export */   "RepeatWrapping": () => (/* binding */ RepeatWrapping),
/* harmony export */   "ReplaceStencilOp": () => (/* binding */ ReplaceStencilOp),
/* harmony export */   "ReverseSubtractEquation": () => (/* binding */ ReverseSubtractEquation),
/* harmony export */   "RingBufferGeometry": () => (/* binding */ RingGeometry),
/* harmony export */   "RingGeometry": () => (/* binding */ RingGeometry),
/* harmony export */   "Scene": () => (/* binding */ Scene),
/* harmony export */   "SceneUtils": () => (/* binding */ SceneUtils),
/* harmony export */   "ShaderChunk": () => (/* binding */ ShaderChunk),
/* harmony export */   "ShaderLib": () => (/* binding */ ShaderLib),
/* harmony export */   "ShaderMaterial": () => (/* binding */ ShaderMaterial),
/* harmony export */   "ShadowMaterial": () => (/* binding */ ShadowMaterial),
/* harmony export */   "Shape": () => (/* binding */ Shape),
/* harmony export */   "ShapeBufferGeometry": () => (/* binding */ ShapeGeometry),
/* harmony export */   "ShapeGeometry": () => (/* binding */ ShapeGeometry),
/* harmony export */   "ShapePath": () => (/* binding */ ShapePath),
/* harmony export */   "ShapeUtils": () => (/* binding */ ShapeUtils),
/* harmony export */   "ShortType": () => (/* binding */ ShortType),
/* harmony export */   "Skeleton": () => (/* binding */ Skeleton),
/* harmony export */   "SkeletonHelper": () => (/* binding */ SkeletonHelper),
/* harmony export */   "SkinnedMesh": () => (/* binding */ SkinnedMesh),
/* harmony export */   "SmoothShading": () => (/* binding */ SmoothShading),
/* harmony export */   "Sphere": () => (/* binding */ Sphere),
/* harmony export */   "SphereBufferGeometry": () => (/* binding */ SphereGeometry),
/* harmony export */   "SphereGeometry": () => (/* binding */ SphereGeometry),
/* harmony export */   "Spherical": () => (/* binding */ Spherical),
/* harmony export */   "SphericalHarmonics3": () => (/* binding */ SphericalHarmonics3),
/* harmony export */   "SplineCurve": () => (/* binding */ SplineCurve),
/* harmony export */   "SpotLight": () => (/* binding */ SpotLight),
/* harmony export */   "SpotLightHelper": () => (/* binding */ SpotLightHelper),
/* harmony export */   "Sprite": () => (/* binding */ Sprite),
/* harmony export */   "SpriteMaterial": () => (/* binding */ SpriteMaterial),
/* harmony export */   "SrcAlphaFactor": () => (/* binding */ SrcAlphaFactor),
/* harmony export */   "SrcAlphaSaturateFactor": () => (/* binding */ SrcAlphaSaturateFactor),
/* harmony export */   "SrcColorFactor": () => (/* binding */ SrcColorFactor),
/* harmony export */   "StaticCopyUsage": () => (/* binding */ StaticCopyUsage),
/* harmony export */   "StaticDrawUsage": () => (/* binding */ StaticDrawUsage),
/* harmony export */   "StaticReadUsage": () => (/* binding */ StaticReadUsage),
/* harmony export */   "StereoCamera": () => (/* binding */ StereoCamera),
/* harmony export */   "StreamCopyUsage": () => (/* binding */ StreamCopyUsage),
/* harmony export */   "StreamDrawUsage": () => (/* binding */ StreamDrawUsage),
/* harmony export */   "StreamReadUsage": () => (/* binding */ StreamReadUsage),
/* harmony export */   "StringKeyframeTrack": () => (/* binding */ StringKeyframeTrack),
/* harmony export */   "SubtractEquation": () => (/* binding */ SubtractEquation),
/* harmony export */   "SubtractiveBlending": () => (/* binding */ SubtractiveBlending),
/* harmony export */   "TOUCH": () => (/* binding */ TOUCH),
/* harmony export */   "TangentSpaceNormalMap": () => (/* binding */ TangentSpaceNormalMap),
/* harmony export */   "TetrahedronBufferGeometry": () => (/* binding */ TetrahedronGeometry),
/* harmony export */   "TetrahedronGeometry": () => (/* binding */ TetrahedronGeometry),
/* harmony export */   "TextGeometry": () => (/* binding */ TextGeometry),
/* harmony export */   "Texture": () => (/* binding */ Texture),
/* harmony export */   "TextureLoader": () => (/* binding */ TextureLoader),
/* harmony export */   "TorusBufferGeometry": () => (/* binding */ TorusGeometry),
/* harmony export */   "TorusGeometry": () => (/* binding */ TorusGeometry),
/* harmony export */   "TorusKnotBufferGeometry": () => (/* binding */ TorusKnotGeometry),
/* harmony export */   "TorusKnotGeometry": () => (/* binding */ TorusKnotGeometry),
/* harmony export */   "Triangle": () => (/* binding */ Triangle),
/* harmony export */   "TriangleFanDrawMode": () => (/* binding */ TriangleFanDrawMode),
/* harmony export */   "TriangleStripDrawMode": () => (/* binding */ TriangleStripDrawMode),
/* harmony export */   "TrianglesDrawMode": () => (/* binding */ TrianglesDrawMode),
/* harmony export */   "TubeBufferGeometry": () => (/* binding */ TubeGeometry),
/* harmony export */   "TubeGeometry": () => (/* binding */ TubeGeometry),
/* harmony export */   "UVMapping": () => (/* binding */ UVMapping),
/* harmony export */   "Uint16Attribute": () => (/* binding */ Uint16Attribute),
/* harmony export */   "Uint16BufferAttribute": () => (/* binding */ Uint16BufferAttribute),
/* harmony export */   "Uint32Attribute": () => (/* binding */ Uint32Attribute),
/* harmony export */   "Uint32BufferAttribute": () => (/* binding */ Uint32BufferAttribute),
/* harmony export */   "Uint8Attribute": () => (/* binding */ Uint8Attribute),
/* harmony export */   "Uint8BufferAttribute": () => (/* binding */ Uint8BufferAttribute),
/* harmony export */   "Uint8ClampedAttribute": () => (/* binding */ Uint8ClampedAttribute),
/* harmony export */   "Uint8ClampedBufferAttribute": () => (/* binding */ Uint8ClampedBufferAttribute),
/* harmony export */   "Uniform": () => (/* binding */ Uniform),
/* harmony export */   "UniformsLib": () => (/* binding */ UniformsLib),
/* harmony export */   "UniformsUtils": () => (/* binding */ UniformsUtils),
/* harmony export */   "UnsignedByteType": () => (/* binding */ UnsignedByteType),
/* harmony export */   "UnsignedInt248Type": () => (/* binding */ UnsignedInt248Type),
/* harmony export */   "UnsignedIntType": () => (/* binding */ UnsignedIntType),
/* harmony export */   "UnsignedShort4444Type": () => (/* binding */ UnsignedShort4444Type),
/* harmony export */   "UnsignedShort5551Type": () => (/* binding */ UnsignedShort5551Type),
/* harmony export */   "UnsignedShortType": () => (/* binding */ UnsignedShortType),
/* harmony export */   "VSMShadowMap": () => (/* binding */ VSMShadowMap),
/* harmony export */   "Vector2": () => (/* binding */ Vector2),
/* harmony export */   "Vector3": () => (/* binding */ Vector3),
/* harmony export */   "Vector4": () => (/* binding */ Vector4),
/* harmony export */   "VectorKeyframeTrack": () => (/* binding */ VectorKeyframeTrack),
/* harmony export */   "Vertex": () => (/* binding */ Vertex),
/* harmony export */   "VertexColors": () => (/* binding */ VertexColors),
/* harmony export */   "VideoTexture": () => (/* binding */ VideoTexture),
/* harmony export */   "WebGL1Renderer": () => (/* binding */ WebGL1Renderer),
/* harmony export */   "WebGL3DRenderTarget": () => (/* binding */ WebGL3DRenderTarget),
/* harmony export */   "WebGLArrayRenderTarget": () => (/* binding */ WebGLArrayRenderTarget),
/* harmony export */   "WebGLCubeRenderTarget": () => (/* binding */ WebGLCubeRenderTarget),
/* harmony export */   "WebGLMultipleRenderTargets": () => (/* binding */ WebGLMultipleRenderTargets),
/* harmony export */   "WebGLMultisampleRenderTarget": () => (/* binding */ WebGLMultisampleRenderTarget),
/* harmony export */   "WebGLRenderTarget": () => (/* binding */ WebGLRenderTarget),
/* harmony export */   "WebGLRenderTargetCube": () => (/* binding */ WebGLRenderTargetCube),
/* harmony export */   "WebGLRenderer": () => (/* binding */ WebGLRenderer),
/* harmony export */   "WebGLUtils": () => (/* binding */ WebGLUtils),
/* harmony export */   "WireframeGeometry": () => (/* binding */ WireframeGeometry),
/* harmony export */   "WireframeHelper": () => (/* binding */ WireframeHelper),
/* harmony export */   "WrapAroundEnding": () => (/* binding */ WrapAroundEnding),
/* harmony export */   "XHRLoader": () => (/* binding */ XHRLoader),
/* harmony export */   "ZeroCurvatureEnding": () => (/* binding */ ZeroCurvatureEnding),
/* harmony export */   "ZeroFactor": () => (/* binding */ ZeroFactor),
/* harmony export */   "ZeroSlopeEnding": () => (/* binding */ ZeroSlopeEnding),
/* harmony export */   "ZeroStencilOp": () => (/* binding */ ZeroStencilOp),
/* harmony export */   "_SRGBAFormat": () => (/* binding */ _SRGBAFormat),
/* harmony export */   "sRGBEncoding": () => (/* binding */ sRGBEncoding)
/* harmony export */ });
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const REVISION = '138';
const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };
const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };
const CullFaceNone = 0;
const CullFaceBack = 1;
const CullFaceFront = 2;
const CullFaceFrontBack = 3;
const BasicShadowMap = 0;
const PCFShadowMap = 1;
const PCFSoftShadowMap = 2;
const VSMShadowMap = 3;
const FrontSide = 0;
const BackSide = 1;
const DoubleSide = 2;
const FlatShading = 1;
const SmoothShading = 2;
const NoBlending = 0;
const NormalBlending = 1;
const AdditiveBlending = 2;
const SubtractiveBlending = 3;
const MultiplyBlending = 4;
const CustomBlending = 5;
const AddEquation = 100;
const SubtractEquation = 101;
const ReverseSubtractEquation = 102;
const MinEquation = 103;
const MaxEquation = 104;
const ZeroFactor = 200;
const OneFactor = 201;
const SrcColorFactor = 202;
const OneMinusSrcColorFactor = 203;
const SrcAlphaFactor = 204;
const OneMinusSrcAlphaFactor = 205;
const DstAlphaFactor = 206;
const OneMinusDstAlphaFactor = 207;
const DstColorFactor = 208;
const OneMinusDstColorFactor = 209;
const SrcAlphaSaturateFactor = 210;
const NeverDepth = 0;
const AlwaysDepth = 1;
const LessDepth = 2;
const LessEqualDepth = 3;
const EqualDepth = 4;
const GreaterEqualDepth = 5;
const GreaterDepth = 6;
const NotEqualDepth = 7;
const MultiplyOperation = 0;
const MixOperation = 1;
const AddOperation = 2;
const NoToneMapping = 0;
const LinearToneMapping = 1;
const ReinhardToneMapping = 2;
const CineonToneMapping = 3;
const ACESFilmicToneMapping = 4;
const CustomToneMapping = 5;

const UVMapping = 300;
const CubeReflectionMapping = 301;
const CubeRefractionMapping = 302;
const EquirectangularReflectionMapping = 303;
const EquirectangularRefractionMapping = 304;
const CubeUVReflectionMapping = 306;
const CubeUVRefractionMapping = 307;
const RepeatWrapping = 1000;
const ClampToEdgeWrapping = 1001;
const MirroredRepeatWrapping = 1002;
const NearestFilter = 1003;
const NearestMipmapNearestFilter = 1004;
const NearestMipMapNearestFilter = 1004;
const NearestMipmapLinearFilter = 1005;
const NearestMipMapLinearFilter = 1005;
const LinearFilter = 1006;
const LinearMipmapNearestFilter = 1007;
const LinearMipMapNearestFilter = 1007;
const LinearMipmapLinearFilter = 1008;
const LinearMipMapLinearFilter = 1008;
const UnsignedByteType = 1009;
const ByteType = 1010;
const ShortType = 1011;
const UnsignedShortType = 1012;
const IntType = 1013;
const UnsignedIntType = 1014;
const FloatType = 1015;
const HalfFloatType = 1016;
const UnsignedShort4444Type = 1017;
const UnsignedShort5551Type = 1018;
const UnsignedInt248Type = 1020;
const AlphaFormat = 1021;
const RGBFormat = 1022;
const RGBAFormat = 1023;
const LuminanceFormat = 1024;
const LuminanceAlphaFormat = 1025;
const DepthFormat = 1026;
const DepthStencilFormat = 1027;
const RedFormat = 1028;
const RedIntegerFormat = 1029;
const RGFormat = 1030;
const RGIntegerFormat = 1031;
const RGBAIntegerFormat = 1033;

const RGB_S3TC_DXT1_Format = 33776;
const RGBA_S3TC_DXT1_Format = 33777;
const RGBA_S3TC_DXT3_Format = 33778;
const RGBA_S3TC_DXT5_Format = 33779;
const RGB_PVRTC_4BPPV1_Format = 35840;
const RGB_PVRTC_2BPPV1_Format = 35841;
const RGBA_PVRTC_4BPPV1_Format = 35842;
const RGBA_PVRTC_2BPPV1_Format = 35843;
const RGB_ETC1_Format = 36196;
const RGB_ETC2_Format = 37492;
const RGBA_ETC2_EAC_Format = 37496;
const RGBA_ASTC_4x4_Format = 37808;
const RGBA_ASTC_5x4_Format = 37809;
const RGBA_ASTC_5x5_Format = 37810;
const RGBA_ASTC_6x5_Format = 37811;
const RGBA_ASTC_6x6_Format = 37812;
const RGBA_ASTC_8x5_Format = 37813;
const RGBA_ASTC_8x6_Format = 37814;
const RGBA_ASTC_8x8_Format = 37815;
const RGBA_ASTC_10x5_Format = 37816;
const RGBA_ASTC_10x6_Format = 37817;
const RGBA_ASTC_10x8_Format = 37818;
const RGBA_ASTC_10x10_Format = 37819;
const RGBA_ASTC_12x10_Format = 37820;
const RGBA_ASTC_12x12_Format = 37821;
const RGBA_BPTC_Format = 36492;
const LoopOnce = 2200;
const LoopRepeat = 2201;
const LoopPingPong = 2202;
const InterpolateDiscrete = 2300;
const InterpolateLinear = 2301;
const InterpolateSmooth = 2302;
const ZeroCurvatureEnding = 2400;
const ZeroSlopeEnding = 2401;
const WrapAroundEnding = 2402;
const NormalAnimationBlendMode = 2500;
const AdditiveAnimationBlendMode = 2501;
const TrianglesDrawMode = 0;
const TriangleStripDrawMode = 1;
const TriangleFanDrawMode = 2;
const LinearEncoding = 3000;
const sRGBEncoding = 3001;
const BasicDepthPacking = 3200;
const RGBADepthPacking = 3201;
const TangentSpaceNormalMap = 0;
const ObjectSpaceNormalMap = 1;

const ZeroStencilOp = 0;
const KeepStencilOp = 7680;
const ReplaceStencilOp = 7681;
const IncrementStencilOp = 7682;
const DecrementStencilOp = 7683;
const IncrementWrapStencilOp = 34055;
const DecrementWrapStencilOp = 34056;
const InvertStencilOp = 5386;

const NeverStencilFunc = 512;
const LessStencilFunc = 513;
const EqualStencilFunc = 514;
const LessEqualStencilFunc = 515;
const GreaterStencilFunc = 516;
const NotEqualStencilFunc = 517;
const GreaterEqualStencilFunc = 518;
const AlwaysStencilFunc = 519;

const StaticDrawUsage = 35044;
const DynamicDrawUsage = 35048;
const StreamDrawUsage = 35040;
const StaticReadUsage = 35045;
const DynamicReadUsage = 35049;
const StreamReadUsage = 35041;
const StaticCopyUsage = 35046;
const DynamicCopyUsage = 35050;
const StreamCopyUsage = 35042;

const GLSL1 = '100';
const GLSL3 = '300 es';

const _SRGBAFormat = 1035; // fallback for WebGL 1

/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */

class EventDispatcher {

	addEventListener( type, listener ) {

		if ( this._listeners === undefined ) this._listeners = {};

		const listeners = this._listeners;

		if ( listeners[ type ] === undefined ) {

			listeners[ type ] = [];

		}

		if ( listeners[ type ].indexOf( listener ) === - 1 ) {

			listeners[ type ].push( listener );

		}

	}

	hasEventListener( type, listener ) {

		if ( this._listeners === undefined ) return false;

		const listeners = this._listeners;

		return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;

	}

	removeEventListener( type, listener ) {

		if ( this._listeners === undefined ) return;

		const listeners = this._listeners;
		const listenerArray = listeners[ type ];

		if ( listenerArray !== undefined ) {

			const index = listenerArray.indexOf( listener );

			if ( index !== - 1 ) {

				listenerArray.splice( index, 1 );

			}

		}

	}

	dispatchEvent( event ) {

		if ( this._listeners === undefined ) return;

		const listeners = this._listeners;
		const listenerArray = listeners[ event.type ];

		if ( listenerArray !== undefined ) {

			event.target = this;

			// Make a copy, in case listeners are removed while iterating.
			const array = listenerArray.slice( 0 );

			for ( let i = 0, l = array.length; i < l; i ++ ) {

				array[ i ].call( this, event );

			}

			event.target = null;

		}

	}

}

const _lut = [];

for ( let i = 0; i < 256; i ++ ) {

	_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );

}

let _seed = 1234567;


const DEG2RAD = Math.PI / 180;
const RAD2DEG = 180 / Math.PI;

// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
function generateUUID() {

	const d0 = Math.random() * 0xffffffff | 0;
	const d1 = Math.random() * 0xffffffff | 0;
	const d2 = Math.random() * 0xffffffff | 0;
	const d3 = Math.random() * 0xffffffff | 0;
	const uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +
			_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +
			_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +
			_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];

	// .toUpperCase() here flattens concatenated strings to save heap memory space.
	return uuid.toUpperCase();

}

function clamp( value, min, max ) {

	return Math.max( min, Math.min( max, value ) );

}

// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
function euclideanModulo( n, m ) {

	return ( ( n % m ) + m ) % m;

}

// Linear mapping from range <a1, a2> to range <b1, b2>
function mapLinear( x, a1, a2, b1, b2 ) {

	return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );

}

// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/
function inverseLerp( x, y, value ) {

	if ( x !== y ) {

		return ( value - x ) / ( y - x );

	} else {

		return 0;

	}

}

// https://en.wikipedia.org/wiki/Linear_interpolation
function lerp( x, y, t ) {

	return ( 1 - t ) * x + t * y;

}

// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/
function damp( x, y, lambda, dt ) {

	return lerp( x, y, 1 - Math.exp( - lambda * dt ) );

}

// https://www.desmos.com/calculator/vcsjnyz7x4
function pingpong( x, length = 1 ) {

	return length - Math.abs( euclideanModulo( x, length * 2 ) - length );

}

// http://en.wikipedia.org/wiki/Smoothstep
function smoothstep( x, min, max ) {

	if ( x <= min ) return 0;
	if ( x >= max ) return 1;

	x = ( x - min ) / ( max - min );

	return x * x * ( 3 - 2 * x );

}

function smootherstep( x, min, max ) {

	if ( x <= min ) return 0;
	if ( x >= max ) return 1;

	x = ( x - min ) / ( max - min );

	return x * x * x * ( x * ( x * 6 - 15 ) + 10 );

}

// Random integer from <low, high> interval
function randInt( low, high ) {

	return low + Math.floor( Math.random() * ( high - low + 1 ) );

}

// Random float from <low, high> interval
function randFloat( low, high ) {

	return low + Math.random() * ( high - low );

}

// Random float from <-range/2, range/2> interval
function randFloatSpread( range ) {

	return range * ( 0.5 - Math.random() );

}

// Deterministic pseudo-random float in the interval [ 0, 1 ]
function seededRandom( s ) {

	if ( s !== undefined ) _seed = s % 2147483647;

	// Park-Miller algorithm

	_seed = _seed * 16807 % 2147483647;

	return ( _seed - 1 ) / 2147483646;

}

function degToRad( degrees ) {

	return degrees * DEG2RAD;

}

function radToDeg( radians ) {

	return radians * RAD2DEG;

}

function isPowerOfTwo( value ) {

	return ( value & ( value - 1 ) ) === 0 && value !== 0;

}

function ceilPowerOfTwo( value ) {

	return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );

}

function floorPowerOfTwo( value ) {

	return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );

}

function setQuaternionFromProperEuler( q, a, b, c, order ) {

	// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles

	// rotations are applied to the axes in the order specified by 'order'
	// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
	// angles are in radians

	const cos = Math.cos;
	const sin = Math.sin;

	const c2 = cos( b / 2 );
	const s2 = sin( b / 2 );

	const c13 = cos( ( a + c ) / 2 );
	const s13 = sin( ( a + c ) / 2 );

	const c1_3 = cos( ( a - c ) / 2 );
	const s1_3 = sin( ( a - c ) / 2 );

	const c3_1 = cos( ( c - a ) / 2 );
	const s3_1 = sin( ( c - a ) / 2 );

	switch ( order ) {

		case 'XYX':
			q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );
			break;

		case 'YZY':
			q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );
			break;

		case 'ZXZ':
			q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );
			break;

		case 'XZX':
			q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );
			break;

		case 'YXY':
			q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );
			break;

		case 'ZYZ':
			q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );
			break;

		default:
			console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );

	}

}

var MathUtils = /*#__PURE__*/Object.freeze({
	__proto__: null,
	DEG2RAD: DEG2RAD,
	RAD2DEG: RAD2DEG,
	generateUUID: generateUUID,
	clamp: clamp,
	euclideanModulo: euclideanModulo,
	mapLinear: mapLinear,
	inverseLerp: inverseLerp,
	lerp: lerp,
	damp: damp,
	pingpong: pingpong,
	smoothstep: smoothstep,
	smootherstep: smootherstep,
	randInt: randInt,
	randFloat: randFloat,
	randFloatSpread: randFloatSpread,
	seededRandom: seededRandom,
	degToRad: degToRad,
	radToDeg: radToDeg,
	isPowerOfTwo: isPowerOfTwo,
	ceilPowerOfTwo: ceilPowerOfTwo,
	floorPowerOfTwo: floorPowerOfTwo,
	setQuaternionFromProperEuler: setQuaternionFromProperEuler
});

class Vector2 {

	constructor( x = 0, y = 0 ) {

		this.x = x;
		this.y = y;

	}

	get width() {

		return this.x;

	}

	set width( value ) {

		this.x = value;

	}

	get height() {

		return this.y;

	}

	set height( value ) {

		this.y = value;

	}

	set( x, y ) {

		this.x = x;
		this.y = y;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;

		return this;

	}

	multiply( v ) {

		this.x *= v.x;
		this.y *= v.y;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;

		return this;

	}

	divide( v ) {

		this.x /= v.x;
		this.y /= v.y;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	applyMatrix3( m ) {

		const x = this.x, y = this.y;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];
		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];

		return this;

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y;

	}

	cross( v ) {

		return this.x * v.y - this.y * v.x;

	}

	lengthSq() {

		return this.x * this.x + this.y * this.y;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	angle() {

		// computes the angle in radians with respect to the positive x-axis

		const angle = Math.atan2( - this.y, - this.x ) + Math.PI;

		return angle;

	}

	distanceTo( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	}

	distanceToSquared( v ) {

		const dx = this.x - v.x, dy = this.y - v.y;
		return dx * dx + dy * dy;

	}

	manhattanDistanceTo( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;

		return this;

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );

		return this;

	}

	rotateAround( center, angle ) {

		const c = Math.cos( angle ), s = Math.sin( angle );

		const x = this.x - center.x;
		const y = this.y - center.y;

		this.x = x * c - y * s + center.x;
		this.y = x * s + y * c + center.y;

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();

		return this;

	}

	*[ Symbol.iterator ]() {

		yield this.x;
		yield this.y;

	}

}

Vector2.prototype.isVector2 = true;

class Matrix3 {

	constructor() {

		this.elements = [

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	set( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

		const te = this.elements;

		te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;
		te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;
		te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;

		return this;

	}

	identity() {

		this.set(

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		);

		return this;

	}

	copy( m ) {

		const te = this.elements;
		const me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];
		te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];
		te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];

		return this;

	}

	extractBasis( xAxis, yAxis, zAxis ) {

		xAxis.setFromMatrix3Column( this, 0 );
		yAxis.setFromMatrix3Column( this, 1 );
		zAxis.setFromMatrix3Column( this, 2 );

		return this;

	}

	setFromMatrix4( m ) {

		const me = m.elements;

		this.set(

			me[ 0 ], me[ 4 ], me[ 8 ],
			me[ 1 ], me[ 5 ], me[ 9 ],
			me[ 2 ], me[ 6 ], me[ 10 ]

		);

		return this;

	}

	multiply( m ) {

		return this.multiplyMatrices( this, m );

	}

	premultiply( m ) {

		return this.multiplyMatrices( m, this );

	}

	multiplyMatrices( a, b ) {

		const ae = a.elements;
		const be = b.elements;
		const te = this.elements;

		const a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];
		const a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];
		const a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];

		const b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];
		const b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];
		const b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];

		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;
		te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;
		te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;

		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;
		te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;
		te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;

		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;
		te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;
		te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;

		return this;

	}

	multiplyScalar( s ) {

		const te = this.elements;

		te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;
		te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;
		te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;

		return this;

	}

	determinant() {

		const te = this.elements;

		const a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],
			d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],
			g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];

		return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;

	}

	invert() {

		const te = this.elements,

			n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],
			n12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],
			n13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],

			t11 = n33 * n22 - n32 * n23,
			t12 = n32 * n13 - n33 * n12,
			t13 = n23 * n12 - n22 * n13,

			det = n11 * t11 + n21 * t12 + n31 * t13;

		if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );

		const detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;
		te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;

		te[ 3 ] = t12 * detInv;
		te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;
		te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;

		te[ 6 ] = t13 * detInv;
		te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;
		te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;

		return this;

	}

	transpose() {

		let tmp;
		const m = this.elements;

		tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;
		tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;
		tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;

		return this;

	}

	getNormalMatrix( matrix4 ) {

		return this.setFromMatrix4( matrix4 ).invert().transpose();

	}

	transposeIntoArray( r ) {

		const m = this.elements;

		r[ 0 ] = m[ 0 ];
		r[ 1 ] = m[ 3 ];
		r[ 2 ] = m[ 6 ];
		r[ 3 ] = m[ 1 ];
		r[ 4 ] = m[ 4 ];
		r[ 5 ] = m[ 7 ];
		r[ 6 ] = m[ 2 ];
		r[ 7 ] = m[ 5 ];
		r[ 8 ] = m[ 8 ];

		return this;

	}

	setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {

		const c = Math.cos( rotation );
		const s = Math.sin( rotation );

		this.set(
			sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,
			- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,
			0, 0, 1
		);

		return this;

	}

	scale( sx, sy ) {

		const te = this.elements;

		te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;
		te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;

		return this;

	}

	rotate( theta ) {

		const c = Math.cos( theta );
		const s = Math.sin( theta );

		const te = this.elements;

		const a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];
		const a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];

		te[ 0 ] = c * a11 + s * a21;
		te[ 3 ] = c * a12 + s * a22;
		te[ 6 ] = c * a13 + s * a23;

		te[ 1 ] = - s * a11 + c * a21;
		te[ 4 ] = - s * a12 + c * a22;
		te[ 7 ] = - s * a13 + c * a23;

		return this;

	}

	translate( tx, ty ) {

		const te = this.elements;

		te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];
		te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];

		return this;

	}

	equals( matrix ) {

		const te = this.elements;
		const me = matrix.elements;

		for ( let i = 0; i < 9; i ++ ) {

			if ( te[ i ] !== me[ i ] ) return false;

		}

		return true;

	}

	fromArray( array, offset = 0 ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];

		array[ offset + 3 ] = te[ 3 ];
		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];

		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];
		array[ offset + 8 ] = te[ 8 ];

		return array;

	}

	clone() {

		return new this.constructor().fromArray( this.elements );

	}

}

Matrix3.prototype.isMatrix3 = true;

function arrayNeedsUint32( array ) {

	// assumes larger values usually on last

	for ( let i = array.length - 1; i >= 0; -- i ) {

		if ( array[ i ] > 65535 ) return true;

	}

	return false;

}

const TYPED_ARRAYS = {
	Int8Array: Int8Array,
	Uint8Array: Uint8Array,
	Uint8ClampedArray: Uint8ClampedArray,
	Int16Array: Int16Array,
	Uint16Array: Uint16Array,
	Int32Array: Int32Array,
	Uint32Array: Uint32Array,
	Float32Array: Float32Array,
	Float64Array: Float64Array
};

function getTypedArray( type, buffer ) {

	return new TYPED_ARRAYS[ type ]( buffer );

}

function createElementNS( name ) {

	return document.createElementNS( 'http://www.w3.org/1999/xhtml', name );

}

const _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,
	'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,
	'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,
	'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,
	'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,
	'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,
	'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,
	'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,
	'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,
	'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,
	'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,
	'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,
	'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,
	'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,
	'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,
	'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,
	'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,
	'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,
	'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,
	'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,
	'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,
	'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,
	'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,
	'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };

const _hslA = { h: 0, s: 0, l: 0 };
const _hslB = { h: 0, s: 0, l: 0 };

function hue2rgb( p, q, t ) {

	if ( t < 0 ) t += 1;
	if ( t > 1 ) t -= 1;
	if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;
	if ( t < 1 / 2 ) return q;
	if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );
	return p;

}

function SRGBToLinear( c ) {

	return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );

}

function LinearToSRGB( c ) {

	return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;

}

class Color {

	constructor( r, g, b ) {

		if ( g === undefined && b === undefined ) {

			// r is THREE.Color, hex or string
			return this.set( r );

		}

		return this.setRGB( r, g, b );

	}

	set( value ) {

		if ( value && value.isColor ) {

			this.copy( value );

		} else if ( typeof value === 'number' ) {

			this.setHex( value );

		} else if ( typeof value === 'string' ) {

			this.setStyle( value );

		}

		return this;

	}

	setScalar( scalar ) {

		this.r = scalar;
		this.g = scalar;
		this.b = scalar;

		return this;

	}

	setHex( hex ) {

		hex = Math.floor( hex );

		this.r = ( hex >> 16 & 255 ) / 255;
		this.g = ( hex >> 8 & 255 ) / 255;
		this.b = ( hex & 255 ) / 255;

		return this;

	}

	setRGB( r, g, b ) {

		this.r = r;
		this.g = g;
		this.b = b;

		return this;

	}

	setHSL( h, s, l ) {

		// h,s,l ranges are in 0.0 - 1.0
		h = euclideanModulo( h, 1 );
		s = clamp( s, 0, 1 );
		l = clamp( l, 0, 1 );

		if ( s === 0 ) {

			this.r = this.g = this.b = l;

		} else {

			const p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
			const q = ( 2 * l ) - p;

			this.r = hue2rgb( q, p, h + 1 / 3 );
			this.g = hue2rgb( q, p, h );
			this.b = hue2rgb( q, p, h - 1 / 3 );

		}

		return this;

	}

	setStyle( style ) {

		function handleAlpha( string ) {

			if ( string === undefined ) return;

			if ( parseFloat( string ) < 1 ) {

				console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );

			}

		}


		let m;

		if ( m = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec( style ) ) {

			// rgb / hsl

			let color;
			const name = m[ 1 ];
			const components = m[ 2 ];

			switch ( name ) {

				case 'rgb':
				case 'rgba':

					if ( color = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// rgb(255,0,0) rgba(255,0,0,0.5)
						this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
						this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
						this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;

						handleAlpha( color[ 4 ] );

						return this;

					}

					if ( color = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
						this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
						this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
						this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;

						handleAlpha( color[ 4 ] );

						return this;

					}

					break;

				case 'hsl':
				case 'hsla':

					if ( color = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
						const h = parseFloat( color[ 1 ] ) / 360;
						const s = parseInt( color[ 2 ], 10 ) / 100;
						const l = parseInt( color[ 3 ], 10 ) / 100;

						handleAlpha( color[ 4 ] );

						return this.setHSL( h, s, l );

					}

					break;

			}

		} else if ( m = /^\#([A-Fa-f\d]+)$/.exec( style ) ) {

			// hex color

			const hex = m[ 1 ];
			const size = hex.length;

			if ( size === 3 ) {

				// #ff0
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;

				return this;

			} else if ( size === 6 ) {

				// #ff0000
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;

				return this;

			}

		}

		if ( style && style.length > 0 ) {

			return this.setColorName( style );

		}

		return this;

	}

	setColorName( style ) {

		// color keywords
		const hex = _colorKeywords[ style.toLowerCase() ];

		if ( hex !== undefined ) {

			// red
			this.setHex( hex );

		} else {

			// unknown color
			console.warn( 'THREE.Color: Unknown color ' + style );

		}

		return this;

	}

	clone() {

		return new this.constructor( this.r, this.g, this.b );

	}

	copy( color ) {

		this.r = color.r;
		this.g = color.g;
		this.b = color.b;

		return this;

	}

	copySRGBToLinear( color ) {

		this.r = SRGBToLinear( color.r );
		this.g = SRGBToLinear( color.g );
		this.b = SRGBToLinear( color.b );

		return this;

	}

	copyLinearToSRGB( color ) {

		this.r = LinearToSRGB( color.r );
		this.g = LinearToSRGB( color.g );
		this.b = LinearToSRGB( color.b );

		return this;

	}

	convertSRGBToLinear() {

		this.copySRGBToLinear( this );

		return this;

	}

	convertLinearToSRGB() {

		this.copyLinearToSRGB( this );

		return this;

	}

	getHex() {

		return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;

	}

	getHexString() {

		return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );

	}

	getHSL( target ) {

		// h,s,l ranges are in 0.0 - 1.0

		const r = this.r, g = this.g, b = this.b;

		const max = Math.max( r, g, b );
		const min = Math.min( r, g, b );

		let hue, saturation;
		const lightness = ( min + max ) / 2.0;

		if ( min === max ) {

			hue = 0;
			saturation = 0;

		} else {

			const delta = max - min;

			saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );

			switch ( max ) {

				case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
				case g: hue = ( b - r ) / delta + 2; break;
				case b: hue = ( r - g ) / delta + 4; break;

			}

			hue /= 6;

		}

		target.h = hue;
		target.s = saturation;
		target.l = lightness;

		return target;

	}

	getStyle() {

		return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';

	}

	offsetHSL( h, s, l ) {

		this.getHSL( _hslA );

		_hslA.h += h; _hslA.s += s; _hslA.l += l;

		this.setHSL( _hslA.h, _hslA.s, _hslA.l );

		return this;

	}

	add( color ) {

		this.r += color.r;
		this.g += color.g;
		this.b += color.b;

		return this;

	}

	addColors( color1, color2 ) {

		this.r = color1.r + color2.r;
		this.g = color1.g + color2.g;
		this.b = color1.b + color2.b;

		return this;

	}

	addScalar( s ) {

		this.r += s;
		this.g += s;
		this.b += s;

		return this;

	}

	sub( color ) {

		this.r = Math.max( 0, this.r - color.r );
		this.g = Math.max( 0, this.g - color.g );
		this.b = Math.max( 0, this.b - color.b );

		return this;

	}

	multiply( color ) {

		this.r *= color.r;
		this.g *= color.g;
		this.b *= color.b;

		return this;

	}

	multiplyScalar( s ) {

		this.r *= s;
		this.g *= s;
		this.b *= s;

		return this;

	}

	lerp( color, alpha ) {

		this.r += ( color.r - this.r ) * alpha;
		this.g += ( color.g - this.g ) * alpha;
		this.b += ( color.b - this.b ) * alpha;

		return this;

	}

	lerpColors( color1, color2, alpha ) {

		this.r = color1.r + ( color2.r - color1.r ) * alpha;
		this.g = color1.g + ( color2.g - color1.g ) * alpha;
		this.b = color1.b + ( color2.b - color1.b ) * alpha;

		return this;

	}

	lerpHSL( color, alpha ) {

		this.getHSL( _hslA );
		color.getHSL( _hslB );

		const h = lerp( _hslA.h, _hslB.h, alpha );
		const s = lerp( _hslA.s, _hslB.s, alpha );
		const l = lerp( _hslA.l, _hslB.l, alpha );

		this.setHSL( h, s, l );

		return this;

	}

	equals( c ) {

		return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );

	}

	fromArray( array, offset = 0 ) {

		this.r = array[ offset ];
		this.g = array[ offset + 1 ];
		this.b = array[ offset + 2 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.r;
		array[ offset + 1 ] = this.g;
		array[ offset + 2 ] = this.b;

		return array;

	}

	fromBufferAttribute( attribute, index ) {

		this.r = attribute.getX( index );
		this.g = attribute.getY( index );
		this.b = attribute.getZ( index );

		if ( attribute.normalized === true ) {

			// assuming Uint8Array

			this.r /= 255;
			this.g /= 255;
			this.b /= 255;

		}

		return this;

	}

	toJSON() {

		return this.getHex();

	}

}

Color.NAMES = _colorKeywords;

Color.prototype.isColor = true;
Color.prototype.r = 1;
Color.prototype.g = 1;
Color.prototype.b = 1;

let _canvas;

class ImageUtils {

	static getDataURL( image ) {

		if ( /^data:/i.test( image.src ) ) {

			return image.src;

		}

		if ( typeof HTMLCanvasElement == 'undefined' ) {

			return image.src;

		}

		let canvas;

		if ( image instanceof HTMLCanvasElement ) {

			canvas = image;

		} else {

			if ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );

			_canvas.width = image.width;
			_canvas.height = image.height;

			const context = _canvas.getContext( '2d' );

			if ( image instanceof ImageData ) {

				context.putImageData( image, 0, 0 );

			} else {

				context.drawImage( image, 0, 0, image.width, image.height );

			}

			canvas = _canvas;

		}

		if ( canvas.width > 2048 || canvas.height > 2048 ) {

			console.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );

			return canvas.toDataURL( 'image/jpeg', 0.6 );

		} else {

			return canvas.toDataURL( 'image/png' );

		}

	}

	static sRGBToLinear( image ) {

		if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
			( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
			( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

			const canvas = createElementNS( 'canvas' );

			canvas.width = image.width;
			canvas.height = image.height;

			const context = canvas.getContext( '2d' );
			context.drawImage( image, 0, 0, image.width, image.height );

			const imageData = context.getImageData( 0, 0, image.width, image.height );
			const data = imageData.data;

			for ( let i = 0; i < data.length; i ++ ) {

				data[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;

			}

			context.putImageData( imageData, 0, 0 );

			return canvas;

		} else if ( image.data ) {

			const data = image.data.slice( 0 );

			for ( let i = 0; i < data.length; i ++ ) {

				if ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {

					data[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );

				} else {

					// assuming float

					data[ i ] = SRGBToLinear( data[ i ] );

				}

			}

			return {
				data: data,
				width: image.width,
				height: image.height
			};

		} else {

			console.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );
			return image;

		}

	}

}

class Source {

	constructor( data = null ) {

		this.uuid = generateUUID();

		this.data = data;

		this.version = 0;

	}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

	toJSON( meta ) {

		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		if ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {

			return meta.images[ this.uuid ];

		}

		const output = {
			uuid: this.uuid,
			url: ''
		};

		const data = this.data;

		if ( data !== null ) {

			let url;

			if ( Array.isArray( data ) ) {

				// cube texture

				url = [];

				for ( let i = 0, l = data.length; i < l; i ++ ) {

					if ( data[ i ].isDataTexture ) {

						url.push( serializeImage( data[ i ].image ) );

					} else {

						url.push( serializeImage( data[ i ] ) );

					}

				}

			} else {

				// texture

				url = serializeImage( data );

			}

			output.url = url;

		}

		if ( ! isRootObject ) {

			meta.images[ this.uuid ] = output;

		}

		return output;

	}

}

function serializeImage( image ) {

	if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
		( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
		( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

		// default images

		return ImageUtils.getDataURL( image );

	} else {

		if ( image.data ) {

			// images of DataTexture

			return {
				data: Array.prototype.slice.call( image.data ),
				width: image.width,
				height: image.height,
				type: image.data.constructor.name
			};

		} else {

			console.warn( 'THREE.Texture: Unable to serialize Texture.' );
			return {};

		}

	}

}

Source.prototype.isSource = true;

let textureId = 0;

class Texture extends EventDispatcher {

	constructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {

		super();

		Object.defineProperty( this, 'id', { value: textureId ++ } );

		this.uuid = generateUUID();

		this.name = '';

		this.source = new Source( image );
		this.mipmaps = [];

		this.mapping = mapping;

		this.wrapS = wrapS;
		this.wrapT = wrapT;

		this.magFilter = magFilter;
		this.minFilter = minFilter;

		this.anisotropy = anisotropy;

		this.format = format;
		this.internalFormat = null;
		this.type = type;

		this.offset = new Vector2( 0, 0 );
		this.repeat = new Vector2( 1, 1 );
		this.center = new Vector2( 0, 0 );
		this.rotation = 0;

		this.matrixAutoUpdate = true;
		this.matrix = new Matrix3();

		this.generateMipmaps = true;
		this.premultiplyAlpha = false;
		this.flipY = true;
		this.unpackAlignment = 4;	// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)

		// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
		//
		// Also changing the encoding after already used by a Material will not automatically make the Material
		// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
		this.encoding = encoding;

		this.userData = {};

		this.version = 0;
		this.onUpdate = null;

		this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not
		this.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)

	}

	get image() {

		return this.source.data;

	}

	set image( value ) {

		this.source.data = value;

	}

	updateMatrix() {

		this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.name = source.name;

		this.source = source.source;
		this.mipmaps = source.mipmaps.slice( 0 );

		this.mapping = source.mapping;

		this.wrapS = source.wrapS;
		this.wrapT = source.wrapT;

		this.magFilter = source.magFilter;
		this.minFilter = source.minFilter;

		this.anisotropy = source.anisotropy;

		this.format = source.format;
		this.internalFormat = source.internalFormat;
		this.type = source.type;

		this.offset.copy( source.offset );
		this.repeat.copy( source.repeat );
		this.center.copy( source.center );
		this.rotation = source.rotation;

		this.matrixAutoUpdate = source.matrixAutoUpdate;
		this.matrix.copy( source.matrix );

		this.generateMipmaps = source.generateMipmaps;
		this.premultiplyAlpha = source.premultiplyAlpha;
		this.flipY = source.flipY;
		this.unpackAlignment = source.unpackAlignment;
		this.encoding = source.encoding;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		return this;

	}

	toJSON( meta ) {

		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {

			return meta.textures[ this.uuid ];

		}

		const output = {

			metadata: {
				version: 4.5,
				type: 'Texture',
				generator: 'Texture.toJSON'
			},

			uuid: this.uuid,
			name: this.name,

			image: this.source.toJSON( meta ).uuid,

			mapping: this.mapping,

			repeat: [ this.repeat.x, this.repeat.y ],
			offset: [ this.offset.x, this.offset.y ],
			center: [ this.center.x, this.center.y ],
			rotation: this.rotation,

			wrap: [ this.wrapS, this.wrapT ],

			format: this.format,
			type: this.type,
			encoding: this.encoding,

			minFilter: this.minFilter,
			magFilter: this.magFilter,
			anisotropy: this.anisotropy,

			flipY: this.flipY,

			premultiplyAlpha: this.premultiplyAlpha,
			unpackAlignment: this.unpackAlignment

		};

		if ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;

		if ( ! isRootObject ) {

			meta.textures[ this.uuid ] = output;

		}

		return output;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

	transformUv( uv ) {

		if ( this.mapping !== UVMapping ) return uv;

		uv.applyMatrix3( this.matrix );

		if ( uv.x < 0 || uv.x > 1 ) {

			switch ( this.wrapS ) {

				case RepeatWrapping:

					uv.x = uv.x - Math.floor( uv.x );
					break;

				case ClampToEdgeWrapping:

					uv.x = uv.x < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {

						uv.x = Math.ceil( uv.x ) - uv.x;

					} else {

						uv.x = uv.x - Math.floor( uv.x );

					}

					break;

			}

		}

		if ( uv.y < 0 || uv.y > 1 ) {

			switch ( this.wrapT ) {

				case RepeatWrapping:

					uv.y = uv.y - Math.floor( uv.y );
					break;

				case ClampToEdgeWrapping:

					uv.y = uv.y < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {

						uv.y = Math.ceil( uv.y ) - uv.y;

					} else {

						uv.y = uv.y - Math.floor( uv.y );

					}

					break;

			}

		}

		if ( this.flipY ) {

			uv.y = 1 - uv.y;

		}

		return uv;

	}

	set needsUpdate( value ) {

		if ( value === true ) {

			this.version ++;
			this.source.needsUpdate = true;

		}

	}

}

Texture.DEFAULT_IMAGE = null;
Texture.DEFAULT_MAPPING = UVMapping;

Texture.prototype.isTexture = true;

class Vector4 {

	constructor( x = 0, y = 0, z = 0, w = 1 ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

	}

	get width() {

		return this.z;

	}

	set width( value ) {

		this.z = value;

	}

	get height() {

		return this.w;

	}

	set height( value ) {

		this.w = value;

	}

	set( x, y, z, w ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;
		this.w = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setZ( z ) {

		this.z = z;

		return this;

	}

	setW( w ) {

		this.w = w;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			case 3: this.w = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			case 3: return this.w;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y, this.z, this.w );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = ( v.w !== undefined ) ? v.w : 1;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		this.w += v.w;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;
		this.z += s;
		this.w += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		this.w = a.w + b.w;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;
		this.w += v.w * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		this.w -= v.w;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;
		this.w -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		this.w = a.w - b.w;

		return this;

	}

	multiply( v ) {

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;
		this.w *= v.w;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;
		this.w *= scalar;

		return this;

	}

	applyMatrix4( m ) {

		const x = this.x, y = this.y, z = this.z, w = this.w;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;
		this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	setAxisAngleFromQuaternion( q ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm

		// q is assumed to be normalized

		this.w = 2 * Math.acos( q.w );

		const s = Math.sqrt( 1 - q.w * q.w );

		if ( s < 0.0001 ) {

			this.x = 1;
			this.y = 0;
			this.z = 0;

		} else {

			this.x = q.x / s;
			this.y = q.y / s;
			this.z = q.z / s;

		}

		return this;

	}

	setAxisAngleFromRotationMatrix( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		let angle, x, y, z; // variables for result
		const epsilon = 0.01,		// margin to allow for rounding errors
			epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees

			te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		if ( ( Math.abs( m12 - m21 ) < epsilon ) &&
		     ( Math.abs( m13 - m31 ) < epsilon ) &&
		     ( Math.abs( m23 - m32 ) < epsilon ) ) {

			// singularity found
			// first check for identity matrix which must have +1 for all terms
			// in leading diagonal and zero in other terms

			if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&
			     ( Math.abs( m13 + m31 ) < epsilon2 ) &&
			     ( Math.abs( m23 + m32 ) < epsilon2 ) &&
			     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {

				// this singularity is identity matrix so angle = 0

				this.set( 1, 0, 0, 0 );

				return this; // zero angle, arbitrary axis

			}

			// otherwise this singularity is angle = 180

			angle = Math.PI;

			const xx = ( m11 + 1 ) / 2;
			const yy = ( m22 + 1 ) / 2;
			const zz = ( m33 + 1 ) / 2;
			const xy = ( m12 + m21 ) / 4;
			const xz = ( m13 + m31 ) / 4;
			const yz = ( m23 + m32 ) / 4;

			if ( ( xx > yy ) && ( xx > zz ) ) {

				// m11 is the largest diagonal term

				if ( xx < epsilon ) {

					x = 0;
					y = 0.707106781;
					z = 0.707106781;

				} else {

					x = Math.sqrt( xx );
					y = xy / x;
					z = xz / x;

				}

			} else if ( yy > zz ) {

				// m22 is the largest diagonal term

				if ( yy < epsilon ) {

					x = 0.707106781;
					y = 0;
					z = 0.707106781;

				} else {

					y = Math.sqrt( yy );
					x = xy / y;
					z = yz / y;

				}

			} else {

				// m33 is the largest diagonal term so base result on this

				if ( zz < epsilon ) {

					x = 0.707106781;
					y = 0.707106781;
					z = 0;

				} else {

					z = Math.sqrt( zz );
					x = xz / z;
					y = yz / z;

				}

			}

			this.set( x, y, z, angle );

			return this; // return 180 deg rotation

		}

		// as we have reached here there are no singularities so we can handle normally

		let s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +
			( m13 - m31 ) * ( m13 - m31 ) +
			( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize

		if ( Math.abs( s ) < 0.001 ) s = 1;

		// prevent divide by zero, should not happen if matrix is orthogonal and should be
		// caught by singularity test above, but I've left it in just in case

		this.x = ( m32 - m23 ) / s;
		this.y = ( m13 - m31 ) / s;
		this.z = ( m21 - m12 ) / s;
		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );

		return this;

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );
		this.w = Math.min( this.w, v.w );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );
		this.w = Math.max( this.w, v.w );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );
		this.w = Math.max( min.w, Math.min( max.w, this.w ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
		this.z = Math.max( minVal, Math.min( maxVal, this.z ) );
		this.w = Math.max( minVal, Math.min( maxVal, this.w ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );
		this.w = Math.floor( this.w );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );
		this.w = Math.ceil( this.w );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );
		this.w = Math.round( this.w );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
		this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;
		this.w = - this.w;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;

	}

	lengthSq() {

		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;
		this.w += ( v.w - this.w ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;
		this.z = v1.z + ( v2.z - v1.z ) * alpha;
		this.w = v1.w + ( v2.w - v1.w ) * alpha;

		return this;

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];
		this.w = array[ offset + 3 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;
		array[ offset + 3 ] = this.w;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );
		this.w = attribute.getW( index );

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();
		this.z = Math.random();
		this.w = Math.random();

		return this;

	}

	*[ Symbol.iterator ]() {

		yield this.x;
		yield this.y;
		yield this.z;
		yield this.w;

	}

}

Vector4.prototype.isVector4 = true;

/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/
class WebGLRenderTarget extends EventDispatcher {

	constructor( width, height, options = {} ) {

		super();

		this.width = width;
		this.height = height;
		this.depth = 1;

		this.scissor = new Vector4( 0, 0, width, height );
		this.scissorTest = false;

		this.viewport = new Vector4( 0, 0, width, height );

		const image = { width: width, height: height, depth: 1 };

		this.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );
		this.texture.isRenderTargetTexture = true;

		this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;
		this.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;
		this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;

		this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
		this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;

		this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;

		this.samples = options.samples !== undefined ? options.samples : 0;

	}

	setSize( width, height, depth = 1 ) {

		if ( this.width !== width || this.height !== height || this.depth !== depth ) {

			this.width = width;
			this.height = height;
			this.depth = depth;

			this.texture.image.width = width;
			this.texture.image.height = height;
			this.texture.image.depth = depth;

			this.dispose();

		}

		this.viewport.set( 0, 0, width, height );
		this.scissor.set( 0, 0, width, height );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.width = source.width;
		this.height = source.height;
		this.depth = source.depth;

		this.viewport.copy( source.viewport );

		this.texture = source.texture.clone();

		// ensure image object is not shared, see #20328

		this.texture.image = Object.assign( {}, source.texture.image );

		this.depthBuffer = source.depthBuffer;
		this.stencilBuffer = source.stencilBuffer;

		if ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();

		this.samples = source.samples;

		return this;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

}

WebGLRenderTarget.prototype.isWebGLRenderTarget = true;

class DataArrayTexture extends Texture {

	constructor( data = null, width = 1, height = 1, depth = 1 ) {

		super( null );

		this.image = { data, width, height, depth };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;
		this.unpackAlignment = 1;

	}

}

DataArrayTexture.prototype.isDataArrayTexture = true;

class WebGLArrayRenderTarget extends WebGLRenderTarget {

	constructor( width, height, depth ) {

		super( width, height );

		this.depth = depth;

		this.texture = new DataArrayTexture( null, width, height, depth );

		this.texture.isRenderTargetTexture = true;

	}

}

WebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;

class Data3DTexture extends Texture {

	constructor( data = null, width = 1, height = 1, depth = 1 ) {

		// We're going to add .setXXX() methods for setting properties later.
		// Users can still set in DataTexture3D directly.
		//
		//	const texture = new THREE.DataTexture3D( data, width, height, depth );
		// 	texture.anisotropy = 16;
		//
		// See #14839

		super( null );

		this.image = { data, width, height, depth };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;
		this.unpackAlignment = 1;

	}

}

Data3DTexture.prototype.isData3DTexture = true;

class WebGL3DRenderTarget extends WebGLRenderTarget {

	constructor( width, height, depth ) {

		super( width, height );

		this.depth = depth;

		this.texture = new Data3DTexture( null, width, height, depth );

		this.texture.isRenderTargetTexture = true;

	}

}

WebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;

class WebGLMultipleRenderTargets extends WebGLRenderTarget {

	constructor( width, height, count, options = {} ) {

		super( width, height, options );

		const texture = this.texture;

		this.texture = [];

		for ( let i = 0; i < count; i ++ ) {

			this.texture[ i ] = texture.clone();

		}

	}

	setSize( width, height, depth = 1 ) {

		if ( this.width !== width || this.height !== height || this.depth !== depth ) {

			this.width = width;
			this.height = height;
			this.depth = depth;

			for ( let i = 0, il = this.texture.length; i < il; i ++ ) {

				this.texture[ i ].image.width = width;
				this.texture[ i ].image.height = height;
				this.texture[ i ].image.depth = depth;

			}

			this.dispose();

		}

		this.viewport.set( 0, 0, width, height );
		this.scissor.set( 0, 0, width, height );

		return this;

	}

	copy( source ) {

		this.dispose();

		this.width = source.width;
		this.height = source.height;
		this.depth = source.depth;

		this.viewport.set( 0, 0, this.width, this.height );
		this.scissor.set( 0, 0, this.width, this.height );

		this.depthBuffer = source.depthBuffer;
		this.stencilBuffer = source.stencilBuffer;
		this.depthTexture = source.depthTexture;

		this.texture.length = 0;

		for ( let i = 0, il = source.texture.length; i < il; i ++ ) {

			this.texture[ i ] = source.texture[ i ].clone();

		}

		return this;

	}

}

WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;

class Quaternion {

	constructor( x = 0, y = 0, z = 0, w = 1 ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._w = w;

	}

	static slerp( qa, qb, qm, t ) {

		console.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );
		return qm.slerpQuaternions( qa, qb, t );

	}

	static slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {

		// fuzz-free, array-based Quaternion SLERP operation

		let x0 = src0[ srcOffset0 + 0 ],
			y0 = src0[ srcOffset0 + 1 ],
			z0 = src0[ srcOffset0 + 2 ],
			w0 = src0[ srcOffset0 + 3 ];

		const x1 = src1[ srcOffset1 + 0 ],
			y1 = src1[ srcOffset1 + 1 ],
			z1 = src1[ srcOffset1 + 2 ],
			w1 = src1[ srcOffset1 + 3 ];

		if ( t === 0 ) {

			dst[ dstOffset + 0 ] = x0;
			dst[ dstOffset + 1 ] = y0;
			dst[ dstOffset + 2 ] = z0;
			dst[ dstOffset + 3 ] = w0;
			return;

		}

		if ( t === 1 ) {

			dst[ dstOffset + 0 ] = x1;
			dst[ dstOffset + 1 ] = y1;
			dst[ dstOffset + 2 ] = z1;
			dst[ dstOffset + 3 ] = w1;
			return;

		}

		if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {

			let s = 1 - t;
			const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,
				dir = ( cos >= 0 ? 1 : - 1 ),
				sqrSin = 1 - cos * cos;

			// Skip the Slerp for tiny steps to avoid numeric problems:
			if ( sqrSin > Number.EPSILON ) {

				const sin = Math.sqrt( sqrSin ),
					len = Math.atan2( sin, cos * dir );

				s = Math.sin( s * len ) / sin;
				t = Math.sin( t * len ) / sin;

			}

			const tDir = t * dir;

			x0 = x0 * s + x1 * tDir;
			y0 = y0 * s + y1 * tDir;
			z0 = z0 * s + z1 * tDir;
			w0 = w0 * s + w1 * tDir;

			// Normalize in case we just did a lerp:
			if ( s === 1 - t ) {

				const f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );

				x0 *= f;
				y0 *= f;
				z0 *= f;
				w0 *= f;

			}

		}

		dst[ dstOffset ] = x0;
		dst[ dstOffset + 1 ] = y0;
		dst[ dstOffset + 2 ] = z0;
		dst[ dstOffset + 3 ] = w0;

	}

	static multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {

		const x0 = src0[ srcOffset0 ];
		const y0 = src0[ srcOffset0 + 1 ];
		const z0 = src0[ srcOffset0 + 2 ];
		const w0 = src0[ srcOffset0 + 3 ];

		const x1 = src1[ srcOffset1 ];
		const y1 = src1[ srcOffset1 + 1 ];
		const z1 = src1[ srcOffset1 + 2 ];
		const w1 = src1[ srcOffset1 + 3 ];

		dst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;
		dst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;
		dst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;
		dst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;

		return dst;

	}

	get x() {

		return this._x;

	}

	set x( value ) {

		this._x = value;
		this._onChangeCallback();

	}

	get y() {

		return this._y;

	}

	set y( value ) {

		this._y = value;
		this._onChangeCallback();

	}

	get z() {

		return this._z;

	}

	set z( value ) {

		this._z = value;
		this._onChangeCallback();

	}

	get w() {

		return this._w;

	}

	set w( value ) {

		this._w = value;
		this._onChangeCallback();

	}

	set( x, y, z, w ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._w = w;

		this._onChangeCallback();

		return this;

	}

	clone() {

		return new this.constructor( this._x, this._y, this._z, this._w );

	}

	copy( quaternion ) {

		this._x = quaternion.x;
		this._y = quaternion.y;
		this._z = quaternion.z;
		this._w = quaternion.w;

		this._onChangeCallback();

		return this;

	}

	setFromEuler( euler, update ) {

		if ( ! ( euler && euler.isEuler ) ) {

			throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );

		}

		const x = euler._x, y = euler._y, z = euler._z, order = euler._order;

		// http://www.mathworks.com/matlabcentral/fileexchange/
		// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
		//	content/SpinCalc.m

		const cos = Math.cos;
		const sin = Math.sin;

		const c1 = cos( x / 2 );
		const c2 = cos( y / 2 );
		const c3 = cos( z / 2 );

		const s1 = sin( x / 2 );
		const s2 = sin( y / 2 );
		const s3 = sin( z / 2 );

		switch ( order ) {

			case 'XYZ':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'YXZ':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			case 'ZXY':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'ZYX':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			case 'YZX':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'XZY':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			default:
				console.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );

		}

		if ( update !== false ) this._onChangeCallback();

		return this;

	}

	setFromAxisAngle( axis, angle ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm

		// assumes axis is normalized

		const halfAngle = angle / 2, s = Math.sin( halfAngle );

		this._x = axis.x * s;
		this._y = axis.y * s;
		this._z = axis.z * s;
		this._w = Math.cos( halfAngle );

		this._onChangeCallback();

		return this;

	}

	setFromRotationMatrix( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		const te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],

			trace = m11 + m22 + m33;

		if ( trace > 0 ) {

			const s = 0.5 / Math.sqrt( trace + 1.0 );

			this._w = 0.25 / s;
			this._x = ( m32 - m23 ) * s;
			this._y = ( m13 - m31 ) * s;
			this._z = ( m21 - m12 ) * s;

		} else if ( m11 > m22 && m11 > m33 ) {

			const s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );

			this._w = ( m32 - m23 ) / s;
			this._x = 0.25 * s;
			this._y = ( m12 + m21 ) / s;
			this._z = ( m13 + m31 ) / s;

		} else if ( m22 > m33 ) {

			const s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );

			this._w = ( m13 - m31 ) / s;
			this._x = ( m12 + m21 ) / s;
			this._y = 0.25 * s;
			this._z = ( m23 + m32 ) / s;

		} else {

			const s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );

			this._w = ( m21 - m12 ) / s;
			this._x = ( m13 + m31 ) / s;
			this._y = ( m23 + m32 ) / s;
			this._z = 0.25 * s;

		}

		this._onChangeCallback();

		return this;

	}

	setFromUnitVectors( vFrom, vTo ) {

		// assumes direction vectors vFrom and vTo are normalized

		let r = vFrom.dot( vTo ) + 1;

		if ( r < Number.EPSILON ) {

			// vFrom and vTo point in opposite directions

			r = 0;

			if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {

				this._x = - vFrom.y;
				this._y = vFrom.x;
				this._z = 0;
				this._w = r;

			} else {

				this._x = 0;
				this._y = - vFrom.z;
				this._z = vFrom.y;
				this._w = r;

			}

		} else {

			// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3

			this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
			this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
			this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
			this._w = r;

		}

		return this.normalize();

	}

	angleTo( q ) {

		return 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );

	}

	rotateTowards( q, step ) {

		const angle = this.angleTo( q );

		if ( angle === 0 ) return this;

		const t = Math.min( 1, step / angle );

		this.slerp( q, t );

		return this;

	}

	identity() {

		return this.set( 0, 0, 0, 1 );

	}

	invert() {

		// quaternion is assumed to have unit length

		return this.conjugate();

	}

	conjugate() {

		this._x *= - 1;
		this._y *= - 1;
		this._z *= - 1;

		this._onChangeCallback();

		return this;

	}

	dot( v ) {

		return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;

	}

	lengthSq() {

		return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;

	}

	length() {

		return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );

	}

	normalize() {

		let l = this.length();

		if ( l === 0 ) {

			this._x = 0;
			this._y = 0;
			this._z = 0;
			this._w = 1;

		} else {

			l = 1 / l;

			this._x = this._x * l;
			this._y = this._y * l;
			this._z = this._z * l;
			this._w = this._w * l;

		}

		this._onChangeCallback();

		return this;

	}

	multiply( q, p ) {

		if ( p !== undefined ) {

			console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
			return this.multiplyQuaternions( q, p );

		}

		return this.multiplyQuaternions( this, q );

	}

	premultiply( q ) {

		return this.multiplyQuaternions( q, this );

	}

	multiplyQuaternions( a, b ) {

		// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm

		const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
		const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;

		this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;

		this._onChangeCallback();

		return this;

	}

	slerp( qb, t ) {

		if ( t === 0 ) return this;
		if ( t === 1 ) return this.copy( qb );

		const x = this._x, y = this._y, z = this._z, w = this._w;

		// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/

		let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;

		if ( cosHalfTheta < 0 ) {

			this._w = - qb._w;
			this._x = - qb._x;
			this._y = - qb._y;
			this._z = - qb._z;

			cosHalfTheta = - cosHalfTheta;

		} else {

			this.copy( qb );

		}

		if ( cosHalfTheta >= 1.0 ) {

			this._w = w;
			this._x = x;
			this._y = y;
			this._z = z;

			return this;

		}

		const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;

		if ( sqrSinHalfTheta <= Number.EPSILON ) {

			const s = 1 - t;
			this._w = s * w + t * this._w;
			this._x = s * x + t * this._x;
			this._y = s * y + t * this._y;
			this._z = s * z + t * this._z;

			this.normalize();
			this._onChangeCallback();

			return this;

		}

		const sinHalfTheta = Math.sqrt( sqrSinHalfTheta );
		const halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );
		const ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
			ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;

		this._w = ( w * ratioA + this._w * ratioB );
		this._x = ( x * ratioA + this._x * ratioB );
		this._y = ( y * ratioA + this._y * ratioB );
		this._z = ( z * ratioA + this._z * ratioB );

		this._onChangeCallback();

		return this;

	}

	slerpQuaternions( qa, qb, t ) {

		return this.copy( qa ).slerp( qb, t );

	}

	random() {

		// Derived from http://planning.cs.uiuc.edu/node198.html
		// Note, this source uses w, x, y, z ordering,
		// so we swap the order below.

		const u1 = Math.random();
		const sqrt1u1 = Math.sqrt( 1 - u1 );
		const sqrtu1 = Math.sqrt( u1 );

		const u2 = 2 * Math.PI * Math.random();

		const u3 = 2 * Math.PI * Math.random();

		return this.set(
			sqrt1u1 * Math.cos( u2 ),
			sqrtu1 * Math.sin( u3 ),
			sqrtu1 * Math.cos( u3 ),
			sqrt1u1 * Math.sin( u2 ),
		);

	}

	equals( quaternion ) {

		return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );

	}

	fromArray( array, offset = 0 ) {

		this._x = array[ offset ];
		this._y = array[ offset + 1 ];
		this._z = array[ offset + 2 ];
		this._w = array[ offset + 3 ];

		this._onChangeCallback();

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._w;

		return array;

	}

	fromBufferAttribute( attribute, index ) {

		this._x = attribute.getX( index );
		this._y = attribute.getY( index );
		this._z = attribute.getZ( index );
		this._w = attribute.getW( index );

		return this;

	}

	_onChange( callback ) {

		this._onChangeCallback = callback;

		return this;

	}

	_onChangeCallback() {}

}

Quaternion.prototype.isQuaternion = true;

class Vector3 {

	constructor( x = 0, y = 0, z = 0 ) {

		this.x = x;
		this.y = y;
		this.z = z;

	}

	set( x, y, z ) {

		if ( z === undefined ) z = this.z; // sprite.scale.set(x,y)

		this.x = x;
		this.y = y;
		this.z = z;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setZ( z ) {

		this.z = z;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y, this.z );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;
		this.z += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;

		return this;

	}

	multiply( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
			return this.multiplyVectors( v, w );

		}

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;

		return this;

	}

	multiplyVectors( a, b ) {

		this.x = a.x * b.x;
		this.y = a.y * b.y;
		this.z = a.z * b.z;

		return this;

	}

	applyEuler( euler ) {

		if ( ! ( euler && euler.isEuler ) ) {

			console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );

		}

		return this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );

	}

	applyAxisAngle( axis, angle ) {

		return this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );

	}

	applyMatrix3( m ) {

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;
		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;
		this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;

		return this;

	}

	applyNormalMatrix( m ) {

		return this.applyMatrix3( m ).normalize();

	}

	applyMatrix4( m ) {

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		const w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );

		this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;
		this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;
		this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;

		return this;

	}

	applyQuaternion( q ) {

		const x = this.x, y = this.y, z = this.z;
		const qx = q.x, qy = q.y, qz = q.z, qw = q.w;

		// calculate quat * vector

		const ix = qw * x + qy * z - qz * y;
		const iy = qw * y + qz * x - qx * z;
		const iz = qw * z + qx * y - qy * x;
		const iw = - qx * x - qy * y - qz * z;

		// calculate result * inverse quat

		this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
		this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
		this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;

		return this;

	}

	project( camera ) {

		return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );

	}

	unproject( camera ) {

		return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );

	}

	transformDirection( m ) {

		// input: THREE.Matrix4 affine matrix
		// vector interpreted as a direction

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;

		return this.normalize();

	}

	divide( v ) {

		this.x /= v.x;
		this.y /= v.y;
		this.z /= v.z;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
		this.z = Math.max( minVal, Math.min( maxVal, this.z ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z;

	}

	// TODO lengthSquared?

	lengthSq() {

		return this.x * this.x + this.y * this.y + this.z * this.z;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;
		this.z = v1.z + ( v2.z - v1.z ) * alpha;

		return this;

	}

	cross( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
			return this.crossVectors( v, w );

		}

		return this.crossVectors( this, v );

	}

	crossVectors( a, b ) {

		const ax = a.x, ay = a.y, az = a.z;
		const bx = b.x, by = b.y, bz = b.z;

		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;

		return this;

	}

	projectOnVector( v ) {

		const denominator = v.lengthSq();

		if ( denominator === 0 ) return this.set( 0, 0, 0 );

		const scalar = v.dot( this ) / denominator;

		return this.copy( v ).multiplyScalar( scalar );

	}

	projectOnPlane( planeNormal ) {

		_vector$c.copy( this ).projectOnVector( planeNormal );

		return this.sub( _vector$c );

	}

	reflect( normal ) {

		// reflect incident vector off plane orthogonal to normal
		// normal is assumed to have unit length

		return this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );

	}

	angleTo( v ) {

		const denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );

		if ( denominator === 0 ) return Math.PI / 2;

		const theta = this.dot( v ) / denominator;

		// clamp, to handle numerical problems

		return Math.acos( clamp( theta, - 1, 1 ) );

	}

	distanceTo( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	}

	distanceToSquared( v ) {

		const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;

		return dx * dx + dy * dy + dz * dz;

	}

	manhattanDistanceTo( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );

	}

	setFromSpherical( s ) {

		return this.setFromSphericalCoords( s.radius, s.phi, s.theta );

	}

	setFromSphericalCoords( radius, phi, theta ) {

		const sinPhiRadius = Math.sin( phi ) * radius;

		this.x = sinPhiRadius * Math.sin( theta );
		this.y = Math.cos( phi ) * radius;
		this.z = sinPhiRadius * Math.cos( theta );

		return this;

	}

	setFromCylindrical( c ) {

		return this.setFromCylindricalCoords( c.radius, c.theta, c.y );

	}

	setFromCylindricalCoords( radius, theta, y ) {

		this.x = radius * Math.sin( theta );
		this.y = y;
		this.z = radius * Math.cos( theta );

		return this;

	}

	setFromMatrixPosition( m ) {

		const e = m.elements;

		this.x = e[ 12 ];
		this.y = e[ 13 ];
		this.z = e[ 14 ];

		return this;

	}

	setFromMatrixScale( m ) {

		const sx = this.setFromMatrixColumn( m, 0 ).length();
		const sy = this.setFromMatrixColumn( m, 1 ).length();
		const sz = this.setFromMatrixColumn( m, 2 ).length();

		this.x = sx;
		this.y = sy;
		this.z = sz;

		return this;

	}

	setFromMatrixColumn( m, index ) {

		return this.fromArray( m.elements, index * 4 );

	}

	setFromMatrix3Column( m, index ) {

		return this.fromArray( m.elements, index * 3 );

	}

	setFromEuler( e ) {

		this.x = e._x;
		this.y = e._y;
		this.z = e._z;

		return this;

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();
		this.z = Math.random();

		return this;

	}

	randomDirection() {

		// Derived from https://mathworld.wolfram.com/SpherePointPicking.html

		const u = ( Math.random() - 0.5 ) * 2;
		const t = Math.random() * Math.PI * 2;
		const f = Math.sqrt( 1 - u ** 2 );

		this.x = f * Math.cos( t );
		this.y = f * Math.sin( t );
		this.z = u;

		return this;

	}

	*[ Symbol.iterator ]() {

		yield this.x;
		yield this.y;
		yield this.z;

	}

}

Vector3.prototype.isVector3 = true;

const _vector$c = /*@__PURE__*/ new Vector3();
const _quaternion$4 = /*@__PURE__*/ new Quaternion();

class Box3 {

	constructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {

		this.min = min;
		this.max = max;

	}

	set( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	}

	setFromArray( array ) {

		let minX = + Infinity;
		let minY = + Infinity;
		let minZ = + Infinity;

		let maxX = - Infinity;
		let maxY = - Infinity;
		let maxZ = - Infinity;

		for ( let i = 0, l = array.length; i < l; i += 3 ) {

			const x = array[ i ];
			const y = array[ i + 1 ];
			const z = array[ i + 2 ];

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	}

	setFromBufferAttribute( attribute ) {

		let minX = + Infinity;
		let minY = + Infinity;
		let minZ = + Infinity;

		let maxX = - Infinity;
		let maxY = - Infinity;
		let maxZ = - Infinity;

		for ( let i = 0, l = attribute.count; i < l; i ++ ) {

			const x = attribute.getX( i );
			const y = attribute.getY( i );
			const z = attribute.getZ( i );

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	}

	setFromPoints( points ) {

		this.makeEmpty();

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	}

	setFromCenterAndSize( center, size ) {

		const halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );

		this.min.copy( center ).sub( halfSize );
		this.max.copy( center ).add( halfSize );

		return this;

	}

	setFromObject( object, precise = false ) {

		this.makeEmpty();

		return this.expandByObject( object, precise );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	}

	makeEmpty() {

		this.min.x = this.min.y = this.min.z = + Infinity;
		this.max.x = this.max.y = this.max.z = - Infinity;

		return this;

	}

	isEmpty() {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );

	}

	getCenter( target ) {

		return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	}

	getSize( target ) {

		return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );

	}

	expandByPoint( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	}

	expandByVector( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	}

	expandByScalar( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	}

	expandByObject( object, precise = false ) {

		// Computes the world-axis-aligned bounding box of an object (including its children),
		// accounting for both the object's, and children's, world transforms

		object.updateWorldMatrix( false, false );

		const geometry = object.geometry;

		if ( geometry !== undefined ) {

			if ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {

				const position = geometry.attributes.position;
				for ( let i = 0, l = position.count; i < l; i ++ ) {

					_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );
					this.expandByPoint( _vector$b );

				}

			} else {

				if ( geometry.boundingBox === null ) {

					geometry.computeBoundingBox();

				}

				_box$3.copy( geometry.boundingBox );
				_box$3.applyMatrix4( object.matrixWorld );

				this.union( _box$3 );

			}

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			this.expandByObject( children[ i ], precise );

		}

		return this;

	}

	containsPoint( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ||
			point.z < this.min.z || point.z > this.max.z ? false : true;

	}

	containsBox( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y &&
			this.min.z <= box.min.z && box.max.z <= this.max.z;

	}

	getParameter( point, target ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		return target.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y ),
			( point.z - this.min.z ) / ( this.max.z - this.min.z )
		);

	}

	intersectsBox( box ) {

		// using 6 splitting planes to rule out intersections.
		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ||
			box.max.z < this.min.z || box.min.z > this.max.z ? false : true;

	}

	intersectsSphere( sphere ) {

		// Find the point on the AABB closest to the sphere center.
		this.clampPoint( sphere.center, _vector$b );

		// If that point is inside the sphere, the AABB and sphere intersect.
		return _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );

	}

	intersectsPlane( plane ) {

		// We compute the minimum and maximum dot product values. If those values
		// are on the same side (back or front) of the plane, then there is no intersection.

		let min, max;

		if ( plane.normal.x > 0 ) {

			min = plane.normal.x * this.min.x;
			max = plane.normal.x * this.max.x;

		} else {

			min = plane.normal.x * this.max.x;
			max = plane.normal.x * this.min.x;

		}

		if ( plane.normal.y > 0 ) {

			min += plane.normal.y * this.min.y;
			max += plane.normal.y * this.max.y;

		} else {

			min += plane.normal.y * this.max.y;
			max += plane.normal.y * this.min.y;

		}

		if ( plane.normal.z > 0 ) {

			min += plane.normal.z * this.min.z;
			max += plane.normal.z * this.max.z;

		} else {

			min += plane.normal.z * this.max.z;
			max += plane.normal.z * this.min.z;

		}

		return ( min <= - plane.constant && max >= - plane.constant );

	}

	intersectsTriangle( triangle ) {

		if ( this.isEmpty() ) {

			return false;

		}

		// compute box center and extents
		this.getCenter( _center );
		_extents.subVectors( this.max, _center );

		// translate triangle to aabb origin
		_v0$2.subVectors( triangle.a, _center );
		_v1$7.subVectors( triangle.b, _center );
		_v2$3.subVectors( triangle.c, _center );

		// compute edge vectors for triangle
		_f0.subVectors( _v1$7, _v0$2 );
		_f1.subVectors( _v2$3, _v1$7 );
		_f2.subVectors( _v0$2, _v2$3 );

		// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
		// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
		// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
		let axes = [
			0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,
			_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,
			- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0
		];
		if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {

			return false;

		}

		// test 3 face normals from the aabb
		axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];
		if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {

			return false;

		}

		// finally testing the face normal of the triangle
		// use already existing triangle edge vectors here
		_triangleNormal.crossVectors( _f0, _f1 );
		axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];

		return satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );

	}

	clampPoint( point, target ) {

		return target.copy( point ).clamp( this.min, this.max );

	}

	distanceToPoint( point ) {

		const clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );

		return clampedPoint.sub( point ).length();

	}

	getBoundingSphere( target ) {

		this.getCenter( target.center );

		target.radius = this.getSize( _vector$b ).length() * 0.5;

		return target;

	}

	intersect( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
		if ( this.isEmpty() ) this.makeEmpty();

		return this;

	}

	union( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	}

	applyMatrix4( matrix ) {

		// transform of empty box is an empty box.
		if ( this.isEmpty() ) return this;

		// NOTE: I am using a binary pattern to specify all 2^3 combinations below
		_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
		_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
		_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
		_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
		_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
		_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
		_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
		_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111

		this.setFromPoints( _points );

		return this;

	}

	translate( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	}

	equals( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

}

Box3.prototype.isBox3 = true;

const _points = [
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3()
];

const _vector$b = /*@__PURE__*/ new Vector3();

const _box$3 = /*@__PURE__*/ new Box3();

// triangle centered vertices

const _v0$2 = /*@__PURE__*/ new Vector3();
const _v1$7 = /*@__PURE__*/ new Vector3();
const _v2$3 = /*@__PURE__*/ new Vector3();

// triangle edge vectors

const _f0 = /*@__PURE__*/ new Vector3();
const _f1 = /*@__PURE__*/ new Vector3();
const _f2 = /*@__PURE__*/ new Vector3();

const _center = /*@__PURE__*/ new Vector3();
const _extents = /*@__PURE__*/ new Vector3();
const _triangleNormal = /*@__PURE__*/ new Vector3();
const _testAxis = /*@__PURE__*/ new Vector3();

function satForAxes( axes, v0, v1, v2, extents ) {

	for ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {

		_testAxis.fromArray( axes, i );
		// project the aabb onto the seperating axis
		const r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );
		// project all 3 vertices of the triangle onto the seperating axis
		const p0 = v0.dot( _testAxis );
		const p1 = v1.dot( _testAxis );
		const p2 = v2.dot( _testAxis );
		// actual test, basically see if either of the most extreme of the triangle points intersects r
		if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {

			// points of the projected triangle are outside the projected half-length of the aabb
			// the axis is seperating and we can exit
			return false;

		}

	}

	return true;

}

const _box$2 = /*@__PURE__*/ new Box3();
const _v1$6 = /*@__PURE__*/ new Vector3();
const _toFarthestPoint = /*@__PURE__*/ new Vector3();
const _toPoint = /*@__PURE__*/ new Vector3();

class Sphere {

	constructor( center = new Vector3(), radius = - 1 ) {

		this.center = center;
		this.radius = radius;

	}

	set( center, radius ) {

		this.center.copy( center );
		this.radius = radius;

		return this;

	}

	setFromPoints( points, optionalCenter ) {

		const center = this.center;

		if ( optionalCenter !== undefined ) {

			center.copy( optionalCenter );

		} else {

			_box$2.setFromPoints( points ).getCenter( center );

		}

		let maxRadiusSq = 0;

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );

		}

		this.radius = Math.sqrt( maxRadiusSq );

		return this;

	}

	copy( sphere ) {

		this.center.copy( sphere.center );
		this.radius = sphere.radius;

		return this;

	}

	isEmpty() {

		return ( this.radius < 0 );

	}

	makeEmpty() {

		this.center.set( 0, 0, 0 );
		this.radius = - 1;

		return this;

	}

	containsPoint( point ) {

		return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );

	}

	distanceToPoint( point ) {

		return ( point.distanceTo( this.center ) - this.radius );

	}

	intersectsSphere( sphere ) {

		const radiusSum = this.radius + sphere.radius;

		return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );

	}

	intersectsBox( box ) {

		return box.intersectsSphere( this );

	}

	intersectsPlane( plane ) {

		return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;

	}

	clampPoint( point, target ) {

		const deltaLengthSq = this.center.distanceToSquared( point );

		target.copy( point );

		if ( deltaLengthSq > ( this.radius * this.radius ) ) {

			target.sub( this.center ).normalize();
			target.multiplyScalar( this.radius ).add( this.center );

		}

		return target;

	}

	getBoundingBox( target ) {

		if ( this.isEmpty() ) {

			// Empty sphere produces empty bounding box
			target.makeEmpty();
			return target;

		}

		target.set( this.center, this.center );
		target.expandByScalar( this.radius );

		return target;

	}

	applyMatrix4( matrix ) {

		this.center.applyMatrix4( matrix );
		this.radius = this.radius * matrix.getMaxScaleOnAxis();

		return this;

	}

	translate( offset ) {

		this.center.add( offset );

		return this;

	}

	expandByPoint( point ) {

		// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671

		_toPoint.subVectors( point, this.center );

		const lengthSq = _toPoint.lengthSq();

		if ( lengthSq > ( this.radius * this.radius ) ) {

			const length = Math.sqrt( lengthSq );
			const missingRadiusHalf = ( length - this.radius ) * 0.5;

			// Nudge this sphere towards the target point. Add half the missing distance to radius,
			// and the other half to position. This gives a tighter enclosure, instead of if
			// the whole missing distance were just added to radius.

			this.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );
			this.radius += missingRadiusHalf;

		}

		return this;

	}

	union( sphere ) {

		// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769

		// To enclose another sphere into this sphere, we only need to enclose two points:
		// 1) Enclose the farthest point on the other sphere into this sphere.
		// 2) Enclose the opposite point of the farthest point into this sphere.

		 if ( this.center.equals( sphere.center ) === true ) {

			 _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );


		} else {

			_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );

		}

		this.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );
		this.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );

		return this;

	}

	equals( sphere ) {

		return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

const _vector$a = /*@__PURE__*/ new Vector3();
const _segCenter = /*@__PURE__*/ new Vector3();
const _segDir = /*@__PURE__*/ new Vector3();
const _diff = /*@__PURE__*/ new Vector3();

const _edge1 = /*@__PURE__*/ new Vector3();
const _edge2 = /*@__PURE__*/ new Vector3();
const _normal$1 = /*@__PURE__*/ new Vector3();

class Ray {

	constructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {

		this.origin = origin;
		this.direction = direction;

	}

	set( origin, direction ) {

		this.origin.copy( origin );
		this.direction.copy( direction );

		return this;

	}

	copy( ray ) {

		this.origin.copy( ray.origin );
		this.direction.copy( ray.direction );

		return this;

	}

	at( t, target ) {

		return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );

	}

	lookAt( v ) {

		this.direction.copy( v ).sub( this.origin ).normalize();

		return this;

	}

	recast( t ) {

		this.origin.copy( this.at( t, _vector$a ) );

		return this;

	}

	closestPointToPoint( point, target ) {

		target.subVectors( point, this.origin );

		const directionDistance = target.dot( this.direction );

		if ( directionDistance < 0 ) {

			return target.copy( this.origin );

		}

		return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

	}

	distanceToPoint( point ) {

		return Math.sqrt( this.distanceSqToPoint( point ) );

	}

	distanceSqToPoint( point ) {

		const directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );

		// point behind the ray

		if ( directionDistance < 0 ) {

			return this.origin.distanceToSquared( point );

		}

		_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

		return _vector$a.distanceToSquared( point );

	}

	distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {

		// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h
		// It returns the min distance between the ray and the segment
		// defined by v0 and v1
		// It can also set two optional targets :
		// - The closest point on the ray
		// - The closest point on the segment

		_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );
		_segDir.copy( v1 ).sub( v0 ).normalize();
		_diff.copy( this.origin ).sub( _segCenter );

		const segExtent = v0.distanceTo( v1 ) * 0.5;
		const a01 = - this.direction.dot( _segDir );
		const b0 = _diff.dot( this.direction );
		const b1 = - _diff.dot( _segDir );
		const c = _diff.lengthSq();
		const det = Math.abs( 1 - a01 * a01 );
		let s0, s1, sqrDist, extDet;

		if ( det > 0 ) {

			// The ray and segment are not parallel.

			s0 = a01 * b1 - b0;
			s1 = a01 * b0 - b1;
			extDet = segExtent * det;

			if ( s0 >= 0 ) {

				if ( s1 >= - extDet ) {

					if ( s1 <= extDet ) {

						// region 0
						// Minimum at interior points of ray and segment.

						const invDet = 1 / det;
						s0 *= invDet;
						s1 *= invDet;
						sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;

					} else {

						// region 1

						s1 = segExtent;
						s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				} else {

					// region 5

					s1 = - segExtent;
					s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				}

			} else {

				if ( s1 <= - extDet ) {

					// region 4

					s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );
					s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				} else if ( s1 <= extDet ) {

					// region 3

					s0 = 0;
					s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = s1 * ( s1 + 2 * b1 ) + c;

				} else {

					// region 2

					s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );
					s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				}

			}

		} else {

			// Ray and segment are parallel.

			s1 = ( a01 > 0 ) ? - segExtent : segExtent;
			s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
			sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

		}

		if ( optionalPointOnRay ) {

			optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );

		}

		if ( optionalPointOnSegment ) {

			optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );

		}

		return sqrDist;

	}

	intersectSphere( sphere, target ) {

		_vector$a.subVectors( sphere.center, this.origin );
		const tca = _vector$a.dot( this.direction );
		const d2 = _vector$a.dot( _vector$a ) - tca * tca;
		const radius2 = sphere.radius * sphere.radius;

		if ( d2 > radius2 ) return null;

		const thc = Math.sqrt( radius2 - d2 );

		// t0 = first intersect point - entrance on front of sphere
		const t0 = tca - thc;

		// t1 = second intersect point - exit point on back of sphere
		const t1 = tca + thc;

		// test to see if both t0 and t1 are behind the ray - if so, return null
		if ( t0 < 0 && t1 < 0 ) return null;

		// test to see if t0 is behind the ray:
		// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
		// in order to always return an intersect point that is in front of the ray.
		if ( t0 < 0 ) return this.at( t1, target );

		// else t0 is in front of the ray, so return the first collision point scaled by t0
		return this.at( t0, target );

	}

	intersectsSphere( sphere ) {

		return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );

	}

	distanceToPlane( plane ) {

		const denominator = plane.normal.dot( this.direction );

		if ( denominator === 0 ) {

			// line is coplanar, return origin
			if ( plane.distanceToPoint( this.origin ) === 0 ) {

				return 0;

			}

			// Null is preferable to undefined since undefined means.... it is undefined

			return null;

		}

		const t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;

		// Return if the ray never intersects the plane

		return t >= 0 ? t : null;

	}

	intersectPlane( plane, target ) {

		const t = this.distanceToPlane( plane );

		if ( t === null ) {

			return null;

		}

		return this.at( t, target );

	}

	intersectsPlane( plane ) {

		// check if the ray lies on the plane first

		const distToPoint = plane.distanceToPoint( this.origin );

		if ( distToPoint === 0 ) {

			return true;

		}

		const denominator = plane.normal.dot( this.direction );

		if ( denominator * distToPoint < 0 ) {

			return true;

		}

		// ray origin is behind the plane (and is pointing behind it)

		return false;

	}

	intersectBox( box, target ) {

		let tmin, tmax, tymin, tymax, tzmin, tzmax;

		const invdirx = 1 / this.direction.x,
			invdiry = 1 / this.direction.y,
			invdirz = 1 / this.direction.z;

		const origin = this.origin;

		if ( invdirx >= 0 ) {

			tmin = ( box.min.x - origin.x ) * invdirx;
			tmax = ( box.max.x - origin.x ) * invdirx;

		} else {

			tmin = ( box.max.x - origin.x ) * invdirx;
			tmax = ( box.min.x - origin.x ) * invdirx;

		}

		if ( invdiry >= 0 ) {

			tymin = ( box.min.y - origin.y ) * invdiry;
			tymax = ( box.max.y - origin.y ) * invdiry;

		} else {

			tymin = ( box.max.y - origin.y ) * invdiry;
			tymax = ( box.min.y - origin.y ) * invdiry;

		}

		if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;

		// These lines also handle the case where tmin or tmax is NaN
		// (result of 0 * Infinity). x !== x returns true if x is NaN

		if ( tymin > tmin || tmin !== tmin ) tmin = tymin;

		if ( tymax < tmax || tmax !== tmax ) tmax = tymax;

		if ( invdirz >= 0 ) {

			tzmin = ( box.min.z - origin.z ) * invdirz;
			tzmax = ( box.max.z - origin.z ) * invdirz;

		} else {

			tzmin = ( box.max.z - origin.z ) * invdirz;
			tzmax = ( box.min.z - origin.z ) * invdirz;

		}

		if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;

		if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;

		if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;

		//return point closest to the ray (positive side)

		if ( tmax < 0 ) return null;

		return this.at( tmin >= 0 ? tmin : tmax, target );

	}

	intersectsBox( box ) {

		return this.intersectBox( box, _vector$a ) !== null;

	}

	intersectTriangle( a, b, c, backfaceCulling, target ) {

		// Compute the offset origin, edges, and normal.

		// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h

		_edge1.subVectors( b, a );
		_edge2.subVectors( c, a );
		_normal$1.crossVectors( _edge1, _edge2 );

		// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
		// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
		//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
		//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
		//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
		let DdN = this.direction.dot( _normal$1 );
		let sign;

		if ( DdN > 0 ) {

			if ( backfaceCulling ) return null;
			sign = 1;

		} else if ( DdN < 0 ) {

			sign = - 1;
			DdN = - DdN;

		} else {

			return null;

		}

		_diff.subVectors( this.origin, a );
		const DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );

		// b1 < 0, no intersection
		if ( DdQxE2 < 0 ) {

			return null;

		}

		const DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );

		// b2 < 0, no intersection
		if ( DdE1xQ < 0 ) {

			return null;

		}

		// b1+b2 > 1, no intersection
		if ( DdQxE2 + DdE1xQ > DdN ) {

			return null;

		}

		// Line intersects triangle, check if ray does.
		const QdN = - sign * _diff.dot( _normal$1 );

		// t < 0, no intersection
		if ( QdN < 0 ) {

			return null;

		}

		// Ray intersects triangle.
		return this.at( QdN / DdN, target );

	}

	applyMatrix4( matrix4 ) {

		this.origin.applyMatrix4( matrix4 );
		this.direction.transformDirection( matrix4 );

		return this;

	}

	equals( ray ) {

		return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

class Matrix4 {

	constructor() {

		this.elements = [

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

		const te = this.elements;

		te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;
		te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;
		te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;
		te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;

		return this;

	}

	identity() {

		this.set(

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	clone() {

		return new Matrix4().fromArray( this.elements );

	}

	copy( m ) {

		const te = this.elements;
		const me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];
		te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];
		te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];
		te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];

		return this;

	}

	copyPosition( m ) {

		const te = this.elements, me = m.elements;

		te[ 12 ] = me[ 12 ];
		te[ 13 ] = me[ 13 ];
		te[ 14 ] = me[ 14 ];

		return this;

	}

	setFromMatrix3( m ) {

		const me = m.elements;

		this.set(

			me[ 0 ], me[ 3 ], me[ 6 ], 0,
			me[ 1 ], me[ 4 ], me[ 7 ], 0,
			me[ 2 ], me[ 5 ], me[ 8 ], 0,
			0, 0, 0, 1

		);

		return this;

	}

	extractBasis( xAxis, yAxis, zAxis ) {

		xAxis.setFromMatrixColumn( this, 0 );
		yAxis.setFromMatrixColumn( this, 1 );
		zAxis.setFromMatrixColumn( this, 2 );

		return this;

	}

	makeBasis( xAxis, yAxis, zAxis ) {

		this.set(
			xAxis.x, yAxis.x, zAxis.x, 0,
			xAxis.y, yAxis.y, zAxis.y, 0,
			xAxis.z, yAxis.z, zAxis.z, 0,
			0, 0, 0, 1
		);

		return this;

	}

	extractRotation( m ) {

		// this method does not support reflection matrices

		const te = this.elements;
		const me = m.elements;

		const scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();
		const scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();
		const scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();

		te[ 0 ] = me[ 0 ] * scaleX;
		te[ 1 ] = me[ 1 ] * scaleX;
		te[ 2 ] = me[ 2 ] * scaleX;
		te[ 3 ] = 0;

		te[ 4 ] = me[ 4 ] * scaleY;
		te[ 5 ] = me[ 5 ] * scaleY;
		te[ 6 ] = me[ 6 ] * scaleY;
		te[ 7 ] = 0;

		te[ 8 ] = me[ 8 ] * scaleZ;
		te[ 9 ] = me[ 9 ] * scaleZ;
		te[ 10 ] = me[ 10 ] * scaleZ;
		te[ 11 ] = 0;

		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	}

	makeRotationFromEuler( euler ) {

		if ( ! ( euler && euler.isEuler ) ) {

			console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );

		}

		const te = this.elements;

		const x = euler.x, y = euler.y, z = euler.z;
		const a = Math.cos( x ), b = Math.sin( x );
		const c = Math.cos( y ), d = Math.sin( y );
		const e = Math.cos( z ), f = Math.sin( z );

		if ( euler.order === 'XYZ' ) {

			const ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = - c * f;
			te[ 8 ] = d;

			te[ 1 ] = af + be * d;
			te[ 5 ] = ae - bf * d;
			te[ 9 ] = - b * c;

			te[ 2 ] = bf - ae * d;
			te[ 6 ] = be + af * d;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YXZ' ) {

			const ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce + df * b;
			te[ 4 ] = de * b - cf;
			te[ 8 ] = a * d;

			te[ 1 ] = a * f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b;

			te[ 2 ] = cf * b - de;
			te[ 6 ] = df + ce * b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZXY' ) {

			const ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce - df * b;
			te[ 4 ] = - a * f;
			te[ 8 ] = de + cf * b;

			te[ 1 ] = cf + de * b;
			te[ 5 ] = a * e;
			te[ 9 ] = df - ce * b;

			te[ 2 ] = - a * d;
			te[ 6 ] = b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZYX' ) {

			const ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = be * d - af;
			te[ 8 ] = ae * d + bf;

			te[ 1 ] = c * f;
			te[ 5 ] = bf * d + ae;
			te[ 9 ] = af * d - be;

			te[ 2 ] = - d;
			te[ 6 ] = b * c;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YZX' ) {

			const ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = bd - ac * f;
			te[ 8 ] = bc * f + ad;

			te[ 1 ] = f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b * e;

			te[ 2 ] = - d * e;
			te[ 6 ] = ad * f + bc;
			te[ 10 ] = ac - bd * f;

		} else if ( euler.order === 'XZY' ) {

			const ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = - f;
			te[ 8 ] = d * e;

			te[ 1 ] = ac * f + bd;
			te[ 5 ] = a * e;
			te[ 9 ] = ad * f - bc;

			te[ 2 ] = bc * f - ad;
			te[ 6 ] = b * e;
			te[ 10 ] = bd * f + ac;

		}

		// bottom row
		te[ 3 ] = 0;
		te[ 7 ] = 0;
		te[ 11 ] = 0;

		// last column
		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	}

	makeRotationFromQuaternion( q ) {

		return this.compose( _zero, q, _one );

	}

	lookAt( eye, target, up ) {

		const te = this.elements;

		_z.subVectors( eye, target );

		if ( _z.lengthSq() === 0 ) {

			// eye and target are in the same position

			_z.z = 1;

		}

		_z.normalize();
		_x.crossVectors( up, _z );

		if ( _x.lengthSq() === 0 ) {

			// up and z are parallel

			if ( Math.abs( up.z ) === 1 ) {

				_z.x += 0.0001;

			} else {

				_z.z += 0.0001;

			}

			_z.normalize();
			_x.crossVectors( up, _z );

		}

		_x.normalize();
		_y.crossVectors( _z, _x );

		te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;
		te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;
		te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;

		return this;

	}

	multiply( m, n ) {

		if ( n !== undefined ) {

			console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
			return this.multiplyMatrices( m, n );

		}

		return this.multiplyMatrices( this, m );

	}

	premultiply( m ) {

		return this.multiplyMatrices( m, this );

	}

	multiplyMatrices( a, b ) {

		const ae = a.elements;
		const be = b.elements;
		const te = this.elements;

		const a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];
		const a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];
		const a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];
		const a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];

		const b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];
		const b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];
		const b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];
		const b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];

		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

		te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

		return this;

	}

	multiplyScalar( s ) {

		const te = this.elements;

		te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;
		te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;
		te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;
		te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;

		return this;

	}

	determinant() {

		const te = this.elements;

		const n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];
		const n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];
		const n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];
		const n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];

		//TODO: make this more efficient
		//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )

		return (
			n41 * (
				+ n14 * n23 * n32
				 - n13 * n24 * n32
				 - n14 * n22 * n33
				 + n12 * n24 * n33
				 + n13 * n22 * n34
				 - n12 * n23 * n34
			) +
			n42 * (
				+ n11 * n23 * n34
				 - n11 * n24 * n33
				 + n14 * n21 * n33
				 - n13 * n21 * n34
				 + n13 * n24 * n31
				 - n14 * n23 * n31
			) +
			n43 * (
				+ n11 * n24 * n32
				 - n11 * n22 * n34
				 - n14 * n21 * n32
				 + n12 * n21 * n34
				 + n14 * n22 * n31
				 - n12 * n24 * n31
			) +
			n44 * (
				- n13 * n22 * n31
				 - n11 * n23 * n32
				 + n11 * n22 * n33
				 + n13 * n21 * n32
				 - n12 * n21 * n33
				 + n12 * n23 * n31
			)

		);

	}

	transpose() {

		const te = this.elements;
		let tmp;

		tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;
		tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;
		tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;

		tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;
		tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;
		tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;

		return this;

	}

	setPosition( x, y, z ) {

		const te = this.elements;

		if ( x.isVector3 ) {

			te[ 12 ] = x.x;
			te[ 13 ] = x.y;
			te[ 14 ] = x.z;

		} else {

			te[ 12 ] = x;
			te[ 13 ] = y;
			te[ 14 ] = z;

		}

		return this;

	}

	invert() {

		// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
		const te = this.elements,

			n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],
			n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],
			n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],
			n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],

			t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,
			t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,
			t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,
			t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;

		const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;

		if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );

		const detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;
		te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;
		te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;

		te[ 4 ] = t12 * detInv;
		te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;
		te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;
		te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;

		te[ 8 ] = t13 * detInv;
		te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;
		te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;
		te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;

		te[ 12 ] = t14 * detInv;
		te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;
		te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;
		te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;

		return this;

	}

	scale( v ) {

		const te = this.elements;
		const x = v.x, y = v.y, z = v.z;

		te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;
		te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;
		te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;
		te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;

		return this;

	}

	getMaxScaleOnAxis() {

		const te = this.elements;

		const scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];
		const scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];
		const scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];

		return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );

	}

	makeTranslation( x, y, z ) {

		this.set(

			1, 0, 0, x,
			0, 1, 0, y,
			0, 0, 1, z,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationX( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			1, 0, 0, 0,
			0, c, - s, 0,
			0, s, c, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationY( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			 c, 0, s, 0,
			 0, 1, 0, 0,
			- s, 0, c, 0,
			 0, 0, 0, 1

		);

		return this;

	}

	makeRotationZ( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			c, - s, 0, 0,
			s, c, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationAxis( axis, angle ) {

		// Based on http://www.gamedev.net/reference/articles/article1199.asp

		const c = Math.cos( angle );
		const s = Math.sin( angle );
		const t = 1 - c;
		const x = axis.x, y = axis.y, z = axis.z;
		const tx = t * x, ty = t * y;

		this.set(

			tx * x + c, tx * y - s * z, tx * z + s * y, 0,
			tx * y + s * z, ty * y + c, ty * z - s * x, 0,
			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeScale( x, y, z ) {

		this.set(

			x, 0, 0, 0,
			0, y, 0, 0,
			0, 0, z, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeShear( xy, xz, yx, yz, zx, zy ) {

		this.set(

			1, yx, zx, 0,
			xy, 1, zy, 0,
			xz, yz, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	compose( position, quaternion, scale ) {

		const te = this.elements;

		const x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;
		const x2 = x + x,	y2 = y + y, z2 = z + z;
		const xx = x * x2, xy = x * y2, xz = x * z2;
		const yy = y * y2, yz = y * z2, zz = z * z2;
		const wx = w * x2, wy = w * y2, wz = w * z2;

		const sx = scale.x, sy = scale.y, sz = scale.z;

		te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;
		te[ 1 ] = ( xy + wz ) * sx;
		te[ 2 ] = ( xz - wy ) * sx;
		te[ 3 ] = 0;

		te[ 4 ] = ( xy - wz ) * sy;
		te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;
		te[ 6 ] = ( yz + wx ) * sy;
		te[ 7 ] = 0;

		te[ 8 ] = ( xz + wy ) * sz;
		te[ 9 ] = ( yz - wx ) * sz;
		te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;
		te[ 11 ] = 0;

		te[ 12 ] = position.x;
		te[ 13 ] = position.y;
		te[ 14 ] = position.z;
		te[ 15 ] = 1;

		return this;

	}

	decompose( position, quaternion, scale ) {

		const te = this.elements;

		let sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();
		const sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();
		const sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();

		// if determine is negative, we need to invert one scale
		const det = this.determinant();
		if ( det < 0 ) sx = - sx;

		position.x = te[ 12 ];
		position.y = te[ 13 ];
		position.z = te[ 14 ];

		// scale the rotation part
		_m1$2.copy( this );

		const invSX = 1 / sx;
		const invSY = 1 / sy;
		const invSZ = 1 / sz;

		_m1$2.elements[ 0 ] *= invSX;
		_m1$2.elements[ 1 ] *= invSX;
		_m1$2.elements[ 2 ] *= invSX;

		_m1$2.elements[ 4 ] *= invSY;
		_m1$2.elements[ 5 ] *= invSY;
		_m1$2.elements[ 6 ] *= invSY;

		_m1$2.elements[ 8 ] *= invSZ;
		_m1$2.elements[ 9 ] *= invSZ;
		_m1$2.elements[ 10 ] *= invSZ;

		quaternion.setFromRotationMatrix( _m1$2 );

		scale.x = sx;
		scale.y = sy;
		scale.z = sz;

		return this;

	}

	makePerspective( left, right, top, bottom, near, far ) {

		if ( far === undefined ) {

			console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );

		}

		const te = this.elements;
		const x = 2 * near / ( right - left );
		const y = 2 * near / ( top - bottom );

		const a = ( right + left ) / ( right - left );
		const b = ( top + bottom ) / ( top - bottom );
		const c = - ( far + near ) / ( far - near );
		const d = - 2 * far * near / ( far - near );

		te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;
		te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;

		return this;

	}

	makeOrthographic( left, right, top, bottom, near, far ) {

		const te = this.elements;
		const w = 1.0 / ( right - left );
		const h = 1.0 / ( top - bottom );
		const p = 1.0 / ( far - near );

		const x = ( right + left ) * w;
		const y = ( top + bottom ) * h;
		const z = ( far + near ) * p;

		te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;
		te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;

		return this;

	}

	equals( matrix ) {

		const te = this.elements;
		const me = matrix.elements;

		for ( let i = 0; i < 16; i ++ ) {

			if ( te[ i ] !== me[ i ] ) return false;

		}

		return true;

	}

	fromArray( array, offset = 0 ) {

		for ( let i = 0; i < 16; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];
		array[ offset + 3 ] = te[ 3 ];

		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];
		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];

		array[ offset + 8 ] = te[ 8 ];
		array[ offset + 9 ] = te[ 9 ];
		array[ offset + 10 ] = te[ 10 ];
		array[ offset + 11 ] = te[ 11 ];

		array[ offset + 12 ] = te[ 12 ];
		array[ offset + 13 ] = te[ 13 ];
		array[ offset + 14 ] = te[ 14 ];
		array[ offset + 15 ] = te[ 15 ];

		return array;

	}

}

Matrix4.prototype.isMatrix4 = true;

const _v1$5 = /*@__PURE__*/ new Vector3();
const _m1$2 = /*@__PURE__*/ new Matrix4();
const _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );
const _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );
const _x = /*@__PURE__*/ new Vector3();
const _y = /*@__PURE__*/ new Vector3();
const _z = /*@__PURE__*/ new Vector3();

const _matrix$1 = /*@__PURE__*/ new Matrix4();
const _quaternion$3 = /*@__PURE__*/ new Quaternion();

class Euler {

	constructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._order = order;

	}

	get x() {

		return this._x;

	}

	set x( value ) {

		this._x = value;
		this._onChangeCallback();

	}

	get y() {

		return this._y;

	}

	set y( value ) {

		this._y = value;
		this._onChangeCallback();

	}

	get z() {

		return this._z;

	}

	set z( value ) {

		this._z = value;
		this._onChangeCallback();

	}

	get order() {

		return this._order;

	}

	set order( value ) {

		this._order = value;
		this._onChangeCallback();

	}

	set( x, y, z, order = this._order ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._order = order;

		this._onChangeCallback();

		return this;

	}

	clone() {

		return new this.constructor( this._x, this._y, this._z, this._order );

	}

	copy( euler ) {

		this._x = euler._x;
		this._y = euler._y;
		this._z = euler._z;
		this._order = euler._order;

		this._onChangeCallback();

		return this;

	}

	setFromRotationMatrix( m, order = this._order, update = true ) {

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		const te = m.elements;
		const m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];
		const m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];
		const m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		switch ( order ) {

			case 'XYZ':

				this._y = Math.asin( clamp( m13, - 1, 1 ) );

				if ( Math.abs( m13 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m33 );
					this._z = Math.atan2( - m12, m11 );

				} else {

					this._x = Math.atan2( m32, m22 );
					this._z = 0;

				}

				break;

			case 'YXZ':

				this._x = Math.asin( - clamp( m23, - 1, 1 ) );

				if ( Math.abs( m23 ) < 0.9999999 ) {

					this._y = Math.atan2( m13, m33 );
					this._z = Math.atan2( m21, m22 );

				} else {

					this._y = Math.atan2( - m31, m11 );
					this._z = 0;

				}

				break;

			case 'ZXY':

				this._x = Math.asin( clamp( m32, - 1, 1 ) );

				if ( Math.abs( m32 ) < 0.9999999 ) {

					this._y = Math.atan2( - m31, m33 );
					this._z = Math.atan2( - m12, m22 );

				} else {

					this._y = 0;
					this._z = Math.atan2( m21, m11 );

				}

				break;

			case 'ZYX':

				this._y = Math.asin( - clamp( m31, - 1, 1 ) );

				if ( Math.abs( m31 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m33 );
					this._z = Math.atan2( m21, m11 );

				} else {

					this._x = 0;
					this._z = Math.atan2( - m12, m22 );

				}

				break;

			case 'YZX':

				this._z = Math.asin( clamp( m21, - 1, 1 ) );

				if ( Math.abs( m21 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m22 );
					this._y = Math.atan2( - m31, m11 );

				} else {

					this._x = 0;
					this._y = Math.atan2( m13, m33 );

				}

				break;

			case 'XZY':

				this._z = Math.asin( - clamp( m12, - 1, 1 ) );

				if ( Math.abs( m12 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m22 );
					this._y = Math.atan2( m13, m11 );

				} else {

					this._x = Math.atan2( - m23, m33 );
					this._y = 0;

				}

				break;

			default:

				console.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );

		}

		this._order = order;

		if ( update === true ) this._onChangeCallback();

		return this;

	}

	setFromQuaternion( q, order, update ) {

		_matrix$1.makeRotationFromQuaternion( q );

		return this.setFromRotationMatrix( _matrix$1, order, update );

	}

	setFromVector3( v, order = this._order ) {

		return this.set( v.x, v.y, v.z, order );

	}

	reorder( newOrder ) {

		// WARNING: this discards revolution information -bhouston

		_quaternion$3.setFromEuler( this );

		return this.setFromQuaternion( _quaternion$3, newOrder );

	}

	equals( euler ) {

		return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );

	}

	fromArray( array ) {

		this._x = array[ 0 ];
		this._y = array[ 1 ];
		this._z = array[ 2 ];
		if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];

		this._onChangeCallback();

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._order;

		return array;

	}

	_onChange( callback ) {

		this._onChangeCallback = callback;

		return this;

	}

	_onChangeCallback() {}

}

Euler.prototype.isEuler = true;

Euler.DefaultOrder = 'XYZ';
Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];

class Layers {

	constructor() {

		this.mask = 1 | 0;

	}

	set( channel ) {

		this.mask = ( 1 << channel | 0 ) >>> 0;

	}

	enable( channel ) {

		this.mask |= 1 << channel | 0;

	}

	enableAll() {

		this.mask = 0xffffffff | 0;

	}

	toggle( channel ) {

		this.mask ^= 1 << channel | 0;

	}

	disable( channel ) {

		this.mask &= ~ ( 1 << channel | 0 );

	}

	disableAll() {

		this.mask = 0;

	}

	test( layers ) {

		return ( this.mask & layers.mask ) !== 0;

	}

	isEnabled( channel ) {

		return ( this.mask & ( 1 << channel | 0 ) ) !== 0;

	}

}

let _object3DId = 0;

const _v1$4 = /*@__PURE__*/ new Vector3();
const _q1 = /*@__PURE__*/ new Quaternion();
const _m1$1 = /*@__PURE__*/ new Matrix4();
const _target = /*@__PURE__*/ new Vector3();

const _position$3 = /*@__PURE__*/ new Vector3();
const _scale$2 = /*@__PURE__*/ new Vector3();
const _quaternion$2 = /*@__PURE__*/ new Quaternion();

const _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );
const _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );
const _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );

const _addedEvent = { type: 'added' };
const _removedEvent = { type: 'removed' };

class Object3D extends EventDispatcher {

	constructor() {

		super();

		Object.defineProperty( this, 'id', { value: _object3DId ++ } );

		this.uuid = generateUUID();

		this.name = '';
		this.type = 'Object3D';

		this.parent = null;
		this.children = [];

		this.up = Object3D.DefaultUp.clone();

		const position = new Vector3();
		const rotation = new Euler();
		const quaternion = new Quaternion();
		const scale = new Vector3( 1, 1, 1 );

		function onRotationChange() {

			quaternion.setFromEuler( rotation, false );

		}

		function onQuaternionChange() {

			rotation.setFromQuaternion( quaternion, undefined, false );

		}

		rotation._onChange( onRotationChange );
		quaternion._onChange( onQuaternionChange );

		Object.defineProperties( this, {
			position: {
				configurable: true,
				enumerable: true,
				value: position
			},
			rotation: {
				configurable: true,
				enumerable: true,
				value: rotation
			},
			quaternion: {
				configurable: true,
				enumerable: true,
				value: quaternion
			},
			scale: {
				configurable: true,
				enumerable: true,
				value: scale
			},
			modelViewMatrix: {
				value: new Matrix4()
			},
			normalMatrix: {
				value: new Matrix3()
			}
		} );

		this.matrix = new Matrix4();
		this.matrixWorld = new Matrix4();

		this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;
		this.matrixWorldNeedsUpdate = false;

		this.layers = new Layers();
		this.visible = true;

		this.castShadow = false;
		this.receiveShadow = false;

		this.frustumCulled = true;
		this.renderOrder = 0;

		this.animations = [];

		this.userData = {};

	}

	onBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}

	onAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}

	applyMatrix4( matrix ) {

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		this.matrix.premultiply( matrix );

		this.matrix.decompose( this.position, this.quaternion, this.scale );

	}

	applyQuaternion( q ) {

		this.quaternion.premultiply( q );

		return this;

	}

	setRotationFromAxisAngle( axis, angle ) {

		// assumes axis is normalized

		this.quaternion.setFromAxisAngle( axis, angle );

	}

	setRotationFromEuler( euler ) {

		this.quaternion.setFromEuler( euler, true );

	}

	setRotationFromMatrix( m ) {

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		this.quaternion.setFromRotationMatrix( m );

	}

	setRotationFromQuaternion( q ) {

		// assumes q is normalized

		this.quaternion.copy( q );

	}

	rotateOnAxis( axis, angle ) {

		// rotate object on axis in object space
		// axis is assumed to be normalized

		_q1.setFromAxisAngle( axis, angle );

		this.quaternion.multiply( _q1 );

		return this;

	}

	rotateOnWorldAxis( axis, angle ) {

		// rotate object on axis in world space
		// axis is assumed to be normalized
		// method assumes no rotated parent

		_q1.setFromAxisAngle( axis, angle );

		this.quaternion.premultiply( _q1 );

		return this;

	}

	rotateX( angle ) {

		return this.rotateOnAxis( _xAxis, angle );

	}

	rotateY( angle ) {

		return this.rotateOnAxis( _yAxis, angle );

	}

	rotateZ( angle ) {

		return this.rotateOnAxis( _zAxis, angle );

	}

	translateOnAxis( axis, distance ) {

		// translate object by distance along axis in object space
		// axis is assumed to be normalized

		_v1$4.copy( axis ).applyQuaternion( this.quaternion );

		this.position.add( _v1$4.multiplyScalar( distance ) );

		return this;

	}

	translateX( distance ) {

		return this.translateOnAxis( _xAxis, distance );

	}

	translateY( distance ) {

		return this.translateOnAxis( _yAxis, distance );

	}

	translateZ( distance ) {

		return this.translateOnAxis( _zAxis, distance );

	}

	localToWorld( vector ) {

		return vector.applyMatrix4( this.matrixWorld );

	}

	worldToLocal( vector ) {

		return vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );

	}

	lookAt( x, y, z ) {

		// This method does not support objects having non-uniformly-scaled parent(s)

		if ( x.isVector3 ) {

			_target.copy( x );

		} else {

			_target.set( x, y, z );

		}

		const parent = this.parent;

		this.updateWorldMatrix( true, false );

		_position$3.setFromMatrixPosition( this.matrixWorld );

		if ( this.isCamera || this.isLight ) {

			_m1$1.lookAt( _position$3, _target, this.up );

		} else {

			_m1$1.lookAt( _target, _position$3, this.up );

		}

		this.quaternion.setFromRotationMatrix( _m1$1 );

		if ( parent ) {

			_m1$1.extractRotation( parent.matrixWorld );
			_q1.setFromRotationMatrix( _m1$1 );
			this.quaternion.premultiply( _q1.invert() );

		}

	}

	add( object ) {

		if ( arguments.length > 1 ) {

			for ( let i = 0; i < arguments.length; i ++ ) {

				this.add( arguments[ i ] );

			}

			return this;

		}

		if ( object === this ) {

			console.error( 'THREE.Object3D.add: object can\'t be added as a child of itself.', object );
			return this;

		}

		if ( object && object.isObject3D ) {

			if ( object.parent !== null ) {

				object.parent.remove( object );

			}

			object.parent = this;
			this.children.push( object );

			object.dispatchEvent( _addedEvent );

		} else {

			console.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );

		}

		return this;

	}

	remove( object ) {

		if ( arguments.length > 1 ) {

			for ( let i = 0; i < arguments.length; i ++ ) {

				this.remove( arguments[ i ] );

			}

			return this;

		}

		const index = this.children.indexOf( object );

		if ( index !== - 1 ) {

			object.parent = null;
			this.children.splice( index, 1 );

			object.dispatchEvent( _removedEvent );

		}

		return this;

	}

	removeFromParent() {

		const parent = this.parent;

		if ( parent !== null ) {

			parent.remove( this );

		}

		return this;

	}

	clear() {

		for ( let i = 0; i < this.children.length; i ++ ) {

			const object = this.children[ i ];

			object.parent = null;

			object.dispatchEvent( _removedEvent );

		}

		this.children.length = 0;

		return this;


	}

	attach( object ) {

		// adds object as a child of this, while maintaining the object's world transform

		// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)

		this.updateWorldMatrix( true, false );

		_m1$1.copy( this.matrixWorld ).invert();

		if ( object.parent !== null ) {

			object.parent.updateWorldMatrix( true, false );

			_m1$1.multiply( object.parent.matrixWorld );

		}

		object.applyMatrix4( _m1$1 );

		this.add( object );

		object.updateWorldMatrix( false, true );

		return this;

	}

	getObjectById( id ) {

		return this.getObjectByProperty( 'id', id );

	}

	getObjectByName( name ) {

		return this.getObjectByProperty( 'name', name );

	}

	getObjectByProperty( name, value ) {

		if ( this[ name ] === value ) return this;

		for ( let i = 0, l = this.children.length; i < l; i ++ ) {

			const child = this.children[ i ];
			const object = child.getObjectByProperty( name, value );

			if ( object !== undefined ) {

				return object;

			}

		}

		return undefined;

	}

	getWorldPosition( target ) {

		this.updateWorldMatrix( true, false );

		return target.setFromMatrixPosition( this.matrixWorld );

	}

	getWorldQuaternion( target ) {

		this.updateWorldMatrix( true, false );

		this.matrixWorld.decompose( _position$3, target, _scale$2 );

		return target;

	}

	getWorldScale( target ) {

		this.updateWorldMatrix( true, false );

		this.matrixWorld.decompose( _position$3, _quaternion$2, target );

		return target;

	}

	getWorldDirection( target ) {

		this.updateWorldMatrix( true, false );

		const e = this.matrixWorld.elements;

		return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();

	}

	raycast( /* raycaster, intersects */ ) {}

	traverse( callback ) {

		callback( this );

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverse( callback );

		}

	}

	traverseVisible( callback ) {

		if ( this.visible === false ) return;

		callback( this );

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverseVisible( callback );

		}

	}

	traverseAncestors( callback ) {

		const parent = this.parent;

		if ( parent !== null ) {

			callback( parent );

			parent.traverseAncestors( callback );

		}

	}

	updateMatrix() {

		this.matrix.compose( this.position, this.quaternion, this.scale );

		this.matrixWorldNeedsUpdate = true;

	}

	updateMatrixWorld( force ) {

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		if ( this.matrixWorldNeedsUpdate || force ) {

			if ( this.parent === null ) {

				this.matrixWorld.copy( this.matrix );

			} else {

				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			}

			this.matrixWorldNeedsUpdate = false;

			force = true;

		}

		// update children

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].updateMatrixWorld( force );

		}

	}

	updateWorldMatrix( updateParents, updateChildren ) {

		const parent = this.parent;

		if ( updateParents === true && parent !== null ) {

			parent.updateWorldMatrix( true, false );

		}

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		if ( this.parent === null ) {

			this.matrixWorld.copy( this.matrix );

		} else {

			this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

		}

		// update children

		if ( updateChildren === true ) {

			const children = this.children;

			for ( let i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].updateWorldMatrix( false, true );

			}

		}

	}

	toJSON( meta ) {

		// meta is a string when called from JSON.stringify
		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		const output = {};

		// meta is a hash used to collect geometries, materials.
		// not providing it implies that this is the root object
		// being serialized.
		if ( isRootObject ) {

			// initialize meta obj
			meta = {
				geometries: {},
				materials: {},
				textures: {},
				images: {},
				shapes: {},
				skeletons: {},
				animations: {},
				nodes: {}
			};

			output.metadata = {
				version: 4.5,
				type: 'Object',
				generator: 'Object3D.toJSON'
			};

		}

		// standard Object3D serialization

		const object = {};

		object.uuid = this.uuid;
		object.type = this.type;

		if ( this.name !== '' ) object.name = this.name;
		if ( this.castShadow === true ) object.castShadow = true;
		if ( this.receiveShadow === true ) object.receiveShadow = true;
		if ( this.visible === false ) object.visible = false;
		if ( this.frustumCulled === false ) object.frustumCulled = false;
		if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;
		if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;

		object.layers = this.layers.mask;
		object.matrix = this.matrix.toArray();

		if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;

		// object specific properties

		if ( this.isInstancedMesh ) {

			object.type = 'InstancedMesh';
			object.count = this.count;
			object.instanceMatrix = this.instanceMatrix.toJSON();
			if ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();

		}

		//

		function serialize( library, element ) {

			if ( library[ element.uuid ] === undefined ) {

				library[ element.uuid ] = element.toJSON( meta );

			}

			return element.uuid;

		}

		if ( this.isScene ) {

			if ( this.background ) {

				if ( this.background.isColor ) {

					object.background = this.background.toJSON();

				} else if ( this.background.isTexture ) {

					object.background = this.background.toJSON( meta ).uuid;

				}

			}

			if ( this.environment && this.environment.isTexture ) {

				object.environment = this.environment.toJSON( meta ).uuid;

			}

		} else if ( this.isMesh || this.isLine || this.isPoints ) {

			object.geometry = serialize( meta.geometries, this.geometry );

			const parameters = this.geometry.parameters;

			if ( parameters !== undefined && parameters.shapes !== undefined ) {

				const shapes = parameters.shapes;

				if ( Array.isArray( shapes ) ) {

					for ( let i = 0, l = shapes.length; i < l; i ++ ) {

						const shape = shapes[ i ];

						serialize( meta.shapes, shape );

					}

				} else {

					serialize( meta.shapes, shapes );

				}

			}

		}

		if ( this.isSkinnedMesh ) {

			object.bindMode = this.bindMode;
			object.bindMatrix = this.bindMatrix.toArray();

			if ( this.skeleton !== undefined ) {

				serialize( meta.skeletons, this.skeleton );

				object.skeleton = this.skeleton.uuid;

			}

		}

		if ( this.material !== undefined ) {

			if ( Array.isArray( this.material ) ) {

				const uuids = [];

				for ( let i = 0, l = this.material.length; i < l; i ++ ) {

					uuids.push( serialize( meta.materials, this.material[ i ] ) );

				}

				object.material = uuids;

			} else {

				object.material = serialize( meta.materials, this.material );

			}

		}

		//

		if ( this.children.length > 0 ) {

			object.children = [];

			for ( let i = 0; i < this.children.length; i ++ ) {

				object.children.push( this.children[ i ].toJSON( meta ).object );

			}

		}

		//

		if ( this.animations.length > 0 ) {

			object.animations = [];

			for ( let i = 0; i < this.animations.length; i ++ ) {

				const animation = this.animations[ i ];

				object.animations.push( serialize( meta.animations, animation ) );

			}

		}

		if ( isRootObject ) {

			const geometries = extractFromCache( meta.geometries );
			const materials = extractFromCache( meta.materials );
			const textures = extractFromCache( meta.textures );
			const images = extractFromCache( meta.images );
			const shapes = extractFromCache( meta.shapes );
			const skeletons = extractFromCache( meta.skeletons );
			const animations = extractFromCache( meta.animations );
			const nodes = extractFromCache( meta.nodes );

			if ( geometries.length > 0 ) output.geometries = geometries;
			if ( materials.length > 0 ) output.materials = materials;
			if ( textures.length > 0 ) output.textures = textures;
			if ( images.length > 0 ) output.images = images;
			if ( shapes.length > 0 ) output.shapes = shapes;
			if ( skeletons.length > 0 ) output.skeletons = skeletons;
			if ( animations.length > 0 ) output.animations = animations;
			if ( nodes.length > 0 ) output.nodes = nodes;

		}

		output.object = object;

		return output;

		// extract data from the cache hash
		// remove metadata on each item
		// and return as array
		function extractFromCache( cache ) {

			const values = [];
			for ( const key in cache ) {

				const data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}

			return values;

		}

	}

	clone( recursive ) {

		return new this.constructor().copy( this, recursive );

	}

	copy( source, recursive = true ) {

		this.name = source.name;

		this.up.copy( source.up );

		this.position.copy( source.position );
		this.rotation.order = source.rotation.order;
		this.quaternion.copy( source.quaternion );
		this.scale.copy( source.scale );

		this.matrix.copy( source.matrix );
		this.matrixWorld.copy( source.matrixWorld );

		this.matrixAutoUpdate = source.matrixAutoUpdate;
		this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;

		this.layers.mask = source.layers.mask;
		this.visible = source.visible;

		this.castShadow = source.castShadow;
		this.receiveShadow = source.receiveShadow;

		this.frustumCulled = source.frustumCulled;
		this.renderOrder = source.renderOrder;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		if ( recursive === true ) {

			for ( let i = 0; i < source.children.length; i ++ ) {

				const child = source.children[ i ];
				this.add( child.clone() );

			}

		}

		return this;

	}

}

Object3D.DefaultUp = new Vector3( 0, 1, 0 );
Object3D.DefaultMatrixAutoUpdate = true;

Object3D.prototype.isObject3D = true;

const _v0$1 = /*@__PURE__*/ new Vector3();
const _v1$3 = /*@__PURE__*/ new Vector3();
const _v2$2 = /*@__PURE__*/ new Vector3();
const _v3$1 = /*@__PURE__*/ new Vector3();

const _vab = /*@__PURE__*/ new Vector3();
const _vac = /*@__PURE__*/ new Vector3();
const _vbc = /*@__PURE__*/ new Vector3();
const _vap = /*@__PURE__*/ new Vector3();
const _vbp = /*@__PURE__*/ new Vector3();
const _vcp = /*@__PURE__*/ new Vector3();

class Triangle {

	constructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {

		this.a = a;
		this.b = b;
		this.c = c;

	}

	static getNormal( a, b, c, target ) {

		target.subVectors( c, b );
		_v0$1.subVectors( a, b );
		target.cross( _v0$1 );

		const targetLengthSq = target.lengthSq();
		if ( targetLengthSq > 0 ) {

			return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );

		}

		return target.set( 0, 0, 0 );

	}

	// static/instance method to calculate barycentric coordinates
	// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
	static getBarycoord( point, a, b, c, target ) {

		_v0$1.subVectors( c, a );
		_v1$3.subVectors( b, a );
		_v2$2.subVectors( point, a );

		const dot00 = _v0$1.dot( _v0$1 );
		const dot01 = _v0$1.dot( _v1$3 );
		const dot02 = _v0$1.dot( _v2$2 );
		const dot11 = _v1$3.dot( _v1$3 );
		const dot12 = _v1$3.dot( _v2$2 );

		const denom = ( dot00 * dot11 - dot01 * dot01 );

		// collinear or singular triangle
		if ( denom === 0 ) {

			// arbitrary location outside of triangle?
			// not sure if this is the best idea, maybe should be returning undefined
			return target.set( - 2, - 1, - 1 );

		}

		const invDenom = 1 / denom;
		const u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
		const v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;

		// barycentric coordinates must always sum to 1
		return target.set( 1 - u - v, v, u );

	}

	static containsPoint( point, a, b, c ) {

		this.getBarycoord( point, a, b, c, _v3$1 );

		return ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );

	}

	static getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {

		this.getBarycoord( point, p1, p2, p3, _v3$1 );

		target.set( 0, 0 );
		target.addScaledVector( uv1, _v3$1.x );
		target.addScaledVector( uv2, _v3$1.y );
		target.addScaledVector( uv3, _v3$1.z );

		return target;

	}

	static isFrontFacing( a, b, c, direction ) {

		_v0$1.subVectors( c, b );
		_v1$3.subVectors( a, b );

		// strictly front facing
		return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;

	}

	set( a, b, c ) {

		this.a.copy( a );
		this.b.copy( b );
		this.c.copy( c );

		return this;

	}

	setFromPointsAndIndices( points, i0, i1, i2 ) {

		this.a.copy( points[ i0 ] );
		this.b.copy( points[ i1 ] );
		this.c.copy( points[ i2 ] );

		return this;

	}

	setFromAttributeAndIndices( attribute, i0, i1, i2 ) {

		this.a.fromBufferAttribute( attribute, i0 );
		this.b.fromBufferAttribute( attribute, i1 );
		this.c.fromBufferAttribute( attribute, i2 );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( triangle ) {

		this.a.copy( triangle.a );
		this.b.copy( triangle.b );
		this.c.copy( triangle.c );

		return this;

	}

	getArea() {

		_v0$1.subVectors( this.c, this.b );
		_v1$3.subVectors( this.a, this.b );

		return _v0$1.cross( _v1$3 ).length() * 0.5;

	}

	getMidpoint( target ) {

		return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );

	}

	getNormal( target ) {

		return Triangle.getNormal( this.a, this.b, this.c, target );

	}

	getPlane( target ) {

		return target.setFromCoplanarPoints( this.a, this.b, this.c );

	}

	getBarycoord( point, target ) {

		return Triangle.getBarycoord( point, this.a, this.b, this.c, target );

	}

	getUV( point, uv1, uv2, uv3, target ) {

		return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );

	}

	containsPoint( point ) {

		return Triangle.containsPoint( point, this.a, this.b, this.c );

	}

	isFrontFacing( direction ) {

		return Triangle.isFrontFacing( this.a, this.b, this.c, direction );

	}

	intersectsBox( box ) {

		return box.intersectsTriangle( this );

	}

	closestPointToPoint( p, target ) {

		const a = this.a, b = this.b, c = this.c;
		let v, w;

		// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
		// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
		// under the accompanying license; see chapter 5.1.5 for detailed explanation.
		// basically, we're distinguishing which of the voronoi regions of the triangle
		// the point lies in with the minimum amount of redundant computation.

		_vab.subVectors( b, a );
		_vac.subVectors( c, a );
		_vap.subVectors( p, a );
		const d1 = _vab.dot( _vap );
		const d2 = _vac.dot( _vap );
		if ( d1 <= 0 && d2 <= 0 ) {

			// vertex region of A; barycentric coords (1, 0, 0)
			return target.copy( a );

		}

		_vbp.subVectors( p, b );
		const d3 = _vab.dot( _vbp );
		const d4 = _vac.dot( _vbp );
		if ( d3 >= 0 && d4 <= d3 ) {

			// vertex region of B; barycentric coords (0, 1, 0)
			return target.copy( b );

		}

		const vc = d1 * d4 - d3 * d2;
		if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {

			v = d1 / ( d1 - d3 );
			// edge region of AB; barycentric coords (1-v, v, 0)
			return target.copy( a ).addScaledVector( _vab, v );

		}

		_vcp.subVectors( p, c );
		const d5 = _vab.dot( _vcp );
		const d6 = _vac.dot( _vcp );
		if ( d6 >= 0 && d5 <= d6 ) {

			// vertex region of C; barycentric coords (0, 0, 1)
			return target.copy( c );

		}

		const vb = d5 * d2 - d1 * d6;
		if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {

			w = d2 / ( d2 - d6 );
			// edge region of AC; barycentric coords (1-w, 0, w)
			return target.copy( a ).addScaledVector( _vac, w );

		}

		const va = d3 * d6 - d5 * d4;
		if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {

			_vbc.subVectors( c, b );
			w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );
			// edge region of BC; barycentric coords (0, 1-w, w)
			return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC

		}

		// face region
		const denom = 1 / ( va + vb + vc );
		// u = va * denom
		v = vb * denom;
		w = vc * denom;

		return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );

	}

	equals( triangle ) {

		return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );

	}

}

let materialId = 0;

class Material extends EventDispatcher {

	constructor() {

		super();

		Object.defineProperty( this, 'id', { value: materialId ++ } );

		this.uuid = generateUUID();

		this.name = '';
		this.type = 'Material';

		this.fog = true;

		this.blending = NormalBlending;
		this.side = FrontSide;
		this.vertexColors = false;

		this.opacity = 1;
		this.transparent = false;

		this.blendSrc = SrcAlphaFactor;
		this.blendDst = OneMinusSrcAlphaFactor;
		this.blendEquation = AddEquation;
		this.blendSrcAlpha = null;
		this.blendDstAlpha = null;
		this.blendEquationAlpha = null;

		this.depthFunc = LessEqualDepth;
		this.depthTest = true;
		this.depthWrite = true;

		this.stencilWriteMask = 0xff;
		this.stencilFunc = AlwaysStencilFunc;
		this.stencilRef = 0;
		this.stencilFuncMask = 0xff;
		this.stencilFail = KeepStencilOp;
		this.stencilZFail = KeepStencilOp;
		this.stencilZPass = KeepStencilOp;
		this.stencilWrite = false;

		this.clippingPlanes = null;
		this.clipIntersection = false;
		this.clipShadows = false;

		this.shadowSide = null;

		this.colorWrite = true;

		this.precision = null; // override the renderer's default precision for this material

		this.polygonOffset = false;
		this.polygonOffsetFactor = 0;
		this.polygonOffsetUnits = 0;

		this.dithering = false;

		this.alphaToCoverage = false;
		this.premultipliedAlpha = false;

		this.visible = true;

		this.toneMapped = true;

		this.userData = {};

		this.version = 0;

		this._alphaTest = 0;

	}

	get alphaTest() {

		return this._alphaTest;

	}

	set alphaTest( value ) {

		if ( this._alphaTest > 0 !== value > 0 ) {

			this.version ++;

		}

		this._alphaTest = value;

	}

	onBuild( /* shaderobject, renderer */ ) {}

	onBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}

	onBeforeCompile( /* shaderobject, renderer */ ) {}

	customProgramCacheKey() {

		return this.onBeforeCompile.toString();

	}

	setValues( values ) {

		if ( values === undefined ) return;

		for ( const key in values ) {

			const newValue = values[ key ];

			if ( newValue === undefined ) {

				console.warn( 'THREE.Material: \'' + key + '\' parameter is undefined.' );
				continue;

			}

			// for backward compatability if shading is set in the constructor
			if ( key === 'shading' ) {

				console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
				this.flatShading = ( newValue === FlatShading ) ? true : false;
				continue;

			}

			const currentValue = this[ key ];

			if ( currentValue === undefined ) {

				console.warn( 'THREE.' + this.type + ': \'' + key + '\' is not a property of this material.' );
				continue;

			}

			if ( currentValue && currentValue.isColor ) {

				currentValue.set( newValue );

			} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {

				currentValue.copy( newValue );

			} else {

				this[ key ] = newValue;

			}

		}

	}

	toJSON( meta ) {

		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		if ( isRootObject ) {

			meta = {
				textures: {},
				images: {}
			};

		}

		const data = {
			metadata: {
				version: 4.5,
				type: 'Material',
				generator: 'Material.toJSON'
			}
		};

		// standard Material serialization
		data.uuid = this.uuid;
		data.type = this.type;

		if ( this.name !== '' ) data.name = this.name;

		if ( this.color && this.color.isColor ) data.color = this.color.getHex();

		if ( this.roughness !== undefined ) data.roughness = this.roughness;
		if ( this.metalness !== undefined ) data.metalness = this.metalness;

		if ( this.sheen !== undefined ) data.sheen = this.sheen;
		if ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();
		if ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;
		if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();
		if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;

		if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();
		if ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;
		if ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();
		if ( this.shininess !== undefined ) data.shininess = this.shininess;
		if ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;
		if ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;

		if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {

			data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;

		}

		if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {

			data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;

		}

		if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {

			data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;
			data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();

		}

		if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;
		if ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;
		if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;

		if ( this.lightMap && this.lightMap.isTexture ) {

			data.lightMap = this.lightMap.toJSON( meta ).uuid;
			data.lightMapIntensity = this.lightMapIntensity;

		}

		if ( this.aoMap && this.aoMap.isTexture ) {

			data.aoMap = this.aoMap.toJSON( meta ).uuid;
			data.aoMapIntensity = this.aoMapIntensity;

		}

		if ( this.bumpMap && this.bumpMap.isTexture ) {

			data.bumpMap = this.bumpMap.toJSON( meta ).uuid;
			data.bumpScale = this.bumpScale;

		}

		if ( this.normalMap && this.normalMap.isTexture ) {

			data.normalMap = this.normalMap.toJSON( meta ).uuid;
			data.normalMapType = this.normalMapType;
			data.normalScale = this.normalScale.toArray();

		}

		if ( this.displacementMap && this.displacementMap.isTexture ) {

			data.displacementMap = this.displacementMap.toJSON( meta ).uuid;
			data.displacementScale = this.displacementScale;
			data.displacementBias = this.displacementBias;

		}

		if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;
		if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;

		if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;
		if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;
		if ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;
		if ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;

		if ( this.envMap && this.envMap.isTexture ) {

			data.envMap = this.envMap.toJSON( meta ).uuid;

			if ( this.combine !== undefined ) data.combine = this.combine;

		}

		if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;
		if ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;
		if ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;

		if ( this.gradientMap && this.gradientMap.isTexture ) {

			data.gradientMap = this.gradientMap.toJSON( meta ).uuid;

		}

		if ( this.transmission !== undefined ) data.transmission = this.transmission;
		if ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;
		if ( this.thickness !== undefined ) data.thickness = this.thickness;
		if ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;
		if ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;
		if ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();

		if ( this.size !== undefined ) data.size = this.size;
		if ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;
		if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;

		if ( this.blending !== NormalBlending ) data.blending = this.blending;
		if ( this.side !== FrontSide ) data.side = this.side;
		if ( this.vertexColors ) data.vertexColors = true;

		if ( this.opacity < 1 ) data.opacity = this.opacity;
		if ( this.transparent === true ) data.transparent = this.transparent;

		data.depthFunc = this.depthFunc;
		data.depthTest = this.depthTest;
		data.depthWrite = this.depthWrite;
		data.colorWrite = this.colorWrite;

		data.stencilWrite = this.stencilWrite;
		data.stencilWriteMask = this.stencilWriteMask;
		data.stencilFunc = this.stencilFunc;
		data.stencilRef = this.stencilRef;
		data.stencilFuncMask = this.stencilFuncMask;
		data.stencilFail = this.stencilFail;
		data.stencilZFail = this.stencilZFail;
		data.stencilZPass = this.stencilZPass;

		// rotation (SpriteMaterial)
		if ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;

		if ( this.polygonOffset === true ) data.polygonOffset = true;
		if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;
		if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;

		if ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;
		if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;
		if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;
		if ( this.scale !== undefined ) data.scale = this.scale;

		if ( this.dithering === true ) data.dithering = true;

		if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;
		if ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;
		if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;

		if ( this.wireframe === true ) data.wireframe = this.wireframe;
		if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;
		if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;
		if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;

		if ( this.flatShading === true ) data.flatShading = this.flatShading;

		if ( this.visible === false ) data.visible = false;

		if ( this.toneMapped === false ) data.toneMapped = false;

		if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;

		// TODO: Copied from Object3D.toJSON

		function extractFromCache( cache ) {

			const values = [];

			for ( const key in cache ) {

				const data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}

			return values;

		}

		if ( isRootObject ) {

			const textures = extractFromCache( meta.textures );
			const images = extractFromCache( meta.images );

			if ( textures.length > 0 ) data.textures = textures;
			if ( images.length > 0 ) data.images = images;

		}

		return data;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.name = source.name;

		this.fog = source.fog;

		this.blending = source.blending;
		this.side = source.side;
		this.vertexColors = source.vertexColors;

		this.opacity = source.opacity;
		this.transparent = source.transparent;

		this.blendSrc = source.blendSrc;
		this.blendDst = source.blendDst;
		this.blendEquation = source.blendEquation;
		this.blendSrcAlpha = source.blendSrcAlpha;
		this.blendDstAlpha = source.blendDstAlpha;
		this.blendEquationAlpha = source.blendEquationAlpha;

		this.depthFunc = source.depthFunc;
		this.depthTest = source.depthTest;
		this.depthWrite = source.depthWrite;

		this.stencilWriteMask = source.stencilWriteMask;
		this.stencilFunc = source.stencilFunc;
		this.stencilRef = source.stencilRef;
		this.stencilFuncMask = source.stencilFuncMask;
		this.stencilFail = source.stencilFail;
		this.stencilZFail = source.stencilZFail;
		this.stencilZPass = source.stencilZPass;
		this.stencilWrite = source.stencilWrite;

		const srcPlanes = source.clippingPlanes;
		let dstPlanes = null;

		if ( srcPlanes !== null ) {

			const n = srcPlanes.length;
			dstPlanes = new Array( n );

			for ( let i = 0; i !== n; ++ i ) {

				dstPlanes[ i ] = srcPlanes[ i ].clone();

			}

		}

		this.clippingPlanes = dstPlanes;
		this.clipIntersection = source.clipIntersection;
		this.clipShadows = source.clipShadows;

		this.shadowSide = source.shadowSide;

		this.colorWrite = source.colorWrite;

		this.precision = source.precision;

		this.polygonOffset = source.polygonOffset;
		this.polygonOffsetFactor = source.polygonOffsetFactor;
		this.polygonOffsetUnits = source.polygonOffsetUnits;

		this.dithering = source.dithering;

		this.alphaTest = source.alphaTest;
		this.alphaToCoverage = source.alphaToCoverage;
		this.premultipliedAlpha = source.premultipliedAlpha;

		this.visible = source.visible;

		this.toneMapped = source.toneMapped;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		return this;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

}

Material.prototype.isMaterial = true;

Material.fromType = function ( /*type*/ ) {

	// TODO: Behavior added in Materials.js

	return null;

};

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 * }
 */

class MeshBasicMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshBasicMaterial';

		this.color = new Color( 0xffffff ); // emissive

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		return this;

	}

}

MeshBasicMaterial.prototype.isMeshBasicMaterial = true;

const _vector$9 = /*@__PURE__*/ new Vector3();
const _vector2$1 = /*@__PURE__*/ new Vector2();

class BufferAttribute {

	constructor( array, itemSize, normalized ) {

		if ( Array.isArray( array ) ) {

			throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

		}

		this.name = '';

		this.array = array;
		this.itemSize = itemSize;
		this.count = array !== undefined ? array.length / itemSize : 0;
		this.normalized = normalized === true;

		this.usage = StaticDrawUsage;
		this.updateRange = { offset: 0, count: - 1 };

		this.version = 0;

	}

	onUploadCallback() {}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

	setUsage( value ) {

		this.usage = value;

		return this;

	}

	copy( source ) {

		this.name = source.name;
		this.array = new source.array.constructor( source.array );
		this.itemSize = source.itemSize;
		this.count = source.count;
		this.normalized = source.normalized;

		this.usage = source.usage;

		return this;

	}

	copyAt( index1, attribute, index2 ) {

		index1 *= this.itemSize;
		index2 *= attribute.itemSize;

		for ( let i = 0, l = this.itemSize; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	}

	copyArray( array ) {

		this.array.set( array );

		return this;

	}

	copyColorsArray( colors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = colors.length; i < l; i ++ ) {

			let color = colors[ i ];

			if ( color === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );
				color = new Color();

			}

			array[ offset ++ ] = color.r;
			array[ offset ++ ] = color.g;
			array[ offset ++ ] = color.b;

		}

		return this;

	}

	copyVector2sArray( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );
				vector = new Vector2();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;

		}

		return this;

	}

	copyVector3sArray( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );
				vector = new Vector3();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;

		}

		return this;

	}

	copyVector4sArray( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );
				vector = new Vector4();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;
			array[ offset ++ ] = vector.w;

		}

		return this;

	}

	applyMatrix3( m ) {

		if ( this.itemSize === 2 ) {

			for ( let i = 0, l = this.count; i < l; i ++ ) {

				_vector2$1.fromBufferAttribute( this, i );
				_vector2$1.applyMatrix3( m );

				this.setXY( i, _vector2$1.x, _vector2$1.y );

			}

		} else if ( this.itemSize === 3 ) {

			for ( let i = 0, l = this.count; i < l; i ++ ) {

				_vector$9.fromBufferAttribute( this, i );
				_vector$9.applyMatrix3( m );

				this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );

			}

		}

		return this;

	}

	applyMatrix4( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$9.x = this.getX( i );
			_vector$9.y = this.getY( i );
			_vector$9.z = this.getZ( i );

			_vector$9.applyMatrix4( m );

			this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );

		}

		return this;

	}

	applyNormalMatrix( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$9.x = this.getX( i );
			_vector$9.y = this.getY( i );
			_vector$9.z = this.getZ( i );

			_vector$9.applyNormalMatrix( m );

			this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );

		}

		return this;

	}

	transformDirection( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$9.x = this.getX( i );
			_vector$9.y = this.getY( i );
			_vector$9.z = this.getZ( i );

			_vector$9.transformDirection( m );

			this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );

		}

		return this;

	}

	set( value, offset = 0 ) {

		this.array.set( value, offset );

		return this;

	}

	getX( index ) {

		return this.array[ index * this.itemSize ];

	}

	setX( index, x ) {

		this.array[ index * this.itemSize ] = x;

		return this;

	}

	getY( index ) {

		return this.array[ index * this.itemSize + 1 ];

	}

	setY( index, y ) {

		this.array[ index * this.itemSize + 1 ] = y;

		return this;

	}

	getZ( index ) {

		return this.array[ index * this.itemSize + 2 ];

	}

	setZ( index, z ) {

		this.array[ index * this.itemSize + 2 ] = z;

		return this;

	}

	getW( index ) {

		return this.array[ index * this.itemSize + 3 ];

	}

	setW( index, w ) {

		this.array[ index * this.itemSize + 3 ] = w;

		return this;

	}

	setXY( index, x, y ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;

		return this;

	}

	setXYZ( index, x, y, z ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;

		return this;

	}

	setXYZW( index, x, y, z, w ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;
		this.array[ index + 3 ] = w;

		return this;

	}

	onUpload( callback ) {

		this.onUploadCallback = callback;

		return this;

	}

	clone() {

		return new this.constructor( this.array, this.itemSize ).copy( this );

	}

	toJSON() {

		const data = {
			itemSize: this.itemSize,
			type: this.array.constructor.name,
			array: Array.prototype.slice.call( this.array ),
			normalized: this.normalized
		};

		if ( this.name !== '' ) data.name = this.name;
		if ( this.usage !== StaticDrawUsage ) data.usage = this.usage;
		if ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;

		return data;

	}

}

BufferAttribute.prototype.isBufferAttribute = true;

//

class Int8BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Int8Array( array ), itemSize, normalized );

	}

}

class Uint8BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Uint8Array( array ), itemSize, normalized );

	}

}

class Uint8ClampedBufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Uint8ClampedArray( array ), itemSize, normalized );

	}

}

class Int16BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Int16Array( array ), itemSize, normalized );

	}

}

class Uint16BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Uint16Array( array ), itemSize, normalized );

	}

}

class Int32BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Int32Array( array ), itemSize, normalized );

	}

}

class Uint32BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Uint32Array( array ), itemSize, normalized );

	}

}

class Float16BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Uint16Array( array ), itemSize, normalized );

	}

}

Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;

class Float32BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Float32Array( array ), itemSize, normalized );

	}

}

class Float64BufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized ) {

		super( new Float64Array( array ), itemSize, normalized );

	}

}

let _id$1 = 0;

const _m1 = /*@__PURE__*/ new Matrix4();
const _obj = /*@__PURE__*/ new Object3D();
const _offset = /*@__PURE__*/ new Vector3();
const _box$1 = /*@__PURE__*/ new Box3();
const _boxMorphTargets = /*@__PURE__*/ new Box3();
const _vector$8 = /*@__PURE__*/ new Vector3();

class BufferGeometry extends EventDispatcher {

	constructor() {

		super();

		Object.defineProperty( this, 'id', { value: _id$1 ++ } );

		this.uuid = generateUUID();

		this.name = '';
		this.type = 'BufferGeometry';

		this.index = null;
		this.attributes = {};

		this.morphAttributes = {};
		this.morphTargetsRelative = false;

		this.groups = [];

		this.boundingBox = null;
		this.boundingSphere = null;

		this.drawRange = { start: 0, count: Infinity };

		this.userData = {};

	}

	getIndex() {

		return this.index;

	}

	setIndex( index ) {

		if ( Array.isArray( index ) ) {

			this.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );

		} else {

			this.index = index;

		}

		return this;

	}

	getAttribute( name ) {

		return this.attributes[ name ];

	}

	setAttribute( name, attribute ) {

		this.attributes[ name ] = attribute;

		return this;

	}

	deleteAttribute( name ) {

		delete this.attributes[ name ];

		return this;

	}

	hasAttribute( name ) {

		return this.attributes[ name ] !== undefined;

	}

	addGroup( start, count, materialIndex = 0 ) {

		this.groups.push( {

			start: start,
			count: count,
			materialIndex: materialIndex

		} );

	}

	clearGroups() {

		this.groups = [];

	}

	setDrawRange( start, count ) {

		this.drawRange.start = start;
		this.drawRange.count = count;

	}

	applyMatrix4( matrix ) {

		const position = this.attributes.position;

		if ( position !== undefined ) {

			position.applyMatrix4( matrix );

			position.needsUpdate = true;

		}

		const normal = this.attributes.normal;

		if ( normal !== undefined ) {

			const normalMatrix = new Matrix3().getNormalMatrix( matrix );

			normal.applyNormalMatrix( normalMatrix );

			normal.needsUpdate = true;

		}

		const tangent = this.attributes.tangent;

		if ( tangent !== undefined ) {

			tangent.transformDirection( matrix );

			tangent.needsUpdate = true;

		}

		if ( this.boundingBox !== null ) {

			this.computeBoundingBox();

		}

		if ( this.boundingSphere !== null ) {

			this.computeBoundingSphere();

		}

		return this;

	}

	applyQuaternion( q ) {

		_m1.makeRotationFromQuaternion( q );

		this.applyMatrix4( _m1 );

		return this;

	}

	rotateX( angle ) {

		// rotate geometry around world x-axis

		_m1.makeRotationX( angle );

		this.applyMatrix4( _m1 );

		return this;

	}

	rotateY( angle ) {

		// rotate geometry around world y-axis

		_m1.makeRotationY( angle );

		this.applyMatrix4( _m1 );

		return this;

	}

	rotateZ( angle ) {

		// rotate geometry around world z-axis

		_m1.makeRotationZ( angle );

		this.applyMatrix4( _m1 );

		return this;

	}

	translate( x, y, z ) {

		// translate geometry

		_m1.makeTranslation( x, y, z );

		this.applyMatrix4( _m1 );

		return this;

	}

	scale( x, y, z ) {

		// scale geometry

		_m1.makeScale( x, y, z );

		this.applyMatrix4( _m1 );

		return this;

	}

	lookAt( vector ) {

		_obj.lookAt( vector );

		_obj.updateMatrix();

		this.applyMatrix4( _obj.matrix );

		return this;

	}

	center() {

		this.computeBoundingBox();

		this.boundingBox.getCenter( _offset ).negate();

		this.translate( _offset.x, _offset.y, _offset.z );

		return this;

	}

	setFromPoints( points ) {

		const position = [];

		for ( let i = 0, l = points.length; i < l; i ++ ) {

			const point = points[ i ];
			position.push( point.x, point.y, point.z || 0 );

		}

		this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );

		return this;

	}

	computeBoundingBox() {

		if ( this.boundingBox === null ) {

			this.boundingBox = new Box3();

		}

		const position = this.attributes.position;
		const morphAttributesPosition = this.morphAttributes.position;

		if ( position && position.isGLBufferAttribute ) {

			console.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this );

			this.boundingBox.set(
				new Vector3( - Infinity, - Infinity, - Infinity ),
				new Vector3( + Infinity, + Infinity, + Infinity )
			);

			return;

		}

		if ( position !== undefined ) {

			this.boundingBox.setFromBufferAttribute( position );

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					_box$1.setFromBufferAttribute( morphAttribute );

					if ( this.morphTargetsRelative ) {

						_vector$8.addVectors( this.boundingBox.min, _box$1.min );
						this.boundingBox.expandByPoint( _vector$8 );

						_vector$8.addVectors( this.boundingBox.max, _box$1.max );
						this.boundingBox.expandByPoint( _vector$8 );

					} else {

						this.boundingBox.expandByPoint( _box$1.min );
						this.boundingBox.expandByPoint( _box$1.max );

					}

				}

			}

		} else {

			this.boundingBox.makeEmpty();

		}

		if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {

			console.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this );

		}

	}

	computeBoundingSphere() {

		if ( this.boundingSphere === null ) {

			this.boundingSphere = new Sphere();

		}

		const position = this.attributes.position;
		const morphAttributesPosition = this.morphAttributes.position;

		if ( position && position.isGLBufferAttribute ) {

			console.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this );

			this.boundingSphere.set( new Vector3(), Infinity );

			return;

		}

		if ( position ) {

			// first, find the center of the bounding sphere

			const center = this.boundingSphere.center;

			_box$1.setFromBufferAttribute( position );

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					_boxMorphTargets.setFromBufferAttribute( morphAttribute );

					if ( this.morphTargetsRelative ) {

						_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );
						_box$1.expandByPoint( _vector$8 );

						_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );
						_box$1.expandByPoint( _vector$8 );

					} else {

						_box$1.expandByPoint( _boxMorphTargets.min );
						_box$1.expandByPoint( _boxMorphTargets.max );

					}

				}

			}

			_box$1.getCenter( center );

			// second, try to find a boundingSphere with a radius smaller than the
			// boundingSphere of the boundingBox: sqrt(3) smaller in the best case

			let maxRadiusSq = 0;

			for ( let i = 0, il = position.count; i < il; i ++ ) {

				_vector$8.fromBufferAttribute( position, i );

				maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );

			}

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					const morphTargetsRelative = this.morphTargetsRelative;

					for ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {

						_vector$8.fromBufferAttribute( morphAttribute, j );

						if ( morphTargetsRelative ) {

							_offset.fromBufferAttribute( position, j );
							_vector$8.add( _offset );

						}

						maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );

					}

				}

			}

			this.boundingSphere.radius = Math.sqrt( maxRadiusSq );

			if ( isNaN( this.boundingSphere.radius ) ) {

				console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this );

			}

		}

	}

	computeTangents() {

		const index = this.index;
		const attributes = this.attributes;

		// based on http://www.terathon.com/code/tangent.html
		// (per vertex tangents)

		if ( index === null ||
			 attributes.position === undefined ||
			 attributes.normal === undefined ||
			 attributes.uv === undefined ) {

			console.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );
			return;

		}

		const indices = index.array;
		const positions = attributes.position.array;
		const normals = attributes.normal.array;
		const uvs = attributes.uv.array;

		const nVertices = positions.length / 3;

		if ( this.hasAttribute( 'tangent' ) === false ) {

			this.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );

		}

		const tangents = this.getAttribute( 'tangent' ).array;

		const tan1 = [], tan2 = [];

		for ( let i = 0; i < nVertices; i ++ ) {

			tan1[ i ] = new Vector3();
			tan2[ i ] = new Vector3();

		}

		const vA = new Vector3(),
			vB = new Vector3(),
			vC = new Vector3(),

			uvA = new Vector2(),
			uvB = new Vector2(),
			uvC = new Vector2(),

			sdir = new Vector3(),
			tdir = new Vector3();

		function handleTriangle( a, b, c ) {

			vA.fromArray( positions, a * 3 );
			vB.fromArray( positions, b * 3 );
			vC.fromArray( positions, c * 3 );

			uvA.fromArray( uvs, a * 2 );
			uvB.fromArray( uvs, b * 2 );
			uvC.fromArray( uvs, c * 2 );

			vB.sub( vA );
			vC.sub( vA );

			uvB.sub( uvA );
			uvC.sub( uvA );

			const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );

			// silently ignore degenerate uv triangles having coincident or colinear vertices

			if ( ! isFinite( r ) ) return;

			sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );
			tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );

			tan1[ a ].add( sdir );
			tan1[ b ].add( sdir );
			tan1[ c ].add( sdir );

			tan2[ a ].add( tdir );
			tan2[ b ].add( tdir );
			tan2[ c ].add( tdir );

		}

		let groups = this.groups;

		if ( groups.length === 0 ) {

			groups = [ {
				start: 0,
				count: indices.length
			} ];

		}

		for ( let i = 0, il = groups.length; i < il; ++ i ) {

			const group = groups[ i ];

			const start = group.start;
			const count = group.count;

			for ( let j = start, jl = start + count; j < jl; j += 3 ) {

				handleTriangle(
					indices[ j + 0 ],
					indices[ j + 1 ],
					indices[ j + 2 ]
				);

			}

		}

		const tmp = new Vector3(), tmp2 = new Vector3();
		const n = new Vector3(), n2 = new Vector3();

		function handleVertex( v ) {

			n.fromArray( normals, v * 3 );
			n2.copy( n );

			const t = tan1[ v ];

			// Gram-Schmidt orthogonalize

			tmp.copy( t );
			tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();

			// Calculate handedness

			tmp2.crossVectors( n2, t );
			const test = tmp2.dot( tan2[ v ] );
			const w = ( test < 0.0 ) ? - 1.0 : 1.0;

			tangents[ v * 4 ] = tmp.x;
			tangents[ v * 4 + 1 ] = tmp.y;
			tangents[ v * 4 + 2 ] = tmp.z;
			tangents[ v * 4 + 3 ] = w;

		}

		for ( let i = 0, il = groups.length; i < il; ++ i ) {

			const group = groups[ i ];

			const start = group.start;
			const count = group.count;

			for ( let j = start, jl = start + count; j < jl; j += 3 ) {

				handleVertex( indices[ j + 0 ] );
				handleVertex( indices[ j + 1 ] );
				handleVertex( indices[ j + 2 ] );

			}

		}

	}

	computeVertexNormals() {

		const index = this.index;
		const positionAttribute = this.getAttribute( 'position' );

		if ( positionAttribute !== undefined ) {

			let normalAttribute = this.getAttribute( 'normal' );

			if ( normalAttribute === undefined ) {

				normalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );
				this.setAttribute( 'normal', normalAttribute );

			} else {

				// reset existing normals to zero

				for ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {

					normalAttribute.setXYZ( i, 0, 0, 0 );

				}

			}

			const pA = new Vector3(), pB = new Vector3(), pC = new Vector3();
			const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();
			const cb = new Vector3(), ab = new Vector3();

			// indexed elements

			if ( index ) {

				for ( let i = 0, il = index.count; i < il; i += 3 ) {

					const vA = index.getX( i + 0 );
					const vB = index.getX( i + 1 );
					const vC = index.getX( i + 2 );

					pA.fromBufferAttribute( positionAttribute, vA );
					pB.fromBufferAttribute( positionAttribute, vB );
					pC.fromBufferAttribute( positionAttribute, vC );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					nA.fromBufferAttribute( normalAttribute, vA );
					nB.fromBufferAttribute( normalAttribute, vB );
					nC.fromBufferAttribute( normalAttribute, vC );

					nA.add( cb );
					nB.add( cb );
					nC.add( cb );

					normalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );
					normalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );
					normalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );

				}

			} else {

				// non-indexed elements (unconnected triangle soup)

				for ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {

					pA.fromBufferAttribute( positionAttribute, i + 0 );
					pB.fromBufferAttribute( positionAttribute, i + 1 );
					pC.fromBufferAttribute( positionAttribute, i + 2 );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					normalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );
					normalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );
					normalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );

				}

			}

			this.normalizeNormals();

			normalAttribute.needsUpdate = true;

		}

	}

	merge( geometry, offset ) {

		if ( ! ( geometry && geometry.isBufferGeometry ) ) {

			console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );
			return;

		}

		if ( offset === undefined ) {

			offset = 0;

			console.warn(
				'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '
				+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'
			);

		}

		const attributes = this.attributes;

		for ( const key in attributes ) {

			if ( geometry.attributes[ key ] === undefined ) continue;

			const attribute1 = attributes[ key ];
			const attributeArray1 = attribute1.array;

			const attribute2 = geometry.attributes[ key ];
			const attributeArray2 = attribute2.array;

			const attributeOffset = attribute2.itemSize * offset;
			const length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );

			for ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {

				attributeArray1[ j ] = attributeArray2[ i ];

			}

		}

		return this;

	}

	normalizeNormals() {

		const normals = this.attributes.normal;

		for ( let i = 0, il = normals.count; i < il; i ++ ) {

			_vector$8.fromBufferAttribute( normals, i );

			_vector$8.normalize();

			normals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );

		}

	}

	toNonIndexed() {

		function convertBufferAttribute( attribute, indices ) {

			const array = attribute.array;
			const itemSize = attribute.itemSize;
			const normalized = attribute.normalized;

			const array2 = new array.constructor( indices.length * itemSize );

			let index = 0, index2 = 0;

			for ( let i = 0, l = indices.length; i < l; i ++ ) {

				if ( attribute.isInterleavedBufferAttribute ) {

					index = indices[ i ] * attribute.data.stride + attribute.offset;

				} else {

					index = indices[ i ] * itemSize;

				}

				for ( let j = 0; j < itemSize; j ++ ) {

					array2[ index2 ++ ] = array[ index ++ ];

				}

			}

			return new BufferAttribute( array2, itemSize, normalized );

		}

		//

		if ( this.index === null ) {

			console.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );
			return this;

		}

		const geometry2 = new BufferGeometry();

		const indices = this.index.array;
		const attributes = this.attributes;

		// attributes

		for ( const name in attributes ) {

			const attribute = attributes[ name ];

			const newAttribute = convertBufferAttribute( attribute, indices );

			geometry2.setAttribute( name, newAttribute );

		}

		// morph attributes

		const morphAttributes = this.morphAttributes;

		for ( const name in morphAttributes ) {

			const morphArray = [];
			const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

			for ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {

				const attribute = morphAttribute[ i ];

				const newAttribute = convertBufferAttribute( attribute, indices );

				morphArray.push( newAttribute );

			}

			geometry2.morphAttributes[ name ] = morphArray;

		}

		geometry2.morphTargetsRelative = this.morphTargetsRelative;

		// groups

		const groups = this.groups;

		for ( let i = 0, l = groups.length; i < l; i ++ ) {

			const group = groups[ i ];
			geometry2.addGroup( group.start, group.count, group.materialIndex );

		}

		return geometry2;

	}

	toJSON() {

		const data = {
			metadata: {
				version: 4.5,
				type: 'BufferGeometry',
				generator: 'BufferGeometry.toJSON'
			}
		};

		// standard BufferGeometry serialization

		data.uuid = this.uuid;
		data.type = this.type;
		if ( this.name !== '' ) data.name = this.name;
		if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;

		if ( this.parameters !== undefined ) {

			const parameters = this.parameters;

			for ( const key in parameters ) {

				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];

			}

			return data;

		}

		// for simplicity the code assumes attributes are not shared across geometries, see #15811

		data.data = { attributes: {} };

		const index = this.index;

		if ( index !== null ) {

			data.data.index = {
				type: index.array.constructor.name,
				array: Array.prototype.slice.call( index.array )
			};

		}

		const attributes = this.attributes;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];

			data.data.attributes[ key ] = attribute.toJSON( data.data );

		}

		const morphAttributes = {};
		let hasMorphAttributes = false;

		for ( const key in this.morphAttributes ) {

			const attributeArray = this.morphAttributes[ key ];

			const array = [];

			for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {

				const attribute = attributeArray[ i ];

				array.push( attribute.toJSON( data.data ) );

			}

			if ( array.length > 0 ) {

				morphAttributes[ key ] = array;

				hasMorphAttributes = true;

			}

		}

		if ( hasMorphAttributes ) {

			data.data.morphAttributes = morphAttributes;
			data.data.morphTargetsRelative = this.morphTargetsRelative;

		}

		const groups = this.groups;

		if ( groups.length > 0 ) {

			data.data.groups = JSON.parse( JSON.stringify( groups ) );

		}

		const boundingSphere = this.boundingSphere;

		if ( boundingSphere !== null ) {

			data.data.boundingSphere = {
				center: boundingSphere.center.toArray(),
				radius: boundingSphere.radius
			};

		}

		return data;

	}

	clone() {

		 return new this.constructor().copy( this );

	}

	copy( source ) {

		// reset

		this.index = null;
		this.attributes = {};
		this.morphAttributes = {};
		this.groups = [];
		this.boundingBox = null;
		this.boundingSphere = null;

		// used for storing cloned, shared data

		const data = {};

		// name

		this.name = source.name;

		// index

		const index = source.index;

		if ( index !== null ) {

			this.setIndex( index.clone( data ) );

		}

		// attributes

		const attributes = source.attributes;

		for ( const name in attributes ) {

			const attribute = attributes[ name ];
			this.setAttribute( name, attribute.clone( data ) );

		}

		// morph attributes

		const morphAttributes = source.morphAttributes;

		for ( const name in morphAttributes ) {

			const array = [];
			const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

			for ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {

				array.push( morphAttribute[ i ].clone( data ) );

			}

			this.morphAttributes[ name ] = array;

		}

		this.morphTargetsRelative = source.morphTargetsRelative;

		// groups

		const groups = source.groups;

		for ( let i = 0, l = groups.length; i < l; i ++ ) {

			const group = groups[ i ];
			this.addGroup( group.start, group.count, group.materialIndex );

		}

		// bounding box

		const boundingBox = source.boundingBox;

		if ( boundingBox !== null ) {

			this.boundingBox = boundingBox.clone();

		}

		// bounding sphere

		const boundingSphere = source.boundingSphere;

		if ( boundingSphere !== null ) {

			this.boundingSphere = boundingSphere.clone();

		}

		// draw range

		this.drawRange.start = source.drawRange.start;
		this.drawRange.count = source.drawRange.count;

		// user data

		this.userData = source.userData;

		// geometry generator parameters

		if ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );

		return this;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

}

BufferGeometry.prototype.isBufferGeometry = true;

const _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();
const _ray$2 = /*@__PURE__*/ new Ray();
const _sphere$3 = /*@__PURE__*/ new Sphere();

const _vA$1 = /*@__PURE__*/ new Vector3();
const _vB$1 = /*@__PURE__*/ new Vector3();
const _vC$1 = /*@__PURE__*/ new Vector3();

const _tempA = /*@__PURE__*/ new Vector3();
const _tempB = /*@__PURE__*/ new Vector3();
const _tempC = /*@__PURE__*/ new Vector3();

const _morphA = /*@__PURE__*/ new Vector3();
const _morphB = /*@__PURE__*/ new Vector3();
const _morphC = /*@__PURE__*/ new Vector3();

const _uvA$1 = /*@__PURE__*/ new Vector2();
const _uvB$1 = /*@__PURE__*/ new Vector2();
const _uvC$1 = /*@__PURE__*/ new Vector2();

const _intersectionPoint = /*@__PURE__*/ new Vector3();
const _intersectionPointWorld = /*@__PURE__*/ new Vector3();

class Mesh extends Object3D {

	constructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {

		super();

		this.type = 'Mesh';

		this.geometry = geometry;
		this.material = material;

		this.updateMorphTargets();

	}

	copy( source ) {

		super.copy( source );

		if ( source.morphTargetInfluences !== undefined ) {

			this.morphTargetInfluences = source.morphTargetInfluences.slice();

		}

		if ( source.morphTargetDictionary !== undefined ) {

			this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );

		}

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	}

	updateMorphTargets() {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	}

	raycast( raycaster, intersects ) {

		const geometry = this.geometry;
		const material = this.material;
		const matrixWorld = this.matrixWorld;

		if ( material === undefined ) return;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$3.copy( geometry.boundingSphere );
		_sphere$3.applyMatrix4( matrixWorld );

		if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;

		//

		_inverseMatrix$2.copy( matrixWorld ).invert();
		_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );

		// Check boundingBox before continuing

		if ( geometry.boundingBox !== null ) {

			if ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;

		}

		let intersection;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const position = geometry.attributes.position;
			const morphPosition = geometry.morphAttributes.position;
			const morphTargetsRelative = geometry.morphTargetsRelative;
			const uv = geometry.attributes.uv;
			const uv2 = geometry.attributes.uv2;
			const groups = geometry.groups;
			const drawRange = geometry.drawRange;

			if ( index !== null ) {

				// indexed buffer geometry

				if ( Array.isArray( material ) ) {

					for ( let i = 0, il = groups.length; i < il; i ++ ) {

						const group = groups[ i ];
						const groupMaterial = material[ group.materialIndex ];

						const start = Math.max( group.start, drawRange.start );
						const end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );

						for ( let j = start, jl = end; j < jl; j += 3 ) {

							const a = index.getX( j );
							const b = index.getX( j + 1 );
							const c = index.getX( j + 2 );

							intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics
								intersection.face.materialIndex = group.materialIndex;
								intersects.push( intersection );

							}

						}

					}

				} else {

					const start = Math.max( 0, drawRange.start );
					const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );

					for ( let i = start, il = end; i < il; i += 3 ) {

						const a = index.getX( i );
						const b = index.getX( i + 1 );
						const c = index.getX( i + 2 );

						intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

						if ( intersection ) {

							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics
							intersects.push( intersection );

						}

					}

				}

			} else if ( position !== undefined ) {

				// non-indexed buffer geometry

				if ( Array.isArray( material ) ) {

					for ( let i = 0, il = groups.length; i < il; i ++ ) {

						const group = groups[ i ];
						const groupMaterial = material[ group.materialIndex ];

						const start = Math.max( group.start, drawRange.start );
						const end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );

						for ( let j = start, jl = end; j < jl; j += 3 ) {

							const a = j;
							const b = j + 1;
							const c = j + 2;

							intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics
								intersection.face.materialIndex = group.materialIndex;
								intersects.push( intersection );

							}

						}

					}

				} else {

					const start = Math.max( 0, drawRange.start );
					const end = Math.min( position.count, ( drawRange.start + drawRange.count ) );

					for ( let i = start, il = end; i < il; i += 3 ) {

						const a = i;
						const b = i + 1;
						const c = i + 2;

						intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

						if ( intersection ) {

							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics
							intersects.push( intersection );

						}

					}

				}

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	}

}

Mesh.prototype.isMesh = true;

function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {

	let intersect;

	if ( material.side === BackSide ) {

		intersect = ray.intersectTriangle( pC, pB, pA, true, point );

	} else {

		intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );

	}

	if ( intersect === null ) return null;

	_intersectionPointWorld.copy( point );
	_intersectionPointWorld.applyMatrix4( object.matrixWorld );

	const distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );

	if ( distance < raycaster.near || distance > raycaster.far ) return null;

	return {
		distance: distance,
		point: _intersectionPointWorld.clone(),
		object: object
	};

}

function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {

	_vA$1.fromBufferAttribute( position, a );
	_vB$1.fromBufferAttribute( position, b );
	_vC$1.fromBufferAttribute( position, c );

	const morphInfluences = object.morphTargetInfluences;

	if ( morphPosition && morphInfluences ) {

		_morphA.set( 0, 0, 0 );
		_morphB.set( 0, 0, 0 );
		_morphC.set( 0, 0, 0 );

		for ( let i = 0, il = morphPosition.length; i < il; i ++ ) {

			const influence = morphInfluences[ i ];
			const morphAttribute = morphPosition[ i ];

			if ( influence === 0 ) continue;

			_tempA.fromBufferAttribute( morphAttribute, a );
			_tempB.fromBufferAttribute( morphAttribute, b );
			_tempC.fromBufferAttribute( morphAttribute, c );

			if ( morphTargetsRelative ) {

				_morphA.addScaledVector( _tempA, influence );
				_morphB.addScaledVector( _tempB, influence );
				_morphC.addScaledVector( _tempC, influence );

			} else {

				_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );
				_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );
				_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );

			}

		}

		_vA$1.add( _morphA );
		_vB$1.add( _morphB );
		_vC$1.add( _morphC );

	}

	if ( object.isSkinnedMesh ) {

		object.boneTransform( a, _vA$1 );
		object.boneTransform( b, _vB$1 );
		object.boneTransform( c, _vC$1 );

	}

	const intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );

	if ( intersection ) {

		if ( uv ) {

			_uvA$1.fromBufferAttribute( uv, a );
			_uvB$1.fromBufferAttribute( uv, b );
			_uvC$1.fromBufferAttribute( uv, c );

			intersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );

		}

		if ( uv2 ) {

			_uvA$1.fromBufferAttribute( uv2, a );
			_uvB$1.fromBufferAttribute( uv2, b );
			_uvC$1.fromBufferAttribute( uv2, c );

			intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );

		}

		const face = {
			a: a,
			b: b,
			c: c,
			normal: new Vector3(),
			materialIndex: 0
		};

		Triangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );

		intersection.face = face;

	}

	return intersection;

}

class BoxGeometry extends BufferGeometry {

	constructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {

		super();

		this.type = 'BoxGeometry';

		this.parameters = {
			width: width,
			height: height,
			depth: depth,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			depthSegments: depthSegments
		};

		const scope = this;

		// segments

		widthSegments = Math.floor( widthSegments );
		heightSegments = Math.floor( heightSegments );
		depthSegments = Math.floor( depthSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let numberOfVertices = 0;
		let groupStart = 0;

		// build each side of the box geometry

		buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px
		buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx
		buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py
		buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny
		buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz
		buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {

			const segmentWidth = width / gridX;
			const segmentHeight = height / gridY;

			const widthHalf = width / 2;
			const heightHalf = height / 2;
			const depthHalf = depth / 2;

			const gridX1 = gridX + 1;
			const gridY1 = gridY + 1;

			let vertexCounter = 0;
			let groupCount = 0;

			const vector = new Vector3();

			// generate vertices, normals and uvs

			for ( let iy = 0; iy < gridY1; iy ++ ) {

				const y = iy * segmentHeight - heightHalf;

				for ( let ix = 0; ix < gridX1; ix ++ ) {

					const x = ix * segmentWidth - widthHalf;

					// set values to correct vector component

					vector[ u ] = x * udir;
					vector[ v ] = y * vdir;
					vector[ w ] = depthHalf;

					// now apply vector to vertex buffer

					vertices.push( vector.x, vector.y, vector.z );

					// set values to correct vector component

					vector[ u ] = 0;
					vector[ v ] = 0;
					vector[ w ] = depth > 0 ? 1 : - 1;

					// now apply vector to normal buffer

					normals.push( vector.x, vector.y, vector.z );

					// uvs

					uvs.push( ix / gridX );
					uvs.push( 1 - ( iy / gridY ) );

					// counters

					vertexCounter += 1;

				}

			}

			// indices

			// 1. you need three indices to draw a single face
			// 2. a single segment consists of two faces
			// 3. so we need to generate six (2*3) indices per segment

			for ( let iy = 0; iy < gridY; iy ++ ) {

				for ( let ix = 0; ix < gridX; ix ++ ) {

					const a = numberOfVertices + ix + gridX1 * iy;
					const b = numberOfVertices + ix + gridX1 * ( iy + 1 );
					const c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );
					const d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

					// increase counter

					groupCount += 6;

				}

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, materialIndex );

			// calculate new start value for groups

			groupStart += groupCount;

			// update total number of vertices

			numberOfVertices += vertexCounter;

		}

	}

	static fromJSON( data ) {

		return new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );

	}

}

/**
 * Uniform Utilities
 */

function cloneUniforms( src ) {

	const dst = {};

	for ( const u in src ) {

		dst[ u ] = {};

		for ( const p in src[ u ] ) {

			const property = src[ u ][ p ];

			if ( property && ( property.isColor ||
				property.isMatrix3 || property.isMatrix4 ||
				property.isVector2 || property.isVector3 || property.isVector4 ||
				property.isTexture || property.isQuaternion ) ) {

				dst[ u ][ p ] = property.clone();

			} else if ( Array.isArray( property ) ) {

				dst[ u ][ p ] = property.slice();

			} else {

				dst[ u ][ p ] = property;

			}

		}

	}

	return dst;

}

function mergeUniforms( uniforms ) {

	const merged = {};

	for ( let u = 0; u < uniforms.length; u ++ ) {

		const tmp = cloneUniforms( uniforms[ u ] );

		for ( const p in tmp ) {

			merged[ p ] = tmp[ p ];

		}

	}

	return merged;

}

// Legacy

const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };

var default_vertex = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";

var default_fragment = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";

/**
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>
 * }
 */

class ShaderMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'ShaderMaterial';

		this.defines = {};
		this.uniforms = {};

		this.vertexShader = default_vertex;
		this.fragmentShader = default_fragment;

		this.linewidth = 1;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false; // set to use scene fog
		this.lights = false; // set to use scene lights
		this.clipping = false; // set to use user-defined clipping planes

		this.extensions = {
			derivatives: false, // set to use derivatives
			fragDepth: false, // set to use fragment depth values
			drawBuffers: false, // set to use draw buffers
			shaderTextureLOD: false // set to use shader texture LOD
		};

		// When rendered geometry doesn't include these attributes but the material does,
		// use these default values in WebGL. This avoids errors when buffer data is missing.
		this.defaultAttributeValues = {
			'color': [ 1, 1, 1 ],
			'uv': [ 0, 0 ],
			'uv2': [ 0, 0 ]
		};

		this.index0AttributeName = undefined;
		this.uniformsNeedUpdate = false;

		this.glslVersion = null;

		if ( parameters !== undefined ) {

			if ( parameters.attributes !== undefined ) {

				console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );

			}

			this.setValues( parameters );

		}

	}

	copy( source ) {

		super.copy( source );

		this.fragmentShader = source.fragmentShader;
		this.vertexShader = source.vertexShader;

		this.uniforms = cloneUniforms( source.uniforms );

		this.defines = Object.assign( {}, source.defines );

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		this.lights = source.lights;
		this.clipping = source.clipping;

		this.extensions = Object.assign( {}, source.extensions );

		this.glslVersion = source.glslVersion;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.glslVersion = this.glslVersion;
		data.uniforms = {};

		for ( const name in this.uniforms ) {

			const uniform = this.uniforms[ name ];
			const value = uniform.value;

			if ( value && value.isTexture ) {

				data.uniforms[ name ] = {
					type: 't',
					value: value.toJSON( meta ).uuid
				};

			} else if ( value && value.isColor ) {

				data.uniforms[ name ] = {
					type: 'c',
					value: value.getHex()
				};

			} else if ( value && value.isVector2 ) {

				data.uniforms[ name ] = {
					type: 'v2',
					value: value.toArray()
				};

			} else if ( value && value.isVector3 ) {

				data.uniforms[ name ] = {
					type: 'v3',
					value: value.toArray()
				};

			} else if ( value && value.isVector4 ) {

				data.uniforms[ name ] = {
					type: 'v4',
					value: value.toArray()
				};

			} else if ( value && value.isMatrix3 ) {

				data.uniforms[ name ] = {
					type: 'm3',
					value: value.toArray()
				};

			} else if ( value && value.isMatrix4 ) {

				data.uniforms[ name ] = {
					type: 'm4',
					value: value.toArray()
				};

			} else {

				data.uniforms[ name ] = {
					value: value
				};

				// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far

			}

		}

		if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;

		data.vertexShader = this.vertexShader;
		data.fragmentShader = this.fragmentShader;

		const extensions = {};

		for ( const key in this.extensions ) {

			if ( this.extensions[ key ] === true ) extensions[ key ] = true;

		}

		if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;

		return data;

	}

}

ShaderMaterial.prototype.isShaderMaterial = true;

class Camera extends Object3D {

	constructor() {

		super();

		this.type = 'Camera';

		this.matrixWorldInverse = new Matrix4();

		this.projectionMatrix = new Matrix4();
		this.projectionMatrixInverse = new Matrix4();

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		this.matrixWorldInverse.copy( source.matrixWorldInverse );

		this.projectionMatrix.copy( source.projectionMatrix );
		this.projectionMatrixInverse.copy( source.projectionMatrixInverse );

		return this;

	}

	getWorldDirection( target ) {

		this.updateWorldMatrix( true, false );

		const e = this.matrixWorld.elements;

		return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		this.matrixWorldInverse.copy( this.matrixWorld ).invert();

	}

	updateWorldMatrix( updateParents, updateChildren ) {

		super.updateWorldMatrix( updateParents, updateChildren );

		this.matrixWorldInverse.copy( this.matrixWorld ).invert();

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

Camera.prototype.isCamera = true;

class PerspectiveCamera extends Camera {

	constructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {

		super();

		this.type = 'PerspectiveCamera';

		this.fov = fov;
		this.zoom = 1;

		this.near = near;
		this.far = far;
		this.focus = 10;

		this.aspect = aspect;
		this.view = null;

		this.filmGauge = 35;	// width of the film (default in millimeters)
		this.filmOffset = 0;	// horizontal film offset (same unit as gauge)

		this.updateProjectionMatrix();

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		this.fov = source.fov;
		this.zoom = source.zoom;

		this.near = source.near;
		this.far = source.far;
		this.focus = source.focus;

		this.aspect = source.aspect;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		this.filmGauge = source.filmGauge;
		this.filmOffset = source.filmOffset;

		return this;

	}

	/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */
	setFocalLength( focalLength ) {

		/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */
		const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;

		this.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );
		this.updateProjectionMatrix();

	}

	/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */
	getFocalLength() {

		const vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );

		return 0.5 * this.getFilmHeight() / vExtentSlope;

	}

	getEffectiveFOV() {

		return RAD2DEG * 2 * Math.atan(
			Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );

	}

	getFilmWidth() {

		// film not completely covered in portrait format (aspect < 1)
		return this.filmGauge * Math.min( this.aspect, 1 );

	}

	getFilmHeight() {

		// film not completely covered in landscape format (aspect > 1)
		return this.filmGauge / Math.max( this.aspect, 1 );

	}

	/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   const w = 1920;
	 *   const h = 1080;
	 *   const fullWidth = w * 3;
	 *   const fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */
	setViewOffset( fullWidth, fullHeight, x, y, width, height ) {

		this.aspect = fullWidth / fullHeight;

		if ( this.view === null ) {

			this.view = {
				enabled: true,
				fullWidth: 1,
				fullHeight: 1,
				offsetX: 0,
				offsetY: 0,
				width: 1,
				height: 1
			};

		}

		this.view.enabled = true;
		this.view.fullWidth = fullWidth;
		this.view.fullHeight = fullHeight;
		this.view.offsetX = x;
		this.view.offsetY = y;
		this.view.width = width;
		this.view.height = height;

		this.updateProjectionMatrix();

	}

	clearViewOffset() {

		if ( this.view !== null ) {

			this.view.enabled = false;

		}

		this.updateProjectionMatrix();

	}

	updateProjectionMatrix() {

		const near = this.near;
		let top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;
		let height = 2 * top;
		let width = this.aspect * height;
		let left = - 0.5 * width;
		const view = this.view;

		if ( this.view !== null && this.view.enabled ) {

			const fullWidth = view.fullWidth,
				fullHeight = view.fullHeight;

			left += view.offsetX * width / fullWidth;
			top -= view.offsetY * height / fullHeight;
			width *= view.width / fullWidth;
			height *= view.height / fullHeight;

		}

		const skew = this.filmOffset;
		if ( skew !== 0 ) left += near * skew / this.getFilmWidth();

		this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );

		this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.fov = this.fov;
		data.object.zoom = this.zoom;

		data.object.near = this.near;
		data.object.far = this.far;
		data.object.focus = this.focus;

		data.object.aspect = this.aspect;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		data.object.filmGauge = this.filmGauge;
		data.object.filmOffset = this.filmOffset;

		return data;

	}

}

PerspectiveCamera.prototype.isPerspectiveCamera = true;

const fov = 90, aspect = 1;

class CubeCamera extends Object3D {

	constructor( near, far, renderTarget ) {

		super();

		this.type = 'CubeCamera';

		if ( renderTarget.isWebGLCubeRenderTarget !== true ) {

			console.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );
			return;

		}

		this.renderTarget = renderTarget;

		const cameraPX = new PerspectiveCamera( fov, aspect, near, far );
		cameraPX.layers = this.layers;
		cameraPX.up.set( 0, - 1, 0 );
		cameraPX.lookAt( new Vector3( 1, 0, 0 ) );
		this.add( cameraPX );

		const cameraNX = new PerspectiveCamera( fov, aspect, near, far );
		cameraNX.layers = this.layers;
		cameraNX.up.set( 0, - 1, 0 );
		cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );
		this.add( cameraNX );

		const cameraPY = new PerspectiveCamera( fov, aspect, near, far );
		cameraPY.layers = this.layers;
		cameraPY.up.set( 0, 0, 1 );
		cameraPY.lookAt( new Vector3( 0, 1, 0 ) );
		this.add( cameraPY );

		const cameraNY = new PerspectiveCamera( fov, aspect, near, far );
		cameraNY.layers = this.layers;
		cameraNY.up.set( 0, 0, - 1 );
		cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );
		this.add( cameraNY );

		const cameraPZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraPZ.layers = this.layers;
		cameraPZ.up.set( 0, - 1, 0 );
		cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );
		this.add( cameraPZ );

		const cameraNZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraNZ.layers = this.layers;
		cameraNZ.up.set( 0, - 1, 0 );
		cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );
		this.add( cameraNZ );

	}

	update( renderer, scene ) {

		if ( this.parent === null ) this.updateMatrixWorld();

		const renderTarget = this.renderTarget;

		const [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;

		const currentXrEnabled = renderer.xr.enabled;
		const currentRenderTarget = renderer.getRenderTarget();

		renderer.xr.enabled = false;

		const generateMipmaps = renderTarget.texture.generateMipmaps;

		renderTarget.texture.generateMipmaps = false;

		renderer.setRenderTarget( renderTarget, 0 );
		renderer.render( scene, cameraPX );

		renderer.setRenderTarget( renderTarget, 1 );
		renderer.render( scene, cameraNX );

		renderer.setRenderTarget( renderTarget, 2 );
		renderer.render( scene, cameraPY );

		renderer.setRenderTarget( renderTarget, 3 );
		renderer.render( scene, cameraNY );

		renderer.setRenderTarget( renderTarget, 4 );
		renderer.render( scene, cameraPZ );

		renderTarget.texture.generateMipmaps = generateMipmaps;

		renderer.setRenderTarget( renderTarget, 5 );
		renderer.render( scene, cameraNZ );

		renderer.setRenderTarget( currentRenderTarget );

		renderer.xr.enabled = currentXrEnabled;

		renderTarget.texture.needsPMREMUpdate = true;

	}

}

class CubeTexture extends Texture {

	constructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

		images = images !== undefined ? images : [];
		mapping = mapping !== undefined ? mapping : CubeReflectionMapping;

		super( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.flipY = false;

	}

	get images() {

		return this.image;

	}

	set images( value ) {

		this.image = value;

	}

}

CubeTexture.prototype.isCubeTexture = true;

class WebGLCubeRenderTarget extends WebGLRenderTarget {

	constructor( size, options = {} ) {

		super( size, size, options );

		const image = { width: size, height: size, depth: 1 };
		const images = [ image, image, image, image, image, image ];

		this.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );

		// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)
		// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,
		// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.

		// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped
		// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture
		// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).

		this.texture.isRenderTargetTexture = true;

		this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;
		this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;

	}

	fromEquirectangularTexture( renderer, texture ) {

		this.texture.type = texture.type;
		this.texture.format = RGBAFormat; // see #18859
		this.texture.encoding = texture.encoding;

		this.texture.generateMipmaps = texture.generateMipmaps;
		this.texture.minFilter = texture.minFilter;
		this.texture.magFilter = texture.magFilter;

		const shader = {

			uniforms: {
				tEquirect: { value: null },
			},

			vertexShader: /* glsl */`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,

			fragmentShader: /* glsl */`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
		};

		const geometry = new BoxGeometry( 5, 5, 5 );

		const material = new ShaderMaterial( {

			name: 'CubemapFromEquirect',

			uniforms: cloneUniforms( shader.uniforms ),
			vertexShader: shader.vertexShader,
			fragmentShader: shader.fragmentShader,
			side: BackSide,
			blending: NoBlending

		} );

		material.uniforms.tEquirect.value = texture;

		const mesh = new Mesh( geometry, material );

		const currentMinFilter = texture.minFilter;

		// Avoid blurred poles
		if ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;

		const camera = new CubeCamera( 1, 10, this );
		camera.update( renderer, mesh );

		texture.minFilter = currentMinFilter;

		mesh.geometry.dispose();
		mesh.material.dispose();

		return this;

	}

	clear( renderer, color, depth, stencil ) {

		const currentRenderTarget = renderer.getRenderTarget();

		for ( let i = 0; i < 6; i ++ ) {

			renderer.setRenderTarget( this, i );

			renderer.clear( color, depth, stencil );

		}

		renderer.setRenderTarget( currentRenderTarget );

	}

}

WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;

const _vector1 = /*@__PURE__*/ new Vector3();
const _vector2 = /*@__PURE__*/ new Vector3();
const _normalMatrix = /*@__PURE__*/ new Matrix3();

class Plane {

	constructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {

		// normal is assumed to be normalized

		this.normal = normal;
		this.constant = constant;

	}

	set( normal, constant ) {

		this.normal.copy( normal );
		this.constant = constant;

		return this;

	}

	setComponents( x, y, z, w ) {

		this.normal.set( x, y, z );
		this.constant = w;

		return this;

	}

	setFromNormalAndCoplanarPoint( normal, point ) {

		this.normal.copy( normal );
		this.constant = - point.dot( this.normal );

		return this;

	}

	setFromCoplanarPoints( a, b, c ) {

		const normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();

		// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?

		this.setFromNormalAndCoplanarPoint( normal, a );

		return this;

	}

	copy( plane ) {

		this.normal.copy( plane.normal );
		this.constant = plane.constant;

		return this;

	}

	normalize() {

		// Note: will lead to a divide by zero if the plane is invalid.

		const inverseNormalLength = 1.0 / this.normal.length();
		this.normal.multiplyScalar( inverseNormalLength );
		this.constant *= inverseNormalLength;

		return this;

	}

	negate() {

		this.constant *= - 1;
		this.normal.negate();

		return this;

	}

	distanceToPoint( point ) {

		return this.normal.dot( point ) + this.constant;

	}

	distanceToSphere( sphere ) {

		return this.distanceToPoint( sphere.center ) - sphere.radius;

	}

	projectPoint( point, target ) {

		return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );

	}

	intersectLine( line, target ) {

		const direction = line.delta( _vector1 );

		const denominator = this.normal.dot( direction );

		if ( denominator === 0 ) {

			// line is coplanar, return origin
			if ( this.distanceToPoint( line.start ) === 0 ) {

				return target.copy( line.start );

			}

			// Unsure if this is the correct method to handle this case.
			return null;

		}

		const t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;

		if ( t < 0 || t > 1 ) {

			return null;

		}

		return target.copy( direction ).multiplyScalar( t ).add( line.start );

	}

	intersectsLine( line ) {

		// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.

		const startSign = this.distanceToPoint( line.start );
		const endSign = this.distanceToPoint( line.end );

		return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );

	}

	intersectsBox( box ) {

		return box.intersectsPlane( this );

	}

	intersectsSphere( sphere ) {

		return sphere.intersectsPlane( this );

	}

	coplanarPoint( target ) {

		return target.copy( this.normal ).multiplyScalar( - this.constant );

	}

	applyMatrix4( matrix, optionalNormalMatrix ) {

		const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );

		const referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );

		const normal = this.normal.applyMatrix3( normalMatrix ).normalize();

		this.constant = - referencePoint.dot( normal );

		return this;

	}

	translate( offset ) {

		this.constant -= offset.dot( this.normal );

		return this;

	}

	equals( plane ) {

		return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

Plane.prototype.isPlane = true;

const _sphere$2 = /*@__PURE__*/ new Sphere();
const _vector$7 = /*@__PURE__*/ new Vector3();

class Frustum {

	constructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {

		this.planes = [ p0, p1, p2, p3, p4, p5 ];

	}

	set( p0, p1, p2, p3, p4, p5 ) {

		const planes = this.planes;

		planes[ 0 ].copy( p0 );
		planes[ 1 ].copy( p1 );
		planes[ 2 ].copy( p2 );
		planes[ 3 ].copy( p3 );
		planes[ 4 ].copy( p4 );
		planes[ 5 ].copy( p5 );

		return this;

	}

	copy( frustum ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			planes[ i ].copy( frustum.planes[ i ] );

		}

		return this;

	}

	setFromProjectionMatrix( m ) {

		const planes = this.planes;
		const me = m.elements;
		const me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];
		const me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];
		const me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];
		const me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];

		planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
		planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
		planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
		planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
		planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
		planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();

		return this;

	}

	intersectsObject( object ) {

		const geometry = object.geometry;

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );

		return this.intersectsSphere( _sphere$2 );

	}

	intersectsSprite( sprite ) {

		_sphere$2.center.set( 0, 0, 0 );
		_sphere$2.radius = 0.7071067811865476;
		_sphere$2.applyMatrix4( sprite.matrixWorld );

		return this.intersectsSphere( _sphere$2 );

	}

	intersectsSphere( sphere ) {

		const planes = this.planes;
		const center = sphere.center;
		const negRadius = - sphere.radius;

		for ( let i = 0; i < 6; i ++ ) {

			const distance = planes[ i ].distanceToPoint( center );

			if ( distance < negRadius ) {

				return false;

			}

		}

		return true;

	}

	intersectsBox( box ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			const plane = planes[ i ];

			// corner at max distance

			_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;
			_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;
			_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;

			if ( plane.distanceToPoint( _vector$7 ) < 0 ) {

				return false;

			}

		}

		return true;

	}

	containsPoint( point ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			if ( planes[ i ].distanceToPoint( point ) < 0 ) {

				return false;

			}

		}

		return true;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

function WebGLAnimation() {

	let context = null;
	let isAnimating = false;
	let animationLoop = null;
	let requestId = null;

	function onAnimationFrame( time, frame ) {

		animationLoop( time, frame );

		requestId = context.requestAnimationFrame( onAnimationFrame );

	}

	return {

		start: function () {

			if ( isAnimating === true ) return;
			if ( animationLoop === null ) return;

			requestId = context.requestAnimationFrame( onAnimationFrame );

			isAnimating = true;

		},

		stop: function () {

			context.cancelAnimationFrame( requestId );

			isAnimating = false;

		},

		setAnimationLoop: function ( callback ) {

			animationLoop = callback;

		},

		setContext: function ( value ) {

			context = value;

		}

	};

}

function WebGLAttributes( gl, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	const buffers = new WeakMap();

	function createBuffer( attribute, bufferType ) {

		const array = attribute.array;
		const usage = attribute.usage;

		const buffer = gl.createBuffer();

		gl.bindBuffer( bufferType, buffer );
		gl.bufferData( bufferType, array, usage );

		attribute.onUploadCallback();

		let type;

		if ( array instanceof Float32Array ) {

			type = 5126;

		} else if ( array instanceof Uint16Array ) {

			if ( attribute.isFloat16BufferAttribute ) {

				if ( isWebGL2 ) {

					type = 5131;

				} else {

					throw new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );

				}

			} else {

				type = 5123;

			}

		} else if ( array instanceof Int16Array ) {

			type = 5122;

		} else if ( array instanceof Uint32Array ) {

			type = 5125;

		} else if ( array instanceof Int32Array ) {

			type = 5124;

		} else if ( array instanceof Int8Array ) {

			type = 5120;

		} else if ( array instanceof Uint8Array ) {

			type = 5121;

		} else if ( array instanceof Uint8ClampedArray ) {

			type = 5121;

		} else {

			throw new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );

		}

		return {
			buffer: buffer,
			type: type,
			bytesPerElement: array.BYTES_PER_ELEMENT,
			version: attribute.version
		};

	}

	function updateBuffer( buffer, attribute, bufferType ) {

		const array = attribute.array;
		const updateRange = attribute.updateRange;

		gl.bindBuffer( bufferType, buffer );

		if ( updateRange.count === - 1 ) {

			// Not using update ranges

			gl.bufferSubData( bufferType, 0, array );

		} else {

			if ( isWebGL2 ) {

				gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
					array, updateRange.offset, updateRange.count );

			} else {

				gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
					array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );

			}

			updateRange.count = - 1; // reset range

		}

	}

	//

	function get( attribute ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		return buffers.get( attribute );

	}

	function remove( attribute ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		const data = buffers.get( attribute );

		if ( data ) {

			gl.deleteBuffer( data.buffer );

			buffers.delete( attribute );

		}

	}

	function update( attribute, bufferType ) {

		if ( attribute.isGLBufferAttribute ) {

			const cached = buffers.get( attribute );

			if ( ! cached || cached.version < attribute.version ) {

				buffers.set( attribute, {
					buffer: attribute.buffer,
					type: attribute.type,
					bytesPerElement: attribute.elementSize,
					version: attribute.version
				} );

			}

			return;

		}

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		const data = buffers.get( attribute );

		if ( data === undefined ) {

			buffers.set( attribute, createBuffer( attribute, bufferType ) );

		} else if ( data.version < attribute.version ) {

			updateBuffer( data.buffer, attribute, bufferType );

			data.version = attribute.version;

		}

	}

	return {

		get: get,
		remove: remove,
		update: update

	};

}

class PlaneGeometry extends BufferGeometry {

	constructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {

		super();
		this.type = 'PlaneGeometry';

		this.parameters = {
			width: width,
			height: height,
			widthSegments: widthSegments,
			heightSegments: heightSegments
		};

		const width_half = width / 2;
		const height_half = height / 2;

		const gridX = Math.floor( widthSegments );
		const gridY = Math.floor( heightSegments );

		const gridX1 = gridX + 1;
		const gridY1 = gridY + 1;

		const segment_width = width / gridX;
		const segment_height = height / gridY;

		//

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		for ( let iy = 0; iy < gridY1; iy ++ ) {

			const y = iy * segment_height - height_half;

			for ( let ix = 0; ix < gridX1; ix ++ ) {

				const x = ix * segment_width - width_half;

				vertices.push( x, - y, 0 );

				normals.push( 0, 0, 1 );

				uvs.push( ix / gridX );
				uvs.push( 1 - ( iy / gridY ) );

			}

		}

		for ( let iy = 0; iy < gridY; iy ++ ) {

			for ( let ix = 0; ix < gridX; ix ++ ) {

				const a = ix + gridX1 * iy;
				const b = ix + gridX1 * ( iy + 1 );
				const c = ( ix + 1 ) + gridX1 * ( iy + 1 );
				const d = ( ix + 1 ) + gridX1 * iy;

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	static fromJSON( data ) {

		return new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );

	}

}

var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";

var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

var alphatest_fragment = "#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif";

var alphatest_pars_fragment = "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif";

var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif";

var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";

var begin_vertex = "vec3 transformed = vec3( position );";

var beginnormal_vertex = "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";

var bsdfs = "vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif";

var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";

var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";

var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";

var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";

var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";

var color_fragment = "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif";

var color_pars_fragment = "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif";

var color_pars_vertex = "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif";

var color_vertex = "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif";

var common = "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";

var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif";

var defaultnormal_vertex = "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";

var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";

var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";

var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";

var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";

var encodings_fragment = "gl_FragColor = linearToOutputTexel( gl_FragColor );";

var encodings_pars_fragment = "vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}";

var envmap_fragment = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";

var envmap_common_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";

var envmap_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";

var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";

var envmap_vertex = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";

var fog_vertex = "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif";

var fog_pars_vertex = "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif";

var fog_fragment = "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";

var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";

var gradientmap_pars_fragment = "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";

var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif";

var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";

var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";

var lights_pars_begin = "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif";

var envmap_physical_pars_fragment = "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif";

var lights_toon_fragment = "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";

var lights_toon_pars_fragment = "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";

var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";

var lights_phong_pars_fragment = "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";

var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif";

var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";

var lights_fragment_begin = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";

var lights_fragment_maps = "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif";

var lights_fragment_end = "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";

var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";

var logdepthbuf_pars_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";

var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";

var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";

var map_fragment = "#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif";

var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";

var map_particle_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";

var map_particle_pars_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";

var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";

var morphcolor_vertex = "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ]\n\t\t#endif\n\t}\n#endif";

var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif";

var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif";

var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif";

var normal_fragment_begin = "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";

var normal_fragment_maps = "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif";

var normal_pars_fragment = "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif";

var normal_pars_vertex = "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif";

var normal_vertex = "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif";

var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif";

var clearcoat_normal_fragment_begin = "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";

var clearcoat_normal_fragment_maps = "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif";

var clearcoat_pars_fragment = "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";

var output_fragment = "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );";

var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";

var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";

var project_vertex = "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";

var dithering_fragment = "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";

var dithering_pars_fragment = "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";

var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";

var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";

var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";

var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";

var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";

var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";

var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";

var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";

var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";

var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";

var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";

var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";

var tonemapping_fragment = "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";

var tonemapping_pars_fragment = "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";

var transmission_fragment = "#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif";

var transmission_pars_fragment = "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif";

var uv_pars_fragment = "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";

var uv_pars_vertex = "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";

var uv_vertex = "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";

var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";

var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";

var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";

var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";

const vertex$g = "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";

const fragment$g = "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

const vertex$f = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";

const fragment$f = "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

const vertex$e = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";

const fragment$e = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";

const vertex$d = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";

const fragment$d = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";

const vertex$c = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";

const fragment$c = "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

const vertex$b = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

const fragment$b = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

const vertex$a = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";

const fragment$a = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$9 = "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

const fragment$9 = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$8 = "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";

const fragment$8 = "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$7 = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";

const fragment$7 = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}";

const vertex$6 = "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

const fragment$6 = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$5 = "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}";

const fragment$5 = "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$4 = "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

const fragment$4 = "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

const vertex$3 = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";

const fragment$3 = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

const vertex$2 = "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

const fragment$2 = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

const vertex$1 = "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

const fragment$1 = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

const ShaderChunk = {
	alphamap_fragment: alphamap_fragment,
	alphamap_pars_fragment: alphamap_pars_fragment,
	alphatest_fragment: alphatest_fragment,
	alphatest_pars_fragment: alphatest_pars_fragment,
	aomap_fragment: aomap_fragment,
	aomap_pars_fragment: aomap_pars_fragment,
	begin_vertex: begin_vertex,
	beginnormal_vertex: beginnormal_vertex,
	bsdfs: bsdfs,
	bumpmap_pars_fragment: bumpmap_pars_fragment,
	clipping_planes_fragment: clipping_planes_fragment,
	clipping_planes_pars_fragment: clipping_planes_pars_fragment,
	clipping_planes_pars_vertex: clipping_planes_pars_vertex,
	clipping_planes_vertex: clipping_planes_vertex,
	color_fragment: color_fragment,
	color_pars_fragment: color_pars_fragment,
	color_pars_vertex: color_pars_vertex,
	color_vertex: color_vertex,
	common: common,
	cube_uv_reflection_fragment: cube_uv_reflection_fragment,
	defaultnormal_vertex: defaultnormal_vertex,
	displacementmap_pars_vertex: displacementmap_pars_vertex,
	displacementmap_vertex: displacementmap_vertex,
	emissivemap_fragment: emissivemap_fragment,
	emissivemap_pars_fragment: emissivemap_pars_fragment,
	encodings_fragment: encodings_fragment,
	encodings_pars_fragment: encodings_pars_fragment,
	envmap_fragment: envmap_fragment,
	envmap_common_pars_fragment: envmap_common_pars_fragment,
	envmap_pars_fragment: envmap_pars_fragment,
	envmap_pars_vertex: envmap_pars_vertex,
	envmap_physical_pars_fragment: envmap_physical_pars_fragment,
	envmap_vertex: envmap_vertex,
	fog_vertex: fog_vertex,
	fog_pars_vertex: fog_pars_vertex,
	fog_fragment: fog_fragment,
	fog_pars_fragment: fog_pars_fragment,
	gradientmap_pars_fragment: gradientmap_pars_fragment,
	lightmap_fragment: lightmap_fragment,
	lightmap_pars_fragment: lightmap_pars_fragment,
	lights_lambert_vertex: lights_lambert_vertex,
	lights_pars_begin: lights_pars_begin,
	lights_toon_fragment: lights_toon_fragment,
	lights_toon_pars_fragment: lights_toon_pars_fragment,
	lights_phong_fragment: lights_phong_fragment,
	lights_phong_pars_fragment: lights_phong_pars_fragment,
	lights_physical_fragment: lights_physical_fragment,
	lights_physical_pars_fragment: lights_physical_pars_fragment,
	lights_fragment_begin: lights_fragment_begin,
	lights_fragment_maps: lights_fragment_maps,
	lights_fragment_end: lights_fragment_end,
	logdepthbuf_fragment: logdepthbuf_fragment,
	logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,
	logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,
	logdepthbuf_vertex: logdepthbuf_vertex,
	map_fragment: map_fragment,
	map_pars_fragment: map_pars_fragment,
	map_particle_fragment: map_particle_fragment,
	map_particle_pars_fragment: map_particle_pars_fragment,
	metalnessmap_fragment: metalnessmap_fragment,
	metalnessmap_pars_fragment: metalnessmap_pars_fragment,
	morphcolor_vertex: morphcolor_vertex,
	morphnormal_vertex: morphnormal_vertex,
	morphtarget_pars_vertex: morphtarget_pars_vertex,
	morphtarget_vertex: morphtarget_vertex,
	normal_fragment_begin: normal_fragment_begin,
	normal_fragment_maps: normal_fragment_maps,
	normal_pars_fragment: normal_pars_fragment,
	normal_pars_vertex: normal_pars_vertex,
	normal_vertex: normal_vertex,
	normalmap_pars_fragment: normalmap_pars_fragment,
	clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,
	clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,
	clearcoat_pars_fragment: clearcoat_pars_fragment,
	output_fragment: output_fragment,
	packing: packing,
	premultiplied_alpha_fragment: premultiplied_alpha_fragment,
	project_vertex: project_vertex,
	dithering_fragment: dithering_fragment,
	dithering_pars_fragment: dithering_pars_fragment,
	roughnessmap_fragment: roughnessmap_fragment,
	roughnessmap_pars_fragment: roughnessmap_pars_fragment,
	shadowmap_pars_fragment: shadowmap_pars_fragment,
	shadowmap_pars_vertex: shadowmap_pars_vertex,
	shadowmap_vertex: shadowmap_vertex,
	shadowmask_pars_fragment: shadowmask_pars_fragment,
	skinbase_vertex: skinbase_vertex,
	skinning_pars_vertex: skinning_pars_vertex,
	skinning_vertex: skinning_vertex,
	skinnormal_vertex: skinnormal_vertex,
	specularmap_fragment: specularmap_fragment,
	specularmap_pars_fragment: specularmap_pars_fragment,
	tonemapping_fragment: tonemapping_fragment,
	tonemapping_pars_fragment: tonemapping_pars_fragment,
	transmission_fragment: transmission_fragment,
	transmission_pars_fragment: transmission_pars_fragment,
	uv_pars_fragment: uv_pars_fragment,
	uv_pars_vertex: uv_pars_vertex,
	uv_vertex: uv_vertex,
	uv2_pars_fragment: uv2_pars_fragment,
	uv2_pars_vertex: uv2_pars_vertex,
	uv2_vertex: uv2_vertex,
	worldpos_vertex: worldpos_vertex,

	background_vert: vertex$g,
	background_frag: fragment$g,
	cube_vert: vertex$f,
	cube_frag: fragment$f,
	depth_vert: vertex$e,
	depth_frag: fragment$e,
	distanceRGBA_vert: vertex$d,
	distanceRGBA_frag: fragment$d,
	equirect_vert: vertex$c,
	equirect_frag: fragment$c,
	linedashed_vert: vertex$b,
	linedashed_frag: fragment$b,
	meshbasic_vert: vertex$a,
	meshbasic_frag: fragment$a,
	meshlambert_vert: vertex$9,
	meshlambert_frag: fragment$9,
	meshmatcap_vert: vertex$8,
	meshmatcap_frag: fragment$8,
	meshnormal_vert: vertex$7,
	meshnormal_frag: fragment$7,
	meshphong_vert: vertex$6,
	meshphong_frag: fragment$6,
	meshphysical_vert: vertex$5,
	meshphysical_frag: fragment$5,
	meshtoon_vert: vertex$4,
	meshtoon_frag: fragment$4,
	points_vert: vertex$3,
	points_frag: fragment$3,
	shadow_vert: vertex$2,
	shadow_frag: fragment$2,
	sprite_vert: vertex$1,
	sprite_frag: fragment$1
};

/**
 * Uniforms library for shared webgl shaders
 */

const UniformsLib = {

	common: {

		diffuse: { value: new Color( 0xffffff ) },
		opacity: { value: 1.0 },

		map: { value: null },
		uvTransform: { value: new Matrix3() },
		uv2Transform: { value: new Matrix3() },

		alphaMap: { value: null },
		alphaTest: { value: 0 }

	},

	specularmap: {

		specularMap: { value: null },

	},

	envmap: {

		envMap: { value: null },
		flipEnvMap: { value: - 1 },
		reflectivity: { value: 1.0 }, // basic, lambert, phong
		ior: { value: 1.5 }, // standard, physical
		refractionRatio: { value: 0.98 }

	},

	aomap: {

		aoMap: { value: null },
		aoMapIntensity: { value: 1 }

	},

	lightmap: {

		lightMap: { value: null },
		lightMapIntensity: { value: 1 }

	},

	emissivemap: {

		emissiveMap: { value: null }

	},

	bumpmap: {

		bumpMap: { value: null },
		bumpScale: { value: 1 }

	},

	normalmap: {

		normalMap: { value: null },
		normalScale: { value: new Vector2( 1, 1 ) }

	},

	displacementmap: {

		displacementMap: { value: null },
		displacementScale: { value: 1 },
		displacementBias: { value: 0 }

	},

	roughnessmap: {

		roughnessMap: { value: null }

	},

	metalnessmap: {

		metalnessMap: { value: null }

	},

	gradientmap: {

		gradientMap: { value: null }

	},

	fog: {

		fogDensity: { value: 0.00025 },
		fogNear: { value: 1 },
		fogFar: { value: 2000 },
		fogColor: { value: new Color( 0xffffff ) }

	},

	lights: {

		ambientLightColor: { value: [] },

		lightProbe: { value: [] },

		directionalLights: { value: [], properties: {
			direction: {},
			color: {}
		} },

		directionalLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		directionalShadowMap: { value: [] },
		directionalShadowMatrix: { value: [] },

		spotLights: { value: [], properties: {
			color: {},
			position: {},
			direction: {},
			distance: {},
			coneCos: {},
			penumbraCos: {},
			decay: {}
		} },

		spotLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		spotShadowMap: { value: [] },
		spotShadowMatrix: { value: [] },

		pointLights: { value: [], properties: {
			color: {},
			position: {},
			decay: {},
			distance: {}
		} },

		pointLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {},
			shadowCameraNear: {},
			shadowCameraFar: {}
		} },

		pointShadowMap: { value: [] },
		pointShadowMatrix: { value: [] },

		hemisphereLights: { value: [], properties: {
			direction: {},
			skyColor: {},
			groundColor: {}
		} },

		// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
		rectAreaLights: { value: [], properties: {
			color: {},
			position: {},
			width: {},
			height: {}
		} },

		ltc_1: { value: null },
		ltc_2: { value: null }

	},

	points: {

		diffuse: { value: new Color( 0xffffff ) },
		opacity: { value: 1.0 },
		size: { value: 1.0 },
		scale: { value: 1.0 },
		map: { value: null },
		alphaMap: { value: null },
		alphaTest: { value: 0 },
		uvTransform: { value: new Matrix3() }

	},

	sprite: {

		diffuse: { value: new Color( 0xffffff ) },
		opacity: { value: 1.0 },
		center: { value: new Vector2( 0.5, 0.5 ) },
		rotation: { value: 0.0 },
		map: { value: null },
		alphaMap: { value: null },
		alphaTest: { value: 0 },
		uvTransform: { value: new Matrix3() }

	}

};

const ShaderLib = {

	basic: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.meshbasic_vert,
		fragmentShader: ShaderChunk.meshbasic_frag

	},

	lambert: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) }
			}
		] ),

		vertexShader: ShaderChunk.meshlambert_vert,
		fragmentShader: ShaderChunk.meshlambert_frag

	},

	phong: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				specular: { value: new Color( 0x111111 ) },
				shininess: { value: 30 }
			}
		] ),

		vertexShader: ShaderChunk.meshphong_vert,
		fragmentShader: ShaderChunk.meshphong_frag

	},

	standard: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.roughnessmap,
			UniformsLib.metalnessmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				roughness: { value: 1.0 },
				metalness: { value: 0.0 },
				envMapIntensity: { value: 1 } // temporary
			}
		] ),

		vertexShader: ShaderChunk.meshphysical_vert,
		fragmentShader: ShaderChunk.meshphysical_frag

	},

	toon: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.gradientmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) }
			}
		] ),

		vertexShader: ShaderChunk.meshtoon_vert,
		fragmentShader: ShaderChunk.meshtoon_frag

	},

	matcap: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.fog,
			{
				matcap: { value: null }
			}
		] ),

		vertexShader: ShaderChunk.meshmatcap_vert,
		fragmentShader: ShaderChunk.meshmatcap_frag

	},

	points: {

		uniforms: mergeUniforms( [
			UniformsLib.points,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.points_vert,
		fragmentShader: ShaderChunk.points_frag

	},

	dashed: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.fog,
			{
				scale: { value: 1 },
				dashSize: { value: 1 },
				totalSize: { value: 2 }
			}
		] ),

		vertexShader: ShaderChunk.linedashed_vert,
		fragmentShader: ShaderChunk.linedashed_frag

	},

	depth: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.displacementmap
		] ),

		vertexShader: ShaderChunk.depth_vert,
		fragmentShader: ShaderChunk.depth_frag

	},

	normal: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			{
				opacity: { value: 1.0 }
			}
		] ),

		vertexShader: ShaderChunk.meshnormal_vert,
		fragmentShader: ShaderChunk.meshnormal_frag

	},

	sprite: {

		uniforms: mergeUniforms( [
			UniformsLib.sprite,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.sprite_vert,
		fragmentShader: ShaderChunk.sprite_frag

	},

	background: {

		uniforms: {
			uvTransform: { value: new Matrix3() },
			t2D: { value: null },
		},

		vertexShader: ShaderChunk.background_vert,
		fragmentShader: ShaderChunk.background_frag

	},
	/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */

	cube: {

		uniforms: mergeUniforms( [
			UniformsLib.envmap,
			{
				opacity: { value: 1.0 }
			}
		] ),

		vertexShader: ShaderChunk.cube_vert,
		fragmentShader: ShaderChunk.cube_frag

	},

	equirect: {

		uniforms: {
			tEquirect: { value: null },
		},

		vertexShader: ShaderChunk.equirect_vert,
		fragmentShader: ShaderChunk.equirect_frag

	},

	distanceRGBA: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.displacementmap,
			{
				referencePosition: { value: new Vector3() },
				nearDistance: { value: 1 },
				farDistance: { value: 1000 }
			}
		] ),

		vertexShader: ShaderChunk.distanceRGBA_vert,
		fragmentShader: ShaderChunk.distanceRGBA_frag

	},

	shadow: {

		uniforms: mergeUniforms( [
			UniformsLib.lights,
			UniformsLib.fog,
			{
				color: { value: new Color( 0x00000 ) },
				opacity: { value: 1.0 }
			},
		] ),

		vertexShader: ShaderChunk.shadow_vert,
		fragmentShader: ShaderChunk.shadow_frag

	}

};

ShaderLib.physical = {

	uniforms: mergeUniforms( [
		ShaderLib.standard.uniforms,
		{
			clearcoat: { value: 0 },
			clearcoatMap: { value: null },
			clearcoatRoughness: { value: 0 },
			clearcoatRoughnessMap: { value: null },
			clearcoatNormalScale: { value: new Vector2( 1, 1 ) },
			clearcoatNormalMap: { value: null },
			sheen: { value: 0 },
			sheenColor: { value: new Color( 0x000000 ) },
			sheenColorMap: { value: null },
			sheenRoughness: { value: 1 },
			sheenRoughnessMap: { value: null },
			transmission: { value: 0 },
			transmissionMap: { value: null },
			transmissionSamplerSize: { value: new Vector2() },
			transmissionSamplerMap: { value: null },
			thickness: { value: 0 },
			thicknessMap: { value: null },
			attenuationDistance: { value: 0 },
			attenuationColor: { value: new Color( 0x000000 ) },
			specularIntensity: { value: 1 },
			specularIntensityMap: { value: null },
			specularColor: { value: new Color( 1, 1, 1 ) },
			specularColorMap: { value: null },
		}
	] ),

	vertexShader: ShaderChunk.meshphysical_vert,
	fragmentShader: ShaderChunk.meshphysical_frag

};

function WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {

	const clearColor = new Color( 0x000000 );
	let clearAlpha = alpha === true ? 0 : 1;

	let planeMesh;
	let boxMesh;

	let currentBackground = null;
	let currentBackgroundVersion = 0;
	let currentTonemapping = null;

	function render( renderList, scene ) {

		let forceClear = false;
		let background = scene.isScene === true ? scene.background : null;

		if ( background && background.isTexture ) {

			background = cubemaps.get( background );

		}

		// Ignore background in AR
		// TODO: Reconsider this.

		const xr = renderer.xr;
		const session = xr.getSession && xr.getSession();

		if ( session && session.environmentBlendMode === 'additive' ) {

			background = null;

		}

		if ( background === null ) {

			setClear( clearColor, clearAlpha );

		} else if ( background && background.isColor ) {

			setClear( background, 1 );
			forceClear = true;

		}

		if ( renderer.autoClear || forceClear ) {

			renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );

		}

		if ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {

			if ( boxMesh === undefined ) {

				boxMesh = new Mesh(
					new BoxGeometry( 1, 1, 1 ),
					new ShaderMaterial( {
						name: 'BackgroundCubeMaterial',
						uniforms: cloneUniforms( ShaderLib.cube.uniforms ),
						vertexShader: ShaderLib.cube.vertexShader,
						fragmentShader: ShaderLib.cube.fragmentShader,
						side: BackSide,
						depthTest: false,
						depthWrite: false,
						fog: false
					} )
				);

				boxMesh.geometry.deleteAttribute( 'normal' );
				boxMesh.geometry.deleteAttribute( 'uv' );

				boxMesh.onBeforeRender = function ( renderer, scene, camera ) {

					this.matrixWorld.copyPosition( camera.matrixWorld );

				};

				// enable code injection for non-built-in material
				Object.defineProperty( boxMesh.material, 'envMap', {

					get: function () {

						return this.uniforms.envMap.value;

					}

				} );

				objects.update( boxMesh );

			}

			boxMesh.material.uniforms.envMap.value = background;
			boxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;

			if ( currentBackground !== background ||
				currentBackgroundVersion !== background.version ||
				currentTonemapping !== renderer.toneMapping ) {

				boxMesh.material.needsUpdate = true;

				currentBackground = background;
				currentBackgroundVersion = background.version;
				currentTonemapping = renderer.toneMapping;

			}

			// push to the pre-sorted opaque render list
			renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );

		} else if ( background && background.isTexture ) {

			if ( planeMesh === undefined ) {

				planeMesh = new Mesh(
					new PlaneGeometry( 2, 2 ),
					new ShaderMaterial( {
						name: 'BackgroundMaterial',
						uniforms: cloneUniforms( ShaderLib.background.uniforms ),
						vertexShader: ShaderLib.background.vertexShader,
						fragmentShader: ShaderLib.background.fragmentShader,
						side: FrontSide,
						depthTest: false,
						depthWrite: false,
						fog: false
					} )
				);

				planeMesh.geometry.deleteAttribute( 'normal' );

				// enable code injection for non-built-in material
				Object.defineProperty( planeMesh.material, 'map', {

					get: function () {

						return this.uniforms.t2D.value;

					}

				} );

				objects.update( planeMesh );

			}

			planeMesh.material.uniforms.t2D.value = background;

			if ( background.matrixAutoUpdate === true ) {

				background.updateMatrix();

			}

			planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );

			if ( currentBackground !== background ||
				currentBackgroundVersion !== background.version ||
				currentTonemapping !== renderer.toneMapping ) {

				planeMesh.material.needsUpdate = true;

				currentBackground = background;
				currentBackgroundVersion = background.version;
				currentTonemapping = renderer.toneMapping;

			}


			// push to the pre-sorted opaque render list
			renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );

		}

	}

	function setClear( color, alpha ) {

		state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );

	}

	return {

		getClearColor: function () {

			return clearColor;

		},
		setClearColor: function ( color, alpha = 1 ) {

			clearColor.set( color );
			clearAlpha = alpha;
			setClear( clearColor, clearAlpha );

		},
		getClearAlpha: function () {

			return clearAlpha;

		},
		setClearAlpha: function ( alpha ) {

			clearAlpha = alpha;
			setClear( clearColor, clearAlpha );

		},
		render: render

	};

}

function WebGLBindingStates( gl, extensions, attributes, capabilities ) {

	const maxVertexAttributes = gl.getParameter( 34921 );

	const extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );
	const vaoAvailable = capabilities.isWebGL2 || extension !== null;

	const bindingStates = {};

	const defaultState = createBindingState( null );
	let currentState = defaultState;

	function setup( object, material, program, geometry, index ) {

		let updateBuffers = false;

		if ( vaoAvailable ) {

			const state = getBindingState( geometry, program, material );

			if ( currentState !== state ) {

				currentState = state;
				bindVertexArrayObject( currentState.object );

			}

			updateBuffers = needsUpdate( geometry, index );

			if ( updateBuffers ) saveCache( geometry, index );

		} else {

			const wireframe = ( material.wireframe === true );

			if ( currentState.geometry !== geometry.id ||
				currentState.program !== program.id ||
				currentState.wireframe !== wireframe ) {

				currentState.geometry = geometry.id;
				currentState.program = program.id;
				currentState.wireframe = wireframe;

				updateBuffers = true;

			}

		}

		if ( object.isInstancedMesh === true ) {

			updateBuffers = true;

		}

		if ( index !== null ) {

			attributes.update( index, 34963 );

		}

		if ( updateBuffers ) {

			setupVertexAttributes( object, material, program, geometry );

			if ( index !== null ) {

				gl.bindBuffer( 34963, attributes.get( index ).buffer );

			}

		}

	}

	function createVertexArrayObject() {

		if ( capabilities.isWebGL2 ) return gl.createVertexArray();

		return extension.createVertexArrayOES();

	}

	function bindVertexArrayObject( vao ) {

		if ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );

		return extension.bindVertexArrayOES( vao );

	}

	function deleteVertexArrayObject( vao ) {

		if ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );

		return extension.deleteVertexArrayOES( vao );

	}

	function getBindingState( geometry, program, material ) {

		const wireframe = ( material.wireframe === true );

		let programMap = bindingStates[ geometry.id ];

		if ( programMap === undefined ) {

			programMap = {};
			bindingStates[ geometry.id ] = programMap;

		}

		let stateMap = programMap[ program.id ];

		if ( stateMap === undefined ) {

			stateMap = {};
			programMap[ program.id ] = stateMap;

		}

		let state = stateMap[ wireframe ];

		if ( state === undefined ) {

			state = createBindingState( createVertexArrayObject() );
			stateMap[ wireframe ] = state;

		}

		return state;

	}

	function createBindingState( vao ) {

		const newAttributes = [];
		const enabledAttributes = [];
		const attributeDivisors = [];

		for ( let i = 0; i < maxVertexAttributes; i ++ ) {

			newAttributes[ i ] = 0;
			enabledAttributes[ i ] = 0;
			attributeDivisors[ i ] = 0;

		}

		return {

			// for backward compatibility on non-VAO support browser
			geometry: null,
			program: null,
			wireframe: false,

			newAttributes: newAttributes,
			enabledAttributes: enabledAttributes,
			attributeDivisors: attributeDivisors,
			object: vao,
			attributes: {},
			index: null

		};

	}

	function needsUpdate( geometry, index ) {

		const cachedAttributes = currentState.attributes;
		const geometryAttributes = geometry.attributes;

		let attributesNum = 0;

		for ( const key in geometryAttributes ) {

			const cachedAttribute = cachedAttributes[ key ];
			const geometryAttribute = geometryAttributes[ key ];

			if ( cachedAttribute === undefined ) return true;

			if ( cachedAttribute.attribute !== geometryAttribute ) return true;

			if ( cachedAttribute.data !== geometryAttribute.data ) return true;

			attributesNum ++;

		}

		if ( currentState.attributesNum !== attributesNum ) return true;

		if ( currentState.index !== index ) return true;

		return false;

	}

	function saveCache( geometry, index ) {

		const cache = {};
		const attributes = geometry.attributes;
		let attributesNum = 0;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];

			const data = {};
			data.attribute = attribute;

			if ( attribute.data ) {

				data.data = attribute.data;

			}

			cache[ key ] = data;

			attributesNum ++;

		}

		currentState.attributes = cache;
		currentState.attributesNum = attributesNum;

		currentState.index = index;

	}

	function initAttributes() {

		const newAttributes = currentState.newAttributes;

		for ( let i = 0, il = newAttributes.length; i < il; i ++ ) {

			newAttributes[ i ] = 0;

		}

	}

	function enableAttribute( attribute ) {

		enableAttributeAndDivisor( attribute, 0 );

	}

	function enableAttributeAndDivisor( attribute, meshPerAttribute ) {

		const newAttributes = currentState.newAttributes;
		const enabledAttributes = currentState.enabledAttributes;
		const attributeDivisors = currentState.attributeDivisors;

		newAttributes[ attribute ] = 1;

		if ( enabledAttributes[ attribute ] === 0 ) {

			gl.enableVertexAttribArray( attribute );
			enabledAttributes[ attribute ] = 1;

		}

		if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {

			const extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );

			extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );
			attributeDivisors[ attribute ] = meshPerAttribute;

		}

	}

	function disableUnusedAttributes() {

		const newAttributes = currentState.newAttributes;
		const enabledAttributes = currentState.enabledAttributes;

		for ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {

			if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {

				gl.disableVertexAttribArray( i );
				enabledAttributes[ i ] = 0;

			}

		}

	}

	function vertexAttribPointer( index, size, type, normalized, stride, offset ) {

		if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {

			gl.vertexAttribIPointer( index, size, type, stride, offset );

		} else {

			gl.vertexAttribPointer( index, size, type, normalized, stride, offset );

		}

	}

	function setupVertexAttributes( object, material, program, geometry ) {

		if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {

			if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;

		}

		initAttributes();

		const geometryAttributes = geometry.attributes;

		const programAttributes = program.getAttributes();

		const materialDefaultAttributeValues = material.defaultAttributeValues;

		for ( const name in programAttributes ) {

			const programAttribute = programAttributes[ name ];

			if ( programAttribute.location >= 0 ) {

				let geometryAttribute = geometryAttributes[ name ];

				if ( geometryAttribute === undefined ) {

					if ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;
					if ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;

				}

				if ( geometryAttribute !== undefined ) {

					const normalized = geometryAttribute.normalized;
					const size = geometryAttribute.itemSize;

					const attribute = attributes.get( geometryAttribute );

					// TODO Attribute may not be available on context restore

					if ( attribute === undefined ) continue;

					const buffer = attribute.buffer;
					const type = attribute.type;
					const bytesPerElement = attribute.bytesPerElement;

					if ( geometryAttribute.isInterleavedBufferAttribute ) {

						const data = geometryAttribute.data;
						const stride = data.stride;
						const offset = geometryAttribute.offset;

						if ( data.isInstancedInterleavedBuffer ) {

							for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

								enableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );

							}

							if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {

								geometry._maxInstanceCount = data.meshPerAttribute * data.count;

							}

						} else {

							for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

								enableAttribute( programAttribute.location + i );

							}

						}

						gl.bindBuffer( 34962, buffer );

						for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

							vertexAttribPointer(
								programAttribute.location + i,
								size / programAttribute.locationSize,
								type,
								normalized,
								stride * bytesPerElement,
								( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement
							);

						}

					} else {

						if ( geometryAttribute.isInstancedBufferAttribute ) {

							for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

								enableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );

							}

							if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {

								geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;

							}

						} else {

							for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

								enableAttribute( programAttribute.location + i );

							}

						}

						gl.bindBuffer( 34962, buffer );

						for ( let i = 0; i < programAttribute.locationSize; i ++ ) {

							vertexAttribPointer(
								programAttribute.location + i,
								size / programAttribute.locationSize,
								type,
								normalized,
								size * bytesPerElement,
								( size / programAttribute.locationSize ) * i * bytesPerElement
							);

						}

					}

				} else if ( materialDefaultAttributeValues !== undefined ) {

					const value = materialDefaultAttributeValues[ name ];

					if ( value !== undefined ) {

						switch ( value.length ) {

							case 2:
								gl.vertexAttrib2fv( programAttribute.location, value );
								break;

							case 3:
								gl.vertexAttrib3fv( programAttribute.location, value );
								break;

							case 4:
								gl.vertexAttrib4fv( programAttribute.location, value );
								break;

							default:
								gl.vertexAttrib1fv( programAttribute.location, value );

						}

					}

				}

			}

		}

		disableUnusedAttributes();

	}

	function dispose() {

		reset();

		for ( const geometryId in bindingStates ) {

			const programMap = bindingStates[ geometryId ];

			for ( const programId in programMap ) {

				const stateMap = programMap[ programId ];

				for ( const wireframe in stateMap ) {

					deleteVertexArrayObject( stateMap[ wireframe ].object );

					delete stateMap[ wireframe ];

				}

				delete programMap[ programId ];

			}

			delete bindingStates[ geometryId ];

		}

	}

	function releaseStatesOfGeometry( geometry ) {

		if ( bindingStates[ geometry.id ] === undefined ) return;

		const programMap = bindingStates[ geometry.id ];

		for ( const programId in programMap ) {

			const stateMap = programMap[ programId ];

			for ( const wireframe in stateMap ) {

				deleteVertexArrayObject( stateMap[ wireframe ].object );

				delete stateMap[ wireframe ];

			}

			delete programMap[ programId ];

		}

		delete bindingStates[ geometry.id ];

	}

	function releaseStatesOfProgram( program ) {

		for ( const geometryId in bindingStates ) {

			const programMap = bindingStates[ geometryId ];

			if ( programMap[ program.id ] === undefined ) continue;

			const stateMap = programMap[ program.id ];

			for ( const wireframe in stateMap ) {

				deleteVertexArrayObject( stateMap[ wireframe ].object );

				delete stateMap[ wireframe ];

			}

			delete programMap[ program.id ];

		}

	}

	function reset() {

		resetDefaultState();

		if ( currentState === defaultState ) return;

		currentState = defaultState;
		bindVertexArrayObject( currentState.object );

	}

	// for backward-compatilibity

	function resetDefaultState() {

		defaultState.geometry = null;
		defaultState.program = null;
		defaultState.wireframe = false;

	}

	return {

		setup: setup,
		reset: reset,
		resetDefaultState: resetDefaultState,
		dispose: dispose,
		releaseStatesOfGeometry: releaseStatesOfGeometry,
		releaseStatesOfProgram: releaseStatesOfProgram,

		initAttributes: initAttributes,
		enableAttribute: enableAttribute,
		disableUnusedAttributes: disableUnusedAttributes

	};

}

function WebGLBufferRenderer( gl, extensions, info, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	let mode;

	function setMode( value ) {

		mode = value;

	}

	function render( start, count ) {

		gl.drawArrays( mode, start, count );

		info.update( count, mode, 1 );

	}

	function renderInstances( start, count, primcount ) {

		if ( primcount === 0 ) return;

		let extension, methodName;

		if ( isWebGL2 ) {

			extension = gl;
			methodName = 'drawArraysInstanced';

		} else {

			extension = extensions.get( 'ANGLE_instanced_arrays' );
			methodName = 'drawArraysInstancedANGLE';

			if ( extension === null ) {

				console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
				return;

			}

		}

		extension[ methodName ]( mode, start, count, primcount );

		info.update( count, mode, primcount );

	}

	//

	this.setMode = setMode;
	this.render = render;
	this.renderInstances = renderInstances;

}

function WebGLCapabilities( gl, extensions, parameters ) {

	let maxAnisotropy;

	function getMaxAnisotropy() {

		if ( maxAnisotropy !== undefined ) return maxAnisotropy;

		if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {

			const extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );

		} else {

			maxAnisotropy = 0;

		}

		return maxAnisotropy;

	}

	function getMaxPrecision( precision ) {

		if ( precision === 'highp' ) {

			if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&
				gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {

				return 'highp';

			}

			precision = 'mediump';

		}

		if ( precision === 'mediump' ) {

			if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&
				gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {

				return 'mediump';

			}

		}

		return 'lowp';

	}

	const isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||
		( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );

	let precision = parameters.precision !== undefined ? parameters.precision : 'highp';
	const maxPrecision = getMaxPrecision( precision );

	if ( maxPrecision !== precision ) {

		console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );
		precision = maxPrecision;

	}

	const drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );

	const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;

	const maxTextures = gl.getParameter( 34930 );
	const maxVertexTextures = gl.getParameter( 35660 );
	const maxTextureSize = gl.getParameter( 3379 );
	const maxCubemapSize = gl.getParameter( 34076 );

	const maxAttributes = gl.getParameter( 34921 );
	const maxVertexUniforms = gl.getParameter( 36347 );
	const maxVaryings = gl.getParameter( 36348 );
	const maxFragmentUniforms = gl.getParameter( 36349 );

	const vertexTextures = maxVertexTextures > 0;
	const floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );
	const floatVertexTextures = vertexTextures && floatFragmentTextures;

	const maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;

	return {

		isWebGL2: isWebGL2,

		drawBuffers: drawBuffers,

		getMaxAnisotropy: getMaxAnisotropy,
		getMaxPrecision: getMaxPrecision,

		precision: precision,
		logarithmicDepthBuffer: logarithmicDepthBuffer,

		maxTextures: maxTextures,
		maxVertexTextures: maxVertexTextures,
		maxTextureSize: maxTextureSize,
		maxCubemapSize: maxCubemapSize,

		maxAttributes: maxAttributes,
		maxVertexUniforms: maxVertexUniforms,
		maxVaryings: maxVaryings,
		maxFragmentUniforms: maxFragmentUniforms,

		vertexTextures: vertexTextures,
		floatFragmentTextures: floatFragmentTextures,
		floatVertexTextures: floatVertexTextures,

		maxSamples: maxSamples

	};

}

function WebGLClipping( properties ) {

	const scope = this;

	let globalState = null,
		numGlobalPlanes = 0,
		localClippingEnabled = false,
		renderingShadows = false;

	const plane = new Plane(),
		viewNormalMatrix = new Matrix3(),

		uniform = { value: null, needsUpdate: false };

	this.uniform = uniform;
	this.numPlanes = 0;
	this.numIntersection = 0;

	this.init = function ( planes, enableLocalClipping, camera ) {

		const enabled =
			planes.length !== 0 ||
			enableLocalClipping ||
			// enable state of previous frame - the clipping code has to
			// run another frame in order to reset the state:
			numGlobalPlanes !== 0 ||
			localClippingEnabled;

		localClippingEnabled = enableLocalClipping;

		globalState = projectPlanes( planes, camera, 0 );
		numGlobalPlanes = planes.length;

		return enabled;

	};

	this.beginShadows = function () {

		renderingShadows = true;
		projectPlanes( null );

	};

	this.endShadows = function () {

		renderingShadows = false;
		resetGlobalState();

	};

	this.setState = function ( material, camera, useCache ) {

		const planes = material.clippingPlanes,
			clipIntersection = material.clipIntersection,
			clipShadows = material.clipShadows;

		const materialProperties = properties.get( material );

		if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {

			// there's no local clipping

			if ( renderingShadows ) {

				// there's no global clipping

				projectPlanes( null );

			} else {

				resetGlobalState();

			}

		} else {

			const nGlobal = renderingShadows ? 0 : numGlobalPlanes,
				lGlobal = nGlobal * 4;

			let dstArray = materialProperties.clippingState || null;

			uniform.value = dstArray; // ensure unique state

			dstArray = projectPlanes( planes, camera, lGlobal, useCache );

			for ( let i = 0; i !== lGlobal; ++ i ) {

				dstArray[ i ] = globalState[ i ];

			}

			materialProperties.clippingState = dstArray;
			this.numIntersection = clipIntersection ? this.numPlanes : 0;
			this.numPlanes += nGlobal;

		}


	};

	function resetGlobalState() {

		if ( uniform.value !== globalState ) {

			uniform.value = globalState;
			uniform.needsUpdate = numGlobalPlanes > 0;

		}

		scope.numPlanes = numGlobalPlanes;
		scope.numIntersection = 0;

	}

	function projectPlanes( planes, camera, dstOffset, skipTransform ) {

		const nPlanes = planes !== null ? planes.length : 0;
		let dstArray = null;

		if ( nPlanes !== 0 ) {

			dstArray = uniform.value;

			if ( skipTransform !== true || dstArray === null ) {

				const flatSize = dstOffset + nPlanes * 4,
					viewMatrix = camera.matrixWorldInverse;

				viewNormalMatrix.getNormalMatrix( viewMatrix );

				if ( dstArray === null || dstArray.length < flatSize ) {

					dstArray = new Float32Array( flatSize );

				}

				for ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {

					plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );

					plane.normal.toArray( dstArray, i4 );
					dstArray[ i4 + 3 ] = plane.constant;

				}

			}

			uniform.value = dstArray;
			uniform.needsUpdate = true;

		}

		scope.numPlanes = nPlanes;
		scope.numIntersection = 0;

		return dstArray;

	}

}

function WebGLCubeMaps( renderer ) {

	let cubemaps = new WeakMap();

	function mapTextureMapping( texture, mapping ) {

		if ( mapping === EquirectangularReflectionMapping ) {

			texture.mapping = CubeReflectionMapping;

		} else if ( mapping === EquirectangularRefractionMapping ) {

			texture.mapping = CubeRefractionMapping;

		}

		return texture;

	}

	function get( texture ) {

		if ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {

			const mapping = texture.mapping;

			if ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {

				if ( cubemaps.has( texture ) ) {

					const cubemap = cubemaps.get( texture ).texture;
					return mapTextureMapping( cubemap, texture.mapping );

				} else {

					const image = texture.image;

					if ( image && image.height > 0 ) {

						const renderTarget = new WebGLCubeRenderTarget( image.height / 2 );
						renderTarget.fromEquirectangularTexture( renderer, texture );
						cubemaps.set( texture, renderTarget );

						texture.addEventListener( 'dispose', onTextureDispose );

						return mapTextureMapping( renderTarget.texture, texture.mapping );

					} else {

						// image not yet ready. try the conversion next frame

						return null;

					}

				}

			}

		}

		return texture;

	}

	function onTextureDispose( event ) {

		const texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		const cubemap = cubemaps.get( texture );

		if ( cubemap !== undefined ) {

			cubemaps.delete( texture );
			cubemap.dispose();

		}

	}

	function dispose() {

		cubemaps = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

class OrthographicCamera extends Camera {

	constructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {

		super();

		this.type = 'OrthographicCamera';

		this.zoom = 1;
		this.view = null;

		this.left = left;
		this.right = right;
		this.top = top;
		this.bottom = bottom;

		this.near = near;
		this.far = far;

		this.updateProjectionMatrix();

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		this.left = source.left;
		this.right = source.right;
		this.top = source.top;
		this.bottom = source.bottom;
		this.near = source.near;
		this.far = source.far;

		this.zoom = source.zoom;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		return this;

	}

	setViewOffset( fullWidth, fullHeight, x, y, width, height ) {

		if ( this.view === null ) {

			this.view = {
				enabled: true,
				fullWidth: 1,
				fullHeight: 1,
				offsetX: 0,
				offsetY: 0,
				width: 1,
				height: 1
			};

		}

		this.view.enabled = true;
		this.view.fullWidth = fullWidth;
		this.view.fullHeight = fullHeight;
		this.view.offsetX = x;
		this.view.offsetY = y;
		this.view.width = width;
		this.view.height = height;

		this.updateProjectionMatrix();

	}

	clearViewOffset() {

		if ( this.view !== null ) {

			this.view.enabled = false;

		}

		this.updateProjectionMatrix();

	}

	updateProjectionMatrix() {

		const dx = ( this.right - this.left ) / ( 2 * this.zoom );
		const dy = ( this.top - this.bottom ) / ( 2 * this.zoom );
		const cx = ( this.right + this.left ) / 2;
		const cy = ( this.top + this.bottom ) / 2;

		let left = cx - dx;
		let right = cx + dx;
		let top = cy + dy;
		let bottom = cy - dy;

		if ( this.view !== null && this.view.enabled ) {

			const scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;
			const scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;

			left += scaleW * this.view.offsetX;
			right = left + scaleW * this.view.width;
			top -= scaleH * this.view.offsetY;
			bottom = top - scaleH * this.view.height;

		}

		this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );

		this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.zoom = this.zoom;
		data.object.left = this.left;
		data.object.right = this.right;
		data.object.top = this.top;
		data.object.bottom = this.bottom;
		data.object.near = this.near;
		data.object.far = this.far;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		return data;

	}

}

OrthographicCamera.prototype.isOrthographicCamera = true;

const LOD_MIN = 4;

// The standard deviations (radians) associated with the extra mips. These are
// chosen to approximate a Trowbridge-Reitz distribution function times the
// geometric shadowing function. These sigma values squared must match the
// variance #defines in cube_uv_reflection_fragment.glsl.js.
const EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];

// The maximum length of the blur for loop. Smaller sigmas will use fewer
// samples and exit early, but not recompile the shader.
const MAX_SAMPLES = 20;

const _flatCamera = /*@__PURE__*/ new OrthographicCamera();
const _clearColor = /*@__PURE__*/ new Color();
let _oldTarget = null;

// Golden Ratio
const PHI = ( 1 + Math.sqrt( 5 ) ) / 2;
const INV_PHI = 1 / PHI;

// Vertices of a dodecahedron (except the opposites, which represent the
// same axis), used as axis directions evenly spread on a sphere.
const _axisDirections = [
	/*@__PURE__*/ new Vector3( 1, 1, 1 ),
	/*@__PURE__*/ new Vector3( - 1, 1, 1 ),
	/*@__PURE__*/ new Vector3( 1, 1, - 1 ),
	/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),
	/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),
	/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),
	/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),
	/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),
	/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),
	/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];

/**
 * This class generates a Prefiltered, Mipmapped Radiance Environment Map
 * (PMREM) from a cubeMap environment texture. This allows different levels of
 * blur to be quickly accessed based on material roughness. It is packed into a
 * special CubeUV format that allows us to perform custom interpolation so that
 * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
 * chain, it only goes down to the LOD_MIN level (above), and then creates extra
 * even more filtered 'mips' at the same LOD_MIN resolution, associated with
 * higher roughness levels. In this way we maintain resolution to smoothly
 * interpolate diffuse lighting while limiting sampling computation.
 *
 * Paper: Fast, Accurate Image-Based Lighting
 * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view
*/

class PMREMGenerator {

	constructor( renderer ) {

		this._renderer = renderer;
		this._pingPongRenderTarget = null;

		this._lodMax = 0;
		this._cubeSize = 0;
		this._lodPlanes = [];
		this._sizeLods = [];
		this._sigmas = [];

		this._blurMaterial = null;
		this._cubemapMaterial = null;
		this._equirectMaterial = null;

		this._compileMaterial( this._blurMaterial );

	}

	/**
	 * Generates a PMREM from a supplied Scene, which can be faster than using an
	 * image if networking bandwidth is low. Optional sigma specifies a blur radius
	 * in radians to be applied to the scene before PMREM generation. Optional near
	 * and far planes ensure the scene is rendered in its entirety (the cubeCamera
	 * is placed at the origin).
	 */
	fromScene( scene, sigma = 0, near = 0.1, far = 100 ) {

		_oldTarget = this._renderer.getRenderTarget();

		this._setSize( 256 );

		const cubeUVRenderTarget = this._allocateTargets();
		cubeUVRenderTarget.depthBuffer = true;

		this._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );

		if ( sigma > 0 ) {

			this._blur( cubeUVRenderTarget, 0, 0, sigma );

		}

		this._applyPMREM( cubeUVRenderTarget );
		this._cleanup( cubeUVRenderTarget );

		return cubeUVRenderTarget;

	}

	/**
	 * Generates a PMREM from an equirectangular texture, which can be either LDR
	 * or HDR. The ideal input image size is 1k (1024 x 512),
	 * as this matches best with the 256 x 256 cubemap output.
	 */
	fromEquirectangular( equirectangular, renderTarget = null ) {

		return this._fromTexture( equirectangular, renderTarget );

	}

	/**
	 * Generates a PMREM from an cubemap texture, which can be either LDR
	 * or HDR. The ideal input cube size is 256 x 256,
	 * as this matches best with the 256 x 256 cubemap output.
	 */
	fromCubemap( cubemap, renderTarget = null ) {

		return this._fromTexture( cubemap, renderTarget );

	}

	/**
	 * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */
	compileCubemapShader() {

		if ( this._cubemapMaterial === null ) {

			this._cubemapMaterial = _getCubemapMaterial();
			this._compileMaterial( this._cubemapMaterial );

		}

	}

	/**
	 * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */
	compileEquirectangularShader() {

		if ( this._equirectMaterial === null ) {

			this._equirectMaterial = _getEquirectMaterial();
			this._compileMaterial( this._equirectMaterial );

		}

	}

	/**
	 * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
	 * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
	 * one of them will cause any others to also become unusable.
	 */
	dispose() {

		this._dispose();

		if ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();
		if ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();

	}

	// private interface

	_setSize( cubeSize ) {

		this._lodMax = Math.floor( Math.log2( cubeSize ) );
		this._cubeSize = Math.pow( 2, this._lodMax );

	}

	_dispose() {

		this._blurMaterial.dispose();

		if ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();

		for ( let i = 0; i < this._lodPlanes.length; i ++ ) {

			this._lodPlanes[ i ].dispose();

		}

	}

	_cleanup( outputTarget ) {

		this._renderer.setRenderTarget( _oldTarget );
		outputTarget.scissorTest = false;
		_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );

	}

	_fromTexture( texture, renderTarget ) {

		if ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {

			this._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );

		} else { // Equirectangular

			this._setSize( texture.image.width / 4 );

		}

		_oldTarget = this._renderer.getRenderTarget();

		const cubeUVRenderTarget = renderTarget || this._allocateTargets();
		this._textureToCubeUV( texture, cubeUVRenderTarget );
		this._applyPMREM( cubeUVRenderTarget );
		this._cleanup( cubeUVRenderTarget );

		return cubeUVRenderTarget;

	}

	_allocateTargets() {

		const width = 3 * Math.max( this._cubeSize, 16 * 7 );
		const height = 4 * this._cubeSize - 32;

		const params = {
			magFilter: LinearFilter,
			minFilter: LinearFilter,
			generateMipmaps: false,
			type: HalfFloatType,
			format: RGBAFormat,
			encoding: LinearEncoding,
			depthBuffer: false
		};

		const cubeUVRenderTarget = _createRenderTarget( width, height, params );

		if ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {

			if ( this._pingPongRenderTarget !== null ) {

				this._dispose();

			}

			this._pingPongRenderTarget = _createRenderTarget( width, height, params );

			const { _lodMax } = this;
			( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );

			this._blurMaterial = _getBlurShader( _lodMax, width, height );

		}

		return cubeUVRenderTarget;

	}

	_compileMaterial( material ) {

		const tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );
		this._renderer.compile( tmpMesh, _flatCamera );

	}

	_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {

		const fov = 90;
		const aspect = 1;
		const cubeCamera = new PerspectiveCamera( fov, aspect, near, far );
		const upSign = [ 1, - 1, 1, 1, 1, 1 ];
		const forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];
		const renderer = this._renderer;

		const originalAutoClear = renderer.autoClear;
		const toneMapping = renderer.toneMapping;
		renderer.getClearColor( _clearColor );

		renderer.toneMapping = NoToneMapping;
		renderer.autoClear = false;

		const backgroundMaterial = new MeshBasicMaterial( {
			name: 'PMREM.Background',
			side: BackSide,
			depthWrite: false,
			depthTest: false,
		} );

		const backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );

		let useSolidColor = false;
		const background = scene.background;

		if ( background ) {

			if ( background.isColor ) {

				backgroundMaterial.color.copy( background );
				scene.background = null;
				useSolidColor = true;

			}

		} else {

			backgroundMaterial.color.copy( _clearColor );
			useSolidColor = true;

		}

		for ( let i = 0; i < 6; i ++ ) {

			const col = i % 3;

			if ( col === 0 ) {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( forwardSign[ i ], 0, 0 );

			} else if ( col === 1 ) {

				cubeCamera.up.set( 0, 0, upSign[ i ] );
				cubeCamera.lookAt( 0, forwardSign[ i ], 0 );

			} else {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( 0, 0, forwardSign[ i ] );

			}

			const size = this._cubeSize;

			_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );

			renderer.setRenderTarget( cubeUVRenderTarget );

			if ( useSolidColor ) {

				renderer.render( backgroundBox, cubeCamera );

			}

			renderer.render( scene, cubeCamera );

		}

		backgroundBox.geometry.dispose();
		backgroundBox.material.dispose();

		renderer.toneMapping = toneMapping;
		renderer.autoClear = originalAutoClear;
		scene.background = background;

	}

	_textureToCubeUV( texture, cubeUVRenderTarget ) {

		const renderer = this._renderer;

		const isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );

		if ( isCubeTexture ) {

			if ( this._cubemapMaterial === null ) {

				this._cubemapMaterial = _getCubemapMaterial();

			}

			this._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;

		} else {

			if ( this._equirectMaterial === null ) {

				this._equirectMaterial = _getEquirectMaterial();

			}

		}

		const material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;
		const mesh = new Mesh( this._lodPlanes[ 0 ], material );

		const uniforms = material.uniforms;

		uniforms[ 'envMap' ].value = texture;

		const size = this._cubeSize;

		_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );

		renderer.setRenderTarget( cubeUVRenderTarget );
		renderer.render( mesh, _flatCamera );

	}

	_applyPMREM( cubeUVRenderTarget ) {

		const renderer = this._renderer;
		const autoClear = renderer.autoClear;
		renderer.autoClear = false;

		for ( let i = 1; i < this._lodPlanes.length; i ++ ) {

			const sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );

			const poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];

			this._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );

		}

		renderer.autoClear = autoClear;

	}

	/**
	 * This is a two-pass Gaussian blur for a cubemap. Normally this is done
	 * vertically and horizontally, but this breaks down on a cube. Here we apply
	 * the blur latitudinally (around the poles), and then longitudinally (towards
	 * the poles) to approximate the orthogonally-separable blur. It is least
	 * accurate at the poles, but still does a decent job.
	 */
	_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {

		const pingPongRenderTarget = this._pingPongRenderTarget;

		this._halfBlur(
			cubeUVRenderTarget,
			pingPongRenderTarget,
			lodIn,
			lodOut,
			sigma,
			'latitudinal',
			poleAxis );

		this._halfBlur(
			pingPongRenderTarget,
			cubeUVRenderTarget,
			lodOut,
			lodOut,
			sigma,
			'longitudinal',
			poleAxis );

	}

	_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {

		const renderer = this._renderer;
		const blurMaterial = this._blurMaterial;

		if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {

			console.error(
				'blur direction must be either latitudinal or longitudinal!' );

		}

		// Number of standard deviations at which to cut off the discrete approximation.
		const STANDARD_DEVIATIONS = 3;

		const blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );
		const blurUniforms = blurMaterial.uniforms;

		const pixels = this._sizeLods[ lodIn ] - 1;
		const radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );
		const sigmaPixels = sigmaRadians / radiansPerPixel;
		const samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;

		if ( samples > MAX_SAMPLES ) {

			console.warn( `sigmaRadians, ${
				sigmaRadians}, is too large and will clip, as it requested ${
				samples} samples when the maximum is set to ${MAX_SAMPLES}` );

		}

		const weights = [];
		let sum = 0;

		for ( let i = 0; i < MAX_SAMPLES; ++ i ) {

			const x = i / sigmaPixels;
			const weight = Math.exp( - x * x / 2 );
			weights.push( weight );

			if ( i === 0 ) {

				sum += weight;

			} else if ( i < samples ) {

				sum += 2 * weight;

			}

		}

		for ( let i = 0; i < weights.length; i ++ ) {

			weights[ i ] = weights[ i ] / sum;

		}

		blurUniforms[ 'envMap' ].value = targetIn.texture;
		blurUniforms[ 'samples' ].value = samples;
		blurUniforms[ 'weights' ].value = weights;
		blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';

		if ( poleAxis ) {

			blurUniforms[ 'poleAxis' ].value = poleAxis;

		}

		const { _lodMax } = this;
		blurUniforms[ 'dTheta' ].value = radiansPerPixel;
		blurUniforms[ 'mipInt' ].value = _lodMax - lodIn;

		const outputSize = this._sizeLods[ lodOut ];
		const x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );
		const y = 4 * ( this._cubeSize - outputSize );

		_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );
		renderer.setRenderTarget( targetOut );
		renderer.render( blurMesh, _flatCamera );

	}

}



function _createPlanes( lodMax ) {

	const lodPlanes = [];
	const sizeLods = [];
	const sigmas = [];

	let lod = lodMax;

	const totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;

	for ( let i = 0; i < totalLods; i ++ ) {

		const sizeLod = Math.pow( 2, lod );
		sizeLods.push( sizeLod );
		let sigma = 1.0 / sizeLod;

		if ( i > lodMax - LOD_MIN ) {

			sigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];

		} else if ( i === 0 ) {

			sigma = 0;

		}

		sigmas.push( sigma );

		const texelSize = 1.0 / ( sizeLod - 1 );
		const min = - texelSize / 2;
		const max = 1 + texelSize / 2;
		const uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];

		const cubeFaces = 6;
		const vertices = 6;
		const positionSize = 3;
		const uvSize = 2;
		const faceIndexSize = 1;

		const position = new Float32Array( positionSize * vertices * cubeFaces );
		const uv = new Float32Array( uvSize * vertices * cubeFaces );
		const faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );

		for ( let face = 0; face < cubeFaces; face ++ ) {

			const x = ( face % 3 ) * 2 / 3 - 1;
			const y = face > 2 ? 0 : - 1;
			const coordinates = [
				x, y, 0,
				x + 2 / 3, y, 0,
				x + 2 / 3, y + 1, 0,
				x, y, 0,
				x + 2 / 3, y + 1, 0,
				x, y + 1, 0
			];
			position.set( coordinates, positionSize * vertices * face );
			uv.set( uv1, uvSize * vertices * face );
			const fill = [ face, face, face, face, face, face ];
			faceIndex.set( fill, faceIndexSize * vertices * face );

		}

		const planes = new BufferGeometry();
		planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );
		planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );
		planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );
		lodPlanes.push( planes );

		if ( lod > LOD_MIN ) {

			lod --;

		}

	}

	return { lodPlanes, sizeLods, sigmas };

}

function _createRenderTarget( width, height, params ) {

	const cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );
	cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;
	cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';
	cubeUVRenderTarget.scissorTest = true;
	return cubeUVRenderTarget;

}

function _setViewport( target, x, y, width, height ) {

	target.viewport.set( x, y, width, height );
	target.scissor.set( x, y, width, height );

}

function _getBlurShader( lodMax, width, height ) {

	const weights = new Float32Array( MAX_SAMPLES );
	const poleAxis = new Vector3( 0, 1, 0 );
	const shaderMaterial = new ShaderMaterial( {

		name: 'SphericalGaussianBlur',

		defines: {
			'n': MAX_SAMPLES,
			'CUBEUV_TEXEL_WIDTH': 1.0 / width,
			'CUBEUV_TEXEL_HEIGHT': 1.0 / height,
			'CUBEUV_MAX_MIP': `${lodMax}.0`,
		},

		uniforms: {
			'envMap': { value: null },
			'samples': { value: 1 },
			'weights': { value: weights },
			'latitudinal': { value: false },
			'dTheta': { value: 0 },
			'mipInt': { value: 0 },
			'poleAxis': { value: poleAxis }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

	return shaderMaterial;

}

function _getEquirectMaterial() {

	return new ShaderMaterial( {

		name: 'EquirectangularToCubeUV',

		uniforms: {
			'envMap': { value: null }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

}

function _getCubemapMaterial() {

	return new ShaderMaterial( {

		name: 'CubemapToCubeUV',

		uniforms: {
			'envMap': { value: null },
			'flipEnvMap': { value: - 1 }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

}

function _getCommonVertexShader() {

	return /* glsl */`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;

}

function WebGLCubeUVMaps( renderer ) {

	let cubeUVmaps = new WeakMap();

	let pmremGenerator = null;

	function get( texture ) {

		if ( texture && texture.isTexture ) {

			const mapping = texture.mapping;

			const isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );
			const isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );

			// equirect/cube map to cubeUV conversion

			if ( isEquirectMap || isCubeMap ) {

				if ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {

					texture.needsPMREMUpdate = false;

					let renderTarget = cubeUVmaps.get( texture );

					if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );

					renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );
					cubeUVmaps.set( texture, renderTarget );

					return renderTarget.texture;

				} else {

					if ( cubeUVmaps.has( texture ) ) {

						return cubeUVmaps.get( texture ).texture;

					} else {

						const image = texture.image;

						if ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {

							if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );

							const renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );
							cubeUVmaps.set( texture, renderTarget );

							texture.addEventListener( 'dispose', onTextureDispose );

							return renderTarget.texture;

						} else {

							// image not yet ready. try the conversion next frame

							return null;

						}

					}

				}

			}

		}

		return texture;

	}

	function isCubeTextureComplete( image ) {

		let count = 0;
		const length = 6;

		for ( let i = 0; i < length; i ++ ) {

			if ( image[ i ] !== undefined ) count ++;

		}

		return count === length;


	}

	function onTextureDispose( event ) {

		const texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		const cubemapUV = cubeUVmaps.get( texture );

		if ( cubemapUV !== undefined ) {

			cubeUVmaps.delete( texture );
			cubemapUV.dispose();

		}

	}

	function dispose() {

		cubeUVmaps = new WeakMap();

		if ( pmremGenerator !== null ) {

			pmremGenerator.dispose();
			pmremGenerator = null;

		}

	}

	return {
		get: get,
		dispose: dispose
	};

}

function WebGLExtensions( gl ) {

	const extensions = {};

	function getExtension( name ) {

		if ( extensions[ name ] !== undefined ) {

			return extensions[ name ];

		}

		let extension;

		switch ( name ) {

			case 'WEBGL_depth_texture':
				extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );
				break;

			case 'EXT_texture_filter_anisotropic':
				extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );
				break;

			case 'WEBGL_compressed_texture_s3tc':
				extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );
				break;

			case 'WEBGL_compressed_texture_pvrtc':
				extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );
				break;

			default:
				extension = gl.getExtension( name );

		}

		extensions[ name ] = extension;

		return extension;

	}

	return {

		has: function ( name ) {

			return getExtension( name ) !== null;

		},

		init: function ( capabilities ) {

			if ( capabilities.isWebGL2 ) {

				getExtension( 'EXT_color_buffer_float' );

			} else {

				getExtension( 'WEBGL_depth_texture' );
				getExtension( 'OES_texture_float' );
				getExtension( 'OES_texture_half_float' );
				getExtension( 'OES_texture_half_float_linear' );
				getExtension( 'OES_standard_derivatives' );
				getExtension( 'OES_element_index_uint' );
				getExtension( 'OES_vertex_array_object' );
				getExtension( 'ANGLE_instanced_arrays' );

			}

			getExtension( 'OES_texture_float_linear' );
			getExtension( 'EXT_color_buffer_half_float' );
			getExtension( 'WEBGL_multisampled_render_to_texture' );

		},

		get: function ( name ) {

			const extension = getExtension( name );

			if ( extension === null ) {

				console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );

			}

			return extension;

		}

	};

}

function WebGLGeometries( gl, attributes, info, bindingStates ) {

	const geometries = {};
	const wireframeAttributes = new WeakMap();

	function onGeometryDispose( event ) {

		const geometry = event.target;

		if ( geometry.index !== null ) {

			attributes.remove( geometry.index );

		}

		for ( const name in geometry.attributes ) {

			attributes.remove( geometry.attributes[ name ] );

		}

		geometry.removeEventListener( 'dispose', onGeometryDispose );

		delete geometries[ geometry.id ];

		const attribute = wireframeAttributes.get( geometry );

		if ( attribute ) {

			attributes.remove( attribute );
			wireframeAttributes.delete( geometry );

		}

		bindingStates.releaseStatesOfGeometry( geometry );

		if ( geometry.isInstancedBufferGeometry === true ) {

			delete geometry._maxInstanceCount;

		}

		//

		info.memory.geometries --;

	}

	function get( object, geometry ) {

		if ( geometries[ geometry.id ] === true ) return geometry;

		geometry.addEventListener( 'dispose', onGeometryDispose );

		geometries[ geometry.id ] = true;

		info.memory.geometries ++;

		return geometry;

	}

	function update( geometry ) {

		const geometryAttributes = geometry.attributes;

		// Updating index buffer in VAO now. See WebGLBindingStates.

		for ( const name in geometryAttributes ) {

			attributes.update( geometryAttributes[ name ], 34962 );

		}

		// morph targets

		const morphAttributes = geometry.morphAttributes;

		for ( const name in morphAttributes ) {

			const array = morphAttributes[ name ];

			for ( let i = 0, l = array.length; i < l; i ++ ) {

				attributes.update( array[ i ], 34962 );

			}

		}

	}

	function updateWireframeAttribute( geometry ) {

		const indices = [];

		const geometryIndex = geometry.index;
		const geometryPosition = geometry.attributes.position;
		let version = 0;

		if ( geometryIndex !== null ) {

			const array = geometryIndex.array;
			version = geometryIndex.version;

			for ( let i = 0, l = array.length; i < l; i += 3 ) {

				const a = array[ i + 0 ];
				const b = array[ i + 1 ];
				const c = array[ i + 2 ];

				indices.push( a, b, b, c, c, a );

			}

		} else {

			const array = geometryPosition.array;
			version = geometryPosition.version;

			for ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {

				const a = i + 0;
				const b = i + 1;
				const c = i + 2;

				indices.push( a, b, b, c, c, a );

			}

		}

		const attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );
		attribute.version = version;

		// Updating index buffer in VAO now. See WebGLBindingStates

		//

		const previousAttribute = wireframeAttributes.get( geometry );

		if ( previousAttribute ) attributes.remove( previousAttribute );

		//

		wireframeAttributes.set( geometry, attribute );

	}

	function getWireframeAttribute( geometry ) {

		const currentAttribute = wireframeAttributes.get( geometry );

		if ( currentAttribute ) {

			const geometryIndex = geometry.index;

			if ( geometryIndex !== null ) {

				// if the attribute is obsolete, create a new one

				if ( currentAttribute.version < geometryIndex.version ) {

					updateWireframeAttribute( geometry );

				}

			}

		} else {

			updateWireframeAttribute( geometry );

		}

		return wireframeAttributes.get( geometry );

	}

	return {

		get: get,
		update: update,

		getWireframeAttribute: getWireframeAttribute

	};

}

function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	let mode;

	function setMode( value ) {

		mode = value;

	}

	let type, bytesPerElement;

	function setIndex( value ) {

		type = value.type;
		bytesPerElement = value.bytesPerElement;

	}

	function render( start, count ) {

		gl.drawElements( mode, count, type, start * bytesPerElement );

		info.update( count, mode, 1 );

	}

	function renderInstances( start, count, primcount ) {

		if ( primcount === 0 ) return;

		let extension, methodName;

		if ( isWebGL2 ) {

			extension = gl;
			methodName = 'drawElementsInstanced';

		} else {

			extension = extensions.get( 'ANGLE_instanced_arrays' );
			methodName = 'drawElementsInstancedANGLE';

			if ( extension === null ) {

				console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
				return;

			}

		}

		extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );

		info.update( count, mode, primcount );

	}

	//

	this.setMode = setMode;
	this.setIndex = setIndex;
	this.render = render;
	this.renderInstances = renderInstances;

}

function WebGLInfo( gl ) {

	const memory = {
		geometries: 0,
		textures: 0
	};

	const render = {
		frame: 0,
		calls: 0,
		triangles: 0,
		points: 0,
		lines: 0
	};

	function update( count, mode, instanceCount ) {

		render.calls ++;

		switch ( mode ) {

			case 4:
				render.triangles += instanceCount * ( count / 3 );
				break;

			case 1:
				render.lines += instanceCount * ( count / 2 );
				break;

			case 3:
				render.lines += instanceCount * ( count - 1 );
				break;

			case 2:
				render.lines += instanceCount * count;
				break;

			case 0:
				render.points += instanceCount * count;
				break;

			default:
				console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );
				break;

		}

	}

	function reset() {

		render.frame ++;
		render.calls = 0;
		render.triangles = 0;
		render.points = 0;
		render.lines = 0;

	}

	return {
		memory: memory,
		render: render,
		programs: null,
		autoReset: true,
		reset: reset,
		update: update
	};

}

function numericalSort( a, b ) {

	return a[ 0 ] - b[ 0 ];

}

function absNumericalSort( a, b ) {

	return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );

}

function denormalize( morph, attribute ) {

	let denominator = 1;
	const array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;

	if ( array instanceof Int8Array ) denominator = 127;
	else if ( array instanceof Int16Array ) denominator = 32767;
	else if ( array instanceof Int32Array ) denominator = 2147483647;
	else console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );

	morph.divideScalar( denominator );

}

function WebGLMorphtargets( gl, capabilities, textures ) {

	const influencesList = {};
	const morphInfluences = new Float32Array( 8 );
	const morphTextures = new WeakMap();
	const morph = new Vector4();

	const workInfluences = [];

	for ( let i = 0; i < 8; i ++ ) {

		workInfluences[ i ] = [ i, 0 ];

	}

	function update( object, geometry, material, program ) {

		const objectInfluences = object.morphTargetInfluences;

		if ( capabilities.isWebGL2 === true ) {

			// instead of using attributes, the WebGL 2 code path encodes morph targets
			// into an array of data textures. Each layer represents a single morph target.

			const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
			const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;

			let entry = morphTextures.get( geometry );

			if ( entry === undefined || entry.count !== morphTargetsCount ) {

				if ( entry !== undefined ) entry.texture.dispose();

				const hasMorphPosition = geometry.morphAttributes.position !== undefined;
				const hasMorphNormals = geometry.morphAttributes.normal !== undefined;
				const hasMorphColors = geometry.morphAttributes.color !== undefined;

				const morphTargets = geometry.morphAttributes.position || [];
				const morphNormals = geometry.morphAttributes.normal || [];
				const morphColors = geometry.morphAttributes.color || [];

				let vertexDataCount = 0;

				if ( hasMorphPosition === true ) vertexDataCount = 1;
				if ( hasMorphNormals === true ) vertexDataCount = 2;
				if ( hasMorphColors === true ) vertexDataCount = 3;

				let width = geometry.attributes.position.count * vertexDataCount;
				let height = 1;

				if ( width > capabilities.maxTextureSize ) {

					height = Math.ceil( width / capabilities.maxTextureSize );
					width = capabilities.maxTextureSize;

				}

				const buffer = new Float32Array( width * height * 4 * morphTargetsCount );

				const texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );
				texture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)
				texture.type = FloatType;
				texture.needsUpdate = true;

				// fill buffer

				const vertexDataStride = vertexDataCount * 4;

				for ( let i = 0; i < morphTargetsCount; i ++ ) {

					const morphTarget = morphTargets[ i ];
					const morphNormal = morphNormals[ i ];
					const morphColor = morphColors[ i ];

					const offset = width * height * 4 * i;

					for ( let j = 0; j < morphTarget.count; j ++ ) {

						const stride = j * vertexDataStride;

						if ( hasMorphPosition === true ) {

							morph.fromBufferAttribute( morphTarget, j );

							if ( morphTarget.normalized === true ) denormalize( morph, morphTarget );

							buffer[ offset + stride + 0 ] = morph.x;
							buffer[ offset + stride + 1 ] = morph.y;
							buffer[ offset + stride + 2 ] = morph.z;
							buffer[ offset + stride + 3 ] = 0;

						}

						if ( hasMorphNormals === true ) {

							morph.fromBufferAttribute( morphNormal, j );

							if ( morphNormal.normalized === true ) denormalize( morph, morphNormal );

							buffer[ offset + stride + 4 ] = morph.x;
							buffer[ offset + stride + 5 ] = morph.y;
							buffer[ offset + stride + 6 ] = morph.z;
							buffer[ offset + stride + 7 ] = 0;

						}

						if ( hasMorphColors === true ) {

							morph.fromBufferAttribute( morphColor, j );

							if ( morphColor.normalized === true ) denormalize( morph, morphNormal );

							buffer[ offset + stride + 8 ] = morph.x;
							buffer[ offset + stride + 9 ] = morph.y;
							buffer[ offset + stride + 10 ] = morph.z;
							buffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;

						}

					}

				}

				entry = {
					count: morphTargetsCount,
					texture: texture,
					size: new Vector2( width, height )
				};

				morphTextures.set( geometry, entry );

				function disposeTexture() {

					texture.dispose();

					morphTextures.delete( geometry );

					geometry.removeEventListener( 'dispose', disposeTexture );

				}

				geometry.addEventListener( 'dispose', disposeTexture );

			}

			//

			let morphInfluencesSum = 0;

			for ( let i = 0; i < objectInfluences.length; i ++ ) {

				morphInfluencesSum += objectInfluences[ i ];

			}

			const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;

			program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );
			program.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );

			program.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );
			program.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );


		} else {

			// When object doesn't have morph target influences defined, we treat it as a 0-length array
			// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences

			const length = objectInfluences === undefined ? 0 : objectInfluences.length;

			let influences = influencesList[ geometry.id ];

			if ( influences === undefined || influences.length !== length ) {

				// initialise list

				influences = [];

				for ( let i = 0; i < length; i ++ ) {

					influences[ i ] = [ i, 0 ];

				}

				influencesList[ geometry.id ] = influences;

			}

			// Collect influences

			for ( let i = 0; i < length; i ++ ) {

				const influence = influences[ i ];

				influence[ 0 ] = i;
				influence[ 1 ] = objectInfluences[ i ];

			}

			influences.sort( absNumericalSort );

			for ( let i = 0; i < 8; i ++ ) {

				if ( i < length && influences[ i ][ 1 ] ) {

					workInfluences[ i ][ 0 ] = influences[ i ][ 0 ];
					workInfluences[ i ][ 1 ] = influences[ i ][ 1 ];

				} else {

					workInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;
					workInfluences[ i ][ 1 ] = 0;

				}

			}

			workInfluences.sort( numericalSort );

			const morphTargets = geometry.morphAttributes.position;
			const morphNormals = geometry.morphAttributes.normal;

			let morphInfluencesSum = 0;

			for ( let i = 0; i < 8; i ++ ) {

				const influence = workInfluences[ i ];
				const index = influence[ 0 ];
				const value = influence[ 1 ];

				if ( index !== Number.MAX_SAFE_INTEGER && value ) {

					if ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {

						geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );

					}

					if ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {

						geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );

					}

					morphInfluences[ i ] = value;
					morphInfluencesSum += value;

				} else {

					if ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {

						geometry.deleteAttribute( 'morphTarget' + i );

					}

					if ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {

						geometry.deleteAttribute( 'morphNormal' + i );

					}

					morphInfluences[ i ] = 0;

				}

			}

			// GLSL shader uses formula baseinfluence * base + sum(target * influence)
			// This allows us to switch between absolute morphs and relative morphs without changing shader code
			// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
			const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;

			program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );
			program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );

		}

	}

	return {

		update: update

	};

}

function WebGLObjects( gl, geometries, attributes, info ) {

	let updateMap = new WeakMap();

	function update( object ) {

		const frame = info.render.frame;

		const geometry = object.geometry;
		const buffergeometry = geometries.get( object, geometry );

		// Update once per frame

		if ( updateMap.get( buffergeometry ) !== frame ) {

			geometries.update( buffergeometry );

			updateMap.set( buffergeometry, frame );

		}

		if ( object.isInstancedMesh ) {

			if ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {

				object.addEventListener( 'dispose', onInstancedMeshDispose );

			}

			attributes.update( object.instanceMatrix, 34962 );

			if ( object.instanceColor !== null ) {

				attributes.update( object.instanceColor, 34962 );

			}

		}

		return buffergeometry;

	}

	function dispose() {

		updateMap = new WeakMap();

	}

	function onInstancedMeshDispose( event ) {

		const instancedMesh = event.target;

		instancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );

		attributes.remove( instancedMesh.instanceMatrix );

		if ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );

	}

	return {

		update: update,
		dispose: dispose

	};

}

/**
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [textures] )
 *
 * 		uploads a uniform value(s)
 *  	the 'textures' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (textures factorizations):
 *
 * .upload( gl, seq, values, textures )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (textures factorizations):
 *
 * .setValue( gl, name, value, textures )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */

const emptyTexture = new Texture();
const emptyArrayTexture = new DataArrayTexture();
const empty3dTexture = new Data3DTexture();
const emptyCubeTexture = new CubeTexture();

// --- Utilities ---

// Array Caches (provide typed arrays for temporary by size)

const arrayCacheF32 = [];
const arrayCacheI32 = [];

// Float32Array caches used for uploading Matrix uniforms

const mat4array = new Float32Array( 16 );
const mat3array = new Float32Array( 9 );
const mat2array = new Float32Array( 4 );

// Flattening for arrays of vectors and matrices

function flatten( array, nBlocks, blockSize ) {

	const firstElem = array[ 0 ];

	if ( firstElem <= 0 || firstElem > 0 ) return array;
	// unoptimized: ! isNaN( firstElem )
	// see http://jacksondunstan.com/articles/983

	const n = nBlocks * blockSize;
	let r = arrayCacheF32[ n ];

	if ( r === undefined ) {

		r = new Float32Array( n );
		arrayCacheF32[ n ] = r;

	}

	if ( nBlocks !== 0 ) {

		firstElem.toArray( r, 0 );

		for ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {

			offset += blockSize;
			array[ i ].toArray( r, offset );

		}

	}

	return r;

}

function arraysEqual( a, b ) {

	if ( a.length !== b.length ) return false;

	for ( let i = 0, l = a.length; i < l; i ++ ) {

		if ( a[ i ] !== b[ i ] ) return false;

	}

	return true;

}

function copyArray( a, b ) {

	for ( let i = 0, l = b.length; i < l; i ++ ) {

		a[ i ] = b[ i ];

	}

}

// Texture unit allocation

function allocTexUnits( textures, n ) {

	let r = arrayCacheI32[ n ];

	if ( r === undefined ) {

		r = new Int32Array( n );
		arrayCacheI32[ n ] = r;

	}

	for ( let i = 0; i !== n; ++ i ) {

		r[ i ] = textures.allocateTextureUnit();

	}

	return r;

}

// --- Setters ---

// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.

// Single scalar

function setValueV1f( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1f( this.addr, v );

	cache[ 0 ] = v;

}

// Single float vector (from flat array or THREE.VectorN)

function setValueV2f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {

			gl.uniform2f( this.addr, v.x, v.y );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform2fv( this.addr, v );

		copyArray( cache, v );

	}

}

function setValueV3f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {

			gl.uniform3f( this.addr, v.x, v.y, v.z );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;
			cache[ 2 ] = v.z;

		}

	} else if ( v.r !== undefined ) {

		if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {

			gl.uniform3f( this.addr, v.r, v.g, v.b );

			cache[ 0 ] = v.r;
			cache[ 1 ] = v.g;
			cache[ 2 ] = v.b;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform3fv( this.addr, v );

		copyArray( cache, v );

	}

}

function setValueV4f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {

			gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;
			cache[ 2 ] = v.z;
			cache[ 3 ] = v.w;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform4fv( this.addr, v );

		copyArray( cache, v );

	}

}

// Single matrix (from flat array or THREE.MatrixN)

function setValueM2( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix2fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat2array.set( elements );

		gl.uniformMatrix2fv( this.addr, false, mat2array );

		copyArray( cache, elements );

	}

}

function setValueM3( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix3fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat3array.set( elements );

		gl.uniformMatrix3fv( this.addr, false, mat3array );

		copyArray( cache, elements );

	}

}

function setValueM4( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix4fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat4array.set( elements );

		gl.uniformMatrix4fv( this.addr, false, mat4array );

		copyArray( cache, elements );

	}

}

// Single integer / boolean

function setValueV1i( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1i( this.addr, v );

	cache[ 0 ] = v;

}

// Single integer / boolean vector (from flat array)

function setValueV2i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform2iv( this.addr, v );

	copyArray( cache, v );

}

function setValueV3i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform3iv( this.addr, v );

	copyArray( cache, v );

}

function setValueV4i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform4iv( this.addr, v );

	copyArray( cache, v );

}

// Single unsigned integer

function setValueV1ui( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1ui( this.addr, v );

	cache[ 0 ] = v;

}

// Single unsigned integer vector (from flat array)

function setValueV2ui( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform2uiv( this.addr, v );

	copyArray( cache, v );

}

function setValueV3ui( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform3uiv( this.addr, v );

	copyArray( cache, v );

}

function setValueV4ui( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform4uiv( this.addr, v );

	copyArray( cache, v );

}


// Single texture (2D / Cube)

function setValueT1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTexture2D( v || emptyTexture, unit );

}

function setValueT3D1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTexture3D( v || empty3dTexture, unit );

}

function setValueT6( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTextureCube( v || emptyCubeTexture, unit );

}

function setValueT2DArray1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTexture2DArray( v || emptyArrayTexture, unit );

}

// Helper to pick the right setter for the singular case

function getSingularSetter( type ) {

	switch ( type ) {

		case 0x1406: return setValueV1f; // FLOAT
		case 0x8b50: return setValueV2f; // _VEC2
		case 0x8b51: return setValueV3f; // _VEC3
		case 0x8b52: return setValueV4f; // _VEC4

		case 0x8b5a: return setValueM2; // _MAT2
		case 0x8b5b: return setValueM3; // _MAT3
		case 0x8b5c: return setValueM4; // _MAT4

		case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2
		case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3
		case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4

		case 0x1405: return setValueV1ui; // UINT
		case 0x8dc6: return setValueV2ui; // _VEC2
		case 0x8dc7: return setValueV3ui; // _VEC3
		case 0x8dc8: return setValueV4ui; // _VEC4

		case 0x8b5e: // SAMPLER_2D
		case 0x8d66: // SAMPLER_EXTERNAL_OES
		case 0x8dca: // INT_SAMPLER_2D
		case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
		case 0x8b62: // SAMPLER_2D_SHADOW
			return setValueT1;

		case 0x8b5f: // SAMPLER_3D
		case 0x8dcb: // INT_SAMPLER_3D
		case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D
			return setValueT3D1;

		case 0x8b60: // SAMPLER_CUBE
		case 0x8dcc: // INT_SAMPLER_CUBE
		case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
		case 0x8dc5: // SAMPLER_CUBE_SHADOW
			return setValueT6;

		case 0x8dc1: // SAMPLER_2D_ARRAY
		case 0x8dcf: // INT_SAMPLER_2D_ARRAY
		case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY
		case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW
			return setValueT2DArray1;

	}

}


// Array of scalars

function setValueV1fArray( gl, v ) {

	gl.uniform1fv( this.addr, v );

}

// Array of vectors (from flat array or array of THREE.VectorN)

function setValueV2fArray( gl, v ) {

	const data = flatten( v, this.size, 2 );

	gl.uniform2fv( this.addr, data );

}

function setValueV3fArray( gl, v ) {

	const data = flatten( v, this.size, 3 );

	gl.uniform3fv( this.addr, data );

}

function setValueV4fArray( gl, v ) {

	const data = flatten( v, this.size, 4 );

	gl.uniform4fv( this.addr, data );

}

// Array of matrices (from flat array or array of THREE.MatrixN)

function setValueM2Array( gl, v ) {

	const data = flatten( v, this.size, 4 );

	gl.uniformMatrix2fv( this.addr, false, data );

}

function setValueM3Array( gl, v ) {

	const data = flatten( v, this.size, 9 );

	gl.uniformMatrix3fv( this.addr, false, data );

}

function setValueM4Array( gl, v ) {

	const data = flatten( v, this.size, 16 );

	gl.uniformMatrix4fv( this.addr, false, data );

}

// Array of integer / boolean

function setValueV1iArray( gl, v ) {

	gl.uniform1iv( this.addr, v );

}

// Array of integer / boolean vectors (from flat array)

function setValueV2iArray( gl, v ) {

	gl.uniform2iv( this.addr, v );

}

function setValueV3iArray( gl, v ) {

	gl.uniform3iv( this.addr, v );

}

function setValueV4iArray( gl, v ) {

	gl.uniform4iv( this.addr, v );

}

// Array of unsigned integer

function setValueV1uiArray( gl, v ) {

	gl.uniform1uiv( this.addr, v );

}

// Array of unsigned integer vectors (from flat array)

function setValueV2uiArray( gl, v ) {

	gl.uniform2uiv( this.addr, v );

}

function setValueV3uiArray( gl, v ) {

	gl.uniform3uiv( this.addr, v );

}

function setValueV4uiArray( gl, v ) {

	gl.uniform4uiv( this.addr, v );

}


// Array of textures (2D / 3D / Cube / 2DArray)

function setValueT1Array( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );

	}

}

function setValueT3DArray( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );

	}

}

function setValueT6Array( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );

	}

}

function setValueT2DArrayArray( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );

	}

}


// Helper to pick the right setter for a pure (bottom-level) array

function getPureArraySetter( type ) {

	switch ( type ) {

		case 0x1406: return setValueV1fArray; // FLOAT
		case 0x8b50: return setValueV2fArray; // _VEC2
		case 0x8b51: return setValueV3fArray; // _VEC3
		case 0x8b52: return setValueV4fArray; // _VEC4

		case 0x8b5a: return setValueM2Array; // _MAT2
		case 0x8b5b: return setValueM3Array; // _MAT3
		case 0x8b5c: return setValueM4Array; // _MAT4

		case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2
		case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3
		case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4

		case 0x1405: return setValueV1uiArray; // UINT
		case 0x8dc6: return setValueV2uiArray; // _VEC2
		case 0x8dc7: return setValueV3uiArray; // _VEC3
		case 0x8dc8: return setValueV4uiArray; // _VEC4

		case 0x8b5e: // SAMPLER_2D
		case 0x8d66: // SAMPLER_EXTERNAL_OES
		case 0x8dca: // INT_SAMPLER_2D
		case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
		case 0x8b62: // SAMPLER_2D_SHADOW
			return setValueT1Array;

		case 0x8b5f: // SAMPLER_3D
		case 0x8dcb: // INT_SAMPLER_3D
		case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D
			return setValueT3DArray;

		case 0x8b60: // SAMPLER_CUBE
		case 0x8dcc: // INT_SAMPLER_CUBE
		case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
		case 0x8dc5: // SAMPLER_CUBE_SHADOW
			return setValueT6Array;

		case 0x8dc1: // SAMPLER_2D_ARRAY
		case 0x8dcf: // INT_SAMPLER_2D_ARRAY
		case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY
		case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW
			return setValueT2DArrayArray;

	}

}

// --- Uniform Classes ---

function SingleUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.cache = [];
	this.setValue = getSingularSetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

function PureArrayUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.cache = [];
	this.size = activeInfo.size;
	this.setValue = getPureArraySetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

PureArrayUniform.prototype.updateCache = function ( data ) {

	const cache = this.cache;

	if ( data instanceof Float32Array && cache.length !== data.length ) {

		this.cache = new Float32Array( data.length );

	}

	copyArray( cache, data );

};

function StructuredUniform( id ) {

	this.id = id;

	this.seq = [];
	this.map = {};

}

StructuredUniform.prototype.setValue = function ( gl, value, textures ) {

	const seq = this.seq;

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ];
		u.setValue( gl, value[ u.id ], textures );

	}

};

// --- Top-level ---

// Parser - builds up the property tree from the path strings

const RePathPart = /(\w+)(\])?(\[|\.)?/g;

// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.

function addUniform( container, uniformObject ) {

	container.seq.push( uniformObject );
	container.map[ uniformObject.id ] = uniformObject;

}

function parseUniform( activeInfo, addr, container ) {

	const path = activeInfo.name,
		pathLength = path.length;

	// reset RegExp object, because of the early exit of a previous run
	RePathPart.lastIndex = 0;

	while ( true ) {

		const match = RePathPart.exec( path ),
			matchEnd = RePathPart.lastIndex;

		let id = match[ 1 ];
		const idIsIndex = match[ 2 ] === ']',
			subscript = match[ 3 ];

		if ( idIsIndex ) id = id | 0; // convert to integer

		if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {

			// bare name or "pure" bottom-level array "[0]" suffix

			addUniform( container, subscript === undefined ?
				new SingleUniform( id, activeInfo, addr ) :
				new PureArrayUniform( id, activeInfo, addr ) );

			break;

		} else {

			// step into inner node / create it in case it doesn't exist

			const map = container.map;
			let next = map[ id ];

			if ( next === undefined ) {

				next = new StructuredUniform( id );
				addUniform( container, next );

			}

			container = next;

		}

	}

}

// Root Container

function WebGLUniforms( gl, program ) {

	this.seq = [];
	this.map = {};

	const n = gl.getProgramParameter( program, 35718 );

	for ( let i = 0; i < n; ++ i ) {

		const info = gl.getActiveUniform( program, i ),
			addr = gl.getUniformLocation( program, info.name );

		parseUniform( info, addr, this );

	}

}

WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {

	const u = this.map[ name ];

	if ( u !== undefined ) u.setValue( gl, value, textures );

};

WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {

	const v = object[ name ];

	if ( v !== undefined ) this.setValue( gl, name, v );

};


// Static interface

WebGLUniforms.upload = function ( gl, seq, values, textures ) {

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ],
			v = values[ u.id ];

		if ( v.needsUpdate !== false ) {

			// note: always updating when .needsUpdate is undefined
			u.setValue( gl, v.value, textures );

		}

	}

};

WebGLUniforms.seqWithValue = function ( seq, values ) {

	const r = [];

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ];
		if ( u.id in values ) r.push( u );

	}

	return r;

};

function WebGLShader( gl, type, string ) {

	const shader = gl.createShader( type );

	gl.shaderSource( shader, string );
	gl.compileShader( shader );

	return shader;

}

let programIdCount = 0;

function addLineNumbers( string ) {

	const lines = string.split( '\n' );

	for ( let i = 0; i < lines.length; i ++ ) {

		lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];

	}

	return lines.join( '\n' );

}

function getEncodingComponents( encoding ) {

	switch ( encoding ) {

		case LinearEncoding:
			return [ 'Linear', '( value )' ];
		case sRGBEncoding:
			return [ 'sRGB', '( value )' ];
		default:
			console.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );
			return [ 'Linear', '( value )' ];

	}

}

function getShaderErrors( gl, shader, type ) {

	const status = gl.getShaderParameter( shader, 35713 );
	const errors = gl.getShaderInfoLog( shader ).trim();

	if ( status && errors === '' ) return '';

	// --enable-privileged-webgl-extension
	// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );

	return type.toUpperCase() + '\n\n' + errors + '\n\n' + addLineNumbers( gl.getShaderSource( shader ) );

}

function getTexelEncodingFunction( functionName, encoding ) {

	const components = getEncodingComponents( encoding );
	return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';

}

function getToneMappingFunction( functionName, toneMapping ) {

	let toneMappingName;

	switch ( toneMapping ) {

		case LinearToneMapping:
			toneMappingName = 'Linear';
			break;

		case ReinhardToneMapping:
			toneMappingName = 'Reinhard';
			break;

		case CineonToneMapping:
			toneMappingName = 'OptimizedCineon';
			break;

		case ACESFilmicToneMapping:
			toneMappingName = 'ACESFilmic';
			break;

		case CustomToneMapping:
			toneMappingName = 'Custom';
			break;

		default:
			console.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );
			toneMappingName = 'Linear';

	}

	return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';

}

function generateExtensions( parameters ) {

	const chunks = [
		( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',
		( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',
		( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',
		( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''
	];

	return chunks.filter( filterEmptyLine ).join( '\n' );

}

function generateDefines( defines ) {

	const chunks = [];

	for ( const name in defines ) {

		const value = defines[ name ];

		if ( value === false ) continue;

		chunks.push( '#define ' + name + ' ' + value );

	}

	return chunks.join( '\n' );

}

function fetchAttributeLocations( gl, program ) {

	const attributes = {};

	const n = gl.getProgramParameter( program, 35721 );

	for ( let i = 0; i < n; i ++ ) {

		const info = gl.getActiveAttrib( program, i );
		const name = info.name;

		let locationSize = 1;
		if ( info.type === 35674 ) locationSize = 2;
		if ( info.type === 35675 ) locationSize = 3;
		if ( info.type === 35676 ) locationSize = 4;

		// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );

		attributes[ name ] = {
			type: info.type,
			location: gl.getAttribLocation( program, name ),
			locationSize: locationSize
		};

	}

	return attributes;

}

function filterEmptyLine( string ) {

	return string !== '';

}

function replaceLightNums( string, parameters ) {

	return string
		.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )
		.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )
		.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )
		.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )
		.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )
		.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )
		.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )
		.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );

}

function replaceClippingPlaneNums( string, parameters ) {

	return string
		.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )
		.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );

}

// Resolve Includes

const includePattern = /^[ \t]*#include +<([\w\d./]+)>/gm;

function resolveIncludes( string ) {

	return string.replace( includePattern, includeReplacer );

}

function includeReplacer( match, include ) {

	const string = ShaderChunk[ include ];

	if ( string === undefined ) {

		throw new Error( 'Can not resolve #include <' + include + '>' );

	}

	return resolveIncludes( string );

}

// Unroll Loops

const deprecatedUnrollLoopPattern = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
const unrollLoopPattern = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;

function unrollLoops( string ) {

	return string
		.replace( unrollLoopPattern, loopReplacer )
		.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );

}

function deprecatedLoopReplacer( match, start, end, snippet ) {

	console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );
	return loopReplacer( match, start, end, snippet );

}

function loopReplacer( match, start, end, snippet ) {

	let string = '';

	for ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {

		string += snippet
			.replace( /\[\s*i\s*\]/g, '[ ' + i + ' ]' )
			.replace( /UNROLLED_LOOP_INDEX/g, i );

	}

	return string;

}

//

function generatePrecision( parameters ) {

	let precisionstring = 'precision ' + parameters.precision + ' float;\nprecision ' + parameters.precision + ' int;';

	if ( parameters.precision === 'highp' ) {

		precisionstring += '\n#define HIGH_PRECISION';

	} else if ( parameters.precision === 'mediump' ) {

		precisionstring += '\n#define MEDIUM_PRECISION';

	} else if ( parameters.precision === 'lowp' ) {

		precisionstring += '\n#define LOW_PRECISION';

	}

	return precisionstring;

}

function generateShadowMapTypeDefine( parameters ) {

	let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';

	if ( parameters.shadowMapType === PCFShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';

	} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';

	} else if ( parameters.shadowMapType === VSMShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';

	}

	return shadowMapTypeDefine;

}

function generateEnvMapTypeDefine( parameters ) {

	let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';

	if ( parameters.envMap ) {

		switch ( parameters.envMapMode ) {

			case CubeReflectionMapping:
			case CubeRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
				break;

			case CubeUVReflectionMapping:
			case CubeUVRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';
				break;

		}

	}

	return envMapTypeDefine;

}

function generateEnvMapModeDefine( parameters ) {

	let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';

	if ( parameters.envMap ) {

		switch ( parameters.envMapMode ) {

			case CubeRefractionMapping:
			case CubeUVRefractionMapping:

				envMapModeDefine = 'ENVMAP_MODE_REFRACTION';
				break;

		}

	}

	return envMapModeDefine;

}

function generateEnvMapBlendingDefine( parameters ) {

	let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';

	if ( parameters.envMap ) {

		switch ( parameters.combine ) {

			case MultiplyOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
				break;

			case MixOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';
				break;

			case AddOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';
				break;

		}

	}

	return envMapBlendingDefine;

}

function generateCubeUVSize( parameters ) {

	const imageHeight = parameters.envMapCubeUVHeight;

	if ( imageHeight === null ) return null;

	const maxMip = Math.log2( imageHeight / 32 + 1 ) + 3;

	const texelHeight = 1.0 / imageHeight;

	const texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );

	return { texelWidth, texelHeight, maxMip };

}

function WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {

	// TODO Send this event to Three.js DevTools
	// console.log( 'WebGLProgram', cacheKey );

	const gl = renderer.getContext();

	const defines = parameters.defines;

	let vertexShader = parameters.vertexShader;
	let fragmentShader = parameters.fragmentShader;

	const shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );
	const envMapTypeDefine = generateEnvMapTypeDefine( parameters );
	const envMapModeDefine = generateEnvMapModeDefine( parameters );
	const envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );
	const envMapCubeUVSize = generateCubeUVSize( parameters );

	const customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );

	const customDefines = generateDefines( defines );

	const program = gl.createProgram();

	let prefixVertex, prefixFragment;
	let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\n' : '';

	if ( parameters.isRawShaderMaterial ) {

		prefixVertex = [

			customDefines

		].filter( filterEmptyLine ).join( '\n' );

		if ( prefixVertex.length > 0 ) {

			prefixVertex += '\n';

		}

		prefixFragment = [

			customExtensions,
			customDefines

		].filter( filterEmptyLine ).join( '\n' );

		if ( prefixFragment.length > 0 ) {

			prefixFragment += '\n';

		}

	} else {

		prefixVertex = [

			generatePrecision( parameters ),

			'#define SHADER_NAME ' + parameters.shaderName,

			customDefines,

			parameters.instancing ? '#define USE_INSTANCING' : '',
			parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',

			parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',

			'#define MAX_BONES ' + parameters.maxBones,
			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
			( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',

			parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
			parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
			parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',

			parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',

			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',
			parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',

			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',

			parameters.transmission ? '#define USE_TRANSMISSION' : '',
			parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
			parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',

			parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',
			parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',

			parameters.vertexTangents ? '#define USE_TANGENT' : '',
			parameters.vertexColors ? '#define USE_COLOR' : '',
			parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',
			parameters.vertexUvs ? '#define USE_UV' : '',
			parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.skinning ? '#define USE_SKINNING' : '',
			parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',

			parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',
			parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',
			( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',
			( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',
			( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',
			( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',
			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			'uniform mat4 modelMatrix;',
			'uniform mat4 modelViewMatrix;',
			'uniform mat4 projectionMatrix;',
			'uniform mat4 viewMatrix;',
			'uniform mat3 normalMatrix;',
			'uniform vec3 cameraPosition;',
			'uniform bool isOrthographic;',

			'#ifdef USE_INSTANCING',

			'	attribute mat4 instanceMatrix;',

			'#endif',

			'#ifdef USE_INSTANCING_COLOR',

			'	attribute vec3 instanceColor;',

			'#endif',

			'attribute vec3 position;',
			'attribute vec3 normal;',
			'attribute vec2 uv;',

			'#ifdef USE_TANGENT',

			'	attribute vec4 tangent;',

			'#endif',

			'#if defined( USE_COLOR_ALPHA )',

			'	attribute vec4 color;',

			'#elif defined( USE_COLOR )',

			'	attribute vec3 color;',

			'#endif',

			'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',

			'	attribute vec3 morphTarget0;',
			'	attribute vec3 morphTarget1;',
			'	attribute vec3 morphTarget2;',
			'	attribute vec3 morphTarget3;',

			'	#ifdef USE_MORPHNORMALS',

			'		attribute vec3 morphNormal0;',
			'		attribute vec3 morphNormal1;',
			'		attribute vec3 morphNormal2;',
			'		attribute vec3 morphNormal3;',

			'	#else',

			'		attribute vec3 morphTarget4;',
			'		attribute vec3 morphTarget5;',
			'		attribute vec3 morphTarget6;',
			'		attribute vec3 morphTarget7;',

			'	#endif',

			'#endif',

			'#ifdef USE_SKINNING',

			'	attribute vec4 skinIndex;',
			'	attribute vec4 skinWeight;',

			'#endif',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

		prefixFragment = [

			customExtensions,

			generatePrecision( parameters ),

			'#define SHADER_NAME ' + parameters.shaderName,

			customDefines,

			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.matcap ? '#define USE_MATCAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapTypeDefine : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.envMap ? '#define ' + envMapBlendingDefine : '',
			envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',
			envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',
			envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
			( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',

			parameters.clearcoat ? '#define USE_CLEARCOAT' : '',
			parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
			parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
			parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',

			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',
			parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',
			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',

			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
			parameters.alphaTest ? '#define USE_ALPHATEST' : '',

			parameters.sheen ? '#define USE_SHEEN' : '',
			parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',
			parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',

			parameters.transmission ? '#define USE_TRANSMISSION' : '',
			parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
			parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',

			parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',

			parameters.vertexTangents ? '#define USE_TANGENT' : '',
			parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',
			parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',
			parameters.vertexUvs ? '#define USE_UV' : '',
			parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

			parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',

			parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			'uniform mat4 viewMatrix;',
			'uniform vec3 cameraPosition;',
			'uniform bool isOrthographic;',

			( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',
			( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below
			( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',

			parameters.dithering ? '#define DITHERING' : '',
			parameters.opaque ? '#define OPAQUE' : '',

			ShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below
			getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),

			parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

	}

	vertexShader = resolveIncludes( vertexShader );
	vertexShader = replaceLightNums( vertexShader, parameters );
	vertexShader = replaceClippingPlaneNums( vertexShader, parameters );

	fragmentShader = resolveIncludes( fragmentShader );
	fragmentShader = replaceLightNums( fragmentShader, parameters );
	fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );

	vertexShader = unrollLoops( vertexShader );
	fragmentShader = unrollLoops( fragmentShader );

	if ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {

		// GLSL 3.0 conversion for built-in materials and ShaderMaterial

		versionString = '#version 300 es\n';

		prefixVertex = [
			'precision mediump sampler2DArray;',
			'#define attribute in',
			'#define varying out',
			'#define texture2D texture'
		].join( '\n' ) + '\n' + prefixVertex;

		prefixFragment = [
			'#define varying in',
			( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',
			( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',
			'#define gl_FragDepthEXT gl_FragDepth',
			'#define texture2D texture',
			'#define textureCube texture',
			'#define texture2DProj textureProj',
			'#define texture2DLodEXT textureLod',
			'#define texture2DProjLodEXT textureProjLod',
			'#define textureCubeLodEXT textureLod',
			'#define texture2DGradEXT textureGrad',
			'#define texture2DProjGradEXT textureProjGrad',
			'#define textureCubeGradEXT textureGrad'
		].join( '\n' ) + '\n' + prefixFragment;

	}

	const vertexGlsl = versionString + prefixVertex + vertexShader;
	const fragmentGlsl = versionString + prefixFragment + fragmentShader;

	// console.log( '*VERTEX*', vertexGlsl );
	// console.log( '*FRAGMENT*', fragmentGlsl );

	const glVertexShader = WebGLShader( gl, 35633, vertexGlsl );
	const glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );

	gl.attachShader( program, glVertexShader );
	gl.attachShader( program, glFragmentShader );

	// Force a particular attribute to index 0.

	if ( parameters.index0AttributeName !== undefined ) {

		gl.bindAttribLocation( program, 0, parameters.index0AttributeName );

	} else if ( parameters.morphTargets === true ) {

		// programs with morphTargets displace position out of attribute 0
		gl.bindAttribLocation( program, 0, 'position' );

	}

	gl.linkProgram( program );

	// check for link errors
	if ( renderer.debug.checkShaderErrors ) {

		const programLog = gl.getProgramInfoLog( program ).trim();
		const vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();
		const fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();

		let runnable = true;
		let haveDiagnostics = true;

		if ( gl.getProgramParameter( program, 35714 ) === false ) {

			runnable = false;

			const vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );
			const fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );

			console.error(
				'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +
				'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\n\n' +
				'Program Info Log: ' + programLog + '\n' +
				vertexErrors + '\n' +
				fragmentErrors
			);

		} else if ( programLog !== '' ) {

			console.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );

		} else if ( vertexLog === '' || fragmentLog === '' ) {

			haveDiagnostics = false;

		}

		if ( haveDiagnostics ) {

			this.diagnostics = {

				runnable: runnable,

				programLog: programLog,

				vertexShader: {

					log: vertexLog,
					prefix: prefixVertex

				},

				fragmentShader: {

					log: fragmentLog,
					prefix: prefixFragment

				}

			};

		}

	}

	// Clean up

	// Crashes in iOS9 and iOS10. #18402
	// gl.detachShader( program, glVertexShader );
	// gl.detachShader( program, glFragmentShader );

	gl.deleteShader( glVertexShader );
	gl.deleteShader( glFragmentShader );

	// set up caching for uniform locations

	let cachedUniforms;

	this.getUniforms = function () {

		if ( cachedUniforms === undefined ) {

			cachedUniforms = new WebGLUniforms( gl, program );

		}

		return cachedUniforms;

	};

	// set up caching for attribute locations

	let cachedAttributes;

	this.getAttributes = function () {

		if ( cachedAttributes === undefined ) {

			cachedAttributes = fetchAttributeLocations( gl, program );

		}

		return cachedAttributes;

	};

	// free resource

	this.destroy = function () {

		bindingStates.releaseStatesOfProgram( this );

		gl.deleteProgram( program );
		this.program = undefined;

	};

	//

	this.name = parameters.shaderName;
	this.id = programIdCount ++;
	this.cacheKey = cacheKey;
	this.usedTimes = 1;
	this.program = program;
	this.vertexShader = glVertexShader;
	this.fragmentShader = glFragmentShader;

	return this;

}

let _id = 0;

class WebGLShaderCache {

	constructor() {

		this.shaderCache = new Map();
		this.materialCache = new Map();

	}

	update( material ) {

		const vertexShader = material.vertexShader;
		const fragmentShader = material.fragmentShader;

		const vertexShaderStage = this._getShaderStage( vertexShader );
		const fragmentShaderStage = this._getShaderStage( fragmentShader );

		const materialShaders = this._getShaderCacheForMaterial( material );

		if ( materialShaders.has( vertexShaderStage ) === false ) {

			materialShaders.add( vertexShaderStage );
			vertexShaderStage.usedTimes ++;

		}

		if ( materialShaders.has( fragmentShaderStage ) === false ) {

			materialShaders.add( fragmentShaderStage );
			fragmentShaderStage.usedTimes ++;

		}

		return this;

	}

	remove( material ) {

		const materialShaders = this.materialCache.get( material );

		for ( const shaderStage of materialShaders ) {

			shaderStage.usedTimes --;

			if ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage );

		}

		this.materialCache.delete( material );

		return this;

	}

	getVertexShaderID( material ) {

		return this._getShaderStage( material.vertexShader ).id;

	}

	getFragmentShaderID( material ) {

		return this._getShaderStage( material.fragmentShader ).id;

	}

	dispose() {

		this.shaderCache.clear();
		this.materialCache.clear();

	}

	_getShaderCacheForMaterial( material ) {

		const cache = this.materialCache;

		if ( cache.has( material ) === false ) {

			cache.set( material, new Set() );

		}

		return cache.get( material );

	}

	_getShaderStage( code ) {

		const cache = this.shaderCache;

		if ( cache.has( code ) === false ) {

			const stage = new WebGLShaderStage();
			cache.set( code, stage );

		}

		return cache.get( code );

	}

}

class WebGLShaderStage {

	constructor() {

		this.id = _id ++;

		this.usedTimes = 0;

	}

}

function WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {

	const _programLayers = new Layers();
	const _customShaders = new WebGLShaderCache();
	const programs = [];

	const isWebGL2 = capabilities.isWebGL2;
	const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;
	const floatVertexTextures = capabilities.floatVertexTextures;
	const maxVertexUniforms = capabilities.maxVertexUniforms;
	const vertexTextures = capabilities.vertexTextures;
	let precision = capabilities.precision;

	const shaderIDs = {
		MeshDepthMaterial: 'depth',
		MeshDistanceMaterial: 'distanceRGBA',
		MeshNormalMaterial: 'normal',
		MeshBasicMaterial: 'basic',
		MeshLambertMaterial: 'lambert',
		MeshPhongMaterial: 'phong',
		MeshToonMaterial: 'toon',
		MeshStandardMaterial: 'physical',
		MeshPhysicalMaterial: 'physical',
		MeshMatcapMaterial: 'matcap',
		LineBasicMaterial: 'basic',
		LineDashedMaterial: 'dashed',
		PointsMaterial: 'points',
		ShadowMaterial: 'shadow',
		SpriteMaterial: 'sprite'
	};

	function getMaxBones( object ) {

		const skeleton = object.skeleton;
		const bones = skeleton.bones;

		if ( floatVertexTextures ) {

			return 1024;

		} else {

			// default for when object is not specified
			// ( for example when prebuilding shader to be used with multiple objects )
			//
			//  - leave some extra space for other uniforms
			//  - limit here is ANGLE's 254 max uniform vectors
			//    (up to 54 should be safe)

			const nVertexUniforms = maxVertexUniforms;
			const nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );

			const maxBones = Math.min( nVertexMatrices, bones.length );

			if ( maxBones < bones.length ) {

				console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );
				return 0;

			}

			return maxBones;

		}

	}

	function getParameters( material, lights, shadows, scene, object ) {

		const fog = scene.fog;
		const geometry = object.geometry;
		const environment = material.isMeshStandardMaterial ? scene.environment : null;

		const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );
		const envMapCubeUVHeight = ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ) ? envMap.image.height : null;

		const shaderID = shaderIDs[ material.type ];

		// heuristics to create shader parameters according to lights in the scene
		// (not to blow over maxLights budget)

		const maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;

		if ( material.precision !== null ) {

			precision = capabilities.getMaxPrecision( material.precision );

			if ( precision !== material.precision ) {

				console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );

			}

		}

		//

		const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
		const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;

		let morphTextureStride = 0;

		if ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;
		if ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;
		if ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;

		//

		let vertexShader, fragmentShader;
		let customVertexShaderID, customFragmentShaderID;

		if ( shaderID ) {

			const shader = ShaderLib[ shaderID ];

			vertexShader = shader.vertexShader;
			fragmentShader = shader.fragmentShader;

		} else {

			vertexShader = material.vertexShader;
			fragmentShader = material.fragmentShader;

			_customShaders.update( material );

			customVertexShaderID = _customShaders.getVertexShaderID( material );
			customFragmentShaderID = _customShaders.getFragmentShaderID( material );

		}

		const currentRenderTarget = renderer.getRenderTarget();

		const useAlphaTest = material.alphaTest > 0;
		const useClearcoat = material.clearcoat > 0;

		const parameters = {

			isWebGL2: isWebGL2,

			shaderID: shaderID,
			shaderName: material.type,

			vertexShader: vertexShader,
			fragmentShader: fragmentShader,
			defines: material.defines,

			customVertexShaderID: customVertexShaderID,
			customFragmentShaderID: customFragmentShaderID,

			isRawShaderMaterial: material.isRawShaderMaterial === true,
			glslVersion: material.glslVersion,

			precision: precision,

			instancing: object.isInstancedMesh === true,
			instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,

			supportsVertexTextures: vertexTextures,
			outputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),
			map: !! material.map,
			matcap: !! material.matcap,
			envMap: !! envMap,
			envMapMode: envMap && envMap.mapping,
			envMapCubeUVHeight: envMapCubeUVHeight,
			lightMap: !! material.lightMap,
			aoMap: !! material.aoMap,
			emissiveMap: !! material.emissiveMap,
			bumpMap: !! material.bumpMap,
			normalMap: !! material.normalMap,
			objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,
			tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,

			decodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),

			clearcoat: useClearcoat,
			clearcoatMap: useClearcoat && !! material.clearcoatMap,
			clearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,
			clearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,

			displacementMap: !! material.displacementMap,
			roughnessMap: !! material.roughnessMap,
			metalnessMap: !! material.metalnessMap,
			specularMap: !! material.specularMap,
			specularIntensityMap: !! material.specularIntensityMap,
			specularColorMap: !! material.specularColorMap,

			opaque: material.transparent === false && material.blending === NormalBlending,

			alphaMap: !! material.alphaMap,
			alphaTest: useAlphaTest,

			gradientMap: !! material.gradientMap,

			sheen: material.sheen > 0,
			sheenColorMap: !! material.sheenColorMap,
			sheenRoughnessMap: !! material.sheenRoughnessMap,

			transmission: material.transmission > 0,
			transmissionMap: !! material.transmissionMap,
			thicknessMap: !! material.thicknessMap,

			combine: material.combine,

			vertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),
			vertexColors: material.vertexColors,
			vertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,
			vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,
			uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,

			fog: !! fog,
			useFog: material.fog,
			fogExp2: ( fog && fog.isFogExp2 ),

			flatShading: !! material.flatShading,

			sizeAttenuation: material.sizeAttenuation,
			logarithmicDepthBuffer: logarithmicDepthBuffer,

			skinning: object.isSkinnedMesh === true && maxBones > 0,
			maxBones: maxBones,
			useVertexTexture: floatVertexTextures,

			morphTargets: geometry.morphAttributes.position !== undefined,
			morphNormals: geometry.morphAttributes.normal !== undefined,
			morphColors: geometry.morphAttributes.color !== undefined,
			morphTargetsCount: morphTargetsCount,
			morphTextureStride: morphTextureStride,

			numDirLights: lights.directional.length,
			numPointLights: lights.point.length,
			numSpotLights: lights.spot.length,
			numRectAreaLights: lights.rectArea.length,
			numHemiLights: lights.hemi.length,

			numDirLightShadows: lights.directionalShadowMap.length,
			numPointLightShadows: lights.pointShadowMap.length,
			numSpotLightShadows: lights.spotShadowMap.length,

			numClippingPlanes: clipping.numPlanes,
			numClipIntersection: clipping.numIntersection,

			dithering: material.dithering,

			shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,
			shadowMapType: renderer.shadowMap.type,

			toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,
			physicallyCorrectLights: renderer.physicallyCorrectLights,

			premultipliedAlpha: material.premultipliedAlpha,

			doubleSided: material.side === DoubleSide,
			flipSided: material.side === BackSide,

			depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,

			index0AttributeName: material.index0AttributeName,

			extensionDerivatives: material.extensions && material.extensions.derivatives,
			extensionFragDepth: material.extensions && material.extensions.fragDepth,
			extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,
			extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,

			rendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),
			rendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),
			rendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),

			customProgramCacheKey: material.customProgramCacheKey()

		};

		return parameters;

	}

	function getProgramCacheKey( parameters ) {

		const array = [];

		if ( parameters.shaderID ) {

			array.push( parameters.shaderID );

		} else {

			array.push( parameters.customVertexShaderID );
			array.push( parameters.customFragmentShaderID );

		}

		if ( parameters.defines !== undefined ) {

			for ( const name in parameters.defines ) {

				array.push( name );
				array.push( parameters.defines[ name ] );

			}

		}

		if ( parameters.isRawShaderMaterial === false ) {

			getProgramCacheKeyParameters( array, parameters );
			getProgramCacheKeyBooleans( array, parameters );
			array.push( renderer.outputEncoding );

		}

		array.push( parameters.customProgramCacheKey );

		return array.join();

	}

	function getProgramCacheKeyParameters( array, parameters ) {

		array.push( parameters.precision );
		array.push( parameters.outputEncoding );
		array.push( parameters.envMapMode );
		array.push( parameters.envMapCubeUVHeight );
		array.push( parameters.combine );
		array.push( parameters.vertexUvs );
		array.push( parameters.fogExp2 );
		array.push( parameters.sizeAttenuation );
		array.push( parameters.maxBones );
		array.push( parameters.morphTargetsCount );
		array.push( parameters.morphAttributeCount );
		array.push( parameters.numDirLights );
		array.push( parameters.numPointLights );
		array.push( parameters.numSpotLights );
		array.push( parameters.numHemiLights );
		array.push( parameters.numRectAreaLights );
		array.push( parameters.numDirLightShadows );
		array.push( parameters.numPointLightShadows );
		array.push( parameters.numSpotLightShadows );
		array.push( parameters.shadowMapType );
		array.push( parameters.toneMapping );
		array.push( parameters.numClippingPlanes );
		array.push( parameters.numClipIntersection );

	}

	function getProgramCacheKeyBooleans( array, parameters ) {

		_programLayers.disableAll();

		if ( parameters.isWebGL2 )
			_programLayers.enable( 0 );
		if ( parameters.supportsVertexTextures )
			_programLayers.enable( 1 );
		if ( parameters.instancing )
			_programLayers.enable( 2 );
		if ( parameters.instancingColor )
			_programLayers.enable( 3 );
		if ( parameters.map )
			_programLayers.enable( 4 );
		if ( parameters.matcap )
			_programLayers.enable( 5 );
		if ( parameters.envMap )
			_programLayers.enable( 6 );
		if ( parameters.lightMap )
			_programLayers.enable( 7 );
		if ( parameters.aoMap )
			_programLayers.enable( 8 );
		if ( parameters.emissiveMap )
			_programLayers.enable( 9 );
		if ( parameters.bumpMap )
			_programLayers.enable( 10 );
		if ( parameters.normalMap )
			_programLayers.enable( 11 );
		if ( parameters.objectSpaceNormalMap )
			_programLayers.enable( 12 );
		if ( parameters.tangentSpaceNormalMap )
			_programLayers.enable( 13 );
		if ( parameters.clearcoat )
			_programLayers.enable( 14 );
		if ( parameters.clearcoatMap )
			_programLayers.enable( 15 );
		if ( parameters.clearcoatRoughnessMap )
			_programLayers.enable( 16 );
		if ( parameters.clearcoatNormalMap )
			_programLayers.enable( 17 );
		if ( parameters.displacementMap )
			_programLayers.enable( 18 );
		if ( parameters.specularMap )
			_programLayers.enable( 19 );
		if ( parameters.roughnessMap )
			_programLayers.enable( 20 );
		if ( parameters.metalnessMap )
			_programLayers.enable( 21 );
		if ( parameters.gradientMap )
			_programLayers.enable( 22 );
		if ( parameters.alphaMap )
			_programLayers.enable( 23 );
		if ( parameters.alphaTest )
			_programLayers.enable( 24 );
		if ( parameters.vertexColors )
			_programLayers.enable( 25 );
		if ( parameters.vertexAlphas )
			_programLayers.enable( 26 );
		if ( parameters.vertexUvs )
			_programLayers.enable( 27 );
		if ( parameters.vertexTangents )
			_programLayers.enable( 28 );
		if ( parameters.uvsVertexOnly )
			_programLayers.enable( 29 );
		if ( parameters.fog )
			_programLayers.enable( 30 );

		array.push( _programLayers.mask );
		_programLayers.disableAll();

		if ( parameters.useFog )
			_programLayers.enable( 0 );
		if ( parameters.flatShading )
			_programLayers.enable( 1 );
		if ( parameters.logarithmicDepthBuffer )
			_programLayers.enable( 2 );
		if ( parameters.skinning )
			_programLayers.enable( 3 );
		if ( parameters.useVertexTexture )
			_programLayers.enable( 4 );
		if ( parameters.morphTargets )
			_programLayers.enable( 5 );
		if ( parameters.morphNormals )
			_programLayers.enable( 6 );
		if ( parameters.morphColors )
			_programLayers.enable( 7 );
		if ( parameters.premultipliedAlpha )
			_programLayers.enable( 8 );
		if ( parameters.shadowMapEnabled )
			_programLayers.enable( 9 );
		if ( parameters.physicallyCorrectLights )
			_programLayers.enable( 10 );
		if ( parameters.doubleSided )
			_programLayers.enable( 11 );
		if ( parameters.flipSided )
			_programLayers.enable( 12 );
		if ( parameters.depthPacking )
			_programLayers.enable( 13 );
		if ( parameters.dithering )
			_programLayers.enable( 14 );
		if ( parameters.specularIntensityMap )
			_programLayers.enable( 15 );
		if ( parameters.specularColorMap )
			_programLayers.enable( 16 );
		if ( parameters.transmission )
			_programLayers.enable( 17 );
		if ( parameters.transmissionMap )
			_programLayers.enable( 18 );
		if ( parameters.thicknessMap )
			_programLayers.enable( 19 );
		if ( parameters.sheen )
			_programLayers.enable( 20 );
		if ( parameters.sheenColorMap )
			_programLayers.enable( 21 );
		if ( parameters.sheenRoughnessMap )
			_programLayers.enable( 22 );
		if ( parameters.decodeVideoTexture )
			_programLayers.enable( 23 );
		if ( parameters.opaque )
			_programLayers.enable( 24 );

		array.push( _programLayers.mask );

	}

	function getUniforms( material ) {

		const shaderID = shaderIDs[ material.type ];
		let uniforms;

		if ( shaderID ) {

			const shader = ShaderLib[ shaderID ];
			uniforms = UniformsUtils.clone( shader.uniforms );

		} else {

			uniforms = material.uniforms;

		}

		return uniforms;

	}

	function acquireProgram( parameters, cacheKey ) {

		let program;

		// Check if code has been already compiled
		for ( let p = 0, pl = programs.length; p < pl; p ++ ) {

			const preexistingProgram = programs[ p ];

			if ( preexistingProgram.cacheKey === cacheKey ) {

				program = preexistingProgram;
				++ program.usedTimes;

				break;

			}

		}

		if ( program === undefined ) {

			program = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );
			programs.push( program );

		}

		return program;

	}

	function releaseProgram( program ) {

		if ( -- program.usedTimes === 0 ) {

			// Remove from unordered set
			const i = programs.indexOf( program );
			programs[ i ] = programs[ programs.length - 1 ];
			programs.pop();

			// Free WebGL resources
			program.destroy();

		}

	}

	function releaseShaderCache( material ) {

		_customShaders.remove( material );

	}

	function dispose() {

		_customShaders.dispose();

	}

	return {
		getParameters: getParameters,
		getProgramCacheKey: getProgramCacheKey,
		getUniforms: getUniforms,
		acquireProgram: acquireProgram,
		releaseProgram: releaseProgram,
		releaseShaderCache: releaseShaderCache,
		// Exposed for resource monitoring & error feedback via renderer.info:
		programs: programs,
		dispose: dispose
	};

}

function WebGLProperties() {

	let properties = new WeakMap();

	function get( object ) {

		let map = properties.get( object );

		if ( map === undefined ) {

			map = {};
			properties.set( object, map );

		}

		return map;

	}

	function remove( object ) {

		properties.delete( object );

	}

	function update( object, key, value ) {

		properties.get( object )[ key ] = value;

	}

	function dispose() {

		properties = new WeakMap();

	}

	return {
		get: get,
		remove: remove,
		update: update,
		dispose: dispose
	};

}

function painterSortStable( a, b ) {

	if ( a.groupOrder !== b.groupOrder ) {

		return a.groupOrder - b.groupOrder;

	} else if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} else if ( a.material.id !== b.material.id ) {

		return a.material.id - b.material.id;

	} else if ( a.z !== b.z ) {

		return a.z - b.z;

	} else {

		return a.id - b.id;

	}

}

function reversePainterSortStable( a, b ) {

	if ( a.groupOrder !== b.groupOrder ) {

		return a.groupOrder - b.groupOrder;

	} else if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} else if ( a.z !== b.z ) {

		return b.z - a.z;

	} else {

		return a.id - b.id;

	}

}


function WebGLRenderList() {

	const renderItems = [];
	let renderItemsIndex = 0;

	const opaque = [];
	const transmissive = [];
	const transparent = [];

	function init() {

		renderItemsIndex = 0;

		opaque.length = 0;
		transmissive.length = 0;
		transparent.length = 0;

	}

	function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {

		let renderItem = renderItems[ renderItemsIndex ];

		if ( renderItem === undefined ) {

			renderItem = {
				id: object.id,
				object: object,
				geometry: geometry,
				material: material,
				groupOrder: groupOrder,
				renderOrder: object.renderOrder,
				z: z,
				group: group
			};

			renderItems[ renderItemsIndex ] = renderItem;

		} else {

			renderItem.id = object.id;
			renderItem.object = object;
			renderItem.geometry = geometry;
			renderItem.material = material;
			renderItem.groupOrder = groupOrder;
			renderItem.renderOrder = object.renderOrder;
			renderItem.z = z;
			renderItem.group = group;

		}

		renderItemsIndex ++;

		return renderItem;

	}

	function push( object, geometry, material, groupOrder, z, group ) {

		const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

		if ( material.transmission > 0.0 ) {

			transmissive.push( renderItem );

		} else if ( material.transparent === true ) {

			transparent.push( renderItem );

		} else {

			opaque.push( renderItem );

		}

	}

	function unshift( object, geometry, material, groupOrder, z, group ) {

		const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

		if ( material.transmission > 0.0 ) {

			transmissive.unshift( renderItem );

		} else if ( material.transparent === true ) {

			transparent.unshift( renderItem );

		} else {

			opaque.unshift( renderItem );

		}

	}

	function sort( customOpaqueSort, customTransparentSort ) {

		if ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );
		if ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );
		if ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );

	}

	function finish() {

		// Clear references from inactive renderItems in the list

		for ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {

			const renderItem = renderItems[ i ];

			if ( renderItem.id === null ) break;

			renderItem.id = null;
			renderItem.object = null;
			renderItem.geometry = null;
			renderItem.material = null;
			renderItem.group = null;

		}

	}

	return {

		opaque: opaque,
		transmissive: transmissive,
		transparent: transparent,

		init: init,
		push: push,
		unshift: unshift,
		finish: finish,

		sort: sort
	};

}

function WebGLRenderLists() {

	let lists = new WeakMap();

	function get( scene, renderCallDepth ) {

		let list;

		if ( lists.has( scene ) === false ) {

			list = new WebGLRenderList();
			lists.set( scene, [ list ] );

		} else {

			if ( renderCallDepth >= lists.get( scene ).length ) {

				list = new WebGLRenderList();
				lists.get( scene ).push( list );

			} else {

				list = lists.get( scene )[ renderCallDepth ];

			}

		}

		return list;

	}

	function dispose() {

		lists = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

function UniformsCache() {

	const lights = {};

	return {

		get: function ( light ) {

			if ( lights[ light.id ] !== undefined ) {

				return lights[ light.id ];

			}

			let uniforms;

			switch ( light.type ) {

				case 'DirectionalLight':
					uniforms = {
						direction: new Vector3(),
						color: new Color()
					};
					break;

				case 'SpotLight':
					uniforms = {
						position: new Vector3(),
						direction: new Vector3(),
						color: new Color(),
						distance: 0,
						coneCos: 0,
						penumbraCos: 0,
						decay: 0
					};
					break;

				case 'PointLight':
					uniforms = {
						position: new Vector3(),
						color: new Color(),
						distance: 0,
						decay: 0
					};
					break;

				case 'HemisphereLight':
					uniforms = {
						direction: new Vector3(),
						skyColor: new Color(),
						groundColor: new Color()
					};
					break;

				case 'RectAreaLight':
					uniforms = {
						color: new Color(),
						position: new Vector3(),
						halfWidth: new Vector3(),
						halfHeight: new Vector3()
					};
					break;

			}

			lights[ light.id ] = uniforms;

			return uniforms;

		}

	};

}

function ShadowUniformsCache() {

	const lights = {};

	return {

		get: function ( light ) {

			if ( lights[ light.id ] !== undefined ) {

				return lights[ light.id ];

			}

			let uniforms;

			switch ( light.type ) {

				case 'DirectionalLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'SpotLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'PointLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2(),
						shadowCameraNear: 1,
						shadowCameraFar: 1000
					};
					break;

				// TODO (abelnation): set RectAreaLight shadow uniforms

			}

			lights[ light.id ] = uniforms;

			return uniforms;

		}

	};

}



let nextVersion = 0;

function shadowCastingLightsFirst( lightA, lightB ) {

	return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );

}

function WebGLLights( extensions, capabilities ) {

	const cache = new UniformsCache();

	const shadowCache = ShadowUniformsCache();

	const state = {

		version: 0,

		hash: {
			directionalLength: - 1,
			pointLength: - 1,
			spotLength: - 1,
			rectAreaLength: - 1,
			hemiLength: - 1,

			numDirectionalShadows: - 1,
			numPointShadows: - 1,
			numSpotShadows: - 1
		},

		ambient: [ 0, 0, 0 ],
		probe: [],
		directional: [],
		directionalShadow: [],
		directionalShadowMap: [],
		directionalShadowMatrix: [],
		spot: [],
		spotShadow: [],
		spotShadowMap: [],
		spotShadowMatrix: [],
		rectArea: [],
		rectAreaLTC1: null,
		rectAreaLTC2: null,
		point: [],
		pointShadow: [],
		pointShadowMap: [],
		pointShadowMatrix: [],
		hemi: []

	};

	for ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );

	const vector3 = new Vector3();
	const matrix4 = new Matrix4();
	const matrix42 = new Matrix4();

	function setup( lights, physicallyCorrectLights ) {

		let r = 0, g = 0, b = 0;

		for ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );

		let directionalLength = 0;
		let pointLength = 0;
		let spotLength = 0;
		let rectAreaLength = 0;
		let hemiLength = 0;

		let numDirectionalShadows = 0;
		let numPointShadows = 0;
		let numSpotShadows = 0;

		lights.sort( shadowCastingLightsFirst );

		// artist-friendly light intensity scaling factor
		const scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;

		for ( let i = 0, l = lights.length; i < l; i ++ ) {

			const light = lights[ i ];

			const color = light.color;
			const intensity = light.intensity;
			const distance = light.distance;

			const shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;

			if ( light.isAmbientLight ) {

				r += color.r * intensity * scaleFactor;
				g += color.g * intensity * scaleFactor;
				b += color.b * intensity * scaleFactor;

			} else if ( light.isLightProbe ) {

				for ( let j = 0; j < 9; j ++ ) {

					state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );

				}

			} else if ( light.isDirectionalLight ) {

				const uniforms = cache.get( light );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;

					state.directionalShadow[ directionalLength ] = shadowUniforms;
					state.directionalShadowMap[ directionalLength ] = shadowMap;
					state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;

					numDirectionalShadows ++;

				}

				state.directional[ directionalLength ] = uniforms;

				directionalLength ++;

			} else if ( light.isSpotLight ) {

				const uniforms = cache.get( light );

				uniforms.position.setFromMatrixPosition( light.matrixWorld );

				uniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );
				uniforms.distance = distance;

				uniforms.coneCos = Math.cos( light.angle );
				uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );
				uniforms.decay = light.decay;

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;

					state.spotShadow[ spotLength ] = shadowUniforms;
					state.spotShadowMap[ spotLength ] = shadowMap;
					state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;

					numSpotShadows ++;

				}

				state.spot[ spotLength ] = uniforms;

				spotLength ++;

			} else if ( light.isRectAreaLight ) {

				const uniforms = cache.get( light );

				// (a) intensity is the total visible light emitted
				//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );

				// (b) intensity is the brightness of the light
				uniforms.color.copy( color ).multiplyScalar( intensity );

				uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );
				uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );

				state.rectArea[ rectAreaLength ] = uniforms;

				rectAreaLength ++;

			} else if ( light.isPointLight ) {

				const uniforms = cache.get( light );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );
				uniforms.distance = light.distance;
				uniforms.decay = light.decay;

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;
					shadowUniforms.shadowCameraNear = shadow.camera.near;
					shadowUniforms.shadowCameraFar = shadow.camera.far;

					state.pointShadow[ pointLength ] = shadowUniforms;
					state.pointShadowMap[ pointLength ] = shadowMap;
					state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;

					numPointShadows ++;

				}

				state.point[ pointLength ] = uniforms;

				pointLength ++;

			} else if ( light.isHemisphereLight ) {

				const uniforms = cache.get( light );

				uniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );
				uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );

				state.hemi[ hemiLength ] = uniforms;

				hemiLength ++;

			}

		}

		if ( rectAreaLength > 0 ) {

			if ( capabilities.isWebGL2 ) {

				// WebGL 2

				state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
				state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;

			} else {

				// WebGL 1

				if ( extensions.has( 'OES_texture_float_linear' ) === true ) {

					state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
					state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;

				} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {

					state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;
					state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;

				} else {

					console.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );

				}

			}

		}

		state.ambient[ 0 ] = r;
		state.ambient[ 1 ] = g;
		state.ambient[ 2 ] = b;

		const hash = state.hash;

		if ( hash.directionalLength !== directionalLength ||
			hash.pointLength !== pointLength ||
			hash.spotLength !== spotLength ||
			hash.rectAreaLength !== rectAreaLength ||
			hash.hemiLength !== hemiLength ||
			hash.numDirectionalShadows !== numDirectionalShadows ||
			hash.numPointShadows !== numPointShadows ||
			hash.numSpotShadows !== numSpotShadows ) {

			state.directional.length = directionalLength;
			state.spot.length = spotLength;
			state.rectArea.length = rectAreaLength;
			state.point.length = pointLength;
			state.hemi.length = hemiLength;

			state.directionalShadow.length = numDirectionalShadows;
			state.directionalShadowMap.length = numDirectionalShadows;
			state.pointShadow.length = numPointShadows;
			state.pointShadowMap.length = numPointShadows;
			state.spotShadow.length = numSpotShadows;
			state.spotShadowMap.length = numSpotShadows;
			state.directionalShadowMatrix.length = numDirectionalShadows;
			state.pointShadowMatrix.length = numPointShadows;
			state.spotShadowMatrix.length = numSpotShadows;

			hash.directionalLength = directionalLength;
			hash.pointLength = pointLength;
			hash.spotLength = spotLength;
			hash.rectAreaLength = rectAreaLength;
			hash.hemiLength = hemiLength;

			hash.numDirectionalShadows = numDirectionalShadows;
			hash.numPointShadows = numPointShadows;
			hash.numSpotShadows = numSpotShadows;

			state.version = nextVersion ++;

		}

	}

	function setupView( lights, camera ) {

		let directionalLength = 0;
		let pointLength = 0;
		let spotLength = 0;
		let rectAreaLength = 0;
		let hemiLength = 0;

		const viewMatrix = camera.matrixWorldInverse;

		for ( let i = 0, l = lights.length; i < l; i ++ ) {

			const light = lights[ i ];

			if ( light.isDirectionalLight ) {

				const uniforms = state.directional[ directionalLength ];

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				directionalLength ++;

			} else if ( light.isSpotLight ) {

				const uniforms = state.spot[ spotLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				spotLength ++;

			} else if ( light.isRectAreaLight ) {

				const uniforms = state.rectArea[ rectAreaLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				// extract local rotation of light to derive width/height half vectors
				matrix42.identity();
				matrix4.copy( light.matrixWorld );
				matrix4.premultiply( viewMatrix );
				matrix42.extractRotation( matrix4 );

				uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );
				uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );

				uniforms.halfWidth.applyMatrix4( matrix42 );
				uniforms.halfHeight.applyMatrix4( matrix42 );

				rectAreaLength ++;

			} else if ( light.isPointLight ) {

				const uniforms = state.point[ pointLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				pointLength ++;

			} else if ( light.isHemisphereLight ) {

				const uniforms = state.hemi[ hemiLength ];

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				uniforms.direction.transformDirection( viewMatrix );
				uniforms.direction.normalize();

				hemiLength ++;

			}

		}

	}

	return {
		setup: setup,
		setupView: setupView,
		state: state
	};

}

function WebGLRenderState( extensions, capabilities ) {

	const lights = new WebGLLights( extensions, capabilities );

	const lightsArray = [];
	const shadowsArray = [];

	function init() {

		lightsArray.length = 0;
		shadowsArray.length = 0;

	}

	function pushLight( light ) {

		lightsArray.push( light );

	}

	function pushShadow( shadowLight ) {

		shadowsArray.push( shadowLight );

	}

	function setupLights( physicallyCorrectLights ) {

		lights.setup( lightsArray, physicallyCorrectLights );

	}

	function setupLightsView( camera ) {

		lights.setupView( lightsArray, camera );

	}

	const state = {
		lightsArray: lightsArray,
		shadowsArray: shadowsArray,

		lights: lights
	};

	return {
		init: init,
		state: state,
		setupLights: setupLights,
		setupLightsView: setupLightsView,

		pushLight: pushLight,
		pushShadow: pushShadow
	};

}

function WebGLRenderStates( extensions, capabilities ) {

	let renderStates = new WeakMap();

	function get( scene, renderCallDepth = 0 ) {

		let renderState;

		if ( renderStates.has( scene ) === false ) {

			renderState = new WebGLRenderState( extensions, capabilities );
			renderStates.set( scene, [ renderState ] );

		} else {

			if ( renderCallDepth >= renderStates.get( scene ).length ) {

				renderState = new WebGLRenderState( extensions, capabilities );
				renderStates.get( scene ).push( renderState );

			} else {

				renderState = renderStates.get( scene )[ renderCallDepth ];

			}

		}

		return renderState;

	}

	function dispose() {

		renderStates = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

/**
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */

class MeshDepthMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshDepthMaterial';

		this.depthPacking = BasicDepthPacking;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.depthPacking = source.depthPacking;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		return this;

	}

}

MeshDepthMaterial.prototype.isMeshDepthMaterial = true;

/**
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */

class MeshDistanceMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshDistanceMaterial';

		this.referencePosition = new Vector3();
		this.nearDistance = 1;
		this.farDistance = 1000;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.fog = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.referencePosition.copy( source.referencePosition );
		this.nearDistance = source.nearDistance;
		this.farDistance = source.farDistance;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		return this;

	}

}

MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;

const vertex = "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";

const fragment = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";

function WebGLShadowMap( _renderer, _objects, _capabilities ) {

	let _frustum = new Frustum();

	const _shadowMapSize = new Vector2(),
		_viewportSize = new Vector2(),

		_viewport = new Vector4(),

		_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),
		_distanceMaterial = new MeshDistanceMaterial(),

		_materialCache = {},

		_maxTextureSize = _capabilities.maxTextureSize;

	const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };

	const shadowMaterialVertical = new ShaderMaterial( {
		defines: {
			VSM_SAMPLES: 8
		},
		uniforms: {
			shadow_pass: { value: null },
			resolution: { value: new Vector2() },
			radius: { value: 4.0 }
		},

		vertexShader: vertex,
		fragmentShader: fragment

	} );

	const shadowMaterialHorizontal = shadowMaterialVertical.clone();
	shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;

	const fullScreenTri = new BufferGeometry();
	fullScreenTri.setAttribute(
		'position',
		new BufferAttribute(
			new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),
			3
		)
	);

	const fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );

	const scope = this;

	this.enabled = false;

	this.autoUpdate = true;
	this.needsUpdate = false;

	this.type = PCFShadowMap;

	this.render = function ( lights, scene, camera ) {

		if ( scope.enabled === false ) return;
		if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;

		if ( lights.length === 0 ) return;

		const currentRenderTarget = _renderer.getRenderTarget();
		const activeCubeFace = _renderer.getActiveCubeFace();
		const activeMipmapLevel = _renderer.getActiveMipmapLevel();

		const _state = _renderer.state;

		// Set GL state for depth map.
		_state.setBlending( NoBlending );
		_state.buffers.color.setClear( 1, 1, 1, 1 );
		_state.buffers.depth.setTest( true );
		_state.setScissorTest( false );

		// render depth map

		for ( let i = 0, il = lights.length; i < il; i ++ ) {

			const light = lights[ i ];
			const shadow = light.shadow;

			if ( shadow === undefined ) {

				console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );
				continue;

			}

			if ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;

			_shadowMapSize.copy( shadow.mapSize );

			const shadowFrameExtents = shadow.getFrameExtents();

			_shadowMapSize.multiply( shadowFrameExtents );

			_viewportSize.copy( shadow.mapSize );

			if ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {

				if ( _shadowMapSize.x > _maxTextureSize ) {

					_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );
					_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;
					shadow.mapSize.x = _viewportSize.x;

				}

				if ( _shadowMapSize.y > _maxTextureSize ) {

					_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );
					_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;
					shadow.mapSize.y = _viewportSize.y;

				}

			}

			if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

				const pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };

				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
				shadow.map.texture.name = light.name + '.shadowMap';

				shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );

				shadow.camera.updateProjectionMatrix();

			}

			if ( shadow.map === null ) {

				const pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };

				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
				shadow.map.texture.name = light.name + '.shadowMap';

				shadow.camera.updateProjectionMatrix();

			}

			_renderer.setRenderTarget( shadow.map );
			_renderer.clear();

			const viewportCount = shadow.getViewportCount();

			for ( let vp = 0; vp < viewportCount; vp ++ ) {

				const viewport = shadow.getViewport( vp );

				_viewport.set(
					_viewportSize.x * viewport.x,
					_viewportSize.y * viewport.y,
					_viewportSize.x * viewport.z,
					_viewportSize.y * viewport.w
				);

				_state.viewport( _viewport );

				shadow.updateMatrices( light, vp );

				_frustum = shadow.getFrustum();

				renderObject( scene, camera, shadow.camera, light, this.type );

			}

			// do blur pass for VSM

			if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

				VSMPass( shadow, camera );

			}

			shadow.needsUpdate = false;

		}

		scope.needsUpdate = false;

		_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );

	};

	function VSMPass( shadow, camera ) {

		const geometry = _objects.update( fullScreenMesh );

		if ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {

			shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;
			shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;

			shadowMaterialVertical.needsUpdate = true;
			shadowMaterialHorizontal.needsUpdate = true;

		}

		// vertical pass

		shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;
		shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;
		shadowMaterialVertical.uniforms.radius.value = shadow.radius;
		_renderer.setRenderTarget( shadow.mapPass );
		_renderer.clear();
		_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );

		// horizontal pass

		shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;
		shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;
		shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;
		_renderer.setRenderTarget( shadow.map );
		_renderer.clear();
		_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );

	}

	function getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {

		let result = null;

		const customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;

		if ( customMaterial !== undefined ) {

			result = customMaterial;

		} else {

			result = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;

		}

		if ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||
			( material.displacementMap && material.displacementScale !== 0 ) ||
			( material.alphaMap && material.alphaTest > 0 ) ) {

			// in this case we need a unique material instance reflecting the
			// appropriate state

			const keyA = result.uuid, keyB = material.uuid;

			let materialsForVariant = _materialCache[ keyA ];

			if ( materialsForVariant === undefined ) {

				materialsForVariant = {};
				_materialCache[ keyA ] = materialsForVariant;

			}

			let cachedMaterial = materialsForVariant[ keyB ];

			if ( cachedMaterial === undefined ) {

				cachedMaterial = result.clone();
				materialsForVariant[ keyB ] = cachedMaterial;

			}

			result = cachedMaterial;

		}

		result.visible = material.visible;
		result.wireframe = material.wireframe;

		if ( type === VSMShadowMap ) {

			result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;

		} else {

			result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];

		}

		result.alphaMap = material.alphaMap;
		result.alphaTest = material.alphaTest;

		result.clipShadows = material.clipShadows;
		result.clippingPlanes = material.clippingPlanes;
		result.clipIntersection = material.clipIntersection;

		result.displacementMap = material.displacementMap;
		result.displacementScale = material.displacementScale;
		result.displacementBias = material.displacementBias;

		result.wireframeLinewidth = material.wireframeLinewidth;
		result.linewidth = material.linewidth;

		if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {

			result.referencePosition.setFromMatrixPosition( light.matrixWorld );
			result.nearDistance = shadowCameraNear;
			result.farDistance = shadowCameraFar;

		}

		return result;

	}

	function renderObject( object, camera, shadowCamera, light, type ) {

		if ( object.visible === false ) return;

		const visible = object.layers.test( camera.layers );

		if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {

			if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {

				object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

				const geometry = _objects.update( object );
				const material = object.material;

				if ( Array.isArray( material ) ) {

					const groups = geometry.groups;

					for ( let k = 0, kl = groups.length; k < kl; k ++ ) {

						const group = groups[ k ];
						const groupMaterial = material[ group.materialIndex ];

						if ( groupMaterial && groupMaterial.visible ) {

							const depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );

							_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );

						}

					}

				} else if ( material.visible ) {

					const depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );

					_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );

				}

			}

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			renderObject( children[ i ], camera, shadowCamera, light, type );

		}

	}

}

function WebGLState( gl, extensions, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	function ColorBuffer() {

		let locked = false;

		const color = new Vector4();
		let currentColorMask = null;
		const currentColorClear = new Vector4( 0, 0, 0, 0 );

		return {

			setMask: function ( colorMask ) {

				if ( currentColorMask !== colorMask && ! locked ) {

					gl.colorMask( colorMask, colorMask, colorMask, colorMask );
					currentColorMask = colorMask;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( r, g, b, a, premultipliedAlpha ) {

				if ( premultipliedAlpha === true ) {

					r *= a; g *= a; b *= a;

				}

				color.set( r, g, b, a );

				if ( currentColorClear.equals( color ) === false ) {

					gl.clearColor( r, g, b, a );
					currentColorClear.copy( color );

				}

			},

			reset: function () {

				locked = false;

				currentColorMask = null;
				currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state

			}

		};

	}

	function DepthBuffer() {

		let locked = false;

		let currentDepthMask = null;
		let currentDepthFunc = null;
		let currentDepthClear = null;

		return {

			setTest: function ( depthTest ) {

				if ( depthTest ) {

					enable( 2929 );

				} else {

					disable( 2929 );

				}

			},

			setMask: function ( depthMask ) {

				if ( currentDepthMask !== depthMask && ! locked ) {

					gl.depthMask( depthMask );
					currentDepthMask = depthMask;

				}

			},

			setFunc: function ( depthFunc ) {

				if ( currentDepthFunc !== depthFunc ) {

					if ( depthFunc ) {

						switch ( depthFunc ) {

							case NeverDepth:

								gl.depthFunc( 512 );
								break;

							case AlwaysDepth:

								gl.depthFunc( 519 );
								break;

							case LessDepth:

								gl.depthFunc( 513 );
								break;

							case LessEqualDepth:

								gl.depthFunc( 515 );
								break;

							case EqualDepth:

								gl.depthFunc( 514 );
								break;

							case GreaterEqualDepth:

								gl.depthFunc( 518 );
								break;

							case GreaterDepth:

								gl.depthFunc( 516 );
								break;

							case NotEqualDepth:

								gl.depthFunc( 517 );
								break;

							default:

								gl.depthFunc( 515 );

						}

					} else {

						gl.depthFunc( 515 );

					}

					currentDepthFunc = depthFunc;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( depth ) {

				if ( currentDepthClear !== depth ) {

					gl.clearDepth( depth );
					currentDepthClear = depth;

				}

			},

			reset: function () {

				locked = false;

				currentDepthMask = null;
				currentDepthFunc = null;
				currentDepthClear = null;

			}

		};

	}

	function StencilBuffer() {

		let locked = false;

		let currentStencilMask = null;
		let currentStencilFunc = null;
		let currentStencilRef = null;
		let currentStencilFuncMask = null;
		let currentStencilFail = null;
		let currentStencilZFail = null;
		let currentStencilZPass = null;
		let currentStencilClear = null;

		return {

			setTest: function ( stencilTest ) {

				if ( ! locked ) {

					if ( stencilTest ) {

						enable( 2960 );

					} else {

						disable( 2960 );

					}

				}

			},

			setMask: function ( stencilMask ) {

				if ( currentStencilMask !== stencilMask && ! locked ) {

					gl.stencilMask( stencilMask );
					currentStencilMask = stencilMask;

				}

			},

			setFunc: function ( stencilFunc, stencilRef, stencilMask ) {

				if ( currentStencilFunc !== stencilFunc ||
				     currentStencilRef !== stencilRef ||
				     currentStencilFuncMask !== stencilMask ) {

					gl.stencilFunc( stencilFunc, stencilRef, stencilMask );

					currentStencilFunc = stencilFunc;
					currentStencilRef = stencilRef;
					currentStencilFuncMask = stencilMask;

				}

			},

			setOp: function ( stencilFail, stencilZFail, stencilZPass ) {

				if ( currentStencilFail !== stencilFail ||
				     currentStencilZFail !== stencilZFail ||
				     currentStencilZPass !== stencilZPass ) {

					gl.stencilOp( stencilFail, stencilZFail, stencilZPass );

					currentStencilFail = stencilFail;
					currentStencilZFail = stencilZFail;
					currentStencilZPass = stencilZPass;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( stencil ) {

				if ( currentStencilClear !== stencil ) {

					gl.clearStencil( stencil );
					currentStencilClear = stencil;

				}

			},

			reset: function () {

				locked = false;

				currentStencilMask = null;
				currentStencilFunc = null;
				currentStencilRef = null;
				currentStencilFuncMask = null;
				currentStencilFail = null;
				currentStencilZFail = null;
				currentStencilZPass = null;
				currentStencilClear = null;

			}

		};

	}

	//

	const colorBuffer = new ColorBuffer();
	const depthBuffer = new DepthBuffer();
	const stencilBuffer = new StencilBuffer();

	let enabledCapabilities = {};

	let currentBoundFramebuffers = {};
	let currentDrawbuffers = new WeakMap();
	let defaultDrawbuffers = [];

	let currentProgram = null;

	let currentBlendingEnabled = false;
	let currentBlending = null;
	let currentBlendEquation = null;
	let currentBlendSrc = null;
	let currentBlendDst = null;
	let currentBlendEquationAlpha = null;
	let currentBlendSrcAlpha = null;
	let currentBlendDstAlpha = null;
	let currentPremultipledAlpha = false;

	let currentFlipSided = null;
	let currentCullFace = null;

	let currentLineWidth = null;

	let currentPolygonOffsetFactor = null;
	let currentPolygonOffsetUnits = null;

	const maxTextures = gl.getParameter( 35661 );

	let lineWidthAvailable = false;
	let version = 0;
	const glVersion = gl.getParameter( 7938 );

	if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {

		version = parseFloat( /^WebGL (\d)/.exec( glVersion )[ 1 ] );
		lineWidthAvailable = ( version >= 1.0 );

	} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {

		version = parseFloat( /^OpenGL ES (\d)/.exec( glVersion )[ 1 ] );
		lineWidthAvailable = ( version >= 2.0 );

	}

	let currentTextureSlot = null;
	let currentBoundTextures = {};

	const scissorParam = gl.getParameter( 3088 );
	const viewportParam = gl.getParameter( 2978 );

	const currentScissor = new Vector4().fromArray( scissorParam );
	const currentViewport = new Vector4().fromArray( viewportParam );

	function createTexture( type, target, count ) {

		const data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.
		const texture = gl.createTexture();

		gl.bindTexture( type, texture );
		gl.texParameteri( type, 10241, 9728 );
		gl.texParameteri( type, 10240, 9728 );

		for ( let i = 0; i < count; i ++ ) {

			gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );

		}

		return texture;

	}

	const emptyTextures = {};
	emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );
	emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );

	// init

	colorBuffer.setClear( 0, 0, 0, 1 );
	depthBuffer.setClear( 1 );
	stencilBuffer.setClear( 0 );

	enable( 2929 );
	depthBuffer.setFunc( LessEqualDepth );

	setFlipSided( false );
	setCullFace( CullFaceBack );
	enable( 2884 );

	setBlending( NoBlending );

	//

	function enable( id ) {

		if ( enabledCapabilities[ id ] !== true ) {

			gl.enable( id );
			enabledCapabilities[ id ] = true;

		}

	}

	function disable( id ) {

		if ( enabledCapabilities[ id ] !== false ) {

			gl.disable( id );
			enabledCapabilities[ id ] = false;

		}

	}

	function bindFramebuffer( target, framebuffer ) {

		if ( currentBoundFramebuffers[ target ] !== framebuffer ) {

			gl.bindFramebuffer( target, framebuffer );

			currentBoundFramebuffers[ target ] = framebuffer;

			if ( isWebGL2 ) {

				// 36009 is equivalent to 36160

				if ( target === 36009 ) {

					currentBoundFramebuffers[ 36160 ] = framebuffer;

				}

				if ( target === 36160 ) {

					currentBoundFramebuffers[ 36009 ] = framebuffer;

				}

			}

			return true;

		}

		return false;

	}

	function drawBuffers( renderTarget, framebuffer ) {

		let drawBuffers = defaultDrawbuffers;

		let needsUpdate = false;

		if ( renderTarget ) {

			drawBuffers = currentDrawbuffers.get( framebuffer );

			if ( drawBuffers === undefined ) {

				drawBuffers = [];
				currentDrawbuffers.set( framebuffer, drawBuffers );

			}

			if ( renderTarget.isWebGLMultipleRenderTargets ) {

				const textures = renderTarget.texture;

				if ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {

					for ( let i = 0, il = textures.length; i < il; i ++ ) {

						drawBuffers[ i ] = 36064 + i;

					}

					drawBuffers.length = textures.length;

					needsUpdate = true;

				}

			} else {

				if ( drawBuffers[ 0 ] !== 36064 ) {

					drawBuffers[ 0 ] = 36064;

					needsUpdate = true;

				}

			}

		} else {

			if ( drawBuffers[ 0 ] !== 1029 ) {

				drawBuffers[ 0 ] = 1029;

				needsUpdate = true;

			}

		}

		if ( needsUpdate ) {

			if ( capabilities.isWebGL2 ) {

				gl.drawBuffers( drawBuffers );

			} else {

				extensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );

			}

		}


	}

	function useProgram( program ) {

		if ( currentProgram !== program ) {

			gl.useProgram( program );

			currentProgram = program;

			return true;

		}

		return false;

	}

	const equationToGL = {
		[ AddEquation ]: 32774,
		[ SubtractEquation ]: 32778,
		[ ReverseSubtractEquation ]: 32779
	};

	if ( isWebGL2 ) {

		equationToGL[ MinEquation ] = 32775;
		equationToGL[ MaxEquation ] = 32776;

	} else {

		const extension = extensions.get( 'EXT_blend_minmax' );

		if ( extension !== null ) {

			equationToGL[ MinEquation ] = extension.MIN_EXT;
			equationToGL[ MaxEquation ] = extension.MAX_EXT;

		}

	}

	const factorToGL = {
		[ ZeroFactor ]: 0,
		[ OneFactor ]: 1,
		[ SrcColorFactor ]: 768,
		[ SrcAlphaFactor ]: 770,
		[ SrcAlphaSaturateFactor ]: 776,
		[ DstColorFactor ]: 774,
		[ DstAlphaFactor ]: 772,
		[ OneMinusSrcColorFactor ]: 769,
		[ OneMinusSrcAlphaFactor ]: 771,
		[ OneMinusDstColorFactor ]: 775,
		[ OneMinusDstAlphaFactor ]: 773
	};

	function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {

		if ( blending === NoBlending ) {

			if ( currentBlendingEnabled === true ) {

				disable( 3042 );
				currentBlendingEnabled = false;

			}

			return;

		}

		if ( currentBlendingEnabled === false ) {

			enable( 3042 );
			currentBlendingEnabled = true;

		}

		if ( blending !== CustomBlending ) {

			if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {

				if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {

					gl.blendEquation( 32774 );

					currentBlendEquation = AddEquation;
					currentBlendEquationAlpha = AddEquation;

				}

				if ( premultipliedAlpha ) {

					switch ( blending ) {

						case NormalBlending:
							gl.blendFuncSeparate( 1, 771, 1, 771 );
							break;

						case AdditiveBlending:
							gl.blendFunc( 1, 1 );
							break;

						case SubtractiveBlending:
							gl.blendFuncSeparate( 0, 769, 0, 1 );
							break;

						case MultiplyBlending:
							gl.blendFuncSeparate( 0, 768, 0, 770 );
							break;

						default:
							console.error( 'THREE.WebGLState: Invalid blending: ', blending );
							break;

					}

				} else {

					switch ( blending ) {

						case NormalBlending:
							gl.blendFuncSeparate( 770, 771, 1, 771 );
							break;

						case AdditiveBlending:
							gl.blendFunc( 770, 1 );
							break;

						case SubtractiveBlending:
							gl.blendFuncSeparate( 0, 769, 0, 1 );
							break;

						case MultiplyBlending:
							gl.blendFunc( 0, 768 );
							break;

						default:
							console.error( 'THREE.WebGLState: Invalid blending: ', blending );
							break;

					}

				}

				currentBlendSrc = null;
				currentBlendDst = null;
				currentBlendSrcAlpha = null;
				currentBlendDstAlpha = null;

				currentBlending = blending;
				currentPremultipledAlpha = premultipliedAlpha;

			}

			return;

		}

		// custom blending

		blendEquationAlpha = blendEquationAlpha || blendEquation;
		blendSrcAlpha = blendSrcAlpha || blendSrc;
		blendDstAlpha = blendDstAlpha || blendDst;

		if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {

			gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );

			currentBlendEquation = blendEquation;
			currentBlendEquationAlpha = blendEquationAlpha;

		}

		if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {

			gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );

			currentBlendSrc = blendSrc;
			currentBlendDst = blendDst;
			currentBlendSrcAlpha = blendSrcAlpha;
			currentBlendDstAlpha = blendDstAlpha;

		}

		currentBlending = blending;
		currentPremultipledAlpha = null;

	}

	function setMaterial( material, frontFaceCW ) {

		material.side === DoubleSide
			? disable( 2884 )
			: enable( 2884 );

		let flipSided = ( material.side === BackSide );
		if ( frontFaceCW ) flipSided = ! flipSided;

		setFlipSided( flipSided );

		( material.blending === NormalBlending && material.transparent === false )
			? setBlending( NoBlending )
			: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );

		depthBuffer.setFunc( material.depthFunc );
		depthBuffer.setTest( material.depthTest );
		depthBuffer.setMask( material.depthWrite );
		colorBuffer.setMask( material.colorWrite );

		const stencilWrite = material.stencilWrite;
		stencilBuffer.setTest( stencilWrite );
		if ( stencilWrite ) {

			stencilBuffer.setMask( material.stencilWriteMask );
			stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );
			stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );

		}

		setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

		material.alphaToCoverage === true
			? enable( 32926 )
			: disable( 32926 );

	}

	//

	function setFlipSided( flipSided ) {

		if ( currentFlipSided !== flipSided ) {

			if ( flipSided ) {

				gl.frontFace( 2304 );

			} else {

				gl.frontFace( 2305 );

			}

			currentFlipSided = flipSided;

		}

	}

	function setCullFace( cullFace ) {

		if ( cullFace !== CullFaceNone ) {

			enable( 2884 );

			if ( cullFace !== currentCullFace ) {

				if ( cullFace === CullFaceBack ) {

					gl.cullFace( 1029 );

				} else if ( cullFace === CullFaceFront ) {

					gl.cullFace( 1028 );

				} else {

					gl.cullFace( 1032 );

				}

			}

		} else {

			disable( 2884 );

		}

		currentCullFace = cullFace;

	}

	function setLineWidth( width ) {

		if ( width !== currentLineWidth ) {

			if ( lineWidthAvailable ) gl.lineWidth( width );

			currentLineWidth = width;

		}

	}

	function setPolygonOffset( polygonOffset, factor, units ) {

		if ( polygonOffset ) {

			enable( 32823 );

			if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {

				gl.polygonOffset( factor, units );

				currentPolygonOffsetFactor = factor;
				currentPolygonOffsetUnits = units;

			}

		} else {

			disable( 32823 );

		}

	}

	function setScissorTest( scissorTest ) {

		if ( scissorTest ) {

			enable( 3089 );

		} else {

			disable( 3089 );

		}

	}

	// texture

	function activeTexture( webglSlot ) {

		if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;

		if ( currentTextureSlot !== webglSlot ) {

			gl.activeTexture( webglSlot );
			currentTextureSlot = webglSlot;

		}

	}

	function bindTexture( webglType, webglTexture ) {

		if ( currentTextureSlot === null ) {

			activeTexture();

		}

		let boundTexture = currentBoundTextures[ currentTextureSlot ];

		if ( boundTexture === undefined ) {

			boundTexture = { type: undefined, texture: undefined };
			currentBoundTextures[ currentTextureSlot ] = boundTexture;

		}

		if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {

			gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );

			boundTexture.type = webglType;
			boundTexture.texture = webglTexture;

		}

	}

	function unbindTexture() {

		const boundTexture = currentBoundTextures[ currentTextureSlot ];

		if ( boundTexture !== undefined && boundTexture.type !== undefined ) {

			gl.bindTexture( boundTexture.type, null );

			boundTexture.type = undefined;
			boundTexture.texture = undefined;

		}

	}

	function compressedTexImage2D() {

		try {

			gl.compressedTexImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texSubImage2D() {

		try {

			gl.texSubImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texSubImage3D() {

		try {

			gl.texSubImage3D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function compressedTexSubImage2D() {

		try {

			gl.compressedTexSubImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texStorage2D() {

		try {

			gl.texStorage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texStorage3D() {

		try {

			gl.texStorage3D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texImage2D() {

		try {

			gl.texImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texImage3D() {

		try {

			gl.texImage3D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	//

	function scissor( scissor ) {

		if ( currentScissor.equals( scissor ) === false ) {

			gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );
			currentScissor.copy( scissor );

		}

	}

	function viewport( viewport ) {

		if ( currentViewport.equals( viewport ) === false ) {

			gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );
			currentViewport.copy( viewport );

		}

	}

	//

	function reset() {

		// reset state

		gl.disable( 3042 );
		gl.disable( 2884 );
		gl.disable( 2929 );
		gl.disable( 32823 );
		gl.disable( 3089 );
		gl.disable( 2960 );
		gl.disable( 32926 );

		gl.blendEquation( 32774 );
		gl.blendFunc( 1, 0 );
		gl.blendFuncSeparate( 1, 0, 1, 0 );

		gl.colorMask( true, true, true, true );
		gl.clearColor( 0, 0, 0, 0 );

		gl.depthMask( true );
		gl.depthFunc( 513 );
		gl.clearDepth( 1 );

		gl.stencilMask( 0xffffffff );
		gl.stencilFunc( 519, 0, 0xffffffff );
		gl.stencilOp( 7680, 7680, 7680 );
		gl.clearStencil( 0 );

		gl.cullFace( 1029 );
		gl.frontFace( 2305 );

		gl.polygonOffset( 0, 0 );

		gl.activeTexture( 33984 );

		gl.bindFramebuffer( 36160, null );

		if ( isWebGL2 === true ) {

			gl.bindFramebuffer( 36009, null );
			gl.bindFramebuffer( 36008, null );

		}

		gl.useProgram( null );

		gl.lineWidth( 1 );

		gl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );
		gl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );

		// reset internals

		enabledCapabilities = {};

		currentTextureSlot = null;
		currentBoundTextures = {};

		currentBoundFramebuffers = {};
		currentDrawbuffers = new WeakMap();
		defaultDrawbuffers = [];

		currentProgram = null;

		currentBlendingEnabled = false;
		currentBlending = null;
		currentBlendEquation = null;
		currentBlendSrc = null;
		currentBlendDst = null;
		currentBlendEquationAlpha = null;
		currentBlendSrcAlpha = null;
		currentBlendDstAlpha = null;
		currentPremultipledAlpha = false;

		currentFlipSided = null;
		currentCullFace = null;

		currentLineWidth = null;

		currentPolygonOffsetFactor = null;
		currentPolygonOffsetUnits = null;

		currentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );
		currentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );

		colorBuffer.reset();
		depthBuffer.reset();
		stencilBuffer.reset();

	}

	return {

		buffers: {
			color: colorBuffer,
			depth: depthBuffer,
			stencil: stencilBuffer
		},

		enable: enable,
		disable: disable,

		bindFramebuffer: bindFramebuffer,
		drawBuffers: drawBuffers,

		useProgram: useProgram,

		setBlending: setBlending,
		setMaterial: setMaterial,

		setFlipSided: setFlipSided,
		setCullFace: setCullFace,

		setLineWidth: setLineWidth,
		setPolygonOffset: setPolygonOffset,

		setScissorTest: setScissorTest,

		activeTexture: activeTexture,
		bindTexture: bindTexture,
		unbindTexture: unbindTexture,
		compressedTexImage2D: compressedTexImage2D,
		texImage2D: texImage2D,
		texImage3D: texImage3D,

		texStorage2D: texStorage2D,
		texStorage3D: texStorage3D,
		texSubImage2D: texSubImage2D,
		texSubImage3D: texSubImage3D,
		compressedTexSubImage2D: compressedTexSubImage2D,

		scissor: scissor,
		viewport: viewport,

		reset: reset

	};

}

function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {

	const isWebGL2 = capabilities.isWebGL2;
	const maxTextures = capabilities.maxTextures;
	const maxCubemapSize = capabilities.maxCubemapSize;
	const maxTextureSize = capabilities.maxTextureSize;
	const maxSamples = capabilities.maxSamples;
	const multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;

	const _videoTextures = new WeakMap();
	let _canvas;

	const _sources = new WeakMap(); // maps WebglTexture objects to instances of Source

	// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,
	// also OffscreenCanvas.getContext("webgl"), but not OffscreenCanvas.getContext("2d")!
	// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).

	let useOffscreenCanvas = false;

	try {

		useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'
			&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;

	} catch ( err ) {

		// Ignore any errors

	}

	function createCanvas( width, height ) {

		// Use OffscreenCanvas when available. Specially needed in web workers

		return useOffscreenCanvas ?
			new OffscreenCanvas( width, height ) : createElementNS( 'canvas' );

	}

	function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {

		let scale = 1;

		// handle case if texture exceeds max size

		if ( image.width > maxSize || image.height > maxSize ) {

			scale = maxSize / Math.max( image.width, image.height );

		}

		// only perform resize if necessary

		if ( scale < 1 || needsPowerOfTwo === true ) {

			// only perform resize for certain image types

			if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
				( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
				( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

				const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;

				const width = floor( scale * image.width );
				const height = floor( scale * image.height );

				if ( _canvas === undefined ) _canvas = createCanvas( width, height );

				// cube textures can't reuse the same canvas

				const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;

				canvas.width = width;
				canvas.height = height;

				const context = canvas.getContext( '2d' );
				context.drawImage( image, 0, 0, width, height );

				console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );

				return canvas;

			} else {

				if ( 'data' in image ) {

					console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );

				}

				return image;

			}

		}

		return image;

	}

	function isPowerOfTwo$1( image ) {

		return isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );

	}

	function textureNeedsPowerOfTwo( texture ) {

		if ( isWebGL2 ) return false;

		return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||
			( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );

	}

	function textureNeedsGenerateMipmaps( texture, supportsMips ) {

		return texture.generateMipmaps && supportsMips &&
			texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;

	}

	function generateMipmap( target ) {

		_gl.generateMipmap( target );

	}

	function getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {

		if ( isWebGL2 === false ) return glFormat;

		if ( internalFormatName !== null ) {

			if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];

			console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \'' + internalFormatName + '\'' );

		}

		let internalFormat = glFormat;

		if ( glFormat === 6403 ) {

			if ( glType === 5126 ) internalFormat = 33326;
			if ( glType === 5131 ) internalFormat = 33325;
			if ( glType === 5121 ) internalFormat = 33321;

		}

		if ( glFormat === 33319 ) {

			if ( glType === 5126 ) internalFormat = 33328;
			if ( glType === 5131 ) internalFormat = 33327;
			if ( glType === 5121 ) internalFormat = 33323;

		}

		if ( glFormat === 6408 ) {

			if ( glType === 5126 ) internalFormat = 34836;
			if ( glType === 5131 ) internalFormat = 34842;
			if ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;
			if ( glType === 32819 ) internalFormat = 32854;
			if ( glType === 32820 ) internalFormat = 32855;

		}

		if ( internalFormat === 33325 || internalFormat === 33326 ||
			internalFormat === 33327 || internalFormat === 33328 ||
			internalFormat === 34842 || internalFormat === 34836 ) {

			extensions.get( 'EXT_color_buffer_float' );

		}

		return internalFormat;

	}

	function getMipLevels( texture, image, supportsMips ) {

		if ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {

			return Math.log2( Math.max( image.width, image.height ) ) + 1;

		} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {

			// user-defined mipmaps

			return texture.mipmaps.length;

		} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {

			return image.mipmaps.length;

		} else {

			// texture without mipmaps (only base level)

			return 1;

		}

	}

	// Fallback filters for non-power-of-2 textures

	function filterFallback( f ) {

		if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {

			return 9728;

		}

		return 9729;

	}

	//

	function onTextureDispose( event ) {

		const texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		deallocateTexture( texture );

		if ( texture.isVideoTexture ) {

			_videoTextures.delete( texture );

		}

	}

	function onRenderTargetDispose( event ) {

		const renderTarget = event.target;

		renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );

		deallocateRenderTarget( renderTarget );

	}

	//

	function deallocateTexture( texture ) {

		const textureProperties = properties.get( texture );

		if ( textureProperties.__webglInit === undefined ) return;

		// check if it's necessary to remove the WebGLTexture object

		const source = texture.source;
		const webglTextures = _sources.get( source );

		if ( webglTextures ) {

			const webglTexture = webglTextures[ textureProperties.__cacheKey ];
			webglTexture.usedTimes --;

			// the WebGLTexture object is not used anymore, remove it

			if ( webglTexture.usedTimes === 0 ) {

				deleteTexture( texture );

			}

			// remove the weak map entry if no WebGLTexture uses the source anymore

			if ( Object.keys( webglTextures ).length === 0 ) {

				_sources.delete( source );

			}

		}

		properties.remove( texture );

	}

	function deleteTexture( texture ) {

		const textureProperties = properties.get( texture );
		_gl.deleteTexture( textureProperties.__webglTexture );

		const source = texture.source;
		const webglTextures = _sources.get( source );
		delete webglTextures[ textureProperties.__cacheKey ];

		info.memory.textures --;

	}

	function deallocateRenderTarget( renderTarget ) {

		const texture = renderTarget.texture;

		const renderTargetProperties = properties.get( renderTarget );
		const textureProperties = properties.get( texture );

		if ( textureProperties.__webglTexture !== undefined ) {

			_gl.deleteTexture( textureProperties.__webglTexture );

			info.memory.textures --;

		}

		if ( renderTarget.depthTexture ) {

			renderTarget.depthTexture.dispose();

		}

		if ( renderTarget.isWebGLCubeRenderTarget ) {

			for ( let i = 0; i < 6; i ++ ) {

				_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );
				if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );

			}

		} else {

			_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );
			if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );
			if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );
			if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );
			if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );

		}

		if ( renderTarget.isWebGLMultipleRenderTargets ) {

			for ( let i = 0, il = texture.length; i < il; i ++ ) {

				const attachmentProperties = properties.get( texture[ i ] );

				if ( attachmentProperties.__webglTexture ) {

					_gl.deleteTexture( attachmentProperties.__webglTexture );

					info.memory.textures --;

				}

				properties.remove( texture[ i ] );

			}

		}

		properties.remove( texture );
		properties.remove( renderTarget );

	}

	//

	let textureUnits = 0;

	function resetTextureUnits() {

		textureUnits = 0;

	}

	function allocateTextureUnit() {

		const textureUnit = textureUnits;

		if ( textureUnit >= maxTextures ) {

			console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );

		}

		textureUnits += 1;

		return textureUnit;

	}

	function getTextureCacheKey( texture ) {

		const array = [];

		array.push( texture.wrapS );
		array.push( texture.wrapT );
		array.push( texture.magFilter );
		array.push( texture.minFilter );
		array.push( texture.anisotropy );
		array.push( texture.internalFormat );
		array.push( texture.format );
		array.push( texture.type );
		array.push( texture.generateMipmaps );
		array.push( texture.premultiplyAlpha );
		array.push( texture.flipY );
		array.push( texture.unpackAlignment );
		array.push( texture.encoding );

		return array.join();

	}

	//

	function setTexture2D( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.isVideoTexture ) updateVideoTexture( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			const image = texture.image;

			if ( image === null ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );

			} else if ( image.complete === false ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );

			} else {

				uploadTexture( textureProperties, texture, slot );
				return;

			}

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 3553, textureProperties.__webglTexture );

	}

	function setTexture2DArray( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 35866, textureProperties.__webglTexture );

	}

	function setTexture3D( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 32879, textureProperties.__webglTexture );

	}

	function setTextureCube( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadCubeTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 34067, textureProperties.__webglTexture );

	}

	const wrappingToGL = {
		[ RepeatWrapping ]: 10497,
		[ ClampToEdgeWrapping ]: 33071,
		[ MirroredRepeatWrapping ]: 33648
	};

	const filterToGL = {
		[ NearestFilter ]: 9728,
		[ NearestMipmapNearestFilter ]: 9984,
		[ NearestMipmapLinearFilter ]: 9986,

		[ LinearFilter ]: 9729,
		[ LinearMipmapNearestFilter ]: 9985,
		[ LinearMipmapLinearFilter ]: 9987
	};

	function setTextureParameters( textureType, texture, supportsMips ) {

		if ( supportsMips ) {

			_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );
			_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );

			if ( textureType === 32879 || textureType === 35866 ) {

				_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );

			}

			_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );
			_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );

		} else {

			_gl.texParameteri( textureType, 10242, 33071 );
			_gl.texParameteri( textureType, 10243, 33071 );

			if ( textureType === 32879 || textureType === 35866 ) {

				_gl.texParameteri( textureType, 32882, 33071 );

			}

			if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );

			}

			_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );
			_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );

			if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );

			}

		}

		if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {

			const extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			if ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2
			if ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only

			if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {

				_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );
				properties.get( texture ).__currentAnisotropy = texture.anisotropy;

			}

		}

	}

	function initTexture( textureProperties, texture ) {

		let forceUpload = false;

		if ( textureProperties.__webglInit === undefined ) {

			textureProperties.__webglInit = true;

			texture.addEventListener( 'dispose', onTextureDispose );

		}

		// create Source <-> WebGLTextures mapping if necessary

		const source = texture.source;
		let webglTextures = _sources.get( source );

		if ( webglTextures === undefined ) {

			webglTextures = {};
			_sources.set( source, webglTextures );

		}

		// check if there is already a WebGLTexture object for the given texture parameters

		const textureCacheKey = getTextureCacheKey( texture );

		if ( textureCacheKey !== textureProperties.__cacheKey ) {

			// if not, create a new instance of WebGLTexture

			if ( webglTextures[ textureCacheKey ] === undefined ) {

				// create new entry

				webglTextures[ textureCacheKey ] = {
					texture: _gl.createTexture(),
					usedTimes: 0
				};

				info.memory.textures ++;

				// when a new instance of WebGLTexture was created, a texture upload is required
				// even if the image contents are identical

				forceUpload = true;

			}

			webglTextures[ textureCacheKey ].usedTimes ++;

			// every time the texture cache key changes, it's necessary to check if an instance of
			// WebGLTexture can be deleted in order to avoid a memory leak.

			const webglTexture = webglTextures[ textureProperties.__cacheKey ];

			if ( webglTexture !== undefined ) {

				webglTextures[ textureProperties.__cacheKey ].usedTimes --;

				if ( webglTexture.usedTimes === 0 ) {

					deleteTexture( texture );

				}

			}

			// store references to cache key and WebGLTexture object

			textureProperties.__cacheKey = textureCacheKey;
			textureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;

		}

		return forceUpload;

	}

	function uploadTexture( textureProperties, texture, slot ) {

		let textureType = 3553;

		if ( texture.isDataArrayTexture ) textureType = 35866;
		if ( texture.isData3DTexture ) textureType = 32879;

		const forceUpload = initTexture( textureProperties, texture );
		const source = texture.source;

		state.activeTexture( 33984 + slot );
		state.bindTexture( textureType, textureProperties.__webglTexture );

		if ( source.version !== source.__currentVersion || forceUpload === true ) {

			_gl.pixelStorei( 37440, texture.flipY );
			_gl.pixelStorei( 37441, texture.premultiplyAlpha );
			_gl.pixelStorei( 3317, texture.unpackAlignment );
			_gl.pixelStorei( 37443, 0 );

			const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;
			let image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );
			image = verifyColorSpace( texture, image );

			const supportsMips = isPowerOfTwo$1( image ) || isWebGL2,
				glFormat = utils.convert( texture.format, texture.encoding );

			let glType = utils.convert( texture.type ),
				glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );

			setTextureParameters( textureType, texture, supportsMips );

			let mipmap;
			const mipmaps = texture.mipmaps;

			const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );
			const allocateMemory = ( textureProperties.__version === undefined );
			const levels = getMipLevels( texture, image, supportsMips );

			if ( texture.isDepthTexture ) {

				// populate depth texture with dummy data

				glInternalFormat = 6402;

				if ( isWebGL2 ) {

					if ( texture.type === FloatType ) {

						glInternalFormat = 36012;

					} else if ( texture.type === UnsignedIntType ) {

						glInternalFormat = 33190;

					} else if ( texture.type === UnsignedInt248Type ) {

						glInternalFormat = 35056;

					} else {

						glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D

					}

				} else {

					if ( texture.type === FloatType ) {

						console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );

					}

				}

				// validation checks for WebGL 1

				if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {

					// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
					// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {

						console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );

						texture.type = UnsignedShortType;
						glType = utils.convert( texture.type );

					}

				}

				if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {

					// Depth stencil textures need the DEPTH_STENCIL internal format
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					glInternalFormat = 34041;

					// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
					// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					if ( texture.type !== UnsignedInt248Type ) {

						console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );

						texture.type = UnsignedInt248Type;
						glType = utils.convert( texture.type );

					}

				}

				//

				if ( useTexStorage && allocateMemory ) {

					state.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );

				} else {

					state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );

				}

			} else if ( texture.isDataTexture ) {

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && supportsMips ) {

					if ( useTexStorage && allocateMemory ) {

						state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );

					}

					for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];

						if ( useTexStorage ) {

							state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );

						} else {

							state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

						}

					}

					texture.generateMipmaps = false;

				} else {

					if ( useTexStorage ) {

						if ( allocateMemory ) {

							state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );

						}

						state.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );

					} else {

						state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );

					}

				}

			} else if ( texture.isCompressedTexture ) {

				if ( useTexStorage && allocateMemory ) {

					state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );

				}

				for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];

					if ( texture.format !== RGBAFormat ) {

						if ( glFormat !== null ) {

							if ( useTexStorage ) {

								state.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );

							} else {

								state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

							}

						} else {

							console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );

						}

					} else {

						if ( useTexStorage ) {

							state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );

						} else {

							state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

						}

					}

				}

			} else if ( texture.isDataArrayTexture ) {

				if ( useTexStorage ) {

					if ( allocateMemory ) {

						state.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );

					}

					state.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );

				} else {

					state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );

				}

			} else if ( texture.isData3DTexture ) {

				if ( useTexStorage ) {

					if ( allocateMemory ) {

						state.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );

					}

					state.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );

				} else {

					state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );

				}

			} else if ( texture.isFramebufferTexture ) {

				if ( useTexStorage && allocateMemory ) {

					state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );

				} else {

					state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );

				}

			} else {

				// regular Texture (image, video, canvas)

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && supportsMips ) {

					if ( useTexStorage && allocateMemory ) {

						state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );

					}

					for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];

						if ( useTexStorage ) {

							state.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );

						} else {

							state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );

						}

					}

					texture.generateMipmaps = false;

				} else {

					if ( useTexStorage ) {

						if ( allocateMemory ) {

							state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );

						}

						state.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );

					} else {

						state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );

					}

				}

			}

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( textureType );

			}

			source.__currentVersion = source.version;

			if ( texture.onUpdate ) texture.onUpdate( texture );

		}

		textureProperties.__version = texture.version;

	}

	function uploadCubeTexture( textureProperties, texture, slot ) {

		if ( texture.image.length !== 6 ) return;

		const forceUpload = initTexture( textureProperties, texture );
		const source = texture.source;

		state.activeTexture( 33984 + slot );
		state.bindTexture( 34067, textureProperties.__webglTexture );

		if ( source.version !== source.__currentVersion || forceUpload === true ) {

			_gl.pixelStorei( 37440, texture.flipY );
			_gl.pixelStorei( 37441, texture.premultiplyAlpha );
			_gl.pixelStorei( 3317, texture.unpackAlignment );
			_gl.pixelStorei( 37443, 0 );

			const isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );
			const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );

			const cubeImage = [];

			for ( let i = 0; i < 6; i ++ ) {

				if ( ! isCompressed && ! isDataTexture ) {

					cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );

				} else {

					cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];

				}

				cubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );

			}

			const image = cubeImage[ 0 ],
				supportsMips = isPowerOfTwo$1( image ) || isWebGL2,
				glFormat = utils.convert( texture.format, texture.encoding ),
				glType = utils.convert( texture.type ),
				glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );

			const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );
			const allocateMemory = ( textureProperties.__version === undefined );
			let levels = getMipLevels( texture, image, supportsMips );

			setTextureParameters( 34067, texture, supportsMips );

			let mipmaps;

			if ( isCompressed ) {

				if ( useTexStorage && allocateMemory ) {

					state.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );

				}

				for ( let i = 0; i < 6; i ++ ) {

					mipmaps = cubeImage[ i ].mipmaps;

					for ( let j = 0; j < mipmaps.length; j ++ ) {

						const mipmap = mipmaps[ j ];

						if ( texture.format !== RGBAFormat ) {

							if ( glFormat !== null ) {

								if ( useTexStorage ) {

									state.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );

								} else {

									state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

								}

							} else {

								console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );

							}

						} else {

							if ( useTexStorage ) {

								state.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );

							} else {

								state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

							}

						}

					}

				}

			} else {

				mipmaps = texture.mipmaps;

				if ( useTexStorage && allocateMemory ) {

					// TODO: Uniformly handle mipmap definitions
					// Normal textures and compressed cube textures define base level + mips with their mipmap array
					// Uncompressed cube textures use their mipmap array only for mips (no base level)

					if ( mipmaps.length > 0 ) levels ++;

					state.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );

				}

				for ( let i = 0; i < 6; i ++ ) {

					if ( isDataTexture ) {

						if ( useTexStorage ) {

							state.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );

						} else {

							state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );

						}

						for ( let j = 0; j < mipmaps.length; j ++ ) {

							const mipmap = mipmaps[ j ];
							const mipmapImage = mipmap.image[ i ].image;

							if ( useTexStorage ) {

								state.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );

							} else {

								state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );

							}

						}

					} else {

						if ( useTexStorage ) {

							state.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );

						} else {

							state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );

						}

						for ( let j = 0; j < mipmaps.length; j ++ ) {

							const mipmap = mipmaps[ j ];

							if ( useTexStorage ) {

								state.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );

							} else {

								state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );

							}

						}

					}

				}

			}

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				// We assume images for cube map have the same size.
				generateMipmap( 34067 );

			}

			source.__currentVersion = source.version;

			if ( texture.onUpdate ) texture.onUpdate( texture );

		}

		textureProperties.__version = texture.version;

	}

	// Render targets

	// Setup storage for target texture and bind it to correct framebuffer
	function setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {

		const glFormat = utils.convert( texture.format, texture.encoding );
		const glType = utils.convert( texture.type );
		const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );
		const renderTargetProperties = properties.get( renderTarget );

		if ( ! renderTargetProperties.__hasExternalTextures ) {

			if ( textureTarget === 32879 || textureTarget === 35866 ) {

				state.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );

			} else {

				state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );

			}

		}

		state.bindFramebuffer( 36160, framebuffer );

		if ( useMultisampledRTT( renderTarget ) ) {

			multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );

		} else {

			_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );

		}

		state.bindFramebuffer( 36160, null );

	}


	// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
	function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {

		_gl.bindRenderbuffer( 36161, renderbuffer );

		if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

			let glInternalFormat = 33189;

			if ( isMultisample || useMultisampledRTT( renderTarget ) ) {

				const depthTexture = renderTarget.depthTexture;

				if ( depthTexture && depthTexture.isDepthTexture ) {

					if ( depthTexture.type === FloatType ) {

						glInternalFormat = 36012;

					} else if ( depthTexture.type === UnsignedIntType ) {

						glInternalFormat = 33190;

					}

				}

				const samples = getRenderTargetSamples( renderTarget );

				if ( useMultisampledRTT( renderTarget ) ) {

					multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

				} else {

					_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

				}

			} else {

				_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

			}

			_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );

		} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

			const samples = getRenderTargetSamples( renderTarget );

			if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {

				_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );

			} else if ( useMultisampledRTT( renderTarget ) ) {

				multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );

			} else {

				_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );

			}


			_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );

		} else {

			// Use the first texture for MRT so far
			const texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;

			const glFormat = utils.convert( texture.format, texture.encoding );
			const glType = utils.convert( texture.type );
			const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );
			const samples = getRenderTargetSamples( renderTarget );

			if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {

				_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

			} else if ( useMultisampledRTT( renderTarget ) ) {

				multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

			} else {

				_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

			}

		}

		_gl.bindRenderbuffer( 36161, null );

	}

	// Setup resources for a Depth Texture for a FBO (needs an extension)
	function setupDepthTexture( framebuffer, renderTarget ) {

		const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );
		if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );

		state.bindFramebuffer( 36160, framebuffer );

		if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {

			throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );

		}

		// upload an empty depth texture with framebuffer size
		if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||
				renderTarget.depthTexture.image.width !== renderTarget.width ||
				renderTarget.depthTexture.image.height !== renderTarget.height ) {

			renderTarget.depthTexture.image.width = renderTarget.width;
			renderTarget.depthTexture.image.height = renderTarget.height;
			renderTarget.depthTexture.needsUpdate = true;

		}

		setTexture2D( renderTarget.depthTexture, 0 );

		const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;
		const samples = getRenderTargetSamples( renderTarget );

		if ( renderTarget.depthTexture.format === DepthFormat ) {

			if ( useMultisampledRTT( renderTarget ) ) {

				multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );

			} else {

				_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );

			}

		} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {

			if ( useMultisampledRTT( renderTarget ) ) {

				multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );

			} else {

				_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );

			}

		} else {

			throw new Error( 'Unknown depthTexture format' );

		}

	}

	// Setup GL resources for a non-texture depth buffer
	function setupDepthRenderbuffer( renderTarget ) {

		const renderTargetProperties = properties.get( renderTarget );
		const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );

		if ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {

			if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );

			setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );

		} else {

			if ( isCube ) {

				renderTargetProperties.__webglDepthbuffer = [];

				for ( let i = 0; i < 6; i ++ ) {

					state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );
					renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();
					setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );

				}

			} else {

				state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );
				renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
				setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );

			}

		}

		state.bindFramebuffer( 36160, null );

	}

	// rebind framebuffer with external textures
	function rebindTextures( renderTarget, colorTexture, depthTexture ) {

		const renderTargetProperties = properties.get( renderTarget );

		if ( colorTexture !== undefined ) {

			setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );

		}

		if ( depthTexture !== undefined ) {

			setupDepthRenderbuffer( renderTarget );

		}

	}

	// Set up GL resources for the render target
	function setupRenderTarget( renderTarget ) {

		const texture = renderTarget.texture;

		const renderTargetProperties = properties.get( renderTarget );
		const textureProperties = properties.get( texture );

		renderTarget.addEventListener( 'dispose', onRenderTargetDispose );

		if ( renderTarget.isWebGLMultipleRenderTargets !== true ) {

			if ( textureProperties.__webglTexture === undefined ) {

				textureProperties.__webglTexture = _gl.createTexture();

			}

			textureProperties.__version = texture.version;
			info.memory.textures ++;

		}

		const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );
		const isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );
		const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;

		// Setup framebuffer

		if ( isCube ) {

			renderTargetProperties.__webglFramebuffer = [];

			for ( let i = 0; i < 6; i ++ ) {

				renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();

			}

		} else {

			renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();

			if ( isMultipleRenderTargets ) {

				if ( capabilities.drawBuffers ) {

					const textures = renderTarget.texture;

					for ( let i = 0, il = textures.length; i < il; i ++ ) {

						const attachmentProperties = properties.get( textures[ i ] );

						if ( attachmentProperties.__webglTexture === undefined ) {

							attachmentProperties.__webglTexture = _gl.createTexture();

							info.memory.textures ++;

						}

					}

				} else {

					console.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );

				}

			} else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {

				renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();
				renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();

				_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );

				const glFormat = utils.convert( texture.format, texture.encoding );
				const glType = utils.convert( texture.type );
				const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );
				const samples = getRenderTargetSamples( renderTarget );
				_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

				state.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );
				_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );
				_gl.bindRenderbuffer( 36161, null );

				if ( renderTarget.depthBuffer ) {

					renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();
					setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );

				}

				state.bindFramebuffer( 36160, null );

			}

		}

		// Setup color buffer

		if ( isCube ) {

			state.bindTexture( 34067, textureProperties.__webglTexture );
			setTextureParameters( 34067, texture, supportsMips );

			for ( let i = 0; i < 6; i ++ ) {

				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );

			}

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( 34067 );

			}

			state.unbindTexture();

		} else if ( isMultipleRenderTargets ) {

			const textures = renderTarget.texture;

			for ( let i = 0, il = textures.length; i < il; i ++ ) {

				const attachment = textures[ i ];
				const attachmentProperties = properties.get( attachment );

				state.bindTexture( 3553, attachmentProperties.__webglTexture );
				setTextureParameters( 3553, attachment, supportsMips );
				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );

				if ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {

					generateMipmap( 3553 );

				}

			}

			state.unbindTexture();

		} else {

			let glTextureType = 3553;

			if ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {

				if ( isWebGL2 ) {

					glTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;

				} else {

					console.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );

				}

			}

			state.bindTexture( glTextureType, textureProperties.__webglTexture );
			setTextureParameters( glTextureType, texture, supportsMips );
			setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( glTextureType );

			}

			state.unbindTexture();

		}

		// Setup depth and stencil buffers

		if ( renderTarget.depthBuffer ) {

			setupDepthRenderbuffer( renderTarget );

		}

	}

	function updateRenderTargetMipmap( renderTarget ) {

		const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;

		const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];

		for ( let i = 0, il = textures.length; i < il; i ++ ) {

			const texture = textures[ i ];

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;
				const webglTexture = properties.get( texture ).__webglTexture;

				state.bindTexture( target, webglTexture );
				generateMipmap( target );
				state.unbindTexture();

			}

		}

	}

	function updateMultisampleRenderTarget( renderTarget ) {

		if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {

			const width = renderTarget.width;
			const height = renderTarget.height;
			let mask = 16384;
			const invalidationArray = [ 36064 ];
			const depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;

			if ( renderTarget.depthBuffer ) {

				invalidationArray.push( depthStyle );

			}

			const renderTargetProperties = properties.get( renderTarget );
			const ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;

			if ( ignoreDepthValues === false ) {

				if ( renderTarget.depthBuffer ) mask |= 256;
				if ( renderTarget.stencilBuffer ) mask |= 1024;

			}

			state.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );
			state.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );

			if ( ignoreDepthValues === true ) {

				_gl.invalidateFramebuffer( 36008, [ depthStyle ] );
				_gl.invalidateFramebuffer( 36009, [ depthStyle ] );

			}

			_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );
			_gl.invalidateFramebuffer( 36008, invalidationArray );

			state.bindFramebuffer( 36008, null );
			state.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );

		}

	}

	function getRenderTargetSamples( renderTarget ) {

		return Math.min( maxSamples, renderTarget.samples );

	}

	function useMultisampledRTT( renderTarget ) {

		const renderTargetProperties = properties.get( renderTarget );

		return isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;

	}

	function updateVideoTexture( texture ) {

		const frame = info.render.frame;

		// Check the last frame we updated the VideoTexture

		if ( _videoTextures.get( texture ) !== frame ) {

			_videoTextures.set( texture, frame );
			texture.update();

		}

	}

	function verifyColorSpace( texture, image ) {

		const encoding = texture.encoding;
		const format = texture.format;
		const type = texture.type;

		if ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;

		if ( encoding !== LinearEncoding ) {

			// sRGB

			if ( encoding === sRGBEncoding ) {

				if ( isWebGL2 === false ) {

					// in WebGL 1, try to use EXT_sRGB extension and unsized formats

					if ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {

						texture.format = _SRGBAFormat;

						// it's not possible to generate mips in WebGL 1 with this extension

						texture.minFilter = LinearFilter;
						texture.generateMipmaps = false;

					} else {

						// slow fallback (CPU decode)

						image = ImageUtils.sRGBToLinear( image );

					}

				} else {

					// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format

					if ( format !== RGBAFormat || type !== UnsignedByteType ) {

						console.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );

					}

				}

			} else {

				console.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );

			}

		}

		return image;

	}

	//

	this.allocateTextureUnit = allocateTextureUnit;
	this.resetTextureUnits = resetTextureUnits;

	this.setTexture2D = setTexture2D;
	this.setTexture2DArray = setTexture2DArray;
	this.setTexture3D = setTexture3D;
	this.setTextureCube = setTextureCube;
	this.rebindTextures = rebindTextures;
	this.setupRenderTarget = setupRenderTarget;
	this.updateRenderTargetMipmap = updateRenderTargetMipmap;
	this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;
	this.setupDepthRenderbuffer = setupDepthRenderbuffer;
	this.setupFrameBufferTexture = setupFrameBufferTexture;
	this.useMultisampledRTT = useMultisampledRTT;

}

function WebGLUtils( gl, extensions, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	function convert( p, encoding = null ) {

		let extension;

		if ( p === UnsignedByteType ) return 5121;
		if ( p === UnsignedShort4444Type ) return 32819;
		if ( p === UnsignedShort5551Type ) return 32820;

		if ( p === ByteType ) return 5120;
		if ( p === ShortType ) return 5122;
		if ( p === UnsignedShortType ) return 5123;
		if ( p === IntType ) return 5124;
		if ( p === UnsignedIntType ) return 5125;
		if ( p === FloatType ) return 5126;

		if ( p === HalfFloatType ) {

			if ( isWebGL2 ) return 5131;

			extension = extensions.get( 'OES_texture_half_float' );

			if ( extension !== null ) {

				return extension.HALF_FLOAT_OES;

			} else {

				return null;

			}

		}

		if ( p === AlphaFormat ) return 6406;
		if ( p === RGBAFormat ) return 6408;
		if ( p === LuminanceFormat ) return 6409;
		if ( p === LuminanceAlphaFormat ) return 6410;
		if ( p === DepthFormat ) return 6402;
		if ( p === DepthStencilFormat ) return 34041;
		if ( p === RedFormat ) return 6403;

		if ( p === RGBFormat ) {

			console.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );
			return 6408;

		}

		// WebGL 1 sRGB fallback

		if ( p === _SRGBAFormat ) {

			extension = extensions.get( 'EXT_sRGB' );

			if ( extension !== null ) {

				return extension.SRGB_ALPHA_EXT;

			} else {

				return null;

			}

		}

		// WebGL2 formats.

		if ( p === RedIntegerFormat ) return 36244;
		if ( p === RGFormat ) return 33319;
		if ( p === RGIntegerFormat ) return 33320;
		if ( p === RGBAIntegerFormat ) return 36249;

		// S3TC

		if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {

			if ( encoding === sRGBEncoding ) {

				extension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );

				if ( extension !== null ) {

					if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;
					if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
					if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
					if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;

				} else {

					return null;

				}

			} else {

				extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );

				if ( extension !== null ) {

					if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;
					if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
					if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;
					if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;

				} else {

					return null;

				}

			}

		}

		// PVRTC

		if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );

			if ( extension !== null ) {

				if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
				if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
				if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
				if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

			} else {

				return null;

			}

		}

		// ETC1

		if ( p === RGB_ETC1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_etc1' );

			if ( extension !== null ) {

				return extension.COMPRESSED_RGB_ETC1_WEBGL;

			} else {

				return null;

			}

		}

		// ETC2

		if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_etc' );

			if ( extension !== null ) {

				if ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;
				if ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;

			} else {

				return null;

			}

		}

		// ASTC

		if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||
			p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||
			p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||
			p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||
			p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_astc' );

			if ( extension !== null ) {

				if ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;
				if ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;
				if ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;
				if ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;
				if ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;
				if ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;
				if ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;
				if ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;
				if ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;
				if ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;
				if ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;
				if ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;
				if ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;
				if ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;

			} else {

				return null;

			}

		}

		// BPTC

		if ( p === RGBA_BPTC_Format ) {

			extension = extensions.get( 'EXT_texture_compression_bptc' );

			if ( extension !== null ) {

				if ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;

			} else {

				return null;

			}

		}

		//

		if ( p === UnsignedInt248Type ) {

			if ( isWebGL2 ) return 34042;

			extension = extensions.get( 'WEBGL_depth_texture' );

			if ( extension !== null ) {

				return extension.UNSIGNED_INT_24_8_WEBGL;

			} else {

				return null;

			}

		}

	}

	return { convert: convert };

}

class ArrayCamera extends PerspectiveCamera {

	constructor( array = [] ) {

		super();

		this.cameras = array;

	}

}

ArrayCamera.prototype.isArrayCamera = true;

class Group extends Object3D {

	constructor() {

		super();

		this.type = 'Group';

	}

}

Group.prototype.isGroup = true;

const _moveEvent = { type: 'move' };

class WebXRController {

	constructor() {

		this._targetRay = null;
		this._grip = null;
		this._hand = null;

	}

	getHandSpace() {

		if ( this._hand === null ) {

			this._hand = new Group();
			this._hand.matrixAutoUpdate = false;
			this._hand.visible = false;

			this._hand.joints = {};
			this._hand.inputState = { pinching: false };

		}

		return this._hand;

	}

	getTargetRaySpace() {

		if ( this._targetRay === null ) {

			this._targetRay = new Group();
			this._targetRay.matrixAutoUpdate = false;
			this._targetRay.visible = false;
			this._targetRay.hasLinearVelocity = false;
			this._targetRay.linearVelocity = new Vector3();
			this._targetRay.hasAngularVelocity = false;
			this._targetRay.angularVelocity = new Vector3();

		}

		return this._targetRay;

	}

	getGripSpace() {

		if ( this._grip === null ) {

			this._grip = new Group();
			this._grip.matrixAutoUpdate = false;
			this._grip.visible = false;
			this._grip.hasLinearVelocity = false;
			this._grip.linearVelocity = new Vector3();
			this._grip.hasAngularVelocity = false;
			this._grip.angularVelocity = new Vector3();

		}

		return this._grip;

	}

	dispatchEvent( event ) {

		if ( this._targetRay !== null ) {

			this._targetRay.dispatchEvent( event );

		}

		if ( this._grip !== null ) {

			this._grip.dispatchEvent( event );

		}

		if ( this._hand !== null ) {

			this._hand.dispatchEvent( event );

		}

		return this;

	}

	disconnect( inputSource ) {

		this.dispatchEvent( { type: 'disconnected', data: inputSource } );

		if ( this._targetRay !== null ) {

			this._targetRay.visible = false;

		}

		if ( this._grip !== null ) {

			this._grip.visible = false;

		}

		if ( this._hand !== null ) {

			this._hand.visible = false;

		}

		return this;

	}

	update( inputSource, frame, referenceSpace ) {

		let inputPose = null;
		let gripPose = null;
		let handPose = null;

		const targetRay = this._targetRay;
		const grip = this._grip;
		const hand = this._hand;

		if ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {

			if ( targetRay !== null ) {

				inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );

				if ( inputPose !== null ) {

					targetRay.matrix.fromArray( inputPose.transform.matrix );
					targetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );

					if ( inputPose.linearVelocity ) {

						targetRay.hasLinearVelocity = true;
						targetRay.linearVelocity.copy( inputPose.linearVelocity );

					} else {

						targetRay.hasLinearVelocity = false;

					}

					if ( inputPose.angularVelocity ) {

						targetRay.hasAngularVelocity = true;
						targetRay.angularVelocity.copy( inputPose.angularVelocity );

					} else {

						targetRay.hasAngularVelocity = false;

					}

					this.dispatchEvent( _moveEvent );

				}

			}

			if ( hand && inputSource.hand ) {

				handPose = true;

				for ( const inputjoint of inputSource.hand.values() ) {

					// Update the joints groups with the XRJoint poses
					const jointPose = frame.getJointPose( inputjoint, referenceSpace );

					if ( hand.joints[ inputjoint.jointName ] === undefined ) {

						// The transform of this joint will be updated with the joint pose on each frame
						const joint = new Group();
						joint.matrixAutoUpdate = false;
						joint.visible = false;
						hand.joints[ inputjoint.jointName ] = joint;
						// ??
						hand.add( joint );

					}

					const joint = hand.joints[ inputjoint.jointName ];

					if ( jointPose !== null ) {

						joint.matrix.fromArray( jointPose.transform.matrix );
						joint.matrix.decompose( joint.position, joint.rotation, joint.scale );
						joint.jointRadius = jointPose.radius;

					}

					joint.visible = jointPose !== null;

				}

				// Custom events

				// Check pinchz
				const indexTip = hand.joints[ 'index-finger-tip' ];
				const thumbTip = hand.joints[ 'thumb-tip' ];
				const distance = indexTip.position.distanceTo( thumbTip.position );

				const distanceToPinch = 0.02;
				const threshold = 0.005;

				if ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {

					hand.inputState.pinching = false;
					this.dispatchEvent( {
						type: 'pinchend',
						handedness: inputSource.handedness,
						target: this
					} );

				} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {

					hand.inputState.pinching = true;
					this.dispatchEvent( {
						type: 'pinchstart',
						handedness: inputSource.handedness,
						target: this
					} );

				}

			} else {

				if ( grip !== null && inputSource.gripSpace ) {

					gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );

					if ( gripPose !== null ) {

						grip.matrix.fromArray( gripPose.transform.matrix );
						grip.matrix.decompose( grip.position, grip.rotation, grip.scale );

						if ( gripPose.linearVelocity ) {

							grip.hasLinearVelocity = true;
							grip.linearVelocity.copy( gripPose.linearVelocity );

						} else {

							grip.hasLinearVelocity = false;

						}

						if ( gripPose.angularVelocity ) {

							grip.hasAngularVelocity = true;
							grip.angularVelocity.copy( gripPose.angularVelocity );

						} else {

							grip.hasAngularVelocity = false;

						}

					}

				}

			}

		}

		if ( targetRay !== null ) {

			targetRay.visible = ( inputPose !== null );

		}

		if ( grip !== null ) {

			grip.visible = ( gripPose !== null );

		}

		if ( hand !== null ) {

			hand.visible = ( handPose !== null );

		}

		return this;

	}

}

class DepthTexture extends Texture {

	constructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {

		format = format !== undefined ? format : DepthFormat;

		if ( format !== DepthFormat && format !== DepthStencilFormat ) {

			throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );

		}

		if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;
		if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.image = { width: width, height: height };

		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

		this.flipY = false;
		this.generateMipmaps	= false;

	}


}

DepthTexture.prototype.isDepthTexture = true;

class WebXRManager extends EventDispatcher {

	constructor( renderer, gl ) {

		super();

		const scope = this;

		let session = null;
		let framebufferScaleFactor = 1.0;

		let referenceSpace = null;
		let referenceSpaceType = 'local-floor';

		let pose = null;
		let glBinding = null;
		let glProjLayer = null;
		let glBaseLayer = null;
		let xrFrame = null;
		const attributes = gl.getContextAttributes();
		let initialRenderTarget = null;
		let newRenderTarget = null;

		const controllers = [];
		const inputSourcesMap = new Map();

		//

		const cameraL = new PerspectiveCamera();
		cameraL.layers.enable( 1 );
		cameraL.viewport = new Vector4();

		const cameraR = new PerspectiveCamera();
		cameraR.layers.enable( 2 );
		cameraR.viewport = new Vector4();

		const cameras = [ cameraL, cameraR ];

		const cameraVR = new ArrayCamera();
		cameraVR.layers.enable( 1 );
		cameraVR.layers.enable( 2 );

		let _currentDepthNear = null;
		let _currentDepthFar = null;

		//

		this.cameraAutoUpdate = true;
		this.enabled = false;

		this.isPresenting = false;

		this.getController = function ( index ) {

			let controller = controllers[ index ];

			if ( controller === undefined ) {

				controller = new WebXRController();
				controllers[ index ] = controller;

			}

			return controller.getTargetRaySpace();

		};

		this.getControllerGrip = function ( index ) {

			let controller = controllers[ index ];

			if ( controller === undefined ) {

				controller = new WebXRController();
				controllers[ index ] = controller;

			}

			return controller.getGripSpace();

		};

		this.getHand = function ( index ) {

			let controller = controllers[ index ];

			if ( controller === undefined ) {

				controller = new WebXRController();
				controllers[ index ] = controller;

			}

			return controller.getHandSpace();

		};

		//

		function onSessionEvent( event ) {

			const controller = inputSourcesMap.get( event.inputSource );

			if ( controller ) {

				controller.dispatchEvent( { type: event.type, data: event.inputSource } );

			}

		}

		function onSessionEnd() {

			inputSourcesMap.forEach( function ( controller, inputSource ) {

				controller.disconnect( inputSource );

			} );

			inputSourcesMap.clear();

			_currentDepthNear = null;
			_currentDepthFar = null;

			// restore framebuffer/rendering state

			renderer.setRenderTarget( initialRenderTarget );

			glBaseLayer = null;
			glProjLayer = null;
			glBinding = null;
			session = null;
			newRenderTarget = null;

			//

			animation.stop();

			scope.isPresenting = false;

			scope.dispatchEvent( { type: 'sessionend' } );

		}

		this.setFramebufferScaleFactor = function ( value ) {

			framebufferScaleFactor = value;

			if ( scope.isPresenting === true ) {

				console.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );

			}

		};

		this.setReferenceSpaceType = function ( value ) {

			referenceSpaceType = value;

			if ( scope.isPresenting === true ) {

				console.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );

			}

		};

		this.getReferenceSpace = function () {

			return referenceSpace;

		};

		this.getBaseLayer = function () {

			return glProjLayer !== null ? glProjLayer : glBaseLayer;

		};

		this.getBinding = function () {

			return glBinding;

		};

		this.getFrame = function () {

			return xrFrame;

		};

		this.getSession = function () {

			return session;

		};

		this.setSession = async function ( value ) {

			session = value;

			if ( session !== null ) {

				initialRenderTarget = renderer.getRenderTarget();

				session.addEventListener( 'select', onSessionEvent );
				session.addEventListener( 'selectstart', onSessionEvent );
				session.addEventListener( 'selectend', onSessionEvent );
				session.addEventListener( 'squeeze', onSessionEvent );
				session.addEventListener( 'squeezestart', onSessionEvent );
				session.addEventListener( 'squeezeend', onSessionEvent );
				session.addEventListener( 'end', onSessionEnd );
				session.addEventListener( 'inputsourceschange', onInputSourcesChange );

				if ( attributes.xrCompatible !== true ) {

					await gl.makeXRCompatible();

				}

				if ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {

					const layerInit = {
						antialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,
						alpha: attributes.alpha,
						depth: attributes.depth,
						stencil: attributes.stencil,
						framebufferScaleFactor: framebufferScaleFactor
					};

					glBaseLayer = new XRWebGLLayer( session, gl, layerInit );

					session.updateRenderState( { baseLayer: glBaseLayer } );

					newRenderTarget = new WebGLRenderTarget(
						glBaseLayer.framebufferWidth,
						glBaseLayer.framebufferHeight,
						{
							format: RGBAFormat,
							type: UnsignedByteType,
							encoding: renderer.outputEncoding
						}
					);

				} else {

					let depthFormat = null;
					let depthType = null;
					let glDepthFormat = null;

					if ( attributes.depth ) {

						glDepthFormat = attributes.stencil ? 35056 : 33190;
						depthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;
						depthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;

					}

					const projectionlayerInit = {
						colorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,
						depthFormat: glDepthFormat,
						scaleFactor: framebufferScaleFactor
					};

					glBinding = new XRWebGLBinding( session, gl );

					glProjLayer = glBinding.createProjectionLayer( projectionlayerInit );

					session.updateRenderState( { layers: [ glProjLayer ] } );

					newRenderTarget = new WebGLRenderTarget(
						glProjLayer.textureWidth,
						glProjLayer.textureHeight,
						{
							format: RGBAFormat,
							type: UnsignedByteType,
							depthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),
							stencilBuffer: attributes.stencil,
							encoding: renderer.outputEncoding,
							samples: attributes.antialias ? 4 : 0
						} );

					const renderTargetProperties = renderer.properties.get( newRenderTarget );
					renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;

				}

				newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278

				// Set foveation to maximum.
				this.setFoveation( 1.0 );

				referenceSpace = await session.requestReferenceSpace( referenceSpaceType );

				animation.setContext( session );
				animation.start();

				scope.isPresenting = true;

				scope.dispatchEvent( { type: 'sessionstart' } );

			}

		};

		function onInputSourcesChange( event ) {

			const inputSources = session.inputSources;

			// Assign inputSources to available controllers

			for ( let i = 0; i < controllers.length; i ++ ) {

				inputSourcesMap.set( inputSources[ i ], controllers[ i ] );

			}

			// Notify disconnected

			for ( let i = 0; i < event.removed.length; i ++ ) {

				const inputSource = event.removed[ i ];
				const controller = inputSourcesMap.get( inputSource );

				if ( controller ) {

					controller.dispatchEvent( { type: 'disconnected', data: inputSource } );
					inputSourcesMap.delete( inputSource );

				}

			}

			// Notify connected

			for ( let i = 0; i < event.added.length; i ++ ) {

				const inputSource = event.added[ i ];
				const controller = inputSourcesMap.get( inputSource );

				if ( controller ) {

					controller.dispatchEvent( { type: 'connected', data: inputSource } );

				}

			}

		}

		//

		const cameraLPos = new Vector3();
		const cameraRPos = new Vector3();

		/**
		 * Assumes 2 cameras that are parallel and share an X-axis, and that
		 * the cameras' projection and world matrices have already been set.
		 * And that near and far planes are identical for both cameras.
		 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
		 */
		function setProjectionFromUnion( camera, cameraL, cameraR ) {

			cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );
			cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );

			const ipd = cameraLPos.distanceTo( cameraRPos );

			const projL = cameraL.projectionMatrix.elements;
			const projR = cameraR.projectionMatrix.elements;

			// VR systems will have identical far and near planes, and
			// most likely identical top and bottom frustum extents.
			// Use the left camera for these values.
			const near = projL[ 14 ] / ( projL[ 10 ] - 1 );
			const far = projL[ 14 ] / ( projL[ 10 ] + 1 );
			const topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];
			const bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];

			const leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];
			const rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];
			const left = near * leftFov;
			const right = near * rightFov;

			// Calculate the new camera's position offset from the
			// left camera. xOffset should be roughly half `ipd`.
			const zOffset = ipd / ( - leftFov + rightFov );
			const xOffset = zOffset * - leftFov;

			// TODO: Better way to apply this offset?
			cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );
			camera.translateX( xOffset );
			camera.translateZ( zOffset );
			camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );
			camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();

			// Find the union of the frustum values of the cameras and scale
			// the values so that the near plane's position does not change in world space,
			// although must now be relative to the new union camera.
			const near2 = near + zOffset;
			const far2 = far + zOffset;
			const left2 = left - xOffset;
			const right2 = right + ( ipd - xOffset );
			const top2 = topFov * far / far2 * near2;
			const bottom2 = bottomFov * far / far2 * near2;

			camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );

		}

		function updateCamera( camera, parent ) {

			if ( parent === null ) {

				camera.matrixWorld.copy( camera.matrix );

			} else {

				camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );

			}

			camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();

		}

		this.updateCamera = function ( camera ) {

			if ( session === null ) return;

			cameraVR.near = cameraR.near = cameraL.near = camera.near;
			cameraVR.far = cameraR.far = cameraL.far = camera.far;

			if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {

				// Note that the new renderState won't apply until the next frame. See #18320

				session.updateRenderState( {
					depthNear: cameraVR.near,
					depthFar: cameraVR.far
				} );

				_currentDepthNear = cameraVR.near;
				_currentDepthFar = cameraVR.far;

			}

			const parent = camera.parent;
			const cameras = cameraVR.cameras;

			updateCamera( cameraVR, parent );

			for ( let i = 0; i < cameras.length; i ++ ) {

				updateCamera( cameras[ i ], parent );

			}

			cameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );

			// update user camera and its children

			camera.position.copy( cameraVR.position );
			camera.quaternion.copy( cameraVR.quaternion );
			camera.scale.copy( cameraVR.scale );
			camera.matrix.copy( cameraVR.matrix );
			camera.matrixWorld.copy( cameraVR.matrixWorld );

			const children = camera.children;

			for ( let i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].updateMatrixWorld( true );

			}

			// update projection matrix for proper view frustum culling

			if ( cameras.length === 2 ) {

				setProjectionFromUnion( cameraVR, cameraL, cameraR );

			} else {

				// assume single camera setup (AR)

				cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );

			}

		};

		this.getCamera = function () {

			return cameraVR;

		};

		this.getFoveation = function () {

			if ( glProjLayer !== null ) {

				return glProjLayer.fixedFoveation;

			}

			if ( glBaseLayer !== null ) {

				return glBaseLayer.fixedFoveation;

			}

			return undefined;

		};

		this.setFoveation = function ( foveation ) {

			// 0 = no foveation = full resolution
			// 1 = maximum foveation = the edges render at lower resolution

			if ( glProjLayer !== null ) {

				glProjLayer.fixedFoveation = foveation;

			}

			if ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {

				glBaseLayer.fixedFoveation = foveation;

			}

		};

		// Animation Loop

		let onAnimationFrameCallback = null;

		function onAnimationFrame( time, frame ) {

			pose = frame.getViewerPose( referenceSpace );
			xrFrame = frame;

			if ( pose !== null ) {

				const views = pose.views;

				if ( glBaseLayer !== null ) {

					renderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );
					renderer.setRenderTarget( newRenderTarget );

				}

				let cameraVRNeedsUpdate = false;

				// check if it's necessary to rebuild cameraVR's camera list

				if ( views.length !== cameraVR.cameras.length ) {

					cameraVR.cameras.length = 0;
					cameraVRNeedsUpdate = true;

				}

				for ( let i = 0; i < views.length; i ++ ) {

					const view = views[ i ];

					let viewport = null;

					if ( glBaseLayer !== null ) {

						viewport = glBaseLayer.getViewport( view );

					} else {

						const glSubImage = glBinding.getViewSubImage( glProjLayer, view );
						viewport = glSubImage.viewport;

						// For side-by-side projection, we only produce a single texture for both eyes.
						if ( i === 0 ) {

							renderer.setRenderTargetTextures(
								newRenderTarget,
								glSubImage.colorTexture,
								glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );

							renderer.setRenderTarget( newRenderTarget );

						}

					}

					const camera = cameras[ i ];

					camera.matrix.fromArray( view.transform.matrix );
					camera.projectionMatrix.fromArray( view.projectionMatrix );
					camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );

					if ( i === 0 ) {

						cameraVR.matrix.copy( camera.matrix );

					}

					if ( cameraVRNeedsUpdate === true ) {

						cameraVR.cameras.push( camera );

					}

				}

			}

			//

			const inputSources = session.inputSources;

			for ( let i = 0; i < controllers.length; i ++ ) {

				const controller = controllers[ i ];
				const inputSource = inputSources[ i ];

				controller.update( inputSource, frame, referenceSpace );

			}

			if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );

			xrFrame = null;

		}

		const animation = new WebGLAnimation();

		animation.setAnimationLoop( onAnimationFrame );

		this.setAnimationLoop = function ( callback ) {

			onAnimationFrameCallback = callback;

		};

		this.dispose = function () {};

	}

}

function WebGLMaterials( properties ) {

	function refreshFogUniforms( uniforms, fog ) {

		uniforms.fogColor.value.copy( fog.color );

		if ( fog.isFog ) {

			uniforms.fogNear.value = fog.near;
			uniforms.fogFar.value = fog.far;

		} else if ( fog.isFogExp2 ) {

			uniforms.fogDensity.value = fog.density;

		}

	}

	function refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {

		if ( material.isMeshBasicMaterial ) {

			refreshUniformsCommon( uniforms, material );

		} else if ( material.isMeshLambertMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsLambert( uniforms, material );

		} else if ( material.isMeshToonMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsToon( uniforms, material );

		} else if ( material.isMeshPhongMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsPhong( uniforms, material );

		} else if ( material.isMeshStandardMaterial ) {

			refreshUniformsCommon( uniforms, material );

			if ( material.isMeshPhysicalMaterial ) {

				refreshUniformsPhysical( uniforms, material, transmissionRenderTarget );

			} else {

				refreshUniformsStandard( uniforms, material );

			}

		} else if ( material.isMeshMatcapMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsMatcap( uniforms, material );

		} else if ( material.isMeshDepthMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsDepth( uniforms, material );

		} else if ( material.isMeshDistanceMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsDistance( uniforms, material );

		} else if ( material.isMeshNormalMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsNormal( uniforms, material );

		} else if ( material.isLineBasicMaterial ) {

			refreshUniformsLine( uniforms, material );

			if ( material.isLineDashedMaterial ) {

				refreshUniformsDash( uniforms, material );

			}

		} else if ( material.isPointsMaterial ) {

			refreshUniformsPoints( uniforms, material, pixelRatio, height );

		} else if ( material.isSpriteMaterial ) {

			refreshUniformsSprites( uniforms, material );

		} else if ( material.isShadowMaterial ) {

			uniforms.color.value.copy( material.color );
			uniforms.opacity.value = material.opacity;

		} else if ( material.isShaderMaterial ) {

			material.uniformsNeedUpdate = false; // #15581

		}

	}

	function refreshUniformsCommon( uniforms, material ) {

		uniforms.opacity.value = material.opacity;

		if ( material.color ) {

			uniforms.diffuse.value.copy( material.color );

		}

		if ( material.emissive ) {

			uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );

		}

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		if ( material.specularMap ) {

			uniforms.specularMap.value = material.specularMap;

		}

		if ( material.alphaTest > 0 ) {

			uniforms.alphaTest.value = material.alphaTest;

		}

		const envMap = properties.get( material ).envMap;

		if ( envMap ) {

			uniforms.envMap.value = envMap;

			uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;

			uniforms.reflectivity.value = material.reflectivity;
			uniforms.ior.value = material.ior;
			uniforms.refractionRatio.value = material.refractionRatio;

		}

		if ( material.lightMap ) {

			uniforms.lightMap.value = material.lightMap;
			uniforms.lightMapIntensity.value = material.lightMapIntensity;

		}

		if ( material.aoMap ) {

			uniforms.aoMap.value = material.aoMap;
			uniforms.aoMapIntensity.value = material.aoMapIntensity;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. specular map
		// 3. displacementMap map
		// 4. normal map
		// 5. bump map
		// 6. roughnessMap map
		// 7. metalnessMap map
		// 8. alphaMap map
		// 9. emissiveMap map
		// 10. clearcoat map
		// 11. clearcoat normal map
		// 12. clearcoat roughnessMap map
		// 13. specular intensity map
		// 14. specular tint map
		// 15. transmission map
		// 16. thickness map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.specularMap ) {

			uvScaleMap = material.specularMap;

		} else if ( material.displacementMap ) {

			uvScaleMap = material.displacementMap;

		} else if ( material.normalMap ) {

			uvScaleMap = material.normalMap;

		} else if ( material.bumpMap ) {

			uvScaleMap = material.bumpMap;

		} else if ( material.roughnessMap ) {

			uvScaleMap = material.roughnessMap;

		} else if ( material.metalnessMap ) {

			uvScaleMap = material.metalnessMap;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		} else if ( material.emissiveMap ) {

			uvScaleMap = material.emissiveMap;

		} else if ( material.clearcoatMap ) {

			uvScaleMap = material.clearcoatMap;

		} else if ( material.clearcoatNormalMap ) {

			uvScaleMap = material.clearcoatNormalMap;

		} else if ( material.clearcoatRoughnessMap ) {

			uvScaleMap = material.clearcoatRoughnessMap;

		} else if ( material.specularIntensityMap ) {

			uvScaleMap = material.specularIntensityMap;

		} else if ( material.specularColorMap ) {

			uvScaleMap = material.specularColorMap;

		} else if ( material.transmissionMap ) {

			uvScaleMap = material.transmissionMap;

		} else if ( material.thicknessMap ) {

			uvScaleMap = material.thicknessMap;

		} else if ( material.sheenColorMap ) {

			uvScaleMap = material.sheenColorMap;

		} else if ( material.sheenRoughnessMap ) {

			uvScaleMap = material.sheenRoughnessMap;

		}

		if ( uvScaleMap !== undefined ) {

			// backwards compatibility
			if ( uvScaleMap.isWebGLRenderTarget ) {

				uvScaleMap = uvScaleMap.texture;

			}

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

		// uv repeat and offset setting priorities for uv2
		// 1. ao map
		// 2. light map

		let uv2ScaleMap;

		if ( material.aoMap ) {

			uv2ScaleMap = material.aoMap;

		} else if ( material.lightMap ) {

			uv2ScaleMap = material.lightMap;

		}

		if ( uv2ScaleMap !== undefined ) {

			// backwards compatibility
			if ( uv2ScaleMap.isWebGLRenderTarget ) {

				uv2ScaleMap = uv2ScaleMap.texture;

			}

			if ( uv2ScaleMap.matrixAutoUpdate === true ) {

				uv2ScaleMap.updateMatrix();

			}

			uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );

		}

	}

	function refreshUniformsLine( uniforms, material ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;

	}

	function refreshUniformsDash( uniforms, material ) {

		uniforms.dashSize.value = material.dashSize;
		uniforms.totalSize.value = material.dashSize + material.gapSize;
		uniforms.scale.value = material.scale;

	}

	function refreshUniformsPoints( uniforms, material, pixelRatio, height ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;
		uniforms.size.value = material.size * pixelRatio;
		uniforms.scale.value = height * 0.5;

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		if ( material.alphaTest > 0 ) {

			uniforms.alphaTest.value = material.alphaTest;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. alpha map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		}

		if ( uvScaleMap !== undefined ) {

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

	}

	function refreshUniformsSprites( uniforms, material ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;
		uniforms.rotation.value = material.rotation;

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		if ( material.alphaTest > 0 ) {

			uniforms.alphaTest.value = material.alphaTest;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. alpha map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		}

		if ( uvScaleMap !== undefined ) {

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

	}

	function refreshUniformsLambert( uniforms, material ) {

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

	}

	function refreshUniformsPhong( uniforms, material ) {

		uniforms.specular.value.copy( material.specular );
		uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsToon( uniforms, material ) {

		if ( material.gradientMap ) {

			uniforms.gradientMap.value = material.gradientMap;

		}

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsStandard( uniforms, material ) {

		uniforms.roughness.value = material.roughness;
		uniforms.metalness.value = material.metalness;

		if ( material.roughnessMap ) {

			uniforms.roughnessMap.value = material.roughnessMap;

		}

		if ( material.metalnessMap ) {

			uniforms.metalnessMap.value = material.metalnessMap;

		}

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

		const envMap = properties.get( material ).envMap;

		if ( envMap ) {

			//uniforms.envMap.value = material.envMap; // part of uniforms common
			uniforms.envMapIntensity.value = material.envMapIntensity;

		}

	}

	function refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {

		refreshUniformsStandard( uniforms, material );

		uniforms.ior.value = material.ior; // also part of uniforms common

		if ( material.sheen > 0 ) {

			uniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );

			uniforms.sheenRoughness.value = material.sheenRoughness;

			if ( material.sheenColorMap ) {

				uniforms.sheenColorMap.value = material.sheenColorMap;

			}

			if ( material.sheenRoughnessMap ) {

				uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;

			}

		}

		if ( material.clearcoat > 0 ) {

			uniforms.clearcoat.value = material.clearcoat;
			uniforms.clearcoatRoughness.value = material.clearcoatRoughness;

			if ( material.clearcoatMap ) {

				uniforms.clearcoatMap.value = material.clearcoatMap;

			}

			if ( material.clearcoatRoughnessMap ) {

				uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;

			}

			if ( material.clearcoatNormalMap ) {

				uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );
				uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;

				if ( material.side === BackSide ) {

					uniforms.clearcoatNormalScale.value.negate();

				}

			}

		}

		if ( material.transmission > 0 ) {

			uniforms.transmission.value = material.transmission;
			uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;
			uniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );

			if ( material.transmissionMap ) {

				uniforms.transmissionMap.value = material.transmissionMap;

			}

			uniforms.thickness.value = material.thickness;

			if ( material.thicknessMap ) {

				uniforms.thicknessMap.value = material.thicknessMap;

			}

			uniforms.attenuationDistance.value = material.attenuationDistance;
			uniforms.attenuationColor.value.copy( material.attenuationColor );

		}

		uniforms.specularIntensity.value = material.specularIntensity;
		uniforms.specularColor.value.copy( material.specularColor );

		if ( material.specularIntensityMap ) {

			uniforms.specularIntensityMap.value = material.specularIntensityMap;

		}

		if ( material.specularColorMap ) {

			uniforms.specularColorMap.value = material.specularColorMap;

		}

	}

	function refreshUniformsMatcap( uniforms, material ) {

		if ( material.matcap ) {

			uniforms.matcap.value = material.matcap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsDepth( uniforms, material ) {

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsDistance( uniforms, material ) {

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

		uniforms.referencePosition.value.copy( material.referencePosition );
		uniforms.nearDistance.value = material.nearDistance;
		uniforms.farDistance.value = material.farDistance;

	}

	function refreshUniformsNormal( uniforms, material ) {

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	return {
		refreshFogUniforms: refreshFogUniforms,
		refreshMaterialUniforms: refreshMaterialUniforms
	};

}

function createCanvasElement() {

	const canvas = createElementNS( 'canvas' );
	canvas.style.display = 'block';
	return canvas;

}

function WebGLRenderer( parameters = {} ) {

	const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),
		_context = parameters.context !== undefined ? parameters.context : null,

		_depth = parameters.depth !== undefined ? parameters.depth : true,
		_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
		_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
		_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
		_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,
		_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',
		_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;

	let _alpha;

	if ( parameters.context !== undefined ) {

		_alpha = _context.getContextAttributes().alpha;

	} else {

		_alpha = parameters.alpha !== undefined ? parameters.alpha : false;

	}

	let currentRenderList = null;
	let currentRenderState = null;

	// render() can be called from within a callback triggered by another render.
	// We track this so that the nested render call gets its list and state isolated from the parent render call.

	const renderListStack = [];
	const renderStateStack = [];

	// public properties

	this.domElement = _canvas;

	// Debug configuration container
	this.debug = {

		/**
		 * Enables error checking and reporting when shader programs are being compiled
		 * @type {boolean}
		 */
		checkShaderErrors: true
	};

	// clearing

	this.autoClear = true;
	this.autoClearColor = true;
	this.autoClearDepth = true;
	this.autoClearStencil = true;

	// scene graph

	this.sortObjects = true;

	// user-defined clipping

	this.clippingPlanes = [];
	this.localClippingEnabled = false;

	// physically based shading

	this.outputEncoding = LinearEncoding;

	// physical lights

	this.physicallyCorrectLights = false;

	// tone mapping

	this.toneMapping = NoToneMapping;
	this.toneMappingExposure = 1.0;

	// internal properties

	const _this = this;

	let _isContextLost = false;

	// internal state cache

	let _currentActiveCubeFace = 0;
	let _currentActiveMipmapLevel = 0;
	let _currentRenderTarget = null;
	let _currentMaterialId = - 1;

	let _currentCamera = null;

	const _currentViewport = new Vector4();
	const _currentScissor = new Vector4();
	let _currentScissorTest = null;

	//

	let _width = _canvas.width;
	let _height = _canvas.height;

	let _pixelRatio = 1;
	let _opaqueSort = null;
	let _transparentSort = null;

	const _viewport = new Vector4( 0, 0, _width, _height );
	const _scissor = new Vector4( 0, 0, _width, _height );
	let _scissorTest = false;

	// frustum

	const _frustum = new Frustum();

	// clipping

	let _clippingEnabled = false;
	let _localClippingEnabled = false;

	// transmission

	let _transmissionRenderTarget = null;

	// camera matrices cache

	const _projScreenMatrix = new Matrix4();

	const _vector2 = new Vector2();
	const _vector3 = new Vector3();

	const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };

	function getTargetPixelRatio() {

		return _currentRenderTarget === null ? _pixelRatio : 1;

	}

	// initialize

	let _gl = _context;

	function getContext( contextNames, contextAttributes ) {

		for ( let i = 0; i < contextNames.length; i ++ ) {

			const contextName = contextNames[ i ];
			const context = _canvas.getContext( contextName, contextAttributes );
			if ( context !== null ) return context;

		}

		return null;

	}

	try {

		const contextAttributes = {
			alpha: true,
			depth: _depth,
			stencil: _stencil,
			antialias: _antialias,
			premultipliedAlpha: _premultipliedAlpha,
			preserveDrawingBuffer: _preserveDrawingBuffer,
			powerPreference: _powerPreference,
			failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat
		};

		// OffscreenCanvas does not have setAttribute, see #22811
		if ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );

		// event listeners must be registered before WebGL context is created, see #12753
		_canvas.addEventListener( 'webglcontextlost', onContextLost, false );
		_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );

		if ( _gl === null ) {

			const contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];

			if ( _this.isWebGL1Renderer === true ) {

				contextNames.shift();

			}

			_gl = getContext( contextNames, contextAttributes );

			if ( _gl === null ) {

				if ( getContext( contextNames ) ) {

					throw new Error( 'Error creating WebGL context with your selected attributes.' );

				} else {

					throw new Error( 'Error creating WebGL context.' );

				}

			}

		}

		// Some experimental-webgl implementations do not have getShaderPrecisionFormat

		if ( _gl.getShaderPrecisionFormat === undefined ) {

			_gl.getShaderPrecisionFormat = function () {

				return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };

			};

		}

	} catch ( error ) {

		console.error( 'THREE.WebGLRenderer: ' + error.message );
		throw error;

	}

	let extensions, capabilities, state, info;
	let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;
	let programCache, materials, renderLists, renderStates, clipping, shadowMap;

	let background, morphtargets, bufferRenderer, indexedBufferRenderer;

	let utils, bindingStates;

	function initGLContext() {

		extensions = new WebGLExtensions( _gl );

		capabilities = new WebGLCapabilities( _gl, extensions, parameters );

		extensions.init( capabilities );

		utils = new WebGLUtils( _gl, extensions, capabilities );

		state = new WebGLState( _gl, extensions, capabilities );

		info = new WebGLInfo( _gl );
		properties = new WebGLProperties();
		textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );
		cubemaps = new WebGLCubeMaps( _this );
		cubeuvmaps = new WebGLCubeUVMaps( _this );
		attributes = new WebGLAttributes( _gl, capabilities );
		bindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );
		geometries = new WebGLGeometries( _gl, attributes, info, bindingStates );
		objects = new WebGLObjects( _gl, geometries, attributes, info );
		morphtargets = new WebGLMorphtargets( _gl, capabilities, textures );
		clipping = new WebGLClipping( properties );
		programCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );
		materials = new WebGLMaterials( properties );
		renderLists = new WebGLRenderLists();
		renderStates = new WebGLRenderStates( extensions, capabilities );
		background = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );
		shadowMap = new WebGLShadowMap( _this, objects, capabilities );

		bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );
		indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );

		info.programs = programCache.programs;

		_this.capabilities = capabilities;
		_this.extensions = extensions;
		_this.properties = properties;
		_this.renderLists = renderLists;
		_this.shadowMap = shadowMap;
		_this.state = state;
		_this.info = info;

	}

	initGLContext();

	// xr

	const xr = new WebXRManager( _this, _gl );

	this.xr = xr;

	// API

	this.getContext = function () {

		return _gl;

	};

	this.getContextAttributes = function () {

		return _gl.getContextAttributes();

	};

	this.forceContextLoss = function () {

		const extension = extensions.get( 'WEBGL_lose_context' );
		if ( extension ) extension.loseContext();

	};

	this.forceContextRestore = function () {

		const extension = extensions.get( 'WEBGL_lose_context' );
		if ( extension ) extension.restoreContext();

	};

	this.getPixelRatio = function () {

		return _pixelRatio;

	};

	this.setPixelRatio = function ( value ) {

		if ( value === undefined ) return;

		_pixelRatio = value;

		this.setSize( _width, _height, false );

	};

	this.getSize = function ( target ) {

		return target.set( _width, _height );

	};

	this.setSize = function ( width, height, updateStyle ) {

		if ( xr.isPresenting ) {

			console.warn( 'THREE.WebGLRenderer: Can\'t change size while VR device is presenting.' );
			return;

		}

		_width = width;
		_height = height;

		_canvas.width = Math.floor( width * _pixelRatio );
		_canvas.height = Math.floor( height * _pixelRatio );

		if ( updateStyle !== false ) {

			_canvas.style.width = width + 'px';
			_canvas.style.height = height + 'px';

		}

		this.setViewport( 0, 0, width, height );

	};

	this.getDrawingBufferSize = function ( target ) {

		return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();

	};

	this.setDrawingBufferSize = function ( width, height, pixelRatio ) {

		_width = width;
		_height = height;

		_pixelRatio = pixelRatio;

		_canvas.width = Math.floor( width * pixelRatio );
		_canvas.height = Math.floor( height * pixelRatio );

		this.setViewport( 0, 0, width, height );

	};

	this.getCurrentViewport = function ( target ) {

		return target.copy( _currentViewport );

	};

	this.getViewport = function ( target ) {

		return target.copy( _viewport );

	};

	this.setViewport = function ( x, y, width, height ) {

		if ( x.isVector4 ) {

			_viewport.set( x.x, x.y, x.z, x.w );

		} else {

			_viewport.set( x, y, width, height );

		}

		state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );

	};

	this.getScissor = function ( target ) {

		return target.copy( _scissor );

	};

	this.setScissor = function ( x, y, width, height ) {

		if ( x.isVector4 ) {

			_scissor.set( x.x, x.y, x.z, x.w );

		} else {

			_scissor.set( x, y, width, height );

		}

		state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );

	};

	this.getScissorTest = function () {

		return _scissorTest;

	};

	this.setScissorTest = function ( boolean ) {

		state.setScissorTest( _scissorTest = boolean );

	};

	this.setOpaqueSort = function ( method ) {

		_opaqueSort = method;

	};

	this.setTransparentSort = function ( method ) {

		_transparentSort = method;

	};

	// Clearing

	this.getClearColor = function ( target ) {

		return target.copy( background.getClearColor() );

	};

	this.setClearColor = function () {

		background.setClearColor.apply( background, arguments );

	};

	this.getClearAlpha = function () {

		return background.getClearAlpha();

	};

	this.setClearAlpha = function () {

		background.setClearAlpha.apply( background, arguments );

	};

	this.clear = function ( color = true, depth = true, stencil = true ) {

		let bits = 0;

		if ( color ) bits |= 16384;
		if ( depth ) bits |= 256;
		if ( stencil ) bits |= 1024;

		_gl.clear( bits );

	};

	this.clearColor = function () {

		this.clear( true, false, false );

	};

	this.clearDepth = function () {

		this.clear( false, true, false );

	};

	this.clearStencil = function () {

		this.clear( false, false, true );

	};

	//

	this.dispose = function () {

		_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );
		_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );

		renderLists.dispose();
		renderStates.dispose();
		properties.dispose();
		cubemaps.dispose();
		cubeuvmaps.dispose();
		objects.dispose();
		bindingStates.dispose();
		programCache.dispose();

		xr.dispose();

		xr.removeEventListener( 'sessionstart', onXRSessionStart );
		xr.removeEventListener( 'sessionend', onXRSessionEnd );

		if ( _transmissionRenderTarget ) {

			_transmissionRenderTarget.dispose();
			_transmissionRenderTarget = null;

		}

		animation.stop();

	};

	// Events

	function onContextLost( event ) {

		event.preventDefault();

		console.log( 'THREE.WebGLRenderer: Context Lost.' );

		_isContextLost = true;

	}

	function onContextRestore( /* event */ ) {

		console.log( 'THREE.WebGLRenderer: Context Restored.' );

		_isContextLost = false;

		const infoAutoReset = info.autoReset;
		const shadowMapEnabled = shadowMap.enabled;
		const shadowMapAutoUpdate = shadowMap.autoUpdate;
		const shadowMapNeedsUpdate = shadowMap.needsUpdate;
		const shadowMapType = shadowMap.type;

		initGLContext();

		info.autoReset = infoAutoReset;
		shadowMap.enabled = shadowMapEnabled;
		shadowMap.autoUpdate = shadowMapAutoUpdate;
		shadowMap.needsUpdate = shadowMapNeedsUpdate;
		shadowMap.type = shadowMapType;

	}

	function onMaterialDispose( event ) {

		const material = event.target;

		material.removeEventListener( 'dispose', onMaterialDispose );

		deallocateMaterial( material );

	}

	// Buffer deallocation

	function deallocateMaterial( material ) {

		releaseMaterialProgramReferences( material );

		properties.remove( material );

	}


	function releaseMaterialProgramReferences( material ) {

		const programs = properties.get( material ).programs;

		if ( programs !== undefined ) {

			programs.forEach( function ( program ) {

				programCache.releaseProgram( program );

			} );

			if ( material.isShaderMaterial ) {

				programCache.releaseShaderCache( material );

			}

		}

	}

	// Buffer rendering

	this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {

		if ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)

		const frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );

		const program = setProgram( camera, scene, geometry, material, object );

		state.setMaterial( material, frontFaceCW );

		//

		let index = geometry.index;
		const position = geometry.attributes.position;

		//

		if ( index === null ) {

			if ( position === undefined || position.count === 0 ) return;

		} else if ( index.count === 0 ) {

			return;

		}

		//

		let rangeFactor = 1;

		if ( material.wireframe === true ) {

			index = geometries.getWireframeAttribute( geometry );
			rangeFactor = 2;

		}

		bindingStates.setup( object, material, program, geometry, index );

		let attribute;
		let renderer = bufferRenderer;

		if ( index !== null ) {

			attribute = attributes.get( index );

			renderer = indexedBufferRenderer;
			renderer.setIndex( attribute );

		}

		//

		const dataCount = ( index !== null ) ? index.count : position.count;

		const rangeStart = geometry.drawRange.start * rangeFactor;
		const rangeCount = geometry.drawRange.count * rangeFactor;

		const groupStart = group !== null ? group.start * rangeFactor : 0;
		const groupCount = group !== null ? group.count * rangeFactor : Infinity;

		const drawStart = Math.max( rangeStart, groupStart );
		const drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;

		const drawCount = Math.max( 0, drawEnd - drawStart + 1 );

		if ( drawCount === 0 ) return;

		//

		if ( object.isMesh ) {

			if ( material.wireframe === true ) {

				state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );
				renderer.setMode( 1 );

			} else {

				renderer.setMode( 4 );

			}

		} else if ( object.isLine ) {

			let lineWidth = material.linewidth;

			if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material

			state.setLineWidth( lineWidth * getTargetPixelRatio() );

			if ( object.isLineSegments ) {

				renderer.setMode( 1 );

			} else if ( object.isLineLoop ) {

				renderer.setMode( 2 );

			} else {

				renderer.setMode( 3 );

			}

		} else if ( object.isPoints ) {

			renderer.setMode( 0 );

		} else if ( object.isSprite ) {

			renderer.setMode( 4 );

		}

		if ( object.isInstancedMesh ) {

			renderer.renderInstances( drawStart, drawCount, object.count );

		} else if ( geometry.isInstancedBufferGeometry ) {

			const instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );

			renderer.renderInstances( drawStart, drawCount, instanceCount );

		} else {

			renderer.render( drawStart, drawCount );

		}

	};

	// Compile

	this.compile = function ( scene, camera ) {

		currentRenderState = renderStates.get( scene );
		currentRenderState.init();

		renderStateStack.push( currentRenderState );

		scene.traverseVisible( function ( object ) {

			if ( object.isLight && object.layers.test( camera.layers ) ) {

				currentRenderState.pushLight( object );

				if ( object.castShadow ) {

					currentRenderState.pushShadow( object );

				}

			}

		} );

		currentRenderState.setupLights( _this.physicallyCorrectLights );

		scene.traverse( function ( object ) {

			const material = object.material;

			if ( material ) {

				if ( Array.isArray( material ) ) {

					for ( let i = 0; i < material.length; i ++ ) {

						const material2 = material[ i ];

						getProgram( material2, scene, object );

					}

				} else {

					getProgram( material, scene, object );

				}

			}

		} );

		renderStateStack.pop();
		currentRenderState = null;

	};

	// Animation Loop

	let onAnimationFrameCallback = null;

	function onAnimationFrame( time ) {

		if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );

	}

	function onXRSessionStart() {

		animation.stop();

	}

	function onXRSessionEnd() {

		animation.start();

	}

	const animation = new WebGLAnimation();
	animation.setAnimationLoop( onAnimationFrame );

	if ( typeof window !== 'undefined' ) animation.setContext( window );

	this.setAnimationLoop = function ( callback ) {

		onAnimationFrameCallback = callback;
		xr.setAnimationLoop( callback );

		( callback === null ) ? animation.stop() : animation.start();

	};

	xr.addEventListener( 'sessionstart', onXRSessionStart );
	xr.addEventListener( 'sessionend', onXRSessionEnd );

	// Rendering

	this.render = function ( scene, camera ) {

		if ( camera !== undefined && camera.isCamera !== true ) {

			console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
			return;

		}

		if ( _isContextLost === true ) return;

		// update scene graph

		if ( scene.autoUpdate === true ) scene.updateMatrixWorld();

		// update camera matrices and frustum

		if ( camera.parent === null ) camera.updateMatrixWorld();

		if ( xr.enabled === true && xr.isPresenting === true ) {

			if ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );

			camera = xr.getCamera(); // use XR camera for rendering

		}

		//
		if ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );

		currentRenderState = renderStates.get( scene, renderStateStack.length );
		currentRenderState.init();

		renderStateStack.push( currentRenderState );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		_frustum.setFromProjectionMatrix( _projScreenMatrix );

		_localClippingEnabled = this.localClippingEnabled;
		_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );

		currentRenderList = renderLists.get( scene, renderListStack.length );
		currentRenderList.init();

		renderListStack.push( currentRenderList );

		projectObject( scene, camera, 0, _this.sortObjects );

		currentRenderList.finish();

		if ( _this.sortObjects === true ) {

			currentRenderList.sort( _opaqueSort, _transparentSort );

		}

		//

		if ( _clippingEnabled === true ) clipping.beginShadows();

		const shadowsArray = currentRenderState.state.shadowsArray;

		shadowMap.render( shadowsArray, scene, camera );

		if ( _clippingEnabled === true ) clipping.endShadows();

		//

		if ( this.info.autoReset === true ) this.info.reset();

		//

		background.render( currentRenderList, scene );

		// render scene

		currentRenderState.setupLights( _this.physicallyCorrectLights );

		if ( camera.isArrayCamera ) {

			const cameras = camera.cameras;

			for ( let i = 0, l = cameras.length; i < l; i ++ ) {

				const camera2 = cameras[ i ];

				renderScene( currentRenderList, scene, camera2, camera2.viewport );

			}

		} else {

			renderScene( currentRenderList, scene, camera );

		}

		//

		if ( _currentRenderTarget !== null ) {

			// resolve multisample renderbuffers to a single-sample texture if necessary

			textures.updateMultisampleRenderTarget( _currentRenderTarget );

			// Generate mipmap if we're using any kind of mipmap filtering

			textures.updateRenderTargetMipmap( _currentRenderTarget );

		}

		//

		if ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );

		// _gl.finish();

		bindingStates.resetDefaultState();
		_currentMaterialId = - 1;
		_currentCamera = null;

		renderStateStack.pop();

		if ( renderStateStack.length > 0 ) {

			currentRenderState = renderStateStack[ renderStateStack.length - 1 ];

		} else {

			currentRenderState = null;

		}

		renderListStack.pop();

		if ( renderListStack.length > 0 ) {

			currentRenderList = renderListStack[ renderListStack.length - 1 ];

		} else {

			currentRenderList = null;

		}

	};

	function projectObject( object, camera, groupOrder, sortObjects ) {

		if ( object.visible === false ) return;

		const visible = object.layers.test( camera.layers );

		if ( visible ) {

			if ( object.isGroup ) {

				groupOrder = object.renderOrder;

			} else if ( object.isLOD ) {

				if ( object.autoUpdate === true ) object.update( camera );

			} else if ( object.isLight ) {

				currentRenderState.pushLight( object );

				if ( object.castShadow ) {

					currentRenderState.pushShadow( object );

				}

			} else if ( object.isSprite ) {

				if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					const geometry = objects.update( object );
					const material = object.material;

					if ( material.visible ) {

						currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

					}

				}

			} else if ( object.isMesh || object.isLine || object.isPoints ) {

				if ( object.isSkinnedMesh ) {

					// update skeleton only once in a frame

					if ( object.skeleton.frame !== info.render.frame ) {

						object.skeleton.update();
						object.skeleton.frame = info.render.frame;

					}

				}

				if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					const geometry = objects.update( object );
					const material = object.material;

					if ( Array.isArray( material ) ) {

						const groups = geometry.groups;

						for ( let i = 0, l = groups.length; i < l; i ++ ) {

							const group = groups[ i ];
							const groupMaterial = material[ group.materialIndex ];

							if ( groupMaterial && groupMaterial.visible ) {

								currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );

							}

						}

					} else if ( material.visible ) {

						currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

					}

				}

			}

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			projectObject( children[ i ], camera, groupOrder, sortObjects );

		}

	}

	function renderScene( currentRenderList, scene, camera, viewport ) {

		const opaqueObjects = currentRenderList.opaque;
		const transmissiveObjects = currentRenderList.transmissive;
		const transparentObjects = currentRenderList.transparent;

		currentRenderState.setupLightsView( camera );

		if ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );

		if ( viewport ) state.viewport( _currentViewport.copy( viewport ) );

		if ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );
		if ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );
		if ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );

		// Ensure depth buffer writing is enabled so it can be cleared on next render

		state.buffers.depth.setTest( true );
		state.buffers.depth.setMask( true );
		state.buffers.color.setMask( true );

		state.setPolygonOffset( false );

	}

	function renderTransmissionPass( opaqueObjects, scene, camera ) {

		const isWebGL2 = capabilities.isWebGL2;

		if ( _transmissionRenderTarget === null ) {

			_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {
				generateMipmaps: true,
				type: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,
				minFilter: LinearMipmapLinearFilter,
				samples: ( isWebGL2 && _antialias === true ) ? 4 : 0
			} );

		}

		_this.getDrawingBufferSize( _vector2 );

		if ( isWebGL2 ) {

			_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );

		} else {

			_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );

		}

		//

		const currentRenderTarget = _this.getRenderTarget();
		_this.setRenderTarget( _transmissionRenderTarget );
		_this.clear();

		// Turn off the features which can affect the frag color for opaque objects pass.
		// Otherwise they are applied twice in opaque objects pass and transmission objects pass.
		const currentToneMapping = _this.toneMapping;
		_this.toneMapping = NoToneMapping;

		renderObjects( opaqueObjects, scene, camera );

		_this.toneMapping = currentToneMapping;

		textures.updateMultisampleRenderTarget( _transmissionRenderTarget );
		textures.updateRenderTargetMipmap( _transmissionRenderTarget );

		_this.setRenderTarget( currentRenderTarget );

	}

	function renderObjects( renderList, scene, camera ) {

		const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;

		for ( let i = 0, l = renderList.length; i < l; i ++ ) {

			const renderItem = renderList[ i ];

			const object = renderItem.object;
			const geometry = renderItem.geometry;
			const material = overrideMaterial === null ? renderItem.material : overrideMaterial;
			const group = renderItem.group;

			if ( object.layers.test( camera.layers ) ) {

				renderObject( object, scene, camera, geometry, material, group );

			}

		}

	}

	function renderObject( object, scene, camera, geometry, material, group ) {

		object.onBeforeRender( _this, scene, camera, geometry, material, group );

		object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );
		object.normalMatrix.getNormalMatrix( object.modelViewMatrix );

		material.onBeforeRender( _this, scene, camera, geometry, object, group );

		if ( material.transparent === true && material.side === DoubleSide ) {

			material.side = BackSide;
			material.needsUpdate = true;
			_this.renderBufferDirect( camera, scene, geometry, material, object, group );

			material.side = FrontSide;
			material.needsUpdate = true;
			_this.renderBufferDirect( camera, scene, geometry, material, object, group );

			material.side = DoubleSide;

		} else {

			_this.renderBufferDirect( camera, scene, geometry, material, object, group );

		}

		object.onAfterRender( _this, scene, camera, geometry, material, group );

	}

	function getProgram( material, scene, object ) {

		if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...

		const materialProperties = properties.get( material );

		const lights = currentRenderState.state.lights;
		const shadowsArray = currentRenderState.state.shadowsArray;

		const lightsStateVersion = lights.state.version;

		const parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );
		const programCacheKey = programCache.getProgramCacheKey( parameters );

		let programs = materialProperties.programs;

		// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change

		materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;
		materialProperties.fog = scene.fog;
		materialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );

		if ( programs === undefined ) {

			// new material

			material.addEventListener( 'dispose', onMaterialDispose );

			programs = new Map();
			materialProperties.programs = programs;

		}

		let program = programs.get( programCacheKey );

		if ( program !== undefined ) {

			// early out if program and light state is identical

			if ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {

				updateCommonMaterialProperties( material, parameters );

				return program;

			}

		} else {

			parameters.uniforms = programCache.getUniforms( material );

			material.onBuild( object, parameters, _this );

			material.onBeforeCompile( parameters, _this );

			program = programCache.acquireProgram( parameters, programCacheKey );
			programs.set( programCacheKey, program );

			materialProperties.uniforms = parameters.uniforms;

		}

		const uniforms = materialProperties.uniforms;

		if ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {

			uniforms.clippingPlanes = clipping.uniform;

		}

		updateCommonMaterialProperties( material, parameters );

		// store the light setup it was created for

		materialProperties.needsLights = materialNeedsLights( material );
		materialProperties.lightsStateVersion = lightsStateVersion;

		if ( materialProperties.needsLights ) {

			// wire up the material to this renderer's lighting state

			uniforms.ambientLightColor.value = lights.state.ambient;
			uniforms.lightProbe.value = lights.state.probe;
			uniforms.directionalLights.value = lights.state.directional;
			uniforms.directionalLightShadows.value = lights.state.directionalShadow;
			uniforms.spotLights.value = lights.state.spot;
			uniforms.spotLightShadows.value = lights.state.spotShadow;
			uniforms.rectAreaLights.value = lights.state.rectArea;
			uniforms.ltc_1.value = lights.state.rectAreaLTC1;
			uniforms.ltc_2.value = lights.state.rectAreaLTC2;
			uniforms.pointLights.value = lights.state.point;
			uniforms.pointLightShadows.value = lights.state.pointShadow;
			uniforms.hemisphereLights.value = lights.state.hemi;

			uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;
			uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;
			uniforms.spotShadowMap.value = lights.state.spotShadowMap;
			uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;
			uniforms.pointShadowMap.value = lights.state.pointShadowMap;
			uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;
			// TODO (abelnation): add area lights shadow info to uniforms

		}

		const progUniforms = program.getUniforms();
		const uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );

		materialProperties.currentProgram = program;
		materialProperties.uniformsList = uniformsList;

		return program;

	}

	function updateCommonMaterialProperties( material, parameters ) {

		const materialProperties = properties.get( material );

		materialProperties.outputEncoding = parameters.outputEncoding;
		materialProperties.instancing = parameters.instancing;
		materialProperties.skinning = parameters.skinning;
		materialProperties.morphTargets = parameters.morphTargets;
		materialProperties.morphNormals = parameters.morphNormals;
		materialProperties.morphColors = parameters.morphColors;
		materialProperties.morphTargetsCount = parameters.morphTargetsCount;
		materialProperties.numClippingPlanes = parameters.numClippingPlanes;
		materialProperties.numIntersection = parameters.numClipIntersection;
		materialProperties.vertexAlphas = parameters.vertexAlphas;
		materialProperties.vertexTangents = parameters.vertexTangents;
		materialProperties.toneMapping = parameters.toneMapping;

	}

	function setProgram( camera, scene, geometry, material, object ) {

		if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...

		textures.resetTextureUnits();

		const fog = scene.fog;
		const environment = material.isMeshStandardMaterial ? scene.environment : null;
		const encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );
		const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );
		const vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;
		const vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;
		const morphTargets = !! geometry.morphAttributes.position;
		const morphNormals = !! geometry.morphAttributes.normal;
		const morphColors = !! geometry.morphAttributes.color;
		const toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;

		const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
		const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;

		const materialProperties = properties.get( material );
		const lights = currentRenderState.state.lights;

		if ( _clippingEnabled === true ) {

			if ( _localClippingEnabled === true || camera !== _currentCamera ) {

				const useCache =
					camera === _currentCamera &&
					material.id === _currentMaterialId;

				// we might want to call this function with some ClippingGroup
				// object instead of the material, once it becomes feasible
				// (#8465, #8379)
				clipping.setState( material, camera, useCache );

			}

		}

		//

		let needsProgramChange = false;

		if ( material.version === materialProperties.__version ) {

			if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {

				needsProgramChange = true;

			} else if ( materialProperties.outputEncoding !== encoding ) {

				needsProgramChange = true;

			} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {

				needsProgramChange = true;

			} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {

				needsProgramChange = true;

			} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {

				needsProgramChange = true;

			} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {

				needsProgramChange = true;

			} else if ( materialProperties.envMap !== envMap ) {

				needsProgramChange = true;

			} else if ( material.fog && materialProperties.fog !== fog ) {

				needsProgramChange = true;

			} else if ( materialProperties.numClippingPlanes !== undefined &&
				( materialProperties.numClippingPlanes !== clipping.numPlanes ||
				materialProperties.numIntersection !== clipping.numIntersection ) ) {

				needsProgramChange = true;

			} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {

				needsProgramChange = true;

			} else if ( materialProperties.vertexTangents !== vertexTangents ) {

				needsProgramChange = true;

			} else if ( materialProperties.morphTargets !== morphTargets ) {

				needsProgramChange = true;

			} else if ( materialProperties.morphNormals !== morphNormals ) {

				needsProgramChange = true;

			} else if ( materialProperties.morphColors !== morphColors ) {

				needsProgramChange = true;

			} else if ( materialProperties.toneMapping !== toneMapping ) {

				needsProgramChange = true;

			} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {

				needsProgramChange = true;

			}

		} else {

			needsProgramChange = true;
			materialProperties.__version = material.version;

		}

		//

		let program = materialProperties.currentProgram;

		if ( needsProgramChange === true ) {

			program = getProgram( material, scene, object );

		}

		let refreshProgram = false;
		let refreshMaterial = false;
		let refreshLights = false;

		const p_uniforms = program.getUniforms(),
			m_uniforms = materialProperties.uniforms;

		if ( state.useProgram( program.program ) ) {

			refreshProgram = true;
			refreshMaterial = true;
			refreshLights = true;

		}

		if ( material.id !== _currentMaterialId ) {

			_currentMaterialId = material.id;

			refreshMaterial = true;

		}

		if ( refreshProgram || _currentCamera !== camera ) {

			p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );

			if ( capabilities.logarithmicDepthBuffer ) {

				p_uniforms.setValue( _gl, 'logDepthBufFC',
					2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );

			}

			if ( _currentCamera !== camera ) {

				_currentCamera = camera;

				// lighting uniforms depend on the camera so enforce an update
				// now, in case this material supports lights - or later, when
				// the next material that does gets activated:

				refreshMaterial = true;		// set to true on material change
				refreshLights = true;		// remains set until update done

			}

			// load material specific uniforms
			// (shader material also gets them for the sake of genericity)

			if ( material.isShaderMaterial ||
				material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshStandardMaterial ||
				material.envMap ) {

				const uCamPos = p_uniforms.map.cameraPosition;

				if ( uCamPos !== undefined ) {

					uCamPos.setValue( _gl,
						_vector3.setFromMatrixPosition( camera.matrixWorld ) );

				}

			}

			if ( material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshBasicMaterial ||
				material.isMeshStandardMaterial ||
				material.isShaderMaterial ) {

				p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );

			}

			if ( material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshBasicMaterial ||
				material.isMeshStandardMaterial ||
				material.isShaderMaterial ||
				material.isShadowMaterial ||
				object.isSkinnedMesh ) {

				p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );

			}

		}

		// skinning and morph target uniforms must be set even if material didn't change
		// auto-setting of texture unit for bone and morph texture must go before other textures
		// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures

		if ( object.isSkinnedMesh ) {

			p_uniforms.setOptional( _gl, object, 'bindMatrix' );
			p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );

			const skeleton = object.skeleton;

			if ( skeleton ) {

				if ( capabilities.floatVertexTextures ) {

					if ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();

					p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );
					p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );

				} else {

					p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );

				}

			}

		}

		const morphAttributes = geometry.morphAttributes;

		if ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {

			morphtargets.update( object, geometry, material, program );

		}


		if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {

			materialProperties.receiveShadow = object.receiveShadow;
			p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );

		}

		if ( refreshMaterial ) {

			p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );

			if ( materialProperties.needsLights ) {

				// the current material requires lighting info

				// note: all lighting uniforms are always set correctly
				// they simply reference the renderer's state for their
				// values
				//
				// use the current material's .needsUpdate flags to set
				// the GL state when required

				markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );

			}

			// refresh uniforms common to several materials

			if ( fog && material.fog ) {

				materials.refreshFogUniforms( m_uniforms, fog );

			}

			materials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );

			WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );

		}

		if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {

			WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );
			material.uniformsNeedUpdate = false;

		}

		if ( material.isSpriteMaterial ) {

			p_uniforms.setValue( _gl, 'center', object.center );

		}

		// common matrices

		p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );
		p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );
		p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );

		return program;

	}

	// If uniforms are marked as clean, they don't need to be loaded to the GPU.

	function markUniformsLightsNeedsUpdate( uniforms, value ) {

		uniforms.ambientLightColor.needsUpdate = value;
		uniforms.lightProbe.needsUpdate = value;

		uniforms.directionalLights.needsUpdate = value;
		uniforms.directionalLightShadows.needsUpdate = value;
		uniforms.pointLights.needsUpdate = value;
		uniforms.pointLightShadows.needsUpdate = value;
		uniforms.spotLights.needsUpdate = value;
		uniforms.spotLightShadows.needsUpdate = value;
		uniforms.rectAreaLights.needsUpdate = value;
		uniforms.hemisphereLights.needsUpdate = value;

		uniforms.directionalShadowMap.needsUpdate = value;
		uniforms.directionalShadowMatrix.needsUpdate = value;
		uniforms.spotShadowMap.needsUpdate = value;
		uniforms.spotShadowMatrix.needsUpdate = value;
		uniforms.pointShadowMap.needsUpdate = value;
		uniforms.pointShadowMatrix.needsUpdate = value;

	}

	function materialNeedsLights( material ) {

		return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||
			material.isMeshStandardMaterial || material.isShadowMaterial ||
			( material.isShaderMaterial && material.lights === true );

	}

	this.getActiveCubeFace = function () {

		return _currentActiveCubeFace;

	};

	this.getActiveMipmapLevel = function () {

		return _currentActiveMipmapLevel;

	};

	this.getRenderTarget = function () {

		return _currentRenderTarget;

	};

	this.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {

		properties.get( renderTarget.texture ).__webglTexture = colorTexture;
		properties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;

		const renderTargetProperties = properties.get( renderTarget );
		renderTargetProperties.__hasExternalTextures = true;

		if ( renderTargetProperties.__hasExternalTextures ) {

			renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;

			if ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {

				// The multisample_render_to_texture extension doesn't work properly if there
				// are midframe flushes and an external depth buffer. Disable use of the extension.
				if ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {

					console.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );
					renderTarget.useRenderToTexture = false;
					renderTarget.useRenderbuffer = true;

				}

			}

		}

	};

	this.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {

		const renderTargetProperties = properties.get( renderTarget );
		renderTargetProperties.__webglFramebuffer = defaultFramebuffer;
		renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;

	};

	this.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {

		_currentRenderTarget = renderTarget;
		_currentActiveCubeFace = activeCubeFace;
		_currentActiveMipmapLevel = activeMipmapLevel;

		let useDefaultFramebuffer = true;

		if ( renderTarget ) {

			const renderTargetProperties = properties.get( renderTarget );

			if ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {

				// We need to make sure to rebind the framebuffer.
				state.bindFramebuffer( 36160, null );
				useDefaultFramebuffer = false;

			} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {

				textures.setupRenderTarget( renderTarget );

			} else if ( renderTargetProperties.__hasExternalTextures ) {

				// Color and depth texture must be rebound in order for the swapchain to update.
				textures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );

			}

		}

		let framebuffer = null;
		let isCube = false;
		let isRenderTarget3D = false;

		if ( renderTarget ) {

			const texture = renderTarget.texture;

			if ( texture.isData3DTexture || texture.isDataArrayTexture ) {

				isRenderTarget3D = true;

			}

			const __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;

			if ( renderTarget.isWebGLCubeRenderTarget ) {

				framebuffer = __webglFramebuffer[ activeCubeFace ];
				isCube = true;

			} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {

				framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;

			} else {

				framebuffer = __webglFramebuffer;

			}

			_currentViewport.copy( renderTarget.viewport );
			_currentScissor.copy( renderTarget.scissor );
			_currentScissorTest = renderTarget.scissorTest;

		} else {

			_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();
			_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();
			_currentScissorTest = _scissorTest;

		}

		const framebufferBound = state.bindFramebuffer( 36160, framebuffer );

		if ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {

			state.drawBuffers( renderTarget, framebuffer );

		}

		state.viewport( _currentViewport );
		state.scissor( _currentScissor );
		state.setScissorTest( _currentScissorTest );

		if ( isCube ) {

			const textureProperties = properties.get( renderTarget.texture );
			_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );

		} else if ( isRenderTarget3D ) {

			const textureProperties = properties.get( renderTarget.texture );
			const layer = activeCubeFace || 0;
			_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );

		}

		_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings

	};

	this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {

		if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {

			console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );
			return;

		}

		let framebuffer = properties.get( renderTarget ).__webglFramebuffer;

		if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {

			framebuffer = framebuffer[ activeCubeFaceIndex ];

		}

		if ( framebuffer ) {

			state.bindFramebuffer( 36160, framebuffer );

			try {

				const texture = renderTarget.texture;
				const textureFormat = texture.format;
				const textureType = texture.type;

				if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );
					return;

				}

				const halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );

				if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)
					! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox
					! halfFloatSupportedByExt ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );
					return;

				}

				if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {

					// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)

					if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {

						_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );

					}

				} else {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );

				}

			} finally {

				// restore framebuffer of current render target if necessary

				const framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;
				state.bindFramebuffer( 36160, framebuffer );

			}

		}

	};

	this.copyFramebufferToTexture = function ( position, texture, level = 0 ) {

		if ( texture.isFramebufferTexture !== true ) {

			console.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );
			return;

		}

		const levelScale = Math.pow( 2, - level );
		const width = Math.floor( texture.image.width * levelScale );
		const height = Math.floor( texture.image.height * levelScale );

		textures.setTexture2D( texture, 0 );

		_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );

		state.unbindTexture();

	};

	this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {

		const width = srcTexture.image.width;
		const height = srcTexture.image.height;
		const glFormat = utils.convert( dstTexture.format );
		const glType = utils.convert( dstTexture.type );

		textures.setTexture2D( dstTexture, 0 );

		// As another texture upload may have changed pixelStorei
		// parameters, make sure they are correct for the dstTexture
		_gl.pixelStorei( 37440, dstTexture.flipY );
		_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );
		_gl.pixelStorei( 3317, dstTexture.unpackAlignment );

		if ( srcTexture.isDataTexture ) {

			_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );

		} else {

			if ( srcTexture.isCompressedTexture ) {

				_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );

			} else {

				_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );

			}

		}

		// Generate mipmaps only when copying level 0
		if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );

		state.unbindTexture();

	};

	this.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {

		if ( _this.isWebGL1Renderer ) {

			console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );
			return;

		}

		const width = sourceBox.max.x - sourceBox.min.x + 1;
		const height = sourceBox.max.y - sourceBox.min.y + 1;
		const depth = sourceBox.max.z - sourceBox.min.z + 1;
		const glFormat = utils.convert( dstTexture.format );
		const glType = utils.convert( dstTexture.type );
		let glTarget;

		if ( dstTexture.isData3DTexture ) {

			textures.setTexture3D( dstTexture, 0 );
			glTarget = 32879;

		} else if ( dstTexture.isDataArrayTexture ) {

			textures.setTexture2DArray( dstTexture, 0 );
			glTarget = 35866;

		} else {

			console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );
			return;

		}

		_gl.pixelStorei( 37440, dstTexture.flipY );
		_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );
		_gl.pixelStorei( 3317, dstTexture.unpackAlignment );

		const unpackRowLen = _gl.getParameter( 3314 );
		const unpackImageHeight = _gl.getParameter( 32878 );
		const unpackSkipPixels = _gl.getParameter( 3316 );
		const unpackSkipRows = _gl.getParameter( 3315 );
		const unpackSkipImages = _gl.getParameter( 32877 );

		const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;

		_gl.pixelStorei( 3314, image.width );
		_gl.pixelStorei( 32878, image.height );
		_gl.pixelStorei( 3316, sourceBox.min.x );
		_gl.pixelStorei( 3315, sourceBox.min.y );
		_gl.pixelStorei( 32877, sourceBox.min.z );

		if ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {

			_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );

		} else {

			if ( srcTexture.isCompressedTexture ) {

				console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );
				_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );

			} else {

				_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );

			}

		}

		_gl.pixelStorei( 3314, unpackRowLen );
		_gl.pixelStorei( 32878, unpackImageHeight );
		_gl.pixelStorei( 3316, unpackSkipPixels );
		_gl.pixelStorei( 3315, unpackSkipRows );
		_gl.pixelStorei( 32877, unpackSkipImages );

		// Generate mipmaps only when copying level 0
		if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );

		state.unbindTexture();

	};

	this.initTexture = function ( texture ) {

		textures.setTexture2D( texture, 0 );

		state.unbindTexture();

	};

	this.resetState = function () {

		_currentActiveCubeFace = 0;
		_currentActiveMipmapLevel = 0;
		_currentRenderTarget = null;

		state.reset();
		bindingStates.reset();

	};

	if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

		__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );

	}

}

WebGLRenderer.prototype.isWebGLRenderer = true;

class WebGL1Renderer extends WebGLRenderer {}

WebGL1Renderer.prototype.isWebGL1Renderer = true;

class FogExp2 {

	constructor( color, density = 0.00025 ) {

		this.name = '';

		this.color = new Color( color );
		this.density = density;

	}

	clone() {

		return new FogExp2( this.color, this.density );

	}

	toJSON( /* meta */ ) {

		return {
			type: 'FogExp2',
			color: this.color.getHex(),
			density: this.density
		};

	}

}

FogExp2.prototype.isFogExp2 = true;

class Fog {

	constructor( color, near = 1, far = 1000 ) {

		this.name = '';

		this.color = new Color( color );

		this.near = near;
		this.far = far;

	}

	clone() {

		return new Fog( this.color, this.near, this.far );

	}

	toJSON( /* meta */ ) {

		return {
			type: 'Fog',
			color: this.color.getHex(),
			near: this.near,
			far: this.far
		};

	}

}

Fog.prototype.isFog = true;

class Scene extends Object3D {

	constructor() {

		super();

		this.type = 'Scene';

		this.background = null;
		this.environment = null;
		this.fog = null;

		this.overrideMaterial = null;

		this.autoUpdate = true; // checked by the renderer

		if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

			__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );

		}

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		if ( source.background !== null ) this.background = source.background.clone();
		if ( source.environment !== null ) this.environment = source.environment.clone();
		if ( source.fog !== null ) this.fog = source.fog.clone();

		if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();

		this.autoUpdate = source.autoUpdate;
		this.matrixAutoUpdate = source.matrixAutoUpdate;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		if ( this.fog !== null ) data.object.fog = this.fog.toJSON();

		return data;

	}

}

Scene.prototype.isScene = true;

class InterleavedBuffer {

	constructor( array, stride ) {

		this.array = array;
		this.stride = stride;
		this.count = array !== undefined ? array.length / stride : 0;

		this.usage = StaticDrawUsage;
		this.updateRange = { offset: 0, count: - 1 };

		this.version = 0;

		this.uuid = generateUUID();

	}

	onUploadCallback() {}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

	setUsage( value ) {

		this.usage = value;

		return this;

	}

	copy( source ) {

		this.array = new source.array.constructor( source.array );
		this.count = source.count;
		this.stride = source.stride;
		this.usage = source.usage;

		return this;

	}

	copyAt( index1, attribute, index2 ) {

		index1 *= this.stride;
		index2 *= attribute.stride;

		for ( let i = 0, l = this.stride; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	}

	set( value, offset = 0 ) {

		this.array.set( value, offset );

		return this;

	}

	clone( data ) {

		if ( data.arrayBuffers === undefined ) {

			data.arrayBuffers = {};

		}

		if ( this.array.buffer._uuid === undefined ) {

			this.array.buffer._uuid = generateUUID();

		}

		if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {

			data.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;

		}

		const array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );

		const ib = new this.constructor( array, this.stride );
		ib.setUsage( this.usage );

		return ib;

	}

	onUpload( callback ) {

		this.onUploadCallback = callback;

		return this;

	}

	toJSON( data ) {

		if ( data.arrayBuffers === undefined ) {

			data.arrayBuffers = {};

		}

		// generate UUID for array buffer if necessary

		if ( this.array.buffer._uuid === undefined ) {

			this.array.buffer._uuid = generateUUID();

		}

		if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {

			data.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );

		}

		//

		return {
			uuid: this.uuid,
			buffer: this.array.buffer._uuid,
			type: this.array.constructor.name,
			stride: this.stride
		};

	}

}

InterleavedBuffer.prototype.isInterleavedBuffer = true;

const _vector$6 = /*@__PURE__*/ new Vector3();

class InterleavedBufferAttribute {

	constructor( interleavedBuffer, itemSize, offset, normalized = false ) {

		this.name = '';

		this.data = interleavedBuffer;
		this.itemSize = itemSize;
		this.offset = offset;

		this.normalized = normalized === true;

	}

	get count() {

		return this.data.count;

	}

	get array() {

		return this.data.array;

	}

	set needsUpdate( value ) {

		this.data.needsUpdate = value;

	}

	applyMatrix4( m ) {

		for ( let i = 0, l = this.data.count; i < l; i ++ ) {

			_vector$6.x = this.getX( i );
			_vector$6.y = this.getY( i );
			_vector$6.z = this.getZ( i );

			_vector$6.applyMatrix4( m );

			this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );

		}

		return this;

	}

	applyNormalMatrix( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$6.x = this.getX( i );
			_vector$6.y = this.getY( i );
			_vector$6.z = this.getZ( i );

			_vector$6.applyNormalMatrix( m );

			this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );

		}

		return this;

	}

	transformDirection( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$6.x = this.getX( i );
			_vector$6.y = this.getY( i );
			_vector$6.z = this.getZ( i );

			_vector$6.transformDirection( m );

			this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );

		}

		return this;

	}

	setX( index, x ) {

		this.data.array[ index * this.data.stride + this.offset ] = x;

		return this;

	}

	setY( index, y ) {

		this.data.array[ index * this.data.stride + this.offset + 1 ] = y;

		return this;

	}

	setZ( index, z ) {

		this.data.array[ index * this.data.stride + this.offset + 2 ] = z;

		return this;

	}

	setW( index, w ) {

		this.data.array[ index * this.data.stride + this.offset + 3 ] = w;

		return this;

	}

	getX( index ) {

		return this.data.array[ index * this.data.stride + this.offset ];

	}

	getY( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 1 ];

	}

	getZ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 2 ];

	}

	getW( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 3 ];

	}

	setXY( index, x, y ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;

		return this;

	}

	setXYZ( index, x, y, z ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;

		return this;

	}

	setXYZW( index, x, y, z, w ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;
		this.data.array[ index + 3 ] = w;

		return this;

	}

	clone( data ) {

		if ( data === undefined ) {

			console.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );

			const array = [];

			for ( let i = 0; i < this.count; i ++ ) {

				const index = i * this.data.stride + this.offset;

				for ( let j = 0; j < this.itemSize; j ++ ) {

					array.push( this.data.array[ index + j ] );

				}

			}

			return new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );

		} else {

			if ( data.interleavedBuffers === undefined ) {

				data.interleavedBuffers = {};

			}

			if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {

				data.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );

			}

			return new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );

		}

	}

	toJSON( data ) {

		if ( data === undefined ) {

			console.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );

			const array = [];

			for ( let i = 0; i < this.count; i ++ ) {

				const index = i * this.data.stride + this.offset;

				for ( let j = 0; j < this.itemSize; j ++ ) {

					array.push( this.data.array[ index + j ] );

				}

			}

			// deinterleave data and save it as an ordinary buffer attribute for now

			return {
				itemSize: this.itemSize,
				type: this.array.constructor.name,
				array: array,
				normalized: this.normalized
			};

		} else {

			// save as true interlaved attribtue

			if ( data.interleavedBuffers === undefined ) {

				data.interleavedBuffers = {};

			}

			if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {

				data.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );

			}

			return {
				isInterleavedBufferAttribute: true,
				itemSize: this.itemSize,
				data: this.data.uuid,
				offset: this.offset,
				normalized: this.normalized
			};

		}

	}

}

InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;

/**
 * parameters = {
 *  color: <hex>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *  rotation: <float>,
 *  sizeAttenuation: <bool>
 * }
 */

class SpriteMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'SpriteMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.rotation = 0;

		this.sizeAttenuation = true;

		this.transparent = true;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.rotation = source.rotation;

		this.sizeAttenuation = source.sizeAttenuation;

		return this;

	}

}

SpriteMaterial.prototype.isSpriteMaterial = true;

let _geometry;

const _intersectPoint = /*@__PURE__*/ new Vector3();
const _worldScale = /*@__PURE__*/ new Vector3();
const _mvPosition = /*@__PURE__*/ new Vector3();

const _alignedPosition = /*@__PURE__*/ new Vector2();
const _rotatedPosition = /*@__PURE__*/ new Vector2();
const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();

const _vA = /*@__PURE__*/ new Vector3();
const _vB = /*@__PURE__*/ new Vector3();
const _vC = /*@__PURE__*/ new Vector3();

const _uvA = /*@__PURE__*/ new Vector2();
const _uvB = /*@__PURE__*/ new Vector2();
const _uvC = /*@__PURE__*/ new Vector2();

class Sprite extends Object3D {

	constructor( material ) {

		super();

		this.type = 'Sprite';

		if ( _geometry === undefined ) {

			_geometry = new BufferGeometry();

			const float32Array = new Float32Array( [
				- 0.5, - 0.5, 0, 0, 0,
				0.5, - 0.5, 0, 1, 0,
				0.5, 0.5, 0, 1, 1,
				- 0.5, 0.5, 0, 0, 1
			] );

			const interleavedBuffer = new InterleavedBuffer( float32Array, 5 );

			_geometry.setIndex( [ 0, 1, 2,	0, 2, 3 ] );
			_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );
			_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );

		}

		this.geometry = _geometry;
		this.material = ( material !== undefined ) ? material : new SpriteMaterial();

		this.center = new Vector2( 0.5, 0.5 );

	}

	raycast( raycaster, intersects ) {

		if ( raycaster.camera === null ) {

			console.error( 'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.' );

		}

		_worldScale.setFromMatrixScale( this.matrixWorld );

		_viewWorldMatrix.copy( raycaster.camera.matrixWorld );
		this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );

		_mvPosition.setFromMatrixPosition( this.modelViewMatrix );

		if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {

			_worldScale.multiplyScalar( - _mvPosition.z );

		}

		const rotation = this.material.rotation;
		let sin, cos;

		if ( rotation !== 0 ) {

			cos = Math.cos( rotation );
			sin = Math.sin( rotation );

		}

		const center = this.center;

		transformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
		transformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
		transformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );

		_uvA.set( 0, 0 );
		_uvB.set( 1, 0 );
		_uvC.set( 1, 1 );

		// check first triangle
		let intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );

		if ( intersect === null ) {

			// check second triangle
			transformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
			_uvB.set( 0, 1 );

			intersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );
			if ( intersect === null ) {

				return;

			}

		}

		const distance = raycaster.ray.origin.distanceTo( _intersectPoint );

		if ( distance < raycaster.near || distance > raycaster.far ) return;

		intersects.push( {

			distance: distance,
			point: _intersectPoint.clone(),
			uv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),
			face: null,
			object: this

		} );

	}

	copy( source ) {

		super.copy( source );

		if ( source.center !== undefined ) this.center.copy( source.center );

		this.material = source.material;

		return this;

	}

}

Sprite.prototype.isSprite = true;

function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {

	// compute position in camera space
	_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );

	// to check if rotation is not zero
	if ( sin !== undefined ) {

		_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );
		_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );

	} else {

		_rotatedPosition.copy( _alignedPosition );

	}


	vertexPosition.copy( mvPosition );
	vertexPosition.x += _rotatedPosition.x;
	vertexPosition.y += _rotatedPosition.y;

	// transform to world space
	vertexPosition.applyMatrix4( _viewWorldMatrix );

}

const _v1$2 = /*@__PURE__*/ new Vector3();
const _v2$1 = /*@__PURE__*/ new Vector3();

class LOD extends Object3D {

	constructor() {

		super();

		this._currentLevel = 0;

		this.type = 'LOD';

		Object.defineProperties( this, {
			levels: {
				enumerable: true,
				value: []
			},
			isLOD: {
				value: true,
			}
		} );

		this.autoUpdate = true;

	}

	copy( source ) {

		super.copy( source, false );

		const levels = source.levels;

		for ( let i = 0, l = levels.length; i < l; i ++ ) {

			const level = levels[ i ];

			this.addLevel( level.object.clone(), level.distance );

		}

		this.autoUpdate = source.autoUpdate;

		return this;

	}

	addLevel( object, distance = 0 ) {

		distance = Math.abs( distance );

		const levels = this.levels;

		let l;

		for ( l = 0; l < levels.length; l ++ ) {

			if ( distance < levels[ l ].distance ) {

				break;

			}

		}

		levels.splice( l, 0, { distance: distance, object: object } );

		this.add( object );

		return this;

	}

	getCurrentLevel() {

		return this._currentLevel;

	}

	getObjectForDistance( distance ) {

		const levels = this.levels;

		if ( levels.length > 0 ) {

			let i, l;

			for ( i = 1, l = levels.length; i < l; i ++ ) {

				if ( distance < levels[ i ].distance ) {

					break;

				}

			}

			return levels[ i - 1 ].object;

		}

		return null;

	}

	raycast( raycaster, intersects ) {

		const levels = this.levels;

		if ( levels.length > 0 ) {

			_v1$2.setFromMatrixPosition( this.matrixWorld );

			const distance = raycaster.ray.origin.distanceTo( _v1$2 );

			this.getObjectForDistance( distance ).raycast( raycaster, intersects );

		}

	}

	update( camera ) {

		const levels = this.levels;

		if ( levels.length > 1 ) {

			_v1$2.setFromMatrixPosition( camera.matrixWorld );
			_v2$1.setFromMatrixPosition( this.matrixWorld );

			const distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;

			levels[ 0 ].object.visible = true;

			let i, l;

			for ( i = 1, l = levels.length; i < l; i ++ ) {

				if ( distance >= levels[ i ].distance ) {

					levels[ i - 1 ].object.visible = false;
					levels[ i ].object.visible = true;

				} else {

					break;

				}

			}

			this._currentLevel = i - 1;

			for ( ; i < l; i ++ ) {

				levels[ i ].object.visible = false;

			}

		}

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		if ( this.autoUpdate === false ) data.object.autoUpdate = false;

		data.object.levels = [];

		const levels = this.levels;

		for ( let i = 0, l = levels.length; i < l; i ++ ) {

			const level = levels[ i ];

			data.object.levels.push( {
				object: level.object.uuid,
				distance: level.distance
			} );

		}

		return data;

	}

}

const _basePosition = /*@__PURE__*/ new Vector3();

const _skinIndex = /*@__PURE__*/ new Vector4();
const _skinWeight = /*@__PURE__*/ new Vector4();

const _vector$5 = /*@__PURE__*/ new Vector3();
const _matrix = /*@__PURE__*/ new Matrix4();

class SkinnedMesh extends Mesh {

	constructor( geometry, material ) {

		super( geometry, material );

		this.type = 'SkinnedMesh';

		this.bindMode = 'attached';
		this.bindMatrix = new Matrix4();
		this.bindMatrixInverse = new Matrix4();

	}

	copy( source ) {

		super.copy( source );

		this.bindMode = source.bindMode;
		this.bindMatrix.copy( source.bindMatrix );
		this.bindMatrixInverse.copy( source.bindMatrixInverse );

		this.skeleton = source.skeleton;

		return this;

	}

	bind( skeleton, bindMatrix ) {

		this.skeleton = skeleton;

		if ( bindMatrix === undefined ) {

			this.updateMatrixWorld( true );

			this.skeleton.calculateInverses();

			bindMatrix = this.matrixWorld;

		}

		this.bindMatrix.copy( bindMatrix );
		this.bindMatrixInverse.copy( bindMatrix ).invert();

	}

	pose() {

		this.skeleton.pose();

	}

	normalizeSkinWeights() {

		const vector = new Vector4();

		const skinWeight = this.geometry.attributes.skinWeight;

		for ( let i = 0, l = skinWeight.count; i < l; i ++ ) {

			vector.x = skinWeight.getX( i );
			vector.y = skinWeight.getY( i );
			vector.z = skinWeight.getZ( i );
			vector.w = skinWeight.getW( i );

			const scale = 1.0 / vector.manhattanLength();

			if ( scale !== Infinity ) {

				vector.multiplyScalar( scale );

			} else {

				vector.set( 1, 0, 0, 0 ); // do something reasonable

			}

			skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );

		}

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		if ( this.bindMode === 'attached' ) {

			this.bindMatrixInverse.copy( this.matrixWorld ).invert();

		} else if ( this.bindMode === 'detached' ) {

			this.bindMatrixInverse.copy( this.bindMatrix ).invert();

		} else {

			console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );

		}

	}

	boneTransform( index, target ) {

		const skeleton = this.skeleton;
		const geometry = this.geometry;

		_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );
		_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );

		_basePosition.copy( target ).applyMatrix4( this.bindMatrix );

		target.set( 0, 0, 0 );

		for ( let i = 0; i < 4; i ++ ) {

			const weight = _skinWeight.getComponent( i );

			if ( weight !== 0 ) {

				const boneIndex = _skinIndex.getComponent( i );

				_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );

				target.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );

			}

		}

		return target.applyMatrix4( this.bindMatrixInverse );

	}

}

SkinnedMesh.prototype.isSkinnedMesh = true;

class Bone extends Object3D {

	constructor() {

		super();

		this.type = 'Bone';

	}

}

Bone.prototype.isBone = true;

class DataTexture extends Texture {

	constructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { data: data, width: width, height: height };

		this.generateMipmaps = false;
		this.flipY = false;
		this.unpackAlignment = 1;

	}

}

DataTexture.prototype.isDataTexture = true;

const _offsetMatrix = /*@__PURE__*/ new Matrix4();
const _identityMatrix = /*@__PURE__*/ new Matrix4();

class Skeleton {

	constructor( bones = [], boneInverses = [] ) {

		this.uuid = generateUUID();

		this.bones = bones.slice( 0 );
		this.boneInverses = boneInverses;
		this.boneMatrices = null;

		this.boneTexture = null;
		this.boneTextureSize = 0;

		this.frame = - 1;

		this.init();

	}

	init() {

		const bones = this.bones;
		const boneInverses = this.boneInverses;

		this.boneMatrices = new Float32Array( bones.length * 16 );

		// calculate inverse bone matrices if necessary

		if ( boneInverses.length === 0 ) {

			this.calculateInverses();

		} else {

			// handle special case

			if ( bones.length !== boneInverses.length ) {

				console.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );

				this.boneInverses = [];

				for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

					this.boneInverses.push( new Matrix4() );

				}

			}

		}

	}

	calculateInverses() {

		this.boneInverses.length = 0;

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const inverse = new Matrix4();

			if ( this.bones[ i ] ) {

				inverse.copy( this.bones[ i ].matrixWorld ).invert();

			}

			this.boneInverses.push( inverse );

		}

	}

	pose() {

		// recover the bind-time world matrices

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone ) {

				bone.matrixWorld.copy( this.boneInverses[ i ] ).invert();

			}

		}

		// compute the local matrices, positions, rotations and scales

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone ) {

				if ( bone.parent && bone.parent.isBone ) {

					bone.matrix.copy( bone.parent.matrixWorld ).invert();
					bone.matrix.multiply( bone.matrixWorld );

				} else {

					bone.matrix.copy( bone.matrixWorld );

				}

				bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );

			}

		}

	}

	update() {

		const bones = this.bones;
		const boneInverses = this.boneInverses;
		const boneMatrices = this.boneMatrices;
		const boneTexture = this.boneTexture;

		// flatten bone matrices to array

		for ( let i = 0, il = bones.length; i < il; i ++ ) {

			// compute the offset between the current and the original transform

			const matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;

			_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );
			_offsetMatrix.toArray( boneMatrices, i * 16 );

		}

		if ( boneTexture !== null ) {

			boneTexture.needsUpdate = true;

		}

	}

	clone() {

		return new Skeleton( this.bones, this.boneInverses );

	}

	computeBoneTexture() {

		// layout (1 matrix = 4 pixels)
		//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
		//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
		//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
		//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
		//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)

		let size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix
		size = ceilPowerOfTwo( size );
		size = Math.max( size, 4 );

		const boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel
		boneMatrices.set( this.boneMatrices ); // copy current values

		const boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );
		boneTexture.needsUpdate = true;

		this.boneMatrices = boneMatrices;
		this.boneTexture = boneTexture;
		this.boneTextureSize = size;

		return this;

	}

	getBoneByName( name ) {

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone.name === name ) {

				return bone;

			}

		}

		return undefined;

	}

	dispose( ) {

		if ( this.boneTexture !== null ) {

			this.boneTexture.dispose();

			this.boneTexture = null;

		}

	}

	fromJSON( json, bones ) {

		this.uuid = json.uuid;

		for ( let i = 0, l = json.bones.length; i < l; i ++ ) {

			const uuid = json.bones[ i ];
			let bone = bones[ uuid ];

			if ( bone === undefined ) {

				console.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );
				bone = new Bone();

			}

			this.bones.push( bone );
			this.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );

		}

		this.init();

		return this;

	}

	toJSON() {

		const data = {
			metadata: {
				version: 4.5,
				type: 'Skeleton',
				generator: 'Skeleton.toJSON'
			},
			bones: [],
			boneInverses: []
		};

		data.uuid = this.uuid;

		const bones = this.bones;
		const boneInverses = this.boneInverses;

		for ( let i = 0, l = bones.length; i < l; i ++ ) {

			const bone = bones[ i ];
			data.bones.push( bone.uuid );

			const boneInverse = boneInverses[ i ];
			data.boneInverses.push( boneInverse.toArray() );

		}

		return data;

	}

}

class InstancedBufferAttribute extends BufferAttribute {

	constructor( array, itemSize, normalized, meshPerAttribute = 1 ) {

		if ( typeof normalized === 'number' ) {

			meshPerAttribute = normalized;

			normalized = false;

			console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );

		}

		super( array, itemSize, normalized );

		this.meshPerAttribute = meshPerAttribute;

	}

	copy( source ) {

		super.copy( source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.meshPerAttribute = this.meshPerAttribute;

		data.isInstancedBufferAttribute = true;

		return data;

	}

}

InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;

const _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();
const _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();

const _instanceIntersects = [];

const _mesh = /*@__PURE__*/ new Mesh();

class InstancedMesh extends Mesh {

	constructor( geometry, material, count ) {

		super( geometry, material );

		this.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );
		this.instanceColor = null;

		this.count = count;

		this.frustumCulled = false;

	}

	copy( source ) {

		super.copy( source );

		this.instanceMatrix.copy( source.instanceMatrix );

		if ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();

		this.count = source.count;

		return this;

	}

	getColorAt( index, color ) {

		color.fromArray( this.instanceColor.array, index * 3 );

	}

	getMatrixAt( index, matrix ) {

		matrix.fromArray( this.instanceMatrix.array, index * 16 );

	}

	raycast( raycaster, intersects ) {

		const matrixWorld = this.matrixWorld;
		const raycastTimes = this.count;

		_mesh.geometry = this.geometry;
		_mesh.material = this.material;

		if ( _mesh.material === undefined ) return;

		for ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {

			// calculate the world matrix for each instance

			this.getMatrixAt( instanceId, _instanceLocalMatrix );

			_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );

			// the mesh represents this single instance

			_mesh.matrixWorld = _instanceWorldMatrix;

			_mesh.raycast( raycaster, _instanceIntersects );

			// process the result of raycast

			for ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {

				const intersect = _instanceIntersects[ i ];
				intersect.instanceId = instanceId;
				intersect.object = this;
				intersects.push( intersect );

			}

			_instanceIntersects.length = 0;

		}

	}

	setColorAt( index, color ) {

		if ( this.instanceColor === null ) {

			this.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );

		}

		color.toArray( this.instanceColor.array, index * 3 );

	}

	setMatrixAt( index, matrix ) {

		matrix.toArray( this.instanceMatrix.array, index * 16 );

	}

	updateMorphTargets() {

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

}

InstancedMesh.prototype.isInstancedMesh = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */

class LineBasicMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'LineBasicMaterial';

		this.color = new Color( 0xffffff );

		this.linewidth = 1;
		this.linecap = 'round';
		this.linejoin = 'round';

		this.setValues( parameters );

	}


	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.linewidth = source.linewidth;
		this.linecap = source.linecap;
		this.linejoin = source.linejoin;

		return this;

	}

}

LineBasicMaterial.prototype.isLineBasicMaterial = true;

const _start$1 = /*@__PURE__*/ new Vector3();
const _end$1 = /*@__PURE__*/ new Vector3();
const _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();
const _ray$1 = /*@__PURE__*/ new Ray();
const _sphere$1 = /*@__PURE__*/ new Sphere();

class Line extends Object3D {

	constructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {

		super();

		this.type = 'Line';

		this.geometry = geometry;
		this.material = material;

		this.updateMorphTargets();

	}

	copy( source ) {

		super.copy( source );

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	}

	computeLineDistances() {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			// we assume non-indexed geometry

			if ( geometry.index === null ) {

				const positionAttribute = geometry.attributes.position;
				const lineDistances = [ 0 ];

				for ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {

					_start$1.fromBufferAttribute( positionAttribute, i - 1 );
					_end$1.fromBufferAttribute( positionAttribute, i );

					lineDistances[ i ] = lineDistances[ i - 1 ];
					lineDistances[ i ] += _start$1.distanceTo( _end$1 );

				}

				geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

			} else {

				console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

		return this;

	}

	raycast( raycaster, intersects ) {

		const geometry = this.geometry;
		const matrixWorld = this.matrixWorld;
		const threshold = raycaster.params.Line.threshold;
		const drawRange = geometry.drawRange;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$1.copy( geometry.boundingSphere );
		_sphere$1.applyMatrix4( matrixWorld );
		_sphere$1.radius += threshold;

		if ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;

		//

		_inverseMatrix$1.copy( matrixWorld ).invert();
		_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );

		const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
		const localThresholdSq = localThreshold * localThreshold;

		const vStart = new Vector3();
		const vEnd = new Vector3();
		const interSegment = new Vector3();
		const interRay = new Vector3();
		const step = this.isLineSegments ? 2 : 1;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const attributes = geometry.attributes;
			const positionAttribute = attributes.position;

			if ( index !== null ) {

				const start = Math.max( 0, drawRange.start );
				const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );

				for ( let i = start, l = end - 1; i < l; i += step ) {

					const a = index.getX( i );
					const b = index.getX( i + 1 );

					vStart.fromBufferAttribute( positionAttribute, a );
					vEnd.fromBufferAttribute( positionAttribute, b );

					const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

					if ( distSq > localThresholdSq ) continue;

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					const distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) continue;

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			} else {

				const start = Math.max( 0, drawRange.start );
				const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );

				for ( let i = start, l = end - 1; i < l; i += step ) {

					vStart.fromBufferAttribute( positionAttribute, i );
					vEnd.fromBufferAttribute( positionAttribute, i + 1 );

					const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

					if ( distSq > localThresholdSq ) continue;

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					const distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) continue;

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	}

	updateMorphTargets() {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	}

}

Line.prototype.isLine = true;

const _start = /*@__PURE__*/ new Vector3();
const _end = /*@__PURE__*/ new Vector3();

class LineSegments extends Line {

	constructor( geometry, material ) {

		super( geometry, material );

		this.type = 'LineSegments';

	}

	computeLineDistances() {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			// we assume non-indexed geometry

			if ( geometry.index === null ) {

				const positionAttribute = geometry.attributes.position;
				const lineDistances = [];

				for ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {

					_start.fromBufferAttribute( positionAttribute, i );
					_end.fromBufferAttribute( positionAttribute, i + 1 );

					lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];
					lineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );

				}

				geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

			} else {

				console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

		return this;

	}

}

LineSegments.prototype.isLineSegments = true;

class LineLoop extends Line {

	constructor( geometry, material ) {

		super( geometry, material );

		this.type = 'LineLoop';

	}

}

LineLoop.prototype.isLineLoop = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 *
 * }
 */

class PointsMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'PointsMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.size = 1;
		this.sizeAttenuation = true;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.size = source.size;
		this.sizeAttenuation = source.sizeAttenuation;

		return this;

	}

}

PointsMaterial.prototype.isPointsMaterial = true;

const _inverseMatrix = /*@__PURE__*/ new Matrix4();
const _ray = /*@__PURE__*/ new Ray();
const _sphere = /*@__PURE__*/ new Sphere();
const _position$2 = /*@__PURE__*/ new Vector3();

class Points extends Object3D {

	constructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {

		super();

		this.type = 'Points';

		this.geometry = geometry;
		this.material = material;

		this.updateMorphTargets();

	}

	copy( source ) {

		super.copy( source );

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	}

	raycast( raycaster, intersects ) {

		const geometry = this.geometry;
		const matrixWorld = this.matrixWorld;
		const threshold = raycaster.params.Points.threshold;
		const drawRange = geometry.drawRange;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere.copy( geometry.boundingSphere );
		_sphere.applyMatrix4( matrixWorld );
		_sphere.radius += threshold;

		if ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;

		//

		_inverseMatrix.copy( matrixWorld ).invert();
		_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );

		const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
		const localThresholdSq = localThreshold * localThreshold;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const attributes = geometry.attributes;
			const positionAttribute = attributes.position;

			if ( index !== null ) {

				const start = Math.max( 0, drawRange.start );
				const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );

				for ( let i = start, il = end; i < il; i ++ ) {

					const a = index.getX( i );

					_position$2.fromBufferAttribute( positionAttribute, a );

					testPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );

				}

			} else {

				const start = Math.max( 0, drawRange.start );
				const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );

				for ( let i = start, l = end; i < l; i ++ ) {

					_position$2.fromBufferAttribute( positionAttribute, i );

					testPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );

				}

			}

		} else {

			console.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	}

	updateMorphTargets() {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	}

}

Points.prototype.isPoints = true;

function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {

	const rayPointDistanceSq = _ray.distanceSqToPoint( point );

	if ( rayPointDistanceSq < localThresholdSq ) {

		const intersectPoint = new Vector3();

		_ray.closestPointToPoint( point, intersectPoint );
		intersectPoint.applyMatrix4( matrixWorld );

		const distance = raycaster.ray.origin.distanceTo( intersectPoint );

		if ( distance < raycaster.near || distance > raycaster.far ) return;

		intersects.push( {

			distance: distance,
			distanceToRay: Math.sqrt( rayPointDistanceSq ),
			point: intersectPoint,
			index: index,
			face: null,
			object: object

		} );

	}

}

class VideoTexture extends Texture {

	constructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		super( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;
		this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;

		this.generateMipmaps = false;

		const scope = this;

		function updateVideo() {

			scope.needsUpdate = true;
			video.requestVideoFrameCallback( updateVideo );

		}

		if ( 'requestVideoFrameCallback' in video ) {

			video.requestVideoFrameCallback( updateVideo );

		}

	}

	clone() {

		return new this.constructor( this.image ).copy( this );

	}

	update() {

		const video = this.image;
		const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;

		if ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {

			this.needsUpdate = true;

		}

	}

}

VideoTexture.prototype.isVideoTexture = true;

class FramebufferTexture extends Texture {

	constructor( width, height, format ) {

		super( { width, height } );

		this.format = format;

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.generateMipmaps = false;

		this.needsUpdate = true;

	}

}

FramebufferTexture.prototype.isFramebufferTexture = true;

class CompressedTexture extends Texture {

	constructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { width: width, height: height };
		this.mipmaps = mipmaps;

		// no flipping for cube textures
		// (also flipping doesn't work for compressed textures )

		this.flipY = false;

		// can't generate mipmaps for compressed textures
		// mips must be embedded in DDS files

		this.generateMipmaps = false;

	}

}

CompressedTexture.prototype.isCompressedTexture = true;

class CanvasTexture extends Texture {

	constructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		super( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.needsUpdate = true;

	}

}

CanvasTexture.prototype.isCanvasTexture = true;

class CircleGeometry extends BufferGeometry {

	constructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();

		this.type = 'CircleGeometry';

		this.parameters = {
			radius: radius,
			segments: segments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		segments = Math.max( 3, segments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const vertex = new Vector3();
		const uv = new Vector2();

		// center point

		vertices.push( 0, 0, 0 );
		normals.push( 0, 0, 1 );
		uvs.push( 0.5, 0.5 );

		for ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {

			const segment = thetaStart + s / segments * thetaLength;

			// vertex

			vertex.x = radius * Math.cos( segment );
			vertex.y = radius * Math.sin( segment );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normals.push( 0, 0, 1 );

			// uvs

			uv.x = ( vertices[ i ] / radius + 1 ) / 2;
			uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;

			uvs.push( uv.x, uv.y );

		}

		// indices

		for ( let i = 1; i <= segments; i ++ ) {

			indices.push( i, i + 1, 0 );

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	static fromJSON( data ) {

		return new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );

	}

}

class CylinderGeometry extends BufferGeometry {

	constructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();
		this.type = 'CylinderGeometry';

		this.parameters = {
			radiusTop: radiusTop,
			radiusBottom: radiusBottom,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		const scope = this;

		radialSegments = Math.floor( radialSegments );
		heightSegments = Math.floor( heightSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let index = 0;
		const indexArray = [];
		const halfHeight = height / 2;
		let groupStart = 0;

		// generate geometry

		generateTorso();

		if ( openEnded === false ) {

			if ( radiusTop > 0 ) generateCap( true );
			if ( radiusBottom > 0 ) generateCap( false );

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		function generateTorso() {

			const normal = new Vector3();
			const vertex = new Vector3();

			let groupCount = 0;

			// this will be used to calculate the normal
			const slope = ( radiusBottom - radiusTop ) / height;

			// generate vertices, normals and uvs

			for ( let y = 0; y <= heightSegments; y ++ ) {

				const indexRow = [];

				const v = y / heightSegments;

				// calculate the radius of the current row

				const radius = v * ( radiusBottom - radiusTop ) + radiusTop;

				for ( let x = 0; x <= radialSegments; x ++ ) {

					const u = x / radialSegments;

					const theta = u * thetaLength + thetaStart;

					const sinTheta = Math.sin( theta );
					const cosTheta = Math.cos( theta );

					// vertex

					vertex.x = radius * sinTheta;
					vertex.y = - v * height + halfHeight;
					vertex.z = radius * cosTheta;
					vertices.push( vertex.x, vertex.y, vertex.z );

					// normal

					normal.set( sinTheta, slope, cosTheta ).normalize();
					normals.push( normal.x, normal.y, normal.z );

					// uv

					uvs.push( u, 1 - v );

					// save index of vertex in respective row

					indexRow.push( index ++ );

				}

				// now save vertices of the row in our index array

				indexArray.push( indexRow );

			}

			// generate indices

			for ( let x = 0; x < radialSegments; x ++ ) {

				for ( let y = 0; y < heightSegments; y ++ ) {

					// we use the index array to access the correct indices

					const a = indexArray[ y ][ x ];
					const b = indexArray[ y + 1 ][ x ];
					const c = indexArray[ y + 1 ][ x + 1 ];
					const d = indexArray[ y ][ x + 1 ];

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

					// update group counter

					groupCount += 6;

				}

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, 0 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

		function generateCap( top ) {

			// save the index of the first center vertex
			const centerIndexStart = index;

			const uv = new Vector2();
			const vertex = new Vector3();

			let groupCount = 0;

			const radius = ( top === true ) ? radiusTop : radiusBottom;
			const sign = ( top === true ) ? 1 : - 1;

			// first we generate the center vertex data of the cap.
			// because the geometry needs one set of uvs per face,
			// we must generate a center vertex per face/segment

			for ( let x = 1; x <= radialSegments; x ++ ) {

				// vertex

				vertices.push( 0, halfHeight * sign, 0 );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uvs.push( 0.5, 0.5 );

				// increase index

				index ++;

			}

			// save the index of the last center vertex
			const centerIndexEnd = index;

			// now we generate the surrounding vertices, normals and uvs

			for ( let x = 0; x <= radialSegments; x ++ ) {

				const u = x / radialSegments;
				const theta = u * thetaLength + thetaStart;

				const cosTheta = Math.cos( theta );
				const sinTheta = Math.sin( theta );

				// vertex

				vertex.x = radius * sinTheta;
				vertex.y = halfHeight * sign;
				vertex.z = radius * cosTheta;
				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uv.x = ( cosTheta * 0.5 ) + 0.5;
				uv.y = ( sinTheta * 0.5 * sign ) + 0.5;
				uvs.push( uv.x, uv.y );

				// increase index

				index ++;

			}

			// generate indices

			for ( let x = 0; x < radialSegments; x ++ ) {

				const c = centerIndexStart + x;
				const i = centerIndexEnd + x;

				if ( top === true ) {

					// face top

					indices.push( i, i + 1, c );

				} else {

					// face bottom

					indices.push( i + 1, i, c );

				}

				groupCount += 3;

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

	}

	static fromJSON( data ) {

		return new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );

	}

}

class ConeGeometry extends CylinderGeometry {

	constructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

		this.type = 'ConeGeometry';

		this.parameters = {
			radius: radius,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

	}

	static fromJSON( data ) {

		return new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );

	}

}

class PolyhedronGeometry extends BufferGeometry {

	constructor( vertices = [], indices = [], radius = 1, detail = 0 ) {

		super();

		this.type = 'PolyhedronGeometry';

		this.parameters = {
			vertices: vertices,
			indices: indices,
			radius: radius,
			detail: detail
		};

		// default buffer data

		const vertexBuffer = [];
		const uvBuffer = [];

		// the subdivision creates the vertex buffer data

		subdivide( detail );

		// all vertices should lie on a conceptual sphere with a given radius

		applyRadius( radius );

		// finally, create the uv data

		generateUVs();

		// build non-indexed geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );

		if ( detail === 0 ) {

			this.computeVertexNormals(); // flat normals

		} else {

			this.normalizeNormals(); // smooth normals

		}

		// helper functions

		function subdivide( detail ) {

			const a = new Vector3();
			const b = new Vector3();
			const c = new Vector3();

			// iterate over all faces and apply a subdivison with the given detail value

			for ( let i = 0; i < indices.length; i += 3 ) {

				// get the vertices of the face

				getVertexByIndex( indices[ i + 0 ], a );
				getVertexByIndex( indices[ i + 1 ], b );
				getVertexByIndex( indices[ i + 2 ], c );

				// perform subdivision

				subdivideFace( a, b, c, detail );

			}

		}

		function subdivideFace( a, b, c, detail ) {

			const cols = detail + 1;

			// we use this multidimensional array as a data structure for creating the subdivision

			const v = [];

			// construct all of the vertices for this subdivision

			for ( let i = 0; i <= cols; i ++ ) {

				v[ i ] = [];

				const aj = a.clone().lerp( c, i / cols );
				const bj = b.clone().lerp( c, i / cols );

				const rows = cols - i;

				for ( let j = 0; j <= rows; j ++ ) {

					if ( j === 0 && i === cols ) {

						v[ i ][ j ] = aj;

					} else {

						v[ i ][ j ] = aj.clone().lerp( bj, j / rows );

					}

				}

			}

			// construct all of the faces

			for ( let i = 0; i < cols; i ++ ) {

				for ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {

					const k = Math.floor( j / 2 );

					if ( j % 2 === 0 ) {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );
						pushVertex( v[ i ][ k ] );

					} else {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );

					}

				}

			}

		}

		function applyRadius( radius ) {

			const vertex = new Vector3();

			// iterate over the entire buffer and apply the radius to each vertex

			for ( let i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				vertex.normalize().multiplyScalar( radius );

				vertexBuffer[ i + 0 ] = vertex.x;
				vertexBuffer[ i + 1 ] = vertex.y;
				vertexBuffer[ i + 2 ] = vertex.z;

			}

		}

		function generateUVs() {

			const vertex = new Vector3();

			for ( let i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				const u = azimuth( vertex ) / 2 / Math.PI + 0.5;
				const v = inclination( vertex ) / Math.PI + 0.5;
				uvBuffer.push( u, 1 - v );

			}

			correctUVs();

			correctSeam();

		}

		function correctSeam() {

			// handle case when face straddles the seam, see #3269

			for ( let i = 0; i < uvBuffer.length; i += 6 ) {

				// uv data of a single face

				const x0 = uvBuffer[ i + 0 ];
				const x1 = uvBuffer[ i + 2 ];
				const x2 = uvBuffer[ i + 4 ];

				const max = Math.max( x0, x1, x2 );
				const min = Math.min( x0, x1, x2 );

				// 0.9 is somewhat arbitrary

				if ( max > 0.9 && min < 0.1 ) {

					if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;
					if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;
					if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;

				}

			}

		}

		function pushVertex( vertex ) {

			vertexBuffer.push( vertex.x, vertex.y, vertex.z );

		}

		function getVertexByIndex( index, vertex ) {

			const stride = index * 3;

			vertex.x = vertices[ stride + 0 ];
			vertex.y = vertices[ stride + 1 ];
			vertex.z = vertices[ stride + 2 ];

		}

		function correctUVs() {

			const a = new Vector3();
			const b = new Vector3();
			const c = new Vector3();

			const centroid = new Vector3();

			const uvA = new Vector2();
			const uvB = new Vector2();
			const uvC = new Vector2();

			for ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {

				a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );
				b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );
				c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );

				uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );
				uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );
				uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );

				centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );

				const azi = azimuth( centroid );

				correctUV( uvA, j + 0, a, azi );
				correctUV( uvB, j + 2, b, azi );
				correctUV( uvC, j + 4, c, azi );

			}

		}

		function correctUV( uv, stride, vector, azimuth ) {

			if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {

				uvBuffer[ stride ] = uv.x - 1;

			}

			if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {

				uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;

			}

		}

		// Angle around the Y axis, counter-clockwise when looking from above.

		function azimuth( vector ) {

			return Math.atan2( vector.z, - vector.x );

		}


		// Angle above the XZ plane.

		function inclination( vector ) {

			return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );

		}

	}

	static fromJSON( data ) {

		return new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );

	}

}

class DodecahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const t = ( 1 + Math.sqrt( 5 ) ) / 2;
		const r = 1 / t;

		const vertices = [

			// (±1, ±1, ±1)
			- 1, - 1, - 1,	- 1, - 1, 1,
			- 1, 1, - 1, - 1, 1, 1,
			1, - 1, - 1, 1, - 1, 1,
			1, 1, - 1, 1, 1, 1,

			// (0, ±1/φ, ±φ)
			0, - r, - t, 0, - r, t,
			0, r, - t, 0, r, t,

			// (±1/φ, ±φ, 0)
			- r, - t, 0, - r, t, 0,
			r, - t, 0, r, t, 0,

			// (±φ, 0, ±1/φ)
			- t, 0, - r, t, 0, - r,
			- t, 0, r, t, 0, r
		];

		const indices = [
			3, 11, 7, 	3, 7, 15, 	3, 15, 13,
			7, 19, 17, 	7, 17, 6, 	7, 6, 15,
			17, 4, 8, 	17, 8, 10, 	17, 10, 6,
			8, 0, 16, 	8, 16, 2, 	8, 2, 10,
			0, 12, 1, 	0, 1, 18, 	0, 18, 16,
			6, 10, 2, 	6, 2, 13, 	6, 13, 15,
			2, 16, 18, 	2, 18, 3, 	2, 3, 13,
			18, 1, 9, 	18, 9, 11, 	18, 11, 3,
			4, 14, 12, 	4, 12, 0, 	4, 0, 8,
			11, 9, 5, 	11, 5, 19, 	11, 19, 7,
			19, 5, 14, 	19, 14, 4, 	19, 4, 17,
			1, 12, 14, 	1, 14, 5, 	1, 5, 9
		];

		super( vertices, indices, radius, detail );

		this.type = 'DodecahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	static fromJSON( data ) {

		return new DodecahedronGeometry( data.radius, data.detail );

	}

}

const _v0 = new Vector3();
const _v1$1 = new Vector3();
const _normal = new Vector3();
const _triangle = new Triangle();

class EdgesGeometry extends BufferGeometry {

	constructor( geometry = null, thresholdAngle = 1 ) {

		super();
		this.type = 'EdgesGeometry';

		this.parameters = {
			geometry: geometry,
			thresholdAngle: thresholdAngle
		};

		if ( geometry !== null ) {

			const precisionPoints = 4;
			const precision = Math.pow( 10, precisionPoints );
			const thresholdDot = Math.cos( DEG2RAD * thresholdAngle );

			const indexAttr = geometry.getIndex();
			const positionAttr = geometry.getAttribute( 'position' );
			const indexCount = indexAttr ? indexAttr.count : positionAttr.count;

			const indexArr = [ 0, 0, 0 ];
			const vertKeys = [ 'a', 'b', 'c' ];
			const hashes = new Array( 3 );

			const edgeData = {};
			const vertices = [];
			for ( let i = 0; i < indexCount; i += 3 ) {

				if ( indexAttr ) {

					indexArr[ 0 ] = indexAttr.getX( i );
					indexArr[ 1 ] = indexAttr.getX( i + 1 );
					indexArr[ 2 ] = indexAttr.getX( i + 2 );

				} else {

					indexArr[ 0 ] = i;
					indexArr[ 1 ] = i + 1;
					indexArr[ 2 ] = i + 2;

				}

				const { a, b, c } = _triangle;
				a.fromBufferAttribute( positionAttr, indexArr[ 0 ] );
				b.fromBufferAttribute( positionAttr, indexArr[ 1 ] );
				c.fromBufferAttribute( positionAttr, indexArr[ 2 ] );
				_triangle.getNormal( _normal );

				// create hashes for the edge from the vertices
				hashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;
				hashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;
				hashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;

				// skip degenerate triangles
				if ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {

					continue;

				}

				// iterate over every edge
				for ( let j = 0; j < 3; j ++ ) {

					// get the first and next vertex making up the edge
					const jNext = ( j + 1 ) % 3;
					const vecHash0 = hashes[ j ];
					const vecHash1 = hashes[ jNext ];
					const v0 = _triangle[ vertKeys[ j ] ];
					const v1 = _triangle[ vertKeys[ jNext ] ];

					const hash = `${ vecHash0 }_${ vecHash1 }`;
					const reverseHash = `${ vecHash1 }_${ vecHash0 }`;

					if ( reverseHash in edgeData && edgeData[ reverseHash ] ) {

						// if we found a sibling edge add it into the vertex array if
						// it meets the angle threshold and delete the edge from the map.
						if ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {

							vertices.push( v0.x, v0.y, v0.z );
							vertices.push( v1.x, v1.y, v1.z );

						}

						edgeData[ reverseHash ] = null;

					} else if ( ! ( hash in edgeData ) ) {

						// if we've already got an edge here then skip adding a new one
						edgeData[ hash ] = {

							index0: indexArr[ j ],
							index1: indexArr[ jNext ],
							normal: _normal.clone(),

						};

					}

				}

			}

			// iterate over all remaining, unmatched edges and add them to the vertex array
			for ( const key in edgeData ) {

				if ( edgeData[ key ] ) {

					const { index0, index1 } = edgeData[ key ];
					_v0.fromBufferAttribute( positionAttr, index0 );
					_v1$1.fromBufferAttribute( positionAttr, index1 );

					vertices.push( _v0.x, _v0.y, _v0.z );
					vertices.push( _v1$1.x, _v1$1.y, _v1$1.z );

				}

			}

			this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

		}

	}

}

/**
 * Extensible curve object.
 *
 * Some common of curve methods:
 * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )
 * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/

class Curve {

	constructor() {

		this.type = 'Curve';

		this.arcLengthDivisions = 200;

	}

	// Virtual base class method to overwrite and implement in subclasses
	//	- t [0 .. 1]

	getPoint( /* t, optionalTarget */ ) {

		console.warn( 'THREE.Curve: .getPoint() not implemented.' );
		return null;

	}

	// Get point at relative position in curve according to arc length
	// - u [0 .. 1]

	getPointAt( u, optionalTarget ) {

		const t = this.getUtoTmapping( u );
		return this.getPoint( t, optionalTarget );

	}

	// Get sequence of points using getPoint( t )

	getPoints( divisions = 5 ) {

		const points = [];

		for ( let d = 0; d <= divisions; d ++ ) {

			points.push( this.getPoint( d / divisions ) );

		}

		return points;

	}

	// Get sequence of points using getPointAt( u )

	getSpacedPoints( divisions = 5 ) {

		const points = [];

		for ( let d = 0; d <= divisions; d ++ ) {

			points.push( this.getPointAt( d / divisions ) );

		}

		return points;

	}

	// Get total curve arc length

	getLength() {

		const lengths = this.getLengths();
		return lengths[ lengths.length - 1 ];

	}

	// Get list of cumulative segment lengths

	getLengths( divisions = this.arcLengthDivisions ) {

		if ( this.cacheArcLengths &&
			( this.cacheArcLengths.length === divisions + 1 ) &&
			! this.needsUpdate ) {

			return this.cacheArcLengths;

		}

		this.needsUpdate = false;

		const cache = [];
		let current, last = this.getPoint( 0 );
		let sum = 0;

		cache.push( 0 );

		for ( let p = 1; p <= divisions; p ++ ) {

			current = this.getPoint( p / divisions );
			sum += current.distanceTo( last );
			cache.push( sum );
			last = current;

		}

		this.cacheArcLengths = cache;

		return cache; // { sums: cache, sum: sum }; Sum is in the last element.

	}

	updateArcLengths() {

		this.needsUpdate = true;
		this.getLengths();

	}

	// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant

	getUtoTmapping( u, distance ) {

		const arcLengths = this.getLengths();

		let i = 0;
		const il = arcLengths.length;

		let targetArcLength; // The targeted u distance value to get

		if ( distance ) {

			targetArcLength = distance;

		} else {

			targetArcLength = u * arcLengths[ il - 1 ];

		}

		// binary search for the index with largest value smaller than target u distance

		let low = 0, high = il - 1, comparison;

		while ( low <= high ) {

			i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats

			comparison = arcLengths[ i ] - targetArcLength;

			if ( comparison < 0 ) {

				low = i + 1;

			} else if ( comparison > 0 ) {

				high = i - 1;

			} else {

				high = i;
				break;

				// DONE

			}

		}

		i = high;

		if ( arcLengths[ i ] === targetArcLength ) {

			return i / ( il - 1 );

		}

		// we could get finer grain at lengths, or use simple interpolation between two points

		const lengthBefore = arcLengths[ i ];
		const lengthAfter = arcLengths[ i + 1 ];

		const segmentLength = lengthAfter - lengthBefore;

		// determine where we are between the 'before' and 'after' points

		const segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;

		// add that fractional amount to t

		const t = ( i + segmentFraction ) / ( il - 1 );

		return t;

	}

	// Returns a unit vector tangent at t
	// In case any sub curve does not implement its tangent derivation,
	// 2 points a small delta apart will be used to find its gradient
	// which seems to give a reasonable approximation

	getTangent( t, optionalTarget ) {

		const delta = 0.0001;
		let t1 = t - delta;
		let t2 = t + delta;

		// Capping in case of danger

		if ( t1 < 0 ) t1 = 0;
		if ( t2 > 1 ) t2 = 1;

		const pt1 = this.getPoint( t1 );
		const pt2 = this.getPoint( t2 );

		const tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );

		tangent.copy( pt2 ).sub( pt1 ).normalize();

		return tangent;

	}

	getTangentAt( u, optionalTarget ) {

		const t = this.getUtoTmapping( u );
		return this.getTangent( t, optionalTarget );

	}

	computeFrenetFrames( segments, closed ) {

		// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf

		const normal = new Vector3();

		const tangents = [];
		const normals = [];
		const binormals = [];

		const vec = new Vector3();
		const mat = new Matrix4();

		// compute the tangent vectors for each segment on the curve

		for ( let i = 0; i <= segments; i ++ ) {

			const u = i / segments;

			tangents[ i ] = this.getTangentAt( u, new Vector3() );

		}

		// select an initial normal vector perpendicular to the first tangent vector,
		// and in the direction of the minimum tangent xyz component

		normals[ 0 ] = new Vector3();
		binormals[ 0 ] = new Vector3();
		let min = Number.MAX_VALUE;
		const tx = Math.abs( tangents[ 0 ].x );
		const ty = Math.abs( tangents[ 0 ].y );
		const tz = Math.abs( tangents[ 0 ].z );

		if ( tx <= min ) {

			min = tx;
			normal.set( 1, 0, 0 );

		}

		if ( ty <= min ) {

			min = ty;
			normal.set( 0, 1, 0 );

		}

		if ( tz <= min ) {

			normal.set( 0, 0, 1 );

		}

		vec.crossVectors( tangents[ 0 ], normal ).normalize();

		normals[ 0 ].crossVectors( tangents[ 0 ], vec );
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );


		// compute the slowly-varying normal and binormal vectors for each segment on the curve

		for ( let i = 1; i <= segments; i ++ ) {

			normals[ i ] = normals[ i - 1 ].clone();

			binormals[ i ] = binormals[ i - 1 ].clone();

			vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );

			if ( vec.length() > Number.EPSILON ) {

				vec.normalize();

				const theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors

				normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );

			}

			binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

		}

		// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same

		if ( closed === true ) {

			let theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );
			theta /= segments;

			if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {

				theta = - theta;

			}

			for ( let i = 1; i <= segments; i ++ ) {

				// twist a little...
				normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
				binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

			}

		}

		return {
			tangents: tangents,
			normals: normals,
			binormals: binormals
		};

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.arcLengthDivisions = source.arcLengthDivisions;

		return this;

	}

	toJSON() {

		const data = {
			metadata: {
				version: 4.5,
				type: 'Curve',
				generator: 'Curve.toJSON'
			}
		};

		data.arcLengthDivisions = this.arcLengthDivisions;
		data.type = this.type;

		return data;

	}

	fromJSON( json ) {

		this.arcLengthDivisions = json.arcLengthDivisions;

		return this;

	}

}

class EllipseCurve extends Curve {

	constructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {

		super();

		this.type = 'EllipseCurve';

		this.aX = aX;
		this.aY = aY;

		this.xRadius = xRadius;
		this.yRadius = yRadius;

		this.aStartAngle = aStartAngle;
		this.aEndAngle = aEndAngle;

		this.aClockwise = aClockwise;

		this.aRotation = aRotation;

	}

	getPoint( t, optionalTarget ) {

		const point = optionalTarget || new Vector2();

		const twoPi = Math.PI * 2;
		let deltaAngle = this.aEndAngle - this.aStartAngle;
		const samePoints = Math.abs( deltaAngle ) < Number.EPSILON;

		// ensures that deltaAngle is 0 .. 2 PI
		while ( deltaAngle < 0 ) deltaAngle += twoPi;
		while ( deltaAngle > twoPi ) deltaAngle -= twoPi;

		if ( deltaAngle < Number.EPSILON ) {

			if ( samePoints ) {

				deltaAngle = 0;

			} else {

				deltaAngle = twoPi;

			}

		}

		if ( this.aClockwise === true && ! samePoints ) {

			if ( deltaAngle === twoPi ) {

				deltaAngle = - twoPi;

			} else {

				deltaAngle = deltaAngle - twoPi;

			}

		}

		const angle = this.aStartAngle + t * deltaAngle;
		let x = this.aX + this.xRadius * Math.cos( angle );
		let y = this.aY + this.yRadius * Math.sin( angle );

		if ( this.aRotation !== 0 ) {

			const cos = Math.cos( this.aRotation );
			const sin = Math.sin( this.aRotation );

			const tx = x - this.aX;
			const ty = y - this.aY;

			// Rotate the point about the center of the ellipse.
			x = tx * cos - ty * sin + this.aX;
			y = tx * sin + ty * cos + this.aY;

		}

		return point.set( x, y );

	}

	copy( source ) {

		super.copy( source );

		this.aX = source.aX;
		this.aY = source.aY;

		this.xRadius = source.xRadius;
		this.yRadius = source.yRadius;

		this.aStartAngle = source.aStartAngle;
		this.aEndAngle = source.aEndAngle;

		this.aClockwise = source.aClockwise;

		this.aRotation = source.aRotation;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.aX = this.aX;
		data.aY = this.aY;

		data.xRadius = this.xRadius;
		data.yRadius = this.yRadius;

		data.aStartAngle = this.aStartAngle;
		data.aEndAngle = this.aEndAngle;

		data.aClockwise = this.aClockwise;

		data.aRotation = this.aRotation;

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.aX = json.aX;
		this.aY = json.aY;

		this.xRadius = json.xRadius;
		this.yRadius = json.yRadius;

		this.aStartAngle = json.aStartAngle;
		this.aEndAngle = json.aEndAngle;

		this.aClockwise = json.aClockwise;

		this.aRotation = json.aRotation;

		return this;

	}

}

EllipseCurve.prototype.isEllipseCurve = true;

class ArcCurve extends EllipseCurve {

	constructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		super( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

		this.type = 'ArcCurve';

	}

}

ArcCurve.prototype.isArcCurve = true;

/**
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */


/*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/

function CubicPoly() {

	let c0 = 0, c1 = 0, c2 = 0, c3 = 0;

	/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */
	function init( x0, x1, t0, t1 ) {

		c0 = x0;
		c1 = t0;
		c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;
		c3 = 2 * x0 - 2 * x1 + t0 + t1;

	}

	return {

		initCatmullRom: function ( x0, x1, x2, x3, tension ) {

			init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );

		},

		initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {

			// compute tangents when parameterized in [t1,t2]
			let t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;
			let t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;

			// rescale tangents for parametrization in [0,1]
			t1 *= dt1;
			t2 *= dt1;

			init( x1, x2, t1, t2 );

		},

		calc: function ( t ) {

			const t2 = t * t;
			const t3 = t2 * t;
			return c0 + c1 * t + c2 * t2 + c3 * t3;

		}

	};

}

//

const tmp = new Vector3();
const px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();

class CatmullRomCurve3 extends Curve {

	constructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {

		super();

		this.type = 'CatmullRomCurve3';

		this.points = points;
		this.closed = closed;
		this.curveType = curveType;
		this.tension = tension;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const points = this.points;
		const l = points.length;

		const p = ( l - ( this.closed ? 0 : 1 ) ) * t;
		let intPoint = Math.floor( p );
		let weight = p - intPoint;

		if ( this.closed ) {

			intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;

		} else if ( weight === 0 && intPoint === l - 1 ) {

			intPoint = l - 2;
			weight = 1;

		}

		let p0, p3; // 4 points (p1 & p2 defined below)

		if ( this.closed || intPoint > 0 ) {

			p0 = points[ ( intPoint - 1 ) % l ];

		} else {

			// extrapolate first point
			tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );
			p0 = tmp;

		}

		const p1 = points[ intPoint % l ];
		const p2 = points[ ( intPoint + 1 ) % l ];

		if ( this.closed || intPoint + 2 < l ) {

			p3 = points[ ( intPoint + 2 ) % l ];

		} else {

			// extrapolate last point
			tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );
			p3 = tmp;

		}

		if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {

			// init Centripetal / Chordal Catmull-Rom
			const pow = this.curveType === 'chordal' ? 0.5 : 0.25;
			let dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );
			let dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );
			let dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );

			// safety check for repeated points
			if ( dt1 < 1e-4 ) dt1 = 1.0;
			if ( dt0 < 1e-4 ) dt0 = dt1;
			if ( dt2 < 1e-4 ) dt2 = dt1;

			px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );
			py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );
			pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );

		} else if ( this.curveType === 'catmullrom' ) {

			px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );
			py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );
			pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );

		}

		point.set(
			px.calc( weight ),
			py.calc( weight ),
			pz.calc( weight )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.points = [];

		for ( let i = 0, l = source.points.length; i < l; i ++ ) {

			const point = source.points[ i ];

			this.points.push( point.clone() );

		}

		this.closed = source.closed;
		this.curveType = source.curveType;
		this.tension = source.tension;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.points = [];

		for ( let i = 0, l = this.points.length; i < l; i ++ ) {

			const point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		data.closed = this.closed;
		data.curveType = this.curveType;
		data.tension = this.tension;

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.points = [];

		for ( let i = 0, l = json.points.length; i < l; i ++ ) {

			const point = json.points[ i ];
			this.points.push( new Vector3().fromArray( point ) );

		}

		this.closed = json.closed;
		this.curveType = json.curveType;
		this.tension = json.tension;

		return this;

	}

}

CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;

/**
 * Bezier Curves formulas obtained from
 * https://en.wikipedia.org/wiki/B%C3%A9zier_curve
 */

function CatmullRom( t, p0, p1, p2, p3 ) {

	const v0 = ( p2 - p0 ) * 0.5;
	const v1 = ( p3 - p1 ) * 0.5;
	const t2 = t * t;
	const t3 = t * t2;
	return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;

}

//

function QuadraticBezierP0( t, p ) {

	const k = 1 - t;
	return k * k * p;

}

function QuadraticBezierP1( t, p ) {

	return 2 * ( 1 - t ) * t * p;

}

function QuadraticBezierP2( t, p ) {

	return t * t * p;

}

function QuadraticBezier( t, p0, p1, p2 ) {

	return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +
		QuadraticBezierP2( t, p2 );

}

//

function CubicBezierP0( t, p ) {

	const k = 1 - t;
	return k * k * k * p;

}

function CubicBezierP1( t, p ) {

	const k = 1 - t;
	return 3 * k * k * t * p;

}

function CubicBezierP2( t, p ) {

	return 3 * ( 1 - t ) * t * t * p;

}

function CubicBezierP3( t, p ) {

	return t * t * t * p;

}

function CubicBezier( t, p0, p1, p2, p3 ) {

	return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +
		CubicBezierP3( t, p3 );

}

class CubicBezierCurve extends Curve {

	constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {

		super();

		this.type = 'CubicBezierCurve';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;
		this.v3 = v3;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	}

}

CubicBezierCurve.prototype.isCubicBezierCurve = true;

class CubicBezierCurve3 extends Curve {

	constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {

		super();

		this.type = 'CubicBezierCurve3';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;
		this.v3 = v3;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),
			CubicBezier( t, v0.z, v1.z, v2.z, v3.z )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	}

}

CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;

class LineCurve extends Curve {

	constructor( v1 = new Vector2(), v2 = new Vector2() ) {

		super();

		this.type = 'LineCurve';

		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	}

	// Line curve is linear, so we can overwrite default getPointAt
	getPointAt( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	}

	getTangent( t, optionalTarget ) {

		const tangent = optionalTarget || new Vector2();

		tangent.copy( this.v2 ).sub( this.v1 ).normalize();

		return tangent;

	}

	copy( source ) {

		super.copy( source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

LineCurve.prototype.isLineCurve = true;

class LineCurve3 extends Curve {

	constructor( v1 = new Vector3(), v2 = new Vector3() ) {

		super();

		this.type = 'LineCurve3';
		this.isLineCurve3 = true;

		this.v1 = v1;
		this.v2 = v2;

	}
	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	}
	// Line curve is linear, so we can overwrite default getPointAt
	getPointAt( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	}
	copy( source ) {

		super.copy( source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}
	toJSON() {

		const data = super.toJSON();

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}
	fromJSON( json ) {

		super.fromJSON( json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

class QuadraticBezierCurve extends Curve {

	constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {

		super();

		this.type = 'QuadraticBezierCurve';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;

class QuadraticBezierCurve3 extends Curve {

	constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {

		super();

		this.type = 'QuadraticBezierCurve3';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y ),
			QuadraticBezier( t, v0.z, v1.z, v2.z )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;

class SplineCurve extends Curve {

	constructor( points = [] ) {

		super();

		this.type = 'SplineCurve';

		this.points = points;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const points = this.points;
		const p = ( points.length - 1 ) * t;

		const intPoint = Math.floor( p );
		const weight = p - intPoint;

		const p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];
		const p1 = points[ intPoint ];
		const p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
		const p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];

		point.set(
			CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),
			CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.points = [];

		for ( let i = 0, l = source.points.length; i < l; i ++ ) {

			const point = source.points[ i ];

			this.points.push( point.clone() );

		}

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.points = [];

		for ( let i = 0, l = this.points.length; i < l; i ++ ) {

			const point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.points = [];

		for ( let i = 0, l = json.points.length; i < l; i ++ ) {

			const point = json.points[ i ];
			this.points.push( new Vector2().fromArray( point ) );

		}

		return this;

	}

}

SplineCurve.prototype.isSplineCurve = true;

var Curves = /*#__PURE__*/Object.freeze({
	__proto__: null,
	ArcCurve: ArcCurve,
	CatmullRomCurve3: CatmullRomCurve3,
	CubicBezierCurve: CubicBezierCurve,
	CubicBezierCurve3: CubicBezierCurve3,
	EllipseCurve: EllipseCurve,
	LineCurve: LineCurve,
	LineCurve3: LineCurve3,
	QuadraticBezierCurve: QuadraticBezierCurve,
	QuadraticBezierCurve3: QuadraticBezierCurve3,
	SplineCurve: SplineCurve
});

/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/

class CurvePath extends Curve {

	constructor() {

		super();

		this.type = 'CurvePath';

		this.curves = [];
		this.autoClose = false; // Automatically closes the path

	}

	add( curve ) {

		this.curves.push( curve );

	}

	closePath() {

		// Add a line curve if start and end of lines are not connected
		const startPoint = this.curves[ 0 ].getPoint( 0 );
		const endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );

		if ( ! startPoint.equals( endPoint ) ) {

			this.curves.push( new LineCurve( endPoint, startPoint ) );

		}

	}

	// To get accurate point with reference to
	// entire path distance at time t,
	// following has to be done:

	// 1. Length of each sub path have to be known
	// 2. Locate and identify type of curve
	// 3. Get t for the curve
	// 4. Return curve.getPointAt(t')

	getPoint( t, optionalTarget ) {

		const d = t * this.getLength();
		const curveLengths = this.getCurveLengths();
		let i = 0;

		// To think about boundaries points.

		while ( i < curveLengths.length ) {

			if ( curveLengths[ i ] >= d ) {

				const diff = curveLengths[ i ] - d;
				const curve = this.curves[ i ];

				const segmentLength = curve.getLength();
				const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;

				return curve.getPointAt( u, optionalTarget );

			}

			i ++;

		}

		return null;

		// loop where sum != 0, sum > d , sum+1 <d

	}

	// We cannot use the default THREE.Curve getPoint() with getLength() because in
	// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
	// getPoint() depends on getLength

	getLength() {

		const lens = this.getCurveLengths();
		return lens[ lens.length - 1 ];

	}

	// cacheLengths must be recalculated.
	updateArcLengths() {

		this.needsUpdate = true;
		this.cacheLengths = null;
		this.getCurveLengths();

	}

	// Compute lengths and cache them
	// We cannot overwrite getLengths() because UtoT mapping uses it.

	getCurveLengths() {

		// We use cache values if curves and cache array are same length

		if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {

			return this.cacheLengths;

		}

		// Get length of sub-curve
		// Push sums into cached array

		const lengths = [];
		let sums = 0;

		for ( let i = 0, l = this.curves.length; i < l; i ++ ) {

			sums += this.curves[ i ].getLength();
			lengths.push( sums );

		}

		this.cacheLengths = lengths;

		return lengths;

	}

	getSpacedPoints( divisions = 40 ) {

		const points = [];

		for ( let i = 0; i <= divisions; i ++ ) {

			points.push( this.getPoint( i / divisions ) );

		}

		if ( this.autoClose ) {

			points.push( points[ 0 ] );

		}

		return points;

	}

	getPoints( divisions = 12 ) {

		const points = [];
		let last;

		for ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {

			const curve = curves[ i ];
			const resolution = curve.isEllipseCurve ? divisions * 2
				: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1
					: curve.isSplineCurve ? divisions * curve.points.length
						: divisions;

			const pts = curve.getPoints( resolution );

			for ( let j = 0; j < pts.length; j ++ ) {

				const point = pts[ j ];

				if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates

				points.push( point );
				last = point;

			}

		}

		if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {

			points.push( points[ 0 ] );

		}

		return points;

	}

	copy( source ) {

		super.copy( source );

		this.curves = [];

		for ( let i = 0, l = source.curves.length; i < l; i ++ ) {

			const curve = source.curves[ i ];

			this.curves.push( curve.clone() );

		}

		this.autoClose = source.autoClose;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.autoClose = this.autoClose;
		data.curves = [];

		for ( let i = 0, l = this.curves.length; i < l; i ++ ) {

			const curve = this.curves[ i ];
			data.curves.push( curve.toJSON() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.autoClose = json.autoClose;
		this.curves = [];

		for ( let i = 0, l = json.curves.length; i < l; i ++ ) {

			const curve = json.curves[ i ];
			this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );

		}

		return this;

	}

}

class Path extends CurvePath {

	constructor( points ) {

		super();
		this.type = 'Path';

		this.currentPoint = new Vector2();

		if ( points ) {

			this.setFromPoints( points );

		}

	}

	setFromPoints( points ) {

		this.moveTo( points[ 0 ].x, points[ 0 ].y );

		for ( let i = 1, l = points.length; i < l; i ++ ) {

			this.lineTo( points[ i ].x, points[ i ].y );

		}

		return this;

	}

	moveTo( x, y ) {

		this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?

		return this;

	}

	lineTo( x, y ) {

		const curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );
		this.curves.push( curve );

		this.currentPoint.set( x, y );

		return this;

	}

	quadraticCurveTo( aCPx, aCPy, aX, aY ) {

		const curve = new QuadraticBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCPx, aCPy ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

		return this;

	}

	bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		const curve = new CubicBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCP1x, aCP1y ),
			new Vector2( aCP2x, aCP2y ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

		return this;

	}

	splineThru( pts /*Array of Vector*/ ) {

		const npts = [ this.currentPoint.clone() ].concat( pts );

		const curve = new SplineCurve( npts );
		this.curves.push( curve );

		this.currentPoint.copy( pts[ pts.length - 1 ] );

		return this;

	}

	arc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		const x0 = this.currentPoint.x;
		const y0 = this.currentPoint.y;

		this.absarc( aX + x0, aY + y0, aRadius,
			aStartAngle, aEndAngle, aClockwise );

		return this;

	}

	absarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

		return this;

	}

	ellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		const x0 = this.currentPoint.x;
		const y0 = this.currentPoint.y;

		this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

		return this;

	}

	absellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		const curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

		if ( this.curves.length > 0 ) {

			// if a previous curve is present, attempt to join
			const firstPoint = curve.getPoint( 0 );

			if ( ! firstPoint.equals( this.currentPoint ) ) {

				this.lineTo( firstPoint.x, firstPoint.y );

			}

		}

		this.curves.push( curve );

		const lastPoint = curve.getPoint( 1 );
		this.currentPoint.copy( lastPoint );

		return this;

	}

	copy( source ) {

		super.copy( source );

		this.currentPoint.copy( source.currentPoint );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.currentPoint = this.currentPoint.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.currentPoint.fromArray( json.currentPoint );

		return this;

	}

}

class Shape extends Path {

	constructor( points ) {

		super( points );

		this.uuid = generateUUID();

		this.type = 'Shape';

		this.holes = [];

	}

	getPointsHoles( divisions ) {

		const holesPts = [];

		for ( let i = 0, l = this.holes.length; i < l; i ++ ) {

			holesPts[ i ] = this.holes[ i ].getPoints( divisions );

		}

		return holesPts;

	}

	// get points of shape and holes (keypoints based on segments parameter)

	extractPoints( divisions ) {

		return {

			shape: this.getPoints( divisions ),
			holes: this.getPointsHoles( divisions )

		};

	}

	copy( source ) {

		super.copy( source );

		this.holes = [];

		for ( let i = 0, l = source.holes.length; i < l; i ++ ) {

			const hole = source.holes[ i ];

			this.holes.push( hole.clone() );

		}

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.uuid = this.uuid;
		data.holes = [];

		for ( let i = 0, l = this.holes.length; i < l; i ++ ) {

			const hole = this.holes[ i ];
			data.holes.push( hole.toJSON() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.uuid = json.uuid;
		this.holes = [];

		for ( let i = 0, l = json.holes.length; i < l; i ++ ) {

			const hole = json.holes[ i ];
			this.holes.push( new Path().fromJSON( hole ) );

		}

		return this;

	}

}

/**
 * Port from https://github.com/mapbox/earcut (v2.2.2)
 */

const Earcut = {

	triangulate: function ( data, holeIndices, dim = 2 ) {

		const hasHoles = holeIndices && holeIndices.length;
		const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;
		let outerNode = linkedList( data, 0, outerLen, dim, true );
		const triangles = [];

		if ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;

		let minX, minY, maxX, maxY, x, y, invSize;

		if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );

		// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
		if ( data.length > 80 * dim ) {

			minX = maxX = data[ 0 ];
			minY = maxY = data[ 1 ];

			for ( let i = dim; i < outerLen; i += dim ) {

				x = data[ i ];
				y = data[ i + 1 ];
				if ( x < minX ) minX = x;
				if ( y < minY ) minY = y;
				if ( x > maxX ) maxX = x;
				if ( y > maxY ) maxY = y;

			}

			// minX, minY and invSize are later used to transform coords into integers for z-order calculation
			invSize = Math.max( maxX - minX, maxY - minY );
			invSize = invSize !== 0 ? 1 / invSize : 0;

		}

		earcutLinked( outerNode, triangles, dim, minX, minY, invSize );

		return triangles;

	}

};

// create a circular doubly linked list from polygon points in the specified winding order
function linkedList( data, start, end, dim, clockwise ) {

	let i, last;

	if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {

		for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );

	} else {

		for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );

	}

	if ( last && equals( last, last.next ) ) {

		removeNode( last );
		last = last.next;

	}

	return last;

}

// eliminate colinear or duplicate points
function filterPoints( start, end ) {

	if ( ! start ) return start;
	if ( ! end ) end = start;

	let p = start,
		again;
	do {

		again = false;

		if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {

			removeNode( p );
			p = end = p.prev;
			if ( p === p.next ) break;
			again = true;

		} else {

			p = p.next;

		}

	} while ( again || p !== end );

	return end;

}

// main ear slicing loop which triangulates a polygon (given as a linked list)
function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {

	if ( ! ear ) return;

	// interlink polygon nodes in z-order
	if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );

	let stop = ear,
		prev, next;

	// iterate through ears, slicing them one by one
	while ( ear.prev !== ear.next ) {

		prev = ear.prev;
		next = ear.next;

		if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {

			// cut off the triangle
			triangles.push( prev.i / dim );
			triangles.push( ear.i / dim );
			triangles.push( next.i / dim );

			removeNode( ear );

			// skipping the next vertex leads to less sliver triangles
			ear = next.next;
			stop = next.next;

			continue;

		}

		ear = next;

		// if we looped through the whole remaining polygon and can't find any more ears
		if ( ear === stop ) {

			// try filtering points and slicing again
			if ( ! pass ) {

				earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );

				// if this didn't work, try curing all small self-intersections locally

			} else if ( pass === 1 ) {

				ear = cureLocalIntersections( filterPoints( ear ), triangles, dim );
				earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );

				// as a last resort, try splitting the remaining polygon into two

			} else if ( pass === 2 ) {

				splitEarcut( ear, triangles, dim, minX, minY, invSize );

			}

			break;

		}

	}

}

// check whether a polygon node forms a valid ear with adjacent nodes
function isEar( ear ) {

	const a = ear.prev,
		b = ear,
		c = ear.next;

	if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear

	// now make sure we don't have other points inside the potential ear
	let p = ear.next.next;

	while ( p !== ear.prev ) {

		if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.next;

	}

	return true;

}

function isEarHashed( ear, minX, minY, invSize ) {

	const a = ear.prev,
		b = ear,
		c = ear.next;

	if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear

	// triangle bbox; min & max are calculated like this for speed
	const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),
		minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),
		maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),
		maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );

	// z-order range for the current triangle bbox;
	const minZ = zOrder( minTX, minTY, minX, minY, invSize ),
		maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );

	let p = ear.prevZ,
		n = ear.nextZ;

	// look for points inside the triangle in both directions
	while ( p && p.z >= minZ && n && n.z <= maxZ ) {

		if ( p !== ear.prev && p !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.prevZ;

		if ( n !== ear.prev && n !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
			area( n.prev, n, n.next ) >= 0 ) return false;
		n = n.nextZ;

	}

	// look for remaining points in decreasing z-order
	while ( p && p.z >= minZ ) {

		if ( p !== ear.prev && p !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.prevZ;

	}

	// look for remaining points in increasing z-order
	while ( n && n.z <= maxZ ) {

		if ( n !== ear.prev && n !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
			area( n.prev, n, n.next ) >= 0 ) return false;
		n = n.nextZ;

	}

	return true;

}

// go through all polygon nodes and cure small local self-intersections
function cureLocalIntersections( start, triangles, dim ) {

	let p = start;
	do {

		const a = p.prev,
			b = p.next.next;

		if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {

			triangles.push( a.i / dim );
			triangles.push( p.i / dim );
			triangles.push( b.i / dim );

			// remove two nodes involved
			removeNode( p );
			removeNode( p.next );

			p = start = b;

		}

		p = p.next;

	} while ( p !== start );

	return filterPoints( p );

}

// try splitting polygon into two and triangulate them independently
function splitEarcut( start, triangles, dim, minX, minY, invSize ) {

	// look for a valid diagonal that divides the polygon into two
	let a = start;
	do {

		let b = a.next.next;
		while ( b !== a.prev ) {

			if ( a.i !== b.i && isValidDiagonal( a, b ) ) {

				// split the polygon in two by the diagonal
				let c = splitPolygon( a, b );

				// filter colinear points around the cuts
				a = filterPoints( a, a.next );
				c = filterPoints( c, c.next );

				// run earcut on each half
				earcutLinked( a, triangles, dim, minX, minY, invSize );
				earcutLinked( c, triangles, dim, minX, minY, invSize );
				return;

			}

			b = b.next;

		}

		a = a.next;

	} while ( a !== start );

}

// link every hole into the outer loop, producing a single-ring polygon without holes
function eliminateHoles( data, holeIndices, outerNode, dim ) {

	const queue = [];
	let i, len, start, end, list;

	for ( i = 0, len = holeIndices.length; i < len; i ++ ) {

		start = holeIndices[ i ] * dim;
		end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;
		list = linkedList( data, start, end, dim, false );
		if ( list === list.next ) list.steiner = true;
		queue.push( getLeftmost( list ) );

	}

	queue.sort( compareX );

	// process holes from left to right
	for ( i = 0; i < queue.length; i ++ ) {

		eliminateHole( queue[ i ], outerNode );
		outerNode = filterPoints( outerNode, outerNode.next );

	}

	return outerNode;

}

function compareX( a, b ) {

	return a.x - b.x;

}

// find a bridge between vertices that connects hole with an outer ring and and link it
function eliminateHole( hole, outerNode ) {

	outerNode = findHoleBridge( hole, outerNode );
	if ( outerNode ) {

		const b = splitPolygon( outerNode, hole );

		// filter collinear points around the cuts
		filterPoints( outerNode, outerNode.next );
		filterPoints( b, b.next );

	}

}

// David Eberly's algorithm for finding a bridge between hole and outer polygon
function findHoleBridge( hole, outerNode ) {

	let p = outerNode;
	const hx = hole.x;
	const hy = hole.y;
	let qx = - Infinity, m;

	// find a segment intersected by a ray from the hole's leftmost point to the left;
	// segment's endpoint with lesser x will be potential connection point
	do {

		if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {

			const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );
			if ( x <= hx && x > qx ) {

				qx = x;
				if ( x === hx ) {

					if ( hy === p.y ) return p;
					if ( hy === p.next.y ) return p.next;

				}

				m = p.x < p.next.x ? p : p.next;

			}

		}

		p = p.next;

	} while ( p !== outerNode );

	if ( ! m ) return null;

	if ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint

	// look for points inside the triangle of hole point, segment intersection and endpoint;
	// if there are no points found, we have a valid connection;
	// otherwise choose the point of the minimum angle with the ray as connection point

	const stop = m,
		mx = m.x,
		my = m.y;
	let tanMin = Infinity, tan;

	p = m;

	do {

		if ( hx >= p.x && p.x >= mx && hx !== p.x &&
				pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {

			tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential

			if ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {

				m = p;
				tanMin = tan;

			}

		}

		p = p.next;

	} while ( p !== stop );

	return m;

}

// whether sector in vertex m contains sector in vertex p in the same coordinates
function sectorContainsSector( m, p ) {

	return area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;

}

// interlink polygon nodes in z-order
function indexCurve( start, minX, minY, invSize ) {

	let p = start;
	do {

		if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );
		p.prevZ = p.prev;
		p.nextZ = p.next;
		p = p.next;

	} while ( p !== start );

	p.prevZ.nextZ = null;
	p.prevZ = null;

	sortLinked( p );

}

// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function sortLinked( list ) {

	let i, p, q, e, tail, numMerges, pSize, qSize,
		inSize = 1;

	do {

		p = list;
		list = null;
		tail = null;
		numMerges = 0;

		while ( p ) {

			numMerges ++;
			q = p;
			pSize = 0;
			for ( i = 0; i < inSize; i ++ ) {

				pSize ++;
				q = q.nextZ;
				if ( ! q ) break;

			}

			qSize = inSize;

			while ( pSize > 0 || ( qSize > 0 && q ) ) {

				if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {

					e = p;
					p = p.nextZ;
					pSize --;

				} else {

					e = q;
					q = q.nextZ;
					qSize --;

				}

				if ( tail ) tail.nextZ = e;
				else list = e;

				e.prevZ = tail;
				tail = e;

			}

			p = q;

		}

		tail.nextZ = null;
		inSize *= 2;

	} while ( numMerges > 1 );

	return list;

}

// z-order of a point given coords and inverse of the longer side of data bbox
function zOrder( x, y, minX, minY, invSize ) {

	// coords are transformed into non-negative 15-bit integer range
	x = 32767 * ( x - minX ) * invSize;
	y = 32767 * ( y - minY ) * invSize;

	x = ( x | ( x << 8 ) ) & 0x00FF00FF;
	x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;
	x = ( x | ( x << 2 ) ) & 0x33333333;
	x = ( x | ( x << 1 ) ) & 0x55555555;

	y = ( y | ( y << 8 ) ) & 0x00FF00FF;
	y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;
	y = ( y | ( y << 2 ) ) & 0x33333333;
	y = ( y | ( y << 1 ) ) & 0x55555555;

	return x | ( y << 1 );

}

// find the leftmost node of a polygon ring
function getLeftmost( start ) {

	let p = start,
		leftmost = start;
	do {

		if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;
		p = p.next;

	} while ( p !== start );

	return leftmost;

}

// check if a point lies within a convex triangle
function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {

	return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&
			( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&
			( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;

}

// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function isValidDiagonal( a, b ) {

	return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges
		( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible
		( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors
		equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case

}

// signed area of a triangle
function area( p, q, r ) {

	return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );

}

// check if two points are equal
function equals( p1, p2 ) {

	return p1.x === p2.x && p1.y === p2.y;

}

// check if two segments intersect
function intersects( p1, q1, p2, q2 ) {

	const o1 = sign( area( p1, q1, p2 ) );
	const o2 = sign( area( p1, q1, q2 ) );
	const o3 = sign( area( p2, q2, p1 ) );
	const o4 = sign( area( p2, q2, q1 ) );

	if ( o1 !== o2 && o3 !== o4 ) return true; // general case

	if ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1
	if ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1
	if ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2
	if ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2

	return false;

}

// for collinear points p, q, r, check if point q lies on segment pr
function onSegment( p, q, r ) {

	return q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );

}

function sign( num ) {

	return num > 0 ? 1 : num < 0 ? - 1 : 0;

}

// check if a polygon diagonal intersects any polygon segments
function intersectsPolygon( a, b ) {

	let p = a;
	do {

		if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
				intersects( p, p.next, a, b ) ) return true;
		p = p.next;

	} while ( p !== a );

	return false;

}

// check if a polygon diagonal is locally inside the polygon
function locallyInside( a, b ) {

	return area( a.prev, a, a.next ) < 0 ?
		area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :
		area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;

}

// check if the middle point of a polygon diagonal is inside the polygon
function middleInside( a, b ) {

	let p = a,
		inside = false;
	const px = ( a.x + b.x ) / 2,
		py = ( a.y + b.y ) / 2;
	do {

		if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&
				( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )
			inside = ! inside;
		p = p.next;

	} while ( p !== a );

	return inside;

}

// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function splitPolygon( a, b ) {

	const a2 = new Node( a.i, a.x, a.y ),
		b2 = new Node( b.i, b.x, b.y ),
		an = a.next,
		bp = b.prev;

	a.next = b;
	b.prev = a;

	a2.next = an;
	an.prev = a2;

	b2.next = a2;
	a2.prev = b2;

	bp.next = b2;
	b2.prev = bp;

	return b2;

}

// create a node and optionally link it with previous one (in a circular doubly linked list)
function insertNode( i, x, y, last ) {

	const p = new Node( i, x, y );

	if ( ! last ) {

		p.prev = p;
		p.next = p;

	} else {

		p.next = last.next;
		p.prev = last;
		last.next.prev = p;
		last.next = p;

	}

	return p;

}

function removeNode( p ) {

	p.next.prev = p.prev;
	p.prev.next = p.next;

	if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;
	if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;

}

function Node( i, x, y ) {

	// vertex index in coordinates array
	this.i = i;

	// vertex coordinates
	this.x = x;
	this.y = y;

	// previous and next vertex nodes in a polygon ring
	this.prev = null;
	this.next = null;

	// z-order curve value
	this.z = null;

	// previous and next nodes in z-order
	this.prevZ = null;
	this.nextZ = null;

	// indicates whether this is a steiner point
	this.steiner = false;

}

function signedArea( data, start, end, dim ) {

	let sum = 0;
	for ( let i = start, j = end - dim; i < end; i += dim ) {

		sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );
		j = i;

	}

	return sum;

}

class ShapeUtils {

	// calculate area of the contour polygon

	static area( contour ) {

		const n = contour.length;
		let a = 0.0;

		for ( let p = n - 1, q = 0; q < n; p = q ++ ) {

			a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;

		}

		return a * 0.5;

	}

	static isClockWise( pts ) {

		return ShapeUtils.area( pts ) < 0;

	}

	static triangulateShape( contour, holes ) {

		const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
		const holeIndices = []; // array of hole indices
		const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]

		removeDupEndPts( contour );
		addContour( vertices, contour );

		//

		let holeIndex = contour.length;

		holes.forEach( removeDupEndPts );

		for ( let i = 0; i < holes.length; i ++ ) {

			holeIndices.push( holeIndex );
			holeIndex += holes[ i ].length;
			addContour( vertices, holes[ i ] );

		}

		//

		const triangles = Earcut.triangulate( vertices, holeIndices );

		//

		for ( let i = 0; i < triangles.length; i += 3 ) {

			faces.push( triangles.slice( i, i + 3 ) );

		}

		return faces;

	}

}

function removeDupEndPts( points ) {

	const l = points.length;

	if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {

		points.pop();

	}

}

function addContour( vertices, contour ) {

	for ( let i = 0; i < contour.length; i ++ ) {

		vertices.push( contour[ i ].x );
		vertices.push( contour[ i ].y );

	}

}

/**
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  depth: <float>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
 *  bevelOffset: <float>, // how far from shape outline does bevel start
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */

class ExtrudeGeometry extends BufferGeometry {

	constructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {

		super();

		this.type = 'ExtrudeGeometry';

		this.parameters = {
			shapes: shapes,
			options: options
		};

		shapes = Array.isArray( shapes ) ? shapes : [ shapes ];

		const scope = this;

		const verticesArray = [];
		const uvArray = [];

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];
			addShape( shape );

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );

		this.computeVertexNormals();

		// functions

		function addShape( shape ) {

			const placeholder = [];

			// options

			const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;
			const steps = options.steps !== undefined ? options.steps : 1;
			let depth = options.depth !== undefined ? options.depth : 1;

			let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;
			let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;
			let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;
			let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;
			let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;

			const extrudePath = options.extrudePath;

			const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;

			// deprecated options

			if ( options.amount !== undefined ) {

				console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );
				depth = options.amount;

			}

			//

			let extrudePts, extrudeByPath = false;
			let splineTube, binormal, normal, position2;

			if ( extrudePath ) {

				extrudePts = extrudePath.getSpacedPoints( steps );

				extrudeByPath = true;
				bevelEnabled = false; // bevels not supported for path extrusion

				// SETUP TNB variables

				// TODO1 - have a .isClosed in spline?

				splineTube = extrudePath.computeFrenetFrames( steps, false );

				// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);

				binormal = new Vector3();
				normal = new Vector3();
				position2 = new Vector3();

			}

			// Safeguards if bevels are not enabled

			if ( ! bevelEnabled ) {

				bevelSegments = 0;
				bevelThickness = 0;
				bevelSize = 0;
				bevelOffset = 0;

			}

			// Variables initialization

			const shapePoints = shape.extractPoints( curveSegments );

			let vertices = shapePoints.shape;
			const holes = shapePoints.holes;

			const reverse = ! ShapeUtils.isClockWise( vertices );

			if ( reverse ) {

				vertices = vertices.reverse();

				// Maybe we should also check if holes are in the opposite direction, just to be safe ...

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];

					if ( ShapeUtils.isClockWise( ahole ) ) {

						holes[ h ] = ahole.reverse();

					}

				}

			}


			const faces = ShapeUtils.triangulateShape( vertices, holes );

			/* Vertices */

			const contour = vertices; // vertices has all points but contour has only points of circumference

			for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

				const ahole = holes[ h ];

				vertices = vertices.concat( ahole );

			}


			function scalePt2( pt, vec, size ) {

				if ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );

				return vec.clone().multiplyScalar( size ).add( pt );

			}

			const vlen = vertices.length, flen = faces.length;


			// Find directions for point movement


			function getBevelVec( inPt, inPrev, inNext ) {

				// computes for inPt the corresponding point inPt' on a new contour
				//   shifted by 1 unit (length of normalized vector) to the left
				// if we walk along contour clockwise, this new contour is outside the old one
				//
				// inPt' is the intersection of the two lines parallel to the two
				//  adjacent edges of inPt at a distance of 1 unit on the left side.

				let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt

				// good reading for geometry algorithms (here: line-line intersection)
				// http://geomalgorithms.com/a05-_intersect-1.html

				const v_prev_x = inPt.x - inPrev.x,
					v_prev_y = inPt.y - inPrev.y;
				const v_next_x = inNext.x - inPt.x,
					v_next_y = inNext.y - inPt.y;

				const v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );

				// check for collinear edges
				const collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );

				if ( Math.abs( collinear0 ) > Number.EPSILON ) {

					// not collinear

					// length of vectors for normalizing

					const v_prev_len = Math.sqrt( v_prev_lensq );
					const v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );

					// shift adjacent points by unit vectors to the left

					const ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );
					const ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );

					const ptNextShift_x = ( inNext.x - v_next_y / v_next_len );
					const ptNextShift_y = ( inNext.y + v_next_x / v_next_len );

					// scaling factor for v_prev to intersection point

					const sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -
							( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /
						( v_prev_x * v_next_y - v_prev_y * v_next_x );

					// vector from inPt to intersection point

					v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );
					v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );

					// Don't normalize!, otherwise sharp corners become ugly
					//  but prevent crazy spikes
					const v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );
					if ( v_trans_lensq <= 2 ) {

						return new Vector2( v_trans_x, v_trans_y );

					} else {

						shrink_by = Math.sqrt( v_trans_lensq / 2 );

					}

				} else {

					// handle special case of collinear edges

					let direction_eq = false; // assumes: opposite

					if ( v_prev_x > Number.EPSILON ) {

						if ( v_next_x > Number.EPSILON ) {

							direction_eq = true;

						}

					} else {

						if ( v_prev_x < - Number.EPSILON ) {

							if ( v_next_x < - Number.EPSILON ) {

								direction_eq = true;

							}

						} else {

							if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {

								direction_eq = true;

							}

						}

					}

					if ( direction_eq ) {

						// console.log("Warning: lines are a straight sequence");
						v_trans_x = - v_prev_y;
						v_trans_y = v_prev_x;
						shrink_by = Math.sqrt( v_prev_lensq );

					} else {

						// console.log("Warning: lines are a straight spike");
						v_trans_x = v_prev_x;
						v_trans_y = v_prev_y;
						shrink_by = Math.sqrt( v_prev_lensq / 2 );

					}

				}

				return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );

			}


			const contourMovements = [];

			for ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

				if ( j === il ) j = 0;
				if ( k === il ) k = 0;

				//  (j)---(i)---(k)
				// console.log('i,j,k', i, j , k)

				contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );

			}

			const holesMovements = [];
			let oneHoleMovements, verticesMovements = contourMovements.concat();

			for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

				const ahole = holes[ h ];

				oneHoleMovements = [];

				for ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

					if ( j === il ) j = 0;
					if ( k === il ) k = 0;

					//  (j)---(i)---(k)
					oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );

				}

				holesMovements.push( oneHoleMovements );
				verticesMovements = verticesMovements.concat( oneHoleMovements );

			}


			// Loop bevelSegments, 1 for the front, 1 for the back

			for ( let b = 0; b < bevelSegments; b ++ ) {

				//for ( b = bevelSegments; b > 0; b -- ) {

				const t = b / bevelSegments;
				const z = bevelThickness * Math.cos( t * Math.PI / 2 );
				const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( let i = 0, il = contour.length; i < il; i ++ ) {

					const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );

					v( vert.x, vert.y, - z );

				}

				// expand holes

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( let i = 0, il = ahole.length; i < il; i ++ ) {

						const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						v( vert.x, vert.y, - z );

					}

				}

			}

			const bs = bevelSize + bevelOffset;

			// Back facing vertices

			for ( let i = 0; i < vlen; i ++ ) {

				const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

				if ( ! extrudeByPath ) {

					v( vert.x, vert.y, 0 );

				} else {

					// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );

					normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );
					binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );

					position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );

					v( position2.x, position2.y, position2.z );

				}

			}

			// Add stepped vertices...
			// Including front facing vertices

			for ( let s = 1; s <= steps; s ++ ) {

				for ( let i = 0; i < vlen; i ++ ) {

					const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

					if ( ! extrudeByPath ) {

						v( vert.x, vert.y, depth / steps * s );

					} else {

						// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );

						normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );
						binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );

						position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );

						v( position2.x, position2.y, position2.z );

					}

				}

			}


			// Add bevel segments planes

			//for ( b = 1; b <= bevelSegments; b ++ ) {
			for ( let b = bevelSegments - 1; b >= 0; b -- ) {

				const t = b / bevelSegments;
				const z = bevelThickness * Math.cos( t * Math.PI / 2 );
				const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( let i = 0, il = contour.length; i < il; i ++ ) {

					const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
					v( vert.x, vert.y, depth + z );

				}

				// expand holes

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( let i = 0, il = ahole.length; i < il; i ++ ) {

						const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						if ( ! extrudeByPath ) {

							v( vert.x, vert.y, depth + z );

						} else {

							v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );

						}

					}

				}

			}

			/* Faces */

			// Top and bottom faces

			buildLidFaces();

			// Sides faces

			buildSideFaces();


			/////  Internal functions

			function buildLidFaces() {

				const start = verticesArray.length / 3;

				if ( bevelEnabled ) {

					let layer = 0; // steps + 1
					let offset = vlen * layer;

					// Bottom faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );

					}

					layer = steps + bevelSegments * 2;
					offset = vlen * layer;

					// Top faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );

					}

				} else {

					// Bottom faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 2 ], face[ 1 ], face[ 0 ] );

					}

					// Top faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );

					}

				}

				scope.addGroup( start, verticesArray.length / 3 - start, 0 );

			}

			// Create faces for the z-sides of the shape

			function buildSideFaces() {

				const start = verticesArray.length / 3;
				let layeroffset = 0;
				sidewalls( contour, layeroffset );
				layeroffset += contour.length;

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					sidewalls( ahole, layeroffset );

					//, true
					layeroffset += ahole.length;

				}


				scope.addGroup( start, verticesArray.length / 3 - start, 1 );


			}

			function sidewalls( contour, layeroffset ) {

				let i = contour.length;

				while ( -- i >= 0 ) {

					const j = i;
					let k = i - 1;
					if ( k < 0 ) k = contour.length - 1;

					//console.log('b', i,j, i-1, k,vertices.length);

					for ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {

						const slen1 = vlen * s;
						const slen2 = vlen * ( s + 1 );

						const a = layeroffset + j + slen1,
							b = layeroffset + k + slen1,
							c = layeroffset + k + slen2,
							d = layeroffset + j + slen2;

						f4( a, b, c, d );

					}

				}

			}

			function v( x, y, z ) {

				placeholder.push( x );
				placeholder.push( y );
				placeholder.push( z );

			}


			function f3( a, b, c ) {

				addVertex( a );
				addVertex( b );
				addVertex( c );

				const nextIndex = verticesArray.length / 3;
				const uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );

			}

			function f4( a, b, c, d ) {

				addVertex( a );
				addVertex( b );
				addVertex( d );

				addVertex( b );
				addVertex( c );
				addVertex( d );


				const nextIndex = verticesArray.length / 3;
				const uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 3 ] );

				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );
				addUV( uvs[ 3 ] );

			}

			function addVertex( index ) {

				verticesArray.push( placeholder[ index * 3 + 0 ] );
				verticesArray.push( placeholder[ index * 3 + 1 ] );
				verticesArray.push( placeholder[ index * 3 + 2 ] );

			}


			function addUV( vector2 ) {

				uvArray.push( vector2.x );
				uvArray.push( vector2.y );

			}

		}

	}

	toJSON() {

		const data = super.toJSON();

		const shapes = this.parameters.shapes;
		const options = this.parameters.options;

		return toJSON$1( shapes, options, data );

	}

	static fromJSON( data, shapes ) {

		const geometryShapes = [];

		for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {

			const shape = shapes[ data.shapes[ j ] ];

			geometryShapes.push( shape );

		}

		const extrudePath = data.options.extrudePath;

		if ( extrudePath !== undefined ) {

			data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );

		}

		return new ExtrudeGeometry( geometryShapes, data.options );

	}

}

const WorldUVGenerator = {

	generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {

		const a_x = vertices[ indexA * 3 ];
		const a_y = vertices[ indexA * 3 + 1 ];
		const b_x = vertices[ indexB * 3 ];
		const b_y = vertices[ indexB * 3 + 1 ];
		const c_x = vertices[ indexC * 3 ];
		const c_y = vertices[ indexC * 3 + 1 ];

		return [
			new Vector2( a_x, a_y ),
			new Vector2( b_x, b_y ),
			new Vector2( c_x, c_y )
		];

	},

	generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {

		const a_x = vertices[ indexA * 3 ];
		const a_y = vertices[ indexA * 3 + 1 ];
		const a_z = vertices[ indexA * 3 + 2 ];
		const b_x = vertices[ indexB * 3 ];
		const b_y = vertices[ indexB * 3 + 1 ];
		const b_z = vertices[ indexB * 3 + 2 ];
		const c_x = vertices[ indexC * 3 ];
		const c_y = vertices[ indexC * 3 + 1 ];
		const c_z = vertices[ indexC * 3 + 2 ];
		const d_x = vertices[ indexD * 3 ];
		const d_y = vertices[ indexD * 3 + 1 ];
		const d_z = vertices[ indexD * 3 + 2 ];

		if ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {

			return [
				new Vector2( a_x, 1 - a_z ),
				new Vector2( b_x, 1 - b_z ),
				new Vector2( c_x, 1 - c_z ),
				new Vector2( d_x, 1 - d_z )
			];

		} else {

			return [
				new Vector2( a_y, 1 - a_z ),
				new Vector2( b_y, 1 - b_z ),
				new Vector2( c_y, 1 - c_z ),
				new Vector2( d_y, 1 - d_z )
			];

		}

	}

};

function toJSON$1( shapes, options, data ) {

	data.shapes = [];

	if ( Array.isArray( shapes ) ) {

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];

			data.shapes.push( shape.uuid );

		}

	} else {

		data.shapes.push( shapes.uuid );

	}

	if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();

	return data;

}

class IcosahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const t = ( 1 + Math.sqrt( 5 ) ) / 2;

		const vertices = [
			- 1, t, 0, 	1, t, 0, 	- 1, - t, 0, 	1, - t, 0,
			0, - 1, t, 	0, 1, t,	0, - 1, - t, 	0, 1, - t,
			t, 0, - 1, 	t, 0, 1, 	- t, 0, - 1, 	- t, 0, 1
		];

		const indices = [
			0, 11, 5, 	0, 5, 1, 	0, 1, 7, 	0, 7, 10, 	0, 10, 11,
			1, 5, 9, 	5, 11, 4,	11, 10, 2,	10, 7, 6,	7, 1, 8,
			3, 9, 4, 	3, 4, 2,	3, 2, 6,	3, 6, 8,	3, 8, 9,
			4, 9, 5, 	2, 4, 11,	6, 2, 10,	8, 6, 7,	9, 8, 1
		];

		super( vertices, indices, radius, detail );

		this.type = 'IcosahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	static fromJSON( data ) {

		return new IcosahedronGeometry( data.radius, data.detail );

	}

}

class LatheGeometry extends BufferGeometry {

	constructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {

		super();

		this.type = 'LatheGeometry';

		this.parameters = {
			points: points,
			segments: segments,
			phiStart: phiStart,
			phiLength: phiLength
		};

		segments = Math.floor( segments );

		// clamp phiLength so it's in range of [ 0, 2PI ]

		phiLength = clamp( phiLength, 0, Math.PI * 2 );

		// buffers

		const indices = [];
		const vertices = [];
		const uvs = [];
		const initNormals = [];
		const normals = [];

		// helper variables

		const inverseSegments = 1.0 / segments;
		const vertex = new Vector3();
		const uv = new Vector2();
		const normal = new Vector3();
		const curNormal = new Vector3();
		const prevNormal = new Vector3();
		let dx = 0;
		let dy = 0;

		// pre-compute normals for initial "meridian"

		for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {

			switch ( j ) {

				case 0:				// special handling for 1st vertex on path

					dx = points[ j + 1 ].x - points[ j ].x;
					dy = points[ j + 1 ].y - points[ j ].y;

					normal.x = dy * 1.0;
					normal.y = - dx;
					normal.z = dy * 0.0;

					prevNormal.copy( normal );

					normal.normalize();

					initNormals.push( normal.x, normal.y, normal.z );

					break;

				case ( points.length - 1 ):	// special handling for last Vertex on path

					initNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );

					break;

				default:			// default handling for all vertices in between

					dx = points[ j + 1 ].x - points[ j ].x;
					dy = points[ j + 1 ].y - points[ j ].y;

					normal.x = dy * 1.0;
					normal.y = - dx;
					normal.z = dy * 0.0;

					curNormal.copy( normal );

					normal.x += prevNormal.x;
					normal.y += prevNormal.y;
					normal.z += prevNormal.z;

					normal.normalize();

					initNormals.push( normal.x, normal.y, normal.z );

					prevNormal.copy( curNormal );

			}

		}

		// generate vertices, uvs and normals

		for ( let i = 0; i <= segments; i ++ ) {

			const phi = phiStart + i * inverseSegments * phiLength;

			const sin = Math.sin( phi );
			const cos = Math.cos( phi );

			for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {

				// vertex

				vertex.x = points[ j ].x * sin;
				vertex.y = points[ j ].y;
				vertex.z = points[ j ].x * cos;

				vertices.push( vertex.x, vertex.y, vertex.z );

				// uv

				uv.x = i / segments;
				uv.y = j / ( points.length - 1 );

				uvs.push( uv.x, uv.y );

				// normal

				const x = initNormals[ 3 * j + 0 ] * sin;
				const y = initNormals[ 3 * j + 1 ];
				const z = initNormals[ 3 * j + 0 ] * cos;

				normals.push( x, y, z );

			}

		}

		// indices

		for ( let i = 0; i < segments; i ++ ) {

			for ( let j = 0; j < ( points.length - 1 ); j ++ ) {

				const base = j + i * points.length;

				const a = base;
				const b = base + points.length;
				const c = base + points.length + 1;
				const d = base + 1;

				// faces

				indices.push( a, b, d );
				indices.push( c, d, b );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );

	}

	static fromJSON( data ) {

		return new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );

	}

}

class OctahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const vertices = [
			1, 0, 0, 	- 1, 0, 0,	0, 1, 0,
			0, - 1, 0, 	0, 0, 1,	0, 0, - 1
		];

		const indices = [
			0, 2, 4,	0, 4, 3,	0, 3, 5,
			0, 5, 2,	1, 2, 5,	1, 5, 3,
			1, 3, 4,	1, 4, 2
		];

		super( vertices, indices, radius, detail );

		this.type = 'OctahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	static fromJSON( data ) {

		return new OctahedronGeometry( data.radius, data.detail );

	}

}

class RingGeometry extends BufferGeometry {

	constructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();

		this.type = 'RingGeometry';

		this.parameters = {
			innerRadius: innerRadius,
			outerRadius: outerRadius,
			thetaSegments: thetaSegments,
			phiSegments: phiSegments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		thetaSegments = Math.max( 3, thetaSegments );
		phiSegments = Math.max( 1, phiSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// some helper variables

		let radius = innerRadius;
		const radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );
		const vertex = new Vector3();
		const uv = new Vector2();

		// generate vertices, normals and uvs

		for ( let j = 0; j <= phiSegments; j ++ ) {

			for ( let i = 0; i <= thetaSegments; i ++ ) {

				// values are generate from the inside of the ring to the outside

				const segment = thetaStart + i / thetaSegments * thetaLength;

				// vertex

				vertex.x = radius * Math.cos( segment );
				vertex.y = radius * Math.sin( segment );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, 0, 1 );

				// uv

				uv.x = ( vertex.x / outerRadius + 1 ) / 2;
				uv.y = ( vertex.y / outerRadius + 1 ) / 2;

				uvs.push( uv.x, uv.y );

			}

			// increase the radius for next row of vertices

			radius += radiusStep;

		}

		// indices

		for ( let j = 0; j < phiSegments; j ++ ) {

			const thetaSegmentLevel = j * ( thetaSegments + 1 );

			for ( let i = 0; i < thetaSegments; i ++ ) {

				const segment = i + thetaSegmentLevel;

				const a = segment;
				const b = segment + thetaSegments + 1;
				const c = segment + thetaSegments + 2;
				const d = segment + 1;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	static fromJSON( data ) {

		return new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );

	}

}

class ShapeGeometry extends BufferGeometry {

	constructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {

		super();
		this.type = 'ShapeGeometry';

		this.parameters = {
			shapes: shapes,
			curveSegments: curveSegments
		};

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let groupStart = 0;
		let groupCount = 0;

		// allow single and array values for "shapes" parameter

		if ( Array.isArray( shapes ) === false ) {

			addShape( shapes );

		} else {

			for ( let i = 0; i < shapes.length; i ++ ) {

				addShape( shapes[ i ] );

				this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support

				groupStart += groupCount;
				groupCount = 0;

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );


		// helper functions

		function addShape( shape ) {

			const indexOffset = vertices.length / 3;
			const points = shape.extractPoints( curveSegments );

			let shapeVertices = points.shape;
			const shapeHoles = points.holes;

			// check direction of vertices

			if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {

				shapeVertices = shapeVertices.reverse();

			}

			for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {

				const shapeHole = shapeHoles[ i ];

				if ( ShapeUtils.isClockWise( shapeHole ) === true ) {

					shapeHoles[ i ] = shapeHole.reverse();

				}

			}

			const faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );

			// join vertices of inner and outer paths to a single array

			for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {

				const shapeHole = shapeHoles[ i ];
				shapeVertices = shapeVertices.concat( shapeHole );

			}

			// vertices, normals, uvs

			for ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {

				const vertex = shapeVertices[ i ];

				vertices.push( vertex.x, vertex.y, 0 );
				normals.push( 0, 0, 1 );
				uvs.push( vertex.x, vertex.y ); // world uvs

			}

			// incides

			for ( let i = 0, l = faces.length; i < l; i ++ ) {

				const face = faces[ i ];

				const a = face[ 0 ] + indexOffset;
				const b = face[ 1 ] + indexOffset;
				const c = face[ 2 ] + indexOffset;

				indices.push( a, b, c );
				groupCount += 3;

			}

		}

	}

	toJSON() {

		const data = super.toJSON();

		const shapes = this.parameters.shapes;

		return toJSON( shapes, data );

	}

	static fromJSON( data, shapes ) {

		const geometryShapes = [];

		for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {

			const shape = shapes[ data.shapes[ j ] ];

			geometryShapes.push( shape );

		}

		return new ShapeGeometry( geometryShapes, data.curveSegments );

	}

}

function toJSON( shapes, data ) {

	data.shapes = [];

	if ( Array.isArray( shapes ) ) {

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];

			data.shapes.push( shape.uuid );

		}

	} else {

		data.shapes.push( shapes.uuid );

	}

	return data;

}

class SphereGeometry extends BufferGeometry {

	constructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {

		super();
		this.type = 'SphereGeometry';

		this.parameters = {
			radius: radius,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			phiStart: phiStart,
			phiLength: phiLength,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		widthSegments = Math.max( 3, Math.floor( widthSegments ) );
		heightSegments = Math.max( 2, Math.floor( heightSegments ) );

		const thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );

		let index = 0;
		const grid = [];

		const vertex = new Vector3();
		const normal = new Vector3();

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// generate vertices, normals and uvs

		for ( let iy = 0; iy <= heightSegments; iy ++ ) {

			const verticesRow = [];

			const v = iy / heightSegments;

			// special case for the poles

			let uOffset = 0;

			if ( iy == 0 && thetaStart == 0 ) {

				uOffset = 0.5 / widthSegments;

			} else if ( iy == heightSegments && thetaEnd == Math.PI ) {

				uOffset = - 0.5 / widthSegments;

			}

			for ( let ix = 0; ix <= widthSegments; ix ++ ) {

				const u = ix / widthSegments;

				// vertex

				vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
				vertex.y = radius * Math.cos( thetaStart + v * thetaLength );
				vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normal.copy( vertex ).normalize();
				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( u + uOffset, 1 - v );

				verticesRow.push( index ++ );

			}

			grid.push( verticesRow );

		}

		// indices

		for ( let iy = 0; iy < heightSegments; iy ++ ) {

			for ( let ix = 0; ix < widthSegments; ix ++ ) {

				const a = grid[ iy ][ ix + 1 ];
				const b = grid[ iy ][ ix ];
				const c = grid[ iy + 1 ][ ix ];
				const d = grid[ iy + 1 ][ ix + 1 ];

				if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );
				if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	static fromJSON( data ) {

		return new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );

	}

}

class TetrahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const vertices = [
			1, 1, 1, 	- 1, - 1, 1, 	- 1, 1, - 1, 	1, - 1, - 1
		];

		const indices = [
			2, 1, 0, 	0, 3, 2,	1, 3, 0,	2, 3, 1
		];

		super( vertices, indices, radius, detail );

		this.type = 'TetrahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	static fromJSON( data ) {

		return new TetrahedronGeometry( data.radius, data.detail );

	}

}

class TorusGeometry extends BufferGeometry {

	constructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {

		super();
		this.type = 'TorusGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			radialSegments: radialSegments,
			tubularSegments: tubularSegments,
			arc: arc
		};

		radialSegments = Math.floor( radialSegments );
		tubularSegments = Math.floor( tubularSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const center = new Vector3();
		const vertex = new Vector3();
		const normal = new Vector3();

		// generate vertices, normals and uvs

		for ( let j = 0; j <= radialSegments; j ++ ) {

			for ( let i = 0; i <= tubularSegments; i ++ ) {

				const u = i / tubularSegments * arc;
				const v = j / radialSegments * Math.PI * 2;

				// vertex

				vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );
				vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );
				vertex.z = tube * Math.sin( v );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				center.x = radius * Math.cos( u );
				center.y = radius * Math.sin( u );
				normal.subVectors( vertex, center ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( let j = 1; j <= radialSegments; j ++ ) {

			for ( let i = 1; i <= tubularSegments; i ++ ) {

				// indices

				const a = ( tubularSegments + 1 ) * j + i - 1;
				const b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;
				const c = ( tubularSegments + 1 ) * ( j - 1 ) + i;
				const d = ( tubularSegments + 1 ) * j + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	static fromJSON( data ) {

		return new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );

	}

}

class TorusKnotGeometry extends BufferGeometry {

	constructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {

		super();
		this.type = 'TorusKnotGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			tubularSegments: tubularSegments,
			radialSegments: radialSegments,
			p: p,
			q: q
		};

		tubularSegments = Math.floor( tubularSegments );
		radialSegments = Math.floor( radialSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const vertex = new Vector3();
		const normal = new Vector3();

		const P1 = new Vector3();
		const P2 = new Vector3();

		const B = new Vector3();
		const T = new Vector3();
		const N = new Vector3();

		// generate vertices, normals and uvs

		for ( let i = 0; i <= tubularSegments; ++ i ) {

			// the radian "u" is used to calculate the position on the torus curve of the current tubular segement

			const u = i / tubularSegments * p * Math.PI * 2;

			// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
			// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions

			calculatePositionOnCurve( u, p, q, radius, P1 );
			calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );

			// calculate orthonormal basis

			T.subVectors( P2, P1 );
			N.addVectors( P2, P1 );
			B.crossVectors( T, N );
			N.crossVectors( B, T );

			// normalize B, N. T can be ignored, we don't use it

			B.normalize();
			N.normalize();

			for ( let j = 0; j <= radialSegments; ++ j ) {

				// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
				// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.

				const v = j / radialSegments * Math.PI * 2;
				const cx = - tube * Math.cos( v );
				const cy = tube * Math.sin( v );

				// now calculate the final vertex position.
				// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve

				vertex.x = P1.x + ( cx * N.x + cy * B.x );
				vertex.y = P1.y + ( cx * N.y + cy * B.y );
				vertex.z = P1.z + ( cx * N.z + cy * B.z );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)

				normal.subVectors( vertex, P1 ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( let j = 1; j <= tubularSegments; j ++ ) {

			for ( let i = 1; i <= radialSegments; i ++ ) {

				// indices

				const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
				const b = ( radialSegments + 1 ) * j + ( i - 1 );
				const c = ( radialSegments + 1 ) * j + i;
				const d = ( radialSegments + 1 ) * ( j - 1 ) + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// this function calculates the current position on the torus curve

		function calculatePositionOnCurve( u, p, q, radius, position ) {

			const cu = Math.cos( u );
			const su = Math.sin( u );
			const quOverP = q / p * u;
			const cs = Math.cos( quOverP );

			position.x = radius * ( 2 + cs ) * 0.5 * cu;
			position.y = radius * ( 2 + cs ) * su * 0.5;
			position.z = radius * Math.sin( quOverP ) * 0.5;

		}

	}

	static fromJSON( data ) {

		return new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );

	}

}

class TubeGeometry extends BufferGeometry {

	constructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {

		super();
		this.type = 'TubeGeometry';

		this.parameters = {
			path: path,
			tubularSegments: tubularSegments,
			radius: radius,
			radialSegments: radialSegments,
			closed: closed
		};

		const frames = path.computeFrenetFrames( tubularSegments, closed );

		// expose internals

		this.tangents = frames.tangents;
		this.normals = frames.normals;
		this.binormals = frames.binormals;

		// helper variables

		const vertex = new Vector3();
		const normal = new Vector3();
		const uv = new Vector2();
		let P = new Vector3();

		// buffer

		const vertices = [];
		const normals = [];
		const uvs = [];
		const indices = [];

		// create buffer data

		generateBufferData();

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// functions

		function generateBufferData() {

			for ( let i = 0; i < tubularSegments; i ++ ) {

				generateSegment( i );

			}

			// if the geometry is not closed, generate the last row of vertices and normals
			// at the regular position on the given path
			//
			// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)

			generateSegment( ( closed === false ) ? tubularSegments : 0 );

			// uvs are generated in a separate function.
			// this makes it easy compute correct values for closed geometries

			generateUVs();

			// finally create faces

			generateIndices();

		}

		function generateSegment( i ) {

			// we use getPointAt to sample evenly distributed points from the given path

			P = path.getPointAt( i / tubularSegments, P );

			// retrieve corresponding normal and binormal

			const N = frames.normals[ i ];
			const B = frames.binormals[ i ];

			// generate normals and vertices for the current segment

			for ( let j = 0; j <= radialSegments; j ++ ) {

				const v = j / radialSegments * Math.PI * 2;

				const sin = Math.sin( v );
				const cos = - Math.cos( v );

				// normal

				normal.x = ( cos * N.x + sin * B.x );
				normal.y = ( cos * N.y + sin * B.y );
				normal.z = ( cos * N.z + sin * B.z );
				normal.normalize();

				normals.push( normal.x, normal.y, normal.z );

				// vertex

				vertex.x = P.x + radius * normal.x;
				vertex.y = P.y + radius * normal.y;
				vertex.z = P.z + radius * normal.z;

				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		}

		function generateIndices() {

			for ( let j = 1; j <= tubularSegments; j ++ ) {

				for ( let i = 1; i <= radialSegments; i ++ ) {

					const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
					const b = ( radialSegments + 1 ) * j + ( i - 1 );
					const c = ( radialSegments + 1 ) * j + i;
					const d = ( radialSegments + 1 ) * ( j - 1 ) + i;

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

				}

			}

		}

		function generateUVs() {

			for ( let i = 0; i <= tubularSegments; i ++ ) {

				for ( let j = 0; j <= radialSegments; j ++ ) {

					uv.x = i / tubularSegments;
					uv.y = j / radialSegments;

					uvs.push( uv.x, uv.y );

				}

			}

		}

	}

	toJSON() {

		const data = super.toJSON();

		data.path = this.parameters.path.toJSON();

		return data;

	}

	static fromJSON( data ) {

		// This only works for built-in curves (e.g. CatmullRomCurve3).
		// User defined curves or instances of CurvePath will not be deserialized.
		return new TubeGeometry(
			new Curves[ data.path.type ]().fromJSON( data.path ),
			data.tubularSegments,
			data.radius,
			data.radialSegments,
			data.closed
		);

	}

}

class WireframeGeometry extends BufferGeometry {

	constructor( geometry = null ) {

		super();
		this.type = 'WireframeGeometry';

		this.parameters = {
			geometry: geometry
		};

		if ( geometry !== null ) {

			// buffer

			const vertices = [];
			const edges = new Set();

			// helper variables

			const start = new Vector3();
			const end = new Vector3();

			if ( geometry.index !== null ) {

				// indexed BufferGeometry

				const position = geometry.attributes.position;
				const indices = geometry.index;
				let groups = geometry.groups;

				if ( groups.length === 0 ) {

					groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];

				}

				// create a data structure that contains all eges without duplicates

				for ( let o = 0, ol = groups.length; o < ol; ++ o ) {

					const group = groups[ o ];

					const groupStart = group.start;
					const groupCount = group.count;

					for ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {

						for ( let j = 0; j < 3; j ++ ) {

							const index1 = indices.getX( i + j );
							const index2 = indices.getX( i + ( j + 1 ) % 3 );

							start.fromBufferAttribute( position, index1 );
							end.fromBufferAttribute( position, index2 );

							if ( isUniqueEdge( start, end, edges ) === true ) {

								vertices.push( start.x, start.y, start.z );
								vertices.push( end.x, end.y, end.z );

							}

						}

					}

				}

			} else {

				// non-indexed BufferGeometry

				const position = geometry.attributes.position;

				for ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {

					for ( let j = 0; j < 3; j ++ ) {

						// three edges per triangle, an edge is represented as (index1, index2)
						// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)

						const index1 = 3 * i + j;
						const index2 = 3 * i + ( ( j + 1 ) % 3 );

						start.fromBufferAttribute( position, index1 );
						end.fromBufferAttribute( position, index2 );

						if ( isUniqueEdge( start, end, edges ) === true ) {

							vertices.push( start.x, start.y, start.z );
							vertices.push( end.x, end.y, end.z );

						}

					}

				}

			}

			// build geometry

			this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

		}

	}

}

function isUniqueEdge( start, end, edges ) {

	const hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;
	const hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge

	if ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {

		return false;

	} else {

		edges.add( hash1 );
		edges.add( hash2 );
		return true;

	}

}

var Geometries = /*#__PURE__*/Object.freeze({
	__proto__: null,
	BoxGeometry: BoxGeometry,
	BoxBufferGeometry: BoxGeometry,
	CircleGeometry: CircleGeometry,
	CircleBufferGeometry: CircleGeometry,
	ConeGeometry: ConeGeometry,
	ConeBufferGeometry: ConeGeometry,
	CylinderGeometry: CylinderGeometry,
	CylinderBufferGeometry: CylinderGeometry,
	DodecahedronGeometry: DodecahedronGeometry,
	DodecahedronBufferGeometry: DodecahedronGeometry,
	EdgesGeometry: EdgesGeometry,
	ExtrudeGeometry: ExtrudeGeometry,
	ExtrudeBufferGeometry: ExtrudeGeometry,
	IcosahedronGeometry: IcosahedronGeometry,
	IcosahedronBufferGeometry: IcosahedronGeometry,
	LatheGeometry: LatheGeometry,
	LatheBufferGeometry: LatheGeometry,
	OctahedronGeometry: OctahedronGeometry,
	OctahedronBufferGeometry: OctahedronGeometry,
	PlaneGeometry: PlaneGeometry,
	PlaneBufferGeometry: PlaneGeometry,
	PolyhedronGeometry: PolyhedronGeometry,
	PolyhedronBufferGeometry: PolyhedronGeometry,
	RingGeometry: RingGeometry,
	RingBufferGeometry: RingGeometry,
	ShapeGeometry: ShapeGeometry,
	ShapeBufferGeometry: ShapeGeometry,
	SphereGeometry: SphereGeometry,
	SphereBufferGeometry: SphereGeometry,
	TetrahedronGeometry: TetrahedronGeometry,
	TetrahedronBufferGeometry: TetrahedronGeometry,
	TorusGeometry: TorusGeometry,
	TorusBufferGeometry: TorusGeometry,
	TorusKnotGeometry: TorusKnotGeometry,
	TorusKnotBufferGeometry: TorusKnotGeometry,
	TubeGeometry: TubeGeometry,
	TubeBufferGeometry: TubeGeometry,
	WireframeGeometry: WireframeGeometry
});

/**
 * parameters = {
 *  color: <THREE.Color>
 * }
 */

class ShadowMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'ShadowMaterial';

		this.color = new Color( 0x000000 );
		this.transparent = true;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		return this;

	}

}

ShadowMaterial.prototype.isShadowMaterial = true;

class RawShaderMaterial extends ShaderMaterial {

	constructor( parameters ) {

		super( parameters );

		this.type = 'RawShaderMaterial';

	}

}

RawShaderMaterial.prototype.isRawShaderMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  flatShading: <bool>
 * }
 */

class MeshStandardMaterial extends Material {

	constructor( parameters ) {

		super();

		this.defines = { 'STANDARD': '' };

		this.type = 'MeshStandardMaterial';

		this.color = new Color( 0xffffff ); // diffuse
		this.roughness = 1.0;
		this.metalness = 0.0;

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.roughnessMap = null;

		this.metalnessMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.envMapIntensity = 1.0;

		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.flatShading = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.defines = { 'STANDARD': '' };

		this.color.copy( source.color );
		this.roughness = source.roughness;
		this.metalness = source.metalness;

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.roughnessMap = source.roughnessMap;

		this.metalnessMap = source.metalnessMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.envMapIntensity = source.envMapIntensity;

		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshStandardMaterial.prototype.isMeshStandardMaterial = true;

/**
 * parameters = {
 *  clearcoat: <float>,
 *  clearcoatMap: new THREE.Texture( <Image> ),
 *  clearcoatRoughness: <float>,
 *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),
 *  clearcoatNormalScale: <Vector2>,
 *  clearcoatNormalMap: new THREE.Texture( <Image> ),
 *
 *  ior: <float>,
 *  reflectivity: <float>,
 *
 *  sheen: <float>,
 *  sheenColor: <Color>,
 *  sheenColorMap: new THREE.Texture( <Image> ),
 *  sheenRoughness: <float>,
 *  sheenRoughnessMap: new THREE.Texture( <Image> ),
 *
 *  transmission: <float>,
 *  transmissionMap: new THREE.Texture( <Image> ),
 *
 *  thickness: <float>,
 *  thicknessMap: new THREE.Texture( <Image> ),
 *  attenuationDistance: <float>,
 *  attenuationColor: <Color>,
 *
 *  specularIntensity: <float>,
 *  specularIntensityMap: new THREE.Texture( <Image> ),
 *  specularColor: <Color>,
 *  specularColorMap: new THREE.Texture( <Image> )
 * }
 */

class MeshPhysicalMaterial extends MeshStandardMaterial {

	constructor( parameters ) {

		super();

		this.defines = {

			'STANDARD': '',
			'PHYSICAL': ''

		};

		this.type = 'MeshPhysicalMaterial';

		this.clearcoatMap = null;
		this.clearcoatRoughness = 0.0;
		this.clearcoatRoughnessMap = null;
		this.clearcoatNormalScale = new Vector2( 1, 1 );
		this.clearcoatNormalMap = null;

		this.ior = 1.5;

		Object.defineProperty( this, 'reflectivity', {
			get: function () {

				return ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );

			},
			set: function ( reflectivity ) {

				this.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );

			}
		} );

		this.sheenColor = new Color( 0x000000 );
		this.sheenColorMap = null;
		this.sheenRoughness = 1.0;
		this.sheenRoughnessMap = null;

		this.transmissionMap = null;

		this.thickness = 0;
		this.thicknessMap = null;
		this.attenuationDistance = 0.0;
		this.attenuationColor = new Color( 1, 1, 1 );

		this.specularIntensity = 1.0;
		this.specularIntensityMap = null;
		this.specularColor = new Color( 1, 1, 1 );
		this.specularColorMap = null;

		this._sheen = 0.0;
		this._clearcoat = 0;
		this._transmission = 0;

		this.setValues( parameters );

	}

	get sheen() {

		return this._sheen;

	}

	set sheen( value ) {

		if ( this._sheen > 0 !== value > 0 ) {

			this.version ++;

		}

		this._sheen = value;

	}

	get clearcoat() {

		return this._clearcoat;

	}

	set clearcoat( value ) {

		if ( this._clearcoat > 0 !== value > 0 ) {

			this.version ++;

		}

		this._clearcoat = value;

	}

	get transmission() {

		return this._transmission;

	}

	set transmission( value ) {

		if ( this._transmission > 0 !== value > 0 ) {

			this.version ++;

		}

		this._transmission = value;

	}

	copy( source ) {

		super.copy( source );

		this.defines = {

			'STANDARD': '',
			'PHYSICAL': ''

		};

		this.clearcoat = source.clearcoat;
		this.clearcoatMap = source.clearcoatMap;
		this.clearcoatRoughness = source.clearcoatRoughness;
		this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;
		this.clearcoatNormalMap = source.clearcoatNormalMap;
		this.clearcoatNormalScale.copy( source.clearcoatNormalScale );

		this.ior = source.ior;

		this.sheen = source.sheen;
		this.sheenColor.copy( source.sheenColor );
		this.sheenColorMap = source.sheenColorMap;
		this.sheenRoughness = source.sheenRoughness;
		this.sheenRoughnessMap = source.sheenRoughnessMap;

		this.transmission = source.transmission;
		this.transmissionMap = source.transmissionMap;

		this.thickness = source.thickness;
		this.thicknessMap = source.thicknessMap;
		this.attenuationDistance = source.attenuationDistance;
		this.attenuationColor.copy( source.attenuationColor );

		this.specularIntensity = source.specularIntensity;
		this.specularIntensityMap = source.specularIntensityMap;
		this.specularColor.copy( source.specularColor );
		this.specularColorMap = source.specularColorMap;

		return this;

	}

}

MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.MultiplyOperation,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  flatShading: <bool>
 * }
 */

class MeshPhongMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshPhongMaterial';

		this.color = new Color( 0xffffff ); // diffuse
		this.specular = new Color( 0x111111 );
		this.shininess = 30;

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.flatShading = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );
		this.specular.copy( source.specular );
		this.shininess = source.shininess;

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshPhongMaterial.prototype.isMeshPhongMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *
 *  map: new THREE.Texture( <Image> ),
 *  gradientMap: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 * }
 */

class MeshToonMaterial extends Material {

	constructor( parameters ) {

		super();

		this.defines = { 'TOON': '' };

		this.type = 'MeshToonMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;
		this.gradientMap = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.alphaMap = null;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;
		this.gradientMap = source.gradientMap;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.alphaMap = source.alphaMap;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		return this;

	}

}

MeshToonMaterial.prototype.isMeshToonMaterial = true;

/**
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  flatShading: <bool>
 * }
 */

class MeshNormalMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshNormalMaterial';

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.flatShading = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshNormalMaterial.prototype.isMeshNormalMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 * }
 */

class MeshLambertMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshLambertMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		return this;

	}

}

MeshLambertMaterial.prototype.isMeshLambertMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  matcap: new THREE.Texture( <Image> ),
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  flatShading: <bool>
 * }
 */

class MeshMatcapMaterial extends Material {

	constructor( parameters ) {

		super();

		this.defines = { 'MATCAP': '' };

		this.type = 'MeshMatcapMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.matcap = null;

		this.map = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.alphaMap = null;

		this.flatShading = false;

		this.setValues( parameters );

	}


	copy( source ) {

		super.copy( source );

		this.defines = { 'MATCAP': '' };

		this.color.copy( source.color );

		this.matcap = source.matcap;

		this.map = source.map;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.alphaMap = source.alphaMap;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */

class LineDashedMaterial extends LineBasicMaterial {

	constructor( parameters ) {

		super();

		this.type = 'LineDashedMaterial';

		this.scale = 1;
		this.dashSize = 3;
		this.gapSize = 1;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.scale = source.scale;
		this.dashSize = source.dashSize;
		this.gapSize = source.gapSize;

		return this;

	}

}

LineDashedMaterial.prototype.isLineDashedMaterial = true;

const materialLib = {
	ShadowMaterial,
	SpriteMaterial,
	RawShaderMaterial,
	ShaderMaterial,
	PointsMaterial,
	MeshPhysicalMaterial,
	MeshStandardMaterial,
	MeshPhongMaterial,
	MeshToonMaterial,
	MeshNormalMaterial,
	MeshLambertMaterial,
	MeshDepthMaterial,
	MeshDistanceMaterial,
	MeshBasicMaterial,
	MeshMatcapMaterial,
	LineDashedMaterial,
	LineBasicMaterial,
	Material
};

Material.fromType = function ( type ) {

	return new materialLib[ type ]();

};

const AnimationUtils = {

	// same as Array.prototype.slice, but also works on typed arrays
	arraySlice: function ( array, from, to ) {

		if ( AnimationUtils.isTypedArray( array ) ) {

			// in ios9 array.subarray(from, undefined) will return empty array
			// but array.subarray(from) or array.subarray(from, len) is correct
			return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );

		}

		return array.slice( from, to );

	},

	// converts an array to a specific type
	convertArray: function ( array, type, forceClone ) {

		if ( ! array || // let 'undefined' and 'null' pass
			! forceClone && array.constructor === type ) return array;

		if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {

			return new type( array ); // create typed array

		}

		return Array.prototype.slice.call( array ); // create Array

	},

	isTypedArray: function ( object ) {

		return ArrayBuffer.isView( object ) &&
			! ( object instanceof DataView );

	},

	// returns an array by which times and values can be sorted
	getKeyframeOrder: function ( times ) {

		function compareTime( i, j ) {

			return times[ i ] - times[ j ];

		}

		const n = times.length;
		const result = new Array( n );
		for ( let i = 0; i !== n; ++ i ) result[ i ] = i;

		result.sort( compareTime );

		return result;

	},

	// uses the array previously returned by 'getKeyframeOrder' to sort data
	sortedArray: function ( values, stride, order ) {

		const nValues = values.length;
		const result = new values.constructor( nValues );

		for ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {

			const srcOffset = order[ i ] * stride;

			for ( let j = 0; j !== stride; ++ j ) {

				result[ dstOffset ++ ] = values[ srcOffset + j ];

			}

		}

		return result;

	},

	// function for parsing AOS keyframe formats
	flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {

		let i = 1, key = jsonKeys[ 0 ];

		while ( key !== undefined && key[ valuePropertyName ] === undefined ) {

			key = jsonKeys[ i ++ ];

		}

		if ( key === undefined ) return; // no data

		let value = key[ valuePropertyName ];
		if ( value === undefined ) return; // no data

		if ( Array.isArray( value ) ) {

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push.apply( values, value ); // push all elements

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else if ( value.toArray !== undefined ) {

			// ...assume THREE.Math-ish

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					value.toArray( values, values.length );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else {

			// otherwise push as-is

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push( value );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		}

	},

	subclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {

		const clip = sourceClip.clone();

		clip.name = name;

		const tracks = [];

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			const track = clip.tracks[ i ];
			const valueSize = track.getValueSize();

			const times = [];
			const values = [];

			for ( let j = 0; j < track.times.length; ++ j ) {

				const frame = track.times[ j ] * fps;

				if ( frame < startFrame || frame >= endFrame ) continue;

				times.push( track.times[ j ] );

				for ( let k = 0; k < valueSize; ++ k ) {

					values.push( track.values[ j * valueSize + k ] );

				}

			}

			if ( times.length === 0 ) continue;

			track.times = AnimationUtils.convertArray( times, track.times.constructor );
			track.values = AnimationUtils.convertArray( values, track.values.constructor );

			tracks.push( track );

		}

		clip.tracks = tracks;

		// find minimum .times value across all tracks in the trimmed clip

		let minStartTime = Infinity;

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {

				minStartTime = clip.tracks[ i ].times[ 0 ];

			}

		}

		// shift all tracks such that clip begins at t=0

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			clip.tracks[ i ].shift( - 1 * minStartTime );

		}

		clip.resetDuration();

		return clip;

	},

	makeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {

		if ( fps <= 0 ) fps = 30;

		const numTracks = referenceClip.tracks.length;
		const referenceTime = referenceFrame / fps;

		// Make each track's values relative to the values at the reference frame
		for ( let i = 0; i < numTracks; ++ i ) {

			const referenceTrack = referenceClip.tracks[ i ];
			const referenceTrackType = referenceTrack.ValueTypeName;

			// Skip this track if it's non-numeric
			if ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;

			// Find the track in the target clip whose name and type matches the reference track
			const targetTrack = targetClip.tracks.find( function ( track ) {

				return track.name === referenceTrack.name
					&& track.ValueTypeName === referenceTrackType;

			} );

			if ( targetTrack === undefined ) continue;

			let referenceOffset = 0;
			const referenceValueSize = referenceTrack.getValueSize();

			if ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {

				referenceOffset = referenceValueSize / 3;

			}

			let targetOffset = 0;
			const targetValueSize = targetTrack.getValueSize();

			if ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {

				targetOffset = targetValueSize / 3;

			}

			const lastIndex = referenceTrack.times.length - 1;
			let referenceValue;

			// Find the value to subtract out of the track
			if ( referenceTime <= referenceTrack.times[ 0 ] ) {

				// Reference frame is earlier than the first keyframe, so just use the first keyframe
				const startIndex = referenceOffset;
				const endIndex = referenceValueSize - referenceOffset;
				referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );

			} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {

				// Reference frame is after the last keyframe, so just use the last keyframe
				const startIndex = lastIndex * referenceValueSize + referenceOffset;
				const endIndex = startIndex + referenceValueSize - referenceOffset;
				referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );

			} else {

				// Interpolate to the reference value
				const interpolant = referenceTrack.createInterpolant();
				const startIndex = referenceOffset;
				const endIndex = referenceValueSize - referenceOffset;
				interpolant.evaluate( referenceTime );
				referenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );

			}

			// Conjugate the quaternion
			if ( referenceTrackType === 'quaternion' ) {

				const referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();
				referenceQuat.toArray( referenceValue );

			}

			// Subtract the reference value from all of the track values

			const numTimes = targetTrack.times.length;
			for ( let j = 0; j < numTimes; ++ j ) {

				const valueStart = j * targetValueSize + targetOffset;

				if ( referenceTrackType === 'quaternion' ) {

					// Multiply the conjugate for quaternion track types
					Quaternion.multiplyQuaternionsFlat(
						targetTrack.values,
						valueStart,
						referenceValue,
						0,
						targetTrack.values,
						valueStart
					);

				} else {

					const valueEnd = targetValueSize - targetOffset * 2;

					// Subtract each value for all other numeric track types
					for ( let k = 0; k < valueEnd; ++ k ) {

						targetTrack.values[ valueStart + k ] -= referenceValue[ k ];

					}

				}

			}

		}

		targetClip.blendMode = AdditiveAnimationBlendMode;

		return targetClip;

	}

};

/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 */

class Interpolant {

	constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		this.parameterPositions = parameterPositions;
		this._cachedIndex = 0;

		this.resultBuffer = resultBuffer !== undefined ?
			resultBuffer : new sampleValues.constructor( sampleSize );
		this.sampleValues = sampleValues;
		this.valueSize = sampleSize;

		this.settings = null;
		this.DefaultSettings_ = {};

	}

	evaluate( t ) {

		const pp = this.parameterPositions;
		let i1 = this._cachedIndex,
			t1 = pp[ i1 ],
			t0 = pp[ i1 - 1 ];

		validate_interval: {

			seek: {

				let right;

				linear_scan: {

					//- See http://jsperf.com/comparison-to-undefined/3
					//- slower code:
					//-
					//- 				if ( t >= t1 || t1 === undefined ) {
					forward_scan: if ( ! ( t < t1 ) ) {

						for ( let giveUpAt = i1 + 2; ; ) {

							if ( t1 === undefined ) {

								if ( t < t0 ) break forward_scan;

								// after end

								i1 = pp.length;
								this._cachedIndex = i1;
								return this.afterEnd_( i1 - 1, t, t0 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t0 = t1;
							t1 = pp[ ++ i1 ];

							if ( t < t1 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the right side of the index
						right = pp.length;
						break linear_scan;

					}

					//- slower code:
					//-					if ( t < t0 || t0 === undefined ) {
					if ( ! ( t >= t0 ) ) {

						// looping?

						const t1global = pp[ 1 ];

						if ( t < t1global ) {

							i1 = 2; // + 1, using the scan for the details
							t0 = t1global;

						}

						// linear reverse scan

						for ( let giveUpAt = i1 - 2; ; ) {

							if ( t0 === undefined ) {

								// before start

								this._cachedIndex = 0;
								return this.beforeStart_( 0, t, t1 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t1 = t0;
							t0 = pp[ -- i1 - 1 ];

							if ( t >= t0 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the left side of the index
						right = i1;
						i1 = 0;
						break linear_scan;

					}

					// the interval is valid

					break validate_interval;

				} // linear scan

				// binary search

				while ( i1 < right ) {

					const mid = ( i1 + right ) >>> 1;

					if ( t < pp[ mid ] ) {

						right = mid;

					} else {

						i1 = mid + 1;

					}

				}

				t1 = pp[ i1 ];
				t0 = pp[ i1 - 1 ];

				// check boundary cases, again

				if ( t0 === undefined ) {

					this._cachedIndex = 0;
					return this.beforeStart_( 0, t, t1 );

				}

				if ( t1 === undefined ) {

					i1 = pp.length;
					this._cachedIndex = i1;
					return this.afterEnd_( i1 - 1, t0, t );

				}

			} // seek

			this._cachedIndex = i1;

			this.intervalChanged_( i1, t0, t1 );

		} // validate_interval

		return this.interpolate_( i1, t0, t, t1 );

	}

	getSettings_() {

		return this.settings || this.DefaultSettings_;

	}

	copySampleValue_( index ) {

		// copies a sample value to the result buffer

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,
			offset = index * stride;

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] = values[ offset + i ];

		}

		return result;

	}

	// Template methods for derived classes:

	interpolate_( /* i1, t0, t, t1 */ ) {

		throw new Error( 'call to abstract method' );
		// implementations shall return this.resultBuffer

	}

	intervalChanged_( /* i1, t0, t1 */ ) {

		// empty

	}

}

// ALIAS DEFINITIONS

Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;
Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;

/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 */

class CubicInterpolant extends Interpolant {

	constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		super( parameterPositions, sampleValues, sampleSize, resultBuffer );

		this._weightPrev = - 0;
		this._offsetPrev = - 0;
		this._weightNext = - 0;
		this._offsetNext = - 0;

		this.DefaultSettings_ = {

			endingStart: ZeroCurvatureEnding,
			endingEnd: ZeroCurvatureEnding

		};

	}

	intervalChanged_( i1, t0, t1 ) {

		const pp = this.parameterPositions;
		let iPrev = i1 - 2,
			iNext = i1 + 1,

			tPrev = pp[ iPrev ],
			tNext = pp[ iNext ];

		if ( tPrev === undefined ) {

			switch ( this.getSettings_().endingStart ) {

				case ZeroSlopeEnding:

					// f'(t0) = 0
					iPrev = i1;
					tPrev = 2 * t0 - t1;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iPrev = pp.length - 2;
					tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(t0) = 0 a.k.a. Natural Spline
					iPrev = i1;
					tPrev = t1;

			}

		}

		if ( tNext === undefined ) {

			switch ( this.getSettings_().endingEnd ) {

				case ZeroSlopeEnding:

					// f'(tN) = 0
					iNext = i1;
					tNext = 2 * t1 - t0;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iNext = 1;
					tNext = t1 + pp[ 1 ] - pp[ 0 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(tN) = 0, a.k.a. Natural Spline
					iNext = i1 - 1;
					tNext = t0;

			}

		}

		const halfDt = ( t1 - t0 ) * 0.5,
			stride = this.valueSize;

		this._weightPrev = halfDt / ( t0 - tPrev );
		this._weightNext = halfDt / ( tNext - t1 );
		this._offsetPrev = iPrev * stride;
		this._offsetNext = iNext * stride;

	}

	interpolate_( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			o1 = i1 * stride,		o0 = o1 - stride,
			oP = this._offsetPrev, 	oN = this._offsetNext,
			wP = this._weightPrev,	wN = this._weightNext,

			p = ( t - t0 ) / ( t1 - t0 ),
			pp = p * p,
			ppp = pp * p;

		// evaluate polynomials

		const sP = - wP * ppp + 2 * wP * pp - wP * p;
		const s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;
		const s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;
		const sN = wN * ppp - wN * pp;

		// combine data linearly

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] =
					sP * values[ oP + i ] +
					s0 * values[ o0 + i ] +
					s1 * values[ o1 + i ] +
					sN * values[ oN + i ];

		}

		return result;

	}

}

class LinearInterpolant extends Interpolant {

	constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		super( parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	interpolate_( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			offset1 = i1 * stride,
			offset0 = offset1 - stride,

			weight1 = ( t - t0 ) / ( t1 - t0 ),
			weight0 = 1 - weight1;

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] =
					values[ offset0 + i ] * weight0 +
					values[ offset1 + i ] * weight1;

		}

		return result;

	}

}

/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 */

class DiscreteInterpolant extends Interpolant {

	constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		super( parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	interpolate_( i1 /*, t0, t, t1 */ ) {

		return this.copySampleValue_( i1 - 1 );

	}

}

class KeyframeTrack {

	constructor( name, times, values, interpolation ) {

		if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );
		if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );

		this.name = name;

		this.times = AnimationUtils.convertArray( times, this.TimeBufferType );
		this.values = AnimationUtils.convertArray( values, this.ValueBufferType );

		this.setInterpolation( interpolation || this.DefaultInterpolation );

	}

	// Serialization (in static context, because of constructor invocation
	// and automatic invocation of .toJSON):

	static toJSON( track ) {

		const trackType = track.constructor;

		let json;

		// derived classes can define a static toJSON method
		if ( trackType.toJSON !== this.toJSON ) {

			json = trackType.toJSON( track );

		} else {

			// by default, we assume the data can be serialized as-is
			json = {

				'name': track.name,
				'times': AnimationUtils.convertArray( track.times, Array ),
				'values': AnimationUtils.convertArray( track.values, Array )

			};

			const interpolation = track.getInterpolation();

			if ( interpolation !== track.DefaultInterpolation ) {

				json.interpolation = interpolation;

			}

		}

		json.type = track.ValueTypeName; // mandatory

		return json;

	}

	InterpolantFactoryMethodDiscrete( result ) {

		return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	InterpolantFactoryMethodLinear( result ) {

		return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	InterpolantFactoryMethodSmooth( result ) {

		return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	setInterpolation( interpolation ) {

		let factoryMethod;

		switch ( interpolation ) {

			case InterpolateDiscrete:

				factoryMethod = this.InterpolantFactoryMethodDiscrete;

				break;

			case InterpolateLinear:

				factoryMethod = this.InterpolantFactoryMethodLinear;

				break;

			case InterpolateSmooth:

				factoryMethod = this.InterpolantFactoryMethodSmooth;

				break;

		}

		if ( factoryMethod === undefined ) {

			const message = 'unsupported interpolation for ' +
				this.ValueTypeName + ' keyframe track named ' + this.name;

			if ( this.createInterpolant === undefined ) {

				// fall back to default, unless the default itself is messed up
				if ( interpolation !== this.DefaultInterpolation ) {

					this.setInterpolation( this.DefaultInterpolation );

				} else {

					throw new Error( message ); // fatal, in this case

				}

			}

			console.warn( 'THREE.KeyframeTrack:', message );
			return this;

		}

		this.createInterpolant = factoryMethod;

		return this;

	}

	getInterpolation() {

		switch ( this.createInterpolant ) {

			case this.InterpolantFactoryMethodDiscrete:

				return InterpolateDiscrete;

			case this.InterpolantFactoryMethodLinear:

				return InterpolateLinear;

			case this.InterpolantFactoryMethodSmooth:

				return InterpolateSmooth;

		}

	}

	getValueSize() {

		return this.values.length / this.times.length;

	}

	// move all keyframes either forwards or backwards in time
	shift( timeOffset ) {

		if ( timeOffset !== 0.0 ) {

			const times = this.times;

			for ( let i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] += timeOffset;

			}

		}

		return this;

	}

	// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
	scale( timeScale ) {

		if ( timeScale !== 1.0 ) {

			const times = this.times;

			for ( let i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] *= timeScale;

			}

		}

		return this;

	}

	// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
	// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
	trim( startTime, endTime ) {

		const times = this.times,
			nKeys = times.length;

		let from = 0,
			to = nKeys - 1;

		while ( from !== nKeys && times[ from ] < startTime ) {

			++ from;

		}

		while ( to !== - 1 && times[ to ] > endTime ) {

			-- to;

		}

		++ to; // inclusive -> exclusive bound

		if ( from !== 0 || to !== nKeys ) {

			// empty tracks are forbidden, so keep at least one keyframe
			if ( from >= to ) {

				to = Math.max( to, 1 );
				from = to - 1;

			}

			const stride = this.getValueSize();
			this.times = AnimationUtils.arraySlice( times, from, to );
			this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );

		}

		return this;

	}

	// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
	validate() {

		let valid = true;

		const valueSize = this.getValueSize();
		if ( valueSize - Math.floor( valueSize ) !== 0 ) {

			console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );
			valid = false;

		}

		const times = this.times,
			values = this.values,

			nKeys = times.length;

		if ( nKeys === 0 ) {

			console.error( 'THREE.KeyframeTrack: Track is empty.', this );
			valid = false;

		}

		let prevTime = null;

		for ( let i = 0; i !== nKeys; i ++ ) {

			const currTime = times[ i ];

			if ( typeof currTime === 'number' && isNaN( currTime ) ) {

				console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );
				valid = false;
				break;

			}

			if ( prevTime !== null && prevTime > currTime ) {

				console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );
				valid = false;
				break;

			}

			prevTime = currTime;

		}

		if ( values !== undefined ) {

			if ( AnimationUtils.isTypedArray( values ) ) {

				for ( let i = 0, n = values.length; i !== n; ++ i ) {

					const value = values[ i ];

					if ( isNaN( value ) ) {

						console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );
						valid = false;
						break;

					}

				}

			}

		}

		return valid;

	}

	// removes equivalent sequential keys as common in morph target sequences
	// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
	optimize() {

		// times or values may be shared with other tracks, so overwriting is unsafe
		const times = AnimationUtils.arraySlice( this.times ),
			values = AnimationUtils.arraySlice( this.values ),
			stride = this.getValueSize(),

			smoothInterpolation = this.getInterpolation() === InterpolateSmooth,

			lastIndex = times.length - 1;

		let writeIndex = 1;

		for ( let i = 1; i < lastIndex; ++ i ) {

			let keep = false;

			const time = times[ i ];
			const timeNext = times[ i + 1 ];

			// remove adjacent keyframes scheduled at the same time

			if ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {

				if ( ! smoothInterpolation ) {

					// remove unnecessary keyframes same as their neighbors

					const offset = i * stride,
						offsetP = offset - stride,
						offsetN = offset + stride;

					for ( let j = 0; j !== stride; ++ j ) {

						const value = values[ offset + j ];

						if ( value !== values[ offsetP + j ] ||
							value !== values[ offsetN + j ] ) {

							keep = true;
							break;

						}

					}

				} else {

					keep = true;

				}

			}

			// in-place compaction

			if ( keep ) {

				if ( i !== writeIndex ) {

					times[ writeIndex ] = times[ i ];

					const readOffset = i * stride,
						writeOffset = writeIndex * stride;

					for ( let j = 0; j !== stride; ++ j ) {

						values[ writeOffset + j ] = values[ readOffset + j ];

					}

				}

				++ writeIndex;

			}

		}

		// flush last keyframe (compaction looks ahead)

		if ( lastIndex > 0 ) {

			times[ writeIndex ] = times[ lastIndex ];

			for ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {

				values[ writeOffset + j ] = values[ readOffset + j ];

			}

			++ writeIndex;

		}

		if ( writeIndex !== times.length ) {

			this.times = AnimationUtils.arraySlice( times, 0, writeIndex );
			this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );

		} else {

			this.times = times;
			this.values = values;

		}

		return this;

	}

	clone() {

		const times = AnimationUtils.arraySlice( this.times, 0 );
		const values = AnimationUtils.arraySlice( this.values, 0 );

		const TypedKeyframeTrack = this.constructor;
		const track = new TypedKeyframeTrack( this.name, times, values );

		// Interpolant argument to constructor is not saved, so copy the factory method directly.
		track.createInterpolant = this.createInterpolant;

		return track;

	}

}

KeyframeTrack.prototype.TimeBufferType = Float32Array;
KeyframeTrack.prototype.ValueBufferType = Float32Array;
KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;

/**
 * A Track of Boolean keyframe values.
 */
class BooleanKeyframeTrack extends KeyframeTrack {}

BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';
BooleanKeyframeTrack.prototype.ValueBufferType = Array;
BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;
BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;
BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track of keyframe values that represent color.
 */
class ColorKeyframeTrack extends KeyframeTrack {}

ColorKeyframeTrack.prototype.ValueTypeName = 'color';

/**
 * A Track of numeric keyframe values.
 */
class NumberKeyframeTrack extends KeyframeTrack {}

NumberKeyframeTrack.prototype.ValueTypeName = 'number';

/**
 * Spherical linear unit quaternion interpolant.
 */

class QuaternionLinearInterpolant extends Interpolant {

	constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		super( parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	interpolate_( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			alpha = ( t - t0 ) / ( t1 - t0 );

		let offset = i1 * stride;

		for ( let end = offset + stride; offset !== end; offset += 4 ) {

			Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );

		}

		return result;

	}

}

/**
 * A Track of quaternion keyframe values.
 */
class QuaternionKeyframeTrack extends KeyframeTrack {

	InterpolantFactoryMethodLinear( result ) {

		return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );

	}

}

QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';
// ValueBufferType is inherited
QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;
QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track that interpolates Strings
 */
class StringKeyframeTrack extends KeyframeTrack {}

StringKeyframeTrack.prototype.ValueTypeName = 'string';
StringKeyframeTrack.prototype.ValueBufferType = Array;
StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;
StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;
StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track of vectored keyframe values.
 */
class VectorKeyframeTrack extends KeyframeTrack {}

VectorKeyframeTrack.prototype.ValueTypeName = 'vector';

class AnimationClip {

	constructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {

		this.name = name;
		this.tracks = tracks;
		this.duration = duration;
		this.blendMode = blendMode;

		this.uuid = generateUUID();

		// this means it should figure out its duration by scanning the tracks
		if ( this.duration < 0 ) {

			this.resetDuration();

		}

	}


	static parse( json ) {

		const tracks = [],
			jsonTracks = json.tracks,
			frameTime = 1.0 / ( json.fps || 1.0 );

		for ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {

			tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );

		}

		const clip = new this( json.name, json.duration, tracks, json.blendMode );
		clip.uuid = json.uuid;

		return clip;

	}

	static toJSON( clip ) {

		const tracks = [],
			clipTracks = clip.tracks;

		const json = {

			'name': clip.name,
			'duration': clip.duration,
			'tracks': tracks,
			'uuid': clip.uuid,
			'blendMode': clip.blendMode

		};

		for ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {

			tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );

		}

		return json;

	}

	static CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {

		const numMorphTargets = morphTargetSequence.length;
		const tracks = [];

		for ( let i = 0; i < numMorphTargets; i ++ ) {

			let times = [];
			let values = [];

			times.push(
				( i + numMorphTargets - 1 ) % numMorphTargets,
				i,
				( i + 1 ) % numMorphTargets );

			values.push( 0, 1, 0 );

			const order = AnimationUtils.getKeyframeOrder( times );
			times = AnimationUtils.sortedArray( times, 1, order );
			values = AnimationUtils.sortedArray( values, 1, order );

			// if there is a key at the first frame, duplicate it as the
			// last frame as well for perfect loop.
			if ( ! noLoop && times[ 0 ] === 0 ) {

				times.push( numMorphTargets );
				values.push( values[ 0 ] );

			}

			tracks.push(
				new NumberKeyframeTrack(
					'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',
					times, values
				).scale( 1.0 / fps ) );

		}

		return new this( name, - 1, tracks );

	}

	static findByName( objectOrClipArray, name ) {

		let clipArray = objectOrClipArray;

		if ( ! Array.isArray( objectOrClipArray ) ) {

			const o = objectOrClipArray;
			clipArray = o.geometry && o.geometry.animations || o.animations;

		}

		for ( let i = 0; i < clipArray.length; i ++ ) {

			if ( clipArray[ i ].name === name ) {

				return clipArray[ i ];

			}

		}

		return null;

	}

	static CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {

		const animationToMorphTargets = {};

		// tested with https://regex101.com/ on trick sequences
		// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
		const pattern = /^([\w-]*?)([\d]+)$/;

		// sort morph target names into animation groups based
		// patterns like Walk_001, Walk_002, Run_001, Run_002
		for ( let i = 0, il = morphTargets.length; i < il; i ++ ) {

			const morphTarget = morphTargets[ i ];
			const parts = morphTarget.name.match( pattern );

			if ( parts && parts.length > 1 ) {

				const name = parts[ 1 ];

				let animationMorphTargets = animationToMorphTargets[ name ];

				if ( ! animationMorphTargets ) {

					animationToMorphTargets[ name ] = animationMorphTargets = [];

				}

				animationMorphTargets.push( morphTarget );

			}

		}

		const clips = [];

		for ( const name in animationToMorphTargets ) {

			clips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );

		}

		return clips;

	}

	// parse the animation.hierarchy format
	static parseAnimation( animation, bones ) {

		if ( ! animation ) {

			console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );
			return null;

		}

		const addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {

			// only return track if there are actually keys.
			if ( animationKeys.length !== 0 ) {

				const times = [];
				const values = [];

				AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );

				// empty keys are filtered out, so check again
				if ( times.length !== 0 ) {

					destTracks.push( new trackType( trackName, times, values ) );

				}

			}

		};

		const tracks = [];

		const clipName = animation.name || 'default';
		const fps = animation.fps || 30;
		const blendMode = animation.blendMode;

		// automatic length determination in AnimationClip.
		let duration = animation.length || - 1;

		const hierarchyTracks = animation.hierarchy || [];

		for ( let h = 0; h < hierarchyTracks.length; h ++ ) {

			const animationKeys = hierarchyTracks[ h ].keys;

			// skip empty tracks
			if ( ! animationKeys || animationKeys.length === 0 ) continue;

			// process morph targets
			if ( animationKeys[ 0 ].morphTargets ) {

				// figure out all morph targets used in this track
				const morphTargetNames = {};

				let k;

				for ( k = 0; k < animationKeys.length; k ++ ) {

					if ( animationKeys[ k ].morphTargets ) {

						for ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {

							morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;

						}

					}

				}

				// create a track for each morph target with all zero
				// morphTargetInfluences except for the keys in which
				// the morphTarget is named.
				for ( const morphTargetName in morphTargetNames ) {

					const times = [];
					const values = [];

					for ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {

						const animationKey = animationKeys[ k ];

						times.push( animationKey.time );
						values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );

					}

					tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );

				}

				duration = morphTargetNames.length * fps;

			} else {

				// ...assume skeletal animation

				const boneName = '.bones[' + bones[ h ].name + ']';

				addNonemptyTrack(
					VectorKeyframeTrack, boneName + '.position',
					animationKeys, 'pos', tracks );

				addNonemptyTrack(
					QuaternionKeyframeTrack, boneName + '.quaternion',
					animationKeys, 'rot', tracks );

				addNonemptyTrack(
					VectorKeyframeTrack, boneName + '.scale',
					animationKeys, 'scl', tracks );

			}

		}

		if ( tracks.length === 0 ) {

			return null;

		}

		const clip = new this( clipName, duration, tracks, blendMode );

		return clip;

	}

	resetDuration() {

		const tracks = this.tracks;
		let duration = 0;

		for ( let i = 0, n = tracks.length; i !== n; ++ i ) {

			const track = this.tracks[ i ];

			duration = Math.max( duration, track.times[ track.times.length - 1 ] );

		}

		this.duration = duration;

		return this;

	}

	trim() {

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].trim( 0, this.duration );

		}

		return this;

	}

	validate() {

		let valid = true;

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			valid = valid && this.tracks[ i ].validate();

		}

		return valid;

	}

	optimize() {

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].optimize();

		}

		return this;

	}

	clone() {

		const tracks = [];

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			tracks.push( this.tracks[ i ].clone() );

		}

		return new this.constructor( this.name, this.duration, tracks, this.blendMode );

	}

	toJSON() {

		return this.constructor.toJSON( this );

	}

}

function getTrackTypeForValueTypeName( typeName ) {

	switch ( typeName.toLowerCase() ) {

		case 'scalar':
		case 'double':
		case 'float':
		case 'number':
		case 'integer':

			return NumberKeyframeTrack;

		case 'vector':
		case 'vector2':
		case 'vector3':
		case 'vector4':

			return VectorKeyframeTrack;

		case 'color':

			return ColorKeyframeTrack;

		case 'quaternion':

			return QuaternionKeyframeTrack;

		case 'bool':
		case 'boolean':

			return BooleanKeyframeTrack;

		case 'string':

			return StringKeyframeTrack;

	}

	throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );

}

function parseKeyframeTrack( json ) {

	if ( json.type === undefined ) {

		throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );

	}

	const trackType = getTrackTypeForValueTypeName( json.type );

	if ( json.times === undefined ) {

		const times = [], values = [];

		AnimationUtils.flattenJSON( json.keys, times, values, 'value' );

		json.times = times;
		json.values = values;

	}

	// derived classes can define a static parse method
	if ( trackType.parse !== undefined ) {

		return trackType.parse( json );

	} else {

		// by default, we assume a constructor compatible with the base
		return new trackType( json.name, json.times, json.values, json.interpolation );

	}

}

const Cache = {

	enabled: false,

	files: {},

	add: function ( key, file ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Adding key:', key );

		this.files[ key ] = file;

	},

	get: function ( key ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Checking key:', key );

		return this.files[ key ];

	},

	remove: function ( key ) {

		delete this.files[ key ];

	},

	clear: function () {

		this.files = {};

	}

};

class LoadingManager {

	constructor( onLoad, onProgress, onError ) {

		const scope = this;

		let isLoading = false;
		let itemsLoaded = 0;
		let itemsTotal = 0;
		let urlModifier = undefined;
		const handlers = [];

		// Refer to #5689 for the reason why we don't set .onStart
		// in the constructor

		this.onStart = undefined;
		this.onLoad = onLoad;
		this.onProgress = onProgress;
		this.onError = onError;

		this.itemStart = function ( url ) {

			itemsTotal ++;

			if ( isLoading === false ) {

				if ( scope.onStart !== undefined ) {

					scope.onStart( url, itemsLoaded, itemsTotal );

				}

			}

			isLoading = true;

		};

		this.itemEnd = function ( url ) {

			itemsLoaded ++;

			if ( scope.onProgress !== undefined ) {

				scope.onProgress( url, itemsLoaded, itemsTotal );

			}

			if ( itemsLoaded === itemsTotal ) {

				isLoading = false;

				if ( scope.onLoad !== undefined ) {

					scope.onLoad();

				}

			}

		};

		this.itemError = function ( url ) {

			if ( scope.onError !== undefined ) {

				scope.onError( url );

			}

		};

		this.resolveURL = function ( url ) {

			if ( urlModifier ) {

				return urlModifier( url );

			}

			return url;

		};

		this.setURLModifier = function ( transform ) {

			urlModifier = transform;

			return this;

		};

		this.addHandler = function ( regex, loader ) {

			handlers.push( regex, loader );

			return this;

		};

		this.removeHandler = function ( regex ) {

			const index = handlers.indexOf( regex );

			if ( index !== - 1 ) {

				handlers.splice( index, 2 );

			}

			return this;

		};

		this.getHandler = function ( file ) {

			for ( let i = 0, l = handlers.length; i < l; i += 2 ) {

				const regex = handlers[ i ];
				const loader = handlers[ i + 1 ];

				if ( regex.global ) regex.lastIndex = 0; // see #17920

				if ( regex.test( file ) ) {

					return loader;

				}

			}

			return null;

		};

	}

}

const DefaultLoadingManager = new LoadingManager();

class Loader {

	constructor( manager ) {

		this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

		this.crossOrigin = 'anonymous';
		this.withCredentials = false;
		this.path = '';
		this.resourcePath = '';
		this.requestHeader = {};

	}

	load( /* url, onLoad, onProgress, onError */ ) {}

	loadAsync( url, onProgress ) {

		const scope = this;

		return new Promise( function ( resolve, reject ) {

			scope.load( url, resolve, onProgress, reject );

		} );

	}

	parse( /* data */ ) {}

	setCrossOrigin( crossOrigin ) {

		this.crossOrigin = crossOrigin;
		return this;

	}

	setWithCredentials( value ) {

		this.withCredentials = value;
		return this;

	}

	setPath( path ) {

		this.path = path;
		return this;

	}

	setResourcePath( resourcePath ) {

		this.resourcePath = resourcePath;
		return this;

	}

	setRequestHeader( requestHeader ) {

		this.requestHeader = requestHeader;
		return this;

	}

}

const loading = {};

class FileLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			this.manager.itemStart( url );

			setTimeout( () => {

				if ( onLoad ) onLoad( cached );

				this.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		// Check if request is duplicate

		if ( loading[ url ] !== undefined ) {

			loading[ url ].push( {

				onLoad: onLoad,
				onProgress: onProgress,
				onError: onError

			} );

			return;

		}

		// Initialise array for duplicate requests
		loading[ url ] = [];

		loading[ url ].push( {
			onLoad: onLoad,
			onProgress: onProgress,
			onError: onError,
		} );

		// create request
		const req = new Request( url, {
			headers: new Headers( this.requestHeader ),
			credentials: this.withCredentials ? 'include' : 'same-origin',
			// An abort controller could be added within a future PR
		} );

		// record states ( avoid data race )
		const mimeType = this.mimeType;
		const responseType = this.responseType;

		// start the fetch
		fetch( req )
			.then( response => {

				if ( response.status === 200 || response.status === 0 ) {

					// Some browsers return HTTP Status 0 when using non-http protocol
					// e.g. 'file://' or 'data://'. Handle as success.

					if ( response.status === 0 ) {

						console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );

					}

					// Workaround: Checking if response.body === undefined for Alipay browser #23548

					if ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {

						return response;

					}

					const callbacks = loading[ url ];
					const reader = response.body.getReader();
					const contentLength = response.headers.get( 'Content-Length' );
					const total = contentLength ? parseInt( contentLength ) : 0;
					const lengthComputable = total !== 0;
					let loaded = 0;

					// periodically read data into the new stream tracking while download progress
					const stream = new ReadableStream( {
						start( controller ) {

							readData();

							function readData() {

								reader.read().then( ( { done, value } ) => {

									if ( done ) {

										controller.close();

									} else {

										loaded += value.byteLength;

										const event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );
										for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

											const callback = callbacks[ i ];
											if ( callback.onProgress ) callback.onProgress( event );

										}

										controller.enqueue( value );
										readData();

									}

								} );

							}

						}

					} );

					return new Response( stream );

				} else {

					throw Error( `fetch for "${response.url}" responded with ${response.status}: ${response.statusText}` );

				}

			} )
			.then( response => {

				switch ( responseType ) {

					case 'arraybuffer':

						return response.arrayBuffer();

					case 'blob':

						return response.blob();

					case 'document':

						return response.text()
							.then( text => {

								const parser = new DOMParser();
								return parser.parseFromString( text, mimeType );

							} );

					case 'json':

						return response.json();

					default:

						if ( mimeType === undefined ) {

							return response.text();

						} else {

							// sniff encoding
							const re = /charset="?([^;"\s]*)"?/i;
							const exec = re.exec( mimeType );
							const label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;
							const decoder = new TextDecoder( label );
							return response.arrayBuffer().then( ab => decoder.decode( ab ) );

						}

				}

			} )
			.then( data => {

				// Add to cache only on HTTP success, so that we do not cache
				// error response bodies as proper responses to requests.
				Cache.add( url, data );

				const callbacks = loading[ url ];
				delete loading[ url ];

				for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

					const callback = callbacks[ i ];
					if ( callback.onLoad ) callback.onLoad( data );

				}

			} )
			.catch( err => {

				// Abort errors and other errors are handled the same

				const callbacks = loading[ url ];

				if ( callbacks === undefined ) {

					// When onLoad was called and url was deleted in `loading`
					this.manager.itemError( url );
					throw err;

				}

				delete loading[ url ];

				for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

					const callback = callbacks[ i ];
					if ( callback.onError ) callback.onError( err );

				}

				this.manager.itemError( url );

			} )
			.finally( () => {

				this.manager.itemEnd( url );

			} );

		this.manager.itemStart( url );

	}

	setResponseType( value ) {

		this.responseType = value;
		return this;

	}

	setMimeType( value ) {

		this.mimeType = value;
		return this;

	}

}

class AnimationLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const animations = [];

		for ( let i = 0; i < json.length; i ++ ) {

			const clip = AnimationClip.parse( json[ i ] );

			animations.push( clip );

		}

		return animations;

	}

}

/**
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */

class CompressedTextureLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const images = [];

		const texture = new CompressedTexture();

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setResponseType( 'arraybuffer' );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( scope.withCredentials );

		let loaded = 0;

		function loadTexture( i ) {

			loader.load( url[ i ], function ( buffer ) {

				const texDatas = scope.parse( buffer, true );

				images[ i ] = {
					width: texDatas.width,
					height: texDatas.height,
					format: texDatas.format,
					mipmaps: texDatas.mipmaps
				};

				loaded += 1;

				if ( loaded === 6 ) {

					if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;

					texture.image = images;
					texture.format = texDatas.format;
					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, onProgress, onError );

		}

		if ( Array.isArray( url ) ) {

			for ( let i = 0, il = url.length; i < il; ++ i ) {

				loadTexture( i );

			}

		} else {

			// compressed cubemap texture stored in a single DDS file

			loader.load( url, function ( buffer ) {

				const texDatas = scope.parse( buffer, true );

				if ( texDatas.isCubemap ) {

					const faces = texDatas.mipmaps.length / texDatas.mipmapCount;

					for ( let f = 0; f < faces; f ++ ) {

						images[ f ] = { mipmaps: [] };

						for ( let i = 0; i < texDatas.mipmapCount; i ++ ) {

							images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );
							images[ f ].format = texDatas.format;
							images[ f ].width = texDatas.width;
							images[ f ].height = texDatas.height;

						}

					}

					texture.image = images;

				} else {

					texture.image.width = texDatas.width;
					texture.image.height = texDatas.height;
					texture.mipmaps = texDatas.mipmaps;

				}

				if ( texDatas.mipmapCount === 1 ) {

					texture.minFilter = LinearFilter;

				}

				texture.format = texDatas.format;
				texture.needsUpdate = true;

				if ( onLoad ) onLoad( texture );

			}, onProgress, onError );

		}

		return texture;

	}

}

class ImageLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const scope = this;

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		const image = createElementNS( 'img' );

		function onImageLoad() {

			removeEventListeners();

			Cache.add( url, this );

			if ( onLoad ) onLoad( this );

			scope.manager.itemEnd( url );

		}

		function onImageError( event ) {

			removeEventListeners();

			if ( onError ) onError( event );

			scope.manager.itemError( url );
			scope.manager.itemEnd( url );

		}

		function removeEventListeners() {

			image.removeEventListener( 'load', onImageLoad, false );
			image.removeEventListener( 'error', onImageError, false );

		}

		image.addEventListener( 'load', onImageLoad, false );
		image.addEventListener( 'error', onImageError, false );

		if ( url.slice( 0, 5 ) !== 'data:' ) {

			if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;

		}

		scope.manager.itemStart( url );

		image.src = url;

		return image;

	}

}

class CubeTextureLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( urls, onLoad, onProgress, onError ) {

		const texture = new CubeTexture();

		const loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		let loaded = 0;

		function loadTexture( i ) {

			loader.load( urls[ i ], function ( image ) {

				texture.images[ i ] = image;

				loaded ++;

				if ( loaded === 6 ) {

					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, undefined, onError );

		}

		for ( let i = 0; i < urls.length; ++ i ) {

			loadTexture( i );

		}

		return texture;

	}

}

/**
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */

class DataTextureLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const texture = new DataTexture();

		const loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );
		loader.setRequestHeader( this.requestHeader );
		loader.setPath( this.path );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( buffer ) {

			const texData = scope.parse( buffer );

			if ( ! texData ) return;

			if ( texData.image !== undefined ) {

				texture.image = texData.image;

			} else if ( texData.data !== undefined ) {

				texture.image.width = texData.width;
				texture.image.height = texData.height;
				texture.image.data = texData.data;

			}

			texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;
			texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;

			texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;
			texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;

			texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;

			if ( texData.encoding !== undefined ) {

				texture.encoding = texData.encoding;

			}

			if ( texData.flipY !== undefined ) {

				texture.flipY = texData.flipY;

			}

			if ( texData.format !== undefined ) {

				texture.format = texData.format;

			}

			if ( texData.type !== undefined ) {

				texture.type = texData.type;

			}

			if ( texData.mipmaps !== undefined ) {

				texture.mipmaps = texData.mipmaps;
				texture.minFilter = LinearMipmapLinearFilter; // presumably...

			}

			if ( texData.mipmapCount === 1 ) {

				texture.minFilter = LinearFilter;

			}

			if ( texData.generateMipmaps !== undefined ) {

				texture.generateMipmaps = texData.generateMipmaps;

			}

			texture.needsUpdate = true;

			if ( onLoad ) onLoad( texture, texData );

		}, onProgress, onError );


		return texture;

	}

}

class TextureLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const texture = new Texture();

		const loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		loader.load( url, function ( image ) {

			texture.image = image;
			texture.needsUpdate = true;

			if ( onLoad !== undefined ) {

				onLoad( texture );

			}

		}, onProgress, onError );

		return texture;

	}

}

class Light extends Object3D {

	constructor( color, intensity = 1 ) {

		super();

		this.type = 'Light';

		this.color = new Color( color );
		this.intensity = intensity;

	}

	dispose() {

		// Empty here in base class; some subclasses override.

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );
		this.intensity = source.intensity;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.color = this.color.getHex();
		data.object.intensity = this.intensity;

		if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();

		if ( this.distance !== undefined ) data.object.distance = this.distance;
		if ( this.angle !== undefined ) data.object.angle = this.angle;
		if ( this.decay !== undefined ) data.object.decay = this.decay;
		if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;

		if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();

		return data;

	}

}

Light.prototype.isLight = true;

class HemisphereLight extends Light {

	constructor( skyColor, groundColor, intensity ) {

		super( skyColor, intensity );

		this.type = 'HemisphereLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.groundColor = new Color( groundColor );

	}

	copy( source ) {

		Light.prototype.copy.call( this, source );

		this.groundColor.copy( source.groundColor );

		return this;

	}

}

HemisphereLight.prototype.isHemisphereLight = true;

const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();
const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();
const _lookTarget$1 = /*@__PURE__*/ new Vector3();

class LightShadow {

	constructor( camera ) {

		this.camera = camera;

		this.bias = 0;
		this.normalBias = 0;
		this.radius = 1;
		this.blurSamples = 8;

		this.mapSize = new Vector2( 512, 512 );

		this.map = null;
		this.mapPass = null;
		this.matrix = new Matrix4();

		this.autoUpdate = true;
		this.needsUpdate = false;

		this._frustum = new Frustum();
		this._frameExtents = new Vector2( 1, 1 );

		this._viewportCount = 1;

		this._viewports = [

			new Vector4( 0, 0, 1, 1 )

		];

	}

	getViewportCount() {

		return this._viewportCount;

	}

	getFrustum() {

		return this._frustum;

	}

	updateMatrices( light ) {

		const shadowCamera = this.camera;
		const shadowMatrix = this.matrix;

		_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );
		shadowCamera.position.copy( _lightPositionWorld$1 );

		_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );
		shadowCamera.lookAt( _lookTarget$1 );
		shadowCamera.updateMatrixWorld();

		_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
		this._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );

		shadowMatrix.set(
			0.5, 0.0, 0.0, 0.5,
			0.0, 0.5, 0.0, 0.5,
			0.0, 0.0, 0.5, 0.5,
			0.0, 0.0, 0.0, 1.0
		);

		shadowMatrix.multiply( shadowCamera.projectionMatrix );
		shadowMatrix.multiply( shadowCamera.matrixWorldInverse );

	}

	getViewport( viewportIndex ) {

		return this._viewports[ viewportIndex ];

	}

	getFrameExtents() {

		return this._frameExtents;

	}

	dispose() {

		if ( this.map ) {

			this.map.dispose();

		}

		if ( this.mapPass ) {

			this.mapPass.dispose();

		}

	}

	copy( source ) {

		this.camera = source.camera.clone();

		this.bias = source.bias;
		this.radius = source.radius;

		this.mapSize.copy( source.mapSize );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	toJSON() {

		const object = {};

		if ( this.bias !== 0 ) object.bias = this.bias;
		if ( this.normalBias !== 0 ) object.normalBias = this.normalBias;
		if ( this.radius !== 1 ) object.radius = this.radius;
		if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();

		object.camera = this.camera.toJSON( false ).object;
		delete object.camera.matrix;

		return object;

	}

}

class SpotLightShadow extends LightShadow {

	constructor() {

		super( new PerspectiveCamera( 50, 1, 0.5, 500 ) );

		this.focus = 1;

	}

	updateMatrices( light ) {

		const camera = this.camera;

		const fov = RAD2DEG * 2 * light.angle * this.focus;
		const aspect = this.mapSize.width / this.mapSize.height;
		const far = light.distance || camera.far;

		if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {

			camera.fov = fov;
			camera.aspect = aspect;
			camera.far = far;
			camera.updateProjectionMatrix();

		}

		super.updateMatrices( light );

	}

	copy( source ) {

		super.copy( source );

		this.focus = source.focus;

		return this;

	}

}

SpotLightShadow.prototype.isSpotLightShadow = true;

class SpotLight extends Light {

	constructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {

		super( color, intensity );

		this.type = 'SpotLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		this.distance = distance;
		this.angle = angle;
		this.penumbra = penumbra;
		this.decay = decay; // for physically correct lights, should be 2.

		this.shadow = new SpotLightShadow();

	}

	get power() {

		// compute the light's luminous power (in lumens) from its intensity (in candela)
		// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)
		return this.intensity * Math.PI;

	}

	set power( power ) {

		// set the light's intensity (in candela) from the desired luminous power (in lumens)
		this.intensity = power / Math.PI;

	}

	dispose() {

		this.shadow.dispose();

	}

	copy( source ) {

		super.copy( source );

		this.distance = source.distance;
		this.angle = source.angle;
		this.penumbra = source.penumbra;
		this.decay = source.decay;

		this.target = source.target.clone();

		this.shadow = source.shadow.clone();

		return this;

	}

}

SpotLight.prototype.isSpotLight = true;

const _projScreenMatrix = /*@__PURE__*/ new Matrix4();
const _lightPositionWorld = /*@__PURE__*/ new Vector3();
const _lookTarget = /*@__PURE__*/ new Vector3();

class PointLightShadow extends LightShadow {

	constructor() {

		super( new PerspectiveCamera( 90, 1, 0.5, 500 ) );

		this._frameExtents = new Vector2( 4, 2 );

		this._viewportCount = 6;

		this._viewports = [
			// These viewports map a cube-map onto a 2D texture with the
			// following orientation:
			//
			//  xzXZ
			//   y Y
			//
			// X - Positive x direction
			// x - Negative x direction
			// Y - Positive y direction
			// y - Negative y direction
			// Z - Positive z direction
			// z - Negative z direction

			// positive X
			new Vector4( 2, 1, 1, 1 ),
			// negative X
			new Vector4( 0, 1, 1, 1 ),
			// positive Z
			new Vector4( 3, 1, 1, 1 ),
			// negative Z
			new Vector4( 1, 1, 1, 1 ),
			// positive Y
			new Vector4( 3, 0, 1, 1 ),
			// negative Y
			new Vector4( 1, 0, 1, 1 )
		];

		this._cubeDirections = [
			new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),
			new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )
		];

		this._cubeUps = [
			new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),
			new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )
		];

	}

	updateMatrices( light, viewportIndex = 0 ) {

		const camera = this.camera;
		const shadowMatrix = this.matrix;

		const far = light.distance || camera.far;

		if ( far !== camera.far ) {

			camera.far = far;
			camera.updateProjectionMatrix();

		}

		_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
		camera.position.copy( _lightPositionWorld );

		_lookTarget.copy( camera.position );
		_lookTarget.add( this._cubeDirections[ viewportIndex ] );
		camera.up.copy( this._cubeUps[ viewportIndex ] );
		camera.lookAt( _lookTarget );
		camera.updateMatrixWorld();

		shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		this._frustum.setFromProjectionMatrix( _projScreenMatrix );

	}

}

PointLightShadow.prototype.isPointLightShadow = true;

class PointLight extends Light {

	constructor( color, intensity, distance = 0, decay = 1 ) {

		super( color, intensity );

		this.type = 'PointLight';

		this.distance = distance;
		this.decay = decay; // for physically correct lights, should be 2.

		this.shadow = new PointLightShadow();

	}

	get power() {

		// compute the light's luminous power (in lumens) from its intensity (in candela)
		// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)
		return this.intensity * 4 * Math.PI;

	}

	set power( power ) {

		// set the light's intensity (in candela) from the desired luminous power (in lumens)
		this.intensity = power / ( 4 * Math.PI );

	}

	dispose() {

		this.shadow.dispose();

	}

	copy( source ) {

		super.copy( source );

		this.distance = source.distance;
		this.decay = source.decay;

		this.shadow = source.shadow.clone();

		return this;

	}

}

PointLight.prototype.isPointLight = true;

class DirectionalLightShadow extends LightShadow {

	constructor() {

		super( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );

	}

}

DirectionalLightShadow.prototype.isDirectionalLightShadow = true;

class DirectionalLight extends Light {

	constructor( color, intensity ) {

		super( color, intensity );

		this.type = 'DirectionalLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		this.shadow = new DirectionalLightShadow();

	}

	dispose() {

		this.shadow.dispose();

	}

	copy( source ) {

		super.copy( source );

		this.target = source.target.clone();
		this.shadow = source.shadow.clone();

		return this;

	}

}

DirectionalLight.prototype.isDirectionalLight = true;

class AmbientLight extends Light {

	constructor( color, intensity ) {

		super( color, intensity );

		this.type = 'AmbientLight';

	}

}

AmbientLight.prototype.isAmbientLight = true;

class RectAreaLight extends Light {

	constructor( color, intensity, width = 10, height = 10 ) {

		super( color, intensity );

		this.type = 'RectAreaLight';

		this.width = width;
		this.height = height;

	}

	get power() {

		// compute the light's luminous power (in lumens) from its intensity (in nits)
		return this.intensity * this.width * this.height * Math.PI;

	}

	set power( power ) {

		// set the light's intensity (in nits) from the desired luminous power (in lumens)
		this.intensity = power / ( this.width * this.height * Math.PI );

	}

	copy( source ) {

		super.copy( source );

		this.width = source.width;
		this.height = source.height;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.width = this.width;
		data.object.height = this.height;

		return data;

	}

}

RectAreaLight.prototype.isRectAreaLight = true;

/**
 * Primary reference:
 *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
 *
 * Secondary reference:
 *   https://www.ppsloan.org/publications/StupidSH36.pdf
 */

// 3-band SH defined by 9 coefficients

class SphericalHarmonics3 {

	constructor() {

		this.coefficients = [];

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients.push( new Vector3() );

		}

	}

	set( coefficients ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].copy( coefficients[ i ] );

		}

		return this;

	}

	zero() {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].set( 0, 0, 0 );

		}

		return this;

	}

	// get the radiance in the direction of the normal
	// target is a Vector3
	getAt( normal, target ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		const coeff = this.coefficients;

		// band 0
		target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );

		// band 1
		target.addScaledVector( coeff[ 1 ], 0.488603 * y );
		target.addScaledVector( coeff[ 2 ], 0.488603 * z );
		target.addScaledVector( coeff[ 3 ], 0.488603 * x );

		// band 2
		target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );
		target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );
		target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );
		target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );
		target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );

		return target;

	}

	// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
	// target is a Vector3
	// https://graphics.stanford.edu/papers/envmap/envmap.pdf
	getIrradianceAt( normal, target ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		const coeff = this.coefficients;

		// band 0
		target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095

		// band 1
		target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603
		target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );
		target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );

		// band 2
		target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548
		target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );
		target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3
		target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );
		target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274

		return target;

	}

	add( sh ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].add( sh.coefficients[ i ] );

		}

		return this;

	}

	addScaledSH( sh, s ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );

		}

		return this;

	}

	scale( s ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].multiplyScalar( s );

		}

		return this;

	}

	lerp( sh, alpha ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );

		}

		return this;

	}

	equals( sh ) {

		for ( let i = 0; i < 9; i ++ ) {

			if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {

				return false;

			}

		}

		return true;

	}

	copy( sh ) {

		return this.set( sh.coefficients );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	fromArray( array, offset = 0 ) {

		const coefficients = this.coefficients;

		for ( let i = 0; i < 9; i ++ ) {

			coefficients[ i ].fromArray( array, offset + ( i * 3 ) );

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const coefficients = this.coefficients;

		for ( let i = 0; i < 9; i ++ ) {

			coefficients[ i ].toArray( array, offset + ( i * 3 ) );

		}

		return array;

	}

	// evaluate the basis functions
	// shBasis is an Array[ 9 ]
	static getBasisAt( normal, shBasis ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		// band 0
		shBasis[ 0 ] = 0.282095;

		// band 1
		shBasis[ 1 ] = 0.488603 * y;
		shBasis[ 2 ] = 0.488603 * z;
		shBasis[ 3 ] = 0.488603 * x;

		// band 2
		shBasis[ 4 ] = 1.092548 * x * y;
		shBasis[ 5 ] = 1.092548 * y * z;
		shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );
		shBasis[ 7 ] = 1.092548 * x * z;
		shBasis[ 8 ] = 0.546274 * ( x * x - y * y );

	}

}

SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;

class LightProbe extends Light {

	constructor( sh = new SphericalHarmonics3(), intensity = 1 ) {

		super( undefined, intensity );

		this.sh = sh;

	}

	copy( source ) {

		super.copy( source );

		this.sh.copy( source.sh );

		return this;

	}

	fromJSON( json ) {

		this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();
		this.sh.fromArray( json.sh );

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.sh = this.sh.toArray();

		return data;

	}

}

LightProbe.prototype.isLightProbe = true;

class MaterialLoader extends Loader {

	constructor( manager ) {

		super( manager );
		this.textures = {};

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( scope.manager );
		loader.setPath( scope.path );
		loader.setRequestHeader( scope.requestHeader );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const textures = this.textures;

		function getTexture( name ) {

			if ( textures[ name ] === undefined ) {

				console.warn( 'THREE.MaterialLoader: Undefined texture', name );

			}

			return textures[ name ];

		}

		const material = Material.fromType( json.type );

		if ( json.uuid !== undefined ) material.uuid = json.uuid;
		if ( json.name !== undefined ) material.name = json.name;
		if ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );
		if ( json.roughness !== undefined ) material.roughness = json.roughness;
		if ( json.metalness !== undefined ) material.metalness = json.metalness;
		if ( json.sheen !== undefined ) material.sheen = json.sheen;
		if ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );
		if ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;
		if ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );
		if ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );
		if ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;
		if ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );
		if ( json.shininess !== undefined ) material.shininess = json.shininess;
		if ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;
		if ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;
		if ( json.transmission !== undefined ) material.transmission = json.transmission;
		if ( json.thickness !== undefined ) material.thickness = json.thickness;
		if ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;
		if ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );
		if ( json.fog !== undefined ) material.fog = json.fog;
		if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;
		if ( json.blending !== undefined ) material.blending = json.blending;
		if ( json.combine !== undefined ) material.combine = json.combine;
		if ( json.side !== undefined ) material.side = json.side;
		if ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;
		if ( json.opacity !== undefined ) material.opacity = json.opacity;
		if ( json.transparent !== undefined ) material.transparent = json.transparent;
		if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;
		if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;
		if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;
		if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;

		if ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;
		if ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;
		if ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;
		if ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;
		if ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;
		if ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;
		if ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;
		if ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;

		if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;
		if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;
		if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;
		if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;

		if ( json.rotation !== undefined ) material.rotation = json.rotation;

		if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;
		if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;
		if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;
		if ( json.scale !== undefined ) material.scale = json.scale;

		if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;
		if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;
		if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;

		if ( json.dithering !== undefined ) material.dithering = json.dithering;

		if ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;
		if ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;

		if ( json.visible !== undefined ) material.visible = json.visible;

		if ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;

		if ( json.userData !== undefined ) material.userData = json.userData;

		if ( json.vertexColors !== undefined ) {

			if ( typeof json.vertexColors === 'number' ) {

				material.vertexColors = ( json.vertexColors > 0 ) ? true : false;

			} else {

				material.vertexColors = json.vertexColors;

			}

		}

		// Shader Material

		if ( json.uniforms !== undefined ) {

			for ( const name in json.uniforms ) {

				const uniform = json.uniforms[ name ];

				material.uniforms[ name ] = {};

				switch ( uniform.type ) {

					case 't':
						material.uniforms[ name ].value = getTexture( uniform.value );
						break;

					case 'c':
						material.uniforms[ name ].value = new Color().setHex( uniform.value );
						break;

					case 'v2':
						material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );
						break;

					case 'v3':
						material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );
						break;

					case 'v4':
						material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );
						break;

					case 'm3':
						material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );
						break;

					case 'm4':
						material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );
						break;

					default:
						material.uniforms[ name ].value = uniform.value;

				}

			}

		}

		if ( json.defines !== undefined ) material.defines = json.defines;
		if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;
		if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;

		if ( json.extensions !== undefined ) {

			for ( const key in json.extensions ) {

				material.extensions[ key ] = json.extensions[ key ];

			}

		}

		// Deprecated

		if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading

		// for PointsMaterial

		if ( json.size !== undefined ) material.size = json.size;
		if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;

		// maps

		if ( json.map !== undefined ) material.map = getTexture( json.map );
		if ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );

		if ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );

		if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );
		if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;

		if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );
		if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;
		if ( json.normalScale !== undefined ) {

			let normalScale = json.normalScale;

			if ( Array.isArray( normalScale ) === false ) {

				// Blender exporter used to export a scalar. See #7459

				normalScale = [ normalScale, normalScale ];

			}

			material.normalScale = new Vector2().fromArray( normalScale );

		}

		if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );
		if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;
		if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;

		if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );
		if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );

		if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );
		if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;

		if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );
		if ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );
		if ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );

		if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );
		if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;

		if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;
		if ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;

		if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );
		if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;

		if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );
		if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;

		if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );

		if ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );
		if ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );
		if ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );
		if ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );

		if ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );
		if ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );

		if ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );
		if ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );

		return material;

	}

	setTextures( value ) {

		this.textures = value;
		return this;

	}

}

class LoaderUtils {

	static decodeText( array ) {

		if ( typeof TextDecoder !== 'undefined' ) {

			return new TextDecoder().decode( array );

		}

		// Avoid the String.fromCharCode.apply(null, array) shortcut, which
		// throws a "maximum call stack size exceeded" error for large arrays.

		let s = '';

		for ( let i = 0, il = array.length; i < il; i ++ ) {

			// Implicitly assumes little-endian.
			s += String.fromCharCode( array[ i ] );

		}

		try {

			// merges multi-byte utf-8 characters.

			return decodeURIComponent( escape( s ) );

		} catch ( e ) { // see #16358

			return s;

		}

	}

	static extractUrlBase( url ) {

		const index = url.lastIndexOf( '/' );

		if ( index === - 1 ) return './';

		return url.slice( 0, index + 1 );

	}

	static resolveURL( url, path ) {

		// Invalid URL
		if ( typeof url !== 'string' || url === '' ) return '';

		// Host Relative URL
		if ( /^https?:\/\//i.test( path ) && /^\//.test( url ) ) {

			path = path.replace( /(^https?:\/\/[^\/]+).*/i, '$1' );

		}

		// Absolute URL http://,https://,//
		if ( /^(https?:)?\/\//i.test( url ) ) return url;

		// Data URI
		if ( /^data:.*,.*$/i.test( url ) ) return url;

		// Blob URL
		if ( /^blob:.*$/i.test( url ) ) return url;

		// Relative URL
		return path + url;

	}

}

class InstancedBufferGeometry extends BufferGeometry {

	constructor() {

		super();

		this.type = 'InstancedBufferGeometry';
		this.instanceCount = Infinity;

	}

	copy( source ) {

		super.copy( source );

		this.instanceCount = source.instanceCount;

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	toJSON() {

		const data = super.toJSON( this );

		data.instanceCount = this.instanceCount;

		data.isInstancedBufferGeometry = true;

		return data;

	}

}

InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;

class BufferGeometryLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( scope.manager );
		loader.setPath( scope.path );
		loader.setRequestHeader( scope.requestHeader );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const interleavedBufferMap = {};
		const arrayBufferMap = {};

		function getInterleavedBuffer( json, uuid ) {

			if ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];

			const interleavedBuffers = json.interleavedBuffers;
			const interleavedBuffer = interleavedBuffers[ uuid ];

			const buffer = getArrayBuffer( json, interleavedBuffer.buffer );

			const array = getTypedArray( interleavedBuffer.type, buffer );
			const ib = new InterleavedBuffer( array, interleavedBuffer.stride );
			ib.uuid = interleavedBuffer.uuid;

			interleavedBufferMap[ uuid ] = ib;

			return ib;

		}

		function getArrayBuffer( json, uuid ) {

			if ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];

			const arrayBuffers = json.arrayBuffers;
			const arrayBuffer = arrayBuffers[ uuid ];

			const ab = new Uint32Array( arrayBuffer ).buffer;

			arrayBufferMap[ uuid ] = ab;

			return ab;

		}

		const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();

		const index = json.data.index;

		if ( index !== undefined ) {

			const typedArray = getTypedArray( index.type, index.array );
			geometry.setIndex( new BufferAttribute( typedArray, 1 ) );

		}

		const attributes = json.data.attributes;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];
			let bufferAttribute;

			if ( attribute.isInterleavedBufferAttribute ) {

				const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );
				bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );

			} else {

				const typedArray = getTypedArray( attribute.type, attribute.array );
				const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;
				bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );

			}

			if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;
			if ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );

			if ( attribute.updateRange !== undefined ) {

				bufferAttribute.updateRange.offset = attribute.updateRange.offset;
				bufferAttribute.updateRange.count = attribute.updateRange.count;

			}

			geometry.setAttribute( key, bufferAttribute );

		}

		const morphAttributes = json.data.morphAttributes;

		if ( morphAttributes ) {

			for ( const key in morphAttributes ) {

				const attributeArray = morphAttributes[ key ];

				const array = [];

				for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {

					const attribute = attributeArray[ i ];
					let bufferAttribute;

					if ( attribute.isInterleavedBufferAttribute ) {

						const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );
						bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );

					} else {

						const typedArray = getTypedArray( attribute.type, attribute.array );
						bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );

					}

					if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;
					array.push( bufferAttribute );

				}

				geometry.morphAttributes[ key ] = array;

			}

		}

		const morphTargetsRelative = json.data.morphTargetsRelative;

		if ( morphTargetsRelative ) {

			geometry.morphTargetsRelative = true;

		}

		const groups = json.data.groups || json.data.drawcalls || json.data.offsets;

		if ( groups !== undefined ) {

			for ( let i = 0, n = groups.length; i !== n; ++ i ) {

				const group = groups[ i ];

				geometry.addGroup( group.start, group.count, group.materialIndex );

			}

		}

		const boundingSphere = json.data.boundingSphere;

		if ( boundingSphere !== undefined ) {

			const center = new Vector3();

			if ( boundingSphere.center !== undefined ) {

				center.fromArray( boundingSphere.center );

			}

			geometry.boundingSphere = new Sphere( center, boundingSphere.radius );

		}

		if ( json.name ) geometry.name = json.name;
		if ( json.userData ) geometry.userData = json.userData;

		return geometry;

	}

}

class ObjectLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;
		this.resourcePath = this.resourcePath || path;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( text ) {

			let json = null;

			try {

				json = JSON.parse( text );

			} catch ( error ) {

				if ( onError !== undefined ) onError( error );

				console.error( 'THREE:ObjectLoader: Can\'t parse ' + url + '.', error.message );

				return;

			}

			const metadata = json.metadata;

			if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {

				console.error( 'THREE.ObjectLoader: Can\'t load ' + url );
				return;

			}

			scope.parse( json, onLoad );

		}, onProgress, onError );

	}

	async loadAsync( url, onProgress ) {

		const scope = this;

		const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;
		this.resourcePath = this.resourcePath || path;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );

		const text = await loader.loadAsync( url, onProgress );

		const json = JSON.parse( text );

		const metadata = json.metadata;

		if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {

			throw new Error( 'THREE.ObjectLoader: Can\'t load ' + url );

		}

		return await scope.parseAsync( json );

	}

	parse( json, onLoad ) {

		const animations = this.parseAnimations( json.animations );
		const shapes = this.parseShapes( json.shapes );
		const geometries = this.parseGeometries( json.geometries, shapes );

		const images = this.parseImages( json.images, function () {

			if ( onLoad !== undefined ) onLoad( object );

		} );

		const textures = this.parseTextures( json.textures, images );
		const materials = this.parseMaterials( json.materials, textures );

		const object = this.parseObject( json.object, geometries, materials, textures, animations );
		const skeletons = this.parseSkeletons( json.skeletons, object );

		this.bindSkeletons( object, skeletons );

		//

		if ( onLoad !== undefined ) {

			let hasImages = false;

			for ( const uuid in images ) {

				if ( images[ uuid ] instanceof HTMLImageElement ) {

					hasImages = true;
					break;

				}

			}

			if ( hasImages === false ) onLoad( object );

		}

		return object;

	}

	async parseAsync( json ) {

		const animations = this.parseAnimations( json.animations );
		const shapes = this.parseShapes( json.shapes );
		const geometries = this.parseGeometries( json.geometries, shapes );

		const images = await this.parseImagesAsync( json.images );

		const textures = this.parseTextures( json.textures, images );
		const materials = this.parseMaterials( json.materials, textures );

		const object = this.parseObject( json.object, geometries, materials, textures, animations );
		const skeletons = this.parseSkeletons( json.skeletons, object );

		this.bindSkeletons( object, skeletons );

		return object;

	}

	parseShapes( json ) {

		const shapes = {};

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const shape = new Shape().fromJSON( json[ i ] );

				shapes[ shape.uuid ] = shape;

			}

		}

		return shapes;

	}

	parseSkeletons( json, object ) {

		const skeletons = {};
		const bones = {};

		// generate bone lookup table

		object.traverse( function ( child ) {

			if ( child.isBone ) bones[ child.uuid ] = child;

		} );

		// create skeletons

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const skeleton = new Skeleton().fromJSON( json[ i ], bones );

				skeletons[ skeleton.uuid ] = skeleton;

			}

		}

		return skeletons;

	}

	parseGeometries( json, shapes ) {

		const geometries = {};

		if ( json !== undefined ) {

			const bufferGeometryLoader = new BufferGeometryLoader();

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				let geometry;
				const data = json[ i ];

				switch ( data.type ) {

					case 'BufferGeometry':
					case 'InstancedBufferGeometry':

						geometry = bufferGeometryLoader.parse( data );

						break;

					case 'Geometry':

						console.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );

						break;

					default:

						if ( data.type in Geometries ) {

							geometry = Geometries[ data.type ].fromJSON( data, shapes );

						} else {

							console.warn( `THREE.ObjectLoader: Unsupported geometry type "${ data.type }"` );

						}

				}

				geometry.uuid = data.uuid;

				if ( data.name !== undefined ) geometry.name = data.name;
				if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;

				geometries[ data.uuid ] = geometry;

			}

		}

		return geometries;

	}

	parseMaterials( json, textures ) {

		const cache = {}; // MultiMaterial
		const materials = {};

		if ( json !== undefined ) {

			const loader = new MaterialLoader();
			loader.setTextures( textures );

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const data = json[ i ];

				if ( data.type === 'MultiMaterial' ) {

					// Deprecated

					const array = [];

					for ( let j = 0; j < data.materials.length; j ++ ) {

						const material = data.materials[ j ];

						if ( cache[ material.uuid ] === undefined ) {

							cache[ material.uuid ] = loader.parse( material );

						}

						array.push( cache[ material.uuid ] );

					}

					materials[ data.uuid ] = array;

				} else {

					if ( cache[ data.uuid ] === undefined ) {

						cache[ data.uuid ] = loader.parse( data );

					}

					materials[ data.uuid ] = cache[ data.uuid ];

				}

			}

		}

		return materials;

	}

	parseAnimations( json ) {

		const animations = {};

		if ( json !== undefined ) {

			for ( let i = 0; i < json.length; i ++ ) {

				const data = json[ i ];

				const clip = AnimationClip.parse( data );

				animations[ clip.uuid ] = clip;

			}

		}

		return animations;

	}

	parseImages( json, onLoad ) {

		const scope = this;
		const images = {};

		let loader;

		function loadImage( url ) {

			scope.manager.itemStart( url );

			return loader.load( url, function () {

				scope.manager.itemEnd( url );

			}, undefined, function () {

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			} );

		}

		function deserializeImage( image ) {

			if ( typeof image === 'string' ) {

				const url = image;

				const path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( url ) ? url : scope.resourcePath + url;

				return loadImage( path );

			} else {

				if ( image.data ) {

					return {
						data: getTypedArray( image.type, image.data ),
						width: image.width,
						height: image.height
					};

				} else {

					return null;

				}

			}

		}

		if ( json !== undefined && json.length > 0 ) {

			const manager = new LoadingManager( onLoad );

			loader = new ImageLoader( manager );
			loader.setCrossOrigin( this.crossOrigin );

			for ( let i = 0, il = json.length; i < il; i ++ ) {

				const image = json[ i ];
				const url = image.url;

				if ( Array.isArray( url ) ) {

					// load array of images e.g CubeTexture

					const imageArray = [];

					for ( let j = 0, jl = url.length; j < jl; j ++ ) {

						const currentUrl = url[ j ];

						const deserializedImage = deserializeImage( currentUrl );

						if ( deserializedImage !== null ) {

							if ( deserializedImage instanceof HTMLImageElement ) {

								imageArray.push( deserializedImage );

							} else {

								// special case: handle array of data textures for cube textures

								imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );

							}

						}

					}

					images[ image.uuid ] = new Source( imageArray );

				} else {

					// load single image

					const deserializedImage = deserializeImage( image.url );
					images[ image.uuid ] = new Source( deserializedImage );


				}

			}

		}

		return images;

	}

	async parseImagesAsync( json ) {

		const scope = this;
		const images = {};

		let loader;

		async function deserializeImage( image ) {

			if ( typeof image === 'string' ) {

				const url = image;

				const path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( url ) ? url : scope.resourcePath + url;

				return await loader.loadAsync( path );

			} else {

				if ( image.data ) {

					return {
						data: getTypedArray( image.type, image.data ),
						width: image.width,
						height: image.height
					};

				} else {

					return null;

				}

			}

		}

		if ( json !== undefined && json.length > 0 ) {

			loader = new ImageLoader( this.manager );
			loader.setCrossOrigin( this.crossOrigin );

			for ( let i = 0, il = json.length; i < il; i ++ ) {

				const image = json[ i ];
				const url = image.url;

				if ( Array.isArray( url ) ) {

					// load array of images e.g CubeTexture

					const imageArray = [];

					for ( let j = 0, jl = url.length; j < jl; j ++ ) {

						const currentUrl = url[ j ];

						const deserializedImage = await deserializeImage( currentUrl );

						if ( deserializedImage !== null ) {

							if ( deserializedImage instanceof HTMLImageElement ) {

								imageArray.push( deserializedImage );

							} else {

								// special case: handle array of data textures for cube textures

								imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );

							}

						}

					}

					images[ image.uuid ] = new Source( imageArray );

				} else {

					// load single image

					const deserializedImage = await deserializeImage( image.url );
					images[ image.uuid ] = new Source( deserializedImage );

				}

			}

		}

		return images;

	}

	parseTextures( json, images ) {

		function parseConstant( value, type ) {

			if ( typeof value === 'number' ) return value;

			console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );

			return type[ value ];

		}

		const textures = {};

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const data = json[ i ];

				if ( data.image === undefined ) {

					console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid );

				}

				if ( images[ data.image ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined image', data.image );

				}

				const source = images[ data.image ];
				const image = source.data;

				let texture;

				if ( Array.isArray( image ) ) {

					texture = new CubeTexture();

					if ( image.length === 6 ) texture.needsUpdate = true;

				} else {

					if ( image && image.data ) {

						texture = new DataTexture();

					} else {

						texture = new Texture();

					}

					if ( image ) texture.needsUpdate = true; // textures can have undefined image data

				}

				texture.source = source;

				texture.uuid = data.uuid;

				if ( data.name !== undefined ) texture.name = data.name;

				if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );

				if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );
				if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );
				if ( data.center !== undefined ) texture.center.fromArray( data.center );
				if ( data.rotation !== undefined ) texture.rotation = data.rotation;

				if ( data.wrap !== undefined ) {

					texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );
					texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );

				}

				if ( data.format !== undefined ) texture.format = data.format;
				if ( data.type !== undefined ) texture.type = data.type;
				if ( data.encoding !== undefined ) texture.encoding = data.encoding;

				if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );
				if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );
				if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;

				if ( data.flipY !== undefined ) texture.flipY = data.flipY;

				if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;
				if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;

				if ( data.userData !== undefined ) texture.userData = data.userData;

				textures[ data.uuid ] = texture;

			}

		}

		return textures;

	}

	parseObject( data, geometries, materials, textures, animations ) {

		let object;

		function getGeometry( name ) {

			if ( geometries[ name ] === undefined ) {

				console.warn( 'THREE.ObjectLoader: Undefined geometry', name );

			}

			return geometries[ name ];

		}

		function getMaterial( name ) {

			if ( name === undefined ) return undefined;

			if ( Array.isArray( name ) ) {

				const array = [];

				for ( let i = 0, l = name.length; i < l; i ++ ) {

					const uuid = name[ i ];

					if ( materials[ uuid ] === undefined ) {

						console.warn( 'THREE.ObjectLoader: Undefined material', uuid );

					}

					array.push( materials[ uuid ] );

				}

				return array;

			}

			if ( materials[ name ] === undefined ) {

				console.warn( 'THREE.ObjectLoader: Undefined material', name );

			}

			return materials[ name ];

		}

		function getTexture( uuid ) {

			if ( textures[ uuid ] === undefined ) {

				console.warn( 'THREE.ObjectLoader: Undefined texture', uuid );

			}

			return textures[ uuid ];

		}

		let geometry, material;

		switch ( data.type ) {

			case 'Scene':

				object = new Scene();

				if ( data.background !== undefined ) {

					if ( Number.isInteger( data.background ) ) {

						object.background = new Color( data.background );

					} else {

						object.background = getTexture( data.background );

					}

				}

				if ( data.environment !== undefined ) {

					object.environment = getTexture( data.environment );

				}

				if ( data.fog !== undefined ) {

					if ( data.fog.type === 'Fog' ) {

						object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );

					} else if ( data.fog.type === 'FogExp2' ) {

						object.fog = new FogExp2( data.fog.color, data.fog.density );

					}

				}

				break;

			case 'PerspectiveCamera':

				object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );

				if ( data.focus !== undefined ) object.focus = data.focus;
				if ( data.zoom !== undefined ) object.zoom = data.zoom;
				if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;
				if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;
				if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );

				break;

			case 'OrthographicCamera':

				object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );

				if ( data.zoom !== undefined ) object.zoom = data.zoom;
				if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );

				break;

			case 'AmbientLight':

				object = new AmbientLight( data.color, data.intensity );

				break;

			case 'DirectionalLight':

				object = new DirectionalLight( data.color, data.intensity );

				break;

			case 'PointLight':

				object = new PointLight( data.color, data.intensity, data.distance, data.decay );

				break;

			case 'RectAreaLight':

				object = new RectAreaLight( data.color, data.intensity, data.width, data.height );

				break;

			case 'SpotLight':

				object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );

				break;

			case 'HemisphereLight':

				object = new HemisphereLight( data.color, data.groundColor, data.intensity );

				break;

			case 'LightProbe':

				object = new LightProbe().fromJSON( data );

				break;

			case 'SkinnedMesh':

				geometry = getGeometry( data.geometry );
			 	material = getMaterial( data.material );

				object = new SkinnedMesh( geometry, material );

				if ( data.bindMode !== undefined ) object.bindMode = data.bindMode;
				if ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );
				if ( data.skeleton !== undefined ) object.skeleton = data.skeleton;

				break;

			case 'Mesh':

				geometry = getGeometry( data.geometry );
				material = getMaterial( data.material );

				object = new Mesh( geometry, material );

				break;

			case 'InstancedMesh':

				geometry = getGeometry( data.geometry );
				material = getMaterial( data.material );
				const count = data.count;
				const instanceMatrix = data.instanceMatrix;
				const instanceColor = data.instanceColor;

				object = new InstancedMesh( geometry, material, count );
				object.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );
				if ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );

				break;

			case 'LOD':

				object = new LOD();

				break;

			case 'Line':

				object = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'LineLoop':

				object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'LineSegments':

				object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'PointCloud':
			case 'Points':

				object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'Sprite':

				object = new Sprite( getMaterial( data.material ) );

				break;

			case 'Group':

				object = new Group();

				break;

			case 'Bone':

				object = new Bone();

				break;

			default:

				object = new Object3D();

		}

		object.uuid = data.uuid;

		if ( data.name !== undefined ) object.name = data.name;

		if ( data.matrix !== undefined ) {

			object.matrix.fromArray( data.matrix );

			if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;
			if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );

		} else {

			if ( data.position !== undefined ) object.position.fromArray( data.position );
			if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );
			if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );
			if ( data.scale !== undefined ) object.scale.fromArray( data.scale );

		}

		if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;
		if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;

		if ( data.shadow ) {

			if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;
			if ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;
			if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;
			if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );
			if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );

		}

		if ( data.visible !== undefined ) object.visible = data.visible;
		if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;
		if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;
		if ( data.userData !== undefined ) object.userData = data.userData;
		if ( data.layers !== undefined ) object.layers.mask = data.layers;

		if ( data.children !== undefined ) {

			const children = data.children;

			for ( let i = 0; i < children.length; i ++ ) {

				object.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );

			}

		}

		if ( data.animations !== undefined ) {

			const objectAnimations = data.animations;

			for ( let i = 0; i < objectAnimations.length; i ++ ) {

				const uuid = objectAnimations[ i ];

				object.animations.push( animations[ uuid ] );

			}

		}

		if ( data.type === 'LOD' ) {

			if ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;

			const levels = data.levels;

			for ( let l = 0; l < levels.length; l ++ ) {

				const level = levels[ l ];
				const child = object.getObjectByProperty( 'uuid', level.object );

				if ( child !== undefined ) {

					object.addLevel( child, level.distance );

				}

			}

		}

		return object;

	}

	bindSkeletons( object, skeletons ) {

		if ( Object.keys( skeletons ).length === 0 ) return;

		object.traverse( function ( child ) {

			if ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {

				const skeleton = skeletons[ child.skeleton ];

				if ( skeleton === undefined ) {

					console.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );

				} else {

					child.bind( skeleton, child.bindMatrix );

				}

			}

		} );

	}

	/* DEPRECATED */

	setTexturePath( value ) {

		console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );
		return this.setResourcePath( value );

	}

}

const TEXTURE_MAPPING = {
	UVMapping: UVMapping,
	CubeReflectionMapping: CubeReflectionMapping,
	CubeRefractionMapping: CubeRefractionMapping,
	EquirectangularReflectionMapping: EquirectangularReflectionMapping,
	EquirectangularRefractionMapping: EquirectangularRefractionMapping,
	CubeUVReflectionMapping: CubeUVReflectionMapping,
	CubeUVRefractionMapping: CubeUVRefractionMapping
};

const TEXTURE_WRAPPING = {
	RepeatWrapping: RepeatWrapping,
	ClampToEdgeWrapping: ClampToEdgeWrapping,
	MirroredRepeatWrapping: MirroredRepeatWrapping
};

const TEXTURE_FILTER = {
	NearestFilter: NearestFilter,
	NearestMipmapNearestFilter: NearestMipmapNearestFilter,
	NearestMipmapLinearFilter: NearestMipmapLinearFilter,
	LinearFilter: LinearFilter,
	LinearMipmapNearestFilter: LinearMipmapNearestFilter,
	LinearMipmapLinearFilter: LinearMipmapLinearFilter
};

class ImageBitmapLoader extends Loader {

	constructor( manager ) {

		super( manager );

		if ( typeof createImageBitmap === 'undefined' ) {

			console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );

		}

		if ( typeof fetch === 'undefined' ) {

			console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );

		}

		this.options = { premultiplyAlpha: 'none' };

	}

	setOptions( options ) {

		this.options = options;

		return this;

	}

	load( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const scope = this;

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		const fetchOptions = {};
		fetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';
		fetchOptions.headers = this.requestHeader;

		fetch( url, fetchOptions ).then( function ( res ) {

			return res.blob();

		} ).then( function ( blob ) {

			return createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );

		} ).then( function ( imageBitmap ) {

			Cache.add( url, imageBitmap );

			if ( onLoad ) onLoad( imageBitmap );

			scope.manager.itemEnd( url );

		} ).catch( function ( e ) {

			if ( onError ) onError( e );

			scope.manager.itemError( url );
			scope.manager.itemEnd( url );

		} );

		scope.manager.itemStart( url );

	}

}

ImageBitmapLoader.prototype.isImageBitmapLoader = true;

let _context;

const AudioContext = {

	getContext: function () {

		if ( _context === undefined ) {

			_context = new ( window.AudioContext || window.webkitAudioContext )();

		}

		return _context;

	},

	setContext: function ( value ) {

		_context = value;

	}

};

class AudioLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( buffer ) {

			try {

				// Create a copy of the buffer. The `decodeAudioData` method
				// detaches the buffer when complete, preventing reuse.
				const bufferCopy = buffer.slice( 0 );

				const context = AudioContext.getContext();
				context.decodeAudioData( bufferCopy, function ( audioBuffer ) {

					onLoad( audioBuffer );

				} );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

}

class HemisphereLightProbe extends LightProbe {

	constructor( skyColor, groundColor, intensity = 1 ) {

		super( undefined, intensity );

		const color1 = new Color().set( skyColor );
		const color2 = new Color().set( groundColor );

		const sky = new Vector3( color1.r, color1.g, color1.b );
		const ground = new Vector3( color2.r, color2.g, color2.b );

		// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );
		const c0 = Math.sqrt( Math.PI );
		const c1 = c0 * Math.sqrt( 0.75 );

		this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );
		this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );

	}

}

HemisphereLightProbe.prototype.isHemisphereLightProbe = true;

class AmbientLightProbe extends LightProbe {

	constructor( color, intensity = 1 ) {

		super( undefined, intensity );

		const color1 = new Color().set( color );

		// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
		this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );

	}

}

AmbientLightProbe.prototype.isAmbientLightProbe = true;

const _eyeRight = /*@__PURE__*/ new Matrix4();
const _eyeLeft = /*@__PURE__*/ new Matrix4();
const _projectionMatrix = /*@__PURE__*/ new Matrix4();

class StereoCamera {

	constructor() {

		this.type = 'StereoCamera';

		this.aspect = 1;

		this.eyeSep = 0.064;

		this.cameraL = new PerspectiveCamera();
		this.cameraL.layers.enable( 1 );
		this.cameraL.matrixAutoUpdate = false;

		this.cameraR = new PerspectiveCamera();
		this.cameraR.layers.enable( 2 );
		this.cameraR.matrixAutoUpdate = false;

		this._cache = {
			focus: null,
			fov: null,
			aspect: null,
			near: null,
			far: null,
			zoom: null,
			eyeSep: null
		};

	}

	update( camera ) {

		const cache = this._cache;

		const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||
			cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||
			cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;

		if ( needsUpdate ) {

			cache.focus = camera.focus;
			cache.fov = camera.fov;
			cache.aspect = camera.aspect * this.aspect;
			cache.near = camera.near;
			cache.far = camera.far;
			cache.zoom = camera.zoom;
			cache.eyeSep = this.eyeSep;

			// Off-axis stereoscopic effect based on
			// http://paulbourke.net/stereographics/stereorender/

			_projectionMatrix.copy( camera.projectionMatrix );
			const eyeSepHalf = cache.eyeSep / 2;
			const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;
			const ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;
			let xmin, xmax;

			// translate xOffset

			_eyeLeft.elements[ 12 ] = - eyeSepHalf;
			_eyeRight.elements[ 12 ] = eyeSepHalf;

			// for left eye

			xmin = - ymax * cache.aspect + eyeSepOnProjection;
			xmax = ymax * cache.aspect + eyeSepOnProjection;

			_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
			_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

			this.cameraL.projectionMatrix.copy( _projectionMatrix );

			// for right eye

			xmin = - ymax * cache.aspect - eyeSepOnProjection;
			xmax = ymax * cache.aspect - eyeSepOnProjection;

			_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
			_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

			this.cameraR.projectionMatrix.copy( _projectionMatrix );

		}

		this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );
		this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );

	}

}

class Clock {

	constructor( autoStart = true ) {

		this.autoStart = autoStart;

		this.startTime = 0;
		this.oldTime = 0;
		this.elapsedTime = 0;

		this.running = false;

	}

	start() {

		this.startTime = now();

		this.oldTime = this.startTime;
		this.elapsedTime = 0;
		this.running = true;

	}

	stop() {

		this.getElapsedTime();
		this.running = false;
		this.autoStart = false;

	}

	getElapsedTime() {

		this.getDelta();
		return this.elapsedTime;

	}

	getDelta() {

		let diff = 0;

		if ( this.autoStart && ! this.running ) {

			this.start();
			return 0;

		}

		if ( this.running ) {

			const newTime = now();

			diff = ( newTime - this.oldTime ) / 1000;
			this.oldTime = newTime;

			this.elapsedTime += diff;

		}

		return diff;

	}

}

function now() {

	return ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732

}

const _position$1 = /*@__PURE__*/ new Vector3();
const _quaternion$1 = /*@__PURE__*/ new Quaternion();
const _scale$1 = /*@__PURE__*/ new Vector3();
const _orientation$1 = /*@__PURE__*/ new Vector3();

class AudioListener extends Object3D {

	constructor() {

		super();

		this.type = 'AudioListener';

		this.context = AudioContext.getContext();

		this.gain = this.context.createGain();
		this.gain.connect( this.context.destination );

		this.filter = null;

		this.timeDelta = 0;

		// private

		this._clock = new Clock();

	}

	getInput() {

		return this.gain;

	}

	removeFilter() {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );
			this.gain.connect( this.context.destination );
			this.filter = null;

		}

		return this;

	}

	getFilter() {

		return this.filter;

	}

	setFilter( value ) {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );

		} else {

			this.gain.disconnect( this.context.destination );

		}

		this.filter = value;
		this.gain.connect( this.filter );
		this.filter.connect( this.context.destination );

		return this;

	}

	getMasterVolume() {

		return this.gain.gain.value;

	}

	setMasterVolume( value ) {

		this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

		return this;

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		const listener = this.context.listener;
		const up = this.up;

		this.timeDelta = this._clock.getDelta();

		this.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );

		_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );

		if ( listener.positionX ) {

			// code path for Chrome (see #14393)

			const endTime = this.context.currentTime + this.timeDelta;

			listener.positionX.linearRampToValueAtTime( _position$1.x, endTime );
			listener.positionY.linearRampToValueAtTime( _position$1.y, endTime );
			listener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );
			listener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );
			listener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );
			listener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );
			listener.upX.linearRampToValueAtTime( up.x, endTime );
			listener.upY.linearRampToValueAtTime( up.y, endTime );
			listener.upZ.linearRampToValueAtTime( up.z, endTime );

		} else {

			listener.setPosition( _position$1.x, _position$1.y, _position$1.z );
			listener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );

		}

	}

}

class Audio extends Object3D {

	constructor( listener ) {

		super();

		this.type = 'Audio';

		this.listener = listener;
		this.context = listener.context;

		this.gain = this.context.createGain();
		this.gain.connect( listener.getInput() );

		this.autoplay = false;

		this.buffer = null;
		this.detune = 0;
		this.loop = false;
		this.loopStart = 0;
		this.loopEnd = 0;
		this.offset = 0;
		this.duration = undefined;
		this.playbackRate = 1;
		this.isPlaying = false;
		this.hasPlaybackControl = true;
		this.source = null;
		this.sourceType = 'empty';

		this._startedAt = 0;
		this._progress = 0;
		this._connected = false;

		this.filters = [];

	}

	getOutput() {

		return this.gain;

	}

	setNodeSource( audioNode ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'audioNode';
		this.source = audioNode;
		this.connect();

		return this;

	}

	setMediaElementSource( mediaElement ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'mediaNode';
		this.source = this.context.createMediaElementSource( mediaElement );
		this.connect();

		return this;

	}

	setMediaStreamSource( mediaStream ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'mediaStreamNode';
		this.source = this.context.createMediaStreamSource( mediaStream );
		this.connect();

		return this;

	}

	setBuffer( audioBuffer ) {

		this.buffer = audioBuffer;
		this.sourceType = 'buffer';

		if ( this.autoplay ) this.play();

		return this;

	}

	play( delay = 0 ) {

		if ( this.isPlaying === true ) {

			console.warn( 'THREE.Audio: Audio is already playing.' );
			return;

		}

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this._startedAt = this.context.currentTime + delay;

		const source = this.context.createBufferSource();
		source.buffer = this.buffer;
		source.loop = this.loop;
		source.loopStart = this.loopStart;
		source.loopEnd = this.loopEnd;
		source.onended = this.onEnded.bind( this );
		source.start( this._startedAt, this._progress + this.offset, this.duration );

		this.isPlaying = true;

		this.source = source;

		this.setDetune( this.detune );
		this.setPlaybackRate( this.playbackRate );

		return this.connect();

	}

	pause() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		if ( this.isPlaying === true ) {

			// update current progress

			this._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;

			if ( this.loop === true ) {

				// ensure _progress does not exceed duration with looped audios

				this._progress = this._progress % ( this.duration || this.buffer.duration );

			}

			this.source.stop();
			this.source.onended = null;

			this.isPlaying = false;

		}

		return this;

	}

	stop() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this._progress = 0;

		this.source.stop();
		this.source.onended = null;
		this.isPlaying = false;

		return this;

	}

	connect() {

		if ( this.filters.length > 0 ) {

			this.source.connect( this.filters[ 0 ] );

			for ( let i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].connect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].connect( this.getOutput() );

		} else {

			this.source.connect( this.getOutput() );

		}

		this._connected = true;

		return this;

	}

	disconnect() {

		if ( this.filters.length > 0 ) {

			this.source.disconnect( this.filters[ 0 ] );

			for ( let i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].disconnect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );

		} else {

			this.source.disconnect( this.getOutput() );

		}

		this._connected = false;

		return this;

	}

	getFilters() {

		return this.filters;

	}

	setFilters( value ) {

		if ( ! value ) value = [];

		if ( this._connected === true ) {

			this.disconnect();
			this.filters = value.slice();
			this.connect();

		} else {

			this.filters = value.slice();

		}

		return this;

	}

	setDetune( value ) {

		this.detune = value;

		if ( this.source.detune === undefined ) return; // only set detune when available

		if ( this.isPlaying === true ) {

			this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );

		}

		return this;

	}

	getDetune() {

		return this.detune;

	}

	getFilter() {

		return this.getFilters()[ 0 ];

	}

	setFilter( filter ) {

		return this.setFilters( filter ? [ filter ] : [] );

	}

	setPlaybackRate( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.playbackRate = value;

		if ( this.isPlaying === true ) {

			this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );

		}

		return this;

	}

	getPlaybackRate() {

		return this.playbackRate;

	}

	onEnded() {

		this.isPlaying = false;

	}

	getLoop() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return false;

		}

		return this.loop;

	}

	setLoop( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.loop = value;

		if ( this.isPlaying === true ) {

			this.source.loop = this.loop;

		}

		return this;

	}

	setLoopStart( value ) {

		this.loopStart = value;

		return this;

	}

	setLoopEnd( value ) {

		this.loopEnd = value;

		return this;

	}

	getVolume() {

		return this.gain.gain.value;

	}

	setVolume( value ) {

		this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

		return this;

	}

}

const _position = /*@__PURE__*/ new Vector3();
const _quaternion = /*@__PURE__*/ new Quaternion();
const _scale = /*@__PURE__*/ new Vector3();
const _orientation = /*@__PURE__*/ new Vector3();

class PositionalAudio extends Audio {

	constructor( listener ) {

		super( listener );

		this.panner = this.context.createPanner();
		this.panner.panningModel = 'HRTF';
		this.panner.connect( this.gain );

	}

	getOutput() {

		return this.panner;

	}

	getRefDistance() {

		return this.panner.refDistance;

	}

	setRefDistance( value ) {

		this.panner.refDistance = value;

		return this;

	}

	getRolloffFactor() {

		return this.panner.rolloffFactor;

	}

	setRolloffFactor( value ) {

		this.panner.rolloffFactor = value;

		return this;

	}

	getDistanceModel() {

		return this.panner.distanceModel;

	}

	setDistanceModel( value ) {

		this.panner.distanceModel = value;

		return this;

	}

	getMaxDistance() {

		return this.panner.maxDistance;

	}

	setMaxDistance( value ) {

		this.panner.maxDistance = value;

		return this;

	}

	setDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {

		this.panner.coneInnerAngle = coneInnerAngle;
		this.panner.coneOuterAngle = coneOuterAngle;
		this.panner.coneOuterGain = coneOuterGain;

		return this;

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		if ( this.hasPlaybackControl === true && this.isPlaying === false ) return;

		this.matrixWorld.decompose( _position, _quaternion, _scale );

		_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );

		const panner = this.panner;

		if ( panner.positionX ) {

			// code path for Chrome and Firefox (see #14393)

			const endTime = this.context.currentTime + this.listener.timeDelta;

			panner.positionX.linearRampToValueAtTime( _position.x, endTime );
			panner.positionY.linearRampToValueAtTime( _position.y, endTime );
			panner.positionZ.linearRampToValueAtTime( _position.z, endTime );
			panner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );
			panner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );
			panner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );

		} else {

			panner.setPosition( _position.x, _position.y, _position.z );
			panner.setOrientation( _orientation.x, _orientation.y, _orientation.z );

		}

	}

}

class AudioAnalyser {

	constructor( audio, fftSize = 2048 ) {

		this.analyser = audio.context.createAnalyser();
		this.analyser.fftSize = fftSize;

		this.data = new Uint8Array( this.analyser.frequencyBinCount );

		audio.getOutput().connect( this.analyser );

	}


	getFrequencyData() {

		this.analyser.getByteFrequencyData( this.data );

		return this.data;

	}

	getAverageFrequency() {

		let value = 0;
		const data = this.getFrequencyData();

		for ( let i = 0; i < data.length; i ++ ) {

			value += data[ i ];

		}

		return value / data.length;

	}

}

class PropertyMixer {

	constructor( binding, typeName, valueSize ) {

		this.binding = binding;
		this.valueSize = valueSize;

		let mixFunction,
			mixFunctionAdditive,
			setIdentity;

		// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]
		//
		// interpolators can use .buffer as their .result
		// the data then goes to 'incoming'
		//
		// 'accu0' and 'accu1' are used frame-interleaved for
		// the cumulative result and are compared to detect
		// changes
		//
		// 'orig' stores the original state of the property
		//
		// 'add' is used for additive cumulative results
		//
		// 'work' is optional and is only present for quaternion types. It is used
		// to store intermediate quaternion multiplication results

		switch ( typeName ) {

			case 'quaternion':
				mixFunction = this._slerp;
				mixFunctionAdditive = this._slerpAdditive;
				setIdentity = this._setAdditiveIdentityQuaternion;

				this.buffer = new Float64Array( valueSize * 6 );
				this._workIndex = 5;
				break;

			case 'string':
			case 'bool':
				mixFunction = this._select;

				// Use the regular mix function and for additive on these types,
				// additive is not relevant for non-numeric types
				mixFunctionAdditive = this._select;

				setIdentity = this._setAdditiveIdentityOther;

				this.buffer = new Array( valueSize * 5 );
				break;

			default:
				mixFunction = this._lerp;
				mixFunctionAdditive = this._lerpAdditive;
				setIdentity = this._setAdditiveIdentityNumeric;

				this.buffer = new Float64Array( valueSize * 5 );

		}

		this._mixBufferRegion = mixFunction;
		this._mixBufferRegionAdditive = mixFunctionAdditive;
		this._setIdentity = setIdentity;
		this._origIndex = 3;
		this._addIndex = 4;

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

		this.useCount = 0;
		this.referenceCount = 0;

	}

	// accumulate data in the 'incoming' region into 'accu<i>'
	accumulate( accuIndex, weight ) {

		// note: happily accumulating nothing when weight = 0, the caller knows
		// the weight and shouldn't have made the call in the first place

		const buffer = this.buffer,
			stride = this.valueSize,
			offset = accuIndex * stride + stride;

		let currentWeight = this.cumulativeWeight;

		if ( currentWeight === 0 ) {

			// accuN := incoming * weight

			for ( let i = 0; i !== stride; ++ i ) {

				buffer[ offset + i ] = buffer[ i ];

			}

			currentWeight = weight;

		} else {

			// accuN := accuN + incoming * weight

			currentWeight += weight;
			const mix = weight / currentWeight;
			this._mixBufferRegion( buffer, offset, 0, mix, stride );

		}

		this.cumulativeWeight = currentWeight;

	}

	// accumulate data in the 'incoming' region into 'add'
	accumulateAdditive( weight ) {

		const buffer = this.buffer,
			stride = this.valueSize,
			offset = stride * this._addIndex;

		if ( this.cumulativeWeightAdditive === 0 ) {

			// add = identity

			this._setIdentity();

		}

		// add := add + incoming * weight

		this._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );
		this.cumulativeWeightAdditive += weight;

	}

	// apply the state of 'accu<i>' to the binding when accus differ
	apply( accuIndex ) {

		const stride = this.valueSize,
			buffer = this.buffer,
			offset = accuIndex * stride + stride,

			weight = this.cumulativeWeight,
			weightAdditive = this.cumulativeWeightAdditive,

			binding = this.binding;

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

		if ( weight < 1 ) {

			// accuN := accuN + original * ( 1 - cumulativeWeight )

			const originalValueOffset = stride * this._origIndex;

			this._mixBufferRegion(
				buffer, offset, originalValueOffset, 1 - weight, stride );

		}

		if ( weightAdditive > 0 ) {

			// accuN := accuN + additive accuN

			this._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );

		}

		for ( let i = stride, e = stride + stride; i !== e; ++ i ) {

			if ( buffer[ i ] !== buffer[ i + stride ] ) {

				// value has changed -> update scene graph

				binding.setValue( buffer, offset );
				break;

			}

		}

	}

	// remember the state of the bound property and copy it to both accus
	saveOriginalState() {

		const binding = this.binding;

		const buffer = this.buffer,
			stride = this.valueSize,

			originalValueOffset = stride * this._origIndex;

		binding.getValue( buffer, originalValueOffset );

		// accu[0..1] := orig -- initially detect changes against the original
		for ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {

			buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];

		}

		// Add to identity for additive
		this._setIdentity();

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

	}

	// apply the state previously taken via 'saveOriginalState' to the binding
	restoreOriginalState() {

		const originalValueOffset = this.valueSize * 3;
		this.binding.setValue( this.buffer, originalValueOffset );

	}

	_setAdditiveIdentityNumeric() {

		const startIndex = this._addIndex * this.valueSize;
		const endIndex = startIndex + this.valueSize;

		for ( let i = startIndex; i < endIndex; i ++ ) {

			this.buffer[ i ] = 0;

		}

	}

	_setAdditiveIdentityQuaternion() {

		this._setAdditiveIdentityNumeric();
		this.buffer[ this._addIndex * this.valueSize + 3 ] = 1;

	}

	_setAdditiveIdentityOther() {

		const startIndex = this._origIndex * this.valueSize;
		const targetIndex = this._addIndex * this.valueSize;

		for ( let i = 0; i < this.valueSize; i ++ ) {

			this.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];

		}

	}


	// mix functions

	_select( buffer, dstOffset, srcOffset, t, stride ) {

		if ( t >= 0.5 ) {

			for ( let i = 0; i !== stride; ++ i ) {

				buffer[ dstOffset + i ] = buffer[ srcOffset + i ];

			}

		}

	}

	_slerp( buffer, dstOffset, srcOffset, t ) {

		Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );

	}

	_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {

		const workOffset = this._workIndex * stride;

		// Store result in intermediate buffer offset
		Quaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );

		// Slerp to the intermediate result
		Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );

	}

	_lerp( buffer, dstOffset, srcOffset, t, stride ) {

		const s = 1 - t;

		for ( let i = 0; i !== stride; ++ i ) {

			const j = dstOffset + i;

			buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;

		}

	}

	_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {

		for ( let i = 0; i !== stride; ++ i ) {

			const j = dstOffset + i;

			buffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;

		}

	}

}

// Characters [].:/ are reserved for track binding syntax.
const _RESERVED_CHARS_RE = '\\[\\]\\.:\\/';
const _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );

// Attempts to allow node names from any language. ES5's `\w` regexp matches
// only latin characters, and the unicode \p{L} is not yet supported. So
// instead, we exclude reserved characters and match everything else.
const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';
const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\.', '' ) + ']';

// Parent directories, delimited by '/' or ':'. Currently unused, but must
// be matched to parse the rest of the track name.
const _directoryRe = /((?:WC+[\/:])*)/.source.replace( 'WC', _wordChar );

// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.
const _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );

// Object on target node, and accessor. May not contain reserved
// characters. Accessor may contain any character except closing bracket.
const _objectRe = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace( 'WC', _wordChar );

// Property and accessor. May not contain reserved characters. Accessor may
// contain any non-bracket characters.
const _propertyRe = /\.(WC+)(?:\[(.+)\])?/.source.replace( 'WC', _wordChar );

const _trackRe = new RegExp( ''
	+ '^'
	+ _directoryRe
	+ _nodeRe
	+ _objectRe
	+ _propertyRe
	+ '$'
);

const _supportedObjectNames = [ 'material', 'materials', 'bones' ];

class Composite {

	constructor( targetGroup, path, optionalParsedPath ) {

		const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );

		this._targetGroup = targetGroup;
		this._bindings = targetGroup.subscribe_( path, parsedPath );

	}

	getValue( array, offset ) {

		this.bind(); // bind all binding

		const firstValidIndex = this._targetGroup.nCachedObjects_,
			binding = this._bindings[ firstValidIndex ];

		// and only call .getValue on the first
		if ( binding !== undefined ) binding.getValue( array, offset );

	}

	setValue( array, offset ) {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].setValue( array, offset );

		}

	}

	bind() {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].bind();

		}

	}

	unbind() {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].unbind();

		}

	}

}

// Note: This class uses a State pattern on a per-method basis:
// 'bind' sets 'this.getValue' / 'setValue' and shadows the
// prototype version of these methods with one that represents
// the bound state. When the property is not found, the methods
// become no-ops.
class PropertyBinding {

	constructor( rootNode, path, parsedPath ) {

		this.path = path;
		this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );

		this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;

		this.rootNode = rootNode;

		// initial state of these methods that calls 'bind'
		this.getValue = this._getValue_unbound;
		this.setValue = this._setValue_unbound;

	}


	static create( root, path, parsedPath ) {

		if ( ! ( root && root.isAnimationObjectGroup ) ) {

			return new PropertyBinding( root, path, parsedPath );

		} else {

			return new PropertyBinding.Composite( root, path, parsedPath );

		}

	}

	/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param {string} name Node name to be sanitized.
	 * @return {string}
	 */
	static sanitizeNodeName( name ) {

		return name.replace( /\s/g, '_' ).replace( _reservedRe, '' );

	}

	static parseTrackName( trackName ) {

		const matches = _trackRe.exec( trackName );

		if ( matches === null ) {

			throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );

		}

		const results = {
			// directoryName: matches[ 1 ], // (tschw) currently unused
			nodeName: matches[ 2 ],
			objectName: matches[ 3 ],
			objectIndex: matches[ 4 ],
			propertyName: matches[ 5 ], // required
			propertyIndex: matches[ 6 ]
		};

		const lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );

		if ( lastDot !== undefined && lastDot !== - 1 ) {

			const objectName = results.nodeName.substring( lastDot + 1 );

			// Object names must be checked against an allowlist. Otherwise, there
			// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
			// 'bar' could be the objectName, or part of a nodeName (which can
			// include '.' characters).
			if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {

				results.nodeName = results.nodeName.substring( 0, lastDot );
				results.objectName = objectName;

			}

		}

		if ( results.propertyName === null || results.propertyName.length === 0 ) {

			throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );

		}

		return results;

	}

	static findNode( root, nodeName ) {

		if ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {

			return root;

		}

		// search into skeleton bones.
		if ( root.skeleton ) {

			const bone = root.skeleton.getBoneByName( nodeName );

			if ( bone !== undefined ) {

				return bone;

			}

		}

		// search into node subtree.
		if ( root.children ) {

			const searchNodeSubtree = function ( children ) {

				for ( let i = 0; i < children.length; i ++ ) {

					const childNode = children[ i ];

					if ( childNode.name === nodeName || childNode.uuid === nodeName ) {

						return childNode;

					}

					const result = searchNodeSubtree( childNode.children );

					if ( result ) return result;

				}

				return null;

			};

			const subTreeNode = searchNodeSubtree( root.children );

			if ( subTreeNode ) {

				return subTreeNode;

			}

		}

		return null;

	}

	// these are used to "bind" a nonexistent property
	_getValue_unavailable() {}
	_setValue_unavailable() {}

	// Getters

	_getValue_direct( buffer, offset ) {

		buffer[ offset ] = this.targetObject[ this.propertyName ];

	}

	_getValue_array( buffer, offset ) {

		const source = this.resolvedProperty;

		for ( let i = 0, n = source.length; i !== n; ++ i ) {

			buffer[ offset ++ ] = source[ i ];

		}

	}

	_getValue_arrayElement( buffer, offset ) {

		buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];

	}

	_getValue_toArray( buffer, offset ) {

		this.resolvedProperty.toArray( buffer, offset );

	}

	// Direct

	_setValue_direct( buffer, offset ) {

		this.targetObject[ this.propertyName ] = buffer[ offset ];

	}

	_setValue_direct_setNeedsUpdate( buffer, offset ) {

		this.targetObject[ this.propertyName ] = buffer[ offset ];
		this.targetObject.needsUpdate = true;

	}

	_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {

		this.targetObject[ this.propertyName ] = buffer[ offset ];
		this.targetObject.matrixWorldNeedsUpdate = true;

	}

	// EntireArray

	_setValue_array( buffer, offset ) {

		const dest = this.resolvedProperty;

		for ( let i = 0, n = dest.length; i !== n; ++ i ) {

			dest[ i ] = buffer[ offset ++ ];

		}

	}

	_setValue_array_setNeedsUpdate( buffer, offset ) {

		const dest = this.resolvedProperty;

		for ( let i = 0, n = dest.length; i !== n; ++ i ) {

			dest[ i ] = buffer[ offset ++ ];

		}

		this.targetObject.needsUpdate = true;

	}

	_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {

		const dest = this.resolvedProperty;

		for ( let i = 0, n = dest.length; i !== n; ++ i ) {

			dest[ i ] = buffer[ offset ++ ];

		}

		this.targetObject.matrixWorldNeedsUpdate = true;

	}

	// ArrayElement

	_setValue_arrayElement( buffer, offset ) {

		this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];

	}

	_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {

		this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
		this.targetObject.needsUpdate = true;

	}

	_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {

		this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
		this.targetObject.matrixWorldNeedsUpdate = true;

	}

	// HasToFromArray

	_setValue_fromArray( buffer, offset ) {

		this.resolvedProperty.fromArray( buffer, offset );

	}

	_setValue_fromArray_setNeedsUpdate( buffer, offset ) {

		this.resolvedProperty.fromArray( buffer, offset );
		this.targetObject.needsUpdate = true;

	}

	_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {

		this.resolvedProperty.fromArray( buffer, offset );
		this.targetObject.matrixWorldNeedsUpdate = true;

	}

	_getValue_unbound( targetArray, offset ) {

		this.bind();
		this.getValue( targetArray, offset );

	}

	_setValue_unbound( sourceArray, offset ) {

		this.bind();
		this.setValue( sourceArray, offset );

	}

	// create getter / setter pair for a property in the scene graph
	bind() {

		let targetObject = this.node;
		const parsedPath = this.parsedPath;

		const objectName = parsedPath.objectName;
		const propertyName = parsedPath.propertyName;
		let propertyIndex = parsedPath.propertyIndex;

		if ( ! targetObject ) {

			targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;

			this.node = targetObject;

		}

		// set fail state so we can just 'return' on error
		this.getValue = this._getValue_unavailable;
		this.setValue = this._setValue_unavailable;

		// ensure there is a value node
		if ( ! targetObject ) {

			console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\'t found.' );
			return;

		}

		if ( objectName ) {

			let objectIndex = parsedPath.objectIndex;

			// special cases were we need to reach deeper into the hierarchy to get the face materials....
			switch ( objectName ) {

				case 'materials':

					if ( ! targetObject.material ) {

						console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );
						return;

					}

					if ( ! targetObject.material.materials ) {

						console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );
						return;

					}

					targetObject = targetObject.material.materials;

					break;

				case 'bones':

					if ( ! targetObject.skeleton ) {

						console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );
						return;

					}

					// potential future optimization: skip this if propertyIndex is already an integer
					// and convert the integer string to a true integer.

					targetObject = targetObject.skeleton.bones;

					// support resolving morphTarget names into indices.
					for ( let i = 0; i < targetObject.length; i ++ ) {

						if ( targetObject[ i ].name === objectIndex ) {

							objectIndex = i;
							break;

						}

					}

					break;

				default:

					if ( targetObject[ objectName ] === undefined ) {

						console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );
						return;

					}

					targetObject = targetObject[ objectName ];

			}


			if ( objectIndex !== undefined ) {

				if ( targetObject[ objectIndex ] === undefined ) {

					console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );
					return;

				}

				targetObject = targetObject[ objectIndex ];

			}

		}

		// resolve property
		const nodeProperty = targetObject[ propertyName ];

		if ( nodeProperty === undefined ) {

			const nodeName = parsedPath.nodeName;

			console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +
				'.' + propertyName + ' but it wasn\'t found.', targetObject );
			return;

		}

		// determine versioning scheme
		let versioning = this.Versioning.None;

		this.targetObject = targetObject;

		if ( targetObject.needsUpdate !== undefined ) { // material

			versioning = this.Versioning.NeedsUpdate;

		} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform

			versioning = this.Versioning.MatrixWorldNeedsUpdate;

		}

		// determine how the property gets bound
		let bindingType = this.BindingType.Direct;

		if ( propertyIndex !== undefined ) {

			// access a sub element of the property array (only primitives are supported right now)

			if ( propertyName === 'morphTargetInfluences' ) {

				// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.

				// support resolving morphTarget names into indices.
				if ( ! targetObject.geometry ) {

					console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );
					return;

				}

				if ( targetObject.geometry.isBufferGeometry ) {

					if ( ! targetObject.geometry.morphAttributes ) {

						console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );
						return;

					}

					if ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {

						propertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];

					}


				} else {

					console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );
					return;

				}

			}

			bindingType = this.BindingType.ArrayElement;

			this.resolvedProperty = nodeProperty;
			this.propertyIndex = propertyIndex;

		} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {

			// must use copy for Object3D.Euler/Quaternion

			bindingType = this.BindingType.HasFromToArray;

			this.resolvedProperty = nodeProperty;

		} else if ( Array.isArray( nodeProperty ) ) {

			bindingType = this.BindingType.EntireArray;

			this.resolvedProperty = nodeProperty;

		} else {

			this.propertyName = propertyName;

		}

		// select getter / setter
		this.getValue = this.GetterByBindingType[ bindingType ];
		this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];

	}

	unbind() {

		this.node = null;

		// back to the prototype version of getValue / setValue
		// note: avoiding to mutate the shape of 'this' via 'delete'
		this.getValue = this._getValue_unbound;
		this.setValue = this._setValue_unbound;

	}

}

PropertyBinding.Composite = Composite;

PropertyBinding.prototype.BindingType = {
	Direct: 0,
	EntireArray: 1,
	ArrayElement: 2,
	HasFromToArray: 3
};

PropertyBinding.prototype.Versioning = {
	None: 0,
	NeedsUpdate: 1,
	MatrixWorldNeedsUpdate: 2
};

PropertyBinding.prototype.GetterByBindingType = [

	PropertyBinding.prototype._getValue_direct,
	PropertyBinding.prototype._getValue_array,
	PropertyBinding.prototype._getValue_arrayElement,
	PropertyBinding.prototype._getValue_toArray,

];

PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [

	[
		// Direct
		PropertyBinding.prototype._setValue_direct,
		PropertyBinding.prototype._setValue_direct_setNeedsUpdate,
		PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,

	], [

		// EntireArray

		PropertyBinding.prototype._setValue_array,
		PropertyBinding.prototype._setValue_array_setNeedsUpdate,
		PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,

	], [

		// ArrayElement
		PropertyBinding.prototype._setValue_arrayElement,
		PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,
		PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,

	], [

		// HasToFromArray
		PropertyBinding.prototype._setValue_fromArray,
		PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,
		PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,

	]

];

/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 *  - Add objects you would otherwise pass as 'root' to the
 *    constructor or the .clipAction method of AnimationMixer.
 *
 *  - Instead pass this object as 'root'.
 *
 *  - You can also add and remove objects later when the mixer
 *    is running.
 *
 * Note:
 *
 *    Objects of this class appear as one object to the mixer,
 *    so cache control of the individual objects must be done
 *    on the group.
 *
 * Limitation:
 *
 *  - The animated properties must be compatible among the
 *    all objects in the group.
 *
 *  - A single property can either be controlled through a
 *    target group or directly, but not both.
 */

class AnimationObjectGroup {

	constructor() {

		this.uuid = generateUUID();

		// cached objects followed by the active ones
		this._objects = Array.prototype.slice.call( arguments );

		this.nCachedObjects_ = 0; // threshold
		// note: read by PropertyBinding.Composite

		const indices = {};
		this._indicesByUUID = indices; // for bookkeeping

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			indices[ arguments[ i ].uuid ] = i;

		}

		this._paths = []; // inside: string
		this._parsedPaths = []; // inside: { we don't care, here }
		this._bindings = []; // inside: Array< PropertyBinding >
		this._bindingsIndicesByPath = {}; // inside: indices in these arrays

		const scope = this;

		this.stats = {

			objects: {
				get total() {

					return scope._objects.length;

				},
				get inUse() {

					return this.total - scope.nCachedObjects_;

				}
			},
			get bindingsPerObject() {

				return scope._bindings.length;

			}

		};

	}

	add() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			paths = this._paths,
			parsedPaths = this._parsedPaths,
			bindings = this._bindings,
			nBindings = bindings.length;

		let knownObject = undefined,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid;
			let index = indicesByUUID[ uuid ];

			if ( index === undefined ) {

				// unknown object -> add it to the ACTIVE region

				index = nObjects ++;
				indicesByUUID[ uuid ] = index;
				objects.push( object );

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );

				}

			} else if ( index < nCachedObjects ) {

				knownObject = objects[ index ];

				// move existing object to the ACTIVE region

				const firstActiveIndex = -- nCachedObjects,
					lastCachedObject = objects[ firstActiveIndex ];

				indicesByUUID[ lastCachedObject.uuid ] = index;
				objects[ index ] = lastCachedObject;

				indicesByUUID[ uuid ] = firstActiveIndex;
				objects[ firstActiveIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					const bindingsForPath = bindings[ j ],
						lastCached = bindingsForPath[ firstActiveIndex ];

					let binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = lastCached;

					if ( binding === undefined ) {

						// since we do not bother to create new bindings
						// for objects that are cached, the binding may
						// or may not exist

						binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );

					}

					bindingsForPath[ firstActiveIndex ] = binding;

				}

			} else if ( objects[ index ] !== knownObject ) {

				console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +
					'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );

			} // else the object is already where we want it to be

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	remove() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		let nCachedObjects = this.nCachedObjects_;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined && index >= nCachedObjects ) {

				// move existing object into the CACHED region

				const lastCachedIndex = nCachedObjects ++,
					firstActiveObject = objects[ lastCachedIndex ];

				indicesByUUID[ firstActiveObject.uuid ] = index;
				objects[ index ] = firstActiveObject;

				indicesByUUID[ uuid ] = lastCachedIndex;
				objects[ lastCachedIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					const bindingsForPath = bindings[ j ],
						firstActive = bindingsForPath[ lastCachedIndex ],
						binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = firstActive;
					bindingsForPath[ lastCachedIndex ] = binding;

				}

			}

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	// remove & forget
	uncache() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		let nCachedObjects = this.nCachedObjects_,
			nObjects = objects.length;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined ) {

				delete indicesByUUID[ uuid ];

				if ( index < nCachedObjects ) {

					// object is cached, shrink the CACHED region

					const firstActiveIndex = -- nCachedObjects,
						lastCachedObject = objects[ firstActiveIndex ],
						lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					// last cached object takes this object's place
					indicesByUUID[ lastCachedObject.uuid ] = index;
					objects[ index ] = lastCachedObject;

					// last object goes to the activated slot and pop
					indicesByUUID[ lastObject.uuid ] = firstActiveIndex;
					objects[ firstActiveIndex ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( let j = 0, m = nBindings; j !== m; ++ j ) {

						const bindingsForPath = bindings[ j ],
							lastCached = bindingsForPath[ firstActiveIndex ],
							last = bindingsForPath[ lastIndex ];

						bindingsForPath[ index ] = lastCached;
						bindingsForPath[ firstActiveIndex ] = last;
						bindingsForPath.pop();

					}

				} else {

					// object is active, just swap with the last and pop

					const lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					if ( lastIndex > 0 ) {

						indicesByUUID[ lastObject.uuid ] = index;

					}

					objects[ index ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( let j = 0, m = nBindings; j !== m; ++ j ) {

						const bindingsForPath = bindings[ j ];

						bindingsForPath[ index ] = bindingsForPath[ lastIndex ];
						bindingsForPath.pop();

					}

				} // cached or active

			} // if object is known

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	// Internal interface used by befriended PropertyBinding.Composite:

	subscribe_( path, parsedPath ) {

		// returns an array of bindings for the given path that is changed
		// according to the contained objects in the group

		const indicesByPath = this._bindingsIndicesByPath;
		let index = indicesByPath[ path ];
		const bindings = this._bindings;

		if ( index !== undefined ) return bindings[ index ];

		const paths = this._paths,
			parsedPaths = this._parsedPaths,
			objects = this._objects,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_,
			bindingsForPath = new Array( nObjects );

		index = bindings.length;

		indicesByPath[ path ] = index;

		paths.push( path );
		parsedPaths.push( parsedPath );
		bindings.push( bindingsForPath );

		for ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {

			const object = objects[ i ];
			bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );

		}

		return bindingsForPath;

	}

	unsubscribe_( path ) {

		// tells the group to forget about a property path and no longer
		// update the array previously obtained with 'subscribe_'

		const indicesByPath = this._bindingsIndicesByPath,
			index = indicesByPath[ path ];

		if ( index !== undefined ) {

			const paths = this._paths,
				parsedPaths = this._parsedPaths,
				bindings = this._bindings,
				lastBindingsIndex = bindings.length - 1,
				lastBindings = bindings[ lastBindingsIndex ],
				lastBindingsPath = path[ lastBindingsIndex ];

			indicesByPath[ lastBindingsPath ] = index;

			bindings[ index ] = lastBindings;
			bindings.pop();

			parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];
			parsedPaths.pop();

			paths[ index ] = paths[ lastBindingsIndex ];
			paths.pop();

		}

	}

}

AnimationObjectGroup.prototype.isAnimationObjectGroup = true;

class AnimationAction {

	constructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {

		this._mixer = mixer;
		this._clip = clip;
		this._localRoot = localRoot;
		this.blendMode = blendMode;

		const tracks = clip.tracks,
			nTracks = tracks.length,
			interpolants = new Array( nTracks );

		const interpolantSettings = {
			endingStart: ZeroCurvatureEnding,
			endingEnd: ZeroCurvatureEnding
		};

		for ( let i = 0; i !== nTracks; ++ i ) {

			const interpolant = tracks[ i ].createInterpolant( null );
			interpolants[ i ] = interpolant;
			interpolant.settings = interpolantSettings;

		}

		this._interpolantSettings = interpolantSettings;

		this._interpolants = interpolants; // bound by the mixer

		// inside: PropertyMixer (managed by the mixer)
		this._propertyBindings = new Array( nTracks );

		this._cacheIndex = null; // for the memory manager
		this._byClipCacheIndex = null; // for the memory manager

		this._timeScaleInterpolant = null;
		this._weightInterpolant = null;

		this.loop = LoopRepeat;
		this._loopCount = - 1;

		// global mixer time when the action is to be started
		// it's set back to 'null' upon start of the action
		this._startTime = null;

		// scaled local time of the action
		// gets clamped or wrapped to 0..clip.duration according to loop
		this.time = 0;

		this.timeScale = 1;
		this._effectiveTimeScale = 1;

		this.weight = 1;
		this._effectiveWeight = 1;

		this.repetitions = Infinity; // no. of repetitions when looping

		this.paused = false; // true -> zero effective time scale
		this.enabled = true; // false -> zero effective weight

		this.clampWhenFinished = false;// keep feeding the last frame?

		this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate
		this.zeroSlopeAtEnd = true;// clips for start, loop and end

	}

	// State & Scheduling

	play() {

		this._mixer._activateAction( this );

		return this;

	}

	stop() {

		this._mixer._deactivateAction( this );

		return this.reset();

	}

	reset() {

		this.paused = false;
		this.enabled = true;

		this.time = 0; // restart clip
		this._loopCount = - 1;// forget previous loops
		this._startTime = null;// forget scheduling

		return this.stopFading().stopWarping();

	}

	isRunning() {

		return this.enabled && ! this.paused && this.timeScale !== 0 &&
			this._startTime === null && this._mixer._isActiveAction( this );

	}

	// return true when play has been called
	isScheduled() {

		return this._mixer._isActiveAction( this );

	}

	startAt( time ) {

		this._startTime = time;

		return this;

	}

	setLoop( mode, repetitions ) {

		this.loop = mode;
		this.repetitions = repetitions;

		return this;

	}

	// Weight

	// set the weight stopping any scheduled fading
	// although .enabled = false yields an effective weight of zero, this
	// method does *not* change .enabled, because it would be confusing
	setEffectiveWeight( weight ) {

		this.weight = weight;

		// note: same logic as when updated at runtime
		this._effectiveWeight = this.enabled ? weight : 0;

		return this.stopFading();

	}

	// return the weight considering fading and .enabled
	getEffectiveWeight() {

		return this._effectiveWeight;

	}

	fadeIn( duration ) {

		return this._scheduleFading( duration, 0, 1 );

	}

	fadeOut( duration ) {

		return this._scheduleFading( duration, 1, 0 );

	}

	crossFadeFrom( fadeOutAction, duration, warp ) {

		fadeOutAction.fadeOut( duration );
		this.fadeIn( duration );

		if ( warp ) {

			const fadeInDuration = this._clip.duration,
				fadeOutDuration = fadeOutAction._clip.duration,

				startEndRatio = fadeOutDuration / fadeInDuration,
				endStartRatio = fadeInDuration / fadeOutDuration;

			fadeOutAction.warp( 1.0, startEndRatio, duration );
			this.warp( endStartRatio, 1.0, duration );

		}

		return this;

	}

	crossFadeTo( fadeInAction, duration, warp ) {

		return fadeInAction.crossFadeFrom( this, duration, warp );

	}

	stopFading() {

		const weightInterpolant = this._weightInterpolant;

		if ( weightInterpolant !== null ) {

			this._weightInterpolant = null;
			this._mixer._takeBackControlInterpolant( weightInterpolant );

		}

		return this;

	}

	// Time Scale Control

	// set the time scale stopping any scheduled warping
	// although .paused = true yields an effective time scale of zero, this
	// method does *not* change .paused, because it would be confusing
	setEffectiveTimeScale( timeScale ) {

		this.timeScale = timeScale;
		this._effectiveTimeScale = this.paused ? 0 : timeScale;

		return this.stopWarping();

	}

	// return the time scale considering warping and .paused
	getEffectiveTimeScale() {

		return this._effectiveTimeScale;

	}

	setDuration( duration ) {

		this.timeScale = this._clip.duration / duration;

		return this.stopWarping();

	}

	syncWith( action ) {

		this.time = action.time;
		this.timeScale = action.timeScale;

		return this.stopWarping();

	}

	halt( duration ) {

		return this.warp( this._effectiveTimeScale, 0, duration );

	}

	warp( startTimeScale, endTimeScale, duration ) {

		const mixer = this._mixer,
			now = mixer.time,
			timeScale = this.timeScale;

		let interpolant = this._timeScaleInterpolant;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._timeScaleInterpolant = interpolant;

		}

		const times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now;
		times[ 1 ] = now + duration;

		values[ 0 ] = startTimeScale / timeScale;
		values[ 1 ] = endTimeScale / timeScale;

		return this;

	}

	stopWarping() {

		const timeScaleInterpolant = this._timeScaleInterpolant;

		if ( timeScaleInterpolant !== null ) {

			this._timeScaleInterpolant = null;
			this._mixer._takeBackControlInterpolant( timeScaleInterpolant );

		}

		return this;

	}

	// Object Accessors

	getMixer() {

		return this._mixer;

	}

	getClip() {

		return this._clip;

	}

	getRoot() {

		return this._localRoot || this._mixer._root;

	}

	// Interna

	_update( time, deltaTime, timeDirection, accuIndex ) {

		// called by the mixer

		if ( ! this.enabled ) {

			// call ._updateWeight() to update ._effectiveWeight

			this._updateWeight( time );
			return;

		}

		const startTime = this._startTime;

		if ( startTime !== null ) {

			// check for scheduled start of action

			const timeRunning = ( time - startTime ) * timeDirection;
			if ( timeRunning < 0 || timeDirection === 0 ) {

				return; // yet to come / don't decide when delta = 0

			}

			// start

			this._startTime = null; // unschedule
			deltaTime = timeDirection * timeRunning;

		}

		// apply time scale and advance time

		deltaTime *= this._updateTimeScale( time );
		const clipTime = this._updateTime( deltaTime );

		// note: _updateTime may disable the action resulting in
		// an effective weight of 0

		const weight = this._updateWeight( time );

		if ( weight > 0 ) {

			const interpolants = this._interpolants;
			const propertyMixers = this._propertyBindings;

			switch ( this.blendMode ) {

				case AdditiveAnimationBlendMode:

					for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {

						interpolants[ j ].evaluate( clipTime );
						propertyMixers[ j ].accumulateAdditive( weight );

					}

					break;

				case NormalAnimationBlendMode:
				default:

					for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {

						interpolants[ j ].evaluate( clipTime );
						propertyMixers[ j ].accumulate( accuIndex, weight );

					}

			}

		}

	}

	_updateWeight( time ) {

		let weight = 0;

		if ( this.enabled ) {

			weight = this.weight;
			const interpolant = this._weightInterpolant;

			if ( interpolant !== null ) {

				const interpolantValue = interpolant.evaluate( time )[ 0 ];

				weight *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopFading();

					if ( interpolantValue === 0 ) {

						// faded out, disable
						this.enabled = false;

					}

				}

			}

		}

		this._effectiveWeight = weight;
		return weight;

	}

	_updateTimeScale( time ) {

		let timeScale = 0;

		if ( ! this.paused ) {

			timeScale = this.timeScale;

			const interpolant = this._timeScaleInterpolant;

			if ( interpolant !== null ) {

				const interpolantValue = interpolant.evaluate( time )[ 0 ];

				timeScale *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopWarping();

					if ( timeScale === 0 ) {

						// motion has halted, pause
						this.paused = true;

					} else {

						// warp done - apply final time scale
						this.timeScale = timeScale;

					}

				}

			}

		}

		this._effectiveTimeScale = timeScale;
		return timeScale;

	}

	_updateTime( deltaTime ) {

		const duration = this._clip.duration;
		const loop = this.loop;

		let time = this.time + deltaTime;
		let loopCount = this._loopCount;

		const pingPong = ( loop === LoopPingPong );

		if ( deltaTime === 0 ) {

			if ( loopCount === - 1 ) return time;

			return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;

		}

		if ( loop === LoopOnce ) {

			if ( loopCount === - 1 ) {

				// just started

				this._loopCount = 0;
				this._setEndings( true, true, false );

			}

			handle_stop: {

				if ( time >= duration ) {

					time = duration;

				} else if ( time < 0 ) {

					time = 0;

				} else {

					this.time = time;

					break handle_stop;

				}

				if ( this.clampWhenFinished ) this.paused = true;
				else this.enabled = false;

				this.time = time;

				this._mixer.dispatchEvent( {
					type: 'finished', action: this,
					direction: deltaTime < 0 ? - 1 : 1
				} );

			}

		} else { // repetitive Repeat or PingPong

			if ( loopCount === - 1 ) {

				// just started

				if ( deltaTime >= 0 ) {

					loopCount = 0;

					this._setEndings( true, this.repetitions === 0, pingPong );

				} else {

					// when looping in reverse direction, the initial
					// transition through zero counts as a repetition,
					// so leave loopCount at -1

					this._setEndings( this.repetitions === 0, true, pingPong );

				}

			}

			if ( time >= duration || time < 0 ) {

				// wrap around

				const loopDelta = Math.floor( time / duration ); // signed
				time -= duration * loopDelta;

				loopCount += Math.abs( loopDelta );

				const pending = this.repetitions - loopCount;

				if ( pending <= 0 ) {

					// have to stop (switch state, clamp time, fire event)

					if ( this.clampWhenFinished ) this.paused = true;
					else this.enabled = false;

					time = deltaTime > 0 ? duration : 0;

					this.time = time;

					this._mixer.dispatchEvent( {
						type: 'finished', action: this,
						direction: deltaTime > 0 ? 1 : - 1
					} );

				} else {

					// keep running

					if ( pending === 1 ) {

						// entering the last round

						const atStart = deltaTime < 0;
						this._setEndings( atStart, ! atStart, pingPong );

					} else {

						this._setEndings( false, false, pingPong );

					}

					this._loopCount = loopCount;

					this.time = time;

					this._mixer.dispatchEvent( {
						type: 'loop', action: this, loopDelta: loopDelta
					} );

				}

			} else {

				this.time = time;

			}

			if ( pingPong && ( loopCount & 1 ) === 1 ) {

				// invert time for the "pong round"

				return duration - time;

			}

		}

		return time;

	}

	_setEndings( atStart, atEnd, pingPong ) {

		const settings = this._interpolantSettings;

		if ( pingPong ) {

			settings.endingStart = ZeroSlopeEnding;
			settings.endingEnd = ZeroSlopeEnding;

		} else {

			// assuming for LoopOnce atStart == atEnd == true

			if ( atStart ) {

				settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingStart = WrapAroundEnding;

			}

			if ( atEnd ) {

				settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingEnd 	 = WrapAroundEnding;

			}

		}

	}

	_scheduleFading( duration, weightNow, weightThen ) {

		const mixer = this._mixer, now = mixer.time;
		let interpolant = this._weightInterpolant;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._weightInterpolant = interpolant;

		}

		const times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now;
		values[ 0 ] = weightNow;
		times[ 1 ] = now + duration;
		values[ 1 ] = weightThen;

		return this;

	}

}

class AnimationMixer extends EventDispatcher {

	constructor( root ) {

		super();

		this._root = root;
		this._initMemoryManager();
		this._accuIndex = 0;
		this.time = 0;
		this.timeScale = 1.0;

	}

	_bindAction( action, prototypeAction ) {

		const root = action._localRoot || this._root,
			tracks = action._clip.tracks,
			nTracks = tracks.length,
			bindings = action._propertyBindings,
			interpolants = action._interpolants,
			rootUuid = root.uuid,
			bindingsByRoot = this._bindingsByRootAndName;

		let bindingsByName = bindingsByRoot[ rootUuid ];

		if ( bindingsByName === undefined ) {

			bindingsByName = {};
			bindingsByRoot[ rootUuid ] = bindingsByName;

		}

		for ( let i = 0; i !== nTracks; ++ i ) {

			const track = tracks[ i ],
				trackName = track.name;

			let binding = bindingsByName[ trackName ];

			if ( binding !== undefined ) {

				++ binding.referenceCount;
				bindings[ i ] = binding;

			} else {

				binding = bindings[ i ];

				if ( binding !== undefined ) {

					// existing binding, make sure the cache knows

					if ( binding._cacheIndex === null ) {

						++ binding.referenceCount;
						this._addInactiveBinding( binding, rootUuid, trackName );

					}

					continue;

				}

				const path = prototypeAction && prototypeAction.
					_propertyBindings[ i ].binding.parsedPath;

				binding = new PropertyMixer(
					PropertyBinding.create( root, trackName, path ),
					track.ValueTypeName, track.getValueSize() );

				++ binding.referenceCount;
				this._addInactiveBinding( binding, rootUuid, trackName );

				bindings[ i ] = binding;

			}

			interpolants[ i ].resultBuffer = binding.buffer;

		}

	}

	_activateAction( action ) {

		if ( ! this._isActiveAction( action ) ) {

			if ( action._cacheIndex === null ) {

				// this action has been forgotten by the cache, but the user
				// appears to be still using it -> rebind

				const rootUuid = ( action._localRoot || this._root ).uuid,
					clipUuid = action._clip.uuid,
					actionsForClip = this._actionsByClip[ clipUuid ];

				this._bindAction( action,
					actionsForClip && actionsForClip.knownActions[ 0 ] );

				this._addInactiveAction( action, clipUuid, rootUuid );

			}

			const bindings = action._propertyBindings;

			// increment reference counts / sort out state
			for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

				const binding = bindings[ i ];

				if ( binding.useCount ++ === 0 ) {

					this._lendBinding( binding );
					binding.saveOriginalState();

				}

			}

			this._lendAction( action );

		}

	}

	_deactivateAction( action ) {

		if ( this._isActiveAction( action ) ) {

			const bindings = action._propertyBindings;

			// decrement reference counts / sort out state
			for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

				const binding = bindings[ i ];

				if ( -- binding.useCount === 0 ) {

					binding.restoreOriginalState();
					this._takeBackBinding( binding );

				}

			}

			this._takeBackAction( action );

		}

	}

	// Memory manager

	_initMemoryManager() {

		this._actions = []; // 'nActiveActions' followed by inactive ones
		this._nActiveActions = 0;

		this._actionsByClip = {};
		// inside:
		// {
		// 	knownActions: Array< AnimationAction > - used as prototypes
		// 	actionByRoot: AnimationAction - lookup
		// }


		this._bindings = []; // 'nActiveBindings' followed by inactive ones
		this._nActiveBindings = 0;

		this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >


		this._controlInterpolants = []; // same game as above
		this._nActiveControlInterpolants = 0;

		const scope = this;

		this.stats = {

			actions: {
				get total() {

					return scope._actions.length;

				},
				get inUse() {

					return scope._nActiveActions;

				}
			},
			bindings: {
				get total() {

					return scope._bindings.length;

				},
				get inUse() {

					return scope._nActiveBindings;

				}
			},
			controlInterpolants: {
				get total() {

					return scope._controlInterpolants.length;

				},
				get inUse() {

					return scope._nActiveControlInterpolants;

				}
			}

		};

	}

	// Memory management for AnimationAction objects

	_isActiveAction( action ) {

		const index = action._cacheIndex;
		return index !== null && index < this._nActiveActions;

	}

	_addInactiveAction( action, clipUuid, rootUuid ) {

		const actions = this._actions,
			actionsByClip = this._actionsByClip;

		let actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip === undefined ) {

			actionsForClip = {

				knownActions: [ action ],
				actionByRoot: {}

			};

			action._byClipCacheIndex = 0;

			actionsByClip[ clipUuid ] = actionsForClip;

		} else {

			const knownActions = actionsForClip.knownActions;

			action._byClipCacheIndex = knownActions.length;
			knownActions.push( action );

		}

		action._cacheIndex = actions.length;
		actions.push( action );

		actionsForClip.actionByRoot[ rootUuid ] = action;

	}

	_removeInactiveAction( action ) {

		const actions = this._actions,
			lastInactiveAction = actions[ actions.length - 1 ],
			cacheIndex = action._cacheIndex;

		lastInactiveAction._cacheIndex = cacheIndex;
		actions[ cacheIndex ] = lastInactiveAction;
		actions.pop();

		action._cacheIndex = null;


		const clipUuid = action._clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ],
			knownActionsForClip = actionsForClip.knownActions,

			lastKnownAction =
				knownActionsForClip[ knownActionsForClip.length - 1 ],

			byClipCacheIndex = action._byClipCacheIndex;

		lastKnownAction._byClipCacheIndex = byClipCacheIndex;
		knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;
		knownActionsForClip.pop();

		action._byClipCacheIndex = null;


		const actionByRoot = actionsForClip.actionByRoot,
			rootUuid = ( action._localRoot || this._root ).uuid;

		delete actionByRoot[ rootUuid ];

		if ( knownActionsForClip.length === 0 ) {

			delete actionsByClip[ clipUuid ];

		}

		this._removeInactiveBindingsForAction( action );

	}

	_removeInactiveBindingsForAction( action ) {

		const bindings = action._propertyBindings;

		for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

			const binding = bindings[ i ];

			if ( -- binding.referenceCount === 0 ) {

				this._removeInactiveBinding( binding );

			}

		}

	}

	_lendAction( action ) {

		// [ active actions |  inactive actions  ]
		// [  active actions >| inactive actions ]
		//                 s        a
		//                  <-swap->
		//                 a        s

		const actions = this._actions,
			prevIndex = action._cacheIndex,

			lastActiveIndex = this._nActiveActions ++,

			firstInactiveAction = actions[ lastActiveIndex ];

		action._cacheIndex = lastActiveIndex;
		actions[ lastActiveIndex ] = action;

		firstInactiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = firstInactiveAction;

	}

	_takeBackAction( action ) {

		// [  active actions  | inactive actions ]
		// [ active actions |< inactive actions  ]
		//        a        s
		//         <-swap->
		//        s        a

		const actions = this._actions,
			prevIndex = action._cacheIndex,

			firstInactiveIndex = -- this._nActiveActions,

			lastActiveAction = actions[ firstInactiveIndex ];

		action._cacheIndex = firstInactiveIndex;
		actions[ firstInactiveIndex ] = action;

		lastActiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = lastActiveAction;

	}

	// Memory management for PropertyMixer objects

	_addInactiveBinding( binding, rootUuid, trackName ) {

		const bindingsByRoot = this._bindingsByRootAndName,
			bindings = this._bindings;

		let bindingByName = bindingsByRoot[ rootUuid ];

		if ( bindingByName === undefined ) {

			bindingByName = {};
			bindingsByRoot[ rootUuid ] = bindingByName;

		}

		bindingByName[ trackName ] = binding;

		binding._cacheIndex = bindings.length;
		bindings.push( binding );

	}

	_removeInactiveBinding( binding ) {

		const bindings = this._bindings,
			propBinding = binding.binding,
			rootUuid = propBinding.rootNode.uuid,
			trackName = propBinding.path,
			bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ],

			lastInactiveBinding = bindings[ bindings.length - 1 ],
			cacheIndex = binding._cacheIndex;

		lastInactiveBinding._cacheIndex = cacheIndex;
		bindings[ cacheIndex ] = lastInactiveBinding;
		bindings.pop();

		delete bindingByName[ trackName ];

		if ( Object.keys( bindingByName ).length === 0 ) {

			delete bindingsByRoot[ rootUuid ];

		}

	}

	_lendBinding( binding ) {

		const bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			lastActiveIndex = this._nActiveBindings ++,

			firstInactiveBinding = bindings[ lastActiveIndex ];

		binding._cacheIndex = lastActiveIndex;
		bindings[ lastActiveIndex ] = binding;

		firstInactiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = firstInactiveBinding;

	}

	_takeBackBinding( binding ) {

		const bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			firstInactiveIndex = -- this._nActiveBindings,

			lastActiveBinding = bindings[ firstInactiveIndex ];

		binding._cacheIndex = firstInactiveIndex;
		bindings[ firstInactiveIndex ] = binding;

		lastActiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = lastActiveBinding;

	}


	// Memory management of Interpolants for weight and time scale

	_lendControlInterpolant() {

		const interpolants = this._controlInterpolants,
			lastActiveIndex = this._nActiveControlInterpolants ++;

		let interpolant = interpolants[ lastActiveIndex ];

		if ( interpolant === undefined ) {

			interpolant = new LinearInterpolant(
				new Float32Array( 2 ), new Float32Array( 2 ),
				1, this._controlInterpolantsResultBuffer );

			interpolant.__cacheIndex = lastActiveIndex;
			interpolants[ lastActiveIndex ] = interpolant;

		}

		return interpolant;

	}

	_takeBackControlInterpolant( interpolant ) {

		const interpolants = this._controlInterpolants,
			prevIndex = interpolant.__cacheIndex,

			firstInactiveIndex = -- this._nActiveControlInterpolants,

			lastActiveInterpolant = interpolants[ firstInactiveIndex ];

		interpolant.__cacheIndex = firstInactiveIndex;
		interpolants[ firstInactiveIndex ] = interpolant;

		lastActiveInterpolant.__cacheIndex = prevIndex;
		interpolants[ prevIndex ] = lastActiveInterpolant;

	}

	// return an action for a clip optionally using a custom root target
	// object (this method allocates a lot of dynamic memory in case a
	// previously unknown clip/root combination is specified)
	clipAction( clip, optionalRoot, blendMode ) {

		const root = optionalRoot || this._root,
			rootUuid = root.uuid;

		let clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;

		const clipUuid = clipObject !== null ? clipObject.uuid : clip;

		const actionsForClip = this._actionsByClip[ clipUuid ];
		let prototypeAction = null;

		if ( blendMode === undefined ) {

			if ( clipObject !== null ) {

				blendMode = clipObject.blendMode;

			} else {

				blendMode = NormalAnimationBlendMode;

			}

		}

		if ( actionsForClip !== undefined ) {

			const existingAction = actionsForClip.actionByRoot[ rootUuid ];

			if ( existingAction !== undefined && existingAction.blendMode === blendMode ) {

				return existingAction;

			}

			// we know the clip, so we don't have to parse all
			// the bindings again but can just copy
			prototypeAction = actionsForClip.knownActions[ 0 ];

			// also, take the clip from the prototype action
			if ( clipObject === null )
				clipObject = prototypeAction._clip;

		}

		// clip must be known when specified via string
		if ( clipObject === null ) return null;

		// allocate all resources required to run it
		const newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );

		this._bindAction( newAction, prototypeAction );

		// and make the action known to the memory manager
		this._addInactiveAction( newAction, clipUuid, rootUuid );

		return newAction;

	}

	// get an existing action
	existingAction( clip, optionalRoot ) {

		const root = optionalRoot || this._root,
			rootUuid = root.uuid,

			clipObject = typeof clip === 'string' ?
				AnimationClip.findByName( root, clip ) : clip,

			clipUuid = clipObject ? clipObject.uuid : clip,

			actionsForClip = this._actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			return actionsForClip.actionByRoot[ rootUuid ] || null;

		}

		return null;

	}

	// deactivates all previously scheduled actions
	stopAllAction() {

		const actions = this._actions,
			nActions = this._nActiveActions;

		for ( let i = nActions - 1; i >= 0; -- i ) {

			actions[ i ].stop();

		}

		return this;

	}

	// advance the time and update apply the animation
	update( deltaTime ) {

		deltaTime *= this.timeScale;

		const actions = this._actions,
			nActions = this._nActiveActions,

			time = this.time += deltaTime,
			timeDirection = Math.sign( deltaTime ),

			accuIndex = this._accuIndex ^= 1;

		// run active actions

		for ( let i = 0; i !== nActions; ++ i ) {

			const action = actions[ i ];

			action._update( time, deltaTime, timeDirection, accuIndex );

		}

		// update scene graph

		const bindings = this._bindings,
			nBindings = this._nActiveBindings;

		for ( let i = 0; i !== nBindings; ++ i ) {

			bindings[ i ].apply( accuIndex );

		}

		return this;

	}

	// Allows you to seek to a specific time in an animation.
	setTime( timeInSeconds ) {

		this.time = 0; // Zero out time attribute for AnimationMixer object;
		for ( let i = 0; i < this._actions.length; i ++ ) {

			this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.

		}

		return this.update( timeInSeconds ); // Update used to set exact time. Returns "this" AnimationMixer object.

	}

	// return this mixer's root target object
	getRoot() {

		return this._root;

	}

	// free all resources specific to a particular clip
	uncacheClip( clip ) {

		const actions = this._actions,
			clipUuid = clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			// note: just calling _removeInactiveAction would mess up the
			// iteration state and also require updating the state we can
			// just throw away

			const actionsToRemove = actionsForClip.knownActions;

			for ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {

				const action = actionsToRemove[ i ];

				this._deactivateAction( action );

				const cacheIndex = action._cacheIndex,
					lastInactiveAction = actions[ actions.length - 1 ];

				action._cacheIndex = null;
				action._byClipCacheIndex = null;

				lastInactiveAction._cacheIndex = cacheIndex;
				actions[ cacheIndex ] = lastInactiveAction;
				actions.pop();

				this._removeInactiveBindingsForAction( action );

			}

			delete actionsByClip[ clipUuid ];

		}

	}

	// free all resources specific to a particular root target object
	uncacheRoot( root ) {

		const rootUuid = root.uuid,
			actionsByClip = this._actionsByClip;

		for ( const clipUuid in actionsByClip ) {

			const actionByRoot = actionsByClip[ clipUuid ].actionByRoot,
				action = actionByRoot[ rootUuid ];

			if ( action !== undefined ) {

				this._deactivateAction( action );
				this._removeInactiveAction( action );

			}

		}

		const bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ];

		if ( bindingByName !== undefined ) {

			for ( const trackName in bindingByName ) {

				const binding = bindingByName[ trackName ];
				binding.restoreOriginalState();
				this._removeInactiveBinding( binding );

			}

		}

	}

	// remove a targeted clip from the cache
	uncacheAction( clip, optionalRoot ) {

		const action = this.existingAction( clip, optionalRoot );

		if ( action !== null ) {

			this._deactivateAction( action );
			this._removeInactiveAction( action );

		}

	}

}

AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );

class Uniform {

	constructor( value ) {

		if ( typeof value === 'string' ) {

			console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );
			value = arguments[ 1 ];

		}

		this.value = value;

	}

	clone() {

		return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );

	}

}

class InstancedInterleavedBuffer extends InterleavedBuffer {

	constructor( array, stride, meshPerAttribute = 1 ) {

		super( array, stride );

		this.meshPerAttribute = meshPerAttribute;

	}

	copy( source ) {

		super.copy( source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	}

	clone( data ) {

		const ib = super.clone( data );

		ib.meshPerAttribute = this.meshPerAttribute;

		return ib;

	}

	toJSON( data ) {

		const json = super.toJSON( data );

		json.isInstancedInterleavedBuffer = true;
		json.meshPerAttribute = this.meshPerAttribute;

		return json;

	}

}

InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;

class GLBufferAttribute {

	constructor( buffer, type, itemSize, elementSize, count ) {

		this.buffer = buffer;
		this.type = type;
		this.itemSize = itemSize;
		this.elementSize = elementSize;
		this.count = count;

		this.version = 0;

	}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

	setBuffer( buffer ) {

		this.buffer = buffer;

		return this;

	}

	setType( type, elementSize ) {

		this.type = type;
		this.elementSize = elementSize;

		return this;

	}

	setItemSize( itemSize ) {

		this.itemSize = itemSize;

		return this;

	}

	setCount( count ) {

		this.count = count;

		return this;

	}

}

GLBufferAttribute.prototype.isGLBufferAttribute = true;

class Raycaster {

	constructor( origin, direction, near = 0, far = Infinity ) {

		this.ray = new Ray( origin, direction );
		// direction is assumed to be normalized (for accurate distance calculations)

		this.near = near;
		this.far = far;
		this.camera = null;
		this.layers = new Layers();

		this.params = {
			Mesh: {},
			Line: { threshold: 1 },
			LOD: {},
			Points: { threshold: 1 },
			Sprite: {}
		};

	}

	set( origin, direction ) {

		// direction is assumed to be normalized (for accurate distance calculations)

		this.ray.set( origin, direction );

	}

	setFromCamera( coords, camera ) {

		if ( camera.isPerspectiveCamera ) {

			this.ray.origin.setFromMatrixPosition( camera.matrixWorld );
			this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();
			this.camera = camera;

		} else if ( camera.isOrthographicCamera ) {

			this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera
			this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );
			this.camera = camera;

		} else {

			console.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );

		}

	}

	intersectObject( object, recursive = true, intersects = [] ) {

		intersectObject( object, this, intersects, recursive );

		intersects.sort( ascSort );

		return intersects;

	}

	intersectObjects( objects, recursive = true, intersects = [] ) {

		for ( let i = 0, l = objects.length; i < l; i ++ ) {

			intersectObject( objects[ i ], this, intersects, recursive );

		}

		intersects.sort( ascSort );

		return intersects;

	}

}

function ascSort( a, b ) {

	return a.distance - b.distance;

}

function intersectObject( object, raycaster, intersects, recursive ) {

	if ( object.layers.test( raycaster.layers ) ) {

		object.raycast( raycaster, intersects );

	}

	if ( recursive === true ) {

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			intersectObject( children[ i ], raycaster, intersects, true );

		}

	}

}

/**
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
 * The azimuthal angle (theta) is measured from the positive z-axis.
 */

class Spherical {

	constructor( radius = 1, phi = 0, theta = 0 ) {

		this.radius = radius;
		this.phi = phi; // polar angle
		this.theta = theta; // azimuthal angle

		return this;

	}

	set( radius, phi, theta ) {

		this.radius = radius;
		this.phi = phi;
		this.theta = theta;

		return this;

	}

	copy( other ) {

		this.radius = other.radius;
		this.phi = other.phi;
		this.theta = other.theta;

		return this;

	}

	// restrict phi to be betwee EPS and PI-EPS
	makeSafe() {

		const EPS = 0.000001;
		this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );

		return this;

	}

	setFromVector3( v ) {

		return this.setFromCartesianCoords( v.x, v.y, v.z );

	}

	setFromCartesianCoords( x, y, z ) {

		this.radius = Math.sqrt( x * x + y * y + z * z );

		if ( this.radius === 0 ) {

			this.theta = 0;
			this.phi = 0;

		} else {

			this.theta = Math.atan2( x, z );
			this.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );

		}

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

/**
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 */

class Cylindrical {

	constructor( radius = 1, theta = 0, y = 0 ) {

		this.radius = radius; // distance from the origin to a point in the x-z plane
		this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis
		this.y = y; // height above the x-z plane

		return this;

	}

	set( radius, theta, y ) {

		this.radius = radius;
		this.theta = theta;
		this.y = y;

		return this;

	}

	copy( other ) {

		this.radius = other.radius;
		this.theta = other.theta;
		this.y = other.y;

		return this;

	}

	setFromVector3( v ) {

		return this.setFromCartesianCoords( v.x, v.y, v.z );

	}

	setFromCartesianCoords( x, y, z ) {

		this.radius = Math.sqrt( x * x + z * z );
		this.theta = Math.atan2( x, z );
		this.y = y;

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

const _vector$4 = /*@__PURE__*/ new Vector2();

class Box2 {

	constructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {

		this.min = min;
		this.max = max;

	}

	set( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	}

	setFromPoints( points ) {

		this.makeEmpty();

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	}

	setFromCenterAndSize( center, size ) {

		const halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );
		this.min.copy( center ).sub( halfSize );
		this.max.copy( center ).add( halfSize );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	}

	makeEmpty() {

		this.min.x = this.min.y = + Infinity;
		this.max.x = this.max.y = - Infinity;

		return this;

	}

	isEmpty() {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );

	}

	getCenter( target ) {

		return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	}

	getSize( target ) {

		return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );

	}

	expandByPoint( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	}

	expandByVector( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	}

	expandByScalar( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	}

	containsPoint( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ? false : true;

	}

	containsBox( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y;

	}

	getParameter( point, target ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		return target.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y )
		);

	}

	intersectsBox( box ) {

		// using 4 splitting planes to rule out intersections

		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ? false : true;

	}

	clampPoint( point, target ) {

		return target.copy( point ).clamp( this.min, this.max );

	}

	distanceToPoint( point ) {

		const clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );
		return clampedPoint.sub( point ).length();

	}

	intersect( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		return this;

	}

	union( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	}

	translate( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	}

	equals( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

}

Box2.prototype.isBox2 = true;

const _startP = /*@__PURE__*/ new Vector3();
const _startEnd = /*@__PURE__*/ new Vector3();

class Line3 {

	constructor( start = new Vector3(), end = new Vector3() ) {

		this.start = start;
		this.end = end;

	}

	set( start, end ) {

		this.start.copy( start );
		this.end.copy( end );

		return this;

	}

	copy( line ) {

		this.start.copy( line.start );
		this.end.copy( line.end );

		return this;

	}

	getCenter( target ) {

		return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );

	}

	delta( target ) {

		return target.subVectors( this.end, this.start );

	}

	distanceSq() {

		return this.start.distanceToSquared( this.end );

	}

	distance() {

		return this.start.distanceTo( this.end );

	}

	at( t, target ) {

		return this.delta( target ).multiplyScalar( t ).add( this.start );

	}

	closestPointToPointParameter( point, clampToLine ) {

		_startP.subVectors( point, this.start );
		_startEnd.subVectors( this.end, this.start );

		const startEnd2 = _startEnd.dot( _startEnd );
		const startEnd_startP = _startEnd.dot( _startP );

		let t = startEnd_startP / startEnd2;

		if ( clampToLine ) {

			t = clamp( t, 0, 1 );

		}

		return t;

	}

	closestPointToPoint( point, clampToLine, target ) {

		const t = this.closestPointToPointParameter( point, clampToLine );

		return this.delta( target ).multiplyScalar( t ).add( this.start );

	}

	applyMatrix4( matrix ) {

		this.start.applyMatrix4( matrix );
		this.end.applyMatrix4( matrix );

		return this;

	}

	equals( line ) {

		return line.start.equals( this.start ) && line.end.equals( this.end );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

const _vector$3 = /*@__PURE__*/ new Vector3();

class SpotLightHelper extends Object3D {

	constructor( light, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		const geometry = new BufferGeometry();

		const positions = [
			0, 0, 0, 	0, 0, 1,
			0, 0, 0, 	1, 0, 1,
			0, 0, 0,	- 1, 0, 1,
			0, 0, 0, 	0, 1, 1,
			0, 0, 0, 	0, - 1, 1
		];

		for ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {

			const p1 = ( i / l ) * Math.PI * 2;
			const p2 = ( j / l ) * Math.PI * 2;

			positions.push(
				Math.cos( p1 ), Math.sin( p1 ), 1,
				Math.cos( p2 ), Math.sin( p2 ), 1
			);

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		const material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.cone = new LineSegments( geometry, material );
		this.add( this.cone );

		this.update();

	}

	dispose() {

		this.cone.geometry.dispose();
		this.cone.material.dispose();

	}

	update() {

		this.light.updateMatrixWorld();

		const coneLength = this.light.distance ? this.light.distance : 1000;
		const coneWidth = coneLength * Math.tan( this.light.angle );

		this.cone.scale.set( coneWidth, coneWidth, coneLength );

		_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );

		this.cone.lookAt( _vector$3 );

		if ( this.color !== undefined ) {

			this.cone.material.color.set( this.color );

		} else {

			this.cone.material.color.copy( this.light.color );

		}

	}

}

const _vector$2 = /*@__PURE__*/ new Vector3();
const _boneMatrix = /*@__PURE__*/ new Matrix4();
const _matrixWorldInv = /*@__PURE__*/ new Matrix4();


class SkeletonHelper extends LineSegments {

	constructor( object ) {

		const bones = getBoneList( object );

		const geometry = new BufferGeometry();

		const vertices = [];
		const colors = [];

		const color1 = new Color( 0, 0, 1 );
		const color2 = new Color( 0, 1, 0 );

		for ( let i = 0; i < bones.length; i ++ ) {

			const bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				vertices.push( 0, 0, 0 );
				vertices.push( 0, 0, 0 );
				colors.push( color1.r, color1.g, color1.b );
				colors.push( color2.r, color2.g, color2.b );

			}

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );

		super( geometry, material );

		this.type = 'SkeletonHelper';
		this.isSkeletonHelper = true;

		this.root = object;
		this.bones = bones;

		this.matrix = object.matrixWorld;
		this.matrixAutoUpdate = false;

	}

	updateMatrixWorld( force ) {

		const bones = this.bones;

		const geometry = this.geometry;
		const position = geometry.getAttribute( 'position' );

		_matrixWorldInv.copy( this.root.matrixWorld ).invert();

		for ( let i = 0, j = 0; i < bones.length; i ++ ) {

			const bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );
				_vector$2.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );
				_vector$2.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );

				j += 2;

			}

		}

		geometry.getAttribute( 'position' ).needsUpdate = true;

		super.updateMatrixWorld( force );

	}

}


function getBoneList( object ) {

	const boneList = [];

	if ( object.isBone === true ) {

		boneList.push( object );

	}

	for ( let i = 0; i < object.children.length; i ++ ) {

		boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );

	}

	return boneList;

}

class PointLightHelper extends Mesh {

	constructor( light, sphereSize, color ) {

		const geometry = new SphereGeometry( sphereSize, 4, 2 );
		const material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );

		super( geometry, material );

		this.light = light;
		this.light.updateMatrixWorld();

		this.color = color;

		this.type = 'PointLightHelper';

		this.matrix = this.light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.update();


		/*
	// TODO: delete this comment?
	const distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );
	const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

	const d = light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.scale.set( d, d, d );

	}

	this.add( this.lightDistance );
	*/

	}

	dispose() {

		this.geometry.dispose();
		this.material.dispose();

	}

	update() {

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			this.material.color.copy( this.light.color );

		}

		/*
		const d = this.light.distance;

		if ( d === 0.0 ) {

			this.lightDistance.visible = false;

		} else {

			this.lightDistance.visible = true;
			this.lightDistance.scale.set( d, d, d );

		}
		*/

	}

}

const _vector$1 = /*@__PURE__*/ new Vector3();
const _color1 = /*@__PURE__*/ new Color();
const _color2 = /*@__PURE__*/ new Color();

class HemisphereLightHelper extends Object3D {

	constructor( light, size, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		const geometry = new OctahedronGeometry( size );
		geometry.rotateY( Math.PI * 0.5 );

		this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );
		if ( this.color === undefined ) this.material.vertexColors = true;

		const position = geometry.getAttribute( 'position' );
		const colors = new Float32Array( position.count * 3 );

		geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );

		this.add( new Mesh( geometry, this.material ) );

		this.update();

	}

	dispose() {

		this.children[ 0 ].geometry.dispose();
		this.children[ 0 ].material.dispose();

	}

	update() {

		const mesh = this.children[ 0 ];

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			const colors = mesh.geometry.getAttribute( 'color' );

			_color1.copy( this.light.color );
			_color2.copy( this.light.groundColor );

			for ( let i = 0, l = colors.count; i < l; i ++ ) {

				const color = ( i < ( l / 2 ) ) ? _color1 : _color2;

				colors.setXYZ( i, color.r, color.g, color.b );

			}

			colors.needsUpdate = true;

		}

		mesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );

	}

}

class GridHelper extends LineSegments {

	constructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {

		color1 = new Color( color1 );
		color2 = new Color( color2 );

		const center = divisions / 2;
		const step = size / divisions;
		const halfSize = size / 2;

		const vertices = [], colors = [];

		for ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {

			vertices.push( - halfSize, 0, k, halfSize, 0, k );
			vertices.push( k, 0, - halfSize, k, 0, halfSize );

			const color = i === center ? color1 : color2;

			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;

		}

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'GridHelper';

	}

}

class PolarGridHelper extends LineSegments {

	constructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {

		color1 = new Color( color1 );
		color2 = new Color( color2 );

		const vertices = [];
		const colors = [];

		// create the radials

		for ( let i = 0; i <= radials; i ++ ) {

			const v = ( i / radials ) * ( Math.PI * 2 );

			const x = Math.sin( v ) * radius;
			const z = Math.cos( v ) * radius;

			vertices.push( 0, 0, 0 );
			vertices.push( x, 0, z );

			const color = ( i & 1 ) ? color1 : color2;

			colors.push( color.r, color.g, color.b );
			colors.push( color.r, color.g, color.b );

		}

		// create the circles

		for ( let i = 0; i <= circles; i ++ ) {

			const color = ( i & 1 ) ? color1 : color2;

			const r = radius - ( radius / circles * i );

			for ( let j = 0; j < divisions; j ++ ) {

				// first vertex

				let v = ( j / divisions ) * ( Math.PI * 2 );

				let x = Math.sin( v ) * r;
				let z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

				// second vertex

				v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );

				x = Math.sin( v ) * r;
				z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

			}

		}

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'PolarGridHelper';

	}

}

const _v1 = /*@__PURE__*/ new Vector3();
const _v2 = /*@__PURE__*/ new Vector3();
const _v3 = /*@__PURE__*/ new Vector3();

class DirectionalLightHelper extends Object3D {

	constructor( light, size, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		if ( size === undefined ) size = 1;

		let geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [
			- size, size, 0,
			size, size, 0,
			size, - size, 0,
			- size, - size, 0,
			- size, size, 0
		], 3 ) );

		const material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.lightPlane = new Line( geometry, material );
		this.add( this.lightPlane );

		geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );

		this.targetLine = new Line( geometry, material );
		this.add( this.targetLine );

		this.update();

	}

	dispose() {

		this.lightPlane.geometry.dispose();
		this.lightPlane.material.dispose();
		this.targetLine.geometry.dispose();
		this.targetLine.material.dispose();

	}

	update() {

		_v1.setFromMatrixPosition( this.light.matrixWorld );
		_v2.setFromMatrixPosition( this.light.target.matrixWorld );
		_v3.subVectors( _v2, _v1 );

		this.lightPlane.lookAt( _v2 );

		if ( this.color !== undefined ) {

			this.lightPlane.material.color.set( this.color );
			this.targetLine.material.color.set( this.color );

		} else {

			this.lightPlane.material.color.copy( this.light.color );
			this.targetLine.material.color.copy( this.light.color );

		}

		this.targetLine.lookAt( _v2 );
		this.targetLine.scale.z = _v3.length();

	}

}

const _vector = /*@__PURE__*/ new Vector3();
const _camera = /*@__PURE__*/ new Camera();

/**
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		https://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html
 */

class CameraHelper extends LineSegments {

	constructor( camera ) {

		const geometry = new BufferGeometry();
		const material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );

		const vertices = [];
		const colors = [];

		const pointMap = {};

		// colors

		const colorFrustum = new Color( 0xffaa00 );
		const colorCone = new Color( 0xff0000 );
		const colorUp = new Color( 0x00aaff );
		const colorTarget = new Color( 0xffffff );
		const colorCross = new Color( 0x333333 );

		// near

		addLine( 'n1', 'n2', colorFrustum );
		addLine( 'n2', 'n4', colorFrustum );
		addLine( 'n4', 'n3', colorFrustum );
		addLine( 'n3', 'n1', colorFrustum );

		// far

		addLine( 'f1', 'f2', colorFrustum );
		addLine( 'f2', 'f4', colorFrustum );
		addLine( 'f4', 'f3', colorFrustum );
		addLine( 'f3', 'f1', colorFrustum );

		// sides

		addLine( 'n1', 'f1', colorFrustum );
		addLine( 'n2', 'f2', colorFrustum );
		addLine( 'n3', 'f3', colorFrustum );
		addLine( 'n4', 'f4', colorFrustum );

		// cone

		addLine( 'p', 'n1', colorCone );
		addLine( 'p', 'n2', colorCone );
		addLine( 'p', 'n3', colorCone );
		addLine( 'p', 'n4', colorCone );

		// up

		addLine( 'u1', 'u2', colorUp );
		addLine( 'u2', 'u3', colorUp );
		addLine( 'u3', 'u1', colorUp );

		// target

		addLine( 'c', 't', colorTarget );
		addLine( 'p', 'c', colorCross );

		// cross

		addLine( 'cn1', 'cn2', colorCross );
		addLine( 'cn3', 'cn4', colorCross );

		addLine( 'cf1', 'cf2', colorCross );
		addLine( 'cf3', 'cf4', colorCross );

		function addLine( a, b, color ) {

			addPoint( a, color );
			addPoint( b, color );

		}

		function addPoint( id, color ) {

			vertices.push( 0, 0, 0 );
			colors.push( color.r, color.g, color.b );

			if ( pointMap[ id ] === undefined ) {

				pointMap[ id ] = [];

			}

			pointMap[ id ].push( ( vertices.length / 3 ) - 1 );

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		super( geometry, material );

		this.type = 'CameraHelper';

		this.camera = camera;
		if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();

		this.matrix = camera.matrixWorld;
		this.matrixAutoUpdate = false;

		this.pointMap = pointMap;

		this.update();

	}

	update() {

		const geometry = this.geometry;
		const pointMap = this.pointMap;

		const w = 1, h = 1;

		// we need just camera projection matrix inverse
		// world matrix must be identity

		_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );

		// center / target

		setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );
		setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );

		// near

		setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );
		setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );
		setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );
		setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );

		// far

		setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );
		setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );
		setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );
		setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );

		// up

		setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );
		setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );
		setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );

		// cross

		setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );
		setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );
		setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );
		setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );

		setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );
		setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );
		setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );
		setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );

		geometry.getAttribute( 'position' ).needsUpdate = true;

	}

	dispose() {

		this.geometry.dispose();
		this.material.dispose();

	}

}


function setPoint( point, pointMap, geometry, camera, x, y, z ) {

	_vector.set( x, y, z ).unproject( camera );

	const points = pointMap[ point ];

	if ( points !== undefined ) {

		const position = geometry.getAttribute( 'position' );

		for ( let i = 0, l = points.length; i < l; i ++ ) {

			position.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );

		}

	}

}

const _box = /*@__PURE__*/ new Box3();

class BoxHelper extends LineSegments {

	constructor( object, color = 0xffff00 ) {

		const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );
		const positions = new Float32Array( 8 * 3 );

		const geometry = new BufferGeometry();
		geometry.setIndex( new BufferAttribute( indices, 1 ) );
		geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.object = object;
		this.type = 'BoxHelper';

		this.matrixAutoUpdate = false;

		this.update();

	}

	update( object ) {

		if ( object !== undefined ) {

			console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );

		}

		if ( this.object !== undefined ) {

			_box.setFromObject( this.object );

		}

		if ( _box.isEmpty() ) return;

		const min = _box.min;
		const max = _box.max;

		/*
			5____4
		1/___0/|
		| 6__|_7
		2/___3/

		0: max.x, max.y, max.z
		1: min.x, max.y, max.z
		2: min.x, min.y, max.z
		3: max.x, min.y, max.z
		4: max.x, max.y, min.z
		5: min.x, max.y, min.z
		6: min.x, min.y, min.z
		7: max.x, min.y, min.z
		*/

		const position = this.geometry.attributes.position;
		const array = position.array;

		array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;
		array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;
		array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;
		array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;
		array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;
		array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;
		array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;
		array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;

		position.needsUpdate = true;

		this.geometry.computeBoundingSphere();


	}

	setFromObject( object ) {

		this.object = object;
		this.update();

		return this;

	}

	copy( source ) {

		LineSegments.prototype.copy.call( this, source );

		this.object = source.object;

		return this;

	}

}

class Box3Helper extends LineSegments {

	constructor( box, color = 0xffff00 ) {

		const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );

		const positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];

		const geometry = new BufferGeometry();

		geometry.setIndex( new BufferAttribute( indices, 1 ) );

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.box = box;

		this.type = 'Box3Helper';

		this.geometry.computeBoundingSphere();

	}

	updateMatrixWorld( force ) {

		const box = this.box;

		if ( box.isEmpty() ) return;

		box.getCenter( this.position );

		box.getSize( this.scale );

		this.scale.multiplyScalar( 0.5 );

		super.updateMatrixWorld( force );

	}

}

class PlaneHelper extends Line {

	constructor( plane, size = 1, hex = 0xffff00 ) {

		const color = hex;

		const positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );
		geometry.computeBoundingSphere();

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.type = 'PlaneHelper';

		this.plane = plane;

		this.size = size;

		const positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];

		const geometry2 = new BufferGeometry();
		geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );
		geometry2.computeBoundingSphere();

		this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );

	}

	updateMatrixWorld( force ) {

		let scale = - this.plane.constant;

		if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter

		this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );

		this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here

		this.lookAt( this.plane.normal );

		super.updateMatrixWorld( force );

	}

}

const _axis = /*@__PURE__*/ new Vector3();
let _lineGeometry, _coneGeometry;

class ArrowHelper extends Object3D {

	// dir is assumed to be normalized

	constructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {

		super();

		this.type = 'ArrowHelper';

		if ( _lineGeometry === undefined ) {

			_lineGeometry = new BufferGeometry();
			_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );

			_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );
			_coneGeometry.translate( 0, - 0.5, 0 );

		}

		this.position.copy( origin );

		this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );
		this.line.matrixAutoUpdate = false;
		this.add( this.line );

		this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );
		this.cone.matrixAutoUpdate = false;
		this.add( this.cone );

		this.setDirection( dir );
		this.setLength( length, headLength, headWidth );

	}

	setDirection( dir ) {

		// dir is assumed to be normalized

		if ( dir.y > 0.99999 ) {

			this.quaternion.set( 0, 0, 0, 1 );

		} else if ( dir.y < - 0.99999 ) {

			this.quaternion.set( 1, 0, 0, 0 );

		} else {

			_axis.set( dir.z, 0, - dir.x ).normalize();

			const radians = Math.acos( dir.y );

			this.quaternion.setFromAxisAngle( _axis, radians );

		}

	}

	setLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {

		this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458
		this.line.updateMatrix();

		this.cone.scale.set( headWidth, headLength, headWidth );
		this.cone.position.y = length;
		this.cone.updateMatrix();

	}

	setColor( color ) {

		this.line.material.color.set( color );
		this.cone.material.color.set( color );

	}

	copy( source ) {

		super.copy( source, false );

		this.line.copy( source.line );
		this.cone.copy( source.cone );

		return this;

	}

}

class AxesHelper extends LineSegments {

	constructor( size = 1 ) {

		const vertices = [
			0, 0, 0,	size, 0, 0,
			0, 0, 0,	0, size, 0,
			0, 0, 0,	0, 0, size
		];

		const colors = [
			1, 0, 0,	1, 0.6, 0,
			0, 1, 0,	0.6, 1, 0,
			0, 0, 1,	0, 0.6, 1
		];

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'AxesHelper';

	}

	setColors( xAxisColor, yAxisColor, zAxisColor ) {

		const color = new Color();
		const array = this.geometry.attributes.color.array;

		color.set( xAxisColor );
		color.toArray( array, 0 );
		color.toArray( array, 3 );

		color.set( yAxisColor );
		color.toArray( array, 6 );
		color.toArray( array, 9 );

		color.set( zAxisColor );
		color.toArray( array, 12 );
		color.toArray( array, 15 );

		this.geometry.attributes.color.needsUpdate = true;

		return this;

	}

	dispose() {

		this.geometry.dispose();
		this.material.dispose();

	}

}

class ShapePath {

	constructor() {

		this.type = 'ShapePath';

		this.color = new Color();

		this.subPaths = [];
		this.currentPath = null;

	}

	moveTo( x, y ) {

		this.currentPath = new Path();
		this.subPaths.push( this.currentPath );
		this.currentPath.moveTo( x, y );

		return this;

	}

	lineTo( x, y ) {

		this.currentPath.lineTo( x, y );

		return this;

	}

	quadraticCurveTo( aCPx, aCPy, aX, aY ) {

		this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );

		return this;

	}

	bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );

		return this;

	}

	splineThru( pts ) {

		this.currentPath.splineThru( pts );

		return this;

	}

	toShapes( isCCW, noHoles ) {

		function toShapesNoHoles( inSubpaths ) {

			const shapes = [];

			for ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {

				const tmpPath = inSubpaths[ i ];

				const tmpShape = new Shape();
				tmpShape.curves = tmpPath.curves;

				shapes.push( tmpShape );

			}

			return shapes;

		}

		function isPointInsidePolygon( inPt, inPolygon ) {

			const polyLen = inPolygon.length;

			// inPt on polygon contour => immediate success    or
			// toggling of inside/outside at every single! intersection point of an edge
			//  with the horizontal line through inPt, left of inPt
			//  not counting lowerY endpoints of edges and whole edges on that line
			let inside = false;
			for ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {

				let edgeLowPt = inPolygon[ p ];
				let edgeHighPt = inPolygon[ q ];

				let edgeDx = edgeHighPt.x - edgeLowPt.x;
				let edgeDy = edgeHighPt.y - edgeLowPt.y;

				if ( Math.abs( edgeDy ) > Number.EPSILON ) {

					// not parallel
					if ( edgeDy < 0 ) {

						edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;
						edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;

					}

					if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) 		continue;

					if ( inPt.y === edgeLowPt.y ) {

						if ( inPt.x === edgeLowPt.x )		return	true;		// inPt is on contour ?
						// continue;				// no intersection or edgeLowPt => doesn't count !!!

					} else {

						const perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );
						if ( perpEdge === 0 )				return	true;		// inPt is on contour ?
						if ( perpEdge < 0 ) 				continue;
						inside = ! inside;		// true intersection left of inPt

					}

				} else {

					// parallel or collinear
					if ( inPt.y !== edgeLowPt.y ) 		continue;			// parallel
					// edge lies on the same horizontal line as inPt
					if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||
						 ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )		return	true;	// inPt: Point on contour !
					// continue;

				}

			}

			return	inside;

		}

		const isClockWise = ShapeUtils.isClockWise;

		const subPaths = this.subPaths;
		if ( subPaths.length === 0 ) return [];

		if ( noHoles === true )	return	toShapesNoHoles( subPaths );


		let solid, tmpPath, tmpShape;
		const shapes = [];

		if ( subPaths.length === 1 ) {

			tmpPath = subPaths[ 0 ];
			tmpShape = new Shape();
			tmpShape.curves = tmpPath.curves;
			shapes.push( tmpShape );
			return shapes;

		}

		let holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );
		holesFirst = isCCW ? ! holesFirst : holesFirst;

		// console.log("Holes first", holesFirst);

		const betterShapeHoles = [];
		const newShapes = [];
		let newShapeHoles = [];
		let mainIdx = 0;
		let tmpPoints;

		newShapes[ mainIdx ] = undefined;
		newShapeHoles[ mainIdx ] = [];

		for ( let i = 0, l = subPaths.length; i < l; i ++ ) {

			tmpPath = subPaths[ i ];
			tmpPoints = tmpPath.getPoints();
			solid = isClockWise( tmpPoints );
			solid = isCCW ? ! solid : solid;

			if ( solid ) {

				if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )	mainIdx ++;

				newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };
				newShapes[ mainIdx ].s.curves = tmpPath.curves;

				if ( holesFirst )	mainIdx ++;
				newShapeHoles[ mainIdx ] = [];

				//console.log('cw', i);

			} else {

				newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );

				//console.log('ccw', i);

			}

		}

		// only Holes? -> probably all Shapes with wrong orientation
		if ( ! newShapes[ 0 ] )	return	toShapesNoHoles( subPaths );


		if ( newShapes.length > 1 ) {

			let ambiguous = false;
			let toChange = 0;

			for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				betterShapeHoles[ sIdx ] = [];

			}

			for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				const sho = newShapeHoles[ sIdx ];

				for ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {

					const ho = sho[ hIdx ];
					let hole_unassigned = true;

					for ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {

						if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {

							if ( sIdx !== s2Idx )	toChange ++;

							if ( hole_unassigned ) {

								hole_unassigned = false;
								betterShapeHoles[ s2Idx ].push( ho );

							} else {

								ambiguous = true;

							}

						}

					}

					if ( hole_unassigned ) {

						betterShapeHoles[ sIdx ].push( ho );

					}

				}

			}

			if ( toChange > 0 && ambiguous === false ) {

				newShapeHoles = betterShapeHoles;

			}

		}

		let tmpHoles;

		for ( let i = 0, il = newShapes.length; i < il; i ++ ) {

			tmpShape = newShapes[ i ].s;
			shapes.push( tmpShape );
			tmpHoles = newShapeHoles[ i ];

			for ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {

				tmpShape.holes.push( tmpHoles[ j ].h );

			}

		}

		//console.log("shape", shapes);

		return shapes;

	}

}

const _floatView = new Float32Array( 1 );
const _int32View = new Int32Array( _floatView.buffer );

class DataUtils {

	// Converts float32 to float16 (stored as uint16 value).

	static toHalfFloat( val ) {

		if ( val > 65504 ) {

			console.warn( 'THREE.DataUtils.toHalfFloat(): value exceeds 65504.' );

			val = 65504; // maximum representable value in float16

		}

		// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410

		/* This method is faster than the OpenEXR implementation (very often
		* used, eg. in Ogre), with the additional benefit of rounding, inspired
		* by James Tursa?s half-precision code. */

		_floatView[ 0 ] = val;
		const x = _int32View[ 0 ];

		let bits = ( x >> 16 ) & 0x8000; /* Get the sign */
		let m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */
		const e = ( x >> 23 ) & 0xff; /* Using int is faster here */

		/* If zero, or denormal, or exponent underflows too much for a denormal
			* half, return signed zero. */
		if ( e < 103 ) return bits;

		/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */
		if ( e > 142 ) {

			bits |= 0x7c00;
			/* If exponent was 0xff and one mantissa bit was set, it means NaN,
						* not Inf, so make sure we set one mantissa bit too. */
			bits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );
			return bits;

		}

		/* If exponent underflows but not too much, return a denormal */
		if ( e < 113 ) {

			m |= 0x0800;
			/* Extra rounding may overflow and set mantissa to 0 and exponent
				* to 1, which is OK. */
			bits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );
			return bits;

		}

		bits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );
		/* Extra rounding. An overflow will set mantissa to 0 and increment
			* the exponent, which is OK. */
		bits += m & 1;
		return bits;

	}

}

const LineStrip = 0;
const LinePieces = 1;
const NoColors = 0;
const FaceColors = 1;
const VertexColors = 2;

function MeshFaceMaterial( materials ) {

	console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );
	return materials;

}

function MultiMaterial( materials = [] ) {

	console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );
	materials.isMultiMaterial = true;
	materials.materials = materials;
	materials.clone = function () {

		return materials.slice();

	};

	return materials;

}

function PointCloud( geometry, material ) {

	console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function Particle( material ) {

	console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );
	return new Sprite( material );

}

function ParticleSystem( geometry, material ) {

	console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function PointCloudMaterial( parameters ) {

	console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleBasicMaterial( parameters ) {

	console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleSystemMaterial( parameters ) {

	console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function Vertex( x, y, z ) {

	console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );
	return new Vector3( x, y, z );

}

//

function DynamicBufferAttribute( array, itemSize ) {

	console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );
	return new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );

}

function Int8Attribute( array, itemSize ) {

	console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );
	return new Int8BufferAttribute( array, itemSize );

}

function Uint8Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );
	return new Uint8BufferAttribute( array, itemSize );

}

function Uint8ClampedAttribute( array, itemSize ) {

	console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );
	return new Uint8ClampedBufferAttribute( array, itemSize );

}

function Int16Attribute( array, itemSize ) {

	console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );
	return new Int16BufferAttribute( array, itemSize );

}

function Uint16Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );
	return new Uint16BufferAttribute( array, itemSize );

}

function Int32Attribute( array, itemSize ) {

	console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );
	return new Int32BufferAttribute( array, itemSize );

}

function Uint32Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );
	return new Uint32BufferAttribute( array, itemSize );

}

function Float32Attribute( array, itemSize ) {

	console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );
	return new Float32BufferAttribute( array, itemSize );

}

function Float64Attribute( array, itemSize ) {

	console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );
	return new Float64BufferAttribute( array, itemSize );

}

//

Curve.create = function ( construct, getPoint ) {

	console.log( 'THREE.Curve.create() has been deprecated' );

	construct.prototype = Object.create( Curve.prototype );
	construct.prototype.constructor = construct;
	construct.prototype.getPoint = getPoint;

	return construct;

};

//

Path.prototype.fromPoints = function ( points ) {

	console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );
	return this.setFromPoints( points );

};

//

function AxisHelper( size ) {

	console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );
	return new AxesHelper( size );

}

function BoundingBoxHelper( object, color ) {

	console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );
	return new BoxHelper( object, color );

}

function EdgesHelper( object, hex ) {

	console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );
	return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

GridHelper.prototype.setColors = function () {

	console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );

};

SkeletonHelper.prototype.update = function () {

	console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );

};

function WireframeHelper( object, hex ) {

	console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );
	return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

//

Loader.prototype.extractUrlBase = function ( url ) {

	console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );
	return LoaderUtils.extractUrlBase( url );

};

Loader.Handlers = {

	add: function ( /* regex, loader */ ) {

		console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );

	},

	get: function ( /* file */ ) {

		console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );

	}

};

function XHRLoader( manager ) {

	console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );
	return new FileLoader( manager );

}

function BinaryTextureLoader( manager ) {

	console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );
	return new DataTextureLoader( manager );

}

//

Box2.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

Box2.prototype.empty = function () {

	console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

Box2.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Box2.prototype.size = function ( optionalTarget ) {

	console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );
	return this.getSize( optionalTarget );

};

//

Box3.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

Box3.prototype.empty = function () {

	console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

Box3.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Box3.prototype.isIntersectionSphere = function ( sphere ) {

	console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	return this.intersectsSphere( sphere );

};

Box3.prototype.size = function ( optionalTarget ) {

	console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );
	return this.getSize( optionalTarget );

};

//

Euler.prototype.toVector3 = function () {

	console.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );

};


//

Sphere.prototype.empty = function () {

	console.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

//

Frustum.prototype.setFromMatrix = function ( m ) {

	console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );
	return this.setFromProjectionMatrix( m );

};

//

Line3.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

//

Matrix3.prototype.flattenToArrayOffset = function ( array, offset ) {

	console.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );
	return this.toArray( array, offset );

};

Matrix3.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
	return vector.applyMatrix3( this );

};

Matrix3.prototype.multiplyVector3Array = function ( /* a */ ) {

	console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );

};

Matrix3.prototype.applyToBufferAttribute = function ( attribute ) {

	console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );
	return attribute.applyMatrix3( this );

};

Matrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {

	console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );

};

Matrix3.prototype.getInverse = function ( matrix ) {

	console.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );
	return this.copy( matrix ).invert();

};

//

Matrix4.prototype.extractPosition = function ( m ) {

	console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );
	return this.copyPosition( m );

};

Matrix4.prototype.flattenToArrayOffset = function ( array, offset ) {

	console.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );
	return this.toArray( array, offset );

};

Matrix4.prototype.getPosition = function () {

	console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );
	return new Vector3().setFromMatrixColumn( this, 3 );

};

Matrix4.prototype.setRotationFromQuaternion = function ( q ) {

	console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );
	return this.makeRotationFromQuaternion( q );

};

Matrix4.prototype.multiplyToArray = function () {

	console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );

};

Matrix4.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.multiplyVector4 = function ( vector ) {

	console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.multiplyVector3Array = function ( /* a */ ) {

	console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );

};

Matrix4.prototype.rotateAxis = function ( v ) {

	console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );
	v.transformDirection( this );

};

Matrix4.prototype.crossVector = function ( vector ) {

	console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.translate = function () {

	console.error( 'THREE.Matrix4: .translate() has been removed.' );

};

Matrix4.prototype.rotateX = function () {

	console.error( 'THREE.Matrix4: .rotateX() has been removed.' );

};

Matrix4.prototype.rotateY = function () {

	console.error( 'THREE.Matrix4: .rotateY() has been removed.' );

};

Matrix4.prototype.rotateZ = function () {

	console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );

};

Matrix4.prototype.rotateByAxis = function () {

	console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );

};

Matrix4.prototype.applyToBufferAttribute = function ( attribute ) {

	console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );
	return attribute.applyMatrix4( this );

};

Matrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {

	console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );

};

Matrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {

	console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );
	return this.makePerspective( left, right, top, bottom, near, far );

};

Matrix4.prototype.getInverse = function ( matrix ) {

	console.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );
	return this.copy( matrix ).invert();

};

//

Plane.prototype.isIntersectionLine = function ( line ) {

	console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );
	return this.intersectsLine( line );

};

//

Quaternion.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
	return vector.applyQuaternion( this );

};

Quaternion.prototype.inverse = function ( ) {

	console.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );
	return this.invert();

};

//

Ray.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Ray.prototype.isIntersectionPlane = function ( plane ) {

	console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );
	return this.intersectsPlane( plane );

};

Ray.prototype.isIntersectionSphere = function ( sphere ) {

	console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	return this.intersectsSphere( sphere );

};

//

Triangle.prototype.area = function () {

	console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );
	return this.getArea();

};

Triangle.prototype.barycoordFromPoint = function ( point, target ) {

	console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
	return this.getBarycoord( point, target );

};

Triangle.prototype.midpoint = function ( target ) {

	console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );
	return this.getMidpoint( target );

};

Triangle.prototypenormal = function ( target ) {

	console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
	return this.getNormal( target );

};

Triangle.prototype.plane = function ( target ) {

	console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );
	return this.getPlane( target );

};

Triangle.barycoordFromPoint = function ( point, a, b, c, target ) {

	console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
	return Triangle.getBarycoord( point, a, b, c, target );

};

Triangle.normal = function ( a, b, c, target ) {

	console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
	return Triangle.getNormal( a, b, c, target );

};

//

Shape.prototype.extractAllPoints = function ( divisions ) {

	console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );
	return this.extractPoints( divisions );

};

Shape.prototype.extrude = function ( options ) {

	console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );
	return new ExtrudeGeometry( this, options );

};

Shape.prototype.makeGeometry = function ( options ) {

	console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );
	return new ShapeGeometry( this, options );

};

//

Vector2.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector2.prototype.distanceToManhattan = function ( v ) {

	console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
	return this.manhattanDistanceTo( v );

};

Vector2.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Vector3.prototype.setEulerFromRotationMatrix = function () {

	console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );

};

Vector3.prototype.setEulerFromQuaternion = function () {

	console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );

};

Vector3.prototype.getPositionFromMatrix = function ( m ) {

	console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );
	return this.setFromMatrixPosition( m );

};

Vector3.prototype.getScaleFromMatrix = function ( m ) {

	console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );
	return this.setFromMatrixScale( m );

};

Vector3.prototype.getColumnFromMatrix = function ( index, matrix ) {

	console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );
	return this.setFromMatrixColumn( matrix, index );

};

Vector3.prototype.applyProjection = function ( m ) {

	console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );
	return this.applyMatrix4( m );

};

Vector3.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector3.prototype.distanceToManhattan = function ( v ) {

	console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
	return this.manhattanDistanceTo( v );

};

Vector3.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Vector4.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector4.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Object3D.prototype.getChildByName = function ( name ) {

	console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );
	return this.getObjectByName( name );

};

Object3D.prototype.renderDepth = function () {

	console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );

};

Object3D.prototype.translate = function ( distance, axis ) {

	console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );
	return this.translateOnAxis( axis, distance );

};

Object3D.prototype.getWorldRotation = function () {

	console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );

};

Object3D.prototype.applyMatrix = function ( matrix ) {

	console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );
	return this.applyMatrix4( matrix );

};

Object.defineProperties( Object3D.prototype, {

	eulerOrder: {
		get: function () {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			return this.rotation.order;

		},
		set: function ( value ) {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			this.rotation.order = value;

		}
	},
	useQuaternion: {
		get: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		},
		set: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		}
	}

} );

Mesh.prototype.setDrawMode = function () {

	console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

};

Object.defineProperties( Mesh.prototype, {

	drawMode: {
		get: function () {

			console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );
			return TrianglesDrawMode;

		},
		set: function () {

			console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

		}
	}

} );

SkinnedMesh.prototype.initBones = function () {

	console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );

};

//

PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {

	console.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +
			'Use .setFocalLength and .filmGauge for a photographic setup.' );

	if ( filmGauge !== undefined ) this.filmGauge = filmGauge;
	this.setFocalLength( focalLength );

};

//

Object.defineProperties( Light.prototype, {
	onlyShadow: {
		set: function () {

			console.warn( 'THREE.Light: .onlyShadow has been removed.' );

		}
	},
	shadowCameraFov: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );
			this.shadow.camera.fov = value;

		}
	},
	shadowCameraLeft: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );
			this.shadow.camera.left = value;

		}
	},
	shadowCameraRight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );
			this.shadow.camera.right = value;

		}
	},
	shadowCameraTop: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );
			this.shadow.camera.top = value;

		}
	},
	shadowCameraBottom: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );
			this.shadow.camera.bottom = value;

		}
	},
	shadowCameraNear: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );
			this.shadow.camera.near = value;

		}
	},
	shadowCameraFar: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );
			this.shadow.camera.far = value;

		}
	},
	shadowCameraVisible: {
		set: function () {

			console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );

		}
	},
	shadowBias: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );
			this.shadow.bias = value;

		}
	},
	shadowDarkness: {
		set: function () {

			console.warn( 'THREE.Light: .shadowDarkness has been removed.' );

		}
	},
	shadowMapWidth: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );
			this.shadow.mapSize.width = value;

		}
	},
	shadowMapHeight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );
			this.shadow.mapSize.height = value;

		}
	}
} );

//

Object.defineProperties( BufferAttribute.prototype, {

	length: {
		get: function () {

			console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );
			return this.array.length;

		}
	},
	dynamic: {
		get: function () {

			console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
			return this.usage === DynamicDrawUsage;

		},
		set: function ( /* value */ ) {

			console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
			this.setUsage( DynamicDrawUsage );

		}
	}

} );

BufferAttribute.prototype.setDynamic = function ( value ) {

	console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );
	this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
	return this;

};

BufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {

	console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );

},

BufferAttribute.prototype.setArray = function ( /* array */ ) {

	console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

};

//

BufferGeometry.prototype.addIndex = function ( index ) {

	console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );
	this.setIndex( index );

};

BufferGeometry.prototype.addAttribute = function ( name, attribute ) {

	console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );

	if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {

		console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );

		return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );

	}

	if ( name === 'index' ) {

		console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );
		this.setIndex( attribute );

		return this;

	}

	return this.setAttribute( name, attribute );

};

BufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {

	if ( indexOffset !== undefined ) {

		console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );

	}

	console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );
	this.addGroup( start, count );

};

BufferGeometry.prototype.clearDrawCalls = function () {

	console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );
	this.clearGroups();

};

BufferGeometry.prototype.computeOffsets = function () {

	console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );

};

BufferGeometry.prototype.removeAttribute = function ( name ) {

	console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );

	return this.deleteAttribute( name );

};

BufferGeometry.prototype.applyMatrix = function ( matrix ) {

	console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );
	return this.applyMatrix4( matrix );

};

Object.defineProperties( BufferGeometry.prototype, {

	drawcalls: {
		get: function () {

			console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );
			return this.groups;

		}
	},
	offsets: {
		get: function () {

			console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );
			return this.groups;

		}
	}

} );

InterleavedBuffer.prototype.setDynamic = function ( value ) {

	console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );
	this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
	return this;

};

InterleavedBuffer.prototype.setArray = function ( /* array */ ) {

	console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

};

//

ExtrudeGeometry.prototype.getArrays = function () {

	console.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );

};

ExtrudeGeometry.prototype.addShapeList = function () {

	console.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );

};

ExtrudeGeometry.prototype.addShape = function () {

	console.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );

};

//

Scene.prototype.dispose = function () {

	console.error( 'THREE.Scene: .dispose() has been removed.' );

};

//

Uniform.prototype.onUpdate = function () {

	console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );
	return this;

};

//

Object.defineProperties( Material.prototype, {

	wrapAround: {
		get: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		}
	},

	overdraw: {
		get: function () {

			console.warn( 'THREE.Material: .overdraw has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Material: .overdraw has been removed.' );

		}
	},

	wrapRGB: {
		get: function () {

			console.warn( 'THREE.Material: .wrapRGB has been removed.' );
			return new Color();

		}
	},

	shading: {
		get: function () {

			console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );

		},
		set: function ( value ) {

			console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
			this.flatShading = ( value === FlatShading );

		}
	},

	stencilMask: {
		get: function () {

			console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
			return this.stencilFuncMask;

		},
		set: function ( value ) {

			console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
			this.stencilFuncMask = value;

		}
	},

	vertexTangents: {
		get: function () {

			console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );

		}
	},

} );

Object.defineProperties( ShaderMaterial.prototype, {

	derivatives: {
		get: function () {

			console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			return this.extensions.derivatives;

		},
		set: function ( value ) {

			console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			this.extensions.derivatives = value;

		}
	}

} );

//

WebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {

	console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );
	this.setRenderTarget( renderTarget );
	this.clear( color, depth, stencil );

};

WebGLRenderer.prototype.animate = function ( callback ) {

	console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );
	this.setAnimationLoop( callback );

};

WebGLRenderer.prototype.getCurrentRenderTarget = function () {

	console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );
	return this.getRenderTarget();

};

WebGLRenderer.prototype.getMaxAnisotropy = function () {

	console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );
	return this.capabilities.getMaxAnisotropy();

};

WebGLRenderer.prototype.getPrecision = function () {

	console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );
	return this.capabilities.precision;

};

WebGLRenderer.prototype.resetGLState = function () {

	console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );
	return this.state.reset();

};

WebGLRenderer.prototype.supportsFloatTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' );
	return this.extensions.get( 'OES_texture_float' );

};

WebGLRenderer.prototype.supportsHalfFloatTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' );
	return this.extensions.get( 'OES_texture_half_float' );

};

WebGLRenderer.prototype.supportsStandardDerivatives = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' );
	return this.extensions.get( 'OES_standard_derivatives' );

};

WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' );
	return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );

};

WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' );
	return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );

};

WebGLRenderer.prototype.supportsBlendMinMax = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' );
	return this.extensions.get( 'EXT_blend_minmax' );

};

WebGLRenderer.prototype.supportsVertexTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );
	return this.capabilities.vertexTextures;

};

WebGLRenderer.prototype.supportsInstancedArrays = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' );
	return this.extensions.get( 'ANGLE_instanced_arrays' );

};

WebGLRenderer.prototype.enableScissorTest = function ( boolean ) {

	console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );
	this.setScissorTest( boolean );

};

WebGLRenderer.prototype.initMaterial = function () {

	console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );

};

WebGLRenderer.prototype.addPrePlugin = function () {

	console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );

};

WebGLRenderer.prototype.addPostPlugin = function () {

	console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );

};

WebGLRenderer.prototype.updateShadowMap = function () {

	console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );

};

WebGLRenderer.prototype.setFaceCulling = function () {

	console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );

};

WebGLRenderer.prototype.allocTextureUnit = function () {

	console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );

};

WebGLRenderer.prototype.setTexture = function () {

	console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );

};

WebGLRenderer.prototype.setTexture2D = function () {

	console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );

};

WebGLRenderer.prototype.setTextureCube = function () {

	console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );

};

WebGLRenderer.prototype.getActiveMipMapLevel = function () {

	console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );
	return this.getActiveMipmapLevel();

};

Object.defineProperties( WebGLRenderer.prototype, {

	shadowMapEnabled: {
		get: function () {

			return this.shadowMap.enabled;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );
			this.shadowMap.enabled = value;

		}
	},
	shadowMapType: {
		get: function () {

			return this.shadowMap.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );
			this.shadowMap.type = value;

		}
	},
	shadowMapCullFace: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function ( /* value */ ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );

		}
	},
	context: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );
			return this.getContext();

		}
	},
	vr: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );
			return this.xr;

		}
	},
	gammaInput: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );
			return false;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );

		}
	},
	gammaOutput: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
			return false;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
			this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;

		}
	},
	toneMappingWhitePoint: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );
			return 1.0;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );

		}
	},
	gammaFactor: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );
			return 2;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );

		}
	}
} );

Object.defineProperties( WebGLShadowMap.prototype, {

	cullFace: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function ( /* cullFace */ ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );

		}
	},
	renderReverseSided: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );

		}
	},
	renderSingleSided: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );

		}
	}

} );

function WebGLRenderTargetCube( width, height, options ) {

	console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );
	return new WebGLCubeRenderTarget( width, options );

}

//

Object.defineProperties( WebGLRenderTarget.prototype, {

	wrapS: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			return this.texture.wrapS;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			this.texture.wrapS = value;

		}
	},
	wrapT: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			return this.texture.wrapT;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			this.texture.wrapT = value;

		}
	},
	magFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			return this.texture.magFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			this.texture.magFilter = value;

		}
	},
	minFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			return this.texture.minFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			this.texture.minFilter = value;

		}
	},
	anisotropy: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			return this.texture.anisotropy;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			this.texture.anisotropy = value;

		}
	},
	offset: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			return this.texture.offset;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			this.texture.offset = value;

		}
	},
	repeat: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			return this.texture.repeat;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			this.texture.repeat = value;

		}
	},
	format: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			return this.texture.format;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			this.texture.format = value;

		}
	},
	type: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			return this.texture.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			this.texture.type = value;

		}
	},
	generateMipmaps: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			return this.texture.generateMipmaps;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			this.texture.generateMipmaps = value;

		}
	}

} );

//

Audio.prototype.load = function ( file ) {

	console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );
	const scope = this;
	const audioLoader = new AudioLoader();
	audioLoader.load( file, function ( buffer ) {

		scope.setBuffer( buffer );

	} );
	return this;

};


AudioAnalyser.prototype.getData = function () {

	console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );
	return this.getFrequencyData();

};

//

CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {

	console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );
	return this.update( renderer, scene );

};

CubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {

	console.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );
	return this.renderTarget.clear( renderer, color, depth, stencil );

};

ImageUtils.crossOrigin = undefined;

ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {

	console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );

	const loader = new TextureLoader();
	loader.setCrossOrigin( this.crossOrigin );

	const texture = loader.load( url, onLoad, undefined, onError );

	if ( mapping ) texture.mapping = mapping;

	return texture;

};

ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {

	console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );

	const loader = new CubeTextureLoader();
	loader.setCrossOrigin( this.crossOrigin );

	const texture = loader.load( urls, onLoad, undefined, onError );

	if ( mapping ) texture.mapping = mapping;

	return texture;

};

ImageUtils.loadCompressedTexture = function () {

	console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );

};

ImageUtils.loadCompressedTextureCube = function () {

	console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );

};

//

function CanvasRenderer() {

	console.error( 'THREE.CanvasRenderer has been removed' );

}

//

function JSONLoader() {

	console.error( 'THREE.JSONLoader has been removed.' );

}

//

const SceneUtils = {

	createMultiMaterialObject: function ( /* geometry, materials */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	},

	detach: function ( /* child, parent, scene */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	},

	attach: function ( /* child, scene, parent */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	}

};

//

function LensFlare() {

	console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );

}

//

function ParametricGeometry() {

	console.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );
	return new BufferGeometry();

}

function TextGeometry() {

	console.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );
	return new BufferGeometry();

}

function FontLoader() {

	console.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );

}

function Font() {

	console.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );

}

function ImmediateRenderObject() {

	console.error( 'THREE.ImmediateRenderObject has been removed.' );

}

function WebGLMultisampleRenderTarget( width, height, options ) {

	console.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.' );
	const renderTarget = new WebGLRenderTarget( width, height, options );
	renderTarget.samples = 4;
	return renderTarget;

}

function DataTexture2DArray( data, width, height, depth ) {

	console.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );
	return new DataArrayTexture( data, width, height, depth );

}

function DataTexture3D( data, width, height, depth ) {

	console.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );
	return new Data3DTexture( data, width, height, depth );

}

if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

	__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {
		revision: REVISION,
	} } ) );

}

if ( typeof window !== 'undefined' ) {

	if ( window.__THREE__ ) {

		console.warn( 'WARNING: Multiple instances of Three.js being imported.' );

	} else {

		window.__THREE__ = REVISION;

	}

}




/***/ }),

/***/ "./node_modules/three/examples/jsm/controls/OrbitControls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/three/examples/jsm/controls/OrbitControls.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrbitControls": () => (/* binding */ OrbitControls),
/* harmony export */   "MapControls": () => (/* binding */ MapControls)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");


// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
//
//    Orbit - left mouse / touch: one-finger move
//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish
//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move

const _changeEvent = { type: 'change' };
const _startEvent = { type: 'start' };
const _endEvent = { type: 'end' };

class OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {

	constructor( object, domElement ) {

		super();

		if ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter "domElement" is now mandatory.' );
		if ( domElement === document ) console.error( 'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.' );

		this.object = object;
		this.domElement = domElement;
		this.domElement.style.touchAction = 'none'; // disable touch scroll

		// Set to false to disable this control
		this.enabled = true;

		// "target" sets the location of focus, where the object orbits around
		this.target = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

		// How far you can dolly in and out ( PerspectiveCamera only )
		this.minDistance = 0;
		this.maxDistance = Infinity;

		// How far you can zoom in and out ( OrthographicCamera only )
		this.minZoom = 0;
		this.maxZoom = Infinity;

		// How far you can orbit vertically, upper and lower limits.
		// Range is 0 to Math.PI radians.
		this.minPolarAngle = 0; // radians
		this.maxPolarAngle = Math.PI; // radians

		// How far you can orbit horizontally, upper and lower limits.
		// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )
		this.minAzimuthAngle = - Infinity; // radians
		this.maxAzimuthAngle = Infinity; // radians

		// Set to true to enable damping (inertia)
		// If damping is enabled, you must call controls.update() in your animation loop
		this.enableDamping = false;
		this.dampingFactor = 0.05;

		// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
		// Set to false to disable zooming
		this.enableZoom = true;
		this.zoomSpeed = 1.0;

		// Set to false to disable rotating
		this.enableRotate = true;
		this.rotateSpeed = 1.0;

		// Set to false to disable panning
		this.enablePan = true;
		this.panSpeed = 1.0;
		this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up
		this.keyPanSpeed = 7.0;	// pixels moved per arrow key push

		// Set to true to automatically rotate around the target
		// If auto-rotate is enabled, you must call controls.update() in your animation loop
		this.autoRotate = false;
		this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60

		// The four arrow keys
		this.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };

		// Mouse buttons
		this.mouseButtons = { LEFT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE, MIDDLE: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY, RIGHT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN };

		// Touch fingers
		this.touches = { ONE: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE, TWO: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN };

		// for reset
		this.target0 = this.target.clone();
		this.position0 = this.object.position.clone();
		this.zoom0 = this.object.zoom;

		// the target DOM element for key events
		this._domElementKeyEvents = null;

		//
		// public methods
		//

		this.getPolarAngle = function () {

			return spherical.phi;

		};

		this.getAzimuthalAngle = function () {

			return spherical.theta;

		};

		this.getDistance = function () {

			return this.object.position.distanceTo( this.target );

		};

		this.listenToKeyEvents = function ( domElement ) {

			domElement.addEventListener( 'keydown', onKeyDown );
			this._domElementKeyEvents = domElement;

		};

		this.saveState = function () {

			scope.target0.copy( scope.target );
			scope.position0.copy( scope.object.position );
			scope.zoom0 = scope.object.zoom;

		};

		this.reset = function () {

			scope.target.copy( scope.target0 );
			scope.object.position.copy( scope.position0 );
			scope.object.zoom = scope.zoom0;

			scope.object.updateProjectionMatrix();
			scope.dispatchEvent( _changeEvent );

			scope.update();

			state = STATE.NONE;

		};

		// this method is exposed, but perhaps it would be better if we can make it private...
		this.update = function () {

			const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

			// so camera.up is the orbit axis
			const quat = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors( object.up, new three__WEBPACK_IMPORTED_MODULE_0__.Vector3( 0, 1, 0 ) );
			const quatInverse = quat.clone().invert();

			const lastPosition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
			const lastQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();

			const twoPI = 2 * Math.PI;

			return function update() {

				const position = scope.object.position;

				offset.copy( position ).sub( scope.target );

				// rotate offset to "y-axis-is-up" space
				offset.applyQuaternion( quat );

				// angle from z-axis around y-axis
				spherical.setFromVector3( offset );

				if ( scope.autoRotate && state === STATE.NONE ) {

					rotateLeft( getAutoRotationAngle() );

				}

				if ( scope.enableDamping ) {

					spherical.theta += sphericalDelta.theta * scope.dampingFactor;
					spherical.phi += sphericalDelta.phi * scope.dampingFactor;

				} else {

					spherical.theta += sphericalDelta.theta;
					spherical.phi += sphericalDelta.phi;

				}

				// restrict theta to be between desired limits

				let min = scope.minAzimuthAngle;
				let max = scope.maxAzimuthAngle;

				if ( isFinite( min ) && isFinite( max ) ) {

					if ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;

					if ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;

					if ( min <= max ) {

						spherical.theta = Math.max( min, Math.min( max, spherical.theta ) );

					} else {

						spherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?
							Math.max( min, spherical.theta ) :
							Math.min( max, spherical.theta );

					}

				}

				// restrict phi to be between desired limits
				spherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );

				spherical.makeSafe();


				spherical.radius *= scale;

				// restrict radius to be between desired limits
				spherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );

				// move target to panned location

				if ( scope.enableDamping === true ) {

					scope.target.addScaledVector( panOffset, scope.dampingFactor );

				} else {

					scope.target.add( panOffset );

				}

				offset.setFromSpherical( spherical );

				// rotate offset back to "camera-up-vector-is-up" space
				offset.applyQuaternion( quatInverse );

				position.copy( scope.target ).add( offset );

				scope.object.lookAt( scope.target );

				if ( scope.enableDamping === true ) {

					sphericalDelta.theta *= ( 1 - scope.dampingFactor );
					sphericalDelta.phi *= ( 1 - scope.dampingFactor );

					panOffset.multiplyScalar( 1 - scope.dampingFactor );

				} else {

					sphericalDelta.set( 0, 0, 0 );

					panOffset.set( 0, 0, 0 );

				}

				scale = 1;

				// update condition is:
				// min(camera displacement, camera rotation in radians)^2 > EPS
				// using small-angle approximation cos(x/2) = 1 - x^2 / 8

				if ( zoomChanged ||
					lastPosition.distanceToSquared( scope.object.position ) > EPS ||
					8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {

					scope.dispatchEvent( _changeEvent );

					lastPosition.copy( scope.object.position );
					lastQuaternion.copy( scope.object.quaternion );
					zoomChanged = false;

					return true;

				}

				return false;

			};

		}();

		this.dispose = function () {

			scope.domElement.removeEventListener( 'contextmenu', onContextMenu );

			scope.domElement.removeEventListener( 'pointerdown', onPointerDown );
			scope.domElement.removeEventListener( 'pointercancel', onPointerCancel );
			scope.domElement.removeEventListener( 'wheel', onMouseWheel );

			scope.domElement.removeEventListener( 'pointermove', onPointerMove );
			scope.domElement.removeEventListener( 'pointerup', onPointerUp );


			if ( scope._domElementKeyEvents !== null ) {

				scope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );

			}

			//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?

		};

		//
		// internals
		//

		const scope = this;

		const STATE = {
			NONE: - 1,
			ROTATE: 0,
			DOLLY: 1,
			PAN: 2,
			TOUCH_ROTATE: 3,
			TOUCH_PAN: 4,
			TOUCH_DOLLY_PAN: 5,
			TOUCH_DOLLY_ROTATE: 6
		};

		let state = STATE.NONE;

		const EPS = 0.000001;

		// current position in spherical coordinates
		const spherical = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();
		const sphericalDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();

		let scale = 1;
		const panOffset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
		let zoomChanged = false;

		const rotateStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const rotateEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const rotateDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();

		const panStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const panEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const panDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();

		const dollyStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const dollyEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
		const dollyDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();

		const pointers = [];
		const pointerPositions = {};

		function getAutoRotationAngle() {

			return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;

		}

		function getZoomScale() {

			return Math.pow( 0.95, scope.zoomSpeed );

		}

		function rotateLeft( angle ) {

			sphericalDelta.theta -= angle;

		}

		function rotateUp( angle ) {

			sphericalDelta.phi -= angle;

		}

		const panLeft = function () {

			const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

			return function panLeft( distance, objectMatrix ) {

				v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix
				v.multiplyScalar( - distance );

				panOffset.add( v );

			};

		}();

		const panUp = function () {

			const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

			return function panUp( distance, objectMatrix ) {

				if ( scope.screenSpacePanning === true ) {

					v.setFromMatrixColumn( objectMatrix, 1 );

				} else {

					v.setFromMatrixColumn( objectMatrix, 0 );
					v.crossVectors( scope.object.up, v );

				}

				v.multiplyScalar( distance );

				panOffset.add( v );

			};

		}();

		// deltaX and deltaY are in pixels; right and down are positive
		const pan = function () {

			const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

			return function pan( deltaX, deltaY ) {

				const element = scope.domElement;

				if ( scope.object.isPerspectiveCamera ) {

					// perspective
					const position = scope.object.position;
					offset.copy( position ).sub( scope.target );
					let targetDistance = offset.length();

					// half of the fov is center to top of screen
					targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );

					// we use only clientHeight here so aspect ratio does not distort speed
					panLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );
					panUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );

				} else if ( scope.object.isOrthographicCamera ) {

					// orthographic
					panLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );
					panUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );

				} else {

					// camera neither orthographic nor perspective
					console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );
					scope.enablePan = false;

				}

			};

		}();

		function dollyOut( dollyScale ) {

			if ( scope.object.isPerspectiveCamera ) {

				scale /= dollyScale;

			} else if ( scope.object.isOrthographicCamera ) {

				scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );
				scope.object.updateProjectionMatrix();
				zoomChanged = true;

			} else {

				console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
				scope.enableZoom = false;

			}

		}

		function dollyIn( dollyScale ) {

			if ( scope.object.isPerspectiveCamera ) {

				scale *= dollyScale;

			} else if ( scope.object.isOrthographicCamera ) {

				scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );
				scope.object.updateProjectionMatrix();
				zoomChanged = true;

			} else {

				console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
				scope.enableZoom = false;

			}

		}

		//
		// event callbacks - update the object state
		//

		function handleMouseDownRotate( event ) {

			rotateStart.set( event.clientX, event.clientY );

		}

		function handleMouseDownDolly( event ) {

			dollyStart.set( event.clientX, event.clientY );

		}

		function handleMouseDownPan( event ) {

			panStart.set( event.clientX, event.clientY );

		}

		function handleMouseMoveRotate( event ) {

			rotateEnd.set( event.clientX, event.clientY );

			rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );

			const element = scope.domElement;

			rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height

			rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );

			rotateStart.copy( rotateEnd );

			scope.update();

		}

		function handleMouseMoveDolly( event ) {

			dollyEnd.set( event.clientX, event.clientY );

			dollyDelta.subVectors( dollyEnd, dollyStart );

			if ( dollyDelta.y > 0 ) {

				dollyOut( getZoomScale() );

			} else if ( dollyDelta.y < 0 ) {

				dollyIn( getZoomScale() );

			}

			dollyStart.copy( dollyEnd );

			scope.update();

		}

		function handleMouseMovePan( event ) {

			panEnd.set( event.clientX, event.clientY );

			panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );

			pan( panDelta.x, panDelta.y );

			panStart.copy( panEnd );

			scope.update();

		}

		function handleMouseWheel( event ) {

			if ( event.deltaY < 0 ) {

				dollyIn( getZoomScale() );

			} else if ( event.deltaY > 0 ) {

				dollyOut( getZoomScale() );

			}

			scope.update();

		}

		function handleKeyDown( event ) {

			let needsUpdate = false;

			switch ( event.code ) {

				case scope.keys.UP:
					pan( 0, scope.keyPanSpeed );
					needsUpdate = true;
					break;

				case scope.keys.BOTTOM:
					pan( 0, - scope.keyPanSpeed );
					needsUpdate = true;
					break;

				case scope.keys.LEFT:
					pan( scope.keyPanSpeed, 0 );
					needsUpdate = true;
					break;

				case scope.keys.RIGHT:
					pan( - scope.keyPanSpeed, 0 );
					needsUpdate = true;
					break;

			}

			if ( needsUpdate ) {

				// prevent the browser from scrolling on cursor keys
				event.preventDefault();

				scope.update();

			}


		}

		function handleTouchStartRotate() {

			if ( pointers.length === 1 ) {

				rotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );

			} else {

				const x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );
				const y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );

				rotateStart.set( x, y );

			}

		}

		function handleTouchStartPan() {

			if ( pointers.length === 1 ) {

				panStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );

			} else {

				const x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );
				const y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );

				panStart.set( x, y );

			}

		}

		function handleTouchStartDolly() {

			const dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;
			const dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;

			const distance = Math.sqrt( dx * dx + dy * dy );

			dollyStart.set( 0, distance );

		}

		function handleTouchStartDollyPan() {

			if ( scope.enableZoom ) handleTouchStartDolly();

			if ( scope.enablePan ) handleTouchStartPan();

		}

		function handleTouchStartDollyRotate() {

			if ( scope.enableZoom ) handleTouchStartDolly();

			if ( scope.enableRotate ) handleTouchStartRotate();

		}

		function handleTouchMoveRotate( event ) {

			if ( pointers.length == 1 ) {

				rotateEnd.set( event.pageX, event.pageY );

			} else {

				const position = getSecondPointerPosition( event );

				const x = 0.5 * ( event.pageX + position.x );
				const y = 0.5 * ( event.pageY + position.y );

				rotateEnd.set( x, y );

			}

			rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );

			const element = scope.domElement;

			rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height

			rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );

			rotateStart.copy( rotateEnd );

		}

		function handleTouchMovePan( event ) {

			if ( pointers.length === 1 ) {

				panEnd.set( event.pageX, event.pageY );

			} else {

				const position = getSecondPointerPosition( event );

				const x = 0.5 * ( event.pageX + position.x );
				const y = 0.5 * ( event.pageY + position.y );

				panEnd.set( x, y );

			}

			panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );

			pan( panDelta.x, panDelta.y );

			panStart.copy( panEnd );

		}

		function handleTouchMoveDolly( event ) {

			const position = getSecondPointerPosition( event );

			const dx = event.pageX - position.x;
			const dy = event.pageY - position.y;

			const distance = Math.sqrt( dx * dx + dy * dy );

			dollyEnd.set( 0, distance );

			dollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );

			dollyOut( dollyDelta.y );

			dollyStart.copy( dollyEnd );

		}

		function handleTouchMoveDollyPan( event ) {

			if ( scope.enableZoom ) handleTouchMoveDolly( event );

			if ( scope.enablePan ) handleTouchMovePan( event );

		}

		function handleTouchMoveDollyRotate( event ) {

			if ( scope.enableZoom ) handleTouchMoveDolly( event );

			if ( scope.enableRotate ) handleTouchMoveRotate( event );

		}

		//
		// event handlers - FSM: listen for events and reset state
		//

		function onPointerDown( event ) {

			if ( scope.enabled === false ) return;

			if ( pointers.length === 0 ) {

				scope.domElement.setPointerCapture( event.pointerId );

				scope.domElement.addEventListener( 'pointermove', onPointerMove );
				scope.domElement.addEventListener( 'pointerup', onPointerUp );

			}

			//

			addPointer( event );

			if ( event.pointerType === 'touch' ) {

				onTouchStart( event );

			} else {

				onMouseDown( event );

			}

		}

		function onPointerMove( event ) {

			if ( scope.enabled === false ) return;

			if ( event.pointerType === 'touch' ) {

				onTouchMove( event );

			} else {

				onMouseMove( event );

			}

		}

		function onPointerUp( event ) {

		    removePointer( event );

		    if ( pointers.length === 0 ) {

		        scope.domElement.releasePointerCapture( event.pointerId );

		        scope.domElement.removeEventListener( 'pointermove', onPointerMove );
		        scope.domElement.removeEventListener( 'pointerup', onPointerUp );

		    }

		    scope.dispatchEvent( _endEvent );

		    state = STATE.NONE;

		}

		function onPointerCancel( event ) {

			removePointer( event );

		}

		function onMouseDown( event ) {

			let mouseAction;

			switch ( event.button ) {

				case 0:

					mouseAction = scope.mouseButtons.LEFT;
					break;

				case 1:

					mouseAction = scope.mouseButtons.MIDDLE;
					break;

				case 2:

					mouseAction = scope.mouseButtons.RIGHT;
					break;

				default:

					mouseAction = - 1;

			}

			switch ( mouseAction ) {

				case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:

					if ( scope.enableZoom === false ) return;

					handleMouseDownDolly( event );

					state = STATE.DOLLY;

					break;

				case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:

					if ( event.ctrlKey || event.metaKey || event.shiftKey ) {

						if ( scope.enablePan === false ) return;

						handleMouseDownPan( event );

						state = STATE.PAN;

					} else {

						if ( scope.enableRotate === false ) return;

						handleMouseDownRotate( event );

						state = STATE.ROTATE;

					}

					break;

				case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:

					if ( event.ctrlKey || event.metaKey || event.shiftKey ) {

						if ( scope.enableRotate === false ) return;

						handleMouseDownRotate( event );

						state = STATE.ROTATE;

					} else {

						if ( scope.enablePan === false ) return;

						handleMouseDownPan( event );

						state = STATE.PAN;

					}

					break;

				default:

					state = STATE.NONE;

			}

			if ( state !== STATE.NONE ) {

				scope.dispatchEvent( _startEvent );

			}

		}

		function onMouseMove( event ) {

			if ( scope.enabled === false ) return;

			switch ( state ) {

				case STATE.ROTATE:

					if ( scope.enableRotate === false ) return;

					handleMouseMoveRotate( event );

					break;

				case STATE.DOLLY:

					if ( scope.enableZoom === false ) return;

					handleMouseMoveDolly( event );

					break;

				case STATE.PAN:

					if ( scope.enablePan === false ) return;

					handleMouseMovePan( event );

					break;

			}

		}

		function onMouseWheel( event ) {

			if ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;

			event.preventDefault();

			scope.dispatchEvent( _startEvent );

			handleMouseWheel( event );

			scope.dispatchEvent( _endEvent );

		}

		function onKeyDown( event ) {

			if ( scope.enabled === false || scope.enablePan === false ) return;

			handleKeyDown( event );

		}

		function onTouchStart( event ) {

			trackPointer( event );

			switch ( pointers.length ) {

				case 1:

					switch ( scope.touches.ONE ) {

						case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:

							if ( scope.enableRotate === false ) return;

							handleTouchStartRotate();

							state = STATE.TOUCH_ROTATE;

							break;

						case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:

							if ( scope.enablePan === false ) return;

							handleTouchStartPan();

							state = STATE.TOUCH_PAN;

							break;

						default:

							state = STATE.NONE;

					}

					break;

				case 2:

					switch ( scope.touches.TWO ) {

						case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:

							if ( scope.enableZoom === false && scope.enablePan === false ) return;

							handleTouchStartDollyPan();

							state = STATE.TOUCH_DOLLY_PAN;

							break;

						case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:

							if ( scope.enableZoom === false && scope.enableRotate === false ) return;

							handleTouchStartDollyRotate();

							state = STATE.TOUCH_DOLLY_ROTATE;

							break;

						default:

							state = STATE.NONE;

					}

					break;

				default:

					state = STATE.NONE;

			}

			if ( state !== STATE.NONE ) {

				scope.dispatchEvent( _startEvent );

			}

		}

		function onTouchMove( event ) {

			trackPointer( event );

			switch ( state ) {

				case STATE.TOUCH_ROTATE:

					if ( scope.enableRotate === false ) return;

					handleTouchMoveRotate( event );

					scope.update();

					break;

				case STATE.TOUCH_PAN:

					if ( scope.enablePan === false ) return;

					handleTouchMovePan( event );

					scope.update();

					break;

				case STATE.TOUCH_DOLLY_PAN:

					if ( scope.enableZoom === false && scope.enablePan === false ) return;

					handleTouchMoveDollyPan( event );

					scope.update();

					break;

				case STATE.TOUCH_DOLLY_ROTATE:

					if ( scope.enableZoom === false && scope.enableRotate === false ) return;

					handleTouchMoveDollyRotate( event );

					scope.update();

					break;

				default:

					state = STATE.NONE;

			}

		}

		function onContextMenu( event ) {

			if ( scope.enabled === false ) return;

			event.preventDefault();

		}

		function addPointer( event ) {

			pointers.push( event );

		}

		function removePointer( event ) {

			delete pointerPositions[ event.pointerId ];

			for ( let i = 0; i < pointers.length; i ++ ) {

				if ( pointers[ i ].pointerId == event.pointerId ) {

					pointers.splice( i, 1 );
					return;

				}

			}

		}

		function trackPointer( event ) {

			let position = pointerPositions[ event.pointerId ];

			if ( position === undefined ) {

				position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();
				pointerPositions[ event.pointerId ] = position;

			}

			position.set( event.pageX, event.pageY );

		}

		function getSecondPointerPosition( event ) {

			const pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];

			return pointerPositions[ pointer.pointerId ];

		}

		//

		scope.domElement.addEventListener( 'contextmenu', onContextMenu );

		scope.domElement.addEventListener( 'pointerdown', onPointerDown );
		scope.domElement.addEventListener( 'pointercancel', onPointerCancel );
		scope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );

		// force an update at start

		this.update();

	}

}


// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
// This is very similar to OrbitControls, another set of touch behavior
//
//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate
//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish
//    Pan - left mouse, or arrow keys / touch: one-finger move

class MapControls extends OrbitControls {

	constructor( object, domElement ) {

		super( object, domElement );

		this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up

		this.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;
		this.mouseButtons.RIGHT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;

		this.touches.ONE = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;
		this.touches.TWO = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;

	}

}




/***/ }),

/***/ "./node_modules/three/examples/jsm/geometries/ConvexGeometry.js":
/*!**********************************************************************!*\
  !*** ./node_modules/three/examples/jsm/geometries/ConvexGeometry.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConvexGeometry": () => (/* binding */ ConvexGeometry)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/ConvexHull.js */ "./node_modules/three/examples/jsm/math/ConvexHull.js");



class ConvexGeometry extends three__WEBPACK_IMPORTED_MODULE_1__.BufferGeometry {

	constructor( points = [] ) {

		super();

		// buffers

		const vertices = [];
		const normals = [];

		if ( _math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__.ConvexHull === undefined ) {

			console.error( 'THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull' );

		}

		const convexHull = new _math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__.ConvexHull().setFromPoints( points );

		// generate vertices and normals

		const faces = convexHull.faces;

		for ( let i = 0; i < faces.length; i ++ ) {

			const face = faces[ i ];
			let edge = face.edge;

			// we move along a doubly-connected edge list to access all face points (see HalfEdge docs)

			do {

				const point = edge.head().point;

				vertices.push( point.x, point.y, point.z );
				normals.push( face.normal.x, face.normal.y, face.normal.z );

				edge = edge.next;

			} while ( edge !== face.edge );

		}

		// build geometry

		this.setAttribute( 'position', new three__WEBPACK_IMPORTED_MODULE_1__.Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new three__WEBPACK_IMPORTED_MODULE_1__.Float32BufferAttribute( normals, 3 ) );

	}

}




/***/ }),

/***/ "./node_modules/three/examples/jsm/math/ConvexHull.js":
/*!************************************************************!*\
  !*** ./node_modules/three/examples/jsm/math/ConvexHull.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConvexHull": () => (/* binding */ ConvexHull)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");


/**
 * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)
 */

const Visible = 0;
const Deleted = 1;

const _v1 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
const _line3 = new three__WEBPACK_IMPORTED_MODULE_0__.Line3();
const _plane = new three__WEBPACK_IMPORTED_MODULE_0__.Plane();
const _closestPoint = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
const _triangle = new three__WEBPACK_IMPORTED_MODULE_0__.Triangle();

class ConvexHull {

	constructor() {

		this.tolerance = - 1;

		this.faces = []; // the generated faces of the convex hull
		this.newFaces = []; // this array holds the faces that are generated within a single iteration

		// the vertex lists work as follows:
		//
		// let 'a' and 'b' be 'Face' instances
		// let 'v' be points wrapped as instance of 'Vertex'
		//
		//     [v, v, ..., v, v, v, ...]
		//      ^             ^
		//      |             |
		//  a.outside     b.outside
		//
		this.assigned = new VertexList();
		this.unassigned = new VertexList();

		this.vertices = []; 	// vertices of the hull (internal representation of given geometry data)

	}

	setFromPoints( points ) {

		// The algorithm needs at least four points.

		if ( points.length >= 4 ) {

			this.makeEmpty();

			for ( let i = 0, l = points.length; i < l; i ++ ) {

				this.vertices.push( new VertexNode( points[ i ] ) );

			}

			this.compute();

		}

		return this;

	}

	setFromObject( object ) {

		const points = [];

		object.updateMatrixWorld( true );

		object.traverse( function ( node ) {

			const geometry = node.geometry;

			if ( geometry !== undefined ) {

				if ( geometry.isGeometry ) {

					console.error( 'THREE.ConvexHull no longer supports Geometry. Use THREE.BufferGeometry instead.' );
					return;

				} else if ( geometry.isBufferGeometry ) {

					const attribute = geometry.attributes.position;

					if ( attribute !== undefined ) {

						for ( let i = 0, l = attribute.count; i < l; i ++ ) {

							const point = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

							point.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );

							points.push( point );

						}

					}

				}

			}

		} );

		return this.setFromPoints( points );

	}

	containsPoint( point ) {

		const faces = this.faces;

		for ( let i = 0, l = faces.length; i < l; i ++ ) {

			const face = faces[ i ];

			// compute signed distance and check on what half space the point lies

			if ( face.distanceToPoint( point ) > this.tolerance ) return false;

		}

		return true;

	}

	intersectRay( ray, target ) {

		// based on "Fast Ray-Convex Polyhedron Intersection"  by Eric Haines, GRAPHICS GEMS II

		const faces = this.faces;

		let tNear = - Infinity;
		let tFar = Infinity;

		for ( let i = 0, l = faces.length; i < l; i ++ ) {

			const face = faces[ i ];

			// interpret faces as planes for the further computation

			const vN = face.distanceToPoint( ray.origin );
			const vD = face.normal.dot( ray.direction );

			// if the origin is on the positive side of a plane (so the plane can "see" the origin) and
			// the ray is turned away or parallel to the plane, there is no intersection

			if ( vN > 0 && vD >= 0 ) return null;

			// compute the distance from the ray’s origin to the intersection with the plane

			const t = ( vD !== 0 ) ? ( - vN / vD ) : 0;

			// only proceed if the distance is positive. a negative distance means the intersection point
			// lies "behind" the origin

			if ( t <= 0 ) continue;

			// now categorized plane as front-facing or back-facing

			if ( vD > 0 ) {

				//  plane faces away from the ray, so this plane is a back-face

				tFar = Math.min( t, tFar );

			} else {

				// front-face

				tNear = Math.max( t, tNear );

			}

			if ( tNear > tFar ) {

				// if tNear ever is greater than tFar, the ray must miss the convex hull

				return null;

			}

		}

		// evaluate intersection point

		// always try tNear first since its the closer intersection point

		if ( tNear !== - Infinity ) {

			ray.at( tNear, target );

		} else {

			ray.at( tFar, target );

		}

		return target;

	}

	intersectsRay( ray ) {

		return this.intersectRay( ray, _v1 ) !== null;

	}

	makeEmpty() {

		this.faces = [];
		this.vertices = [];

		return this;

	}

	// Adds a vertex to the 'assigned' list of vertices and assigns it to the given face

	addVertexToFace( vertex, face ) {

		vertex.face = face;

		if ( face.outside === null ) {

			this.assigned.append( vertex );

		} else {

			this.assigned.insertBefore( face.outside, vertex );

		}

		face.outside = vertex;

		return this;

	}

	// Removes a vertex from the 'assigned' list of vertices and from the given face

	removeVertexFromFace( vertex, face ) {

		if ( vertex === face.outside ) {

			// fix face.outside link

			if ( vertex.next !== null && vertex.next.face === face ) {

				// face has at least 2 outside vertices, move the 'outside' reference

				face.outside = vertex.next;

			} else {

				// vertex was the only outside vertex that face had

				face.outside = null;

			}

		}

		this.assigned.remove( vertex );

		return this;

	}

	// Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list

	removeAllVerticesFromFace( face ) {

		if ( face.outside !== null ) {

			// reference to the first and last vertex of this face

			const start = face.outside;
			let end = face.outside;

			while ( end.next !== null && end.next.face === face ) {

				end = end.next;

			}

			this.assigned.removeSubList( start, end );

			// fix references

			start.prev = end.next = null;
			face.outside = null;

			return start;

		}

	}

	// Removes all the visible vertices that 'face' is able to see

	deleteFaceVertices( face, absorbingFace ) {

		const faceVertices = this.removeAllVerticesFromFace( face );

		if ( faceVertices !== undefined ) {

			if ( absorbingFace === undefined ) {

				// mark the vertices to be reassigned to some other face

				this.unassigned.appendChain( faceVertices );


			} else {

				// if there's an absorbing face try to assign as many vertices as possible to it

				let vertex = faceVertices;

				do {

					// we need to buffer the subsequent vertex at this point because the 'vertex.next' reference
					// will be changed by upcoming method calls

					const nextVertex = vertex.next;

					const distance = absorbingFace.distanceToPoint( vertex.point );

					// check if 'vertex' is able to see 'absorbingFace'

					if ( distance > this.tolerance ) {

						this.addVertexToFace( vertex, absorbingFace );

					} else {

						this.unassigned.append( vertex );

					}

					// now assign next vertex

					vertex = nextVertex;

				} while ( vertex !== null );

			}

		}

		return this;

	}

	// Reassigns as many vertices as possible from the unassigned list to the new faces

	resolveUnassignedPoints( newFaces ) {

		if ( this.unassigned.isEmpty() === false ) {

			let vertex = this.unassigned.first();

			do {

				// buffer 'next' reference, see .deleteFaceVertices()

				const nextVertex = vertex.next;

				let maxDistance = this.tolerance;

				let maxFace = null;

				for ( let i = 0; i < newFaces.length; i ++ ) {

					const face = newFaces[ i ];

					if ( face.mark === Visible ) {

						const distance = face.distanceToPoint( vertex.point );

						if ( distance > maxDistance ) {

							maxDistance = distance;
							maxFace = face;

						}

						if ( maxDistance > 1000 * this.tolerance ) break;

					}

				}

				// 'maxFace' can be null e.g. if there are identical vertices

				if ( maxFace !== null ) {

					this.addVertexToFace( vertex, maxFace );

				}

				vertex = nextVertex;

			} while ( vertex !== null );

		}

		return this;

	}

	// Computes the extremes of a simplex which will be the initial hull

	computeExtremes() {

		const min = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
		const max = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

		const minVertices = [];
		const maxVertices = [];

		// initially assume that the first vertex is the min/max

		for ( let i = 0; i < 3; i ++ ) {

			minVertices[ i ] = maxVertices[ i ] = this.vertices[ 0 ];

		}

		min.copy( this.vertices[ 0 ].point );
		max.copy( this.vertices[ 0 ].point );

		// compute the min/max vertex on all six directions

		for ( let i = 0, l = this.vertices.length; i < l; i ++ ) {

			const vertex = this.vertices[ i ];
			const point = vertex.point;

			// update the min coordinates

			for ( let j = 0; j < 3; j ++ ) {

				if ( point.getComponent( j ) < min.getComponent( j ) ) {

					min.setComponent( j, point.getComponent( j ) );
					minVertices[ j ] = vertex;

				}

			}

			// update the max coordinates

			for ( let j = 0; j < 3; j ++ ) {

				if ( point.getComponent( j ) > max.getComponent( j ) ) {

					max.setComponent( j, point.getComponent( j ) );
					maxVertices[ j ] = vertex;

				}

			}

		}

		// use min/max vectors to compute an optimal epsilon

		this.tolerance = 3 * Number.EPSILON * (
			Math.max( Math.abs( min.x ), Math.abs( max.x ) ) +
			Math.max( Math.abs( min.y ), Math.abs( max.y ) ) +
			Math.max( Math.abs( min.z ), Math.abs( max.z ) )
		);

		return { min: minVertices, max: maxVertices };

	}

	// Computes the initial simplex assigning to its faces all the points
	// that are candidates to form part of the hull

	computeInitialHull() {

		const vertices = this.vertices;
		const extremes = this.computeExtremes();
		const min = extremes.min;
		const max = extremes.max;

		// 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation
		// (max.x - min.x)
		// (max.y - min.y)
		// (max.z - min.z)

		let maxDistance = 0;
		let index = 0;

		for ( let i = 0; i < 3; i ++ ) {

			const distance = max[ i ].point.getComponent( i ) - min[ i ].point.getComponent( i );

			if ( distance > maxDistance ) {

				maxDistance = distance;
				index = i;

			}

		}

		const v0 = min[ index ];
		const v1 = max[ index ];
		let v2;
		let v3;

		// 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'

		maxDistance = 0;
		_line3.set( v0.point, v1.point );

		for ( let i = 0, l = this.vertices.length; i < l; i ++ ) {

			const vertex = vertices[ i ];

			if ( vertex !== v0 && vertex !== v1 ) {

				_line3.closestPointToPoint( vertex.point, true, _closestPoint );

				const distance = _closestPoint.distanceToSquared( vertex.point );

				if ( distance > maxDistance ) {

					maxDistance = distance;
					v2 = vertex;

				}

			}

		}

		// 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'

		maxDistance = - 1;
		_plane.setFromCoplanarPoints( v0.point, v1.point, v2.point );

		for ( let i = 0, l = this.vertices.length; i < l; i ++ ) {

			const vertex = vertices[ i ];

			if ( vertex !== v0 && vertex !== v1 && vertex !== v2 ) {

				const distance = Math.abs( _plane.distanceToPoint( vertex.point ) );

				if ( distance > maxDistance ) {

					maxDistance = distance;
					v3 = vertex;

				}

			}

		}

		const faces = [];

		if ( _plane.distanceToPoint( v3.point ) < 0 ) {

			// the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron

			faces.push(
				Face.create( v0, v1, v2 ),
				Face.create( v3, v1, v0 ),
				Face.create( v3, v2, v1 ),
				Face.create( v3, v0, v2 )
			);

			// set the twin edge

			for ( let i = 0; i < 3; i ++ ) {

				const j = ( i + 1 ) % 3;

				// join face[ i ] i > 0, with the first face

				faces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( j ) );

				// join face[ i ] with face[ i + 1 ], 1 <= i <= 3

				faces[ i + 1 ].getEdge( 1 ).setTwin( faces[ j + 1 ].getEdge( 0 ) );

			}

		} else {

			// the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron

			faces.push(
				Face.create( v0, v2, v1 ),
				Face.create( v3, v0, v1 ),
				Face.create( v3, v1, v2 ),
				Face.create( v3, v2, v0 )
			);

			// set the twin edge

			for ( let i = 0; i < 3; i ++ ) {

				const j = ( i + 1 ) % 3;

				// join face[ i ] i > 0, with the first face

				faces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( ( 3 - i ) % 3 ) );

				// join face[ i ] with face[ i + 1 ]

				faces[ i + 1 ].getEdge( 0 ).setTwin( faces[ j + 1 ].getEdge( 1 ) );

			}

		}

		// the initial hull is the tetrahedron

		for ( let i = 0; i < 4; i ++ ) {

			this.faces.push( faces[ i ] );

		}

		// initial assignment of vertices to the faces of the tetrahedron

		for ( let i = 0, l = vertices.length; i < l; i ++ ) {

			const vertex = vertices[ i ];

			if ( vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3 ) {

				maxDistance = this.tolerance;
				let maxFace = null;

				for ( let j = 0; j < 4; j ++ ) {

					const distance = this.faces[ j ].distanceToPoint( vertex.point );

					if ( distance > maxDistance ) {

						maxDistance = distance;
						maxFace = this.faces[ j ];

					}

				}

				if ( maxFace !== null ) {

					this.addVertexToFace( vertex, maxFace );

				}

			}

		}

		return this;

	}

	// Removes inactive faces

	reindexFaces() {

		const activeFaces = [];

		for ( let i = 0; i < this.faces.length; i ++ ) {

			const face = this.faces[ i ];

			if ( face.mark === Visible ) {

				activeFaces.push( face );

			}

		}

		this.faces = activeFaces;

		return this;

	}

	// Finds the next vertex to create faces with the current hull

	nextVertexToAdd() {

		// if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'

		if ( this.assigned.isEmpty() === false ) {

			let eyeVertex, maxDistance = 0;

			// grap the first available face and start with the first visible vertex of that face

			const eyeFace = this.assigned.first().face;
			let vertex = eyeFace.outside;

			// now calculate the farthest vertex that face can see

			do {

				const distance = eyeFace.distanceToPoint( vertex.point );

				if ( distance > maxDistance ) {

					maxDistance = distance;
					eyeVertex = vertex;

				}

				vertex = vertex.next;

			} while ( vertex !== null && vertex.face === eyeFace );

			return eyeVertex;

		}

	}

	// Computes a chain of half edges in CCW order called the 'horizon'.
	// For an edge to be part of the horizon it must join a face that can see
	// 'eyePoint' and a face that cannot see 'eyePoint'.

	computeHorizon( eyePoint, crossEdge, face, horizon ) {

		// moves face's vertices to the 'unassigned' vertex list

		this.deleteFaceVertices( face );

		face.mark = Deleted;

		let edge;

		if ( crossEdge === null ) {

			edge = crossEdge = face.getEdge( 0 );

		} else {

			// start from the next edge since 'crossEdge' was already analyzed
			// (actually 'crossEdge.twin' was the edge who called this method recursively)

			edge = crossEdge.next;

		}

		do {

			const twinEdge = edge.twin;
			const oppositeFace = twinEdge.face;

			if ( oppositeFace.mark === Visible ) {

				if ( oppositeFace.distanceToPoint( eyePoint ) > this.tolerance ) {

					// the opposite face can see the vertex, so proceed with next edge

					this.computeHorizon( eyePoint, twinEdge, oppositeFace, horizon );

				} else {

					// the opposite face can't see the vertex, so this edge is part of the horizon

					horizon.push( edge );

				}

			}

			edge = edge.next;

		} while ( edge !== crossEdge );

		return this;

	}

	// Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order

	addAdjoiningFace( eyeVertex, horizonEdge ) {

		// all the half edges are created in ccw order thus the face is always pointing outside the hull

		const face = Face.create( eyeVertex, horizonEdge.tail(), horizonEdge.head() );

		this.faces.push( face );

		// join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )

		face.getEdge( - 1 ).setTwin( horizonEdge.twin );

		return face.getEdge( 0 ); // the half edge whose vertex is the eyeVertex


	}

	//  Adds 'horizon.length' faces to the hull, each face will be linked with the
	//  horizon opposite face and the face on the left/right

	addNewFaces( eyeVertex, horizon ) {

		this.newFaces = [];

		let firstSideEdge = null;
		let previousSideEdge = null;

		for ( let i = 0; i < horizon.length; i ++ ) {

			const horizonEdge = horizon[ i ];

			// returns the right side edge

			const sideEdge = this.addAdjoiningFace( eyeVertex, horizonEdge );

			if ( firstSideEdge === null ) {

				firstSideEdge = sideEdge;

			} else {

				// joins face.getEdge( 1 ) with previousFace.getEdge( 0 )

				sideEdge.next.setTwin( previousSideEdge );

			}

			this.newFaces.push( sideEdge.face );
			previousSideEdge = sideEdge;

		}

		// perform final join of new faces

		firstSideEdge.next.setTwin( previousSideEdge );

		return this;

	}

	// Adds a vertex to the hull

	addVertexToHull( eyeVertex ) {

		const horizon = [];

		this.unassigned.clear();

		// remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list

		this.removeVertexFromFace( eyeVertex, eyeVertex.face );

		this.computeHorizon( eyeVertex.point, null, eyeVertex.face, horizon );

		this.addNewFaces( eyeVertex, horizon );

		// reassign 'unassigned' vertices to the new faces

		this.resolveUnassignedPoints( this.newFaces );

		return	this;

	}

	cleanup() {

		this.assigned.clear();
		this.unassigned.clear();
		this.newFaces = [];

		return this;

	}

	compute() {

		let vertex;

		this.computeInitialHull();

		// add all available vertices gradually to the hull

		while ( ( vertex = this.nextVertexToAdd() ) !== undefined ) {

			this.addVertexToHull( vertex );

		}

		this.reindexFaces();

		this.cleanup();

		return this;

	}

}

//

class Face {

	constructor() {

		this.normal = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
		this.midpoint = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
		this.area = 0;

		this.constant = 0; // signed distance from face to the origin
		this.outside = null; // reference to a vertex in a vertex list this face can see
		this.mark = Visible;
		this.edge = null;

	}

	static create( a, b, c ) {

		const face = new Face();

		const e0 = new HalfEdge( a, face );
		const e1 = new HalfEdge( b, face );
		const e2 = new HalfEdge( c, face );

		// join edges

		e0.next = e2.prev = e1;
		e1.next = e0.prev = e2;
		e2.next = e1.prev = e0;

		// main half edge reference

		face.edge = e0;

		return face.compute();

	}

	getEdge( i ) {

		let edge = this.edge;

		while ( i > 0 ) {

			edge = edge.next;
			i --;

		}

		while ( i < 0 ) {

			edge = edge.prev;
			i ++;

		}

		return edge;

	}

	compute() {

		const a = this.edge.tail();
		const b = this.edge.head();
		const c = this.edge.next.head();

		_triangle.set( a.point, b.point, c.point );

		_triangle.getNormal( this.normal );
		_triangle.getMidpoint( this.midpoint );
		this.area = _triangle.getArea();

		this.constant = this.normal.dot( this.midpoint );

		return this;

	}

	distanceToPoint( point ) {

		return this.normal.dot( point ) - this.constant;

	}

}

// Entity for a Doubly-Connected Edge List (DCEL).

class HalfEdge {


	constructor( vertex, face ) {

		this.vertex = vertex;
		this.prev = null;
		this.next = null;
		this.twin = null;
		this.face = face;

	}

	head() {

		return this.vertex;

	}

	tail() {

		return this.prev ? this.prev.vertex : null;

	}

	length() {

		const head = this.head();
		const tail = this.tail();

		if ( tail !== null ) {

			return tail.point.distanceTo( head.point );

		}

		return - 1;

	}

	lengthSquared() {

		const head = this.head();
		const tail = this.tail();

		if ( tail !== null ) {

			return tail.point.distanceToSquared( head.point );

		}

		return - 1;

	}

	setTwin( edge ) {

		this.twin = edge;
		edge.twin = this;

		return this;

	}

}

// A vertex as a double linked list node.

class VertexNode {

	constructor( point ) {

		this.point = point;
		this.prev = null;
		this.next = null;
		this.face = null; // the face that is able to see this vertex

	}

}

// A double linked list that contains vertex nodes.

class VertexList {

	constructor() {

		this.head = null;
		this.tail = null;

	}

	first() {

		return this.head;

	}

	last() {

		return this.tail;

	}

	clear() {

		this.head = this.tail = null;

		return this;

	}

	// Inserts a vertex before the target vertex

	insertBefore( target, vertex ) {

		vertex.prev = target.prev;
		vertex.next = target;

		if ( vertex.prev === null ) {

			this.head = vertex;

		} else {

			vertex.prev.next = vertex;

		}

		target.prev = vertex;

		return this;

	}

	// Inserts a vertex after the target vertex

	insertAfter( target, vertex ) {

		vertex.prev = target;
		vertex.next = target.next;

		if ( vertex.next === null ) {

			this.tail = vertex;

		} else {

			vertex.next.prev = vertex;

		}

		target.next = vertex;

		return this;

	}

	// Appends a vertex to the end of the linked list

	append( vertex ) {

		if ( this.head === null ) {

			this.head = vertex;

		} else {

			this.tail.next = vertex;

		}

		vertex.prev = this.tail;
		vertex.next = null; // the tail has no subsequent vertex

		this.tail = vertex;

		return this;

	}

	// Appends a chain of vertices where 'vertex' is the head.

	appendChain( vertex ) {

		if ( this.head === null ) {

			this.head = vertex;

		} else {

			this.tail.next = vertex;

		}

		vertex.prev = this.tail;

		// ensure that the 'tail' reference points to the last vertex of the chain

		while ( vertex.next !== null ) {

			vertex = vertex.next;

		}

		this.tail = vertex;

		return this;

	}

	// Removes a vertex from the linked list

	remove( vertex ) {

		if ( vertex.prev === null ) {

			this.head = vertex.next;

		} else {

			vertex.prev.next = vertex.next;

		}

		if ( vertex.next === null ) {

			this.tail = vertex.prev;

		} else {

			vertex.next.prev = vertex.prev;

		}

		return this;

	}

	// Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b

	removeSubList( a, b ) {

		if ( a.prev === null ) {

			this.head = b.next;

		} else {

			a.prev.next = b.next;

		}

		if ( b.next === null ) {

			this.tail = a.prev;

		} else {

			b.next.prev = a.prev;

		}

		return this;

	}

	isEmpty() {

		return this.head === null;

	}

}




/***/ }),

/***/ "./node_modules/three/examples/jsm/misc/ConvexObjectBreaker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/three/examples/jsm/misc/ConvexObjectBreaker.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConvexObjectBreaker": () => (/* binding */ ConvexObjectBreaker)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometries/ConvexGeometry.js */ "./node_modules/three/examples/jsm/geometries/ConvexGeometry.js");



/**
 * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.
 *
 * Usage:
 *
 * Use the function prepareBreakableObject to prepare a Mesh object to be broken.
 *
 * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)
 *
 * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.
 *
 * Requisites for the object:
 *
 *  - Mesh object must have a BufferGeometry (not Geometry) and a Material
 *
 *  - Vertex normals must be planar (not smoothed)
 *
 *  - The geometry must be convex (this is not checked in the library). You can create convex
 *  geometries with ConvexGeometry. The BoxGeometry, SphereGeometry and other convex primitives
 *  can also be used.
 *
 * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)
 * Use with caution and read the code when using with other libs.
 *
 * @param {double} minSizeForBreak Min size a debris can have to break.
 * @param {double} smallDelta Max distance to consider that a point belongs to a plane.
 *
*/

const _v1 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();

class ConvexObjectBreaker {

	constructor( minSizeForBreak = 1.4, smallDelta = 0.0001 ) {

		this.minSizeForBreak = minSizeForBreak;
		this.smallDelta = smallDelta;

		this.tempLine1 = new three__WEBPACK_IMPORTED_MODULE_1__.Line3();
		this.tempPlane1 = new three__WEBPACK_IMPORTED_MODULE_1__.Plane();
		this.tempPlane2 = new three__WEBPACK_IMPORTED_MODULE_1__.Plane();
		this.tempPlane_Cut = new three__WEBPACK_IMPORTED_MODULE_1__.Plane();
		this.tempCM1 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempCM2 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_2 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_3 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_P0 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_P1 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_P2 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_N0 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_N1 = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_AB = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempVector3_CB = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
		this.tempResultObjects = { object1: null, object2: null };

		this.segments = [];
		const n = 30 * 30;
		for ( let i = 0; i < n; i ++ ) this.segments[ i ] = false;

	}

	prepareBreakableObject( object, mass, velocity, angularVelocity, breakable ) {

		// object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.
		// Its material property is propagated to its children (sub-pieces)
		// mass must be > 0

		if ( ! object.geometry.isBufferGeometry ) {

			console.error( 'THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.' );

		}

		const userData = object.userData;
		userData.mass = mass;
		userData.velocity = velocity.clone();
		userData.angularVelocity = angularVelocity.clone();
		userData.breakable = breakable;

	}

	/*
	 * @param {int} maxRadialIterations Iterations for radial cuts.
	 * @param {int} maxRandomIterations Max random iterations for not-radial cuts
	 *
	 * Returns the array of pieces
	 */
	subdivideByImpact( object, pointOfImpact, normal, maxRadialIterations, maxRandomIterations ) {

		const debris = [];

		const tempPlane1 = this.tempPlane1;
		const tempPlane2 = this.tempPlane2;

		this.tempVector3.addVectors( pointOfImpact, normal );
		tempPlane1.setFromCoplanarPoints( pointOfImpact, object.position, this.tempVector3 );

		const maxTotalIterations = maxRandomIterations + maxRadialIterations;

		const scope = this;

		function subdivideRadial( subObject, startAngle, endAngle, numIterations ) {

			if ( Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations ) {

				debris.push( subObject );

				return;

			}

			let angle = Math.PI;

			if ( numIterations === 0 ) {

				tempPlane2.normal.copy( tempPlane1.normal );
				tempPlane2.constant = tempPlane1.constant;

			} else {

				if ( numIterations <= maxRadialIterations ) {

					angle = ( endAngle - startAngle ) * ( 0.2 + 0.6 * Math.random() ) + startAngle;

					// Rotate tempPlane2 at impact point around normal axis and the angle
					scope.tempVector3_2.copy( object.position ).sub( pointOfImpact ).applyAxisAngle( normal, angle ).add( pointOfImpact );
					tempPlane2.setFromCoplanarPoints( pointOfImpact, scope.tempVector3, scope.tempVector3_2 );

				} else {

					angle = ( ( 0.5 * ( numIterations & 1 ) ) + 0.2 * ( 2 - Math.random() ) ) * Math.PI;

					// Rotate tempPlane2 at object position around normal axis and the angle
					scope.tempVector3_2.copy( pointOfImpact ).sub( subObject.position ).applyAxisAngle( normal, angle ).add( subObject.position );
					scope.tempVector3_3.copy( normal ).add( subObject.position );
					tempPlane2.setFromCoplanarPoints( subObject.position, scope.tempVector3_3, scope.tempVector3_2 );

				}

			}

			// Perform the cut
			scope.cutByPlane( subObject, tempPlane2, scope.tempResultObjects );

			const obj1 = scope.tempResultObjects.object1;
			const obj2 = scope.tempResultObjects.object2;

			if ( obj1 ) {

				subdivideRadial( obj1, startAngle, angle, numIterations + 1 );

			}

			if ( obj2 ) {

				subdivideRadial( obj2, angle, endAngle, numIterations + 1 );

			}

		}

		subdivideRadial( object, 0, 2 * Math.PI, 0 );

		return debris;

	}

	cutByPlane( object, plane, output ) {

		// Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.
		// object2 can be null if the plane doesn't cut the object.
		// object1 can be null only in case of internal error
		// Returned value is number of pieces, 0 for error.

		const geometry = object.geometry;
		const coords = geometry.attributes.position.array;
		const normals = geometry.attributes.normal.array;

		const numPoints = coords.length / 3;
		let numFaces = numPoints / 3;

		let indices = geometry.getIndex();

		if ( indices ) {

			indices = indices.array;
			numFaces = indices.length / 3;

		}

		function getVertexIndex( faceIdx, vert ) {

			// vert = 0, 1 or 2.

			const idx = faceIdx * 3 + vert;

			return indices ? indices[ idx ] : idx;

		}

		const points1 = [];
		const points2 = [];

		const delta = this.smallDelta;

		// Reset segments mark
		const numPointPairs = numPoints * numPoints;
		for ( let i = 0; i < numPointPairs; i ++ ) this.segments[ i ] = false;

		const p0 = this.tempVector3_P0;
		const p1 = this.tempVector3_P1;
		const n0 = this.tempVector3_N0;
		const n1 = this.tempVector3_N1;

		// Iterate through the faces to mark edges shared by coplanar faces
		for ( let i = 0; i < numFaces - 1; i ++ ) {

			const a1 = getVertexIndex( i, 0 );
			const b1 = getVertexIndex( i, 1 );
			const c1 = getVertexIndex( i, 2 );

			// Assuming all 3 vertices have the same normal
			n0.set( normals[ a1 ], normals[ a1 ] + 1, normals[ a1 ] + 2 );

			for ( let j = i + 1; j < numFaces; j ++ ) {

				const a2 = getVertexIndex( j, 0 );
				const b2 = getVertexIndex( j, 1 );
				const c2 = getVertexIndex( j, 2 );

				// Assuming all 3 vertices have the same normal
				n1.set( normals[ a2 ], normals[ a2 ] + 1, normals[ a2 ] + 2 );

				const coplanar = 1 - n0.dot( n1 ) < delta;

				if ( coplanar ) {

					if ( a1 === a2 || a1 === b2 || a1 === c2 ) {

						if ( b1 === a2 || b1 === b2 || b1 === c2 ) {

							this.segments[ a1 * numPoints + b1 ] = true;
							this.segments[ b1 * numPoints + a1 ] = true;

						}	else {

							this.segments[ c1 * numPoints + a1 ] = true;
							this.segments[ a1 * numPoints + c1 ] = true;

						}

					}	else if ( b1 === a2 || b1 === b2 || b1 === c2 ) {

						this.segments[ c1 * numPoints + b1 ] = true;
						this.segments[ b1 * numPoints + c1 ] = true;

					}

				}

			}

		}

		// Transform the plane to object local space
		const localPlane = this.tempPlane_Cut;
		object.updateMatrix();
		ConvexObjectBreaker.transformPlaneToLocalSpace( plane, object.matrix, localPlane );

		// Iterate through the faces adding points to both pieces
		for ( let i = 0; i < numFaces; i ++ ) {

			const va = getVertexIndex( i, 0 );
			const vb = getVertexIndex( i, 1 );
			const vc = getVertexIndex( i, 2 );

			for ( let segment = 0; segment < 3; segment ++ ) {

				const i0 = segment === 0 ? va : ( segment === 1 ? vb : vc );
				const i1 = segment === 0 ? vb : ( segment === 1 ? vc : va );

				const segmentState = this.segments[ i0 * numPoints + i1 ];

				if ( segmentState ) continue; // The segment already has been processed in another face

				// Mark segment as processed (also inverted segment)
				this.segments[ i0 * numPoints + i1 ] = true;
				this.segments[ i1 * numPoints + i0 ] = true;

				p0.set( coords[ 3 * i0 ], coords[ 3 * i0 + 1 ], coords[ 3 * i0 + 2 ] );
				p1.set( coords[ 3 * i1 ], coords[ 3 * i1 + 1 ], coords[ 3 * i1 + 2 ] );

				// mark: 1 for negative side, 2 for positive side, 3 for coplanar point
				let mark0 = 0;

				let d = localPlane.distanceToPoint( p0 );

				if ( d > delta ) {

					mark0 = 2;
					points2.push( p0.clone() );

				} else if ( d < - delta ) {

					mark0 = 1;
					points1.push( p0.clone() );

				} else {

					mark0 = 3;
					points1.push( p0.clone() );
					points2.push( p0.clone() );

				}

				// mark: 1 for negative side, 2 for positive side, 3 for coplanar point
				let mark1 = 0;

				d = localPlane.distanceToPoint( p1 );

				if ( d > delta ) {

					mark1 = 2;
					points2.push( p1.clone() );

				} else if ( d < - delta ) {

					mark1 = 1;
					points1.push( p1.clone() );

				}	else {

					mark1 = 3;
					points1.push( p1.clone() );
					points2.push( p1.clone() );

				}

				if ( ( mark0 === 1 && mark1 === 2 ) || ( mark0 === 2 && mark1 === 1 ) ) {

					// Intersection of segment with the plane

					this.tempLine1.start.copy( p0 );
					this.tempLine1.end.copy( p1 );

					let intersection = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3();
					intersection = localPlane.intersectLine( this.tempLine1, intersection );

					if ( intersection === null ) {

						// Shouldn't happen
						console.error( 'Internal error: segment does not intersect plane.' );
						output.segmentedObject1 = null;
						output.segmentedObject2 = null;
						return 0;

					}

					points1.push( intersection );
					points2.push( intersection.clone() );

				}

			}

		}

		// Calculate debris mass (very fast and imprecise):
		const newMass = object.userData.mass * 0.5;

		// Calculate debris Center of Mass (again fast and imprecise)
		this.tempCM1.set( 0, 0, 0 );
		let radius1 = 0;
		const numPoints1 = points1.length;

		if ( numPoints1 > 0 ) {

			for ( let i = 0; i < numPoints1; i ++ ) this.tempCM1.add( points1[ i ] );

			this.tempCM1.divideScalar( numPoints1 );
			for ( let i = 0; i < numPoints1; i ++ ) {

				const p = points1[ i ];
				p.sub( this.tempCM1 );
				radius1 = Math.max( radius1, p.x, p.y, p.z );

			}

			this.tempCM1.add( object.position );

		}

		this.tempCM2.set( 0, 0, 0 );
		let radius2 = 0;
		const numPoints2 = points2.length;
		if ( numPoints2 > 0 ) {

			for ( let i = 0; i < numPoints2; i ++ ) this.tempCM2.add( points2[ i ] );

			this.tempCM2.divideScalar( numPoints2 );
			for ( let i = 0; i < numPoints2; i ++ ) {

				const p = points2[ i ];
				p.sub( this.tempCM2 );
				radius2 = Math.max( radius2, p.x, p.y, p.z );

			}

			this.tempCM2.add( object.position );

		}

		let object1 = null;
		let object2 = null;

		let numObjects = 0;

		if ( numPoints1 > 4 ) {

			object1 = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh( new _geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ConvexGeometry( points1 ), object.material );
			object1.position.copy( this.tempCM1 );
			object1.quaternion.copy( object.quaternion );

			this.prepareBreakableObject( object1, newMass, object.userData.velocity, object.userData.angularVelocity, 2 * radius1 > this.minSizeForBreak );

			numObjects ++;

		}

		if ( numPoints2 > 4 ) {

			object2 = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh( new _geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_0__.ConvexGeometry( points2 ), object.material );
			object2.position.copy( this.tempCM2 );
			object2.quaternion.copy( object.quaternion );

			this.prepareBreakableObject( object2, newMass, object.userData.velocity, object.userData.angularVelocity, 2 * radius2 > this.minSizeForBreak );

			numObjects ++;

		}

		output.object1 = object1;
		output.object2 = object2;

		return numObjects;

	}

	static transformFreeVector( v, m ) {

		// input:
		// vector interpreted as a free vector
		// THREE.Matrix4 orthogonal matrix (matrix without scale)

		const x = v.x, y = v.y, z = v.z;
		const e = m.elements;

		v.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;
		v.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;
		v.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;

		return v;

	}

	static transformFreeVectorInverse( v, m ) {

		// input:
		// vector interpreted as a free vector
		// THREE.Matrix4 orthogonal matrix (matrix without scale)

		const x = v.x, y = v.y, z = v.z;
		const e = m.elements;

		v.x = e[ 0 ] * x + e[ 1 ] * y + e[ 2 ] * z;
		v.y = e[ 4 ] * x + e[ 5 ] * y + e[ 6 ] * z;
		v.z = e[ 8 ] * x + e[ 9 ] * y + e[ 10 ] * z;

		return v;

	}

	static transformTiedVectorInverse( v, m ) {

		// input:
		// vector interpreted as a tied (ordinary) vector
		// THREE.Matrix4 orthogonal matrix (matrix without scale)

		const x = v.x, y = v.y, z = v.z;
		const e = m.elements;

		v.x = e[ 0 ] * x + e[ 1 ] * y + e[ 2 ] * z - e[ 12 ];
		v.y = e[ 4 ] * x + e[ 5 ] * y + e[ 6 ] * z - e[ 13 ];
		v.z = e[ 8 ] * x + e[ 9 ] * y + e[ 10 ] * z - e[ 14 ];

		return v;

	}

	static transformPlaneToLocalSpace( plane, m, resultPlane ) {

		resultPlane.normal.copy( plane.normal );
		resultPlane.constant = plane.constant;

		const referencePoint = ConvexObjectBreaker.transformTiedVectorInverse( plane.coplanarPoint( _v1 ), m );

		ConvexObjectBreaker.transformFreeVectorInverse( resultPlane.normal, m );

		// recalculate constant (like in setFromNormalAndCoplanarPoint)
		resultPlane.constant = - referencePoint.dot( resultPlane.normal );

	}

}




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var __webpack_exports__ = {};
/*!**************************************************************************!*\
  !*** ./node_modules/error-overlay-webpack-plugin/dist/entries/basic.mjs ***!
  \**************************************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react_error_overlay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-error-overlay */ "./node_modules/react-error-overlay/lib/index.js");
/* harmony import */ var react_dev_utils_launchEditorEndpoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dev-utils/launchEditorEndpoint.js */ "./node_modules/react-dev-utils/launchEditorEndpoint.js");
/* eslint-disable */



(0,react_error_overlay__WEBPACK_IMPORTED_MODULE_1__.setEditorHandler)((errorLocation) => {
  // Keep this sync with errorOverlayMiddleware.js
  fetch(
    react_dev_utils_launchEditorEndpoint_js__WEBPACK_IMPORTED_MODULE_0__ +
      '?fileName=' +
      window.encodeURIComponent(errorLocation.fileName) +
      '&lineNumber=' +
      window.encodeURIComponent(errorLocation.lineNumber || 1) +
      '&colNumber=' +
      window.encodeURIComponent(errorLocation.colNumber || 1),
  )
})

;(0,react_error_overlay__WEBPACK_IMPORTED_MODULE_1__.startReportingRuntimeErrors)({})

})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var __webpack_exports__ = {};
/*!********************************************************************************************!*\
  !*** ./node_modules/error-overlay-webpack-plugin/dist/entries/devserver.mjs?&sockPath=/ws ***!
  \********************************************************************************************/
var __resourceQuery = "?&sockPath=/ws";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! querystring */ "./node_modules/querystring/index.js");
/* harmony import */ var sockjs_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sockjs-client */ "./node_modules/sockjs-client/lib/entry.js");
/* harmony import */ var react_dev_utils_formatWebpackMessages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dev-utils/formatWebpackMessages.js */ "./node_modules/react-dev-utils/formatWebpackMessages.js");
/* harmony import */ var react_error_overlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-error-overlay */ "./node_modules/react-error-overlay/lib/index.js");
/* global __resourceQuery */






let sockOptions = {}
if (true) {
  sockOptions = querystring__WEBPACK_IMPORTED_MODULE_0__.parse(__resourceQuery.substr(1))
}

const connection = new sockjs_client__WEBPACK_IMPORTED_MODULE_1__(
  `${window.location.protocol}//${
    sockOptions.sockHost || window.location.hostname
  }:${sockOptions.sockPort || window.location.port}${
    sockOptions.sockPath || '/sockjs-node'
  }`,
)

connection.onmessage = function onmessage(e) {
  const { type, data } = JSON.parse(e.data)
  let formatted
  switch (type) {
    case 'ok':
      ;(0,react_error_overlay__WEBPACK_IMPORTED_MODULE_3__.dismissBuildError)()
      break
    case 'errors':
      formatted = react_dev_utils_formatWebpackMessages_js__WEBPACK_IMPORTED_MODULE_2__({
        errors: data,
        warnings: [],
      })
      ;(0,react_error_overlay__WEBPACK_IMPORTED_MODULE_3__.reportBuildError)(formatted.errors[0])
      break
    default:
    // Do nothing.
  }
}

})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Three */ "./src/Three.js");
/* harmony import */ var _Ammo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ammo */ "./src/Ammo.js");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");






class World {
    Three; Ammo;
    rigidBody_List = [];
    clocks;
    async init() {

        let initThreePromise = new Promise((resolve) => {
            this.Three = new _Three__WEBPACK_IMPORTED_MODULE_0__["default"](resolve);

        })
        await initThreePromise
        let initAmmoPromise = new Promise((resolve) => {
            this.Ammo = new _Ammo__WEBPACK_IMPORTED_MODULE_1__["default"](resolve, this.Three.scene, this.rigidBody_List);

        })

        await initAmmoPromise

        this.clocks = Date.now()
        console.log('ALL INITIALIZED');

        // document.body.onclick = () => { document.body.requestPointerLock() }


        this.blocksWallScene()

        this.render()
    }



    render() {
        try {
            let now = Date.now()

            let deltaTime = now - this.clocks
            this.clocks = now

            this.Ammo.updatePhysicsUniverse(deltaTime, this.rigidBody_List);

            this.Three.render(deltaTime);

            requestAnimationFrame(this.render.bind(this));
        } catch (e) {
            console.log({ e });
            requestAnimationFrame(this.render.bind(this));
        }

    }

    createCube(scale, position, mass, color, rot_quaternion) {

        let quaternion = undefined;
        if (rot_quaternion == null) {
            quaternion = { x: 0, y: 0, z: 0, w: 1 };
        }
        else {
            quaternion = rot_quaternion;
        }

        let newcube = this.Three.createCube({ scale, position, color, mass, quaternion });
        // this.rigidBody_List.push(newcube);
        this.Ammo.createCube({ scale, position, mass, quaternion, newcube });

        return newcube;
    }

    createBall(radius, position, mass, color, rot_quaternion, velocity = { x: 0, y: 0, z: 0 }) {

        let quaternion = undefined;
        if (rot_quaternion == null) {
            quaternion = { x: 0, y: 0, z: 0, w: 1 };
        }
        else {
            quaternion = rot_quaternion;
        }

        let newball = this.Three.createBall({ radius, position, color });
        // this.rigidBody_List.push(newball);
        this.Ammo.createBall({ radius, position, mass, quaternion, newball, velocity });

        return newball;
    }

    createJointObjects() {
        let pos1 = [15, 50, -1]
        let pos2 = [15, 45, -1]

        let radius = 2;
        let scale = [5, 2, 2];
        // let quat = {x: 0, y: 0, z: 0, w: 1};
        let mass1 = 1;
        let mass2 = 1;


        let body1 = this.createCube(scale, pos1, mass1, 0xc0392b, null)
        let body2 = this.createBall(radius, pos2, mass2, 0xc0392b, null)

        let blockPivot = [- scale[0] * 0.5, 1, 1]
        let spherePivot = [radius, 0, 0]
        this.Ammo.createJoin(body1.userData.physicsBody, body2.userData.physicsBody, blockPivot, spherePivot)



    }


    blocksWallScene() {

        // floor
        this.createCube([50, 2, 90], [15, -5, 30], 0, 0x2c3e50, null)

        //trampline

        this.createCube([8, 1, 15], [15, 0, 0], 0, 0xffffff, { x: 0.383, y: 0, z: 0, w: 0.924 });


        // wall of blocks

        for (let z = 30; z > 10; z -= 7) {
            for (let j = 0; j <= 22; j += 7.1) {
                for (let i = 6; i < 21 + 6; i += 7.1) {
                    this.createCube([7, 7, 7], [i, j, z], 100, '#' + ((1 << 24) * Math.random() | 0).toString(16), null);

                }
            }
        }

        // this.createJointObjects()

        document.addEventListener('dblclick', (e) => { this.troughBall(e) })
        let btn = document.getElementById('btnShoot')
        btn.addEventListener('click',  (e) => { this.troughBall(e)})
        // follenBall (to fall press space)
        document.addEventListener('keydown', (e) => {
            if (e.code === 'Space') {
                this.createBall(1, [15, 100, 21], 100, 0xc0392b, null);
            }
        })
    }
    troughBall() {
        let scalarVelocity = 100;
        let velocity = (new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, -1))
        // .copy(this.Three.controls.camera.rotation)
        let pos = (new three__WEBPACK_IMPORTED_MODULE_2__.Vector3).copy(this.Three.controls.camera.position)
        let q = new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion()

        q.copy(this.Three.controls.camera.quaternion)

        velocity.applyQuaternion(q)

        velocity.multiplyScalar(scalarVelocity)

        this.createBall(0.1, [pos.x, pos.y, pos.z], 100, 0xc0392b, null, velocity);

    }
    cubesFall() {
        this.createCube([600, 600, 600], [0, -300, 0], 0);
        setInterval(() => {
            let scale = Math.random() * 10
            this.createCube([scale, scale, scale], [Math.random() * 10, 200, Math.random() * 10], scale * scale * scale * 0.01)

        }, 1000)
    }
}

(new World()).init()
})();

/******/ })()
;
//# sourceMappingURL=bundle.js.map